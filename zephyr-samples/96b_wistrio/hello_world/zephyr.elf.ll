; ModuleID = 'build/96b_wistrio/hello_world/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7m-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %union.anon.1 }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.gpio_dt_spec = type { %struct.device*, i8, i16 }
%struct.stm32_exti_data = type { [16 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %union.anon.1, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %union.anon.1, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %union.anon.1, %union.anon.1 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, %union.anon.1, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %union.anon.1*, %union.anon.1* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.RCC_PLLInitTypeDef }
%struct.RCC_PLLInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [45 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [45 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134229480 to i8*), void (i8*)* inttoptr (i32 134227711 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134229480 to i8*), void (i8*)* inttoptr (i32 134227701 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134229480 to i8*), void (i8*)* inttoptr (i32 134227691 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134229480 to i8*), void (i8*)* inttoptr (i32 134227681 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134229480 to i8*), void (i8*)* inttoptr (i32 134227671 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134229480 to i8*), void (i8*)* inttoptr (i32 134227661 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134229480 to i8*), void (i8*)* inttoptr (i32 134227651 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@.str = private unnamed_addr constant [17 x i8] c"Hello World! %s\0A\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"96b_wistrio\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !25
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [32 x i8*] [i8* bitcast (%struct.init_entry* @__init_stm32l1_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.init_entry* @__init_rf_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_32 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_9 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_14 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_15 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_17 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_53 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_54 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_59 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_14 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_15 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_17 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_53 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_54 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_59 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_stm32l1_init = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32l1_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !109
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !179
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %union.anon.1 { i32 101384192 } }], align 4, !dbg !208
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !216
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !362
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !398
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i32 0, i32 0), %union.anon.1 { i32 117571616 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.29, i32 0, i32 0), %union.anon.1 { i32 285933596 } }], align 4, !dbg !408
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !413
@.str.28 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.29 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@__init_rf_init = internal constant %struct.init_entry { i32 (%struct.device*)* @rf_init, %struct.device* null }, section ".z_init_POST_KERNEL50_", align 4, !dbg !433
@__const.rf_init.rf1 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_14, i8 4, i16 16 }, align 8
@__const.rf_init.rf2 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 6, i16 16 }, align 8
@__const.rf_init.rf3 = private unnamed_addr constant %struct.gpio_dt_spec { %struct.device* @__device_dts_ord_15, i8 7, i16 16 }, align 8
@exti_irq_table = internal unnamed_addr constant [16 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40], align 4, !dbg !541
@__devicehdl_dts_ord_32 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !694
@.str.31 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40010400\00", align 1
@__devstate_dts_ord_32 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !663
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !646
@__device_dts_ord_32 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.31, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_32, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_32, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !619
@__init___device_dts_ord_32 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_32 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !635
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !665
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !679
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !681
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !683
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !685
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !687
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_32 to i8*) }, section ".intList", align 4, !dbg !689
@__devicehdl_dts_ord_9 = dso_local constant [11 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 32767], section ".__device_handles_pass2", align 2, !dbg !699
@.str.33 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !724
@__devstate_dts_ord_9 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !801
@__init___device_dts_ord_9 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_9 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !790
@switch.table.enabled_clock = private unnamed_addr constant [4 x i32] [i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !842
@__devicehdl_dts_ord_14 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !715
@.str.44 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 28, i32 1 } }, align 4, !dbg !908
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1155
@__devstate_dts_ord_14 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1133
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1119
@__init___device_dts_ord_14 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_14 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1067
@__devicehdl_dts_ord_15 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !713
@.str.1.47 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 28, i32 2 } }, align 4, !dbg !1157
@__devstate_dts_ord_15 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1137
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1135
@__init___device_dts_ord_15 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_15 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1084
@__devicehdl_dts_ord_59 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !711
@.str.2 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 28, i32 4 } }, align 4, !dbg !1170
@__devstate_dts_ord_59 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1141
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1139
@__init___device_dts_ord_59 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_59 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1093
@__devicehdl_dts_ord_53 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !709
@.str.3 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 28, i32 8 } }, align 4, !dbg !1172
@__devstate_dts_ord_53 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1145
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1143
@__init___device_dts_ord_53 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_53 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1102
@__devicehdl_dts_ord_54 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !707
@.str.4 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 28, i32 16 } }, align 4, !dbg !1174
@__devstate_dts_ord_54 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1149
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1147
@__init___device_dts_ord_54 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_54 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1108
@__devicehdl_dts_ord_17 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !705
@.str.5.48 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %union.anon.1 { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 7, %struct._thread_arch { i32 28, i32 32 } }, align 4, !dbg !1176
@__devstate_dts_ord_17 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1153
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1151
@__init___device_dts_ord_17 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_17 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1117
@__devicehdl_dts_ord_36 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !719
@.str.52 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_36 }, align 4, !dbg !1178
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1375
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1334
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1377
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.52, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1319
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1321
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !717
@.str.1.55 = private unnamed_addr constant [16 x i8] c"serial@40013800\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073821696 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1384
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1336
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1409
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.55, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1330
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1332
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 36, i32 131072 }], align 4, !dbg !1338
@__pinctrl_dev_config__device_dts_ord_36 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_36, i32 0, i32 0), i8 1 }, align 4, !dbg !1346
@__pinctrl_states__device_dts_ord_36 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_36, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1369
@__pinctrl_state_pins_0__device_dts_ord_36 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 71, i32 512 }, %struct._thread_arch { i32 103, i32 0 }], align 4, !dbg !1372
@__device_dts_ord_9 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_9, i8* null, i16* getelementptr inbounds ([11 x i16], [11 x i16]* @__devicehdl_dts_ord_9, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !774
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 32, i32 16384 }], align 4, !dbg !1401
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1403
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1405
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1407
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1411
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1522
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1524
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1520
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1491
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_14, %struct.device* @__device_dts_ord_15, %struct.device* @__device_dts_ord_59, %struct.device* @__device_dts_ord_53, %struct.device* @__device_dts_ord_54, %struct.device* null, %struct.device* null, %struct.device* @__device_dts_ord_17, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1526
@__device_dts_ord_14 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.44, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_14, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_14, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1065
@__device_dts_ord_15 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.47, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_15, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_15, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1082
@__device_dts_ord_59 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_59, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_59, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1091
@__device_dts_ord_53 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_53, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_53, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1100
@__device_dts_ord_54 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_54, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_54, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1106
@__device_dts_ord_17 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.48, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_17, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_17, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1115
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1613
@SystemCoreClock = dso_local local_unnamed_addr global i32 2097000, align 4, !dbg !1637
@PLLMulTable = dso_local local_unnamed_addr constant [9 x i8] c"\03\04\06\08\0C\10\18 0", align 1, !dbg !1640
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1644
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1648
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1655
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !1865
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !1874
@z_idle_stacks = internal global [1 x [320 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !1881
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !1886
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.104 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.106, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.107, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.108, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.109, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.110, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0)], align 4, !dbg !1912
@.str.105 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.106 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.107 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.108 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.109 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.110 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2026
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2039
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2147
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2150
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2152
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1879
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !1876
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2154
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2190
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1743
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2188
@.str.163 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !2728 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !2732, !srcloc !2733
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !2734, !srcloc !2735
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !2736, !srcloc !2737
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !2738, !srcloc !2739
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2740, !srcloc !2741
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !2742, !srcloc !2743
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !2744, !srcloc !2745
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !2746, !srcloc !2747
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !2748, !srcloc !2749
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !2750, !srcloc !2751
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !2752, !srcloc !2753
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !2754, !srcloc !2755
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !2756, !srcloc !2757
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !2758, !srcloc !2759
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !2760, !srcloc !2761
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !2762, !srcloc !2763
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !2764, !srcloc !2765
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #23, !dbg !2766, !srcloc !2767
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2768, !srcloc !2769
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !2770, !srcloc !2771
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #23, !dbg !2772, !srcloc !2773
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2774, !srcloc !2775
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !2776, !srcloc !2777
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !2778, !srcloc !2779
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !2780, !srcloc !2781
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !2782, !srcloc !2783
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !2784, !srcloc !2785
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !2786, !srcloc !2789
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !2790, !srcloc !2791
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2792, !srcloc !2793
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2794, !srcloc !2795
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2796, !srcloc !2797
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2798, !srcloc !2799
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !2800, !srcloc !2801
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !2802, !srcloc !2803
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !2804, !srcloc !2805
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !2806, !srcloc !2807
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2808, !srcloc !2809
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !2810, !srcloc !2811
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !2812, !srcloc !2813
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !2814, !srcloc !2815
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !2816, !srcloc !2817
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !2818, !srcloc !2819
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !2820, !srcloc !2821
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !2822, !srcloc !2823
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !2824, !srcloc !2825
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !2826, !srcloc !2827
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !2828, !srcloc !2829
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !2830, !srcloc !2831
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !2832, !srcloc !2833
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !2834, !srcloc !2835
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #23, !dbg !2836, !srcloc !2837
  ret void, !dbg !2838
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !2841 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !2843
  ret void, !dbg !2844
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !2845 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2847, metadata !DIExpression()), !dbg !2848
  ret i32 0, !dbg !2849
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #3 !dbg !2850 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !2854, metadata !DIExpression()), !dbg !2855
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !2856
  ret void, !dbg !2857
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #4 !dbg !2858 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !2861
  ret i8* %1, !dbg !2862
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !2863 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2875, metadata !DIExpression()), !dbg !2886
  call void @llvm.dbg.value(metadata i8* %0, metadata !2874, metadata !DIExpression()), !dbg !2886
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #25, !dbg !2887
  ret void, !dbg !2889
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !2890 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2894, metadata !DIExpression()), !dbg !2896
  call void @llvm.dbg.value(metadata i8* %1, metadata !2895, metadata !DIExpression()), !dbg !2896
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !2897
  %4 = tail call i32 %3(i32 noundef %0) #24, !dbg !2897
  ret i32 %4, !dbg !2898
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !2899 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !2911, metadata !DIExpression()), !dbg !2912
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !2908, metadata !DIExpression()), !dbg !2912
  call void @llvm.dbg.value(metadata i8* %1, metadata !2909, metadata !DIExpression()), !dbg !2912
  call void @llvm.dbg.value(metadata i8* %2, metadata !2910, metadata !DIExpression()), !dbg !2912
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #24, !dbg !2913
  ret void, !dbg !2914
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !2915 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2919, metadata !DIExpression()), !dbg !2922
  call void @llvm.dbg.value(metadata i32 %1, metadata !2920, metadata !DIExpression()), !dbg !2922
  call void @llvm.dbg.value(metadata i32 0, metadata !2921, metadata !DIExpression()), !dbg !2922
  %3 = icmp eq i32 %1, 0, !dbg !2923
  br i1 %3, label %13, label %4, !dbg !2926

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !2921, metadata !DIExpression()), !dbg !2922
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !2927
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !2929
  %8 = load i8, i8* %7, align 1, !dbg !2929
  %9 = zext i8 %8 to i32, !dbg !2929
  %10 = tail call i32 %6(i32 noundef %9) #24, !dbg !2927
  %11 = add nuw i32 %5, 1, !dbg !2930
  call void @llvm.dbg.value(metadata i32 %11, metadata !2921, metadata !DIExpression()), !dbg !2922
  %12 = icmp eq i32 %11, %1, !dbg !2923
  br i1 %12, label %13, label %4, !dbg !2926, !llvm.loop !2931

13:                                               ; preds = %4, %2
  ret void, !dbg !2933
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !2934 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2938, metadata !DIExpression()), !dbg !2940
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !2941
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !2941
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !2939, metadata !DIExpression()), !dbg !2942
  call void @llvm.va_start(i8* nonnull %3), !dbg !2943
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !2944
  %5 = load i32, i32* %4, align 4, !dbg !2944
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !2944
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !2944
  call void @llvm.va_end(i8* nonnull %3), !dbg !2945
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !2946
  ret void, !dbg !2946
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !2947 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !2951, metadata !DIExpression()), !dbg !2956
  call void @llvm.dbg.value(metadata i32 %1, metadata !2952, metadata !DIExpression()), !dbg !2956
  call void @llvm.dbg.value(metadata i8* %2, metadata !2953, metadata !DIExpression()), !dbg !2956
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !2957
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !2957
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !2954, metadata !DIExpression()), !dbg !2958
  call void @llvm.va_start(i8* nonnull %5), !dbg !2959
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !2960
  %7 = load i32, i32* %6, align 4, !dbg !2960
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !2960
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #25, !dbg !2960
  call void @llvm.dbg.value(metadata i32 %9, metadata !2955, metadata !DIExpression()), !dbg !2956
  call void @llvm.va_end(i8* nonnull %5), !dbg !2961
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !2962
  ret i32 %9, !dbg !2963
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !2964 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !2971, metadata !DIExpression()), !dbg !2978
  call void @llvm.dbg.value(metadata i8* %0, metadata !2968, metadata !DIExpression()), !dbg !2978
  call void @llvm.dbg.value(metadata i32 %1, metadata !2969, metadata !DIExpression()), !dbg !2978
  call void @llvm.dbg.value(metadata i8* %2, metadata !2970, metadata !DIExpression()), !dbg !2978
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !2979
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !2979
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !2972, metadata !DIExpression()), !dbg !2980
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !2981
  store i8* %0, i8** %7, align 4, !dbg !2981
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !2981
  store i32 %1, i32* %8, align 4, !dbg !2981
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !2981
  store i32 0, i32* %9, align 4, !dbg !2981
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #25, !dbg !2982
  %10 = load i32, i32* %9, align 4, !dbg !2983
  %11 = load i32, i32* %8, align 4, !dbg !2985
  %12 = icmp slt i32 %10, %11, !dbg !2986
  br i1 %12, label %13, label %15, !dbg !2987

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !2988
  store i8 0, i8* %14, align 1, !dbg !2990
  br label %15, !dbg !2991

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !2992
  ret i32 %10, !dbg !2993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !2994 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2999, metadata !DIExpression()), !dbg !3001
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3000, metadata !DIExpression()), !dbg !3001
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3002
  %4 = load i8*, i8** %3, align 4, !dbg !3002
  %5 = icmp eq i8* %4, null, !dbg !3004
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3005
  br i1 %5, label %12, label %8, !dbg !3006

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3007
  %10 = load i32, i32* %9, align 4, !dbg !3007
  %11 = icmp slt i32 %7, %10, !dbg !3008
  br i1 %11, label %15, label %12, !dbg !3009

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3010
  %14 = add nsw i32 %7, 1, !dbg !3012
  store i32 %14, i32* %13, align 4, !dbg !3012
  br label %25, !dbg !3013

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3014
  %17 = icmp eq i32 %7, %16, !dbg !3016
  br i1 %17, label %18, label %21, !dbg !3017

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3018
  store i32 %19, i32* %6, align 4, !dbg !3018
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3020
  store i8 0, i8* %20, align 1, !dbg !3021
  br label %25, !dbg !3022

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3023
  %23 = add nsw i32 %7, 1, !dbg !3025
  store i32 %23, i32* %6, align 4, !dbg !3025
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3026
  store i8 %22, i8* %24, align 1, !dbg !3027
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3028
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3029 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3039, metadata !DIExpression()), !dbg !3043
  call void @llvm.dbg.value(metadata i8* %1, metadata !3040, metadata !DIExpression()), !dbg !3043
  call void @llvm.dbg.value(metadata i8* %2, metadata !3041, metadata !DIExpression()), !dbg !3043
  call void @llvm.dbg.value(metadata i8* %3, metadata !3042, metadata !DIExpression()), !dbg !3043
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #24, !dbg !3044
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !3045
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #25, !dbg !3046
  unreachable, !dbg !3047
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3048 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !3152
  ret %struct.k_thread* %1, !dbg !3153
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3154 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3159, metadata !DIExpression()), !dbg !3160
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3161, !srcloc !3163
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !3164
  ret void, !dbg !3165
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3166 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3167, !srcloc !3169
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !3170
  ret %struct.k_thread* %1, !dbg !3171
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !3172 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3185, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3182, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i8* %1, metadata !3183, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i8* %2, metadata !3184, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i32 %4, metadata !3186, metadata !DIExpression()), !dbg !3313
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !3314
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3314
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !3187, metadata !DIExpression()), !dbg !3315
  call void @llvm.dbg.value(metadata i32 0, metadata !3191, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i1 undef, metadata !3193, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3313
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !3316

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !3316

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !3317
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !3185, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i8* %30, metadata !3184, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i32 %29, metadata !3191, metadata !DIExpression()), !dbg !3313
  %31 = load i8, i8* %30, align 1, !dbg !3318
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !3316

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !3318
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !3319
  call void @llvm.dbg.value(metadata i8* %34, metadata !3184, metadata !DIExpression()), !dbg !3313
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #24, !dbg !3319
  call void @llvm.dbg.value(metadata i32 %35, metadata !3195, metadata !DIExpression()), !dbg !3320
  %36 = icmp slt i32 %35, 0, !dbg !3321
  %37 = add i32 %29, 1, !dbg !3319
  call void @llvm.dbg.value(metadata i32 undef, metadata !3191, metadata !DIExpression()), !dbg !3313
  br i1 %36, label %365, label %28, !llvm.loop !3323

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3325
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !3200, metadata !DIExpression()), !dbg !3326
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !3326
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !3245, metadata !DIExpression()), !dbg !3327
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !3248, metadata !DIExpression()), !dbg !3327
  call void @llvm.dbg.value(metadata i8* %30, metadata !3251, metadata !DIExpression()), !dbg !3327
  call void @llvm.dbg.value(metadata i32 -1, metadata !3252, metadata !DIExpression()), !dbg !3327
  call void @llvm.dbg.value(metadata i32 -1, metadata !3253, metadata !DIExpression()), !dbg !3327
  call void @llvm.dbg.value(metadata i8* null, metadata !3254, metadata !DIExpression()), !dbg !3327
  call void @llvm.dbg.value(metadata i8* %14, metadata !3255, metadata !DIExpression()), !dbg !3327
  call void @llvm.dbg.value(metadata i8 0, metadata !3256, metadata !DIExpression()), !dbg !3327
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #25, !dbg !3328
  call void @llvm.dbg.value(metadata i8* %39, metadata !3184, metadata !DIExpression()), !dbg !3313
  %40 = load i24, i24* %15, align 8, !dbg !3329
  %41 = and i24 %40, 256, !dbg !3329
  %42 = icmp eq i24 %41, 0, !dbg !3329
  br i1 %42, label %51, label %43, !dbg !3331

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !3332
  call void @llvm.dbg.value(metadata i8* %44, metadata !3185, metadata !DIExpression()), !dbg !3313
  %45 = bitcast i8* %27 to i32*, !dbg !3332
  %46 = load i32, i32* %45, align 4, !dbg !3332
  call void @llvm.dbg.value(metadata i32 %46, metadata !3252, metadata !DIExpression()), !dbg !3327
  %47 = icmp slt i32 %46, 0, !dbg !3334
  br i1 %47, label %48, label %56, !dbg !3336

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !3337
  store i24 %49, i24* %15, align 8, !dbg !3337
  %50 = sub nsw i32 0, %46, !dbg !3339
  call void @llvm.dbg.value(metadata i32 %50, metadata !3252, metadata !DIExpression()), !dbg !3327
  br label %56, !dbg !3340

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !3341
  %53 = icmp eq i24 %52, 0, !dbg !3341
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !3343
  br label %56, !dbg !3343

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !3344
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !3327
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3185, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i32 %58, metadata !3252, metadata !DIExpression()), !dbg !3327
  %60 = and i24 %57, 1024, !dbg !3344
  %61 = icmp eq i24 %60, 0, !dbg !3344
  br i1 %61, label %69, label %62, !dbg !3345

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !3346
  call void @llvm.dbg.value(metadata i8* %63, metadata !3185, metadata !DIExpression()), !dbg !3313
  %64 = bitcast i8* %59 to i32*, !dbg !3346
  %65 = load i32, i32* %64, align 4, !dbg !3346
  call void @llvm.dbg.value(metadata i32 %65, metadata !3257, metadata !DIExpression()), !dbg !3347
  %66 = icmp slt i32 %65, 0, !dbg !3348
  br i1 %66, label %67, label %74, !dbg !3350

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !3351
  store i24 %68, i24* %15, align 8, !dbg !3351
  br label %74, !dbg !3353

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !3354
  %71 = icmp eq i24 %70, 0, !dbg !3354
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !3356
  br label %74, !dbg !3356

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !3357
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !3327
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !3327
  call void @llvm.dbg.value(metadata i8* %77, metadata !3185, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i32 %76, metadata !3253, metadata !DIExpression()), !dbg !3327
  store i32 0, i32* %16, align 4, !dbg !3358
  store i32 0, i32* %17, align 8, !dbg !3359
  %78 = lshr i24 %75, 16, !dbg !3357
  call void @llvm.dbg.value(metadata i24 %78, metadata !3260, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3327
  %79 = lshr i24 %75, 11, !dbg !3360
  %80 = and i24 %79, 15, !dbg !3360
  %81 = zext i24 %80 to i32, !dbg !3360
  call void @llvm.dbg.value(metadata i32 %81, metadata !3261, metadata !DIExpression()), !dbg !3327
  %82 = trunc i24 %78 to i3, !dbg !3361
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !3361

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !3362

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3365
  call void @llvm.dbg.value(metadata i8* %85, metadata !3185, metadata !DIExpression()), !dbg !3313
  %86 = bitcast i8* %77 to i32*, !dbg !3365
  %87 = load i32, i32* %86, align 4, !dbg !3365
  %88 = sext i32 %87 to i64, !dbg !3365
  store i64 %88, i64* %20, align 8, !dbg !3367
  br label %115, !dbg !3368

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3369
  call void @llvm.dbg.value(metadata i8* %90, metadata !3185, metadata !DIExpression()), !dbg !3313
  %91 = bitcast i8* %77 to i32*, !dbg !3369
  %92 = load i32, i32* %91, align 4, !dbg !3369
  %93 = sext i32 %92 to i64, !dbg !3369
  store i64 %93, i64* %20, align 8, !dbg !3372
  br label %115, !dbg !3373

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !3374
  %96 = add i32 %95, 7, !dbg !3374
  %97 = and i32 %96, -8, !dbg !3374
  %98 = inttoptr i32 %97 to i8*, !dbg !3374
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3374
  call void @llvm.dbg.value(metadata i8* %99, metadata !3185, metadata !DIExpression()), !dbg !3313
  %100 = inttoptr i32 %97 to i64*, !dbg !3374
  %101 = load i64, i64* %100, align 8, !dbg !3374
  store i64 %101, i64* %20, align 8, !dbg !3375
  br label %115, !dbg !3376

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !3377
  %104 = add i32 %103, 7, !dbg !3377
  %105 = and i32 %104, -8, !dbg !3377
  %106 = inttoptr i32 %105 to i8*, !dbg !3377
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !3377
  call void @llvm.dbg.value(metadata i8* %107, metadata !3185, metadata !DIExpression()), !dbg !3313
  %108 = inttoptr i32 %105 to i64*, !dbg !3377
  %109 = load i64, i64* %108, align 8, !dbg !3377
  store i64 %109, i64* %20, align 8, !dbg !3378
  br label %115, !dbg !3379

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3380
  call void @llvm.dbg.value(metadata i8* %111, metadata !3185, metadata !DIExpression()), !dbg !3313
  %112 = bitcast i8* %77 to i32*, !dbg !3380
  %113 = load i32, i32* %112, align 4, !dbg !3380
  %114 = sext i32 %113 to i64, !dbg !3381
  store i64 %114, i64* %20, align 8, !dbg !3382
  br label %115, !dbg !3383

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !3384
  call void @llvm.dbg.value(metadata i8* %117, metadata !3185, metadata !DIExpression()), !dbg !3313
  %118 = trunc i24 %79 to i4, !dbg !3385
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !3385

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !3386
  %121 = ashr exact i64 %120, 56, !dbg !3386
  store i64 %121, i64* %20, align 8, !dbg !3389
  br label %177, !dbg !3390

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !3391
  %124 = ashr exact i64 %123, 48, !dbg !3391
  store i64 %124, i64* %20, align 8, !dbg !3394
  br label %177, !dbg !3395

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !3396

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3399
  call void @llvm.dbg.value(metadata i8* %127, metadata !3185, metadata !DIExpression()), !dbg !3313
  %128 = bitcast i8* %77 to i32*, !dbg !3399
  %129 = load i32, i32* %128, align 4, !dbg !3399
  %130 = zext i32 %129 to i64, !dbg !3399
  store i64 %130, i64* %20, align 8, !dbg !3401
  br label %157, !dbg !3402

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3403
  call void @llvm.dbg.value(metadata i8* %132, metadata !3185, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i8* %132, metadata !3185, metadata !DIExpression()), !dbg !3313
  %133 = bitcast i8* %77 to i32*, !dbg !3403
  %134 = load i32, i32* %133, align 4, !dbg !3403
  %135 = zext i32 %134 to i64, !dbg !3403
  store i64 %135, i64* %20, align 8, !dbg !3403
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !3405
  %138 = add i32 %137, 7, !dbg !3405
  %139 = and i32 %138, -8, !dbg !3405
  %140 = inttoptr i32 %139 to i8*, !dbg !3405
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !3405
  call void @llvm.dbg.value(metadata i8* %141, metadata !3185, metadata !DIExpression()), !dbg !3313
  %142 = inttoptr i32 %139 to i64*, !dbg !3405
  %143 = load i64, i64* %142, align 8, !dbg !3405
  store i64 %143, i64* %20, align 8, !dbg !3406
  br label %157, !dbg !3407

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !3408
  %146 = add i32 %145, 7, !dbg !3408
  %147 = and i32 %146, -8, !dbg !3408
  %148 = inttoptr i32 %147 to i8*, !dbg !3408
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !3408
  call void @llvm.dbg.value(metadata i8* %149, metadata !3185, metadata !DIExpression()), !dbg !3313
  %150 = inttoptr i32 %147 to i64*, !dbg !3408
  %151 = load i64, i64* %150, align 8, !dbg !3408
  store i64 %151, i64* %20, align 8, !dbg !3409
  br label %157, !dbg !3410

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3411
  call void @llvm.dbg.value(metadata i8* %153, metadata !3185, metadata !DIExpression()), !dbg !3313
  %154 = bitcast i8* %77 to i32*, !dbg !3411
  %155 = load i32, i32* %154, align 4, !dbg !3411
  %156 = zext i32 %155 to i64, !dbg !3412
  store i64 %156, i64* %20, align 8, !dbg !3413
  br label %157, !dbg !3414

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !3415
  call void @llvm.dbg.value(metadata i8* %159, metadata !3185, metadata !DIExpression()), !dbg !3313
  %160 = trunc i24 %79 to i4, !dbg !3416
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !3416

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !3417
  store i64 %162, i64* %20, align 8, !dbg !3420
  br label %177, !dbg !3421

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !3422
  store i64 %164, i64* %20, align 8, !dbg !3425
  br label %177, !dbg !3426

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !3427
  %167 = add i32 %166, 7, !dbg !3427
  %168 = and i32 %167, -8, !dbg !3427
  %169 = inttoptr i32 %168 to i8*, !dbg !3427
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !3427
  call void @llvm.dbg.value(metadata i8* %170, metadata !3185, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i8* %170, metadata !3185, metadata !DIExpression()), !dbg !3313
  %171 = inttoptr i32 %168 to double*, !dbg !3427
  %172 = load double, double* %171, align 8, !dbg !3427
  store double %172, double* %19, align 8, !dbg !3427
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !3431
  call void @llvm.dbg.value(metadata i8* %174, metadata !3185, metadata !DIExpression()), !dbg !3313
  %175 = bitcast i8* %77 to i8**, !dbg !3431
  %176 = load i8*, i8** %175, align 4, !dbg !3431
  store i8* %176, i8** %18, align 8, !dbg !3434
  br label %177, !dbg !3435

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !3327
  call void @llvm.dbg.value(metadata i8* %178, metadata !3185, metadata !DIExpression()), !dbg !3313
  %179 = and i24 %75, 3, !dbg !3436
  %180 = icmp eq i24 %179, 0, !dbg !3436
  br i1 %180, label %185, label %181, !dbg !3436

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #25, !dbg !3437
  call void @llvm.dbg.value(metadata i32 %182, metadata !3262, metadata !DIExpression()), !dbg !3438
  %183 = icmp slt i32 %182, 0, !dbg !3439
  %184 = add i32 %182, %29, !dbg !3437
  call void @llvm.dbg.value(metadata i32 undef, metadata !3191, metadata !DIExpression()), !dbg !3313
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !3441
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !3442

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #24, !dbg !3443
  call void @llvm.dbg.value(metadata i32 %188, metadata !3266, metadata !DIExpression()), !dbg !3444
  %189 = icmp slt i32 %188, 0, !dbg !3445
  %190 = add i32 %29, 1, !dbg !3443
  call void @llvm.dbg.value(metadata i32 undef, metadata !3191, metadata !DIExpression()), !dbg !3313
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !3447
  call void @llvm.dbg.value(metadata i8* %192, metadata !3254, metadata !DIExpression()), !dbg !3327
  %193 = icmp sgt i32 %76, -1, !dbg !3448
  br i1 %193, label %194, label %196, !dbg !3450

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #24, !dbg !3451
  call void @llvm.dbg.value(metadata i32 %195, metadata !3269, metadata !DIExpression()), !dbg !3453
  br label %241, !dbg !3454

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #24, !dbg !3455
  call void @llvm.dbg.value(metadata i32 %197, metadata !3269, metadata !DIExpression()), !dbg !3453
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !3254, metadata !DIExpression()), !dbg !3327
  %199 = load i64, i64* %20, align 8, !dbg !3457
  %200 = trunc i64 %199 to i8, !dbg !3458
  store i8 %200, i8* %10, align 1, !dbg !3459
  call void @llvm.dbg.value(metadata i8* %23, metadata !3255, metadata !DIExpression()), !dbg !3327
  br label %245, !dbg !3460

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !3461
  %203 = icmp eq i24 %202, 0, !dbg !3461
  %204 = trunc i24 %75 to i8, !dbg !3463
  %205 = shl i8 %204, 1, !dbg !3463
  %206 = and i8 %205, 32, !dbg !3463
  %207 = select i1 %203, i8 %206, i8 43, !dbg !3463
  call void @llvm.dbg.value(metadata i8 %207, metadata !3256, metadata !DIExpression()), !dbg !3327
  %208 = load i64, i64* %20, align 8, !dbg !3464
  call void @llvm.dbg.value(metadata i64 %208, metadata !3192, metadata !DIExpression()), !dbg !3313
  %209 = icmp slt i64 %208, 0, !dbg !3465
  br i1 %209, label %210, label %212, !dbg !3467

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !3256, metadata !DIExpression()), !dbg !3327
  %211 = sub nsw i64 0, %208, !dbg !3468
  store i64 %211, i64* %20, align 8, !dbg !3470
  br label %212, !dbg !3471

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !3327
  call void @llvm.dbg.value(metadata i8 %213, metadata !3256, metadata !DIExpression()), !dbg !3327
  %214 = load i64, i64* %20, align 8, !dbg !3472
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !3473
  call void @llvm.dbg.value(metadata i8* %215, metadata !3254, metadata !DIExpression()), !dbg !3327
  br label %216, !dbg !3474

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !3475
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !3476
  call void @llvm.dbg.value(metadata i8* %218, metadata !3254, metadata !DIExpression()), !dbg !3327
  call void @llvm.dbg.value(metadata i8 %217, metadata !3256, metadata !DIExpression()), !dbg !3327
  call void @llvm.dbg.label(metadata !3312), !dbg !3477
  %219 = icmp sgt i32 %76, -1, !dbg !3478
  br i1 %219, label %222, label %220, !dbg !3479

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !3480
  br label %245, !dbg !3479

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !3482
  %224 = sub i32 %22, %223, !dbg !3482
  call void @llvm.dbg.value(metadata i32 %224, metadata !3271, metadata !DIExpression()), !dbg !3483
  %225 = load i24, i24* %15, align 8, !dbg !3484
  %226 = and i24 %225, -65, !dbg !3484
  store i24 %226, i24* %15, align 8, !dbg !3484
  %227 = icmp ugt i32 %76, %224, !dbg !3485
  br i1 %227, label %228, label %245, !dbg !3487

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !3488
  store i32 %229, i32* %16, align 4, !dbg !3490
  br label %245, !dbg !3491

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !3492
  %232 = icmp eq i8* %231, null, !dbg !3494
  br i1 %232, label %245, label %233, !dbg !3495

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !3496
  %235 = zext i32 %234 to i64, !dbg !3496
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #25, !dbg !3498
  call void @llvm.dbg.value(metadata i8* %236, metadata !3254, metadata !DIExpression()), !dbg !3327
  %237 = load i24, i24* %15, align 8, !dbg !3499
  %238 = or i24 %237, 1048576, !dbg !3499
  store i24 %238, i24* %15, align 8, !dbg !3499
  store i8 120, i8* %21, align 1, !dbg !3500
  br label %216, !dbg !3501

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !3502
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #25, !dbg !3505
  br label %363, !dbg !3506

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !3507
  call void @llvm.dbg.value(metadata i32 %242, metadata !3269, metadata !DIExpression()), !dbg !3453
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !3508
  call void @llvm.dbg.value(metadata i32 -1, metadata !3253, metadata !DIExpression()), !dbg !3327
  call void @llvm.dbg.value(metadata i32 %29, metadata !3191, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i8* %192, metadata !3254, metadata !DIExpression()), !dbg !3327
  call void @llvm.dbg.value(metadata i8* %243, metadata !3255, metadata !DIExpression()), !dbg !3327
  call void @llvm.dbg.value(metadata i8 0, metadata !3256, metadata !DIExpression()), !dbg !3327
  %244 = icmp eq i8* %192, null, !dbg !3509
  br i1 %244, label %363, label %245, !dbg !3511, !llvm.loop !3323

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !3480
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !3274, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3327
  call void @llvm.dbg.value(metadata i32 0, metadata !3275, metadata !DIExpression()), !dbg !3327
  %250 = zext i8 %249 to i32, !dbg !3512
  %251 = icmp eq i8 %249, 0, !dbg !3514
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !3274, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3327
  call void @llvm.dbg.value(metadata i32 undef, metadata !3274, metadata !DIExpression()), !dbg !3327
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !3274, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3327
  call void @llvm.dbg.value(metadata i32 undef, metadata !3274, metadata !DIExpression()), !dbg !3327
  %252 = icmp sgt i32 %58, 0, !dbg !3515
  br i1 %252, label %253, label %302, !dbg !3516

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !3480
  %255 = icmp eq i24 %254, 0, !dbg !3480
  %256 = ptrtoint i8* %248 to i32, !dbg !3517
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !3274, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3327
  %257 = ptrtoint i8* %247 to i32, !dbg !3517
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !3274, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3327
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !3274, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3327
  %258 = xor i1 %251, true, !dbg !3518
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3274, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3327
  %259 = sext i1 %258 to i32, !dbg !3518
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !3274, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3327
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !3274, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !3327
  %260 = lshr i24 %246, 19, !dbg !3519
  %261 = and i24 %260, 1, !dbg !3519
  %262 = select i1 %255, i24 %261, i24 2, !dbg !3519
  %263 = zext i24 %262 to i32, !dbg !3519
  %264 = add i32 %257, %259, !dbg !3519
  %265 = add i32 %256, %263, !dbg !3519
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !3274, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3327
  %266 = and i24 %246, 4194304, !dbg !3520
  %267 = icmp eq i24 %266, 0, !dbg !3520
  %268 = load i32, i32* %16, align 4, !dbg !3522
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !3274, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3327
  call void @llvm.dbg.value(metadata i32 undef, metadata !3274, metadata !DIExpression()), !dbg !3327
  %269 = load i32, i32* %17, align 8, !dbg !3523
  %270 = select i1 %267, i32 0, i32 %269, !dbg !3523
  call void @llvm.dbg.value(metadata i32 undef, metadata !3274, metadata !DIExpression()), !dbg !3327
  %271 = add i32 %264, %58, !dbg !3523
  %272 = add i32 %265, %268, !dbg !3523
  %273 = add i32 %272, %270, !dbg !3524
  %274 = sub i32 %271, %273, !dbg !3524
  call void @llvm.dbg.value(metadata i32 %274, metadata !3252, metadata !DIExpression()), !dbg !3327
  %275 = and i24 %246, 4, !dbg !3525
  %276 = icmp eq i24 %275, 0, !dbg !3525
  br i1 %276, label %277, label %302, !dbg !3526

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !3276, metadata !DIExpression()), !dbg !3527
  %278 = and i24 %246, 64, !dbg !3528
  %279 = icmp eq i24 %278, 0, !dbg !3528
  %280 = select i1 %279, i1 true, i1 %251, !dbg !3529
  %281 = select i1 %279, i8 %249, i8 0, !dbg !3529
  %282 = select i1 %279, i32 32, i32 48, !dbg !3529
  br i1 %280, label %287, label %283, !dbg !3529

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #24, !dbg !3530
  call void @llvm.dbg.value(metadata i32 %284, metadata !3281, metadata !DIExpression()), !dbg !3531
  %285 = icmp slt i32 %284, 0, !dbg !3532
  %286 = add i32 %29, 1, !dbg !3530
  call void @llvm.dbg.value(metadata i32 undef, metadata !3191, metadata !DIExpression()), !dbg !3313
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !3327
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !3317
  call void @llvm.dbg.value(metadata i32 %290, metadata !3191, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i8 undef, metadata !3276, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i8 %288, metadata !3256, metadata !DIExpression()), !dbg !3327
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !3534
  %292 = add i32 %291, -1, !dbg !3534
  br label %293, !dbg !3534

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !3535
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !3317
  call void @llvm.dbg.value(metadata i32 %295, metadata !3191, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i32 %294, metadata !3252, metadata !DIExpression()), !dbg !3327
  call void @llvm.dbg.value(metadata i32 %294, metadata !3252, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3327
  %296 = icmp sgt i32 %294, 0, !dbg !3536
  br i1 %296, label %297, label %302, !dbg !3534

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !3537
  call void @llvm.dbg.value(metadata i32 %298, metadata !3252, metadata !DIExpression()), !dbg !3327
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #24, !dbg !3538
  call void @llvm.dbg.value(metadata i32 %299, metadata !3287, metadata !DIExpression()), !dbg !3539
  %300 = icmp slt i32 %299, 0, !dbg !3540
  %301 = add i32 %295, 1, !dbg !3538
  call void @llvm.dbg.value(metadata i32 undef, metadata !3191, metadata !DIExpression()), !dbg !3313
  br i1 %300, label %361, label %293, !llvm.loop !3542

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !3327
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !3327
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !3317
  call void @llvm.dbg.value(metadata i32 %305, metadata !3191, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i32 %304, metadata !3252, metadata !DIExpression()), !dbg !3327
  call void @llvm.dbg.value(metadata i8 %303, metadata !3256, metadata !DIExpression()), !dbg !3327
  %306 = icmp eq i8 %303, 0, !dbg !3544
  br i1 %306, label %312, label %307, !dbg !3545

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !3546
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #24, !dbg !3547
  call void @llvm.dbg.value(metadata i32 %309, metadata !3290, metadata !DIExpression()), !dbg !3548
  %310 = icmp slt i32 %309, 0, !dbg !3549
  %311 = add i32 %305, 1, !dbg !3547
  call void @llvm.dbg.value(metadata i32 undef, metadata !3191, metadata !DIExpression()), !dbg !3313
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !3317
  call void @llvm.dbg.value(metadata i32 %313, metadata !3191, metadata !DIExpression()), !dbg !3313
  %314 = lshr i24 %246, 20, !dbg !3551
  %315 = lshr i24 %246, 19, !dbg !3552
  %316 = or i24 %314, %315, !dbg !3553
  %317 = and i24 %316, 1, !dbg !3553
  %318 = icmp eq i24 %317, 0, !dbg !3553
  br i1 %318, label %323, label %319, !dbg !3554

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !3555
  call void @llvm.dbg.value(metadata i32 %320, metadata !3294, metadata !DIExpression()), !dbg !3556
  %321 = icmp slt i32 %320, 0, !dbg !3557
  %322 = add i32 %313, 1, !dbg !3555
  call void @llvm.dbg.value(metadata i32 undef, metadata !3191, metadata !DIExpression()), !dbg !3313
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !3317
  call void @llvm.dbg.value(metadata i32 %324, metadata !3191, metadata !DIExpression()), !dbg !3313
  %325 = and i24 %246, 1048576, !dbg !3559
  %326 = icmp eq i24 %325, 0, !dbg !3559
  br i1 %326, label %333, label %327, !dbg !3560

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !3561
  %329 = zext i8 %328 to i32, !dbg !3561
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #24, !dbg !3561
  call void @llvm.dbg.value(metadata i32 %330, metadata !3300, metadata !DIExpression()), !dbg !3562
  %331 = icmp slt i32 %330, 0, !dbg !3563
  %332 = add i32 %324, 1, !dbg !3561
  call void @llvm.dbg.value(metadata i32 undef, metadata !3191, metadata !DIExpression()), !dbg !3313
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !3317
  call void @llvm.dbg.value(metadata i32 %334, metadata !3191, metadata !DIExpression()), !dbg !3313
  %335 = load i32, i32* %16, align 4, !dbg !3565
  call void @llvm.dbg.value(metadata i32 %335, metadata !3275, metadata !DIExpression()), !dbg !3327
  br label %336, !dbg !3566

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !3567
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !3317
  call void @llvm.dbg.value(metadata i32 %338, metadata !3191, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i32 %337, metadata !3275, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3327
  %339 = icmp sgt i32 %337, 0, !dbg !3568
  br i1 %339, label %340, label %345, !dbg !3566

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !3569
  call void @llvm.dbg.value(metadata i32 %341, metadata !3275, metadata !DIExpression()), !dbg !3327
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #24, !dbg !3570
  call void @llvm.dbg.value(metadata i32 %342, metadata !3304, metadata !DIExpression()), !dbg !3571
  %343 = icmp slt i32 %342, 0, !dbg !3572
  %344 = add i32 %338, 1, !dbg !3570
  call void @llvm.dbg.value(metadata i32 undef, metadata !3191, metadata !DIExpression()), !dbg !3313
  br i1 %343, label %361, label %336, !llvm.loop !3574

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #25, !dbg !3576
  call void @llvm.dbg.value(metadata i32 %346, metadata !3307, metadata !DIExpression()), !dbg !3577
  %347 = icmp slt i32 %346, 0, !dbg !3578
  call void @llvm.dbg.value(metadata i32 undef, metadata !3191, metadata !DIExpression()), !dbg !3313
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !3576
  call void @llvm.dbg.value(metadata i32 %349, metadata !3191, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i32 %304, metadata !3252, metadata !DIExpression()), !dbg !3327
  %350 = icmp sgt i32 %304, 0, !dbg !3580
  br i1 %350, label %351, label %363, !dbg !3581

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !3581
  %353 = add i32 %352, %338, !dbg !3581
  br label %354, !dbg !3581

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3191, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i32 %355, metadata !3252, metadata !DIExpression()), !dbg !3327
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #24, !dbg !3582
  call void @llvm.dbg.value(metadata i32 %356, metadata !3309, metadata !DIExpression()), !dbg !3583
  %357 = icmp slt i32 %356, 0, !dbg !3584
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !3586
  call void @llvm.dbg.value(metadata i32 undef, metadata !3191, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3313
  call void @llvm.dbg.value(metadata i32 %359, metadata !3252, metadata !DIExpression()), !dbg !3327
  %360 = icmp sgt i32 %355, 1, !dbg !3580
  br i1 %360, label %354, label %363, !dbg !3581, !llvm.loop !3587

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !3191, metadata !DIExpression()), !dbg !3313
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3324
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !3317
  call void @llvm.dbg.value(metadata i32 %364, metadata !3191, metadata !DIExpression()), !dbg !3313
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !3324
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !3313
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !3589
  ret i32 %366, !dbg !3589
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #10

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3590 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3594, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.value(metadata i8* %1, metadata !3595, metadata !DIExpression()), !dbg !3596
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !3597
  store i24 0, i24* %3, align 4, !dbg !3597
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !3597
  store i8 0, i8* %4, align 1, !dbg !3597
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !3597
  store i32 0, i32* %5, align 4, !dbg !3597
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !3597
  store i32 0, i32* %6, align 4, !dbg !3597
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3598
  call void @llvm.dbg.value(metadata i8* %7, metadata !3595, metadata !DIExpression()), !dbg !3596
  %8 = load i8, i8* %7, align 1, !dbg !3599
  %9 = icmp eq i8 %8, 37, !dbg !3601
  br i1 %9, label %10, label %12, !dbg !3602

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3603
  call void @llvm.dbg.value(metadata i8* %11, metadata !3595, metadata !DIExpression()), !dbg !3596
  store i8 37, i8* %4, align 1, !dbg !3605
  br label %18, !dbg !3606

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #25, !dbg !3607
  call void @llvm.dbg.value(metadata i8* %13, metadata !3595, metadata !DIExpression()), !dbg !3596
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #25, !dbg !3608
  call void @llvm.dbg.value(metadata i8* %14, metadata !3595, metadata !DIExpression()), !dbg !3596
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #25, !dbg !3609
  call void @llvm.dbg.value(metadata i8* %15, metadata !3595, metadata !DIExpression()), !dbg !3596
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #25, !dbg !3610
  call void @llvm.dbg.value(metadata i8* %16, metadata !3595, metadata !DIExpression()), !dbg !3596
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #25, !dbg !3611
  call void @llvm.dbg.value(metadata i8* %17, metadata !3595, metadata !DIExpression()), !dbg !3596
  br label %18, !dbg !3612

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !3596
  ret i8* %19, !dbg !3613
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !3614 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3618, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.value(metadata i8* %1, metadata !3619, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.value(metadata i8* %2, metadata !3620, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.value(metadata i8* %3, metadata !3621, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.value(metadata i32 0, metadata !3622, metadata !DIExpression()), !dbg !3625
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !3626

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !3627
  call void @llvm.dbg.value(metadata i32 %9, metadata !3622, metadata !DIExpression()), !dbg !3625
  call void @llvm.dbg.value(metadata i8* %8, metadata !3620, metadata !DIExpression()), !dbg !3625
  %10 = icmp ult i8* %8, %3, !dbg !3628
  br i1 %10, label %11, label %13, !dbg !3629

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !3630
  br label %17, !dbg !3629

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !3631

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !3632
  %16 = icmp eq i8 %15, 0, !dbg !3631
  br i1 %16, label %24, label %17, !dbg !3626

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !3630
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !3633
  call void @llvm.dbg.value(metadata i8* %19, metadata !3620, metadata !DIExpression()), !dbg !3625
  %20 = zext i8 %18 to i32, !dbg !3634
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #24, !dbg !3635
  call void @llvm.dbg.value(metadata i32 %21, metadata !3623, metadata !DIExpression()), !dbg !3636
  %22 = icmp slt i32 %21, 0, !dbg !3637
  %23 = add i32 %9, 1, !dbg !3639
  call void @llvm.dbg.value(metadata i32 undef, metadata !3622, metadata !DIExpression()), !dbg !3625
  br i1 %22, label %24, label %7, !llvm.loop !3640

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !3625
  ret i32 %25, !dbg !3642
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #11 !dbg !3643 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3647, metadata !DIExpression()), !dbg !3657
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !3648, metadata !DIExpression()), !dbg !3657
  call void @llvm.dbg.value(metadata i8* %2, metadata !3649, metadata !DIExpression()), !dbg !3657
  call void @llvm.dbg.value(metadata i8* %3, metadata !3650, metadata !DIExpression()), !dbg !3657
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !3658
  %6 = load i8, i8* %5, align 1, !dbg !3658
  %7 = zext i8 %6 to i32, !dbg !3659
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #25, !dbg !3660
  %9 = icmp eq i32 %8, 0, !dbg !3660
  call void @llvm.dbg.value(metadata i1 %9, metadata !3651, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3657
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #25, !dbg !3661
  call void @llvm.dbg.value(metadata i32 %10, metadata !3652, metadata !DIExpression()), !dbg !3657
  %11 = ptrtoint i8* %3 to i32, !dbg !3662
  %12 = ptrtoint i8* %2 to i32, !dbg !3662
  %13 = sub i32 %11, %12, !dbg !3662
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !3663
  call void @llvm.dbg.value(metadata i8* %14, metadata !3654, metadata !DIExpression()), !dbg !3657
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !3664

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !3657
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !3647, metadata !DIExpression()), !dbg !3657
  call void @llvm.dbg.value(metadata i8* %18, metadata !3654, metadata !DIExpression()), !dbg !3657
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !3665
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !3666
  call void @llvm.dbg.value(metadata i32 %25, metadata !3655, metadata !DIExpression()), !dbg !3667
  %26 = icmp ult i32 %25, 10, !dbg !3668
  %27 = select i1 %26, i32 48, i32 %16, !dbg !3669
  %28 = add i32 %27, %25, !dbg !3667
  %29 = trunc i32 %28 to i8, !dbg !3669
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !3670
  call void @llvm.dbg.value(metadata i8* %30, metadata !3654, metadata !DIExpression()), !dbg !3657
  store i8 %29, i8* %30, align 1, !dbg !3671
  call void @llvm.dbg.value(metadata i64 %22, metadata !3647, metadata !DIExpression()), !dbg !3657
  %31 = icmp uge i64 %19, %15, !dbg !3672
  %32 = icmp ugt i8* %30, %2, !dbg !3673
  %33 = and i1 %31, %32, !dbg !3673
  br i1 %33, label %17, label %34, !dbg !3674, !llvm.loop !3675

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !3677
  %36 = load i24, i24* %35, align 4, !dbg !3677
  %37 = and i24 %36, 32, !dbg !3677
  %38 = icmp eq i24 %37, 0, !dbg !3677
  br i1 %38, label %44, label %39, !dbg !3679

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !3680

40:                                               ; preds = %39
  br label %41, !dbg !3682

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !3686
  store i24 %43, i24* %35, align 4, !dbg !3686
  br label %44, !dbg !3687

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !3687
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !3688 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3694, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i8* %1, metadata !3695, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.value(metadata i32 %2, metadata !3696, metadata !DIExpression()), !dbg !3697
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !3698
  %5 = load i24, i24* %4, align 4, !dbg !3698
  %6 = lshr i24 %5, 11, !dbg !3698
  %7 = and i24 %6, 15, !dbg !3698
  %8 = zext i24 %7 to i32, !dbg !3698
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !3699

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !3700
  store i32 %2, i32* %10, align 4, !dbg !3702
  br label %28, !dbg !3703

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !3704
  store i8 %12, i8* %1, align 1, !dbg !3705
  br label %28, !dbg !3706

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !3707
  %15 = bitcast i8* %1 to i16*, !dbg !3708
  store i16 %14, i16* %15, align 2, !dbg !3709
  br label %28, !dbg !3710

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !3711
  store i32 %2, i32* %17, align 4, !dbg !3712
  br label %28, !dbg !3713

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !3714
  %20 = bitcast i8* %1 to i64*, !dbg !3715
  store i64 %19, i64* %20, align 8, !dbg !3716
  br label %28, !dbg !3717

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !3718
  %23 = bitcast i8* %1 to i64*, !dbg !3719
  store i64 %22, i64* %23, align 8, !dbg !3720
  br label %28, !dbg !3721

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !3722
  store i32 %2, i32* %25, align 4, !dbg !3723
  br label %28, !dbg !3724

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !3725
  store i32 %2, i32* %27, align 4, !dbg !3726
  br label %28, !dbg !3727

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !3728
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #12 !dbg !3729 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3732, metadata !DIExpression()), !dbg !3733
  %2 = add i32 %0, -65, !dbg !3734
  %3 = icmp ult i32 %2, 26, !dbg !3735
  %4 = zext i1 %3 to i32, !dbg !3735
  ret i32 %4, !dbg !3736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #12 !dbg !3737 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3741, metadata !DIExpression()), !dbg !3742
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !3743

2:                                                ; preds = %1
  br label %4, !dbg !3744

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !3746

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !3747
  ret i32 %5, !dbg !3748
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !3749 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3751, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata i8* %1, metadata !3752, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata i8 1, metadata !3753, metadata !DIExpression()), !dbg !3754
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !3755

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !3753, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata i8* %5, metadata !3752, metadata !DIExpression()), !dbg !3754
  %6 = load i8, i8* %5, align 1, !dbg !3756
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !3758

7:                                                ; preds = %4
  br label %11, !dbg !3759

8:                                                ; preds = %4
  br label %11, !dbg !3761

9:                                                ; preds = %4
  br label %11, !dbg !3762

10:                                               ; preds = %4
  br label %11, !dbg !3763

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !3764
  %14 = or i24 %13, %12, !dbg !3764
  store i24 %14, i24* %3, align 4, !dbg !3764
  call void @llvm.dbg.value(metadata i8 poison, metadata !3753, metadata !DIExpression()), !dbg !3754
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !3752, metadata !DIExpression()), !dbg !3754
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !3753, metadata !DIExpression()), !dbg !3754
  call void @llvm.dbg.value(metadata i8* %15, metadata !3752, metadata !DIExpression()), !dbg !3754
  %17 = load i24, i24* %3, align 4, !dbg !3765
  %18 = and i24 %17, 68, !dbg !3767
  %19 = icmp eq i24 %18, 68, !dbg !3767
  br i1 %19, label %20, label %22, !dbg !3767

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !3768
  store i24 %21, i24* %3, align 4, !dbg !3768
  br label %22, !dbg !3770

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !3771
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3772 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3774, metadata !DIExpression()), !dbg !3778
  call void @llvm.dbg.value(metadata i8* %1, metadata !3775, metadata !DIExpression()), !dbg !3778
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !3779
  %5 = load i24, i24* %4, align 4, !dbg !3780
  %6 = or i24 %5, 128, !dbg !3780
  store i24 %6, i24* %4, align 4, !dbg !3780
  call void @llvm.dbg.value(metadata i8* %1, metadata !3775, metadata !DIExpression()), !dbg !3778
  %7 = load i8, i8* %1, align 1, !dbg !3781
  %8 = icmp eq i8 %7, 42, !dbg !3783
  br i1 %8, label %9, label %12, !dbg !3784

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !3785
  store i24 %10, i24* %4, align 4, !dbg !3785
  call void @llvm.dbg.value(metadata i8* %1, metadata !3775, metadata !DIExpression()), !dbg !3778
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3787
  call void @llvm.dbg.value(metadata i8* %11, metadata !3775, metadata !DIExpression()), !dbg !3778
  store i8* %11, i8** %3, align 4, !dbg !3787
  br label %29, !dbg !3788

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !3776, metadata !DIExpression()), !dbg !3778
  call void @llvm.dbg.value(metadata i8** %3, metadata !3775, metadata !DIExpression(DW_OP_deref)), !dbg !3778
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !3789
  call void @llvm.dbg.value(metadata i32 %13, metadata !3777, metadata !DIExpression()), !dbg !3778
  %14 = load i8*, i8** %3, align 4, !dbg !3790
  call void @llvm.dbg.value(metadata i8* %14, metadata !3775, metadata !DIExpression()), !dbg !3778
  %15 = icmp eq i8* %14, %1, !dbg !3792
  br i1 %15, label %29, label %16, !dbg !3793

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !3794
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !3796
  store i32 %13, i32* %18, align 4, !dbg !3797
  %19 = lshr i32 %13, 31, !dbg !3798
  %20 = lshr i24 %17, 1, !dbg !3799
  %21 = and i24 %20, 1, !dbg !3799
  %22 = zext i24 %21 to i32, !dbg !3799
  %23 = or i32 %19, %22, !dbg !3799
  %24 = trunc i32 %23 to i24, !dbg !3799
  %25 = shl nuw nsw i24 %24, 1, !dbg !3799
  %26 = and i24 %17, -131, !dbg !3799
  %27 = or i24 %26, 128, !dbg !3799
  %28 = or i24 %25, %27, !dbg !3799
  store i24 %28, i24* %4, align 4, !dbg !3799
  br label %29, !dbg !3800

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !3778
  ret i8* %30, !dbg !3801
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3802 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3804, metadata !DIExpression()), !dbg !3807
  call void @llvm.dbg.value(metadata i8* %1, metadata !3805, metadata !DIExpression()), !dbg !3807
  %4 = load i8, i8* %1, align 1, !dbg !3808
  %5 = icmp eq i8 %4, 46, !dbg !3809
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !3810
  %7 = load i24, i24* %6, align 4, !dbg !3811
  %8 = select i1 %5, i24 512, i24 0, !dbg !3811
  %9 = and i24 %7, -513, !dbg !3811
  %10 = or i24 %9, %8, !dbg !3811
  store i24 %10, i24* %6, align 4, !dbg !3811
  br i1 %5, label %11, label %32, !dbg !3812

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !3805, metadata !DIExpression()), !dbg !3807
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3813
  call void @llvm.dbg.value(metadata i8* %12, metadata !3805, metadata !DIExpression()), !dbg !3807
  store i8* %12, i8** %3, align 4, !dbg !3813
  %13 = load i8, i8* %12, align 1, !dbg !3814
  %14 = icmp eq i8 %13, 42, !dbg !3816
  br i1 %14, label %15, label %18, !dbg !3817

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !3818
  store i24 %16, i24* %6, align 4, !dbg !3818
  call void @llvm.dbg.value(metadata i8* %12, metadata !3805, metadata !DIExpression()), !dbg !3807
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3820
  call void @llvm.dbg.value(metadata i8* %17, metadata !3805, metadata !DIExpression()), !dbg !3807
  store i8* %17, i8** %3, align 4, !dbg !3820
  br label %32, !dbg !3821

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !3805, metadata !DIExpression(DW_OP_deref)), !dbg !3807
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #25, !dbg !3822
  call void @llvm.dbg.value(metadata i32 %19, metadata !3806, metadata !DIExpression()), !dbg !3807
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !3823
  store i32 %19, i32* %20, align 4, !dbg !3824
  %21 = lshr i32 %19, 31, !dbg !3825
  %22 = load i24, i24* %6, align 4, !dbg !3826
  %23 = lshr i24 %22, 1, !dbg !3826
  %24 = and i24 %23, 1, !dbg !3826
  %25 = zext i24 %24 to i32, !dbg !3826
  %26 = or i32 %21, %25, !dbg !3826
  %27 = trunc i32 %26 to i24, !dbg !3826
  %28 = shl nuw nsw i24 %27, 1, !dbg !3826
  %29 = and i24 %22, -3, !dbg !3826
  %30 = or i24 %28, %29, !dbg !3826
  store i24 %30, i24* %6, align 4, !dbg !3826
  %31 = load i8*, i8** %3, align 4, !dbg !3827
  call void @llvm.dbg.value(metadata i8* %31, metadata !3805, metadata !DIExpression()), !dbg !3807
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !3807
  ret i8* %33, !dbg !3828
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !3829 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3831, metadata !DIExpression()), !dbg !3833
  call void @llvm.dbg.value(metadata i8* %1, metadata !3832, metadata !DIExpression()), !dbg !3833
  %3 = load i8, i8* %1, align 1, !dbg !3834
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !3835

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3836
  call void @llvm.dbg.value(metadata i8* %5, metadata !3832, metadata !DIExpression()), !dbg !3833
  %6 = load i8, i8* %5, align 1, !dbg !3839
  %7 = icmp eq i8 %6, 104, !dbg !3840
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !3841
  %9 = load i24, i24* %8, align 4, !dbg !3841
  %10 = and i24 %9, -30721, !dbg !3841
  br i1 %7, label %11, label %14, !dbg !3842

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !3843
  store i24 %12, i24* %8, align 4, !dbg !3843
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3845
  call void @llvm.dbg.value(metadata i8* %13, metadata !3832, metadata !DIExpression()), !dbg !3833
  br label %56, !dbg !3846

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !3847
  store i24 %15, i24* %8, align 4, !dbg !3847
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3849
  call void @llvm.dbg.value(metadata i8* %17, metadata !3832, metadata !DIExpression()), !dbg !3833
  %18 = load i8, i8* %17, align 1, !dbg !3851
  %19 = icmp eq i8 %18, 108, !dbg !3852
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !3853
  %21 = load i24, i24* %20, align 4, !dbg !3853
  %22 = and i24 %21, -30721, !dbg !3853
  br i1 %19, label %23, label %26, !dbg !3854

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !3855
  store i24 %24, i24* %20, align 4, !dbg !3855
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !3857
  call void @llvm.dbg.value(metadata i8* %25, metadata !3832, metadata !DIExpression()), !dbg !3833
  br label %56, !dbg !3858

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !3859
  store i24 %27, i24* %20, align 4, !dbg !3859
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !3861
  %30 = load i24, i24* %29, align 4, !dbg !3862
  %31 = and i24 %30, -30721, !dbg !3862
  %32 = or i24 %31, 10240, !dbg !3862
  store i24 %32, i24* %29, align 4, !dbg !3862
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3863
  call void @llvm.dbg.value(metadata i8* %33, metadata !3832, metadata !DIExpression()), !dbg !3833
  br label %56, !dbg !3864

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !3865
  %36 = load i24, i24* %35, align 4, !dbg !3866
  %37 = and i24 %36, -30721, !dbg !3866
  %38 = or i24 %37, 12288, !dbg !3866
  store i24 %38, i24* %35, align 4, !dbg !3866
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3867
  call void @llvm.dbg.value(metadata i8* %39, metadata !3832, metadata !DIExpression()), !dbg !3833
  br label %56, !dbg !3868

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !3869
  %42 = load i24, i24* %41, align 4, !dbg !3870
  %43 = and i24 %42, -30721, !dbg !3870
  %44 = or i24 %43, 14336, !dbg !3870
  store i24 %44, i24* %41, align 4, !dbg !3870
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3871
  call void @llvm.dbg.value(metadata i8* %45, metadata !3832, metadata !DIExpression()), !dbg !3833
  br label %56, !dbg !3872

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !3873
  %48 = load i24, i24* %47, align 4, !dbg !3874
  %49 = and i24 %48, -30723, !dbg !3874
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3875
  call void @llvm.dbg.value(metadata i8* %50, metadata !3832, metadata !DIExpression()), !dbg !3833
  %51 = or i24 %49, 16386, !dbg !3876
  store i24 %51, i24* %47, align 4, !dbg !3876
  br label %56, !dbg !3877

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !3878
  %54 = load i24, i24* %53, align 4, !dbg !3879
  %55 = and i24 %54, -30721, !dbg !3879
  store i24 %55, i24* %53, align 4, !dbg !3879
  br label %56, !dbg !3880

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !3832, metadata !DIExpression()), !dbg !3833
  ret i8* %57, !dbg !3881
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !3882 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !3884, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata i8* %1, metadata !3885, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata i8 0, metadata !3886, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata i8* %1, metadata !3885, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3889
  %3 = load i8, i8* %1, align 1, !dbg !3890
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !3891
  store i8 %3, i8* %4, align 1, !dbg !3892
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !3893

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !3894

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !3895
  %9 = load i24, i24* %8, align 4, !dbg !3895
  %10 = and i24 %9, -458753, !dbg !3895
  %11 = or i24 %10, %7, !dbg !3895
  call void @llvm.dbg.label(metadata !3887), !dbg !3896
  %12 = and i24 %9, 30720, !dbg !3897
  %13 = icmp eq i24 %12, 16384, !dbg !3897
  %14 = zext i1 %13 to i24, !dbg !3899
  %15 = or i24 %11, %14, !dbg !3899
  %16 = icmp eq i8 %3, 99, !dbg !3900
  br i1 %16, label %17, label %43, !dbg !3902

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !3903
  %19 = icmp ne i24 %18, 0, !dbg !3903
  call void @llvm.dbg.value(metadata i1 %19, metadata !3886, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3889
  br label %43, !dbg !3905

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !3906
  %22 = load i24, i24* %21, align 4, !dbg !3907
  %23 = and i24 %22, -458753, !dbg !3907
  %24 = or i24 %23, 262144, !dbg !3907
  call void @llvm.dbg.value(metadata i8 1, metadata !3886, metadata !DIExpression()), !dbg !3889
  br label %43, !dbg !3908

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !3911
  %27 = load i24, i24* %26, align 4, !dbg !3912
  %28 = and i24 %27, -458753, !dbg !3912
  %29 = or i24 %28, 196608, !dbg !3912
  %30 = and i24 %27, 30720, !dbg !3913
  %31 = icmp eq i24 %30, 16384, !dbg !3913
  br label %43, !dbg !3915

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !3916
  %34 = load i24, i24* %33, align 4, !dbg !3917
  %35 = and i24 %34, -458753, !dbg !3917
  %36 = or i24 %35, 196608, !dbg !3917
  %37 = and i24 %34, 30720, !dbg !3918
  %38 = icmp ne i24 %37, 0, !dbg !3918
  br label %43, !dbg !3920

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !3921
  %41 = load i24, i24* %40, align 4, !dbg !3922
  %42 = or i24 %41, 1, !dbg !3922
  br label %43, !dbg !3923

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !3924
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !3925
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !3926
  call void @llvm.dbg.value(metadata i8* %48, metadata !3885, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.value(metadata i8 poison, metadata !3886, metadata !DIExpression()), !dbg !3889
  %49 = lshr i24 %44, 1, !dbg !3924
  %50 = and i24 %49, 1, !dbg !3924
  %51 = zext i24 %50 to i32, !dbg !3924
  %52 = or i32 %51, %47, !dbg !3924
  %53 = trunc i32 %52 to i24, !dbg !3924
  %54 = shl nuw nsw i24 %53, 1, !dbg !3924
  %55 = and i24 %44, -3, !dbg !3924
  %56 = or i24 %54, %55, !dbg !3924
  store i24 %56, i24* %46, align 4, !dbg !3924
  ret i8* %48, !dbg !3927
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #11 !dbg !3928 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !3933, metadata !DIExpression()), !dbg !3936
  %2 = load i8*, i8** %0, align 4, !dbg !3937
  call void @llvm.dbg.value(metadata i8* %2, metadata !3934, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 0, metadata !3935, metadata !DIExpression()), !dbg !3936
  %3 = load i8, i8* %2, align 1, !dbg !3938
  %4 = zext i8 %3 to i32, !dbg !3939
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #25, !dbg !3940
  %6 = icmp eq i32 %5, 0, !dbg !3941
  br i1 %6, label %19, label %7, !dbg !3941

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3935, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i8* %10, metadata !3934, metadata !DIExpression()), !dbg !3936
  %11 = mul i32 %9, 10, !dbg !3942
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !3944
  call void @llvm.dbg.value(metadata i8* %12, metadata !3934, metadata !DIExpression()), !dbg !3936
  %13 = add i32 %11, -48, !dbg !3945
  %14 = add i32 %13, %8, !dbg !3946
  call void @llvm.dbg.value(metadata i32 %14, metadata !3935, metadata !DIExpression()), !dbg !3936
  %15 = load i8, i8* %12, align 1, !dbg !3938
  %16 = zext i8 %15 to i32, !dbg !3939
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #25, !dbg !3940
  %18 = icmp eq i32 %17, 0, !dbg !3941
  br i1 %18, label %19, label %7, !dbg !3941, !llvm.loop !3947

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !3936
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !3936
  store i8* %20, i8** %0, align 4, !dbg !3949
  ret i32 %21, !dbg !3950
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #12 !dbg !3951 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3953, metadata !DIExpression()), !dbg !3954
  %2 = add i32 %0, -48, !dbg !3955
  %3 = icmp ult i32 %2, 10, !dbg !3956
  %4 = zext i1 %3 to i32, !dbg !3956
  ret i32 %4, !dbg !3957
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !3958 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !3960, !srcloc !3961
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !3962, !srcloc !3963
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !3964, !srcloc !3965
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !3966, !srcloc !3967
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !3968, !srcloc !3969
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,45\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !3970, !srcloc !3971
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,32000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !3972, !srcloc !3973
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !3974, !srcloc !3975
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,128\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !3976, !srcloc !3977
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !3978, !srcloc !3979
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !3980, !srcloc !3981
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !3982, !srcloc !3983
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !3984, !srcloc !3985
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !3986, !srcloc !3987
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !3988, !srcloc !3989
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !3990, !srcloc !3991
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !3992, !srcloc !3993
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !3994, !srcloc !3995
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !3996, !srcloc !3997
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !3998, !srcloc !3999
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !4000, !srcloc !4001
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !4002, !srcloc !4003
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !4004, !srcloc !4005
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !4006, !srcloc !4007
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !4008, !srcloc !4009
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !4010, !srcloc !4011
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M3_ENABLED,%object", ""() #23, !dbg !4012, !srcloc !4013
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !4014, !srcloc !4015
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !4016, !srcloc !4017
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !4018, !srcloc !4019
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED\0A\09.equ\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_LINARO_96B_LSCON_3V3_ENABLED,%object", ""() #23, !dbg !4020, !srcloc !4021
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !4022, !srcloc !4023
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED\0A\09.equ\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_QORVO_RFSW8001_ENABLED,%object", ""() #23, !dbg !4024, !srcloc !4025
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED\0A\09.equ\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_REGULATOR_FIXED_ENABLED,%object", ""() #23, !dbg !4026, !srcloc !4027
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SEMTECH_SX1276_ENABLED,%object", ""() #23, !dbg !4028, !srcloc !4029
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4030, !srcloc !4031
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS2DH_ENABLED,%object", ""() #23, !dbg !4032, !srcloc !4033
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3DH_ENABLED,%object", ""() #23, !dbg !4034, !srcloc !4035
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EEPROM_ENABLED,%object", ""() #23, !dbg !4036, !srcloc !4037
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !4038, !srcloc !4039
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4040, !srcloc !4041
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !4042, !srcloc !4043
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !4044, !srcloc !4045
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !4046, !srcloc !4047
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !4048, !srcloc !4049
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !4050, !srcloc !4051
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !4052, !srcloc !4053
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !4054, !srcloc !4055
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !4056, !srcloc !4057
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !4058, !srcloc !4059
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L0_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !4060, !srcloc !4061
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32L1_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !4062, !srcloc !4063
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !4064, !srcloc !4065
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !4066, !srcloc !4067
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !4068, !srcloc !4069
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !4070, !srcloc !4071
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !4072, !srcloc !4073
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !4074, !srcloc !4075
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !4076, !srcloc !4077
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !4078, !srcloc !4079
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !4080, !srcloc !4081
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !4082, !srcloc !4083
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !4084, !srcloc !4085
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !4086, !srcloc !4087
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !4088, !srcloc !4089
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !4090, !srcloc !4091
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !4092, !srcloc !4093
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !4094, !srcloc !4095
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !4096, !srcloc !4097
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !4098, !srcloc !4099
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !4100, !srcloc !4101
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !4102, !srcloc !4103
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !4104, !srcloc !4105
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !4106, !srcloc !4107
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !4108, !srcloc !4109
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !4110, !srcloc !4111
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !4112, !srcloc !4113
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !4114, !srcloc !4115
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !4116, !srcloc !4117
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !4118, !srcloc !4119
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !4120, !srcloc !4121
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !4122, !srcloc !4123
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !4124, !srcloc !4125
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !4126, !srcloc !4127
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !4128, !srcloc !4129
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_WISTRIO\0A\09.equ\09CONFIG_BOARD_96B_WISTRIO,1\0A\09.type\09CONFIG_BOARD_96B_WISTRIO,%object", ""() #23, !dbg !4130, !srcloc !4131
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32L1X\0A\09.equ\09CONFIG_SOC_SERIES_STM32L1X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32L1X,%object", ""() #23, !dbg !4132, !srcloc !4133
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !4134, !srcloc !4135
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !4136, !srcloc !4137
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !4138, !srcloc !4139
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !4140, !srcloc !4141
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32L151XBA\0A\09.equ\09CONFIG_SOC_STM32L151XBA,1\0A\09.type\09CONFIG_SOC_STM32L151XBA,%object", ""() #23, !dbg !4142, !srcloc !4143
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !4144, !srcloc !4145
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !4146, !srcloc !4147
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !4148, !srcloc !4149
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !4150, !srcloc !4151
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !4152, !srcloc !4153
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !4154, !srcloc !4155
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !4156, !srcloc !4157
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !4158, !srcloc !4159
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !4160, !srcloc !4161
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !4162, !srcloc !4163
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !4164, !srcloc !4165
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M3\0A\09.equ\09CONFIG_CPU_CORTEX_M3,1\0A\09.type\09CONFIG_CPU_CORTEX_M3,%object", ""() #23, !dbg !4166, !srcloc !4167
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !4168, !srcloc !4169
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !4170, !srcloc !4171
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !4172, !srcloc !4173
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !4174, !srcloc !4175
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !4176, !srcloc !4177
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !4178, !srcloc !4179
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !4180, !srcloc !4181
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !4182, !srcloc !4183
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !4184, !srcloc !4185
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !4186, !srcloc !4187
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !4188, !srcloc !4189
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !4190, !srcloc !4191
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !4192, !srcloc !4193
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !4194, !srcloc !4195
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !4196, !srcloc !4197
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !4198, !srcloc !4199
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,32\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !4200, !srcloc !4201
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !4202, !srcloc !4203
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !4204, !srcloc !4205
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !4206, !srcloc !4207
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !4208, !srcloc !4209
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !4210, !srcloc !4211
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !4212, !srcloc !4213
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !4214, !srcloc !4215
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !4216, !srcloc !4217
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !4218, !srcloc !4219
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !4220, !srcloc !4221
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !4222, !srcloc !4223
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !4224, !srcloc !4225
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !4226, !srcloc !4227
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !4228, !srcloc !4229
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !4230, !srcloc !4231
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !4232, !srcloc !4233
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !4234, !srcloc !4235
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !4236, !srcloc !4237
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !4238, !srcloc !4239
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !4240, !srcloc !4241
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !4242, !srcloc !4243
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !4244, !srcloc !4245
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4246, !srcloc !4247
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !4248, !srcloc !4249
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !4250, !srcloc !4251
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !4252, !srcloc !4253
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !4254, !srcloc !4255
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !4256, !srcloc !4257
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !4258, !srcloc !4259
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !4260, !srcloc !4261
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !4262, !srcloc !4263
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !4264, !srcloc !4265
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !4266, !srcloc !4267
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !4268, !srcloc !4269
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !4270, !srcloc !4271
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !4272, !srcloc !4273
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !4274, !srcloc !4275
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !4276, !srcloc !4277
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !4278, !srcloc !4279
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,256\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !4280, !srcloc !4281
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !4282, !srcloc !4283
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !4284, !srcloc !4285
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !4286, !srcloc !4287
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !4288, !srcloc !4289
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !4290, !srcloc !4291
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !4292, !srcloc !4293
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !4294, !srcloc !4295
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !4296, !srcloc !4297
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !4298, !srcloc !4299
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !4300, !srcloc !4301
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !4302, !srcloc !4303
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !4304, !srcloc !4305
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !4306, !srcloc !4307
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !4308, !srcloc !4309
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !4310, !srcloc !4311
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !4312, !srcloc !4313
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !4314, !srcloc !4315
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !4316, !srcloc !4317
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !4318, !srcloc !4319
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !4320, !srcloc !4321
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !4322, !srcloc !4323
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !4324, !srcloc !4325
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !4326, !srcloc !4327
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !4328, !srcloc !4329
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !4330, !srcloc !4331
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !4332, !srcloc !4333
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !4334, !srcloc !4335
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4336, !srcloc !4337
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !4338, !srcloc !4339
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !4340, !srcloc !4341
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !4342, !srcloc !4343
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !4344, !srcloc !4345
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !4346, !srcloc !4347
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !4348, !srcloc !4349
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !4350, !srcloc !4351
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !4352, !srcloc !4353
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !4354, !srcloc !4355
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !4356, !srcloc !4357
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !4358, !srcloc !4359
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !4360, !srcloc !4361
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !4362, !srcloc !4363
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !4364, !srcloc !4365
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !4366, !srcloc !4367
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !4368, !srcloc !4369
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !4370, !srcloc !4371
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !4372, !srcloc !4373
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !4374, !srcloc !4375
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !4376, !srcloc !4377
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !4378, !srcloc !4379
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !4380, !srcloc !4381
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !4382, !srcloc !4383
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !4384, !srcloc !4385
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !4386, !srcloc !4387
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,8000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !4388, !srcloc !4389
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !4390, !srcloc !4391
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !4392, !srcloc !4393
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !4394, !srcloc !4395
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !4396, !srcloc !4397
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !4398, !srcloc !4399
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !4400, !srcloc !4401
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !4402, !srcloc !4403
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !4404, !srcloc !4405
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !4406, !srcloc !4407
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !4408, !srcloc !4409
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !4410, !srcloc !4411
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !4412, !srcloc !4413
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !4414, !srcloc !4415
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !4416, !srcloc !4417
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !4418, !srcloc !4419
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !4420, !srcloc !4421
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !4422, !srcloc !4423
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !4424, !srcloc !4425
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !4426, !srcloc !4427
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !4428, !srcloc !4429
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !4430, !srcloc !4431
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !4432, !srcloc !4433
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !4434, !srcloc !4435
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !4436, !srcloc !4437
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !4438, !srcloc !4439
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !4440, !srcloc !4441
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !4442, !srcloc !4443
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !4444, !srcloc !4445
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !4446, !srcloc !4447
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !4448, !srcloc !4449
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !4450, !srcloc !4451
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !4452, !srcloc !4453
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4454, !srcloc !4455
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !4456, !srcloc !4457
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !4458, !srcloc !4459
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !4460, !srcloc !4461
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !4462, !srcloc !4463
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !4464, !srcloc !4465
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !4466, !srcloc !4467
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !4468, !srcloc !4469
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !4470, !srcloc !4471
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !4472, !srcloc !4473
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !4474, !srcloc !4475
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !4476, !srcloc !4477
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !4478, !srcloc !4479
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !4480, !srcloc !4481
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !4482, !srcloc !4483
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !4484, !srcloc !4485
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !4486, !srcloc !4487
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !4488, !srcloc !4489
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !4490, !srcloc !4491
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !4492, !srcloc !4493
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !4494, !srcloc !4495
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !4496, !srcloc !4497
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !4498, !srcloc !4499
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !4500, !srcloc !4501
  ret void, !dbg !4502
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32l1_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !4503 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4505, metadata !DIExpression()), !dbg !4507
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !4508, !srcloc !4517
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !4508
  call void @llvm.dbg.value(metadata i32 %3, metadata !4514, metadata !DIExpression()) #23, !dbg !4518
  call void @llvm.dbg.value(metadata i32 undef, metadata !4515, metadata !DIExpression()) #23, !dbg !4518
  call void @llvm.dbg.value(metadata i32 %3, metadata !4506, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.value(metadata i32 %3, metadata !4519, metadata !DIExpression()) #23, !dbg !4524
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !4526, !srcloc !4527
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !4528
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #25, !dbg !4529
  tail call fastcc void @LL_PWR_SetRegulVoltageScaling() #25, !dbg !4530
  ret i32 0, !dbg !4531
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #13 !dbg !4532 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !4537, metadata !DIExpression()), !dbg !4539
  %2 = bitcast i32* %1 to i8*, !dbg !4540
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !4540
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4538, metadata !DIExpression()), !dbg !4541
  %3 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !4542
  %4 = or i32 %3, 268435456, !dbg !4542
  store volatile i32 %4, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !4542
  %5 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !4543
  %6 = and i32 %5, 268435456, !dbg !4543
  store volatile i32 %6, i32* %1, align 4, !dbg !4544
  %7 = load volatile i32, i32* %1, align 4, !dbg !4545
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !4546
  ret void, !dbg !4546
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_PWR_SetRegulVoltageScaling() unnamed_addr #14 !dbg !4547 {
  call void @llvm.dbg.value(metadata i32 2048, metadata !4550, metadata !DIExpression()), !dbg !4551
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !4552
  %2 = and i32 %1, -6145, !dbg !4552
  %3 = or i32 %2, 2048, !dbg !4552
  store volatile i32 %3, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !4552
  ret void, !dbg !4553
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #12 !dbg !4554 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4556, metadata !DIExpression()), !dbg !4557
  ret i32 0, !dbg !4558
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !4559 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4608, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !4609, metadata !DIExpression()), !dbg !4610
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !4611
  ret void, !dbg !4612
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !4613 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !4630, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !4631, metadata !DIExpression()), !dbg !4633
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !4634
  %4 = load i32, i32* %3, align 4, !dbg !4634
  call void @llvm.dbg.value(metadata i32 %4, metadata !4632, metadata !DIExpression()), !dbg !4633
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #25, !dbg !4635
  ret void, !dbg !4636
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !4637 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4641, metadata !DIExpression()), !dbg !4644
  call void @llvm.dbg.value(metadata i8* %0, metadata !4642, metadata !DIExpression()), !dbg !4644
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !4645
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !4645
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !4643, metadata !DIExpression()), !dbg !4646
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !4646
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !4647
  %5 = bitcast i8* %4 to i32*, !dbg !4647
  %6 = load i32, i32* %5, align 4, !dbg !4647
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !4648
  store i32 %6, i32* %7, align 4, !dbg !4649
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #25, !dbg !4650
  unreachable, !dbg !4651
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !4652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4655, metadata !DIExpression()), !dbg !4656
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #25, !dbg !4657
  ret void, !dbg !4658
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !4659 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4663, metadata !DIExpression()), !dbg !4664
  %2 = icmp sgt i32 %0, -1, !dbg !4665
  br i1 %2, label %3, label %8, !dbg !4667

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4668, !srcloc !4670
  %4 = and i32 %0, 31, !dbg !4671
  %5 = shl nuw i32 1, %4, !dbg !4672
  %6 = lshr i32 %0, 5, !dbg !4673
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !4674
  store volatile i32 %5, i32* %7, align 4, !dbg !4675
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4676, !srcloc !4677
  br label %8, !dbg !4678

8:                                                ; preds = %3, %1
  ret void, !dbg !4679
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !4680 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4682, metadata !DIExpression()), !dbg !4683
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #25, !dbg !4684
  ret void, !dbg !4685
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !4686 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4688, metadata !DIExpression()), !dbg !4689
  %2 = icmp sgt i32 %0, -1, !dbg !4690
  br i1 %2, label %3, label %8, !dbg !4692

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !4693
  %5 = shl nuw i32 1, %4, !dbg !4695
  %6 = lshr i32 %0, 5, !dbg !4696
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !4697
  store volatile i32 %5, i32* %7, align 4, !dbg !4698
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !4699, !srcloc !4703
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !4704, !srcloc !4707
  br label %8, !dbg !4708

8:                                                ; preds = %3, %1
  ret void, !dbg !4709
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !4710 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4714, metadata !DIExpression()), !dbg !4715
  %2 = lshr i32 %0, 5, !dbg !4716
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !4717
  %4 = load volatile i32, i32* %3, align 4, !dbg !4717
  %5 = and i32 %0, 31, !dbg !4718
  %6 = shl nuw i32 1, %5, !dbg !4718
  %7 = and i32 %4, %6, !dbg !4719
  ret i32 %7, !dbg !4720
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !4721 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4725, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i32 %1, metadata !4726, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.value(metadata i32 %2, metadata !4727, metadata !DIExpression()), !dbg !4728
  %4 = add i32 %1, 1, !dbg !4729
  call void @llvm.dbg.value(metadata i32 %4, metadata !4726, metadata !DIExpression()), !dbg !4728
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #25, !dbg !4732
  ret void, !dbg !4733
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !4734 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4738, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata i32 %1, metadata !4739, metadata !DIExpression()), !dbg !4740
  %3 = trunc i32 %1 to i8, !dbg !4741
  %4 = shl i8 %3, 4, !dbg !4741
  %5 = and i32 %0, 15, !dbg !4743
  %6 = add nsw i32 %5, -4, !dbg !4743
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !4743
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !4743
  %9 = icmp slt i32 %0, 0, !dbg !4743
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !4743
  store volatile i8 %4, i8* %10, align 1, !dbg !4741
  ret void, !dbg !4744
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !4745 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4747, metadata !DIExpression()), !dbg !4748
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #24, !dbg !4749
  ret void, !dbg !4750
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !4751 {
  tail call void @z_SysNmiOnReset() #24, !dbg !4753
  tail call void @z_arm_int_exit() #24, !dbg !4754
  ret void, !dbg !4755
}

; Function Attrs: optsize
declare !dbg !4756 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !4757 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !4759 {
  tail call fastcc void @relocate_vector_table() #25, !dbg !4761
  tail call void @z_bss_zero() #24, !dbg !4762
  tail call void @z_data_copy() #24, !dbg !4763
  tail call void @z_arm_interrupt_init() #24, !dbg !4764
  tail call void @z_cstart() #27, !dbg !4765
  unreachable, !dbg !4765
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !4766 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 536870784), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !4767
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !4768, !srcloc !4771
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !4772, !srcloc !4775
  ret void, !dbg !4776
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !4777 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4780, metadata !DIExpression()), !dbg !4781
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !4782
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !4783
  store i32 %0, i32* %3, align 4, !dbg !4784
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !4785
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !4786
  store i32 %4, i32* %5, align 4, !dbg !4787
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4788
  %7 = or i32 %6, 268435456, !dbg !4788
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !4788
  call void @llvm.dbg.value(metadata i32 0, metadata !4789, metadata !DIExpression()) #23, !dbg !4792
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !4794, !srcloc !4795
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !4796
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !4797
  %10 = load i32, i32* %9, align 4, !dbg !4797
  ret i32 %10, !dbg !4798
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #3 !dbg !4799 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4909, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !4910, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata i8* %2, metadata !4911, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !4912, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata i8* %4, metadata !4913, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata i8* %5, metadata !4914, metadata !DIExpression()), !dbg !4917
  call void @llvm.dbg.value(metadata i8* %6, metadata !4915, metadata !DIExpression()), !dbg !4917
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !4918
  call void @llvm.dbg.value(metadata i8* %8, metadata !4916, metadata !DIExpression()), !dbg !4917
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !4919
  %10 = bitcast i8* %9 to i32*, !dbg !4919
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !4920
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !4921
  %12 = bitcast i8* %8 to i32*, !dbg !4922
  store i32 %11, i32* %12, align 4, !dbg !4923
  %13 = ptrtoint i8* %4 to i32, !dbg !4924
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !4925
  %15 = bitcast i8* %14 to i32*, !dbg !4925
  store i32 %13, i32* %15, align 4, !dbg !4926
  %16 = ptrtoint i8* %5 to i32, !dbg !4927
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !4928
  %18 = bitcast i8* %17 to i32*, !dbg !4928
  store i32 %16, i32* %18, align 4, !dbg !4929
  %19 = ptrtoint i8* %6 to i32, !dbg !4930
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !4931
  %21 = bitcast i8* %20 to i32*, !dbg !4931
  store i32 %19, i32* %21, align 4, !dbg !4932
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !4933
  %23 = bitcast i8* %22 to i32*, !dbg !4933
  store i32 16777216, i32* %23, align 4, !dbg !4934
  %24 = ptrtoint i8* %8 to i32, !dbg !4935
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !4936
  store i32 %24, i32* %25, align 8, !dbg !4937
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !4938
  store i32 0, i32* %26, align 4, !dbg !4939
  ret void, !dbg !4940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !4941 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4946, metadata !DIExpression()), !dbg !4952
  call void @llvm.dbg.value(metadata i32 %1, metadata !4947, metadata !DIExpression()), !dbg !4952
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !4953
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !4948, metadata !DIExpression()), !dbg !4952
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !4954
  br i1 %4, label %19, label %5, !dbg !4956

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !4951, metadata !DIExpression()), !dbg !4952
  %6 = icmp eq i32 %0, -22, !dbg !4957
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !4957
  %8 = load i32, i32* %7, align 4, !dbg !4957
  br i1 %6, label %16, label %9, !dbg !4959

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !4957
  %11 = icmp ule i32 %10, %0, !dbg !4957
  %12 = icmp ugt i32 %8, %0, !dbg !4957
  %13 = and i1 %12, %11, !dbg !4957
  %14 = icmp ugt i32 %8, %1, !dbg !4957
  %15 = and i1 %14, %13, !dbg !4957
  br i1 %15, label %18, label %19, !dbg !4957

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !4957
  br i1 %17, label %18, label %19, !dbg !4959

18:                                               ; preds = %9, %16
  br label %19, !dbg !4960

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !4952
  ret i32 %20, !dbg !4962
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !4963 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4967, metadata !DIExpression()), !dbg !4970
  call void @llvm.dbg.value(metadata i8* %1, metadata !4968, metadata !DIExpression()), !dbg !4970
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !4969, metadata !DIExpression()), !dbg !4970
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !4971
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #24, !dbg !4972
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !4973, !srcloc !4974
  unreachable, !dbg !4975
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !4976 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4994, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.value(metadata i32 %1, metadata !4995, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.value(metadata i32 %2, metadata !4996, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !4997, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.value(metadata i32 0, metadata !4998, metadata !DIExpression()), !dbg !5004
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5005
  %9 = and i32 %8, 511, !dbg !5006
  call void @llvm.dbg.value(metadata i32 %9, metadata !4999, metadata !DIExpression()), !dbg !5004
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5007
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5007
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !5008
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5008
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !5003, metadata !DIExpression()), !dbg !5009
  call void @llvm.dbg.value(metadata i32 0, metadata !5010, metadata !DIExpression()) #23, !dbg !5013
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !5015, !srcloc !5016
  call void @llvm.dbg.value(metadata i8* %6, metadata !5001, metadata !DIExpression(DW_OP_deref)), !dbg !5004
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #25, !dbg !5017
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !5002, metadata !DIExpression()), !dbg !5004
  call void @llvm.dbg.value(metadata i8* %5, metadata !5000, metadata !DIExpression(DW_OP_deref)), !dbg !5004
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #25, !dbg !5018
  call void @llvm.dbg.value(metadata i32 %12, metadata !4998, metadata !DIExpression()), !dbg !5004
  %13 = load i8, i8* %5, align 1, !dbg !5019, !range !5021
  call void @llvm.dbg.value(metadata i8 %13, metadata !5000, metadata !DIExpression()), !dbg !5004
  %14 = icmp eq i8 %13, 0, !dbg !5019
  br i1 %14, label %15, label %32, !dbg !5022

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !5023
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #24, !dbg !5024
  %18 = load i8, i8* %6, align 1, !dbg !5025, !range !5021
  call void @llvm.dbg.value(metadata i8 %18, metadata !5001, metadata !DIExpression()), !dbg !5004
  %19 = icmp eq i8 %18, 0, !dbg !5025
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !5027
  %21 = load i32, i32* %20, align 4, !dbg !5027
  br i1 %19, label %27, label %22, !dbg !5028

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !5029
  %24 = icmp eq i32 %23, 0, !dbg !5032
  br i1 %24, label %25, label %31, !dbg !5033

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !5034
  br label %29, !dbg !5036

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !5037
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !5027
  br label %31, !dbg !5039

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #24, !dbg !5039
  br label %32, !dbg !5040

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #23, !dbg !5040
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !5040
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !5040
  ret void, !dbg !5040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #3 !dbg !5041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5046, metadata !DIExpression()), !dbg !5052
  call void @llvm.dbg.value(metadata i32 %1, metadata !5047, metadata !DIExpression()), !dbg !5052
  call void @llvm.dbg.value(metadata i32 %2, metadata !5048, metadata !DIExpression()), !dbg !5052
  call void @llvm.dbg.value(metadata i8* %3, metadata !5049, metadata !DIExpression()), !dbg !5052
  call void @llvm.dbg.value(metadata i8 0, metadata !5050, metadata !DIExpression()), !dbg !5052
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !5051, metadata !DIExpression()), !dbg !5052
  store i8 0, i8* %3, align 1, !dbg !5053
  %5 = icmp ult i32 %2, -16777216, !dbg !5054
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !5056
  br i1 %8, label %16, label %9, !dbg !5056

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !5057
  %11 = icmp eq i32 %10, 0, !dbg !5057
  br i1 %11, label %12, label %13, !dbg !5059

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !5051, metadata !DIExpression()), !dbg !5052
  store i8 1, i8* %3, align 1, !dbg !5062
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !5052
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !5051, metadata !DIExpression()), !dbg !5052
  br label %16, !dbg !5065

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !5052
  ret %struct.__esf* %17, !dbg !5066
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !5067 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5071, metadata !DIExpression()), !dbg !5075
  call void @llvm.dbg.value(metadata i32 %1, metadata !5072, metadata !DIExpression()), !dbg !5075
  call void @llvm.dbg.value(metadata i8* %2, metadata !5073, metadata !DIExpression()), !dbg !5075
  call void @llvm.dbg.value(metadata i32 0, metadata !5074, metadata !DIExpression()), !dbg !5075
  store i8 0, i8* %2, align 1, !dbg !5076
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !5077

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #25, !dbg !5078
  call void @llvm.dbg.value(metadata i32 %5, metadata !5074, metadata !DIExpression()), !dbg !5075
  br label %11, !dbg !5080

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !5081
  call void @llvm.dbg.value(metadata i32 %7, metadata !5074, metadata !DIExpression()), !dbg !5075
  br label %11, !dbg !5082

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #25, !dbg !5083
  call void @llvm.dbg.value(metadata i32 0, metadata !5074, metadata !DIExpression()), !dbg !5075
  br label %11, !dbg !5084

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #25, !dbg !5085
  call void @llvm.dbg.value(metadata i32 0, metadata !5074, metadata !DIExpression()), !dbg !5075
  br label %11, !dbg !5086

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #25, !dbg !5087
  br label %11, !dbg !5088

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !5089
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !5090 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5094, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.value(metadata i8* %1, metadata !5095, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.value(metadata i32 0, metadata !5096, metadata !DIExpression()), !dbg !5097
  store i8 0, i8* %1, align 1, !dbg !5098
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5099
  %4 = and i32 %3, 2, !dbg !5101
  %5 = icmp eq i32 %4, 0, !dbg !5102
  br i1 %5, label %6, label %33, !dbg !5103

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5104
  %8 = icmp sgt i32 %7, -1, !dbg !5106
  br i1 %8, label %9, label %33, !dbg !5107

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !5108
  %11 = and i32 %10, 1073741824, !dbg !5110
  %12 = icmp eq i32 %11, 0, !dbg !5111
  br i1 %12, label %33, label %13, !dbg !5112

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #25, !dbg !5113
  br i1 %14, label %15, label %18, !dbg !5116

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !5117
  %17 = load i32, i32* %16, align 4, !dbg !5117
  call void @llvm.dbg.value(metadata i32 %17, metadata !5096, metadata !DIExpression()), !dbg !5097
  br label %33, !dbg !5119

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5120
  %20 = and i32 %19, 255, !dbg !5122
  %21 = icmp eq i32 %20, 0, !dbg !5123
  br i1 %21, label %24, label %22, !dbg !5124

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !5125
  call void @llvm.dbg.value(metadata i32 %23, metadata !5096, metadata !DIExpression()), !dbg !5097
  br label %33, !dbg !5127

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5128
  %26 = and i32 %25, 65280, !dbg !5130
  %27 = icmp eq i32 %26, 0, !dbg !5131
  br i1 %27, label %29, label %28, !dbg !5132

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #25, !dbg !5133
  call void @llvm.dbg.value(metadata i32 0, metadata !5096, metadata !DIExpression()), !dbg !5097
  br label %33, !dbg !5135

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5136
  %31 = icmp ult i32 %30, 65536, !dbg !5138
  br i1 %31, label %33, label %32, !dbg !5139

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #25, !dbg !5140
  call void @llvm.dbg.value(metadata i32 0, metadata !5096, metadata !DIExpression()), !dbg !5097
  br label %33, !dbg !5142

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !5097
  call void @llvm.dbg.value(metadata i32 %34, metadata !5096, metadata !DIExpression()), !dbg !5097
  ret i32 %34, !dbg !5143
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !5144 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5146, metadata !DIExpression()), !dbg !5159
  call void @llvm.dbg.value(metadata i32 %1, metadata !5147, metadata !DIExpression()), !dbg !5159
  call void @llvm.dbg.value(metadata i8* %2, metadata !5148, metadata !DIExpression()), !dbg !5159
  call void @llvm.dbg.value(metadata i32 0, metadata !5149, metadata !DIExpression()), !dbg !5159
  call void @llvm.dbg.value(metadata i32 -22, metadata !5150, metadata !DIExpression()), !dbg !5159
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5160
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5162
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5164
  %7 = and i32 %6, 2, !dbg !5165
  %8 = icmp eq i32 %7, 0, !dbg !5166
  br i1 %8, label %19, label %9, !dbg !5167

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !5168
  call void @llvm.dbg.value(metadata i32 %10, metadata !5151, metadata !DIExpression()), !dbg !5169
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5170
  %12 = and i32 %11, 128, !dbg !5172
  %13 = icmp eq i32 %12, 0, !dbg !5173
  br i1 %13, label %19, label %14, !dbg !5174

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !5150, metadata !DIExpression()), !dbg !5159
  %15 = icmp eq i32 %1, 0, !dbg !5175
  br i1 %15, label %19, label %16, !dbg !5178

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5179
  %18 = and i32 %17, -129, !dbg !5179
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5179
  br label %19, !dbg !5181

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !5159
  call void @llvm.dbg.value(metadata i32 %20, metadata !5150, metadata !DIExpression()), !dbg !5159
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5182
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5184
  %23 = and i32 %22, 16, !dbg !5185
  %24 = icmp eq i32 %23, 0, !dbg !5185
  br i1 %24, label %25, label %29, !dbg !5186

25:                                               ; preds = %19
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5187
  %27 = and i32 %26, 2, !dbg !5188
  %28 = icmp eq i32 %27, 0, !dbg !5188
  br i1 %28, label %38, label %29, !dbg !5189

29:                                               ; preds = %25, %19
  %30 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5190
  %31 = and i32 %30, 2048, !dbg !5191
  %32 = icmp eq i32 %31, 0, !dbg !5191
  br i1 %32, label %38, label %33, !dbg !5192

33:                                               ; preds = %29
  %34 = ptrtoint %struct.__esf* %0 to i32, !dbg !5193
  %35 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %34) #24, !dbg !5194
  call void @llvm.dbg.value(metadata i32 %35, metadata !5154, metadata !DIExpression()), !dbg !5195
  %36 = icmp eq i32 %35, 0, !dbg !5196
  br i1 %36, label %38, label %37, !dbg !5198

37:                                               ; preds = %33
  call void @llvm.dbg.value(metadata i32 %35, metadata !5199, metadata !DIExpression()) #23, !dbg !5202
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %35) #23, !dbg !5205, !srcloc !5206
  call void @llvm.dbg.value(metadata i32 2, metadata !5149, metadata !DIExpression()), !dbg !5159
  br label %38, !dbg !5207

38:                                               ; preds = %37, %33, %29, %25
  %39 = phi i32 [ 0, %29 ], [ 0, %25 ], [ 2, %37 ], [ 0, %33 ], !dbg !5159
  call void @llvm.dbg.value(metadata i32 %39, metadata !5149, metadata !DIExpression()), !dbg !5159
  %40 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5208
  %41 = or i32 %40, 255, !dbg !5208
  store volatile i32 %41, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5208
  store i8 0, i8* %2, align 1, !dbg !5209
  ret i32 %39, !dbg !5210
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !5211 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5215, metadata !DIExpression()), !dbg !5222
  call void @llvm.dbg.value(metadata i32 %0, metadata !5216, metadata !DIExpression()), !dbg !5222
  call void @llvm.dbg.value(metadata i8* %1, metadata !5217, metadata !DIExpression()), !dbg !5222
  call void @llvm.dbg.value(metadata i32 0, metadata !5218, metadata !DIExpression()), !dbg !5222
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5223
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5225
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5227
  %6 = and i32 %5, 512, !dbg !5228
  %7 = icmp eq i32 %6, 0, !dbg !5228
  br i1 %7, label %18, label %8, !dbg !5229

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !5230
  call void @llvm.dbg.value(metadata i32 %9, metadata !5219, metadata !DIExpression()), !dbg !5231
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5232
  %11 = and i32 %10, 32768, !dbg !5234
  %12 = icmp ne i32 %11, 0, !dbg !5235
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !5236
  br i1 %14, label %15, label %18, !dbg !5236

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5237
  %17 = and i32 %16, -32769, !dbg !5237
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5237
  br label %18, !dbg !5241

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5242
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5244
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5246
  %22 = or i32 %21, 65280, !dbg !5246
  store volatile i32 %22, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5246
  store i8 0, i8* %1, align 1, !dbg !5247
  ret void, !dbg !5248
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #14 !dbg !5249 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5255, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata i32 0, metadata !5256, metadata !DIExpression()), !dbg !5257
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5258
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5260
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5262
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5264
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5266
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5268
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5270
  %8 = or i32 %7, -65536, !dbg !5270
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !5270
  ret void, !dbg !5271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !5272 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !5276, metadata !DIExpression()), !dbg !5278
  call void @llvm.dbg.value(metadata i8* %0, metadata !5277, metadata !DIExpression()), !dbg !5278
  store i8 0, i8* %0, align 1, !dbg !5279
  ret void, !dbg !5280
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !5281 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !5285, metadata !DIExpression()), !dbg !5288
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !5289
  %3 = load i32, i32* %2, align 4, !dbg !5289
  %4 = inttoptr i32 %3 to i16*, !dbg !5290
  call void @llvm.dbg.value(metadata i16* %4, metadata !5286, metadata !DIExpression()), !dbg !5288
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5291
  %6 = or i32 %5, 256, !dbg !5291
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5291
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5292, !srcloc !5295
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5296, !srcloc !5299
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !5300
  %8 = load i16, i16* %7, align 2, !dbg !5301
  call void @llvm.dbg.value(metadata i16 %8, metadata !5287, metadata !DIExpression()), !dbg !5288
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5302
  %10 = and i32 %9, -257, !dbg !5302
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5302
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5303, !srcloc !5295
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5305, !srcloc !5299
  %11 = icmp eq i16 %8, -8446, !dbg !5307
  ret i1 %11, !dbg !5309
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !5310 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5311
  %2 = or i32 %1, 16, !dbg !5311
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !5311
  ret void, !dbg !5312
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !5313 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5316, metadata !DIExpression()), !dbg !5317
  br label %1, !dbg !5318

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5316, metadata !DIExpression()), !dbg !5317
  tail call fastcc void @__NVIC_SetPriority.11(i32 noundef %2) #25, !dbg !5320
  %3 = add nuw nsw i32 %2, 1, !dbg !5323
  call void @llvm.dbg.value(metadata i32 %3, metadata !5316, metadata !DIExpression()), !dbg !5317
  %4 = icmp eq i32 %3, 45, !dbg !5324
  br i1 %4, label %5, label %1, !dbg !5318, !llvm.loop !5325

5:                                                ; preds = %1
  ret void, !dbg !5327
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.11(i32 noundef %0) unnamed_addr #14 !dbg !5328 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5330, metadata !DIExpression()), !dbg !5332
  call void @llvm.dbg.value(metadata i32 1, metadata !5331, metadata !DIExpression()), !dbg !5332
  %2 = and i32 %0, 15, !dbg !5333
  %3 = add nsw i32 %2, -4, !dbg !5333
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !5333
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5333
  %6 = icmp slt i32 %0, 0, !dbg !5333
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !5333
  store volatile i8 16, i8* %7, align 1, !dbg !5334
  ret void, !dbg !5336
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !5337 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5443, metadata !DIExpression()), !dbg !5444
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !5445
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !5447
  br i1 %3, label %4, label %12, !dbg !5448

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !5449, !srcloc !5463
  call void @llvm.dbg.value(metadata i32 %5, metadata !5454, metadata !DIExpression()) #23, !dbg !5464
  %6 = icmp eq i32 %5, 0, !dbg !5465
  br i1 %6, label %12, label %7, !dbg !5466

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5467
  %9 = or i32 %8, 268435456, !dbg !5467
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5467
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5469
  %11 = and i32 %10, -32769, !dbg !5469
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !5469
  br label %12, !dbg !5470

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !5471
  ret void, !dbg !5472
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !5473 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #24, !dbg !5474
  ret void, !dbg !5475
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !218 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !342, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i8 0, metadata !343, metadata !DIExpression()), !dbg !5476
  call void @llvm.dbg.value(metadata i32 64, metadata !345, metadata !DIExpression()), !dbg !5476
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !5477
  %3 = load i32, i32* %2, align 4, !dbg !5477
  %4 = add i32 %3, -64, !dbg !5479
  call void @llvm.dbg.value(metadata i32 %4, metadata !344, metadata !DIExpression()), !dbg !5476
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !5480
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !5481
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !5482
  call void @llvm.dbg.value(metadata i8 1, metadata !343, metadata !DIExpression()), !dbg !5476
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #24, !dbg !5483
  ret void, !dbg !5484
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !5485 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5486
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !5487, !srcloc !5490
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !5491, !srcloc !5494
  ret void, !dbg !5495
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !5496 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !5497, !srcloc !5500
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !5501
  ret void, !dbg !5502
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #13 !dbg !5503 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5518, metadata !DIExpression()), !dbg !5522
  call void @llvm.dbg.value(metadata i8 %1, metadata !5519, metadata !DIExpression()), !dbg !5522
  call void @llvm.dbg.value(metadata i32 %2, metadata !5520, metadata !DIExpression()), !dbg !5522
  call void @llvm.dbg.value(metadata i32 %3, metadata !5521, metadata !DIExpression()), !dbg !5522
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !5523
  ret void, !dbg !5525
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #13 !dbg !5526 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5531, metadata !DIExpression()), !dbg !5536
  call void @llvm.dbg.value(metadata i8 %1, metadata !5532, metadata !DIExpression()), !dbg !5536
  call void @llvm.dbg.value(metadata i32 undef, metadata !5533, metadata !DIExpression()), !dbg !5536
  call void @llvm.dbg.value(metadata i32 undef, metadata !5534, metadata !DIExpression()), !dbg !5536
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !5537
  call void @llvm.dbg.value(metadata i8 %3, metadata !5535, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5536
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #25, !dbg !5538
  call void @llvm.dbg.value(metadata i32 %4, metadata !5535, metadata !DIExpression()), !dbg !5536
  %5 = trunc i32 %4 to i8, !dbg !5539
  store i8 %5, i8* @static_regions_num, align 1, !dbg !5540
  ret void, !dbg !5541
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #13 !dbg !5542 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5546, metadata !DIExpression()), !dbg !5552
  call void @llvm.dbg.value(metadata i8 %1, metadata !5547, metadata !DIExpression()), !dbg !5552
  call void @llvm.dbg.value(metadata i8 %2, metadata !5548, metadata !DIExpression()), !dbg !5552
  call void @llvm.dbg.value(metadata i1 %3, metadata !5549, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5552
  %5 = zext i8 %2 to i32, !dbg !5553
  call void @llvm.dbg.value(metadata i32 %5, metadata !5551, metadata !DIExpression()), !dbg !5552
  call void @llvm.dbg.value(metadata i32 0, metadata !5550, metadata !DIExpression()), !dbg !5552
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !5551, metadata !DIExpression()), !dbg !5552
  call void @llvm.dbg.value(metadata i32 0, metadata !5550, metadata !DIExpression()), !dbg !5552
  %7 = icmp eq i8 %1, 0, !dbg !5554
  br i1 %7, label %29, label %8, !dbg !5557

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5551, metadata !DIExpression()), !dbg !5552
  call void @llvm.dbg.value(metadata i32 %10, metadata !5550, metadata !DIExpression()), !dbg !5552
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !5558
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !5561
  %13 = load i32, i32* %12, align 4, !dbg !5561
  %14 = icmp eq i32 %13, 0, !dbg !5562
  br i1 %14, label %25, label %15, !dbg !5563

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !5564

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !5566
  %18 = icmp eq i32 %17, 0, !dbg !5566
  br i1 %18, label %29, label %19, !dbg !5567

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !5568
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #25, !dbg !5569
  call void @llvm.dbg.value(metadata i32 %21, metadata !5551, metadata !DIExpression()), !dbg !5552
  %22 = icmp eq i32 %21, -22, !dbg !5570
  br i1 %22, label %29, label %23, !dbg !5572

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !5573
  call void @llvm.dbg.value(metadata i32 %24, metadata !5551, metadata !DIExpression()), !dbg !5552
  br label %25, !dbg !5574

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !5552
  call void @llvm.dbg.value(metadata i32 %26, metadata !5551, metadata !DIExpression()), !dbg !5552
  %27 = add nuw nsw i32 %10, 1, !dbg !5575
  call void @llvm.dbg.value(metadata i32 %27, metadata !5550, metadata !DIExpression()), !dbg !5552
  %28 = icmp eq i32 %27, %6, !dbg !5554
  br i1 %28, label %29, label %8, !dbg !5557, !llvm.loop !5576

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !5552
  ret i32 %30, !dbg !5578
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !5579 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5583, metadata !DIExpression()), !dbg !5585
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !5586
  %3 = load i32, i32* %2, align 4, !dbg !5586
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !5587, !range !5588
  %5 = icmp ult i32 %4, 2, !dbg !5587
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !5589
  br i1 %7, label %8, label %15, !dbg !5589

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !5590
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !5591
  %11 = load i32, i32* %10, align 4, !dbg !5591
  %12 = and i32 %11, %9, !dbg !5592
  %13 = icmp eq i32 %12, 0, !dbg !5593
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !5584, metadata !DIExpression()), !dbg !5585
  ret i32 %16, !dbg !5594
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #13 !dbg !5595 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !5599, metadata !DIExpression()), !dbg !5602
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !5600, metadata !DIExpression()), !dbg !5602
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !5603
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !5603
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !5601, metadata !DIExpression()), !dbg !5604
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !5605
  %6 = load i32, i32* %5, align 4, !dbg !5605
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !5606
  store i32 %6, i32* %7, align 4, !dbg !5607
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !5608
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !5609
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !5610
  %11 = load i32, i32* %10, align 4, !dbg !5610
  call fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* noundef nonnull %8, %union.anon.1* noundef nonnull %9, i32 noundef %11) #25, !dbg !5611
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #25, !dbg !5612
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !5613
  ret i32 %12, !dbg !5614
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%union.anon.1* nocapture noundef writeonly %0, %union.anon.1* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !5615 {
  call void @llvm.dbg.value(metadata %union.anon.1* %0, metadata !5622, metadata !DIExpression()), !dbg !5626
  call void @llvm.dbg.value(metadata %union.anon.1* %1, metadata !5623, metadata !DIExpression()), !dbg !5626
  call void @llvm.dbg.value(metadata i32 undef, metadata !5624, metadata !DIExpression()), !dbg !5626
  call void @llvm.dbg.value(metadata i32 %2, metadata !5625, metadata !DIExpression()), !dbg !5626
  %4 = getelementptr inbounds %union.anon.1, %union.anon.1* %1, i32 0, i32 0, !dbg !5627
  %5 = load i32, i32* %4, align 4, !dbg !5627
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #25, !dbg !5628
  %7 = or i32 %6, %5, !dbg !5629
  %8 = getelementptr inbounds %union.anon.1, %union.anon.1* %0, i32 0, i32 0, !dbg !5630
  store i32 %7, i32* %8, align 4, !dbg !5631
  ret void, !dbg !5632
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !5633 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5637, metadata !DIExpression()), !dbg !5639
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !5638, metadata !DIExpression()), !dbg !5639
  %3 = zext i8 %0 to i32, !dbg !5640
  %4 = icmp ugt i8 %0, 7, !dbg !5642
  br i1 %4, label %6, label %5, !dbg !5643

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #25, !dbg !5644
  br label %6, !dbg !5645

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !5639
  ret i32 %7, !dbg !5646
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !5647 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5651, metadata !DIExpression()), !dbg !5653
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !5652, metadata !DIExpression()), !dbg !5653
  tail call fastcc void @set_region_number(i32 noundef %0) #25, !dbg !5654
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !5655
  %4 = load i32, i32* %3, align 4, !dbg !5655
  %5 = and i32 %4, -32, !dbg !5656
  %6 = or i32 %5, %0, !dbg !5657
  %7 = or i32 %6, 16, !dbg !5657
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !5658
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !5659
  %9 = load i32, i32* %8, align 4, !dbg !5659
  %10 = or i32 %9, 1, !dbg !5660
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !5661
  ret void, !dbg !5662
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !5663 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5666, metadata !DIExpression()), !dbg !5667
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !5668
  ret void, !dbg !5669
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !5670 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5674, metadata !DIExpression()), !dbg !5675
  %2 = icmp ult i32 %0, 33, !dbg !5676
  br i1 %2, label %11, label %3, !dbg !5678

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !5679
  br i1 %4, label %11, label %5, !dbg !5681

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !5682
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !5683, !range !5588
  %8 = mul nsw i32 %7, -2, !dbg !5684
  %9 = add nsw i32 %8, 62, !dbg !5684
  %10 = and i32 %9, 62, !dbg !5685
  br label %11, !dbg !5686

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !5675
  ret i32 %12, !dbg !5687
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #13 !dbg !5688 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5692, metadata !DIExpression()), !dbg !5694
  call void @llvm.dbg.value(metadata i8 %1, metadata !5693, metadata !DIExpression()), !dbg !5694
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #25, !dbg !5695
  ret void, !dbg !5697
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #13 !dbg !5698 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !5702, metadata !DIExpression()), !dbg !5709
  call void @llvm.dbg.value(metadata i8 %1, metadata !5703, metadata !DIExpression()), !dbg !5709
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !5710
  call void @llvm.dbg.value(metadata i8 %3, metadata !5704, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5709
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #25, !dbg !5711
  call void @llvm.dbg.value(metadata i32 %4, metadata !5704, metadata !DIExpression()), !dbg !5709
  %5 = icmp ne i32 %4, -22, !dbg !5712
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !5713
  call void @llvm.dbg.value(metadata i32 %4, metadata !5705, metadata !DIExpression()), !dbg !5714
  br i1 %7, label %8, label %12, !dbg !5713

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5705, metadata !DIExpression()), !dbg !5714
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #25, !dbg !5715
  %10 = add i32 %9, 1, !dbg !5718
  call void @llvm.dbg.value(metadata i32 %10, metadata !5705, metadata !DIExpression()), !dbg !5714
  %11 = icmp eq i32 %10, 8, !dbg !5719
  br i1 %11, label %12, label %8, !dbg !5720, !llvm.loop !5721

12:                                               ; preds = %8, %2
  ret void, !dbg !5723
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !5724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5727, metadata !DIExpression()), !dbg !5728
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !5729
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !5730
  ret void, !dbg !5731
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !5732 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !5737
  %2 = icmp ugt i32 %1, 8, !dbg !5739
  br i1 %2, label %14, label %3, !dbg !5740

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #25, !dbg !5741
  call void @llvm.dbg.value(metadata i32 0, metadata !5736, metadata !DIExpression()), !dbg !5742
  %4 = icmp eq i32 %1, 0, !dbg !5743
  br i1 %4, label %12, label %5, !dbg !5746

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !5746

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !5736, metadata !DIExpression()), !dbg !5742
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !5747
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #25, !dbg !5749
  %10 = add nuw i32 %8, 1, !dbg !5750
  call void @llvm.dbg.value(metadata i32 %10, metadata !5736, metadata !DIExpression()), !dbg !5742
  %11 = icmp eq i32 %10, %1, !dbg !5743
  br i1 %11, label %12, label %7, !dbg !5746, !llvm.loop !5751

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !5753
  store i8 %13, i8* @static_regions_num, align 1, !dbg !5754
  tail call void @arm_core_mpu_enable() #25, !dbg !5755
  br label %14, !dbg !5756

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !5742
  ret i32 %15, !dbg !5757
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !5758 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5765, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i8* %1, metadata !5766, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i8* %0, metadata !5767, metadata !DIExpression()), !dbg !5768
  %3 = load i8, i8* %1, align 1, !dbg !5769
  %4 = icmp eq i8 %3, 0, !dbg !5770
  br i1 %4, label %13, label %5, !dbg !5771

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !5765, metadata !DIExpression()), !dbg !5768
  call void @llvm.dbg.value(metadata i8* %8, metadata !5766, metadata !DIExpression()), !dbg !5768
  store i8 %6, i8* %7, align 1, !dbg !5772
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !5774
  call void @llvm.dbg.value(metadata i8* %9, metadata !5765, metadata !DIExpression()), !dbg !5768
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5775
  call void @llvm.dbg.value(metadata i8* %10, metadata !5766, metadata !DIExpression()), !dbg !5768
  %11 = load i8, i8* %10, align 1, !dbg !5769
  %12 = icmp eq i8 %11, 0, !dbg !5770
  br i1 %12, label %13, label %5, !dbg !5771, !llvm.loop !5776

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !5778
  ret i8* %0, !dbg !5779
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !5780 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5784, metadata !DIExpression()), !dbg !5788
  call void @llvm.dbg.value(metadata i8* %1, metadata !5785, metadata !DIExpression()), !dbg !5788
  call void @llvm.dbg.value(metadata i32 %2, metadata !5786, metadata !DIExpression()), !dbg !5788
  call void @llvm.dbg.value(metadata i8* %0, metadata !5787, metadata !DIExpression()), !dbg !5788
  %4 = icmp eq i32 %2, 0, !dbg !5789
  br i1 %4, label %22, label %5, !dbg !5790

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !5784, metadata !DIExpression()), !dbg !5788
  call void @llvm.dbg.value(metadata i32 %7, metadata !5786, metadata !DIExpression()), !dbg !5788
  call void @llvm.dbg.value(metadata i8* %8, metadata !5785, metadata !DIExpression()), !dbg !5788
  %9 = load i8, i8* %8, align 1, !dbg !5791
  %10 = icmp eq i8 %9, 0, !dbg !5792
  br i1 %10, label %16, label %11, !dbg !5793

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !5794
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5796
  call void @llvm.dbg.value(metadata i8* %12, metadata !5785, metadata !DIExpression()), !dbg !5788
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !5797
  call void @llvm.dbg.value(metadata i8* %13, metadata !5784, metadata !DIExpression()), !dbg !5788
  %14 = add i32 %7, -1, !dbg !5798
  call void @llvm.dbg.value(metadata i32 %14, metadata !5786, metadata !DIExpression()), !dbg !5788
  %15 = icmp eq i32 %14, 0, !dbg !5789
  br i1 %15, label %22, label %5, !dbg !5790, !llvm.loop !5799

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !5784, metadata !DIExpression()), !dbg !5788
  call void @llvm.dbg.value(metadata i32 %18, metadata !5786, metadata !DIExpression()), !dbg !5788
  store i8 0, i8* %17, align 1, !dbg !5801
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !5803
  call void @llvm.dbg.value(metadata i8* %19, metadata !5784, metadata !DIExpression()), !dbg !5788
  %20 = add i32 %18, -1, !dbg !5804
  call void @llvm.dbg.value(metadata i32 %20, metadata !5786, metadata !DIExpression()), !dbg !5788
  %21 = icmp eq i32 %20, 0, !dbg !5805
  br i1 %21, label %22, label %16, !dbg !5806, !llvm.loop !5807

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !5809
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !5810 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5814, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.value(metadata i32 %1, metadata !5815, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.value(metadata i32 %1, metadata !5816, metadata !DIExpression()), !dbg !5817
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !5818

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !5814, metadata !DIExpression()), !dbg !5817
  %6 = load i8, i8* %5, align 1, !dbg !5819
  %7 = icmp eq i8 %6, %3, !dbg !5820
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !5821
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !5822
  call void @llvm.dbg.value(metadata i8* %10, metadata !5814, metadata !DIExpression()), !dbg !5817
  br i1 %9, label %11, label %4, !dbg !5821, !llvm.loop !5824

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !5826
  ret i8* %12, !dbg !5827
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !5828 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5830, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.value(metadata i32 %1, metadata !5831, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.value(metadata i8* null, metadata !5832, metadata !DIExpression()), !dbg !5833
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !5834

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !5833
  call void @llvm.dbg.value(metadata i8* %6, metadata !5832, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.value(metadata i8* %5, metadata !5830, metadata !DIExpression()), !dbg !5833
  %7 = load i8, i8* %5, align 1, !dbg !5835
  %8 = icmp eq i8 %7, %3, !dbg !5838
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !5839
  call void @llvm.dbg.value(metadata i8* %9, metadata !5832, metadata !DIExpression()), !dbg !5833
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !5840
  call void @llvm.dbg.value(metadata i8* %10, metadata !5830, metadata !DIExpression()), !dbg !5833
  %11 = icmp eq i8 %7, 0, !dbg !5841
  br i1 %11, label %12, label %4, !dbg !5841, !llvm.loop !5842

12:                                               ; preds = %4
  ret i8* %9, !dbg !5844
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #18 !dbg !5845 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5849, metadata !DIExpression()), !dbg !5851
  call void @llvm.dbg.value(metadata i32 0, metadata !5850, metadata !DIExpression()), !dbg !5851
  %2 = load i8, i8* %0, align 1, !dbg !5852
  %3 = icmp eq i8 %2, 0, !dbg !5853
  br i1 %3, label %11, label %4, !dbg !5854

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5850, metadata !DIExpression()), !dbg !5851
  call void @llvm.dbg.value(metadata i8* %6, metadata !5849, metadata !DIExpression()), !dbg !5851
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !5855
  call void @llvm.dbg.value(metadata i8* %7, metadata !5849, metadata !DIExpression()), !dbg !5851
  %8 = add i32 %5, 1, !dbg !5857
  call void @llvm.dbg.value(metadata i32 %8, metadata !5850, metadata !DIExpression()), !dbg !5851
  %9 = load i8, i8* %7, align 1, !dbg !5852
  %10 = icmp eq i8 %9, 0, !dbg !5853
  br i1 %10, label %11, label %4, !dbg !5854, !llvm.loop !5858

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !5851
  ret i32 %12, !dbg !5860
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #18 !dbg !5861 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5865, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata i32 %1, metadata !5866, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata i32 0, metadata !5867, metadata !DIExpression()), !dbg !5868
  %3 = load i8, i8* %0, align 1, !dbg !5869
  %4 = icmp ne i8 %3, 0, !dbg !5870
  %5 = icmp ne i32 %1, 0, !dbg !5871
  %6 = and i1 %4, %5, !dbg !5871
  br i1 %6, label %7, label %16, !dbg !5872

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !5867, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.value(metadata i8* %9, metadata !5865, metadata !DIExpression()), !dbg !5868
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !5873
  call void @llvm.dbg.value(metadata i8* %10, metadata !5865, metadata !DIExpression()), !dbg !5868
  %11 = add nuw i32 %8, 1, !dbg !5875
  call void @llvm.dbg.value(metadata i32 %11, metadata !5867, metadata !DIExpression()), !dbg !5868
  %12 = load i8, i8* %10, align 1, !dbg !5869
  %13 = icmp ne i8 %12, 0, !dbg !5870
  %14 = icmp ult i32 %11, %1, !dbg !5871
  %15 = select i1 %13, i1 %14, i1 false, !dbg !5871
  br i1 %15, label %7, label %16, !dbg !5872, !llvm.loop !5876

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !5868
  ret i32 %17, !dbg !5878
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #18 !dbg !5879 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5883, metadata !DIExpression()), !dbg !5885
  call void @llvm.dbg.value(metadata i8* %1, metadata !5884, metadata !DIExpression()), !dbg !5885
  %3 = load i8, i8* %0, align 1, !dbg !5886
  %4 = load i8, i8* %1, align 1, !dbg !5887
  %5 = icmp ne i8 %3, %4, !dbg !5888
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !5889
  br i1 %7, label %18, label %8, !dbg !5889

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !5884, metadata !DIExpression()), !dbg !5885
  call void @llvm.dbg.value(metadata i8* %10, metadata !5883, metadata !DIExpression()), !dbg !5885
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5890
  call void @llvm.dbg.value(metadata i8* %11, metadata !5883, metadata !DIExpression()), !dbg !5885
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !5892
  call void @llvm.dbg.value(metadata i8* %12, metadata !5884, metadata !DIExpression()), !dbg !5885
  %13 = load i8, i8* %11, align 1, !dbg !5886
  %14 = load i8, i8* %12, align 1, !dbg !5887
  %15 = icmp ne i8 %13, %14, !dbg !5888
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !5889
  br i1 %17, label %18, label %8, !dbg !5889, !llvm.loop !5893

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !5886
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !5887
  %21 = zext i8 %19 to i32, !dbg !5896
  %22 = zext i8 %20 to i32, !dbg !5897
  %23 = sub nsw i32 %21, %22, !dbg !5898
  ret i32 %23, !dbg !5899
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !5900 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5904, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i8* %1, metadata !5905, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i32 %2, metadata !5906, metadata !DIExpression()), !dbg !5907
  %4 = icmp eq i32 %2, 0, !dbg !5908
  br i1 %4, label %23, label %5, !dbg !5908

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !5906, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i8* %7, metadata !5905, metadata !DIExpression()), !dbg !5907
  call void @llvm.dbg.value(metadata i8* %8, metadata !5904, metadata !DIExpression()), !dbg !5907
  %9 = load i8, i8* %8, align 1, !dbg !5909
  %10 = load i8, i8* %7, align 1, !dbg !5910
  %11 = icmp ne i8 %9, %10, !dbg !5911
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !5912
  br i1 %13, label %19, label %14, !dbg !5912

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5913
  call void @llvm.dbg.value(metadata i8* %15, metadata !5904, metadata !DIExpression()), !dbg !5907
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !5915
  call void @llvm.dbg.value(metadata i8* %16, metadata !5905, metadata !DIExpression()), !dbg !5907
  %17 = add i32 %6, -1, !dbg !5916
  call void @llvm.dbg.value(metadata i32 %17, metadata !5906, metadata !DIExpression()), !dbg !5907
  %18 = icmp eq i32 %17, 0, !dbg !5908
  br i1 %18, label %23, label %5, !dbg !5908, !llvm.loop !5917

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !5920
  %21 = zext i8 %10 to i32, !dbg !5921
  %22 = sub nsw i32 %20, %21, !dbg !5922
  br label %23, !dbg !5923

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !5923
  ret i32 %24, !dbg !5924
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #11 !dbg !5925 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5930, metadata !DIExpression()), !dbg !5935
  call void @llvm.dbg.value(metadata i8* %1, metadata !5931, metadata !DIExpression()), !dbg !5935
  call void @llvm.dbg.value(metadata i8** %2, metadata !5932, metadata !DIExpression()), !dbg !5935
  %4 = icmp eq i8* %0, null, !dbg !5936
  br i1 %4, label %5, label %7, !dbg !5936

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !5937
  br label %7, !dbg !5936

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !5936
  call void @llvm.dbg.value(metadata i8* %8, metadata !5933, metadata !DIExpression()), !dbg !5935
  %9 = load i8, i8* %8, align 1, !dbg !5938
  %10 = icmp eq i8 %9, 0, !dbg !5938
  br i1 %10, label %33, label %11, !dbg !5939

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !5933, metadata !DIExpression()), !dbg !5935
  %14 = zext i8 %12 to i32, !dbg !5938
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #25, !dbg !5940
  %16 = icmp eq i8* %15, null, !dbg !5939
  br i1 %16, label %21, label %17, !dbg !5941

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !5942
  call void @llvm.dbg.value(metadata i8* %18, metadata !5933, metadata !DIExpression()), !dbg !5935
  %19 = load i8, i8* %18, align 1, !dbg !5938
  %20 = icmp eq i8 %19, 0, !dbg !5938
  br i1 %20, label %33, label %11, !dbg !5939, !llvm.loop !5944

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !5934, metadata !DIExpression()), !dbg !5935
  %24 = zext i8 %22 to i32, !dbg !5946
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #25, !dbg !5947
  %26 = icmp eq i8* %25, null, !dbg !5948
  br i1 %26, label %27, label %31, !dbg !5949

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !5950
  call void @llvm.dbg.value(metadata i8* %28, metadata !5934, metadata !DIExpression()), !dbg !5935
  %29 = load i8, i8* %28, align 1, !dbg !5946
  %30 = icmp eq i8 %29, 0, !dbg !5946
  br i1 %30, label %33, label %21, !dbg !5952, !llvm.loop !5953

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !5955
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !5958
  br label %33, !dbg !5959

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !5935
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !5935
  store i8* %34, i8** %2, align 4, !dbg !5935
  ret i8* %35, !dbg !5960
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !5961 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5963, metadata !DIExpression()), !dbg !5965
  call void @llvm.dbg.value(metadata i8* %1, metadata !5964, metadata !DIExpression()), !dbg !5965
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !5966
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !5967
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #25, !dbg !5968
  ret i8* %0, !dbg !5969
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !5970 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5972, metadata !DIExpression()), !dbg !5977
  call void @llvm.dbg.value(metadata i8* %1, metadata !5973, metadata !DIExpression()), !dbg !5977
  call void @llvm.dbg.value(metadata i32 %2, metadata !5974, metadata !DIExpression()), !dbg !5977
  call void @llvm.dbg.value(metadata i8* %0, metadata !5975, metadata !DIExpression()), !dbg !5977
  %4 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !5978
  call void @llvm.dbg.value(metadata i32 %4, metadata !5976, metadata !DIExpression()), !dbg !5977
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !5979
  call void @llvm.dbg.value(metadata i8* %5, metadata !5972, metadata !DIExpression()), !dbg !5977
  call void @llvm.dbg.value(metadata i8* %1, metadata !5973, metadata !DIExpression()), !dbg !5977
  call void @llvm.dbg.value(metadata i32 %2, metadata !5974, metadata !DIExpression()), !dbg !5977
  call void @llvm.dbg.value(metadata i32 %2, metadata !5974, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5977
  %6 = icmp eq i32 %2, 0, !dbg !5980
  br i1 %6, label %18, label %7, !dbg !5981

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !5982
  call void @llvm.dbg.value(metadata i8* %9, metadata !5972, metadata !DIExpression()), !dbg !5977
  call void @llvm.dbg.value(metadata i8* %10, metadata !5973, metadata !DIExpression()), !dbg !5977
  %12 = load i8, i8* %10, align 1, !dbg !5983
  %13 = icmp eq i8 %12, 0, !dbg !5984
  br i1 %13, label %18, label %14, !dbg !5985

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5986
  call void @llvm.dbg.value(metadata i8* %15, metadata !5973, metadata !DIExpression()), !dbg !5977
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !5988
  call void @llvm.dbg.value(metadata i8* %16, metadata !5972, metadata !DIExpression()), !dbg !5977
  store i8 %12, i8* %9, align 1, !dbg !5989
  call void @llvm.dbg.value(metadata i32 %11, metadata !5974, metadata !DIExpression()), !dbg !5977
  call void @llvm.dbg.value(metadata i32 %11, metadata !5974, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5977
  %17 = icmp eq i32 %11, 0, !dbg !5980
  br i1 %17, label %18, label %7, !dbg !5981, !llvm.loop !5990

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !5977
  store i8 0, i8* %19, align 1, !dbg !5992
  ret i8* %0, !dbg !5993
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #18 !dbg !5994 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5998, metadata !DIExpression()), !dbg !6003
  call void @llvm.dbg.value(metadata i8* %1, metadata !5999, metadata !DIExpression()), !dbg !6003
  call void @llvm.dbg.value(metadata i32 %2, metadata !6000, metadata !DIExpression()), !dbg !6003
  call void @llvm.dbg.value(metadata i8* %0, metadata !6001, metadata !DIExpression()), !dbg !6003
  call void @llvm.dbg.value(metadata i8* %1, metadata !6002, metadata !DIExpression()), !dbg !6003
  %4 = icmp eq i32 %2, 0, !dbg !6004
  br i1 %4, label %31, label %5, !dbg !6006

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6002, metadata !DIExpression()), !dbg !6003
  call void @llvm.dbg.value(metadata i8* %0, metadata !6001, metadata !DIExpression()), !dbg !6003
  call void @llvm.dbg.value(metadata i32 %2, metadata !6000, metadata !DIExpression()), !dbg !6003
  %6 = add i32 %2, -1, !dbg !6007
  call void @llvm.dbg.value(metadata i32 %6, metadata !6000, metadata !DIExpression()), !dbg !6003
  %7 = icmp eq i32 %6, 0, !dbg !6008
  br i1 %7, label %23, label %8, !dbg !6009

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !6010
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !6010
  br label %11, !dbg !6010

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6002, metadata !DIExpression()), !dbg !6003
  call void @llvm.dbg.value(metadata i8* %14, metadata !6001, metadata !DIExpression()), !dbg !6003
  %15 = load i8, i8* %14, align 1, !dbg !6011
  %16 = load i8, i8* %13, align 1, !dbg !6012
  %17 = icmp eq i8 %15, %16, !dbg !6013
  br i1 %17, label %18, label %23, !dbg !6010

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !6014
  call void @llvm.dbg.value(metadata i8* %19, metadata !6001, metadata !DIExpression()), !dbg !6003
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6016
  call void @llvm.dbg.value(metadata i8* %20, metadata !6002, metadata !DIExpression()), !dbg !6003
  call void @llvm.dbg.value(metadata i32 %12, metadata !6000, metadata !DIExpression()), !dbg !6003
  %21 = add i32 %12, -1, !dbg !6007
  call void @llvm.dbg.value(metadata i32 %21, metadata !6000, metadata !DIExpression()), !dbg !6003
  %22 = icmp eq i32 %21, 0, !dbg !6008
  br i1 %22, label %23, label %11, !dbg !6009, !llvm.loop !6017

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !6003
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !6003
  %26 = load i8, i8* %24, align 1, !dbg !6019
  %27 = zext i8 %26 to i32, !dbg !6019
  %28 = load i8, i8* %25, align 1, !dbg !6020
  %29 = zext i8 %28 to i32, !dbg !6020
  %30 = sub nsw i32 %27, %29, !dbg !6021
  br label %31, !dbg !6022

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !6003
  ret i32 %32, !dbg !6023
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6024 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6028, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i8* %1, metadata !6029, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i32 %2, metadata !6030, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i8* %0, metadata !6031, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i8* %1, metadata !6032, metadata !DIExpression()), !dbg !6033
  %4 = ptrtoint i8* %0 to i32, !dbg !6034
  %5 = ptrtoint i8* %1 to i32, !dbg !6034
  %6 = sub i32 %4, %5, !dbg !6034
  %7 = icmp ult i32 %6, %2, !dbg !6036
  br i1 %7, label %10, label %8, !dbg !6037

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6032, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i8* %0, metadata !6031, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i32 %2, metadata !6030, metadata !DIExpression()), !dbg !6033
  %9 = icmp eq i32 %2, 0, !dbg !6038
  br i1 %9, label %26, label %17, !dbg !6040

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6030, metadata !DIExpression()), !dbg !6033
  %12 = add i32 %11, -1, !dbg !6041
  call void @llvm.dbg.value(metadata i32 %12, metadata !6030, metadata !DIExpression()), !dbg !6033
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !6044
  %14 = load i8, i8* %13, align 1, !dbg !6044
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !6045
  store i8 %14, i8* %15, align 1, !dbg !6046
  %16 = icmp eq i32 %12, 0, !dbg !6047
  br i1 %16, label %26, label %10, !dbg !6048, !llvm.loop !6049

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !6032, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i8* %19, metadata !6031, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.value(metadata i32 %20, metadata !6030, metadata !DIExpression()), !dbg !6033
  %21 = load i8, i8* %18, align 1, !dbg !6051
  store i8 %21, i8* %19, align 1, !dbg !6053
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !6054
  call void @llvm.dbg.value(metadata i8* %22, metadata !6031, metadata !DIExpression()), !dbg !6033
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !6055
  call void @llvm.dbg.value(metadata i8* %23, metadata !6032, metadata !DIExpression()), !dbg !6033
  %24 = add i32 %20, -1, !dbg !6056
  call void @llvm.dbg.value(metadata i32 %24, metadata !6030, metadata !DIExpression()), !dbg !6033
  %25 = icmp eq i32 %24, 0, !dbg !6038
  br i1 %25, label %26, label %17, !dbg !6040, !llvm.loop !6057

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !6059
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !6060 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6066, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i8* %1, metadata !6067, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i32 %2, metadata !6068, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i8* %0, metadata !6069, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i8* %1, metadata !6070, metadata !DIExpression()), !dbg !6071
  %4 = icmp eq i32 %2, 0, !dbg !6072
  br i1 %4, label %14, label %5, !dbg !6073

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !6070, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i8* %7, metadata !6069, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i32 %8, metadata !6068, metadata !DIExpression()), !dbg !6071
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6074
  call void @llvm.dbg.value(metadata i8* %9, metadata !6070, metadata !DIExpression()), !dbg !6071
  %10 = load i8, i8* %6, align 1, !dbg !6076
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !6077
  call void @llvm.dbg.value(metadata i8* %11, metadata !6069, metadata !DIExpression()), !dbg !6071
  store i8 %10, i8* %7, align 1, !dbg !6078
  %12 = add i32 %8, -1, !dbg !6079
  call void @llvm.dbg.value(metadata i32 %12, metadata !6068, metadata !DIExpression()), !dbg !6071
  %13 = icmp eq i32 %12, 0, !dbg !6072
  br i1 %13, label %14, label %5, !dbg !6073, !llvm.loop !6080

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !6082
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !6083 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6087, metadata !DIExpression()), !dbg !6092
  call void @llvm.dbg.value(metadata i32 %1, metadata !6088, metadata !DIExpression()), !dbg !6092
  call void @llvm.dbg.value(metadata i32 %2, metadata !6089, metadata !DIExpression()), !dbg !6092
  call void @llvm.dbg.value(metadata i8* %0, metadata !6090, metadata !DIExpression()), !dbg !6092
  %4 = trunc i32 %1 to i8, !dbg !6093
  call void @llvm.dbg.value(metadata i8 %4, metadata !6091, metadata !DIExpression()), !dbg !6092
  call void @llvm.dbg.value(metadata i32 %2, metadata !6089, metadata !DIExpression()), !dbg !6092
  call void @llvm.dbg.value(metadata i8* %0, metadata !6090, metadata !DIExpression()), !dbg !6092
  %5 = icmp eq i32 %2, 0, !dbg !6094
  br i1 %5, label %12, label %6, !dbg !6095

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !6089, metadata !DIExpression()), !dbg !6092
  call void @llvm.dbg.value(metadata i8* %8, metadata !6090, metadata !DIExpression()), !dbg !6092
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !6096
  call void @llvm.dbg.value(metadata i8* %9, metadata !6090, metadata !DIExpression()), !dbg !6092
  store i8 %4, i8* %8, align 1, !dbg !6098
  %10 = add i32 %7, -1, !dbg !6099
  call void @llvm.dbg.value(metadata i32 %10, metadata !6089, metadata !DIExpression()), !dbg !6092
  %11 = icmp eq i32 %10, 0, !dbg !6094
  br i1 %11, label %12, label %6, !dbg !6095, !llvm.loop !6100

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !6102
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !6103 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6107, metadata !DIExpression()), !dbg !6113
  call void @llvm.dbg.value(metadata i32 %1, metadata !6108, metadata !DIExpression()), !dbg !6113
  call void @llvm.dbg.value(metadata i32 %2, metadata !6109, metadata !DIExpression()), !dbg !6113
  %4 = icmp eq i32 %2, 0, !dbg !6114
  br i1 %4, label %17, label %5, !dbg !6115

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !6116

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !6117
  call void @llvm.dbg.value(metadata i8* %9, metadata !6110, metadata !DIExpression()), !dbg !6117
  call void @llvm.dbg.value(metadata i32 %8, metadata !6109, metadata !DIExpression()), !dbg !6113
  call void @llvm.dbg.value(metadata i8* %9, metadata !6110, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6117
  %10 = load i8, i8* %9, align 1, !dbg !6118
  %11 = icmp eq i8 %10, %6, !dbg !6121
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !6122
  call void @llvm.dbg.value(metadata i8* %12, metadata !6110, metadata !DIExpression()), !dbg !6117
  call void @llvm.dbg.value(metadata i32 %13, metadata !6109, metadata !DIExpression()), !dbg !6113
  br i1 %15, label %16, label %7, !dbg !6122, !llvm.loop !6123

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !6125

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !6113
  ret i8* %19, !dbg !6126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #3 !dbg !6127 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !6129, metadata !DIExpression()), !dbg !6130
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !6131
  ret void, !dbg !6132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #12 !dbg !6133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6135, metadata !DIExpression()), !dbg !6136
  ret i32 -1, !dbg !6137
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6138 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6142, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.value(metadata i32* %1, metadata !6143, metadata !DIExpression()), !dbg !6144
  %3 = ptrtoint i32* %1 to i32, !dbg !6145
  %4 = and i32 %3, -2, !dbg !6145
  %5 = icmp eq i32 %4, 2, !dbg !6145
  br i1 %5, label %6, label %9, !dbg !6145

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6146
  %8 = tail call i32 %7(i32 noundef %0) #24, !dbg !6146
  br label %9, !dbg !6147

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !6147
  ret i32 %10, !dbg !6148
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !6149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6151, metadata !DIExpression()), !dbg !6153
  call void @llvm.dbg.value(metadata i32* %1, metadata !6152, metadata !DIExpression()), !dbg !6153
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !6154
  ret i32 %3, !dbg !6155
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !6156 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6159, metadata !DIExpression()), !dbg !6161
  call void @llvm.dbg.value(metadata i32* %1, metadata !6160, metadata !DIExpression()), !dbg !6161
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6162, !srcloc !6164
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #25, !dbg !6165
  ret i32 %3, !dbg !6166
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !6167 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6172, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.value(metadata i32* %1, metadata !6173, metadata !DIExpression()), !dbg !6176
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !6177
  call void @llvm.dbg.value(metadata i32 %3, metadata !6174, metadata !DIExpression()), !dbg !6176
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #25, !dbg !6178
  call void @llvm.dbg.value(metadata i32 %4, metadata !6175, metadata !DIExpression()), !dbg !6176
  %5 = icmp ne i32 %3, %4, !dbg !6179
  %6 = sext i1 %5 to i32, !dbg !6180
  ret i32 %6, !dbg !6181
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !6182 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6186, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.value(metadata i32 %1, metadata !6187, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.value(metadata i32 %2, metadata !6188, metadata !DIExpression()), !dbg !6190
  call void @llvm.dbg.value(metadata i32* %3, metadata !6189, metadata !DIExpression()), !dbg !6190
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !6191
  ret i32 %5, !dbg !6192
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !6193 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6195, metadata !DIExpression()), !dbg !6199
  call void @llvm.dbg.value(metadata i32 %1, metadata !6196, metadata !DIExpression()), !dbg !6199
  call void @llvm.dbg.value(metadata i32 %2, metadata !6197, metadata !DIExpression()), !dbg !6199
  call void @llvm.dbg.value(metadata i32* %3, metadata !6198, metadata !DIExpression()), !dbg !6199
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6200, !srcloc !6202
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #25, !dbg !6203
  ret i32 %5, !dbg !6204
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !6205 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6207, metadata !DIExpression()), !dbg !6215
  call void @llvm.dbg.value(metadata i32 %1, metadata !6208, metadata !DIExpression()), !dbg !6215
  call void @llvm.dbg.value(metadata i32 %2, metadata !6209, metadata !DIExpression()), !dbg !6215
  call void @llvm.dbg.value(metadata i32* %3, metadata !6210, metadata !DIExpression()), !dbg !6215
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !6216
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !6218
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !6218
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !6218
  br i1 %11, label %33, label %12, !dbg !6218

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !6215
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !6215
  call void @llvm.dbg.value(metadata i8* %14, metadata !6213, metadata !DIExpression()), !dbg !6215
  call void @llvm.dbg.value(metadata i32 %13, metadata !6211, metadata !DIExpression()), !dbg !6215
  call void @llvm.dbg.value(metadata i32 %1, metadata !6212, metadata !DIExpression()), !dbg !6215
  br label %15, !dbg !6219

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !6221
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !6215
  call void @llvm.dbg.value(metadata i8* %17, metadata !6213, metadata !DIExpression()), !dbg !6215
  call void @llvm.dbg.value(metadata i32 %16, metadata !6212, metadata !DIExpression()), !dbg !6215
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !6222
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !6225
  call void @llvm.dbg.value(metadata i8* %19, metadata !6213, metadata !DIExpression()), !dbg !6215
  %20 = load i8, i8* %17, align 1, !dbg !6226
  %21 = zext i8 %20 to i32, !dbg !6227
  %22 = tail call i32 %18(i32 noundef %21) #24, !dbg !6222
  %23 = icmp eq i32 %22, -1, !dbg !6228
  br i1 %23, label %30, label %24, !dbg !6229

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !6230
  call void @llvm.dbg.value(metadata i32 %25, metadata !6212, metadata !DIExpression()), !dbg !6215
  %26 = icmp eq i32 %25, 0, !dbg !6231
  br i1 %26, label %27, label %15, !dbg !6232, !llvm.loop !6233

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !6235
  call void @llvm.dbg.value(metadata i32 %28, metadata !6211, metadata !DIExpression()), !dbg !6215
  %29 = icmp eq i32 %28, 0, !dbg !6236
  br i1 %29, label %30, label %12, !dbg !6237, !llvm.loop !6238

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !6215
  call void @llvm.dbg.value(metadata i32 %31, metadata !6211, metadata !DIExpression()), !dbg !6215
  call void @llvm.dbg.label(metadata !6214), !dbg !6241
  %32 = sub i32 %2, %31, !dbg !6242
  br label %33, !dbg !6243

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !6215
  ret i32 %34, !dbg !6244
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !6245 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6249, metadata !DIExpression()), !dbg !6250
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !6251
  %3 = icmp eq i32 %2, -1, !dbg !6253
  br i1 %3, label %8, label %4, !dbg !6254

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #25, !dbg !6255
  %6 = icmp eq i32 %5, -1, !dbg !6256
  %7 = sext i1 %6 to i32, !dbg !6255
  br label %8, !dbg !6257

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !6250
  ret i32 %9, !dbg !6258
}

; Function Attrs: noinline nounwind optsize
define internal i32 @rf_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6259 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %struct.gpio_dt_spec*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.gpio_dt_spec*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %struct.gpio_dt_spec*
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6261, metadata !DIExpression()), !dbg !6272
  %8 = bitcast i64* %2 to i8*, !dbg !6273
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #23, !dbg !6273
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %3, metadata !6262, metadata !DIExpression()), !dbg !6274
  %9 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf1 to i64*), align 8, !dbg !6274
  store i64 %9, i64* %2, align 8, !dbg !6274
  %10 = bitcast i64* %4 to i8*, !dbg !6275
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #23, !dbg !6275
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %5, metadata !6270, metadata !DIExpression()), !dbg !6276
  %11 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf2 to i64*), align 8, !dbg !6276
  store i64 %11, i64* %4, align 8, !dbg !6276
  %12 = bitcast i64* %6 to i8*, !dbg !6277
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #23, !dbg !6277
  call void @llvm.dbg.declare(metadata %struct.gpio_dt_spec* %7, metadata !6271, metadata !DIExpression()), !dbg !6278
  %13 = load i64, i64* bitcast (%struct.gpio_dt_spec* @__const.rf_init.rf3 to i64*), align 8, !dbg !6278
  store i64 %13, i64* %6, align 8, !dbg !6278
  %14 = trunc i64 %9 to i32, !dbg !6279
  %15 = inttoptr i32 %14 to %struct.device*, !dbg !6279
  %16 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %15) #25, !dbg !6281
  %17 = trunc i64 %13 to i32, !dbg !6282
  %18 = inttoptr i32 %17 to %struct.device*, !dbg !6282
  br i1 %16, label %19, label %26, !dbg !6282

19:                                               ; preds = %1
  %20 = trunc i64 %11 to i32, !dbg !6282
  %21 = inttoptr i32 %20 to %struct.device*, !dbg !6282
  %22 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %21) #25, !dbg !6283
  br i1 %22, label %23, label %26, !dbg !6284

23:                                               ; preds = %19
  %24 = tail call fastcc zeroext i1 @device_is_ready(%struct.device* noundef %18) #25, !dbg !6285
  br i1 %24, label %25, label %26, !dbg !6286

25:                                               ; preds = %23
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %3, i32 noundef 655360) #25, !dbg !6287
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %5, i32 noundef 655360) #25, !dbg !6288
  call fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* noundef nonnull %7, i32 noundef 393216) #25, !dbg !6289
  br label %26, !dbg !6290

26:                                               ; preds = %1, %19, %23, %25
  %27 = phi i32 [ 0, %25 ], [ -19, %23 ], [ -19, %19 ], [ -19, %1 ], !dbg !6272
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #23, !dbg !6291
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #23, !dbg !6291
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #23, !dbg !6291
  ret i32 %27, !dbg !6291
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6292 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6297, metadata !DIExpression()), !dbg !6298
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6299, !srcloc !6301
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) #25, !dbg !6302
  ret i1 %2, !dbg !6303
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure_dt(%struct.gpio_dt_spec* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6304 {
  call void @llvm.dbg.value(metadata %struct.gpio_dt_spec* %0, metadata !6309, metadata !DIExpression()), !dbg !6311
  call void @llvm.dbg.value(metadata i32 %1, metadata !6310, metadata !DIExpression()), !dbg !6311
  %3 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 0, !dbg !6312
  %4 = load %struct.device*, %struct.device** %3, align 4, !dbg !6312
  %5 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 1, !dbg !6313
  %6 = load i8, i8* %5, align 4, !dbg !6313
  %7 = getelementptr inbounds %struct.gpio_dt_spec, %struct.gpio_dt_spec* %0, i32 0, i32 2, !dbg !6314
  %8 = load i16, i16* %7, align 2, !dbg !6314
  %9 = zext i16 %8 to i32, !dbg !6315
  %10 = or i32 %9, %1, !dbg !6316
  tail call fastcc void @gpio_pin_configure(%struct.device* noundef %4, i8 noundef zeroext %6, i32 noundef %10) #25, !dbg !6317
  ret void, !dbg !6318
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !6319 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6322, metadata !DIExpression()), !dbg !6325
  call void @llvm.dbg.value(metadata i8 %1, metadata !6323, metadata !DIExpression()), !dbg !6325
  call void @llvm.dbg.value(metadata i32 %2, metadata !6324, metadata !DIExpression()), !dbg !6325
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6326, !srcloc !6328
  tail call fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) #25, !dbg !6329
  ret void, !dbg !6330
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_gpio_pin_configure(%struct.device* noundef %0, i8 noundef zeroext %1, i32 noundef %2) unnamed_addr #1 !dbg !6331 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6333, metadata !DIExpression()), !dbg !6340
  call void @llvm.dbg.value(metadata i8 %1, metadata !6334, metadata !DIExpression()), !dbg !6340
  call void @llvm.dbg.value(metadata i32 %2, metadata !6335, metadata !DIExpression()), !dbg !6340
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !6341
  %5 = bitcast i8** %4 to %struct.gpio_driver_api**, !dbg !6341
  %6 = load %struct.gpio_driver_api*, %struct.gpio_driver_api** %5, align 4, !dbg !6341
  call void @llvm.dbg.value(metadata %struct.gpio_driver_api* %6, metadata !6336, metadata !DIExpression()), !dbg !6340
  call void @llvm.dbg.value(metadata i8* undef, metadata !6337, metadata !DIExpression()), !dbg !6340
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !6342
  %8 = bitcast i8** %7 to %union.anon.1**, !dbg !6342
  %9 = load %union.anon.1*, %union.anon.1** %8, align 4, !dbg !6342
  call void @llvm.dbg.value(metadata %union.anon.1* %9, metadata !6339, metadata !DIExpression()), !dbg !6340
  %10 = and i32 %2, 786432
  %11 = icmp eq i32 %10, 0
  %12 = and i32 %2, 1048577, !dbg !6343
  %13 = icmp ne i32 %12, 1048577, !dbg !6343
  %14 = or i1 %13, %11, !dbg !6343
  %15 = xor i32 %2, 786432, !dbg !6343
  %16 = select i1 %14, i32 %2, i32 %15, !dbg !6343
  call void @llvm.dbg.value(metadata i32 %16, metadata !6335, metadata !DIExpression()), !dbg !6340
  call void @llvm.dbg.value(metadata i32 %16, metadata !6335, metadata !DIExpression(DW_OP_constu, 18446744073708503039, DW_OP_and, DW_OP_stack_value)), !dbg !6340
  %17 = and i32 %16, 1, !dbg !6345
  %18 = icmp eq i32 %17, 0, !dbg !6347
  %19 = zext i8 %1 to i32, !dbg !6348
  %20 = shl nuw i32 1, %19, !dbg !6348
  br i1 %18, label %25, label %21, !dbg !6349

21:                                               ; preds = %3
  %22 = getelementptr inbounds %union.anon.1, %union.anon.1* %9, i32 0, i32 0, !dbg !6350
  %23 = load i32, i32* %22, align 4, !dbg !6352
  %24 = or i32 %23, %20, !dbg !6352
  store i32 %24, i32* %22, align 4, !dbg !6352
  br label %30, !dbg !6353

25:                                               ; preds = %3
  %26 = xor i32 %20, -1, !dbg !6354
  %27 = getelementptr inbounds %union.anon.1, %union.anon.1* %9, i32 0, i32 0, !dbg !6356
  %28 = load i32, i32* %27, align 4, !dbg !6357
  %29 = and i32 %28, %26, !dbg !6357
  store i32 %29, i32* %27, align 4, !dbg !6357
  br label %30

30:                                               ; preds = %25, %21
  %31 = and i32 %16, -1048577, !dbg !6358
  call void @llvm.dbg.value(metadata i32 %31, metadata !6335, metadata !DIExpression()), !dbg !6340
  %32 = getelementptr inbounds %struct.gpio_driver_api, %struct.gpio_driver_api* %6, i32 0, i32 0, !dbg !6359
  %33 = load i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i8, i32)** %32, align 4, !dbg !6359
  %34 = tail call i32 %33(%struct.device* noundef nonnull %0, i8 noundef zeroext %1, i32 noundef %31) #24, !dbg !6360
  ret void, !dbg !6361
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready(%struct.device* noundef %0) unnamed_addr #1 !dbg !6362 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6364, metadata !DIExpression()), !dbg !6365
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !6366
  ret i1 %2, !dbg !6367
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !6368 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6370, metadata !DIExpression()), !dbg !6371
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #25, !dbg !6372
  ret void, !dbg !6373
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !6374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6378, metadata !DIExpression()), !dbg !6384
  call void @llvm.dbg.value(metadata i32 %1, metadata !6379, metadata !DIExpression()), !dbg !6384
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !6380, metadata !DIExpression()), !dbg !6384
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !6385
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !6385
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !6385
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !6381, metadata !DIExpression()), !dbg !6384
  call void @llvm.dbg.value(metadata i32 %0, metadata !6383, metadata !DIExpression()), !dbg !6384
  %7 = icmp slt i32 %0, %1, !dbg !6386
  br i1 %7, label %8, label %22, !dbg !6389

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6383, metadata !DIExpression()), !dbg !6384
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #25, !dbg !6390
  %11 = icmp eq i32 %10, 0, !dbg !6390
  br i1 %11, label %19, label %12, !dbg !6393

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #25, !dbg !6394
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !6396
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !6396
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !6398
  br i1 %15, label %19, label %16, !dbg !6399

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !6400
  %18 = load i8*, i8** %17, align 4, !dbg !6400
  tail call void %14(i32 noundef %9, i8* noundef %18) #24, !dbg !6401
  br label %19, !dbg !6402

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !6403
  call void @llvm.dbg.value(metadata i32 %20, metadata !6383, metadata !DIExpression()), !dbg !6384
  %21 = icmp eq i32 %20, %1, !dbg !6386
  br i1 %21, label %22, label %8, !dbg !6389, !llvm.loop !6404

22:                                               ; preds = %19, %3
  ret void, !dbg !6406
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !6407 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6409, metadata !DIExpression()), !dbg !6410
  %2 = shl nuw i32 1, %0, !dbg !6411
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #25, !dbg !6414
  ret i32 %3, !dbg !6415
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !6416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6420, metadata !DIExpression()), !dbg !6421
  %2 = shl nuw i32 1, %0, !dbg !6422
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #25, !dbg !6425
  ret void, !dbg !6426
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !6427 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6430, metadata !DIExpression()), !dbg !6431
  store volatile i32 %0, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !6432
  ret void, !dbg !6433
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !6434 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6436, metadata !DIExpression()), !dbg !6437
  %2 = load volatile i32, i32* inttoptr (i32 1073808404 to i32*), align 4, !dbg !6438
  %3 = and i32 %2, %0, !dbg !6438
  %4 = icmp eq i32 %3, %0, !dbg !6439
  %5 = zext i1 %4 to i32, !dbg !6439
  ret i32 %5, !dbg !6440
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !6441 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6443, metadata !DIExpression()), !dbg !6444
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #25, !dbg !6445
  ret void, !dbg !6446
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !6447 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6449, metadata !DIExpression()), !dbg !6450
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #25, !dbg !6451
  ret void, !dbg !6452
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !6453 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6455, metadata !DIExpression()), !dbg !6456
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #25, !dbg !6457
  ret void, !dbg !6458
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !6459 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6461, metadata !DIExpression()), !dbg !6462
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #25, !dbg !6463
  ret void, !dbg !6464
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !6465 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6467, metadata !DIExpression()), !dbg !6468
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #25, !dbg !6469
  ret void, !dbg !6470
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !6471 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6473, metadata !DIExpression()), !dbg !6474
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #25, !dbg !6475
  ret void, !dbg !6476
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6477 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6479, metadata !DIExpression()), !dbg !6480
  tail call fastcc void @__stm32_exti_connect_irqs() #25, !dbg !6481
  ret i32 0, !dbg !6482
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !667 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !671, metadata !DIExpression()), !dbg !6483
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #24, !dbg !6484
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #24, !dbg !6486
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #24, !dbg !6488
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #24, !dbg !6490
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #24, !dbg !6492
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #24, !dbg !6494
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #24, !dbg !6496
  ret void, !dbg !6498
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6499 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6501, metadata !DIExpression()), !dbg !6503
  call void @llvm.dbg.value(metadata i32 0, metadata !6502, metadata !DIExpression()), !dbg !6503
  %2 = getelementptr inbounds [16 x i32], [16 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !6504
  %3 = load i32, i32* %2, align 4, !dbg !6504
  call void @llvm.dbg.value(metadata i32 %3, metadata !6502, metadata !DIExpression()), !dbg !6503
  %4 = shl nuw i32 1, %0, !dbg !6505
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #25, !dbg !6506
  tail call void @arch_irq_enable(i32 noundef %3) #24, !dbg !6507
  ret void, !dbg !6508
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !6509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6511, metadata !DIExpression()), !dbg !6512
  %2 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !6513
  %3 = or i32 %2, %0, !dbg !6513
  store volatile i32 %3, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !6513
  ret void, !dbg !6514
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !6515 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6517, metadata !DIExpression()), !dbg !6518
  %2 = icmp slt i32 %0, 32, !dbg !6519
  br i1 %2, label %3, label %5, !dbg !6521

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !6522
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #25, !dbg !6524
  br label %5, !dbg !6525

5:                                                ; preds = %1, %3
  ret void, !dbg !6526
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !6527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6529, metadata !DIExpression()), !dbg !6530
  %2 = xor i32 %0, -1, !dbg !6531
  %3 = load volatile i32, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !6531
  %4 = and i32 %3, %2, !dbg !6531
  store volatile i32 %4, i32* inttoptr (i32 1073808384 to i32*), align 1024, !dbg !6531
  ret void, !dbg !6532
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !6533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6537, metadata !DIExpression()), !dbg !6539
  call void @llvm.dbg.value(metadata i32 %1, metadata !6538, metadata !DIExpression()), !dbg !6539
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !6540

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !6541
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #25, !dbg !6543
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #25, !dbg !6544
  br label %11, !dbg !6545

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !6546
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #25, !dbg !6547
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #25, !dbg !6548
  br label %11, !dbg !6549

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !6550
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #25, !dbg !6551
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #25, !dbg !6552
  br label %11, !dbg !6553

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !6554
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #25, !dbg !6555
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #25, !dbg !6556
  br label %11, !dbg !6557

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !6558
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !6559 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6561, metadata !DIExpression()), !dbg !6562
  %2 = xor i32 %0, -1, !dbg !6563
  %3 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !6563
  %4 = and i32 %3, %2, !dbg !6563
  store volatile i32 %4, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !6563
  ret void, !dbg !6564
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !6565 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6567, metadata !DIExpression()), !dbg !6568
  %2 = xor i32 %0, -1, !dbg !6569
  %3 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !6569
  %4 = and i32 %3, %2, !dbg !6569
  store volatile i32 %4, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !6569
  ret void, !dbg !6570
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !6571 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6573, metadata !DIExpression()), !dbg !6574
  %2 = load volatile i32, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !6575
  %3 = or i32 %2, %0, !dbg !6575
  store volatile i32 %3, i32* inttoptr (i32 1073808392 to i32*), align 8, !dbg !6575
  ret void, !dbg !6576
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !6577 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6579, metadata !DIExpression()), !dbg !6580
  %2 = load volatile i32, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !6581
  %3 = or i32 %2, %0, !dbg !6581
  store volatile i32 %3, i32* inttoptr (i32 1073808396 to i32*), align 4, !dbg !6581
  ret void, !dbg !6582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !6583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6587, metadata !DIExpression()), !dbg !6593
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6588, metadata !DIExpression()), !dbg !6593
  call void @llvm.dbg.value(metadata i8* %2, metadata !6589, metadata !DIExpression()), !dbg !6593
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !6590, metadata !DIExpression()), !dbg !6593
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6592, metadata !DIExpression()), !dbg !6593
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !6594
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !6594
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !6596
  br i1 %6, label %7, label %9, !dbg !6597

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !6598
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !6599
  store i8* %2, i8** %8, align 4, !dbg !6600
  br label %9, !dbg !6601

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !6593
  ret i32 %10, !dbg !6602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #3 !dbg !6603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6605, metadata !DIExpression()), !dbg !6608
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_32, metadata !6606, metadata !DIExpression()), !dbg !6608
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !6607, metadata !DIExpression()), !dbg !6608
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !6609
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !6610
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !6611
  store i8* null, i8** %3, align 4, !dbg !6612
  ret void, !dbg !6613
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !6614 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6616, metadata !DIExpression()), !dbg !6621
  call void @llvm.dbg.value(metadata i8* %1, metadata !6617, metadata !DIExpression()), !dbg !6621
  call void @llvm.dbg.value(metadata i8* %1, metadata !6618, metadata !DIExpression()), !dbg !6621
  %3 = bitcast i8* %1 to i32*, !dbg !6622
  %4 = load i32, i32* %3, align 4, !dbg !6622
  %5 = add i32 %4, -37, !dbg !6622
  %6 = icmp ult i32 %5, -9, !dbg !6622
  br i1 %6, label %15, label %7, !dbg !6624

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !6625
  %9 = inttoptr i32 %8 to i32*, !dbg !6626
  call void @llvm.dbg.value(metadata i32* %9, metadata !6619, metadata !DIExpression()), !dbg !6621
  %10 = load volatile i32, i32* %9, align 4, !dbg !6627
  call void @llvm.dbg.value(metadata i32 %10, metadata !6620, metadata !DIExpression()), !dbg !6621
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6628
  %12 = bitcast i8* %11 to i32*, !dbg !6628
  %13 = load i32, i32* %12, align 4, !dbg !6628
  %14 = or i32 %13, %10, !dbg !6629
  call void @llvm.dbg.value(metadata i32 %14, metadata !6620, metadata !DIExpression()), !dbg !6621
  store volatile i32 %14, i32* %9, align 4, !dbg !6630
  br label %15, !dbg !6631

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !6621
  ret i32 %16, !dbg !6632
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !6633 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6635, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i8* %1, metadata !6636, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.value(metadata i8* %1, metadata !6637, metadata !DIExpression()), !dbg !6640
  %3 = bitcast i8* %1 to i32*, !dbg !6641
  %4 = load i32, i32* %3, align 4, !dbg !6641
  %5 = add i32 %4, -37, !dbg !6641
  %6 = icmp ult i32 %5, -9, !dbg !6641
  br i1 %6, label %16, label %7, !dbg !6643

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !6644
  %9 = inttoptr i32 %8 to i32*, !dbg !6645
  call void @llvm.dbg.value(metadata i32* %9, metadata !6638, metadata !DIExpression()), !dbg !6640
  %10 = load volatile i32, i32* %9, align 4, !dbg !6646
  call void @llvm.dbg.value(metadata i32 %10, metadata !6639, metadata !DIExpression()), !dbg !6640
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6647
  %12 = bitcast i8* %11 to i32*, !dbg !6647
  %13 = load i32, i32* %12, align 4, !dbg !6647
  %14 = xor i32 %13, -1, !dbg !6648
  %15 = and i32 %10, %14, !dbg !6649
  call void @llvm.dbg.value(metadata i32 %15, metadata !6639, metadata !DIExpression()), !dbg !6640
  store volatile i32 %15, i32* %9, align 4, !dbg !6650
  br label %16, !dbg !6651

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !6640
  ret i32 %17, !dbg !6652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #7 !dbg !6653 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6655, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.value(metadata i8* %1, metadata !6656, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.value(metadata i32* %2, metadata !6657, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.value(metadata i8* %1, metadata !6658, metadata !DIExpression()), !dbg !6662
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !6663
  call void @llvm.dbg.value(metadata i32 %4, metadata !6659, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.value(metadata i32 %4, metadata !6660, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.value(metadata i32 %4, metadata !6661, metadata !DIExpression()), !dbg !6662
  %5 = bitcast i8* %1 to i32*, !dbg !6664
  %6 = load i32, i32* %5, align 4, !dbg !6664
  switch i32 %6, label %12 [
    i32 28, label %10
    i32 36, label %10
    i32 32, label %10
    i32 4, label %10
    i32 2, label %7
    i32 3, label %8
    i32 1, label %9
  ], !dbg !6665

7:                                                ; preds = %3
  br label %10, !dbg !6666

8:                                                ; preds = %3
  br label %10, !dbg !6668

9:                                                ; preds = %3
  br label %10, !dbg !6669

10:                                               ; preds = %3, %3, %3, %3, %9, %8, %7
  %11 = phi i32 [ 0, %7 ], [ 37000, %8 ], [ 0, %9 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %11, i32* %2, align 4, !dbg !6670
  br label %12, !dbg !6671

12:                                               ; preds = %10, %3
  %13 = phi i32 [ -134, %3 ], [ 0, %10 ], !dbg !6662
  ret i32 %13, !dbg !6671
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !6672 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6674, metadata !DIExpression()), !dbg !6682
  call void @llvm.dbg.value(metadata i8* %1, metadata !6675, metadata !DIExpression()), !dbg !6682
  call void @llvm.dbg.value(metadata i8* %2, metadata !6676, metadata !DIExpression()), !dbg !6682
  call void @llvm.dbg.value(metadata i8* %1, metadata !6677, metadata !DIExpression()), !dbg !6682
  %4 = bitcast i8* %1 to i32*, !dbg !6683
  %5 = load i32, i32* %4, align 4, !dbg !6683
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #25, !dbg !6684
  call void @llvm.dbg.value(metadata i32 %6, metadata !6681, metadata !DIExpression()), !dbg !6682
  %7 = icmp slt i32 %6, 0, !dbg !6685
  br i1 %7, label %22, label %8, !dbg !6687

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6677, metadata !DIExpression()), !dbg !6682
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6688
  %10 = bitcast i8* %9 to i32*, !dbg !6688
  %11 = load i32, i32* %10, align 4, !dbg !6688
  %12 = lshr i32 %11, 16, !dbg !6688
  %13 = and i32 %12, 7, !dbg !6688
  %14 = lshr i32 %11, 8, !dbg !6689
  %15 = and i32 %14, 31, !dbg !6689
  %16 = shl i32 %13, %15, !dbg !6690
  call void @llvm.dbg.value(metadata i32 %16, metadata !6680, metadata !DIExpression()), !dbg !6682
  %17 = and i32 %11, 255, !dbg !6691
  %18 = or i32 %17, 1073887232, !dbg !6692
  %19 = inttoptr i32 %18 to i32*, !dbg !6693
  call void @llvm.dbg.value(metadata i32* %19, metadata !6678, metadata !DIExpression()), !dbg !6682
  %20 = load volatile i32, i32* %19, align 4, !dbg !6694
  call void @llvm.dbg.value(metadata i32 %20, metadata !6679, metadata !DIExpression()), !dbg !6682
  %21 = or i32 %16, %20, !dbg !6695
  call void @llvm.dbg.value(metadata i32 %21, metadata !6679, metadata !DIExpression()), !dbg !6682
  store volatile i32 %21, i32* %19, align 4, !dbg !6696
  br label %22, !dbg !6697

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !6682
  ret i32 %23, !dbg !6698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #12 !dbg !6699 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6703, metadata !DIExpression()), !dbg !6705
  call void @llvm.dbg.value(metadata i32 0, metadata !6704, metadata !DIExpression()), !dbg !6705
  %2 = add i32 %0, -1, !dbg !6706
  %3 = icmp ult i32 %2, 4, !dbg !6706
  br i1 %3, label %4, label %7, !dbg !6706

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !6706
  %6 = load i32, i32* %5, align 4, !dbg !6706
  call void @llvm.dbg.value(metadata i32 %6, metadata !6704, metadata !DIExpression()), !dbg !6705
  br label %7, !dbg !6707

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !6705
  ret i32 %8, !dbg !6708
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !6709 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !6711, metadata !DIExpression()), !dbg !6714
  tail call void @config_enable_default_clocks() #24, !dbg !6715
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !6716
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #25, !dbg !6716
  %4 = lshr i32 %3, 4, !dbg !6716
  %5 = and i32 %4, 15, !dbg !6716
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !6716
  %7 = load i8, i8* %6, align 1, !dbg !6716
  %8 = zext i8 %7 to i32, !dbg !6716
  %9 = lshr i32 %2, %8, !dbg !6716
  call void @llvm.dbg.value(metadata i32 %9, metadata !6712, metadata !DIExpression()), !dbg !6714
  call void @llvm.dbg.value(metadata !DIArgList(i32 32000000, i8 undef), metadata !6713, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !6714
  %10 = icmp ult i32 %9, 32000000, !dbg !6717
  br i1 %10, label %11, label %13, !dbg !6719

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #24, !dbg !6720
  br label %13, !dbg !6722

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #25, !dbg !6723
  tail call fastcc void @set_up_plls() #25, !dbg !6724
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !6725
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 3) #25, !dbg !6728
  br label %14, !dbg !6729

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !6730
  %16 = icmp eq i32 %15, 12, !dbg !6731
  br i1 %16, label %17, label %14, !dbg !6729, !llvm.loop !6732

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 31999999, !dbg !6734
  br i1 %18, label %19, label %21, !dbg !6736

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 32000000) #24, !dbg !6737
  br label %21, !dbg !6739

21:                                               ; preds = %19, %17
  store i32 32000000, i32* @SystemCoreClock, align 4, !dbg !6740
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #25, !dbg !6741
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #25, !dbg !6742
  ret i32 0, !dbg !6743
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !6744 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6746
  %2 = and i32 %1, 240, !dbg !6746
  ret i32 %2, !dbg !6747
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !6748 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !6749
  %2 = icmp eq i32 %1, 1, !dbg !6753
  br i1 %2, label %7, label %3, !dbg !6754

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #25, !dbg !6755
  br label %4, !dbg !6757

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !6758
  %6 = icmp eq i32 %5, 1, !dbg !6759
  br i1 %6, label %7, label %4, !dbg !6757, !llvm.loop !6760

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_LSI_Enable() #25, !dbg !6762
  br label %8, !dbg !6765

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #25, !dbg !6766
  %10 = icmp eq i32 %9, 1, !dbg !6767
  br i1 %10, label %11, label %8, !dbg !6765, !llvm.loop !6768

11:                                               ; preds = %8
  ret void, !dbg !6770
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !6771 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !6772
  %2 = icmp eq i32 %1, 12, !dbg !6774
  br i1 %2, label %3, label %4, !dbg !6775

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #25, !dbg !6776
  tail call fastcc void @stm32_clock_switch_to_hsi() #25, !dbg !6778
  br label %4, !dbg !6779

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #25, !dbg !6780
  tail call void @config_pll_sysclock() #24, !dbg !6781
  tail call fastcc void @LL_RCC_PLL_Enable() #25, !dbg !6782
  br label %5, !dbg !6783

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #25, !dbg !6784
  %7 = icmp eq i32 %6, 1, !dbg !6785
  br i1 %7, label %8, label %5, !dbg !6783, !llvm.loop !6786

8:                                                ; preds = %5
  ret void, !dbg !6788
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !6789 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6791, metadata !DIExpression()), !dbg !6792
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6793
  %2 = and i32 %1, -241, !dbg !6793
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6793
  ret void, !dbg !6794
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !6795 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6797, metadata !DIExpression()), !dbg !6798
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6799
  %3 = and i32 %2, -4, !dbg !6799
  %4 = or i32 %3, %0, !dbg !6799
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6799
  ret void, !dbg !6800
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !6801 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6802
  %2 = and i32 %1, 12, !dbg !6802
  ret i32 %2, !dbg !6803
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !6804 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6806, metadata !DIExpression()), !dbg !6807
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6808
  %2 = and i32 %1, -1793, !dbg !6808
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6808
  ret void, !dbg !6809
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !6810 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6812, metadata !DIExpression()), !dbg !6813
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6814
  %2 = and i32 %1, -14337, !dbg !6814
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6814
  ret void, !dbg !6815
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !6816 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !6817
  %2 = icmp eq i32 %1, 1, !dbg !6819
  br i1 %2, label %7, label %3, !dbg !6820

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #25, !dbg !6821
  br label %4, !dbg !6823

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #25, !dbg !6824
  %6 = icmp eq i32 %5, 1, !dbg !6825
  br i1 %6, label %7, label %4, !dbg !6823, !llvm.loop !6826

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 1) #25, !dbg !6828
  br label %8, !dbg !6829

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #25, !dbg !6830
  %10 = icmp eq i32 %9, 4, !dbg !6831
  br i1 %10, label %11, label %8, !dbg !6829, !llvm.loop !6832

11:                                               ; preds = %8
  ret void, !dbg !6834
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !6835 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6836
  %2 = and i32 %1, -16777217, !dbg !6836
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6836
  ret void, !dbg !6837
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !6838 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6839
  %2 = or i32 %1, 16777216, !dbg !6839
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6839
  ret void, !dbg !6840
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !6841 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6842
  %2 = lshr i32 %1, 25, !dbg !6843
  %3 = and i32 %2, 1, !dbg !6843
  ret i32 %3, !dbg !6844
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !6845 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6846
  %2 = lshr i32 %1, 1, !dbg !6847
  %3 = and i32 %2, 1, !dbg !6847
  ret i32 %3, !dbg !6848
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !6849 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6850
  %2 = or i32 %1, 1, !dbg !6850
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !6850
  ret void, !dbg !6851
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !6852 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !6853
  %2 = or i32 %1, 1, !dbg !6853
  store volatile i32 %2, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !6853
  ret void, !dbg !6854
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !6855 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !6856
  %2 = lshr i32 %1, 1, !dbg !6857
  %3 = and i32 %2, 1, !dbg !6857
  ret i32 %3, !dbg !6858
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #12 !dbg !6859 {
  ret i32 16000000, !dbg !6861
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !6864 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #25, !dbg !6865
  ret void, !dbg !6866
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !6867 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6871, metadata !DIExpression()), !dbg !6874
  call void @llvm.dbg.value(metadata i32 262144, metadata !6872, metadata !DIExpression()), !dbg !6874
  call void @llvm.dbg.value(metadata i32 4194304, metadata !6873, metadata !DIExpression()), !dbg !6874
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6875
  %2 = and i32 %1, -16580609, !dbg !6875
  %3 = or i32 %2, 4456448, !dbg !6875
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !6875
  ret void, !dbg !6876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllout_frequency() local_unnamed_addr #12 !dbg !6877 {
  %1 = load i8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 1), align 1, !dbg !6878
  %2 = zext i8 %1 to i32, !dbg !6878
  %3 = mul nuw nsw i32 %2, 8000000, !dbg !6878
  ret i32 %3, !dbg !6879
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #13 !dbg !6880 {
  tail call fastcc void @LL_APB2_GRP1_EnableClock() #25, !dbg !6881
  ret void, !dbg !6882
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB2_GRP1_EnableClock() unnamed_addr #13 !dbg !6883 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !6885, metadata !DIExpression()), !dbg !6887
  %2 = bitcast i32* %1 to i8*, !dbg !6888
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !6888
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6886, metadata !DIExpression()), !dbg !6889
  %3 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !6890
  %4 = or i32 %3, 1, !dbg !6890
  store volatile i32 %4, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !6890
  %5 = load volatile i32, i32* inttoptr (i32 1073887264 to i32*), align 32, !dbg !6891
  %6 = and i32 %5, 1, !dbg !6891
  store volatile i32 %6, i32* %1, align 4, !dbg !6892
  %7 = load volatile i32, i32* %1, align 4, !dbg !6893
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !6894
  ret void, !dbg !6894
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6895 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6897, metadata !DIExpression()), !dbg !6898
  %2 = tail call fastcc zeroext i1 @device_is_ready.40() #25, !dbg !6899
  br i1 %2, label %3, label %4, !dbg !6901

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #25, !dbg !6902
  br label %4, !dbg !6903

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !6898
  ret i32 %5, !dbg !6904
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.40() unnamed_addr #1 !dbg !6905 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !6909, metadata !DIExpression()), !dbg !6910
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6911, !srcloc !6913
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.41() #25, !dbg !6914
  ret i1 %1, !dbg !6915
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !6916 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !6917
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #24, !dbg !6918
  ret void, !dbg !6919
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !6920 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6922, metadata !DIExpression()), !dbg !6923
  %2 = icmp eq i32 %0, 10, !dbg !6924
  br i1 %2, label %3, label %4, !dbg !6926

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #25, !dbg !6927
  br label %4, !dbg !6929

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !6930
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #25, !dbg !6931
  ret i32 %0, !dbg !6932
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !6933 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !6936, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.value(metadata i8 %0, metadata !6937, metadata !DIExpression()), !dbg !6938
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6939, !srcloc !6941
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #25, !dbg !6942
  ret void, !dbg !6943
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !6944 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !6946, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.value(metadata i8 %0, metadata !6947, metadata !DIExpression()), !dbg !6949
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_42, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !6950
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !6948, metadata !DIExpression()), !dbg !6949
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !6951
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !6951
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_42, i8 noundef zeroext %0) #24, !dbg !6952
  ret void, !dbg !6953
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.41() unnamed_addr #1 !dbg !6954 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_42, metadata !6956, metadata !DIExpression()), !dbg !6957
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_42) #24, !dbg !6958
  ret i1 %1, !dbg !6959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #12 !dbg !6960 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !7007, metadata !DIExpression()), !dbg !7010
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !7008, metadata !DIExpression()), !dbg !7010
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !7009, metadata !DIExpression()), !dbg !7010
  ret void, !dbg !7011
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !7012 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7014, metadata !DIExpression()), !dbg !7019
  call void @llvm.dbg.value(metadata i8 %1, metadata !7015, metadata !DIExpression()), !dbg !7019
  call void @llvm.dbg.value(metadata i32 %2, metadata !7016, metadata !DIExpression()), !dbg !7019
  %5 = bitcast i32* %4 to i8*, !dbg !7020
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7020
  call void @llvm.dbg.value(metadata i32* %4, metadata !7018, metadata !DIExpression(DW_OP_deref)), !dbg !7019
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #25, !dbg !7021
  call void @llvm.dbg.value(metadata i32 %6, metadata !7017, metadata !DIExpression()), !dbg !7019
  %7 = icmp eq i32 %6, 0, !dbg !7022
  br i1 %7, label %8, label %31, !dbg !7024

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !7017, metadata !DIExpression()), !dbg !7019
  %9 = and i32 %2, 131072, !dbg !7025
  %10 = icmp eq i32 %9, 0, !dbg !7027
  br i1 %10, label %28, label %11, !dbg !7028

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !7029
  %13 = icmp eq i32 %12, 0, !dbg !7032
  br i1 %13, label %18, label %14, !dbg !7033

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !7034
  %16 = shl nuw i32 1, %15, !dbg !7034
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #25, !dbg !7036
  br label %25, !dbg !7037

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !7038
  %20 = icmp eq i32 %19, 0, !dbg !7040
  %21 = zext i8 %1 to i32, !dbg !7019
  br i1 %20, label %25, label %22, !dbg !7041

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !7042
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #25, !dbg !7044
  br label %25, !dbg !7045

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !7046
  %27 = load i32, i32* %4, align 4, !dbg !7047
  call void @llvm.dbg.value(metadata i32 %30, metadata !7018, metadata !DIExpression()), !dbg !7019
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #25, !dbg !7048
  br label %31, !dbg !7049

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !7046
  %30 = load i32, i32* %4, align 4, !dbg !7047
  call void @llvm.dbg.value(metadata i32 %30, metadata !7018, metadata !DIExpression()), !dbg !7019
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #25, !dbg !7048
  call void @llvm.dbg.value(metadata i32 0, metadata !7017, metadata !DIExpression()), !dbg !7019
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !7050
  ret i32 %6, !dbg !7050
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !7051 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7055, metadata !DIExpression()), !dbg !7060
  call void @llvm.dbg.value(metadata i32* %1, metadata !7056, metadata !DIExpression()), !dbg !7060
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7061
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7061
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7061
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7057, metadata !DIExpression()), !dbg !7060
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7062
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7062
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7062
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7059, metadata !DIExpression()), !dbg !7060
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #25, !dbg !7063
  store i32 %9, i32* %1, align 4, !dbg !7064
  ret i32 0, !dbg !7065
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !7066 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7068, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.value(metadata i32 %1, metadata !7069, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.value(metadata i32 %2, metadata !7070, metadata !DIExpression()), !dbg !7074
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7075
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !7075
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !7075
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !7071, metadata !DIExpression()), !dbg !7074
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !7076
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !7076
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !7076
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !7072, metadata !DIExpression()), !dbg !7074
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #25, !dbg !7077
  call void @llvm.dbg.value(metadata i32 %10, metadata !7073, metadata !DIExpression()), !dbg !7074
  %11 = xor i32 %1, -1, !dbg !7078
  %12 = and i32 %10, %11, !dbg !7079
  %13 = and i32 %2, %1, !dbg !7080
  %14 = or i32 %12, %13, !dbg !7081
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #25, !dbg !7082
  ret i32 0, !dbg !7083
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !7084 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7086, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.value(metadata i32 %1, metadata !7087, metadata !DIExpression()), !dbg !7090
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7091
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7091
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7091
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7088, metadata !DIExpression()), !dbg !7090
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7092
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7092
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7092
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7089, metadata !DIExpression()), !dbg !7090
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !7093
  store volatile i32 %1, i32* %9, align 4, !dbg !7093
  ret i32 0, !dbg !7094
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !7095 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7097, metadata !DIExpression()), !dbg !7101
  call void @llvm.dbg.value(metadata i32 %1, metadata !7098, metadata !DIExpression()), !dbg !7101
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7102
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7102
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7102
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7099, metadata !DIExpression()), !dbg !7101
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7103
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7103
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7103
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7100, metadata !DIExpression()), !dbg !7101
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #25, !dbg !7104
  ret i32 0, !dbg !7105
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !7106 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7108, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i32 %1, metadata !7109, metadata !DIExpression()), !dbg !7112
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7113
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !7113
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !7113
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !7110, metadata !DIExpression()), !dbg !7112
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !7114
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !7114
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !7114
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !7111, metadata !DIExpression()), !dbg !7112
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !7115
  %10 = load volatile i32, i32* %9, align 4, !dbg !7115
  %11 = xor i32 %10, %1, !dbg !7115
  store volatile i32 %11, i32* %9, align 4, !dbg !7115
  ret i32 0, !dbg !7116
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !7117 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7119, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.value(metadata i8 %1, metadata !7120, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.value(metadata i32 %2, metadata !7121, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.value(metadata i32 %3, metadata !7122, metadata !DIExpression()), !dbg !7129
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7130
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7130
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7130
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7123, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.value(metadata i8* undef, metadata !7124, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.value(metadata i32 0, metadata !7126, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.value(metadata i32 0, metadata !7127, metadata !DIExpression()), !dbg !7129
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !7131

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !7132
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #25, !dbg !7136
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7137
  %12 = load i32, i32* %11, align 4, !dbg !7137
  %13 = icmp eq i32 %10, %12, !dbg !7138
  br i1 %13, label %14, label %29, !dbg !7139

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #24, !dbg !7140
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #24, !dbg !7142
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #24, !dbg !7143
  br label %29, !dbg !7144

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7145
  %17 = load i8*, i8** %16, align 4, !dbg !7145
  call void @llvm.dbg.value(metadata i8* %17, metadata !7124, metadata !DIExpression()), !dbg !7129
  %18 = zext i8 %1 to i32, !dbg !7146
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #24, !dbg !7148
  %20 = icmp eq i32 %19, 0, !dbg !7149
  br i1 %20, label %21, label %29, !dbg !7150

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !7151
  %23 = load i32, i32* %22, align 4, !dbg !7151
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #25, !dbg !7152
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !7153

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !7126, metadata !DIExpression()), !dbg !7129
  br label %27, !dbg !7154

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !7126, metadata !DIExpression()), !dbg !7129
  br label %27, !dbg !7156

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !7126, metadata !DIExpression()), !dbg !7129
  br label %27, !dbg !7157

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !7129
  call void @llvm.dbg.value(metadata i32 %28, metadata !7126, metadata !DIExpression()), !dbg !7129
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #24, !dbg !7158
  tail call void @stm32_exti_enable(i32 noundef %18) #24, !dbg !7159
  br label %29, !dbg !7159

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !7129
  call void @llvm.dbg.value(metadata i32 %30, metadata !7127, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.label(metadata !7128), !dbg !7160
  ret i32 %30, !dbg !7161
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #11 !dbg !7162 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7164, metadata !DIExpression()), !dbg !7168
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7165, metadata !DIExpression()), !dbg !7168
  call void @llvm.dbg.value(metadata i1 %2, metadata !7166, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7168
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7169
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !7169
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !7169
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !7167, metadata !DIExpression()), !dbg !7168
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !7170
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #25, !dbg !7171
  ret i32 %8, !dbg !7172
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #11 !dbg !7173 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7179, metadata !DIExpression()), !dbg !7182
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !7180, metadata !DIExpression()), !dbg !7182
  call void @llvm.dbg.value(metadata i1 %2, metadata !7181, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7182
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #25, !dbg !7183
  br i1 %4, label %10, label %5, !dbg !7185

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7186
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #25, !dbg !7189
  %8 = or i1 %7, %2, !dbg !7190
  %9 = select i1 %8, i32 0, i32 -22, !dbg !7190
  br i1 %2, label %11, label %13, !dbg !7190

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !7191

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !7192
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #25, !dbg !7195
  br label %13, !dbg !7196

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !7182
  ret i32 %14, !dbg !7197
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7198 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7202, metadata !DIExpression()), !dbg !7203
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7204
  %3 = icmp eq %struct._snode* %2, null, !dbg !7204
  ret i1 %3, !dbg !7204
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !7205 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7209, metadata !DIExpression()), !dbg !7213
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7210, metadata !DIExpression()), !dbg !7213
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7211, metadata !DIExpression()), !dbg !7213
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7214
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7212, metadata !DIExpression()), !dbg !7213
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7211, metadata !DIExpression()), !dbg !7213
  %4 = icmp eq %struct._snode* %3, null, !dbg !7216
  br i1 %4, label %15, label %5, !dbg !7214

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !7212, metadata !DIExpression()), !dbg !7213
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !7211, metadata !DIExpression()), !dbg !7213
  %6 = icmp eq %struct._snode* %3, %1, !dbg !7218
  br i1 %6, label %9, label %11, !dbg !7221

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7212, metadata !DIExpression()), !dbg !7213
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7211, metadata !DIExpression()), !dbg !7213
  %8 = icmp eq %struct._snode* %13, %1, !dbg !7218
  br i1 %8, label %9, label %11, !dbg !7221, !llvm.loop !7222

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #25, !dbg !7223
  br label %15, !dbg !7223

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7212, metadata !DIExpression()), !dbg !7213
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !7211, metadata !DIExpression()), !dbg !7213
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #25, !dbg !7216
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !7212, metadata !DIExpression()), !dbg !7213
  %14 = icmp eq %struct._snode* %13, null, !dbg !7216
  br i1 %14, label %15, label %7, !dbg !7214, !llvm.loop !7222

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !7225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !7226 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7230, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7231, metadata !DIExpression()), !dbg !7232
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7233
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #25, !dbg !7233
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #25, !dbg !7233
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !7234
  %5 = icmp eq %struct._snode* %4, null, !dbg !7234
  br i1 %5, label %6, label %8, !dbg !7233

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7236
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #25, !dbg !7236
  br label %8, !dbg !7236

8:                                                ; preds = %6, %2
  ret void, !dbg !7233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7238 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7242, metadata !DIExpression()), !dbg !7243
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7244
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7244
  ret %struct._snode* %3, !dbg !7245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #3 !dbg !7246 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7250, metadata !DIExpression()), !dbg !7252
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7251, metadata !DIExpression()), !dbg !7252
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7253
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7254
  ret void, !dbg !7255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #3 !dbg !7256 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7258, metadata !DIExpression()), !dbg !7260
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7259, metadata !DIExpression()), !dbg !7260
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !7261
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7262
  ret void, !dbg !7263
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7264 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7266, metadata !DIExpression()), !dbg !7267
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7268
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7268
  ret %struct._snode* %3, !dbg !7269
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #3 !dbg !7270 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7272, metadata !DIExpression()), !dbg !7274
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7273, metadata !DIExpression()), !dbg !7274
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !7275
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !7276
  ret void, !dbg !7277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !7278 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7282, metadata !DIExpression()), !dbg !7285
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !7283, metadata !DIExpression()), !dbg !7285
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !7284, metadata !DIExpression()), !dbg !7285
  %4 = icmp eq %struct._snode* %1, null, !dbg !7286
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #25, !dbg !7288
  br i1 %4, label %6, label %11, !dbg !7289

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #25, !dbg !7290
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !7292
  %8 = icmp eq %struct._snode* %7, %2, !dbg !7292
  br i1 %8, label %9, label %15, !dbg !7290

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7294
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #25, !dbg !7294
  br label %15, !dbg !7294

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #25, !dbg !7296
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #25, !dbg !7298
  %13 = icmp eq %struct._snode* %12, %2, !dbg !7298
  br i1 %13, label %14, label %15, !dbg !7296

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #25, !dbg !7300
  br label %15, !dbg !7300

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #25, !dbg !7289
  ret void, !dbg !7289
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #4 !dbg !7302 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7306, metadata !DIExpression()), !dbg !7307
  %2 = icmp eq %struct._snode* %0, null, !dbg !7308
  br i1 %2, label %5, label %3, !dbg !7308

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #25, !dbg !7308
  br label %5, !dbg !7308

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !7308
  ret %struct._snode* %6, !dbg !7308
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7309 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7311, metadata !DIExpression()), !dbg !7312
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #25, !dbg !7313
  ret %struct._snode* %2, !dbg !7313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !7314 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !7316, metadata !DIExpression()), !dbg !7317
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !7318
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !7318
  ret %struct._snode* %3, !dbg !7319
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !7320 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7322, metadata !DIExpression()), !dbg !7325
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #25, !dbg !7326, !range !7327
  call void @llvm.dbg.value(metadata i32 %2, metadata !7323, metadata !DIExpression()), !dbg !7325
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #25, !dbg !7328
  call void @llvm.dbg.value(metadata i32 %3, metadata !7324, metadata !DIExpression()), !dbg !7325
  ret i32 %3, !dbg !7329
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !7330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7332, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.value(metadata i8* %1, metadata !7333, metadata !DIExpression()), !dbg !7335
  call void @llvm.dbg.value(metadata i8* %1, metadata !7334, metadata !DIExpression()), !dbg !7335
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !7336
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !7336
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7337
  %6 = bitcast i8* %5 to %struct.device**, !dbg !7337
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !7337
  %8 = shl nuw i32 1, %0, !dbg !7338
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #25, !dbg !7339
  ret void, !dbg !7340
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7341 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !7345, metadata !DIExpression()), !dbg !7351
  call void @llvm.dbg.value(metadata i32 %1, metadata !7346, metadata !DIExpression()), !dbg !7351
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !7347, metadata !DIExpression()), !dbg !7351
  %4 = bitcast i64* %3 to i8*, !dbg !7352
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7352
  call void @llvm.dbg.value(metadata i64 4294967328, metadata !7349, metadata !DIExpression()), !dbg !7351
  store i64 4294967328, i64* %3, align 8, !dbg !7353
  call void @llvm.dbg.value(metadata i64* %3, metadata !7349, metadata !DIExpression(DW_OP_deref)), !dbg !7351
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #25, !dbg !7354
  call void @llvm.dbg.value(metadata i32 %5, metadata !7350, metadata !DIExpression()), !dbg !7351
  %6 = icmp eq i32 %5, 0, !dbg !7355
  br i1 %6, label %7, label %8, !dbg !7357

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #25, !dbg !7358
  br label %8, !dbg !7359

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !7360
  ret void, !dbg !7360
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !7361 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !7363, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i8* %0, metadata !7364, metadata !DIExpression()), !dbg !7366
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_9, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !7367
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !7365, metadata !DIExpression()), !dbg !7366
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !7368
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !7368
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_9, i8* noundef %0) #24, !dbg !7369
  ret i32 %5, !dbg !7370
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7371 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7373, metadata !DIExpression()), !dbg !7376
  call void @llvm.dbg.value(metadata i32 %1, metadata !7374, metadata !DIExpression()), !dbg !7376
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #25, !dbg !7377
  call void @llvm.dbg.value(metadata i32 %3, metadata !7375, metadata !DIExpression()), !dbg !7376
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #25, !dbg !7378
  ret void, !dbg !7379
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #12 !dbg !7380 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7384, metadata !DIExpression()), !dbg !7385
  %2 = sdiv i32 %0, 4, !dbg !7386
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !7387
  %6 = add nsw i32 %5, 16, !dbg !7388
  %7 = shl i32 15, %6, !dbg !7389
  %8 = or i32 %7, %2, !dbg !7390
  ret i32 %8, !dbg !7391
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !7392 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7397, metadata !DIExpression()), !dbg !7399
  call void @llvm.dbg.value(metadata i32 %1, metadata !7398, metadata !DIExpression()), !dbg !7399
  %3 = and i32 %1, 3, !dbg !7400
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %3, !dbg !7400
  %5 = load volatile i32, i32* %4, align 4, !dbg !7400
  %6 = lshr i32 %1, 16, !dbg !7400
  %7 = xor i32 %6, -1, !dbg !7400
  %8 = and i32 %5, %7, !dbg !7400
  call void @llvm.dbg.value(metadata i32 %6, metadata !7401, metadata !DIExpression()) #23, !dbg !7405
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !7407, !srcloc !7408
  call void @llvm.dbg.value(metadata i32 %9, metadata !7404, metadata !DIExpression()) #23, !dbg !7405
  call void @llvm.dbg.value(metadata i32 %9, metadata !7409, metadata !DIExpression()) #23, !dbg !7414
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !7416, !range !5588
  %11 = shl i32 %0, %10, !dbg !7400
  %12 = or i32 %11, %8, !dbg !7400
  store volatile i32 %12, i32* %4, align 4, !dbg !7400
  ret void, !dbg !7417
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7418 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !7422, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !7423, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i32 %2, metadata !7424, metadata !DIExpression()), !dbg !7427
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #25, !dbg !7428
  %5 = icmp eq %struct._snode* %4, null, !dbg !7428
  br i1 %5, label %21, label %6, !dbg !7428

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #25, !dbg !7430
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7426, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !7425, metadata !DIExpression()), !dbg !7427
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !7431
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !7431
  %11 = load i32, i32* %10, align 4, !dbg !7431
  %12 = and i32 %11, %2, !dbg !7435
  %13 = icmp eq i32 %12, 0, !dbg !7435
  br i1 %13, label %19, label %14, !dbg !7436

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !7425, metadata !DIExpression()), !dbg !7427
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !7437
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !7437
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !7437
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #24, !dbg !7439
  br label %19, !dbg !7440

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !7425, metadata !DIExpression()), !dbg !7427
  %20 = icmp eq %struct._snode* %8, null, !dbg !7441
  br i1 %20, label %21, label %6, !dbg !7441

21:                                               ; preds = %19, %3
  ret void, !dbg !7442
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !7443 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7445, metadata !DIExpression()), !dbg !7446
  %2 = and i32 %0, 3, !dbg !7447
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073807368 to [4 x i32]*), i32 0, i32 %2, !dbg !7447
  %4 = load volatile i32, i32* %3, align 4, !dbg !7447
  %5 = lshr i32 %0, 16, !dbg !7447
  %6 = and i32 %4, %5, !dbg !7447
  call void @llvm.dbg.value(metadata i32 %5, metadata !7401, metadata !DIExpression()) #23, !dbg !7448
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !7450, !srcloc !7408
  call void @llvm.dbg.value(metadata i32 %7, metadata !7404, metadata !DIExpression()) #23, !dbg !7448
  call void @llvm.dbg.value(metadata i32 %7, metadata !7409, metadata !DIExpression()) #23, !dbg !7451
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !7453, !range !5588
  %9 = lshr i32 %6, %8, !dbg !7454
  ret i32 %9, !dbg !7455
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !7456 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7461, metadata !DIExpression()), !dbg !7463
  call void @llvm.dbg.value(metadata i32 %1, metadata !7462, metadata !DIExpression()), !dbg !7463
  %3 = shl i32 %1, 16, !dbg !7464
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !7464
  store volatile i32 %3, i32* %4, align 4, !dbg !7464
  ret void, !dbg !7465
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !7466 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7470, metadata !DIExpression()), !dbg !7471
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7472
  %3 = load volatile i32, i32* %2, align 4, !dbg !7472
  ret i32 %3, !dbg !7473
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !7474 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7476, metadata !DIExpression()), !dbg !7478
  call void @llvm.dbg.value(metadata i32 %1, metadata !7477, metadata !DIExpression()), !dbg !7478
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !7479
  store volatile i32 %1, i32* %3, align 4, !dbg !7479
  ret void, !dbg !7480
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !7481 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7483, metadata !DIExpression()), !dbg !7484
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !7485
  %3 = load volatile i32, i32* %2, align 4, !dbg !7485
  ret i32 %3, !dbg !7486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !7487 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7491, metadata !DIExpression()), !dbg !7493
  call void @llvm.dbg.value(metadata i32* %1, metadata !7492, metadata !DIExpression()), !dbg !7493
  %3 = and i32 %0, 131072, !dbg !7494
  %4 = icmp eq i32 %3, 0, !dbg !7496
  br i1 %4, label %22, label %5, !dbg !7497

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !7498
  %6 = and i32 %0, 2, !dbg !7500
  %7 = icmp eq i32 %6, 0, !dbg !7502
  br i1 %7, label %11, label %8, !dbg !7503

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !7504
  %10 = icmp eq i32 %9, 0, !dbg !7504
  br i1 %10, label %33, label %11, !dbg !7507

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !7508
  store i32 %12, i32* %1, align 4, !dbg !7508
  %13 = and i32 %0, 16, !dbg !7509
  %14 = icmp eq i32 %13, 0, !dbg !7511
  br i1 %14, label %17, label %15, !dbg !7512

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !7513
  br label %31, !dbg !7515

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !7516
  %19 = icmp eq i32 %18, 0, !dbg !7518
  br i1 %19, label %33, label %20, !dbg !7519

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !7520
  br label %31, !dbg !7522

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !7523
  %24 = icmp eq i32 %23, 0, !dbg !7525
  br i1 %24, label %31, label %25, !dbg !7526

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !7527
  %27 = icmp eq i32 %26, 0, !dbg !7530
  br i1 %27, label %28, label %31, !dbg !7531

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !7532
  br label %33, !dbg !7533

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !7493
  ret i32 %34, !dbg !7533
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !7534 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7538, metadata !DIExpression()), !dbg !7549
  call void @llvm.dbg.value(metadata i32 %1, metadata !7539, metadata !DIExpression()), !dbg !7549
  call void @llvm.dbg.value(metadata i32 %2, metadata !7540, metadata !DIExpression()), !dbg !7549
  call void @llvm.dbg.value(metadata i32 %3, metadata !7541, metadata !DIExpression()), !dbg !7549
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7550
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !7550
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !7550
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !7542, metadata !DIExpression()), !dbg !7549
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !7551
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !7551
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !7551
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !7543, metadata !DIExpression()), !dbg !7549
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #25, !dbg !7552
  call void @llvm.dbg.value(metadata i32 %11, metadata !7544, metadata !DIExpression()), !dbg !7549
  %12 = and i32 %2, 48, !dbg !7553
  call void @llvm.dbg.value(metadata i32 %12, metadata !7545, metadata !DIExpression()), !dbg !7549
  call void @llvm.dbg.value(metadata i32 %2, metadata !7546, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !7549
  call void @llvm.dbg.value(metadata i32 %2, metadata !7547, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !7549
  call void @llvm.dbg.value(metadata i32 %2, metadata !7548, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !7549
  %13 = lshr i32 %2, 6, !dbg !7554
  %14 = and i32 %13, 1, !dbg !7554
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #25, !dbg !7555
  %15 = lshr i32 %2, 7, !dbg !7556
  %16 = and i32 %15, 3, !dbg !7556
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #25, !dbg !7557
  %17 = lshr i32 %2, 9, !dbg !7558
  %18 = and i32 %17, 3, !dbg !7558
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #25, !dbg !7559
  %19 = icmp eq i32 %12, 32, !dbg !7560
  br i1 %19, label %20, label %24, !dbg !7562

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !7563
  br i1 %21, label %22, label %23, !dbg !7566

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !7567
  br label %24, !dbg !7569

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #25, !dbg !7570
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !7572
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #25, !dbg !7573
  ret void, !dbg !7574
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #12 !dbg !7575 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7577, metadata !DIExpression()), !dbg !7579
  %2 = shl nuw i32 1, %0, !dbg !7580
  call void @llvm.dbg.value(metadata i32 %2, metadata !7578, metadata !DIExpression()), !dbg !7579
  ret i32 %2, !dbg !7581
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !7582 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7586, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.value(metadata i32 %1, metadata !7587, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.value(metadata i32 %2, metadata !7588, metadata !DIExpression()), !dbg !7589
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !7590
  %5 = load volatile i32, i32* %4, align 4, !dbg !7590
  %6 = xor i32 %1, -1, !dbg !7590
  %7 = and i32 %5, %6, !dbg !7590
  %8 = mul i32 %2, %1, !dbg !7590
  %9 = or i32 %7, %8, !dbg !7590
  store volatile i32 %9, i32* %4, align 4, !dbg !7590
  ret void, !dbg !7591
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7592 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7594, metadata !DIExpression()), !dbg !7597
  call void @llvm.dbg.value(metadata i32 %1, metadata !7595, metadata !DIExpression()), !dbg !7597
  call void @llvm.dbg.value(metadata i32 %2, metadata !7596, metadata !DIExpression()), !dbg !7597
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !7598
  %5 = load volatile i32, i32* %4, align 4, !dbg !7598
  call void @llvm.dbg.value(metadata i32 %1, metadata !7401, metadata !DIExpression()) #23, !dbg !7599
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7601, !srcloc !7408
  call void @llvm.dbg.value(metadata i32 %6, metadata !7404, metadata !DIExpression()) #23, !dbg !7599
  call void @llvm.dbg.value(metadata i32 %6, metadata !7409, metadata !DIExpression()) #23, !dbg !7602
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7604, !range !5588
  %8 = shl nuw nsw i32 %7, 1, !dbg !7598
  %9 = shl i32 3, %8, !dbg !7598
  %10 = xor i32 %9, -1, !dbg !7598
  %11 = and i32 %5, %10, !dbg !7598
  call void @llvm.dbg.value(metadata i32 %1, metadata !7401, metadata !DIExpression()) #23, !dbg !7605
  call void @llvm.dbg.value(metadata i32 %6, metadata !7404, metadata !DIExpression()) #23, !dbg !7605
  call void @llvm.dbg.value(metadata i32 %6, metadata !7409, metadata !DIExpression()) #23, !dbg !7607
  %12 = shl i32 %2, %8, !dbg !7598
  %13 = or i32 %11, %12, !dbg !7598
  store volatile i32 %13, i32* %4, align 4, !dbg !7598
  ret void, !dbg !7609
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7610 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7612, metadata !DIExpression()), !dbg !7615
  call void @llvm.dbg.value(metadata i32 %1, metadata !7613, metadata !DIExpression()), !dbg !7615
  call void @llvm.dbg.value(metadata i32 %2, metadata !7614, metadata !DIExpression()), !dbg !7615
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !7616
  %5 = load volatile i32, i32* %4, align 4, !dbg !7616
  call void @llvm.dbg.value(metadata i32 %1, metadata !7401, metadata !DIExpression()) #23, !dbg !7617
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7619, !srcloc !7408
  call void @llvm.dbg.value(metadata i32 %6, metadata !7404, metadata !DIExpression()) #23, !dbg !7617
  call void @llvm.dbg.value(metadata i32 %6, metadata !7409, metadata !DIExpression()) #23, !dbg !7620
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7622, !range !5588
  %8 = shl nuw nsw i32 %7, 1, !dbg !7616
  %9 = shl i32 3, %8, !dbg !7616
  %10 = xor i32 %9, -1, !dbg !7616
  %11 = and i32 %5, %10, !dbg !7616
  call void @llvm.dbg.value(metadata i32 %1, metadata !7401, metadata !DIExpression()) #23, !dbg !7623
  call void @llvm.dbg.value(metadata i32 %6, metadata !7404, metadata !DIExpression()) #23, !dbg !7623
  call void @llvm.dbg.value(metadata i32 %6, metadata !7409, metadata !DIExpression()) #23, !dbg !7625
  %12 = shl i32 %2, %8, !dbg !7616
  %13 = or i32 %11, %12, !dbg !7616
  store volatile i32 %13, i32* %4, align 4, !dbg !7616
  ret void, !dbg !7627
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7628 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7630, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i32 %1, metadata !7631, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata i32 %2, metadata !7632, metadata !DIExpression()), !dbg !7633
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !7634
  %5 = load volatile i32, i32* %4, align 4, !dbg !7634
  call void @llvm.dbg.value(metadata i32 %1, metadata !7401, metadata !DIExpression()) #23, !dbg !7635
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7637, !srcloc !7408
  call void @llvm.dbg.value(metadata i32 %6, metadata !7404, metadata !DIExpression()) #23, !dbg !7635
  call void @llvm.dbg.value(metadata i32 %6, metadata !7409, metadata !DIExpression()) #23, !dbg !7638
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7640, !range !5588
  %8 = shl nuw nsw i32 %7, 2, !dbg !7634
  %9 = shl i32 15, %8, !dbg !7634
  %10 = xor i32 %9, -1, !dbg !7634
  %11 = and i32 %5, %10, !dbg !7634
  call void @llvm.dbg.value(metadata i32 %1, metadata !7401, metadata !DIExpression()) #23, !dbg !7641
  call void @llvm.dbg.value(metadata i32 %6, metadata !7404, metadata !DIExpression()) #23, !dbg !7641
  call void @llvm.dbg.value(metadata i32 %6, metadata !7409, metadata !DIExpression()) #23, !dbg !7643
  %12 = shl i32 %2, %8, !dbg !7634
  %13 = or i32 %11, %12, !dbg !7634
  store volatile i32 %13, i32* %4, align 4, !dbg !7634
  ret void, !dbg !7645
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7646 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7648, metadata !DIExpression()), !dbg !7651
  call void @llvm.dbg.value(metadata i32 %1, metadata !7649, metadata !DIExpression()), !dbg !7651
  call void @llvm.dbg.value(metadata i32 %2, metadata !7650, metadata !DIExpression()), !dbg !7651
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !7652
  %5 = load volatile i32, i32* %4, align 4, !dbg !7652
  %6 = lshr i32 %1, 8, !dbg !7652
  call void @llvm.dbg.value(metadata i32 %6, metadata !7401, metadata !DIExpression()) #23, !dbg !7653
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !7655, !srcloc !7408
  call void @llvm.dbg.value(metadata i32 %7, metadata !7404, metadata !DIExpression()) #23, !dbg !7653
  call void @llvm.dbg.value(metadata i32 %7, metadata !7409, metadata !DIExpression()) #23, !dbg !7656
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !7658, !range !5588
  %9 = shl nuw nsw i32 %8, 2, !dbg !7652
  %10 = shl i32 15, %9, !dbg !7652
  %11 = xor i32 %10, -1, !dbg !7652
  %12 = and i32 %5, %11, !dbg !7652
  call void @llvm.dbg.value(metadata i32 %6, metadata !7401, metadata !DIExpression()) #23, !dbg !7659
  call void @llvm.dbg.value(metadata i32 %7, metadata !7404, metadata !DIExpression()) #23, !dbg !7659
  call void @llvm.dbg.value(metadata i32 %7, metadata !7409, metadata !DIExpression()) #23, !dbg !7661
  %13 = shl i32 %2, %9, !dbg !7652
  %14 = or i32 %12, %13, !dbg !7652
  store volatile i32 %14, i32* %4, align 4, !dbg !7652
  ret void, !dbg !7663
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !7664 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !7666, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %1, metadata !7667, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.value(metadata i32 %2, metadata !7668, metadata !DIExpression()), !dbg !7669
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !7670
  %5 = load volatile i32, i32* %4, align 4, !dbg !7670
  call void @llvm.dbg.value(metadata i32 %1, metadata !7401, metadata !DIExpression()) #23, !dbg !7671
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !7673, !srcloc !7408
  call void @llvm.dbg.value(metadata i32 %6, metadata !7404, metadata !DIExpression()) #23, !dbg !7671
  call void @llvm.dbg.value(metadata i32 %6, metadata !7409, metadata !DIExpression()) #23, !dbg !7674
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !7676, !range !5588
  %8 = shl nuw nsw i32 %7, 1, !dbg !7670
  %9 = shl i32 3, %8, !dbg !7670
  %10 = xor i32 %9, -1, !dbg !7670
  %11 = and i32 %5, %10, !dbg !7670
  call void @llvm.dbg.value(metadata i32 %1, metadata !7401, metadata !DIExpression()) #23, !dbg !7677
  call void @llvm.dbg.value(metadata i32 %6, metadata !7404, metadata !DIExpression()) #23, !dbg !7677
  call void @llvm.dbg.value(metadata i32 %6, metadata !7409, metadata !DIExpression()) #23, !dbg !7679
  %12 = shl i32 %2, %8, !dbg !7670
  %13 = or i32 %11, %12, !dbg !7670
  store volatile i32 %13, i32* %4, align 4, !dbg !7670
  ret void, !dbg !7681
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !7682 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7684, metadata !DIExpression()), !dbg !7687
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7688
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !7688
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !7688
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !7685, metadata !DIExpression()), !dbg !7687
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !7689
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !7690
  %6 = tail call fastcc zeroext i1 @device_is_ready.50() #25, !dbg !7691
  br i1 %6, label %7, label %11, !dbg !7693

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #25, !dbg !7694
  call void @llvm.dbg.value(metadata i32 %8, metadata !7686, metadata !DIExpression()), !dbg !7687
  %9 = icmp slt i32 %8, 0, !dbg !7695
  %10 = select i1 %9, i32 %8, i32 0, !dbg !7697
  br label %11, !dbg !7697

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !7687
  ret i32 %12, !dbg !7698
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.50() unnamed_addr #1 !dbg !7699 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !7703, metadata !DIExpression()), !dbg !7704
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !7705, !srcloc !7707
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.51() #25, !dbg !7708
  ret i1 %1, !dbg !7709
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7710 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7714, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata i8 1, metadata !7715, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !7716, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata i32 0, metadata !7717, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !7718, metadata !DIExpression()), !dbg !7719
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7720
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !7720
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !7720
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !7716, metadata !DIExpression()), !dbg !7719
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !7721
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !7724
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #25, !dbg !7725
  call void @llvm.dbg.value(metadata i32 %7, metadata !7717, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.value(metadata i32 %7, metadata !7717, metadata !DIExpression()), !dbg !7719
  ret i32 %7, !dbg !7726
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.51() unnamed_addr #1 !dbg !7727 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !7729, metadata !DIExpression()), !dbg !7730
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_9) #24, !dbg !7731
  ret i1 %1, !dbg !7732
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7733 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7737, metadata !DIExpression()), !dbg !7745
  call void @llvm.dbg.value(metadata i32 %1, metadata !7738, metadata !DIExpression()), !dbg !7745
  call void @llvm.dbg.value(metadata i32 %2, metadata !7739, metadata !DIExpression()), !dbg !7745
  call void @llvm.dbg.value(metadata i32 %3, metadata !7740, metadata !DIExpression()), !dbg !7745
  call void @llvm.dbg.value(metadata i32 0, metadata !7741, metadata !DIExpression()), !dbg !7745
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #25, !dbg !7746
  %5 = icmp eq i32 %3, 17, !dbg !7747
  br i1 %5, label %6, label %14, !dbg !7748

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !7749
  call void @llvm.dbg.value(metadata i32 %7, metadata !7742, metadata !DIExpression()), !dbg !7750
  %8 = icmp eq i32 %7, 0, !dbg !7751
  %9 = shl nuw i32 1, %1, !dbg !7753
  br i1 %8, label %12, label %10, !dbg !7754

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !7755
  br label %14, !dbg !7757

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #25, !dbg !7758
  br label %14, !dbg !7761

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !7762
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #13 !dbg !7763 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7765, metadata !DIExpression()), !dbg !7769
  call void @llvm.dbg.value(metadata i8* %1, metadata !7766, metadata !DIExpression()), !dbg !7769
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7770
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !7770
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !7770
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !7767, metadata !DIExpression()), !dbg !7769
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !7771
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7771
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #25, !dbg !7773
  %9 = icmp eq i32 %8, 0, !dbg !7773
  br i1 %9, label %12, label %10, !dbg !7774

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7775
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #25, !dbg !7777
  br label %12, !dbg !7778

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7779
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #25, !dbg !7781
  %15 = icmp eq i32 %14, 0, !dbg !7781
  br i1 %15, label %19, label %16, !dbg !7782

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7783
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #25, !dbg !7784
  store i8 %18, i8* %1, align 1, !dbg !7785
  br label %19, !dbg !7786

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !7769
  ret i32 %20, !dbg !7787
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !7788 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7790, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata i8 %1, metadata !7791, metadata !DIExpression()), !dbg !7794
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7795
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !7795
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !7795
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !7792, metadata !DIExpression()), !dbg !7794
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !7796

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7797
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #25, !dbg !7800
  %10 = icmp eq i32 %9, 0, !dbg !7800
  br i1 %10, label %18, label %11, !dbg !7801

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !7802, !srcloc !7809
  call void @llvm.dbg.value(metadata i32 undef, metadata !7805, metadata !DIExpression()) #23, !dbg !7810
  call void @llvm.dbg.value(metadata i32 undef, metadata !7806, metadata !DIExpression()) #23, !dbg !7810
  call void @llvm.dbg.value(metadata i32 undef, metadata !7793, metadata !DIExpression()), !dbg !7794
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7811
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #25, !dbg !7813
  %15 = icmp eq i32 %14, 0, !dbg !7813
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !7802
  br i1 %15, label %17, label %19, !dbg !7814

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !7805, metadata !DIExpression()) #23, !dbg !7810
  call void @llvm.dbg.value(metadata i32 %16, metadata !7793, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata i32 undef, metadata !7815, metadata !DIExpression()) #23, !dbg !7818
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !7820, !srcloc !7821
  br label %18, !dbg !7822

18:                                               ; preds = %17, %7
  br label %7, !dbg !7797, !llvm.loop !7823

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !7802
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !7825
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #25, !dbg !7826
  call void @llvm.dbg.value(metadata i32 %20, metadata !7815, metadata !DIExpression()) #23, !dbg !7827
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !7829, !srcloc !7821
  ret void, !dbg !7830
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #13 !dbg !7831 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7833, metadata !DIExpression()), !dbg !7836
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7837
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !7837
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !7837
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !7834, metadata !DIExpression()), !dbg !7836
  call void @llvm.dbg.value(metadata i32 0, metadata !7835, metadata !DIExpression()), !dbg !7836
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !7838
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7838
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #25, !dbg !7840
  %8 = icmp ne i32 %7, 0, !dbg !7840
  %9 = zext i1 %8 to i32, !dbg !7841
  call void @llvm.dbg.value(metadata i32 %9, metadata !7835, metadata !DIExpression()), !dbg !7836
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7842
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #25, !dbg !7844
  %12 = icmp eq i32 %11, 0, !dbg !7844
  %13 = or i32 %9, 2, !dbg !7845
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !7845
  call void @llvm.dbg.value(metadata i32 %14, metadata !7835, metadata !DIExpression()), !dbg !7836
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7846
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #25, !dbg !7848
  %17 = icmp eq i32 %16, 0, !dbg !7848
  %18 = or i32 %14, 4, !dbg !7849
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !7849
  call void @llvm.dbg.value(metadata i32 %19, metadata !7835, metadata !DIExpression()), !dbg !7836
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7850
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #25, !dbg !7852
  %22 = icmp eq i32 %21, 0, !dbg !7852
  %23 = or i32 %19, 8, !dbg !7853
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !7853
  call void @llvm.dbg.value(metadata i32 %24, metadata !7835, metadata !DIExpression()), !dbg !7836
  %25 = and i32 %24, 8, !dbg !7854
  %26 = icmp eq i32 %25, 0, !dbg !7854
  br i1 %26, label %29, label %27, !dbg !7856

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7857
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #25, !dbg !7859
  br label %29, !dbg !7860

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !7861
  %31 = icmp eq i32 %30, 0, !dbg !7861
  br i1 %31, label %34, label %32, !dbg !7863

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7864
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #25, !dbg !7866
  br label %34, !dbg !7867

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !7868
  %36 = icmp eq i32 %35, 0, !dbg !7868
  br i1 %36, label %39, label %37, !dbg !7870

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7871
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #25, !dbg !7873
  br label %39, !dbg !7874

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !7875
  %41 = icmp eq i32 %40, 0, !dbg !7875
  br i1 %41, label %44, label %42, !dbg !7877

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7878
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #25, !dbg !7880
  br label %44, !dbg !7881

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !7882
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #25, !dbg !7883
  ret i32 %24, !dbg !7884
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !7885 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7887, metadata !DIExpression()), !dbg !7896
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !7888, metadata !DIExpression()), !dbg !7896
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !7897
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !7897
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !7897
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !7889, metadata !DIExpression()), !dbg !7896
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7898
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !7898
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !7898
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !7890, metadata !DIExpression()), !dbg !7896
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !7899
  %10 = load i8, i8* %9, align 4, !dbg !7899
  %11 = zext i8 %10 to i32, !dbg !7900
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #25, !dbg !7901
  call void @llvm.dbg.value(metadata i32 %12, metadata !7892, metadata !DIExpression()), !dbg !7896
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !7902
  %14 = load i8, i8* %13, align 1, !dbg !7902
  %15 = zext i8 %14 to i32, !dbg !7903
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #25, !dbg !7904
  call void @llvm.dbg.value(metadata i32 %16, metadata !7893, metadata !DIExpression()), !dbg !7896
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !7905
  %18 = load i8, i8* %17, align 2, !dbg !7905
  %19 = zext i8 %18 to i32, !dbg !7906
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #25, !dbg !7907
  call void @llvm.dbg.value(metadata i32 %20, metadata !7894, metadata !DIExpression()), !dbg !7896
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !7908
  %22 = load i8, i8* %21, align 1, !dbg !7908
  %23 = zext i8 %22 to i32, !dbg !7909
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #25, !dbg !7910
  call void @llvm.dbg.value(metadata i32 %24, metadata !7895, metadata !DIExpression()), !dbg !7896
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !7911

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !7913
  br i1 %26, label %69, label %27, !dbg !7915

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !7916

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !7917
  br i1 %29, label %65, label %30, !dbg !7917

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !7919
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !7896
  br i1 %31, label %38, label %34, !dbg !7921

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !7922
  switch i32 %35, label %69 [
    i32 1073821696, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !7922

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !7925
  br i1 %37, label %38, label %69, !dbg !7926

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !7927
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #25, !dbg !7928
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #25, !dbg !7929
  %41 = icmp eq i32 %12, %40, !dbg !7931
  br i1 %41, label %43, label %42, !dbg !7932

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #25, !dbg !7933
  br label %43, !dbg !7935

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #25, !dbg !7936
  %45 = icmp eq i32 %16, %44, !dbg !7938
  br i1 %45, label %47, label %46, !dbg !7939

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #25, !dbg !7940
  br label %47, !dbg !7942

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #25, !dbg !7943
  %49 = icmp eq i32 %20, %48, !dbg !7945
  br i1 %49, label %51, label %50, !dbg !7946

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #25, !dbg !7947
  br label %51, !dbg !7949

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #25, !dbg !7950
  %53 = icmp eq i32 %24, %52, !dbg !7952
  br i1 %53, label %55, label %54, !dbg !7953

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #25, !dbg !7954
  br label %55, !dbg !7956

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !7957
  %57 = load i32, i32* %56, align 4, !dbg !7957
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !7959
  %59 = load i32, i32* %58, align 4, !dbg !7959
  %60 = icmp eq i32 %57, %59, !dbg !7960
  br i1 %60, label %63, label %61, !dbg !7961

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #25, !dbg !7962
  %62 = load i32, i32* %56, align 4, !dbg !7964
  store i32 %62, i32* %58, align 4, !dbg !7965
  br label %63, !dbg !7966

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !7967
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #25, !dbg !7968
  br label %69, !dbg !7969

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !7917
  %67 = and i8 %66, 1, !dbg !7917
  %68 = icmp eq i8 %67, 0, !dbg !7917
  br i1 %68, label %30, label %69, !dbg !7917

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !7896
  ret i32 %70, !dbg !7970
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !7971 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7973, metadata !DIExpression()), !dbg !7976
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !7974, metadata !DIExpression()), !dbg !7976
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !7977
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !7977
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !7977
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !7975, metadata !DIExpression()), !dbg !7976
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !7978
  %7 = load i32, i32* %6, align 4, !dbg !7978
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !7979
  store i32 %7, i32* %8, align 4, !dbg !7980
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !7981, !range !7982
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #25, !dbg !7983
  %11 = trunc i32 %10 to i8, !dbg !7983
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !7984
  store i8 %11, i8* %12, align 4, !dbg !7985
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #25, !dbg !7986, !range !7987
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #25, !dbg !7988
  %15 = trunc i32 %14 to i8, !dbg !7988
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !7989
  store i8 %15, i8* %16, align 1, !dbg !7990
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #25, !dbg !7991
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #25, !dbg !7992, !range !7982
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #25, !dbg !7993
  %20 = trunc i32 %19 to i8, !dbg !7993
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !7994
  store i8 %20, i8* %21, align 2, !dbg !7995
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #25, !dbg !7996, !range !7997
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #25, !dbg !7998
  %24 = trunc i32 %23 to i8, !dbg !7998
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !7999
  store i8 %24, i8* %25, align 1, !dbg !8000
  ret i32 0, !dbg !8001
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !8002 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8006, metadata !DIExpression()), !dbg !8008
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8009
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8009
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8009
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8007, metadata !DIExpression()), !dbg !8008
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8010
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8010
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #25, !dbg !8011
  ret i32 %7, !dbg !8012
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #12 !dbg !8013 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8017, metadata !DIExpression()), !dbg !8018
  %2 = icmp eq i32 %0, 1024, !dbg !8019
  %3 = select i1 %2, i32 2, i32 0, !dbg !8019
  %4 = icmp eq i32 %0, 1536, !dbg !8019
  %5 = select i1 %4, i32 1, i32 %3, !dbg !8019
  ret i32 %5, !dbg !8020
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !8021 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8023, metadata !DIExpression()), !dbg !8025
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8026
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8026
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8026
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8024, metadata !DIExpression()), !dbg !8025
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8027
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8027
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #25, !dbg !8028
  ret i32 %7, !dbg !8029
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !8030 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8034, metadata !DIExpression()), !dbg !8035
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !8036
  %3 = icmp ult i32 %2, 4, !dbg !8036
  br i1 %3, label %4, label %7, !dbg !8036

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !8036
  %6 = load i32, i32* %5, align 4, !dbg !8036
  br label %7, !dbg !8036

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !8037
  ret i32 %8, !dbg !8039
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !8040 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8042, metadata !DIExpression()), !dbg !8044
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8045
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8045
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8045
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8043, metadata !DIExpression()), !dbg !8044
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8046
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8046
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #25, !dbg !8047
  ret i32 %7, !dbg !8048
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8049 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8053, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata i32 %1, metadata !8054, metadata !DIExpression()), !dbg !8055
  %3 = icmp eq i32 %0, 4096, !dbg !8056
  %4 = icmp eq i32 %1, 0, !dbg !8056
  %5 = select i1 %4, i32 4, i32 3, !dbg !8056
  %6 = select i1 %4, i32 3, i32 2, !dbg !8056
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !8056
  ret i32 %7, !dbg !8057
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !8058 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8060, metadata !DIExpression()), !dbg !8062
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8063
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8063
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8063
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8061, metadata !DIExpression()), !dbg !8062
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8064
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !8064
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #25, !dbg !8065
  ret i32 %7, !dbg !8066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8067 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8071, metadata !DIExpression()), !dbg !8072
  %2 = icmp eq i32 %0, 768, !dbg !8073
  %3 = zext i1 %2 to i32, !dbg !8072
  ret i32 %3, !dbg !8075
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8076 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8081, metadata !DIExpression()), !dbg !8082
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8083
  %3 = load volatile i32, i32* %2, align 4, !dbg !8083
  %4 = and i32 %3, 768, !dbg !8083
  ret i32 %4, !dbg !8084
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8085 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8087, metadata !DIExpression()), !dbg !8088
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8089
  %3 = load volatile i32, i32* %2, align 4, !dbg !8089
  %4 = and i32 %3, 4096, !dbg !8089
  ret i32 %4, !dbg !8090
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8091 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8093, metadata !DIExpression()), !dbg !8094
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8095
  %3 = load volatile i32, i32* %2, align 4, !dbg !8095
  %4 = and i32 %3, 12288, !dbg !8095
  ret i32 %4, !dbg !8096
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8097 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8099, metadata !DIExpression()), !dbg !8100
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8101
  %3 = load volatile i32, i32* %2, align 4, !dbg !8101
  %4 = and i32 %3, 1536, !dbg !8101
  ret i32 %4, !dbg !8102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #12 !dbg !8103 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8107, metadata !DIExpression()), !dbg !8108
  %2 = icmp eq i32 %0, 2, !dbg !8109
  %3 = select i1 %2, i32 1024, i32 0, !dbg !8109
  %4 = icmp eq i32 %0, 1, !dbg !8109
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !8109
  ret i32 %5, !dbg !8110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #12 !dbg !8111 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8115, metadata !DIExpression()), !dbg !8116
  %2 = icmp ult i32 %0, 3, !dbg !8117
  br i1 %2, label %3, label %6, !dbg !8117

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !8117
  %5 = load i32, i32* %4, align 4, !dbg !8117
  br label %6, !dbg !8117

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !8118
  ret i32 %7, !dbg !8120
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !8121 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8125, metadata !DIExpression()), !dbg !8127
  call void @llvm.dbg.value(metadata i32 %1, metadata !8126, metadata !DIExpression()), !dbg !8127
  %3 = icmp eq i32 %0, 4, !dbg !8128
  %4 = icmp eq i32 %1, 0, !dbg !8128
  %5 = select i1 %4, i32 0, i32 4096, !dbg !8128
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !8128
  ret i32 %6, !dbg !8129
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #12 !dbg !8130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8134, metadata !DIExpression()), !dbg !8135
  %2 = icmp eq i32 %0, 1, !dbg !8136
  %3 = select i1 %2, i32 768, i32 0, !dbg !8135
  ret i32 %3, !dbg !8138
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8139 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8143, metadata !DIExpression()), !dbg !8144
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8145
  %3 = load volatile i32, i32* %2, align 4, !dbg !8145
  %4 = and i32 %3, -8193, !dbg !8145
  store volatile i32 %4, i32* %2, align 4, !dbg !8145
  ret void, !dbg !8146
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !8147 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8151, metadata !DIExpression()), !dbg !8154
  call void @llvm.dbg.value(metadata i32 %1, metadata !8152, metadata !DIExpression()), !dbg !8154
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8155
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8155
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8155
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8153, metadata !DIExpression()), !dbg !8154
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8156
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8156
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8157
  ret void, !dbg !8158
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !8159 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8161, metadata !DIExpression()), !dbg !8164
  call void @llvm.dbg.value(metadata i32 %1, metadata !8162, metadata !DIExpression()), !dbg !8164
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8165
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8165
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8165
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8163, metadata !DIExpression()), !dbg !8164
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8166
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8166
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8167
  ret void, !dbg !8168
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !8169 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8171, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.value(metadata i32 %1, metadata !8172, metadata !DIExpression()), !dbg !8174
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8175
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8175
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8175
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8173, metadata !DIExpression()), !dbg !8174
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8176
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8176
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8177
  ret void, !dbg !8178
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !8179 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8181, metadata !DIExpression()), !dbg !8184
  call void @llvm.dbg.value(metadata i32 %1, metadata !8182, metadata !DIExpression()), !dbg !8184
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8185
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !8185
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !8185
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !8183, metadata !DIExpression()), !dbg !8184
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !8186
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !8186
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #25, !dbg !8187
  ret void, !dbg !8188
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !8189 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8191, metadata !DIExpression()), !dbg !8196
  call void @llvm.dbg.value(metadata i32 %1, metadata !8192, metadata !DIExpression()), !dbg !8196
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8197
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !8197
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !8197
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !8193, metadata !DIExpression()), !dbg !8196
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8198
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !8198
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !8198
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !8194, metadata !DIExpression()), !dbg !8196
  %10 = bitcast i32* %3 to i8*, !dbg !8199
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8199
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !8200
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !8200
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !8204
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8204
  %15 = load i8*, i8** %14, align 4, !dbg !8204
  call void @llvm.dbg.value(metadata i32* %3, metadata !8195, metadata !DIExpression(DW_OP_deref)), !dbg !8196
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #25, !dbg !8205
  %17 = icmp slt i32 %16, 0, !dbg !8206
  br i1 %17, label %23, label %18, !dbg !8207

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !8208
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8208
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #25, !dbg !8209
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !8210
  %22 = load i32, i32* %3, align 4, !dbg !8211
  call void @llvm.dbg.value(metadata i32 %22, metadata !8195, metadata !DIExpression()), !dbg !8196
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #25, !dbg !8212
  br label %23, !dbg !8213

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8213
  ret void, !dbg !8213
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8214 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8216, metadata !DIExpression()), !dbg !8217
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8218
  %3 = load volatile i32, i32* %2, align 4, !dbg !8218
  %4 = or i32 %3, 8192, !dbg !8218
  store volatile i32 %4, i32* %2, align 4, !dbg !8218
  ret void, !dbg !8219
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !8220 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8222, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata i8* %1, metadata !8223, metadata !DIExpression()), !dbg !8226
  call void @llvm.dbg.value(metadata i32* %2, metadata !8224, metadata !DIExpression()), !dbg !8226
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8227
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !8227
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !8227
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !8225, metadata !DIExpression()), !dbg !8226
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !8228
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !8228
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !8230
  br i1 %9, label %12, label %10, !dbg !8231

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #24, !dbg !8232
  br label %12, !dbg !8233

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !8226
  ret i32 %13, !dbg !8234
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8235 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8239, metadata !DIExpression()), !dbg !8241
  call void @llvm.dbg.value(metadata i32 0, metadata !8240, metadata !DIExpression()), !dbg !8241
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8242
  %3 = load volatile i32, i32* %2, align 4, !dbg !8242
  %4 = and i32 %3, -32769, !dbg !8242
  store volatile i32 %4, i32* %2, align 4, !dbg !8242
  ret void, !dbg !8243
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !8244 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8248, metadata !DIExpression()), !dbg !8252
  call void @llvm.dbg.value(metadata i32 %1, metadata !8249, metadata !DIExpression()), !dbg !8252
  call void @llvm.dbg.value(metadata i32 0, metadata !8250, metadata !DIExpression()), !dbg !8252
  call void @llvm.dbg.value(metadata i32 %2, metadata !8251, metadata !DIExpression()), !dbg !8252
  %4 = mul i32 %1, 25, !dbg !8253
  %5 = shl i32 %2, 2, !dbg !8253
  %6 = udiv i32 %4, %5, !dbg !8253
  %7 = udiv i32 %6, 100, !dbg !8253
  %8 = shl nuw nsw i32 %7, 4, !dbg !8253
  %9 = mul i32 %7, -100, !dbg !8253
  %10 = add i32 %9, %6, !dbg !8253
  %11 = shl i32 %10, 4, !dbg !8253
  %12 = add i32 %11, 50, !dbg !8253
  %13 = udiv i32 %12, 100, !dbg !8253
  %14 = and i32 %13, 240, !dbg !8253
  %15 = add nuw nsw i32 %14, %8, !dbg !8253
  %16 = and i32 %13, 15, !dbg !8253
  %17 = and i32 %15, 65520, !dbg !8256
  %18 = or i32 %17, %16, !dbg !8256
  %19 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !8257
  store volatile i32 %18, i32* %19, align 4, !dbg !8258
  ret void, !dbg !8259
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !8260 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8262, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata i32 %1, metadata !8263, metadata !DIExpression()), !dbg !8264
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8265
  %4 = load volatile i32, i32* %3, align 4, !dbg !8265
  %5 = and i32 %4, -769, !dbg !8265
  %6 = or i32 %5, %1, !dbg !8265
  store volatile i32 %6, i32* %3, align 4, !dbg !8265
  ret void, !dbg !8266
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !8267 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8269, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.value(metadata i32 %1, metadata !8270, metadata !DIExpression()), !dbg !8271
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8272
  %4 = load volatile i32, i32* %3, align 4, !dbg !8272
  %5 = and i32 %4, -4097, !dbg !8272
  %6 = or i32 %5, %1, !dbg !8272
  store volatile i32 %6, i32* %3, align 4, !dbg !8272
  ret void, !dbg !8273
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !8274 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8276, metadata !DIExpression()), !dbg !8278
  call void @llvm.dbg.value(metadata i32 %1, metadata !8277, metadata !DIExpression()), !dbg !8278
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8279
  %4 = load volatile i32, i32* %3, align 4, !dbg !8279
  %5 = and i32 %4, -12289, !dbg !8279
  %6 = or i32 %5, %1, !dbg !8279
  store volatile i32 %6, i32* %3, align 4, !dbg !8279
  ret void, !dbg !8280
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !8281 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8283, metadata !DIExpression()), !dbg !8285
  call void @llvm.dbg.value(metadata i32 %1, metadata !8284, metadata !DIExpression()), !dbg !8285
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8286
  %4 = load volatile i32, i32* %3, align 4, !dbg !8286
  %5 = and i32 %4, -1537, !dbg !8286
  %6 = or i32 %5, %1, !dbg !8286
  store volatile i32 %6, i32* %3, align 4, !dbg !8286
  ret void, !dbg !8287
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8288 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8290, metadata !DIExpression()), !dbg !8291
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8292
  %3 = load volatile i32, i32* %2, align 4, !dbg !8292
  %4 = lshr i32 %3, 3, !dbg !8293
  %5 = and i32 %4, 1, !dbg !8293
  ret i32 %5, !dbg !8294
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8295 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8297, metadata !DIExpression()), !dbg !8298
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8299
  %3 = load volatile i32, i32* %2, align 4, !dbg !8299
  %4 = and i32 %3, 1, !dbg !8299
  ret i32 %4, !dbg !8300
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8301 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8303, metadata !DIExpression()), !dbg !8304
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8305
  %3 = load volatile i32, i32* %2, align 4, !dbg !8305
  %4 = lshr i32 %3, 1, !dbg !8306
  %5 = and i32 %4, 1, !dbg !8306
  ret i32 %5, !dbg !8307
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8308 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8310, metadata !DIExpression()), !dbg !8311
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8312
  %3 = load volatile i32, i32* %2, align 4, !dbg !8312
  %4 = lshr i32 %3, 8, !dbg !8313
  %5 = and i32 %4, 1, !dbg !8313
  ret i32 %5, !dbg !8314
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8315 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8317, metadata !DIExpression()), !dbg !8318
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8319
  store volatile i32 -257, i32* %2, align 4, !dbg !8319
  ret void, !dbg !8320
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8321 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8323, metadata !DIExpression()), !dbg !8325
  %3 = bitcast i32* %2 to i8*, !dbg !8326
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8326
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8324, metadata !DIExpression()), !dbg !8327
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8328
  %5 = load volatile i32, i32* %4, align 4, !dbg !8328
  store volatile i32 %5, i32* %2, align 4, !dbg !8329
  %6 = load volatile i32, i32* %2, align 4, !dbg !8330
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8331
  %8 = load volatile i32, i32* %7, align 4, !dbg !8331
  store volatile i32 %8, i32* %2, align 4, !dbg !8332
  %9 = load volatile i32, i32* %2, align 4, !dbg !8333
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8334
  ret void, !dbg !8334
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8335 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8337, metadata !DIExpression()), !dbg !8339
  %3 = bitcast i32* %2 to i8*, !dbg !8340
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8340
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8338, metadata !DIExpression()), !dbg !8341
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8342
  %5 = load volatile i32, i32* %4, align 4, !dbg !8342
  store volatile i32 %5, i32* %2, align 4, !dbg !8343
  %6 = load volatile i32, i32* %2, align 4, !dbg !8344
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8345
  %8 = load volatile i32, i32* %7, align 4, !dbg !8345
  store volatile i32 %8, i32* %2, align 4, !dbg !8346
  %9 = load volatile i32, i32* %2, align 4, !dbg !8347
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8348
  ret void, !dbg !8348
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8349 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8351, metadata !DIExpression()), !dbg !8353
  %3 = bitcast i32* %2 to i8*, !dbg !8354
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8354
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8352, metadata !DIExpression()), !dbg !8355
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8356
  %5 = load volatile i32, i32* %4, align 4, !dbg !8356
  store volatile i32 %5, i32* %2, align 4, !dbg !8357
  %6 = load volatile i32, i32* %2, align 4, !dbg !8358
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8359
  %8 = load volatile i32, i32* %7, align 4, !dbg !8359
  store volatile i32 %8, i32* %2, align 4, !dbg !8360
  %9 = load volatile i32, i32* %2, align 4, !dbg !8361
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8362
  ret void, !dbg !8362
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #13 !dbg !8363 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8365, metadata !DIExpression()), !dbg !8367
  %3 = bitcast i32* %2 to i8*, !dbg !8368
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !8368
  call void @llvm.dbg.declare(metadata i32* %2, metadata !8366, metadata !DIExpression()), !dbg !8369
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8370
  %5 = load volatile i32, i32* %4, align 4, !dbg !8370
  store volatile i32 %5, i32* %2, align 4, !dbg !8371
  %6 = load volatile i32, i32* %2, align 4, !dbg !8372
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8373
  %8 = load volatile i32, i32* %7, align 4, !dbg !8373
  store volatile i32 %8, i32* %2, align 4, !dbg !8374
  %9 = load volatile i32, i32* %2, align 4, !dbg !8375
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !8376
  ret void, !dbg !8376
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8377 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8379, metadata !DIExpression()), !dbg !8380
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8381
  %3 = load volatile i32, i32* %2, align 4, !dbg !8381
  %4 = lshr i32 %3, 7, !dbg !8382
  %5 = and i32 %4, 1, !dbg !8382
  ret i32 %5, !dbg !8383
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !8384 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8388, metadata !DIExpression()), !dbg !8390
  call void @llvm.dbg.value(metadata i8 %1, metadata !8389, metadata !DIExpression()), !dbg !8390
  %3 = zext i8 %1 to i32, !dbg !8391
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8392
  store volatile i32 %3, i32* %4, align 4, !dbg !8393
  ret void, !dbg !8394
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8395 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8397, metadata !DIExpression()), !dbg !8398
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !8399
  %3 = load volatile i32, i32* %2, align 4, !dbg !8399
  %4 = lshr i32 %3, 5, !dbg !8400
  %5 = and i32 %4, 1, !dbg !8400
  ret i32 %5, !dbg !8401
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !8402 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8406, metadata !DIExpression()), !dbg !8407
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !8408
  %3 = load volatile i32, i32* %2, align 4, !dbg !8408
  %4 = trunc i32 %3 to i8, !dbg !8409
  ret i8 %4, !dbg !8410
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !8411 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8413, metadata !DIExpression()), !dbg !8419
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8420
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !8420
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !8420
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !8414, metadata !DIExpression()), !dbg !8419
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8421
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !8421
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !8421
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !8415, metadata !DIExpression()), !dbg !8419
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #25, !dbg !8422
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !8423
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !8423
  %10 = tail call fastcc zeroext i1 @device_is_ready.57(%struct.device* noundef %9) #25, !dbg !8425
  br i1 %10, label %11, label %49, !dbg !8426

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !8427
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !8428
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !8428
  %15 = load i8*, i8** %14, align 4, !dbg !8428
  %16 = tail call fastcc i32 @clock_control_on.58(%struct.device* noundef %12, i8* noundef %15) #25, !dbg !8429
  call void @llvm.dbg.value(metadata i32 %16, metadata !8418, metadata !DIExpression()), !dbg !8419
  %17 = icmp eq i32 %16, 0, !dbg !8430
  br i1 %17, label %18, label %49, !dbg !8432

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !8433
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !8433
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #25, !dbg !8434
  call void @llvm.dbg.value(metadata i32 %21, metadata !8418, metadata !DIExpression()), !dbg !8419
  %22 = icmp slt i32 %21, 0, !dbg !8435
  br i1 %22, label %49, label %23, !dbg !8437

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !8438
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8438
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #25, !dbg !8439
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8440
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #25, !dbg !8441
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !8442
  %28 = load i32, i32* %27, align 4, !dbg !8442
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !8444

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !8416, metadata !DIExpression()), !dbg !8419
  call void @llvm.dbg.value(metadata i32 4096, metadata !8417, metadata !DIExpression()), !dbg !8419
  br label %31, !dbg !8445

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !8416, metadata !DIExpression()), !dbg !8419
  call void @llvm.dbg.value(metadata i32 0, metadata !8417, metadata !DIExpression()), !dbg !8419
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !8448
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !8448
  call void @llvm.dbg.value(metadata i32 %33, metadata !8417, metadata !DIExpression()), !dbg !8419
  call void @llvm.dbg.value(metadata i32 %32, metadata !8416, metadata !DIExpression()), !dbg !8419
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8449
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #25, !dbg !8450
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !8451
  %36 = load i8, i8* %35, align 4, !dbg !8451, !range !5021
  %37 = icmp eq i8 %36, 0, !dbg !8451
  br i1 %37, label %39, label %38, !dbg !8453

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #25, !dbg !8454
  br label %39, !dbg !8456

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !8457
  %41 = load i32, i32* %40, align 4, !dbg !8457
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #25, !dbg !8458
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !8459
  %43 = load i8, i8* %42, align 4, !dbg !8459, !range !5021
  %44 = icmp eq i8 %43, 0, !dbg !8459
  br i1 %44, label %47, label %45, !dbg !8461

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8462
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #25, !dbg !8464
  br label %47, !dbg !8465

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !8466
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #25, !dbg !8467
  br label %49, !dbg !8468

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !8419
  ret i32 %50, !dbg !8469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !8470 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8474, metadata !DIExpression()), !dbg !8478
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8479
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !8479
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !8479
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !8475, metadata !DIExpression()), !dbg !8478
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_9, metadata !8476, metadata !DIExpression()), !dbg !8478
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !8480
  store %struct.device* @__device_dts_ord_9, %struct.device** %5, align 4, !dbg !8481
  ret void, !dbg !8482
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.57(%struct.device* noundef %0) unnamed_addr #1 !dbg !8483 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8487, metadata !DIExpression()), !dbg !8488
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8489, !srcloc !8491
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.59(%struct.device* noundef %0) #25, !dbg !8492
  ret i1 %2, !dbg !8493
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.58(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !8494 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8496, metadata !DIExpression()), !dbg !8499
  call void @llvm.dbg.value(metadata i8* %1, metadata !8497, metadata !DIExpression()), !dbg !8499
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !8500
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !8500
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !8500
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !8498, metadata !DIExpression()), !dbg !8499
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !8501
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !8501
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #24, !dbg !8502
  ret i32 %8, !dbg !8503
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !8504 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8508, metadata !DIExpression()), !dbg !8512
  call void @llvm.dbg.value(metadata i8 0, metadata !8509, metadata !DIExpression()), !dbg !8512
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !8513
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8513
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8511, metadata !DIExpression(DW_OP_deref)), !dbg !8512
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #24, !dbg !8514
  call void @llvm.dbg.value(metadata i32 %4, metadata !8510, metadata !DIExpression()), !dbg !8512
  %5 = icmp slt i32 %4, 0, !dbg !8515
  br i1 %5, label %9, label %6, !dbg !8517

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !8518
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !8511, metadata !DIExpression()), !dbg !8512
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #25, !dbg !8519
  br label %9, !dbg !8520

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !8512
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !8521
  ret i32 %10, !dbg !8521
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8522 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8524, metadata !DIExpression()), !dbg !8526
  call void @llvm.dbg.value(metadata i32 12, metadata !8525, metadata !DIExpression()), !dbg !8526
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8527
  %3 = load volatile i32, i32* %2, align 4, !dbg !8527
  %4 = or i32 %3, 12, !dbg !8527
  store volatile i32 %4, i32* %2, align 4, !dbg !8527
  ret void, !dbg !8528
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !8529 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8531, metadata !DIExpression()), !dbg !8535
  call void @llvm.dbg.value(metadata i32 %1, metadata !8532, metadata !DIExpression()), !dbg !8535
  call void @llvm.dbg.value(metadata i32 %2, metadata !8533, metadata !DIExpression()), !dbg !8535
  call void @llvm.dbg.value(metadata i32 0, metadata !8534, metadata !DIExpression()), !dbg !8535
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !8536
  %5 = load volatile i32, i32* %4, align 4, !dbg !8536
  %6 = and i32 %5, -5633, !dbg !8536
  %7 = or i32 %2, %1, !dbg !8536
  %8 = or i32 %7, %6, !dbg !8536
  store volatile i32 %8, i32* %4, align 4, !dbg !8536
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !8537
  %10 = load volatile i32, i32* %9, align 4, !dbg !8537
  %11 = and i32 %10, -12289, !dbg !8537
  store volatile i32 %11, i32* %9, align 4, !dbg !8537
  ret void, !dbg !8538
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !8539 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !8541, metadata !DIExpression()), !dbg !8542
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !8543
  %3 = load volatile i32, i32* %2, align 4, !dbg !8543
  %4 = or i32 %3, 8, !dbg !8543
  store volatile i32 %4, i32* %2, align 4, !dbg !8543
  ret void, !dbg !8544
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8545 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !8549, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !8550, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.value(metadata i32 0, metadata !8551, metadata !DIExpression()), !dbg !8552
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !8553
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !8553
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !8554
  %5 = load i8, i8* %4, align 4, !dbg !8554
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #24, !dbg !8555
  ret i32 %6, !dbg !8556
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.59(%struct.device* noundef %0) unnamed_addr #1 !dbg !8557 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8559, metadata !DIExpression()), !dbg !8560
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !8561
  ret i1 %2, !dbg !8562
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !8563 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8565, metadata !DIExpression()), !dbg !8566
  tail call fastcc void @__NVIC_SetPriority.61() #25, !dbg !8567
  store i32 3199, i32* @last_load, align 4, !dbg !8568
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8569
  store volatile i32 3199, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8570
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8571
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8572
  %3 = or i32 %2, 7, !dbg !8572
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8572
  ret i32 0, !dbg !8573
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.61() unnamed_addr #14 !dbg !8574 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !8576, metadata !DIExpression()), !dbg !8578
  call void @llvm.dbg.value(metadata i32 1, metadata !8577, metadata !DIExpression()), !dbg !8578
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !8579
  ret void, !dbg !8582
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !8583 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8585, metadata !DIExpression()), !dbg !8587
  %2 = tail call fastcc i32 @elapsed() #25, !dbg !8588
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8589
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8590
  %5 = add i32 %4, %3, !dbg !8590
  store i32 %5, i32* @cycle_count, align 4, !dbg !8590
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8591
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8592
  %7 = sub i32 %5, %6, !dbg !8595
  %8 = udiv i32 %7, 3200, !dbg !8596
  call void @llvm.dbg.value(metadata i32 %8, metadata !8586, metadata !DIExpression()), !dbg !8587
  %9 = mul nuw i32 %8, 3200, !dbg !8597
  %10 = add i32 %9, %6, !dbg !8598
  store i32 %10, i32* @announced_cycles, align 4, !dbg !8598
  tail call void @sys_clock_announce(i32 noundef %8) #24, !dbg !8599
  tail call void @z_arm_int_exit() #24, !dbg !8600
  ret void, !dbg !8601
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !8602 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8607
  call void @llvm.dbg.value(metadata i32 %1, metadata !8604, metadata !DIExpression()), !dbg !8608
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8609
  call void @llvm.dbg.value(metadata i32 %2, metadata !8605, metadata !DIExpression()), !dbg !8608
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8610
  call void @llvm.dbg.value(metadata i32 %3, metadata !8606, metadata !DIExpression()), !dbg !8608
  %4 = and i32 %2, 65536, !dbg !8611
  %5 = icmp ne i32 %4, 0, !dbg !8611
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !8613
  %8 = load i32, i32* @last_load, align 4, !dbg !8608
  br i1 %7, label %9, label %13, !dbg !8613

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8614
  %11 = add i32 %10, %8, !dbg !8614
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !8614
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8616
  br label %13, !dbg !8617

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !8618
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !8619
  %16 = add i32 %14, %15, !dbg !8620
  ret i32 %16, !dbg !8621
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !8622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8626, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.value(metadata i1 %1, metadata !8627, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8639
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !8640
  br i1 %4, label %5, label %8, !dbg !8640

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8642
  %7 = and i32 %6, -2, !dbg !8642
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8642
  store i32 -16777216, i32* @last_load, align 4, !dbg !8644
  br label %54, !dbg !8645

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !8646
  call void @llvm.dbg.value(metadata i32 %9, metadata !8631, metadata !DIExpression()), !dbg !8639
  br i1 %3, label %18, label %10, !dbg !8647

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !8647
  call void @llvm.dbg.value(metadata i32 undef, metadata !8626, metadata !DIExpression()), !dbg !8639
  %12 = icmp slt i32 %11, 1, !dbg !8648
  br i1 %12, label %18, label %13, !dbg !8648

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 5241, !dbg !8648
  %15 = select i1 %14, i32 %11, i32 5241, !dbg !8648
  %16 = mul nuw nsw i32 %15, 3200, !dbg !8648
  %17 = add nuw nsw i32 %16, 3199, !dbg !8648
  br label %18, !dbg !8648

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 3199, %10 ], [ 16771199, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8626, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8649, metadata !DIExpression()) #23, !dbg !8656
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8658, !srcloc !8664
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !8658
  call void @llvm.dbg.value(metadata i32 %21, metadata !8661, metadata !DIExpression()) #23, !dbg !8665
  call void @llvm.dbg.value(metadata i32 undef, metadata !8662, metadata !DIExpression()) #23, !dbg !8665
  call void @llvm.dbg.value(metadata i32 %21, metadata !8655, metadata !DIExpression()) #23, !dbg !8656
  call void @llvm.dbg.value(metadata i32 %21, metadata !8632, metadata !DIExpression()), !dbg !8639
  %22 = tail call fastcc i32 @elapsed() #25, !dbg !8666
  call void @llvm.dbg.value(metadata i32 %22, metadata !8637, metadata !DIExpression()), !dbg !8639
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8667
  call void @llvm.dbg.value(metadata i32 %23, metadata !8629, metadata !DIExpression()), !dbg !8639
  %24 = load i32, i32* @cycle_count, align 4, !dbg !8668
  %25 = add i32 %24, %22, !dbg !8668
  store i32 %25, i32* @cycle_count, align 4, !dbg !8668
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !8669
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !8670
  %27 = sub i32 %25, %26, !dbg !8671
  call void @llvm.dbg.value(metadata i32 %27, metadata !8638, metadata !DIExpression()), !dbg !8639
  %28 = icmp slt i32 %27, 0, !dbg !8672
  br i1 %28, label %38, label %29, !dbg !8674

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !8628, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.value(metadata i32 undef, metadata !8628, metadata !DIExpression()), !dbg !8639
  %30 = add nuw i32 %19, %27, !dbg !8675
  %31 = urem i32 %30, 3200, !dbg !8677
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !8628, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8639
  %32 = sub nuw nsw i32 %19, %31, !dbg !8678
  call void @llvm.dbg.value(metadata i32 %32, metadata !8628, metadata !DIExpression()), !dbg !8639
  %33 = icmp ugt i32 %32, 1024, !dbg !8679
  br i1 %33, label %34, label %36, !dbg !8679

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !8628, metadata !DIExpression()), !dbg !8639
  %35 = icmp ugt i32 %32, 16771200, !dbg !8680
  br i1 %35, label %38, label %36, !dbg !8682

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16771200, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !8683
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8684
  call void @llvm.dbg.value(metadata i32 %40, metadata !8630, metadata !DIExpression()), !dbg !8639
  %41 = add nsw i32 %39, -1, !dbg !8685
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !8686
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !8687
  %42 = icmp ult i32 %23, %40, !dbg !8688
  br i1 %42, label %43, label %48, !dbg !8690

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !8691
  %45 = add i32 %23, %9, !dbg !8693
  %46 = sub i32 %45, %40, !dbg !8694
  %47 = add i32 %46, %44, !dbg !8691
  br label %52, !dbg !8695

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !8696
  %50 = load i32, i32* @cycle_count, align 4, !dbg !8698
  %51 = add i32 %49, %50, !dbg !8698
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !8699
  store i32 %53, i32* @cycle_count, align 4, !dbg !8699
  call void @llvm.dbg.value(metadata i32 %21, metadata !8700, metadata !DIExpression()) #23, !dbg !8706
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8705, metadata !DIExpression()) #23, !dbg !8706
  call void @llvm.dbg.value(metadata i32 %21, metadata !8708, metadata !DIExpression()) #23, !dbg !8711
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !8713, !srcloc !8714
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !8715
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !8716 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8649, metadata !DIExpression()) #23, !dbg !8720
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8722, !srcloc !8664
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8722
  call void @llvm.dbg.value(metadata i32 %2, metadata !8661, metadata !DIExpression()) #23, !dbg !8724
  call void @llvm.dbg.value(metadata i32 undef, metadata !8662, metadata !DIExpression()) #23, !dbg !8724
  call void @llvm.dbg.value(metadata i32 %2, metadata !8655, metadata !DIExpression()) #23, !dbg !8720
  call void @llvm.dbg.value(metadata i32 %2, metadata !8718, metadata !DIExpression()), !dbg !8725
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !8726
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8727
  %5 = add i32 %4, %3, !dbg !8728
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !8729
  %7 = sub i32 %5, %6, !dbg !8730
  call void @llvm.dbg.value(metadata i32 %7, metadata !8719, metadata !DIExpression()), !dbg !8725
  call void @llvm.dbg.value(metadata i32 %2, metadata !8700, metadata !DIExpression()) #23, !dbg !8731
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8705, metadata !DIExpression()) #23, !dbg !8731
  call void @llvm.dbg.value(metadata i32 %2, metadata !8708, metadata !DIExpression()) #23, !dbg !8733
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !8735, !srcloc !8714
  %8 = udiv i32 %7, 3200, !dbg !8736
  ret i32 %8, !dbg !8737
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !8738 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8649, metadata !DIExpression()) #23, !dbg !8742
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !8744, !srcloc !8664
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !8744
  call void @llvm.dbg.value(metadata i32 %2, metadata !8661, metadata !DIExpression()) #23, !dbg !8746
  call void @llvm.dbg.value(metadata i32 undef, metadata !8662, metadata !DIExpression()) #23, !dbg !8746
  call void @llvm.dbg.value(metadata i32 %2, metadata !8655, metadata !DIExpression()) #23, !dbg !8742
  call void @llvm.dbg.value(metadata i32 %2, metadata !8740, metadata !DIExpression()), !dbg !8747
  %3 = tail call fastcc i32 @elapsed() #25, !dbg !8748
  %4 = load i32, i32* @cycle_count, align 4, !dbg !8749
  %5 = add i32 %4, %3, !dbg !8750
  call void @llvm.dbg.value(metadata i32 %5, metadata !8741, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.value(metadata i32 %2, metadata !8700, metadata !DIExpression()) #23, !dbg !8751
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !8705, metadata !DIExpression()) #23, !dbg !8751
  call void @llvm.dbg.value(metadata i32 %2, metadata !8708, metadata !DIExpression()) #23, !dbg !8753
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !8755, !srcloc !8714
  ret i32 %5, !dbg !8756
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !8757 {
  %1 = load i32, i32* @last_load, align 4, !dbg !8758
  %2 = icmp eq i32 %1, -16777216, !dbg !8760
  br i1 %2, label %3, label %6, !dbg !8761

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8762
  %5 = or i32 %4, 1, !dbg !8762
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8762
  br label %6, !dbg !8764

6:                                                ; preds = %3, %0
  ret void, !dbg !8765
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !8766 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8767
  %2 = and i32 %1, -2, !dbg !8767
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !8767
  ret void, !dbg !8768
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #11 !dbg !8769 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !8795, metadata !DIExpression()), !dbg !8798
  call void @llvm.dbg.value(metadata i8 %1, metadata !8796, metadata !DIExpression()), !dbg !8798
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !8797, metadata !DIExpression()), !dbg !8798
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !8799
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8799
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !8798
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8800
  %8 = load i8, i8* %6, align 4, !dbg !8801
  %9 = zext i8 %8 to i32, !dbg !8802
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !8802
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !8803
  br i1 %11, label %18, label %24, !dbg !8804

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !8798
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !8800
  %14 = load i8, i8* %6, align 4, !dbg !8801
  %15 = zext i8 %14 to i32, !dbg !8802
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !8802
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !8803
  br i1 %17, label %18, label %24, !dbg !8804, !llvm.loop !8805

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !8807
  %21 = load i8, i8* %20, align 1, !dbg !8807
  %22 = icmp eq i8 %21, %1, !dbg !8810
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !8811
  br i1 %22, label %24, label %12, !dbg !8812

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !8798
  ret i32 %25, !dbg !8813
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !8814 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !8825, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i8 %1, metadata !8826, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 %2, metadata !8827, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 0, metadata !8830, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i32 0, metadata !8831, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i8 0, metadata !8832, metadata !DIExpression()), !dbg !8842
  %4 = icmp eq i8 %1, 0, !dbg !8843
  br i1 %4, label %35, label %5, !dbg !8844

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !8843
  br label %9, !dbg !8844

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !8832, metadata !DIExpression()), !dbg !8842
  call void @llvm.dbg.value(metadata i32 %29, metadata !8830, metadata !DIExpression()), !dbg !8841
  %8 = icmp eq i32 %34, %6, !dbg !8843
  br i1 %8, label %35, label %9, !dbg !8844, !llvm.loop !8845

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !8832, metadata !DIExpression()), !dbg !8842
  call void @llvm.dbg.value(metadata i32 %11, metadata !8830, metadata !DIExpression()), !dbg !8841
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !8847
  %13 = load i32, i32* %12, align 4, !dbg !8847
  call void @llvm.dbg.value(metadata i32 %13, metadata !8829, metadata !DIExpression()), !dbg !8841
  %14 = and i32 %13, 31, !dbg !8848
  %15 = icmp ult i32 %14, 16, !dbg !8849
  br i1 %15, label %16, label %20, !dbg !8850

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !8851
  %18 = load i32, i32* %17, align 4, !dbg !8851
  %19 = or i32 %18, 32, !dbg !8853
  call void @llvm.dbg.value(metadata i32 %19, metadata !8830, metadata !DIExpression()), !dbg !8841
  br label %28, !dbg !8854

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !8855

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !8856
  %23 = load i32, i32* %22, align 4, !dbg !8856
  call void @llvm.dbg.value(metadata i32 %23, metadata !8834, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !8857
  %24 = lshr i32 %23, 7, !dbg !8858
  %25 = and i32 %24, 16, !dbg !8858
  %26 = or i32 %25, %23, !dbg !8858
  call void @llvm.dbg.value(metadata i32 %26, metadata !8830, metadata !DIExpression()), !dbg !8841
  br label %28, !dbg !8859

27:                                               ; preds = %20
  br label %28, !dbg !8860

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !8841
  call void @llvm.dbg.value(metadata i32 %29, metadata !8830, metadata !DIExpression()), !dbg !8841
  %30 = lshr i32 %13, 5, !dbg !8860
  %31 = and i32 %30, 255, !dbg !8860
  call void @llvm.dbg.value(metadata i32 %31, metadata !8828, metadata !DIExpression()), !dbg !8841
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #25, !dbg !8861
  call void @llvm.dbg.value(metadata i32 %32, metadata !8831, metadata !DIExpression()), !dbg !8841
  %33 = icmp slt i32 %32, 0, !dbg !8862
  %34 = add nuw nsw i32 %10, 1, !dbg !8864
  call void @llvm.dbg.value(metadata i32 %34, metadata !8832, metadata !DIExpression()), !dbg !8842
  br i1 %33, label %35, label %7, !dbg !8865

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !8866
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8867 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8871, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 %1, metadata !8872, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata i32 %2, metadata !8873, metadata !DIExpression()), !dbg !8875
  %4 = icmp ugt i32 %0, 175, !dbg !8876
  br i1 %4, label %17, label %5, !dbg !8878

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !8879
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !8880
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !8880
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !8874, metadata !DIExpression()), !dbg !8875
  %9 = lshr i32 1888, %6, !dbg !8881
  %10 = and i32 %9, 1, !dbg !8881
  %11 = icmp eq i32 %10, 0, !dbg !8881
  br i1 %11, label %12, label %17, !dbg !8883

12:                                               ; preds = %5
  %13 = tail call fastcc zeroext i1 @device_is_ready.66(%struct.device* noundef %8) #25, !dbg !8884
  br i1 %13, label %14, label %17, !dbg !8885

14:                                               ; preds = %12
  %15 = and i32 %0, 15, !dbg !8886
  %16 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %15, i32 noundef %1, i32 noundef %2) #24, !dbg !8887
  br label %17, !dbg !8888

17:                                               ; preds = %5, %12, %3, %14
  %18 = phi i32 [ %16, %14 ], [ -22, %3 ], [ -19, %12 ], [ -19, %5 ], !dbg !8875
  ret i32 %18, !dbg !8889
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.66(%struct.device* noundef %0) unnamed_addr #1 !dbg !8890 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8894, metadata !DIExpression()), !dbg !8895
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8896, !srcloc !8898
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.67(%struct.device* noundef %0) #25, !dbg !8899
  ret i1 %2, !dbg !8900
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.67(%struct.device* noundef %0) unnamed_addr #1 !dbg !8901 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8903, metadata !DIExpression()), !dbg !8904
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #24, !dbg !8905
  ret i1 %2, !dbg !8906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #12 !dbg !8907 {
  ret void, !dbg !8908
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !8909 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8911, metadata !DIExpression()), !dbg !8916
  call void @llvm.dbg.value(metadata i32 0, metadata !8912, metadata !DIExpression()), !dbg !8916
  call void @llvm.dbg.value(metadata i32 0, metadata !8913, metadata !DIExpression()), !dbg !8916
  call void @llvm.dbg.value(metadata i32 0, metadata !8914, metadata !DIExpression()), !dbg !8916
  call void @llvm.dbg.value(metadata i32 0, metadata !8915, metadata !DIExpression()), !dbg !8916
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8917
  call void @llvm.dbg.value(metadata i32 %1, metadata !8911, metadata !DIExpression(DW_OP_constu, 12, DW_OP_and, DW_OP_stack_value)), !dbg !8916
  %2 = lshr i32 %1, 2, !dbg !8918
  %3 = and i32 %2, 3, !dbg !8918
  switch i32 %3, label %30 [
    i32 0, label %4
    i32 1, label %31
    i32 2, label %9
    i32 3, label %10
  ], !dbg !8918

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8919
  %6 = lshr i32 %5, 13, !dbg !8921
  %7 = and i32 %6, 7, !dbg !8921
  call void @llvm.dbg.value(metadata i32 %7, metadata !8915, metadata !DIExpression()), !dbg !8916
  %8 = shl nuw nsw i32 65536, %7, !dbg !8922
  br label %31, !dbg !8923

9:                                                ; preds = %0
  br label %31, !dbg !8924

10:                                               ; preds = %0
  %11 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8925
  call void @llvm.dbg.value(metadata i32 %11, metadata !8912, metadata !DIExpression(DW_OP_constu, 3932160, DW_OP_and, DW_OP_stack_value)), !dbg !8916
  %12 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8926
  call void @llvm.dbg.value(metadata i32 %12, metadata !8913, metadata !DIExpression(DW_OP_constu, 12582912, DW_OP_and, DW_OP_stack_value)), !dbg !8916
  %13 = lshr i32 %11, 18, !dbg !8927
  %14 = and i32 %13, 15, !dbg !8927
  %15 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %14, !dbg !8928
  %16 = load i8, i8* %15, align 1, !dbg !8928
  %17 = zext i8 %16 to i32, !dbg !8928
  call void @llvm.dbg.value(metadata i32 %17, metadata !8912, metadata !DIExpression()), !dbg !8916
  %18 = lshr i32 %12, 22, !dbg !8929
  %19 = and i32 %18, 3, !dbg !8929
  %20 = add nuw nsw i32 %19, 1, !dbg !8930
  call void @llvm.dbg.value(metadata i32 %20, metadata !8913, metadata !DIExpression()), !dbg !8916
  %21 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8931
  %22 = and i32 %21, 65536, !dbg !8932
  call void @llvm.dbg.value(metadata i32 %22, metadata !8914, metadata !DIExpression()), !dbg !8916
  %23 = icmp eq i32 %22, 0, !dbg !8933
  br i1 %23, label %24, label %27, !dbg !8935

24:                                               ; preds = %10
  %25 = mul nuw i32 %17, 16000000, !dbg !8936
  %26 = udiv i32 %25, %20, !dbg !8938
  br label %31, !dbg !8939

27:                                               ; preds = %10
  %28 = mul nuw nsw i32 %17, 8000000, !dbg !8940
  %29 = udiv i32 %28, %20, !dbg !8942
  br label %31

30:                                               ; preds = %0
  unreachable

31:                                               ; preds = %0, %24, %27, %9, %4
  %32 = phi i32 [ %26, %24 ], [ %29, %27 ], [ 8000000, %9 ], [ %8, %4 ], [ 16000000, %0 ]
  store i32 %32, i32* @SystemCoreClock, align 4, !dbg !8943
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8944
  %34 = lshr i32 %33, 4, !dbg !8945
  %35 = and i32 %34, 15, !dbg !8945
  %36 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %35, !dbg !8946
  %37 = load i8, i8* %36, align 1, !dbg !8946
  %38 = zext i8 %37 to i32, !dbg !8946
  call void @llvm.dbg.value(metadata i32 %38, metadata !8911, metadata !DIExpression()), !dbg !8916
  %39 = lshr i32 %32, %38, !dbg !8947
  store i32 %39, i32* @SystemCoreClock, align 4, !dbg !8947
  ret void, !dbg !8948
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !8949 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8957
  %2 = and i32 %1, 16711935, !dbg !8957
  %3 = or i32 %2, 45056, !dbg !8957
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8957
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8958
  %5 = or i32 %4, 256, !dbg !8958
  store volatile i32 %5, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8958
  %6 = tail call i32 @HAL_GetTick() #24, !dbg !8959
  call void @llvm.dbg.value(metadata i32 %6, metadata !8955, metadata !DIExpression()), !dbg !8960
  br label %7, !dbg !8961

7:                                                ; preds = %11, %0
  %8 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8962
  %9 = and i32 %8, 512, !dbg !8962
  %10 = icmp eq i32 %9, 0, !dbg !8963
  br i1 %10, label %11, label %15, !dbg !8961

11:                                               ; preds = %7
  %12 = tail call i32 @HAL_GetTick() #24, !dbg !8964
  %13 = sub i32 %12, %6, !dbg !8967
  %14 = icmp ugt i32 %13, 2, !dbg !8968
  br i1 %14, label %47, label %7, !dbg !8969, !llvm.loop !8970

15:                                               ; preds = %7
  %16 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8972
  %17 = and i32 %16, -4, !dbg !8972
  store volatile i32 %17, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8972
  br label %18, !dbg !8973

18:                                               ; preds = %22, %15
  %19 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8974
  %20 = and i32 %19, 12, !dbg !8974
  %21 = icmp eq i32 %20, 0, !dbg !8975
  br i1 %21, label %26, label %22, !dbg !8973

22:                                               ; preds = %18
  %23 = tail call i32 @HAL_GetTick() #24, !dbg !8976
  %24 = sub i32 %23, %6, !dbg !8979
  %25 = icmp ugt i32 %24, 5000, !dbg !8980
  br i1 %25, label %47, label %18, !dbg !8981, !llvm.loop !8982

26:                                               ; preds = %18
  store i32 2097000, i32* @SystemCoreClock, align 4, !dbg !8984
  %27 = load i32, i32* @uwTickPrio, align 4, !dbg !8985
  %28 = tail call i32 @HAL_InitTick(i32 noundef %27) #24, !dbg !8986
  call void @llvm.dbg.value(metadata i32 %28, metadata !8956, metadata !DIExpression()), !dbg !8960
  %29 = icmp eq i32 %28, 0, !dbg !8987
  br i1 %29, label %30, label %47, !dbg !8989

30:                                               ; preds = %26
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8990
  %32 = and i32 %31, -285278210, !dbg !8990
  store volatile i32 %32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8990
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8991
  %34 = and i32 %33, -262145, !dbg !8991
  store volatile i32 %34, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8991
  %35 = tail call i32 @HAL_GetTick() #24, !dbg !8992
  call void @llvm.dbg.value(metadata i32 %35, metadata !8955, metadata !DIExpression()), !dbg !8960
  br label %36, !dbg !8993

36:                                               ; preds = %40, %30
  %37 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8994
  %38 = and i32 %37, 33554432, !dbg !8994
  %39 = icmp eq i32 %38, 0, !dbg !8995
  br i1 %39, label %44, label %40, !dbg !8993

40:                                               ; preds = %36
  %41 = tail call i32 @HAL_GetTick() #24, !dbg !8996
  %42 = sub i32 %41, %35, !dbg !8999
  %43 = icmp ugt i32 %42, 2, !dbg !9000
  br i1 %43, label %47, label %36, !dbg !9001, !llvm.loop !9002

44:                                               ; preds = %36
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9004
  store volatile i32 0, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9005
  store volatile i32 16711680, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9006
  %45 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9007
  %46 = or i32 %45, 16777216, !dbg !9007
  store volatile i32 %46, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9007
  br label %47, !dbg !9008

47:                                               ; preds = %11, %22, %40, %26, %44
  %48 = phi i32 [ 0, %44 ], [ %28, %26 ], [ 3, %40 ], [ 3, %22 ], [ 3, %11 ], !dbg !8960
  ret i32 %48, !dbg !9009
}

; Function Attrs: optsize
declare !dbg !9010 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !9012 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !9015 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !9041, metadata !DIExpression()), !dbg !9054
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !9055
  br i1 %3, label %385, label %4, !dbg !9057

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9058
  %6 = and i32 %5, 12, !dbg !9058
  call void @llvm.dbg.value(metadata i32 %6, metadata !9044, metadata !DIExpression()), !dbg !9054
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9059
  %8 = and i32 %7, 65536, !dbg !9059
  call void @llvm.dbg.value(metadata i32 %8, metadata !9045, metadata !DIExpression()), !dbg !9054
  %9 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !9060
  %10 = load i32, i32* %9, align 4, !dbg !9060
  %11 = and i32 %10, 1, !dbg !9062
  %12 = icmp eq i32 %11, 0, !dbg !9063
  br i1 %12, label %69, label %13, !dbg !9064

13:                                               ; preds = %4
  %14 = icmp eq i32 %6, 8, !dbg !9065
  br i1 %14, label %19, label %15, !dbg !9068

15:                                               ; preds = %13
  %16 = icmp eq i32 %6, 12, !dbg !9069
  %17 = icmp ne i32 %8, 0
  %18 = select i1 %16, i1 %17, i1 false, !dbg !9070
  br i1 %18, label %19, label %27, !dbg !9070

19:                                               ; preds = %15, %13
  %20 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9071
  %21 = and i32 %20, 131072, !dbg !9071
  %22 = icmp eq i32 %21, 0, !dbg !9074
  br i1 %22, label %69, label %23, !dbg !9075

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9076
  %25 = load i32, i32* %24, align 4, !dbg !9076
  %26 = icmp eq i32 %25, 0, !dbg !9077
  br i1 %26, label %385, label %69, !dbg !9078

27:                                               ; preds = %15
  %28 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9079
  %29 = load i32, i32* %28, align 4, !dbg !9079
  switch i32 %29, label %43 [
    i32 1, label %30
    i32 0, label %33
    i32 5, label %38
  ], !dbg !9083

30:                                               ; preds = %27
  %31 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9084
  %32 = or i32 %31, 65536, !dbg !9084
  br label %48, !dbg !9084

33:                                               ; preds = %27
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9086
  %35 = and i32 %34, -65537, !dbg !9086
  store volatile i32 %35, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9086
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9086
  %37 = and i32 %36, -262145, !dbg !9086
  br label %48, !dbg !9086

38:                                               ; preds = %27
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9089
  %40 = or i32 %39, 262144, !dbg !9089
  store volatile i32 %40, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9089
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9089
  %42 = or i32 %41, 65536, !dbg !9089
  br label %48, !dbg !9089

43:                                               ; preds = %27
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9092
  %45 = and i32 %44, -65537, !dbg !9092
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9092
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9092
  %47 = and i32 %46, -262145, !dbg !9092
  br label %48

48:                                               ; preds = %33, %43, %38, %30
  %49 = phi i32 [ %37, %33 ], [ %47, %43 ], [ %42, %38 ], [ %32, %30 ]
  store volatile i32 %49, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9094
  %50 = load i32, i32* %28, align 4, !dbg !9095
  %51 = icmp eq i32 %50, 0, !dbg !9097
  %52 = tail call i32 @HAL_GetTick() #24, !dbg !9098
  call void @llvm.dbg.value(metadata i32 %52, metadata !9042, metadata !DIExpression()), !dbg !9054
  call void @llvm.dbg.value(metadata i32 %52, metadata !9042, metadata !DIExpression()), !dbg !9054
  br i1 %51, label %61, label %53, !dbg !9099

53:                                               ; preds = %48, %57
  %54 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9100
  %55 = and i32 %54, 131072, !dbg !9100
  %56 = icmp eq i32 %55, 0, !dbg !9102
  br i1 %56, label %57, label %69, !dbg !9103

57:                                               ; preds = %53
  %58 = tail call i32 @HAL_GetTick() #24, !dbg !9104
  %59 = sub i32 %58, %52, !dbg !9107
  %60 = icmp ugt i32 %59, 100, !dbg !9108
  br i1 %60, label %385, label %53, !dbg !9109, !llvm.loop !9110

61:                                               ; preds = %48, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9112
  %63 = and i32 %62, 131072, !dbg !9112
  %64 = icmp eq i32 %63, 0, !dbg !9114
  br i1 %64, label %69, label %65, !dbg !9115

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #24, !dbg !9116
  %67 = sub i32 %66, %52, !dbg !9119
  %68 = icmp ugt i32 %67, 100, !dbg !9120
  br i1 %68, label %385, label %61, !dbg !9121, !llvm.loop !9122

69:                                               ; preds = %53, %61, %23, %19, %4
  %70 = load i32, i32* %9, align 4, !dbg !9124
  %71 = and i32 %70, 2, !dbg !9126
  %72 = icmp eq i32 %71, 0, !dbg !9127
  br i1 %72, label %118, label %73, !dbg !9128

73:                                               ; preds = %69
  %74 = icmp eq i32 %6, 4, !dbg !9129
  br i1 %74, label %79, label %75, !dbg !9132

75:                                               ; preds = %73
  %76 = icmp eq i32 %6, 12, !dbg !9133
  %77 = icmp eq i32 %8, 0
  %78 = select i1 %76, i1 %77, i1 false, !dbg !9134
  br i1 %78, label %79, label %87, !dbg !9134

79:                                               ; preds = %75, %73
  %80 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9135
  %81 = and i32 %80, 2, !dbg !9135
  %82 = icmp eq i32 %81, 0, !dbg !9138
  br i1 %82, label %111, label %83, !dbg !9139

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9140
  %85 = load i32, i32* %84, align 4, !dbg !9140
  %86 = icmp eq i32 %85, 1, !dbg !9141
  br i1 %86, label %111, label %385, !dbg !9142

87:                                               ; preds = %75
  %88 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9143
  %89 = load i32, i32* %88, align 4, !dbg !9143
  %90 = icmp eq i32 %89, 0, !dbg !9146
  br i1 %90, label %101, label %91, !dbg !9147

91:                                               ; preds = %87
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !9148
  %92 = tail call i32 @HAL_GetTick() #24, !dbg !9150
  call void @llvm.dbg.value(metadata i32 %92, metadata !9042, metadata !DIExpression()), !dbg !9054
  br label %93, !dbg !9151

93:                                               ; preds = %97, %91
  %94 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9152
  %95 = and i32 %94, 2, !dbg !9152
  %96 = icmp eq i32 %95, 0, !dbg !9153
  br i1 %96, label %97, label %111, !dbg !9151

97:                                               ; preds = %93
  %98 = tail call i32 @HAL_GetTick() #24, !dbg !9154
  %99 = sub i32 %98, %92, !dbg !9157
  %100 = icmp ugt i32 %99, 2, !dbg !9158
  br i1 %100, label %385, label %93, !dbg !9159, !llvm.loop !9160

101:                                              ; preds = %87
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !9162
  %102 = tail call i32 @HAL_GetTick() #24, !dbg !9164
  call void @llvm.dbg.value(metadata i32 %102, metadata !9042, metadata !DIExpression()), !dbg !9054
  br label %103, !dbg !9165

103:                                              ; preds = %107, %101
  %104 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9166
  %105 = and i32 %104, 2, !dbg !9166
  %106 = icmp eq i32 %105, 0, !dbg !9167
  br i1 %106, label %118, label %107, !dbg !9165

107:                                              ; preds = %103
  %108 = tail call i32 @HAL_GetTick() #24, !dbg !9168
  %109 = sub i32 %108, %102, !dbg !9171
  %110 = icmp ugt i32 %109, 2, !dbg !9172
  br i1 %110, label %385, label %103, !dbg !9173, !llvm.loop !9174

111:                                              ; preds = %93, %79, %83
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9176
  %113 = and i32 %112, -7937, !dbg !9176
  %114 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !9176
  %115 = load i32, i32* %114, align 4, !dbg !9176
  %116 = shl i32 %115, 8, !dbg !9176
  %117 = or i32 %116, %113, !dbg !9176
  store volatile i32 %117, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9176
  br label %118, !dbg !9177

118:                                              ; preds = %103, %111, %69
  %119 = load i32, i32* %9, align 4, !dbg !9177
  %120 = and i32 %119, 16, !dbg !9179
  %121 = icmp eq i32 %120, 0, !dbg !9180
  br i1 %121, label %215, label %122, !dbg !9181

122:                                              ; preds = %118
  %123 = icmp eq i32 %6, 0, !dbg !9182
  br i1 %123, label %124, label %179, !dbg !9185

124:                                              ; preds = %122
  %125 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9186
  %126 = and i32 %125, 512, !dbg !9186
  %127 = icmp eq i32 %126, 0, !dbg !9189
  br i1 %127, label %132, label %128, !dbg !9190

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !9191
  %130 = load i32, i32* %129, align 4, !dbg !9191
  %131 = icmp eq i32 %130, 0, !dbg !9192
  br i1 %131, label %385, label %132, !dbg !9193

132:                                              ; preds = %128, %124
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !9194
  %134 = load i32, i32* %133, align 4, !dbg !9194
  %135 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9197
  %136 = and i32 %135, 57344, !dbg !9197
  %137 = icmp ugt i32 %134, %136, !dbg !9198
  br i1 %137, label %138, label %152, !dbg !9199

138:                                              ; preds = %132
  %139 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %134) #25, !dbg !9200
  %140 = icmp eq i32 %139, 0, !dbg !9203
  br i1 %140, label %141, label %385, !dbg !9204

141:                                              ; preds = %138
  %142 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9205
  %143 = and i32 %142, -57345, !dbg !9205
  %144 = load i32, i32* %133, align 4, !dbg !9205
  %145 = or i32 %143, %144, !dbg !9205
  store volatile i32 %145, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9205
  %146 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9206
  %147 = and i32 %146, 16777215, !dbg !9206
  %148 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !9206
  %149 = load i32, i32* %148, align 4, !dbg !9206
  %150 = shl i32 %149, 24, !dbg !9206
  %151 = or i32 %150, %147, !dbg !9206
  store volatile i32 %151, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9206
  br label %165, !dbg !9207

152:                                              ; preds = %132
  %153 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9208
  %154 = and i32 %153, -57345, !dbg !9208
  %155 = or i32 %154, %134, !dbg !9208
  store volatile i32 %155, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9208
  %156 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9210
  %157 = and i32 %156, 16777215, !dbg !9210
  %158 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !9210
  %159 = load i32, i32* %158, align 4, !dbg !9210
  %160 = shl i32 %159, 24, !dbg !9210
  %161 = or i32 %160, %157, !dbg !9210
  store volatile i32 %161, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9210
  %162 = load i32, i32* %133, align 4, !dbg !9211
  %163 = tail call fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %162) #25, !dbg !9213
  %164 = icmp eq i32 %163, 0, !dbg !9214
  br i1 %164, label %165, label %385, !dbg !9215

165:                                              ; preds = %152, %141
  %166 = load i32, i32* %133, align 4, !dbg !9216
  %167 = lshr i32 %166, 13, !dbg !9217
  %168 = shl i32 65536, %167, !dbg !9218
  %169 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9219
  %170 = lshr i32 %169, 4, !dbg !9220
  %171 = and i32 %170, 15, !dbg !9220
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %171, !dbg !9221
  %173 = load i8, i8* %172, align 1, !dbg !9221
  %174 = zext i8 %173 to i32, !dbg !9221
  %175 = lshr i32 %168, %174, !dbg !9222
  store i32 %175, i32* @SystemCoreClock, align 4, !dbg !9223
  %176 = load i32, i32* @uwTickPrio, align 4, !dbg !9224
  %177 = tail call i32 @HAL_InitTick(i32 noundef %176) #24, !dbg !9225
  call void @llvm.dbg.value(metadata i32 %177, metadata !9043, metadata !DIExpression()), !dbg !9054
  %178 = icmp eq i32 %177, 0, !dbg !9226
  br i1 %178, label %215, label %385, !dbg !9228

179:                                              ; preds = %122
  %180 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !9229
  %181 = load i32, i32* %180, align 4, !dbg !9229
  %182 = icmp eq i32 %181, 0, !dbg !9232
  br i1 %182, label %205, label %183, !dbg !9233

183:                                              ; preds = %179
  store volatile i32 1, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !9234
  %184 = tail call i32 @HAL_GetTick() #24, !dbg !9236
  call void @llvm.dbg.value(metadata i32 %184, metadata !9042, metadata !DIExpression()), !dbg !9054
  br label %185, !dbg !9237

185:                                              ; preds = %189, %183
  %186 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9238
  %187 = and i32 %186, 512, !dbg !9238
  %188 = icmp eq i32 %187, 0, !dbg !9239
  br i1 %188, label %189, label %193, !dbg !9237

189:                                              ; preds = %185
  %190 = tail call i32 @HAL_GetTick() #24, !dbg !9240
  %191 = sub i32 %190, %184, !dbg !9243
  %192 = icmp ugt i32 %191, 2, !dbg !9244
  br i1 %192, label %385, label %185, !dbg !9245, !llvm.loop !9246

193:                                              ; preds = %185
  %194 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9248
  %195 = and i32 %194, -57345, !dbg !9248
  %196 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !9248
  %197 = load i32, i32* %196, align 4, !dbg !9248
  %198 = or i32 %195, %197, !dbg !9248
  store volatile i32 %198, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9248
  %199 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9249
  %200 = and i32 %199, 16777215, !dbg !9249
  %201 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !9249
  %202 = load i32, i32* %201, align 4, !dbg !9249
  %203 = shl i32 %202, 24, !dbg !9249
  %204 = or i32 %203, %200, !dbg !9249
  store volatile i32 %204, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9249
  br label %215, !dbg !9250

205:                                              ; preds = %179
  store volatile i32 0, i32* inttoptr (i32 1111949344 to i32*), align 32, !dbg !9251
  %206 = tail call i32 @HAL_GetTick() #24, !dbg !9253
  call void @llvm.dbg.value(metadata i32 %206, metadata !9042, metadata !DIExpression()), !dbg !9054
  br label %207, !dbg !9254

207:                                              ; preds = %211, %205
  %208 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9255
  %209 = and i32 %208, 512, !dbg !9255
  %210 = icmp eq i32 %209, 0, !dbg !9256
  br i1 %210, label %215, label %211, !dbg !9254

211:                                              ; preds = %207
  %212 = tail call i32 @HAL_GetTick() #24, !dbg !9257
  %213 = sub i32 %212, %206, !dbg !9260
  %214 = icmp ugt i32 %213, 2, !dbg !9261
  br i1 %214, label %385, label %207, !dbg !9262, !llvm.loop !9263

215:                                              ; preds = %207, %165, %193, %118
  %216 = load i32, i32* %9, align 4, !dbg !9265
  %217 = and i32 %216, 8, !dbg !9267
  %218 = icmp eq i32 %217, 0, !dbg !9268
  br i1 %218, label %243, label %219, !dbg !9269

219:                                              ; preds = %215
  %220 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !9270
  %221 = load i32, i32* %220, align 4, !dbg !9270
  %222 = icmp eq i32 %221, 0, !dbg !9273
  br i1 %222, label %233, label %223, !dbg !9274

223:                                              ; preds = %219
  store volatile i32 1, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !9275
  %224 = tail call i32 @HAL_GetTick() #24, !dbg !9277
  call void @llvm.dbg.value(metadata i32 %224, metadata !9042, metadata !DIExpression()), !dbg !9054
  br label %225, !dbg !9278

225:                                              ; preds = %229, %223
  %226 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9279
  %227 = and i32 %226, 2, !dbg !9279
  %228 = icmp eq i32 %227, 0, !dbg !9280
  br i1 %228, label %229, label %243, !dbg !9278

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #24, !dbg !9281
  %231 = sub i32 %230, %224, !dbg !9284
  %232 = icmp ugt i32 %231, 2, !dbg !9285
  br i1 %232, label %385, label %225, !dbg !9286, !llvm.loop !9287

233:                                              ; preds = %219
  store volatile i32 0, i32* inttoptr (i32 1111950976 to i32*), align 128, !dbg !9289
  %234 = tail call i32 @HAL_GetTick() #24, !dbg !9291
  call void @llvm.dbg.value(metadata i32 %234, metadata !9042, metadata !DIExpression()), !dbg !9054
  br label %235, !dbg !9292

235:                                              ; preds = %239, %233
  %236 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9293
  %237 = and i32 %236, 2, !dbg !9293
  %238 = icmp eq i32 %237, 0, !dbg !9294
  br i1 %238, label %243, label %239, !dbg !9292

239:                                              ; preds = %235
  %240 = tail call i32 @HAL_GetTick() #24, !dbg !9295
  %241 = sub i32 %240, %234, !dbg !9298
  %242 = icmp ugt i32 %241, 2, !dbg !9299
  br i1 %242, label %385, label %235, !dbg !9300, !llvm.loop !9301

243:                                              ; preds = %225, %235, %215
  %244 = load i32, i32* %9, align 4, !dbg !9303
  %245 = and i32 %244, 4, !dbg !9304
  %246 = icmp eq i32 %245, 0, !dbg !9305
  br i1 %246, label %320, label %247, !dbg !9306

247:                                              ; preds = %243
  call void @llvm.dbg.value(metadata i32 0, metadata !9046, metadata !DIExpression()), !dbg !9307
  %248 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !9308
  %249 = and i32 %248, 268435456, !dbg !9308
  %250 = icmp eq i32 %249, 0, !dbg !9308
  br i1 %250, label %251, label %258, !dbg !9309

251:                                              ; preds = %247
  %252 = bitcast i32* %2 to i8*, !dbg !9310
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252), !dbg !9310
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9050, metadata !DIExpression()), !dbg !9310
  %253 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !9310
  %254 = or i32 %253, 268435456, !dbg !9310
  store volatile i32 %254, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !9310
  %255 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !9310
  %256 = and i32 %255, 268435456, !dbg !9310
  store volatile i32 %256, i32* %2, align 4, !dbg !9310
  %257 = load volatile i32, i32* %2, align 4, !dbg !9310
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252), !dbg !9311
  call void @llvm.dbg.value(metadata i32 1, metadata !9046, metadata !DIExpression()), !dbg !9307
  br label %258, !dbg !9312

258:                                              ; preds = %251, %247
  call void @llvm.dbg.value(metadata i32 undef, metadata !9046, metadata !DIExpression()), !dbg !9307
  %259 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9313
  %260 = and i32 %259, 256, !dbg !9313
  %261 = icmp eq i32 %260, 0, !dbg !9313
  br i1 %261, label %262, label %274, !dbg !9315

262:                                              ; preds = %258
  %263 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9316
  %264 = or i32 %263, 256, !dbg !9316
  store volatile i32 %264, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9316
  %265 = tail call i32 @HAL_GetTick() #24, !dbg !9318
  call void @llvm.dbg.value(metadata i32 %265, metadata !9042, metadata !DIExpression()), !dbg !9054
  br label %266, !dbg !9319

266:                                              ; preds = %270, %262
  %267 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9320
  %268 = and i32 %267, 256, !dbg !9320
  %269 = icmp eq i32 %268, 0, !dbg !9320
  br i1 %269, label %270, label %274, !dbg !9319

270:                                              ; preds = %266
  %271 = tail call i32 @HAL_GetTick() #24, !dbg !9321
  %272 = sub i32 %271, %265, !dbg !9324
  %273 = icmp ugt i32 %272, 100, !dbg !9325
  br i1 %273, label %385, label %266, !dbg !9326, !llvm.loop !9327

274:                                              ; preds = %266, %258
  %275 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !9329
  %276 = load i32, i32* %275, align 4, !dbg !9329
  switch i32 %276, label %290 [
    i32 1, label %277
    i32 0, label %280
    i32 5, label %285
  ], !dbg !9332

277:                                              ; preds = %274
  %278 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9333
  %279 = or i32 %278, 256, !dbg !9333
  br label %295, !dbg !9333

280:                                              ; preds = %274
  %281 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9335
  %282 = and i32 %281, -257, !dbg !9335
  store volatile i32 %282, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9335
  %283 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9335
  %284 = and i32 %283, -1025, !dbg !9335
  br label %295, !dbg !9335

285:                                              ; preds = %274
  %286 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9338
  %287 = or i32 %286, 1024, !dbg !9338
  store volatile i32 %287, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9338
  %288 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9338
  %289 = or i32 %288, 256, !dbg !9338
  br label %295, !dbg !9338

290:                                              ; preds = %274
  %291 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9341
  %292 = and i32 %291, -257, !dbg !9341
  store volatile i32 %292, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9341
  %293 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9341
  %294 = and i32 %293, -1025, !dbg !9341
  br label %295

295:                                              ; preds = %280, %290, %285, %277
  %296 = phi i32 [ %284, %280 ], [ %294, %290 ], [ %289, %285 ], [ %279, %277 ]
  store volatile i32 %296, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9343
  %297 = load i32, i32* %275, align 4, !dbg !9344
  %298 = icmp eq i32 %297, 0, !dbg !9346
  %299 = tail call i32 @HAL_GetTick() #24, !dbg !9347
  call void @llvm.dbg.value(metadata i32 %299, metadata !9042, metadata !DIExpression()), !dbg !9054
  call void @llvm.dbg.value(metadata i32 %299, metadata !9042, metadata !DIExpression()), !dbg !9054
  br i1 %298, label %308, label %300, !dbg !9348

300:                                              ; preds = %295, %304
  %301 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9349
  %302 = and i32 %301, 512, !dbg !9349
  %303 = icmp eq i32 %302, 0, !dbg !9351
  br i1 %303, label %304, label %316, !dbg !9352

304:                                              ; preds = %300
  %305 = tail call i32 @HAL_GetTick() #24, !dbg !9353
  %306 = sub i32 %305, %299, !dbg !9356
  %307 = icmp ugt i32 %306, 5000, !dbg !9357
  br i1 %307, label %385, label %300, !dbg !9358, !llvm.loop !9359

308:                                              ; preds = %295, %312
  %309 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9361
  %310 = and i32 %309, 512, !dbg !9361
  %311 = icmp eq i32 %310, 0, !dbg !9363
  br i1 %311, label %316, label %312, !dbg !9364

312:                                              ; preds = %308
  %313 = tail call i32 @HAL_GetTick() #24, !dbg !9365
  %314 = sub i32 %313, %299, !dbg !9368
  %315 = icmp ugt i32 %314, 5000, !dbg !9369
  br i1 %315, label %385, label %308, !dbg !9370, !llvm.loop !9371

316:                                              ; preds = %300, %308
  br i1 %250, label %317, label %320, !dbg !9373

317:                                              ; preds = %316
  %318 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !9374
  %319 = and i32 %318, -268435457, !dbg !9374
  store volatile i32 %319, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !9374
  br label %320, !dbg !9377

320:                                              ; preds = %317, %316, %243
  %321 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !9378
  %322 = load i32, i32* %321, align 4, !dbg !9378
  %323 = icmp eq i32 %322, 0, !dbg !9380
  br i1 %323, label %384, label %324, !dbg !9381

324:                                              ; preds = %320
  %325 = icmp eq i32 %6, 12, !dbg !9382
  br i1 %325, label %366, label %326, !dbg !9385

326:                                              ; preds = %324
  %327 = icmp eq i32 %322, 2, !dbg !9386
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !9389
  %328 = tail call i32 @HAL_GetTick() #24, !dbg !9389
  call void @llvm.dbg.value(metadata i32 %328, metadata !9042, metadata !DIExpression()), !dbg !9054
  call void @llvm.dbg.value(metadata i32 %328, metadata !9042, metadata !DIExpression()), !dbg !9054
  br i1 %327, label %329, label %358, !dbg !9390

329:                                              ; preds = %326, %333
  %330 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9391
  %331 = and i32 %330, 33554432, !dbg !9391
  %332 = icmp eq i32 %331, 0, !dbg !9393
  br i1 %332, label %337, label %333, !dbg !9394

333:                                              ; preds = %329
  %334 = tail call i32 @HAL_GetTick() #24, !dbg !9395
  %335 = sub i32 %334, %328, !dbg !9398
  %336 = icmp ugt i32 %335, 2, !dbg !9399
  br i1 %336, label %385, label %329, !dbg !9400, !llvm.loop !9401

337:                                              ; preds = %329
  %338 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9403
  %339 = and i32 %338, -16580609, !dbg !9403
  %340 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !9403
  %341 = load i32, i32* %340, align 4, !dbg !9403
  %342 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !9403
  %343 = load i32, i32* %342, align 4, !dbg !9403
  %344 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !9403
  %345 = load i32, i32* %344, align 4, !dbg !9403
  %346 = or i32 %339, %341, !dbg !9403
  %347 = or i32 %346, %343, !dbg !9403
  %348 = or i32 %347, %345, !dbg !9403
  store volatile i32 %348, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9403
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !9404
  %349 = tail call i32 @HAL_GetTick() #24, !dbg !9405
  call void @llvm.dbg.value(metadata i32 %349, metadata !9042, metadata !DIExpression()), !dbg !9054
  br label %350, !dbg !9406

350:                                              ; preds = %354, %337
  %351 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9407
  %352 = and i32 %351, 33554432, !dbg !9407
  %353 = icmp eq i32 %352, 0, !dbg !9408
  br i1 %353, label %354, label %384, !dbg !9406

354:                                              ; preds = %350
  %355 = tail call i32 @HAL_GetTick() #24, !dbg !9409
  %356 = sub i32 %355, %349, !dbg !9412
  %357 = icmp ugt i32 %356, 2, !dbg !9413
  br i1 %357, label %385, label %350, !dbg !9414, !llvm.loop !9415

358:                                              ; preds = %326, %362
  %359 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9417
  %360 = and i32 %359, 33554432, !dbg !9417
  %361 = icmp eq i32 %360, 0, !dbg !9419
  br i1 %361, label %384, label %362, !dbg !9420

362:                                              ; preds = %358
  %363 = tail call i32 @HAL_GetTick() #24, !dbg !9421
  %364 = sub i32 %363, %328, !dbg !9424
  %365 = icmp ugt i32 %364, 2, !dbg !9425
  br i1 %365, label %385, label %358, !dbg !9426, !llvm.loop !9427

366:                                              ; preds = %324
  %367 = icmp eq i32 %322, 1, !dbg !9429
  br i1 %367, label %385, label %368, !dbg !9432

368:                                              ; preds = %366
  %369 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9433
  call void @llvm.dbg.value(metadata i32 %369, metadata !9045, metadata !DIExpression()), !dbg !9054
  %370 = and i32 %369, 65536, !dbg !9435
  %371 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !9437
  %372 = load i32, i32* %371, align 4, !dbg !9437
  %373 = icmp eq i32 %370, %372, !dbg !9438
  br i1 %373, label %374, label %385, !dbg !9439

374:                                              ; preds = %368
  %375 = and i32 %369, 3932160, !dbg !9440
  %376 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !9441
  %377 = load i32, i32* %376, align 4, !dbg !9441
  %378 = icmp eq i32 %375, %377, !dbg !9442
  br i1 %378, label %379, label %385, !dbg !9443

379:                                              ; preds = %374
  %380 = and i32 %369, 12582912, !dbg !9444
  %381 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !9445
  %382 = load i32, i32* %381, align 4, !dbg !9445
  %383 = icmp eq i32 %380, %382, !dbg !9446
  br i1 %383, label %384, label %385, !dbg !9447

384:                                              ; preds = %358, %350, %379, %320
  br label %385, !dbg !9448

385:                                              ; preds = %57, %65, %97, %107, %189, %211, %229, %239, %270, %304, %312, %362, %333, %354, %368, %374, %379, %366, %165, %152, %138, %128, %83, %23, %1, %384
  %386 = phi i32 [ 0, %384 ], [ 1, %1 ], [ 1, %23 ], [ 1, %83 ], [ 1, %128 ], [ 1, %138 ], [ 1, %152 ], [ %177, %165 ], [ 1, %366 ], [ 1, %379 ], [ 1, %374 ], [ 1, %368 ], [ 3, %354 ], [ 3, %333 ], [ 3, %362 ], [ 3, %312 ], [ 3, %304 ], [ 3, %270 ], [ 3, %239 ], [ 3, %229 ], [ 3, %211 ], [ 3, %189 ], [ 3, %107 ], [ 3, %97 ], [ 3, %65 ], [ 3, %57 ], !dbg !9054
  ret i32 %386, !dbg !9449
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @RCC_SetFlashLatencyFromMSIRange(i32 noundef %0) unnamed_addr #13 !dbg !9450 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9452, metadata !DIExpression()), !dbg !9461
  call void @llvm.dbg.value(metadata i32 0, metadata !9454, metadata !DIExpression()), !dbg !9461
  %3 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9462
  %4 = and i32 %3, 240, !dbg !9462
  %5 = icmp eq i32 %4, 0, !dbg !9463
  br i1 %5, label %6, label %31, !dbg !9464

6:                                                ; preds = %1
  %7 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !9465
  %8 = and i32 %7, 268435456, !dbg !9465
  %9 = icmp eq i32 %8, 0, !dbg !9465
  br i1 %9, label %12, label %10, !dbg !9466

10:                                               ; preds = %6
  %11 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9467
  call void @llvm.dbg.value(metadata i32 %11, metadata !9453, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !9461
  br label %22, !dbg !9469

12:                                               ; preds = %6
  %13 = bitcast i32* %2 to i8*, !dbg !9470
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13), !dbg !9470
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9455, metadata !DIExpression()), !dbg !9470
  %14 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !9470
  %15 = or i32 %14, 268435456, !dbg !9470
  store volatile i32 %15, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !9470
  %16 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !9470
  %17 = and i32 %16, 268435456, !dbg !9470
  store volatile i32 %17, i32* %2, align 4, !dbg !9470
  %18 = load volatile i32, i32* %2, align 4, !dbg !9470
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13), !dbg !9471
  %19 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9472
  call void @llvm.dbg.value(metadata i32 %19, metadata !9453, metadata !DIExpression(DW_OP_constu, 6144, DW_OP_and, DW_OP_stack_value)), !dbg !9461
  %20 = load volatile i32, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !9473
  %21 = and i32 %20, -268435457, !dbg !9473
  store volatile i32 %21, i32* inttoptr (i32 1073887268 to i32*), align 4, !dbg !9473
  br label %22

22:                                               ; preds = %10, %12
  %23 = phi i32 [ %11, %10 ], [ %19, %12 ]
  %24 = and i32 %23, 6144, !dbg !9474
  call void @llvm.dbg.value(metadata i32 %24, metadata !9453, metadata !DIExpression()), !dbg !9461
  %25 = icmp eq i32 %24, 6144, !dbg !9475
  %26 = icmp eq i32 %0, 49152
  %27 = and i1 %26, %25, !dbg !9477
  call void @llvm.dbg.value(metadata i32 undef, metadata !9454, metadata !DIExpression()), !dbg !9461
  br i1 %27, label %28, label %31, !dbg !9478

28:                                               ; preds = %22
  %29 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9480
  %30 = or i32 %29, 4, !dbg !9480
  store volatile i32 %30, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9480
  br label %31, !dbg !9480

31:                                               ; preds = %1, %28, %22
  %32 = phi i32 [ 1, %28 ], [ 0, %22 ], [ 0, %1 ]
  %33 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9478
  %34 = and i32 %33, -2, !dbg !9478
  %35 = or i32 %34, %32, !dbg !9478
  store volatile i32 %35, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9478
  %36 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9483
  %37 = and i32 %36, 1, !dbg !9483
  %38 = xor i32 %37, %32, !dbg !9461
  ret i32 %38, !dbg !9485
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !9486 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !9499, metadata !DIExpression()), !dbg !9503
  call void @llvm.dbg.value(metadata i32 %1, metadata !9500, metadata !DIExpression()), !dbg !9503
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !9504
  br i1 %3, label %136, label %4, !dbg !9506

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9507
  %6 = and i32 %5, 1, !dbg !9507
  %7 = icmp ult i32 %6, %1, !dbg !9509
  br i1 %7, label %8, label %20, !dbg !9510

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 1, !dbg !9511
  br i1 %9, label %10, label %13, !dbg !9515

10:                                               ; preds = %8
  %11 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9516
  %12 = or i32 %11, 4, !dbg !9516
  store volatile i32 %12, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9516
  br label %13, !dbg !9516

13:                                               ; preds = %10, %8
  %14 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9515
  %15 = and i32 %14, -2, !dbg !9515
  %16 = or i32 %15, %1, !dbg !9515
  store volatile i32 %16, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9515
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9518
  %18 = and i32 %17, 1, !dbg !9518
  %19 = icmp eq i32 %18, %1, !dbg !9520
  br i1 %19, label %20, label %136, !dbg !9521

20:                                               ; preds = %13, %4
  %21 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !9522
  %22 = load i32, i32* %21, align 4, !dbg !9522
  %23 = and i32 %22, 2, !dbg !9524
  %24 = icmp eq i32 %23, 0, !dbg !9525
  br i1 %24, label %32, label %25, !dbg !9526

25:                                               ; preds = %20
  %26 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9527
  %27 = and i32 %26, -241, !dbg !9527
  %28 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !9527
  %29 = load i32, i32* %28, align 4, !dbg !9527
  %30 = or i32 %27, %29, !dbg !9527
  store volatile i32 %30, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9527
  %31 = load i32, i32* %21, align 4, !dbg !9529
  br label %32, !dbg !9531

32:                                               ; preds = %25, %20
  %33 = phi i32 [ %31, %25 ], [ %22, %20 ], !dbg !9529
  %34 = and i32 %33, 1, !dbg !9532
  %35 = icmp eq i32 %34, 0, !dbg !9533
  br i1 %35, label %93, label %36, !dbg !9534

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !9535
  %38 = load i32, i32* %37, align 4, !dbg !9535
  switch i32 %38, label %51 [
    i32 2, label %39
    i32 3, label %43
    i32 1, label %47
  ], !dbg !9538

39:                                               ; preds = %36
  %40 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9539
  %41 = and i32 %40, 131072, !dbg !9539
  %42 = icmp eq i32 %41, 0, !dbg !9542
  br i1 %42, label %136, label %55, !dbg !9543

43:                                               ; preds = %36
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9544
  %45 = and i32 %44, 33554432, !dbg !9544
  %46 = icmp eq i32 %45, 0, !dbg !9548
  br i1 %46, label %136, label %55, !dbg !9549

47:                                               ; preds = %36
  %48 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9550
  %49 = and i32 %48, 2, !dbg !9550
  %50 = icmp eq i32 %49, 0, !dbg !9554
  br i1 %50, label %136, label %55, !dbg !9555

51:                                               ; preds = %36
  %52 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9556
  %53 = and i32 %52, 512, !dbg !9556
  %54 = icmp eq i32 %53, 0, !dbg !9559
  br i1 %54, label %136, label %55, !dbg !9560

55:                                               ; preds = %43, %51, %47, %39
  %56 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9561
  %57 = and i32 %56, -4, !dbg !9561
  %58 = or i32 %57, %38, !dbg !9561
  store volatile i32 %58, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9561
  %59 = tail call i32 @HAL_GetTick() #24, !dbg !9562
  call void @llvm.dbg.value(metadata i32 %59, metadata !9501, metadata !DIExpression()), !dbg !9503
  %60 = load i32, i32* %37, align 4, !dbg !9563
  switch i32 %60, label %85 [
    i32 2, label %61
    i32 3, label %69
    i32 1, label %77
  ], !dbg !9565

61:                                               ; preds = %55, %65
  %62 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9566
  %63 = and i32 %62, 12, !dbg !9566
  %64 = icmp eq i32 %63, 8, !dbg !9568
  br i1 %64, label %93, label %65, !dbg !9569

65:                                               ; preds = %61
  %66 = tail call i32 @HAL_GetTick() #24, !dbg !9570
  %67 = sub i32 %66, %59, !dbg !9573
  %68 = icmp ugt i32 %67, 5000, !dbg !9574
  br i1 %68, label %136, label %61, !dbg !9575, !llvm.loop !9576

69:                                               ; preds = %55, %73
  %70 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9578
  %71 = and i32 %70, 12, !dbg !9578
  %72 = icmp eq i32 %71, 12, !dbg !9581
  br i1 %72, label %93, label %73, !dbg !9582

73:                                               ; preds = %69
  %74 = tail call i32 @HAL_GetTick() #24, !dbg !9583
  %75 = sub i32 %74, %59, !dbg !9586
  %76 = icmp ugt i32 %75, 5000, !dbg !9587
  br i1 %76, label %136, label %69, !dbg !9588, !llvm.loop !9589

77:                                               ; preds = %55, %81
  %78 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9591
  %79 = and i32 %78, 12, !dbg !9591
  %80 = icmp eq i32 %79, 4, !dbg !9594
  br i1 %80, label %93, label %81, !dbg !9595

81:                                               ; preds = %77
  %82 = tail call i32 @HAL_GetTick() #24, !dbg !9596
  %83 = sub i32 %82, %59, !dbg !9599
  %84 = icmp ugt i32 %83, 5000, !dbg !9600
  br i1 %84, label %136, label %77, !dbg !9601, !llvm.loop !9602

85:                                               ; preds = %55, %89
  %86 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9604
  %87 = and i32 %86, 12, !dbg !9604
  %88 = icmp eq i32 %87, 0, !dbg !9606
  br i1 %88, label %93, label %89, !dbg !9607

89:                                               ; preds = %85
  %90 = tail call i32 @HAL_GetTick() #24, !dbg !9608
  %91 = sub i32 %90, %59, !dbg !9611
  %92 = icmp ugt i32 %91, 5000, !dbg !9612
  br i1 %92, label %136, label %85, !dbg !9613, !llvm.loop !9614

93:                                               ; preds = %77, %69, %61, %85, %32
  %94 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9616
  %95 = and i32 %94, 1, !dbg !9616
  %96 = icmp ugt i32 %95, %1, !dbg !9618
  br i1 %96, label %97, label %103, !dbg !9619

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9620
  %99 = and i32 %98, -2, !dbg !9620
  store volatile i32 %99, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9620
  %100 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9623
  %101 = and i32 %100, 1, !dbg !9623
  %102 = icmp eq i32 %101, 0, !dbg !9625
  br i1 %102, label %103, label %136, !dbg !9626

103:                                              ; preds = %97, %93
  %104 = load i32, i32* %21, align 4, !dbg !9627
  %105 = and i32 %104, 4, !dbg !9629
  %106 = icmp eq i32 %105, 0, !dbg !9630
  br i1 %106, label %114, label %107, !dbg !9631

107:                                              ; preds = %103
  %108 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9632
  %109 = and i32 %108, -1793, !dbg !9632
  %110 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !9632
  %111 = load i32, i32* %110, align 4, !dbg !9632
  %112 = or i32 %109, %111, !dbg !9632
  store volatile i32 %112, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9632
  %113 = load i32, i32* %21, align 4, !dbg !9634
  br label %114, !dbg !9636

114:                                              ; preds = %107, %103
  %115 = phi i32 [ %113, %107 ], [ %104, %103 ], !dbg !9634
  %116 = and i32 %115, 8, !dbg !9637
  %117 = icmp eq i32 %116, 0, !dbg !9638
  br i1 %117, label %125, label %118, !dbg !9639

118:                                              ; preds = %114
  %119 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9640
  %120 = and i32 %119, -14337, !dbg !9640
  %121 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !9640
  %122 = load i32, i32* %121, align 4, !dbg !9640
  %123 = shl i32 %122, 3, !dbg !9640
  %124 = or i32 %123, %120, !dbg !9640
  store volatile i32 %124, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9640
  br label %125, !dbg !9642

125:                                              ; preds = %118, %114
  %126 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !9643
  %127 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9644
  %128 = lshr i32 %127, 4, !dbg !9645
  %129 = and i32 %128, 15, !dbg !9645
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %129, !dbg !9646
  %131 = load i8, i8* %130, align 1, !dbg !9646
  %132 = zext i8 %131 to i32, !dbg !9646
  %133 = lshr i32 %126, %132, !dbg !9647
  store i32 %133, i32* @SystemCoreClock, align 4, !dbg !9648
  %134 = load i32, i32* @uwTickPrio, align 4, !dbg !9649
  %135 = tail call i32 @HAL_InitTick(i32 noundef %134) #24, !dbg !9650
  call void @llvm.dbg.value(metadata i32 %135, metadata !9502, metadata !DIExpression()), !dbg !9503
  br label %136, !dbg !9651

136:                                              ; preds = %81, %73, %65, %89, %97, %51, %47, %43, %39, %13, %2, %125
  %137 = phi i32 [ %135, %125 ], [ 1, %2 ], [ 1, %13 ], [ 1, %39 ], [ 1, %43 ], [ 1, %47 ], [ 1, %51 ], [ 1, %97 ], [ 3, %89 ], [ 3, %65 ], [ 3, %73 ], [ 3, %81 ], !dbg !9503
  ret i32 %137, !dbg !9652
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #15 !dbg !9653 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9661
  call void @llvm.dbg.value(metadata i32 %1, metadata !9655, metadata !DIExpression()), !dbg !9662
  %2 = lshr i32 %1, 2, !dbg !9663
  %3 = and i32 %2, 3, !dbg !9663
  switch i32 %3, label %20 [
    i32 1, label %26
    i32 2, label %4
    i32 3, label %5
    i32 0, label %21
  ], !dbg !9663

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 8000000, metadata !9660, metadata !DIExpression()), !dbg !9662
  br label %26, !dbg !9664

5:                                                ; preds = %0
  %6 = lshr i32 %1, 18, !dbg !9667
  %7 = and i32 %6, 15, !dbg !9667
  %8 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %7, !dbg !9669
  %9 = load i8, i8* %8, align 1, !dbg !9669
  call void @llvm.dbg.value(metadata i8 %9, metadata !9656, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9662
  %10 = lshr i32 %1, 22, !dbg !9670
  %11 = and i32 %10, 3, !dbg !9670
  %12 = add nuw nsw i32 %11, 1, !dbg !9671
  call void @llvm.dbg.value(metadata i32 %12, metadata !9657, metadata !DIExpression()), !dbg !9662
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9672
  %14 = and i32 %13, 65536, !dbg !9672
  %15 = icmp eq i32 %14, 0, !dbg !9674
  %16 = zext i8 %9 to i32, !dbg !9675
  %17 = select i1 %15, i32 16000000, i32 8000000, !dbg !9675
  %18 = mul nuw i32 %17, %16, !dbg !9675
  %19 = udiv i32 %18, %12, !dbg !9676
  call void @llvm.dbg.value(metadata i32 %19, metadata !9658, metadata !DIExpression()), !dbg !9662
  call void @llvm.dbg.value(metadata i32 %19, metadata !9660, metadata !DIExpression()), !dbg !9662
  br label %26, !dbg !9677

20:                                               ; preds = %0
  unreachable

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9678
  %23 = lshr i32 %22, 13, !dbg !9680
  %24 = and i32 %23, 7, !dbg !9680
  call void @llvm.dbg.value(metadata i32 %24, metadata !9659, metadata !DIExpression()), !dbg !9662
  %25 = shl nuw nsw i32 65536, %24, !dbg !9681
  call void @llvm.dbg.value(metadata i32 %25, metadata !9660, metadata !DIExpression()), !dbg !9662
  br label %26, !dbg !9682

26:                                               ; preds = %0, %21, %5, %4
  %27 = phi i32 [ %25, %21 ], [ %19, %5 ], [ 8000000, %4 ], [ 16000000, %0 ], !dbg !9683
  call void @llvm.dbg.value(metadata i32 %27, metadata !9660, metadata !DIExpression()), !dbg !9662
  ret i32 %27, !dbg !9684
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !9685 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9687, metadata !DIExpression()), !dbg !9702
  call void @llvm.dbg.value(metadata i32 %1, metadata !9688, metadata !DIExpression()), !dbg !9702
  call void @llvm.dbg.value(metadata i32 %2, metadata !9689, metadata !DIExpression()), !dbg !9702
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !9703
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #23, !dbg !9703
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !9690, metadata !DIExpression()), !dbg !9704
  %7 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !9705
  store i32 2, i32* %7, align 4, !dbg !9706
  %8 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !9707
  store i32 2, i32* %8, align 4, !dbg !9708
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !9709
  store i32 0, i32* %9, align 4, !dbg !9710
  %10 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !9711
  store i32 256, i32* %10, align 4, !dbg !9712
  %11 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !9713
  store i32 0, i32* %11, align 4, !dbg !9714
  %12 = bitcast i32* %5 to i8*, !dbg !9715
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12), !dbg !9715
  call void @llvm.dbg.declare(metadata i32* %5, metadata !9700, metadata !DIExpression()), !dbg !9715
  %13 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !9715
  %14 = or i32 %13, 1, !dbg !9715
  store volatile i32 %14, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !9715
  %15 = load volatile i32, i32* inttoptr (i32 1073887260 to i32*), align 4, !dbg !9715
  %16 = and i32 %15, 1, !dbg !9715
  store volatile i32 %16, i32* %5, align 4, !dbg !9715
  %17 = load volatile i32, i32* %5, align 4, !dbg !9715
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12), !dbg !9716
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #24, !dbg !9717
  %18 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9718
  %19 = and i32 %18, -1996488705, !dbg !9718
  %20 = or i32 %2, %1, !dbg !9718
  %21 = or i32 %20, %19, !dbg !9718
  store volatile i32 %21, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9718
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #23, !dbg !9719
  ret void, !dbg !9719
}

; Function Attrs: optsize
declare !dbg !9720 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !9724 {
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9725
  ret void, !dbg !9726
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !9727 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !9728
  ret void, !dbg !9729
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #4 !dbg !9730 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !9731
  ret i32 %1, !dbg !9732
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !9733 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #25, !dbg !9734
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9735
  %3 = lshr i32 %2, 8, !dbg !9736
  %4 = and i32 %3, 7, !dbg !9736
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !9737
  %6 = load i8, i8* %5, align 1, !dbg !9737
  %7 = zext i8 %6 to i32, !dbg !9737
  %8 = lshr i32 %1, %7, !dbg !9738
  ret i32 %8, !dbg !9739
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !9740 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #25, !dbg !9741
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9742
  %3 = lshr i32 %2, 11, !dbg !9743
  %4 = and i32 %3, 7, !dbg !9743
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !9744
  %6 = load i8, i8* %5, align 1, !dbg !9744
  %7 = zext i8 %6 to i32, !dbg !9744
  %8 = lshr i32 %1, %7, !dbg !9745
  ret i32 %8, !dbg !9746
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef writeonly %0) local_unnamed_addr #15 !dbg !9747 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !9751, metadata !DIExpression()), !dbg !9752
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !9753
  store i32 31, i32* %2, align 4, !dbg !9754
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9755
  %4 = and i32 %3, 262144, !dbg !9757
  %5 = icmp eq i32 %4, 0, !dbg !9758
  br i1 %5, label %8, label %6, !dbg !9759

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9760
  store i32 5, i32* %7, align 4, !dbg !9762
  br label %15, !dbg !9763

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9764
  %10 = and i32 %9, 65536, !dbg !9766
  %11 = icmp eq i32 %10, 0, !dbg !9767
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !9768
  br i1 %11, label %14, label %13, !dbg !9769

13:                                               ; preds = %8
  store i32 1, i32* %12, align 4, !dbg !9770
  br label %15, !dbg !9772

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !9773
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9775
  %17 = and i32 %16, 1, !dbg !9777
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !9778
  store i32 %17, i32* %18, align 4, !dbg !9780
  %19 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9781
  %20 = lshr i32 %19, 8, !dbg !9782
  %21 = and i32 %20, 31, !dbg !9782
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !9783
  store i32 %21, i32* %22, align 4, !dbg !9784
  %23 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9785
  %24 = lshr i32 %23, 8, !dbg !9787
  %25 = and i32 %24, 1, !dbg !9787
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, !dbg !9788
  store i32 %25, i32* %26, align 4, !dbg !9790
  %27 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9791
  %28 = lshr i32 %27, 24, !dbg !9792
  %29 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 7, !dbg !9793
  store i32 %28, i32* %29, align 4, !dbg !9794
  %30 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !9795
  %31 = and i32 %30, 57344, !dbg !9796
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 8, !dbg !9797
  store i32 %31, i32* %32, align 4, !dbg !9798
  %33 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9799
  %34 = and i32 %33, 1024, !dbg !9801
  %35 = icmp eq i32 %34, 0, !dbg !9802
  br i1 %35, label %38, label %36, !dbg !9803

36:                                               ; preds = %15
  %37 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !9804
  store i32 5, i32* %37, align 4, !dbg !9806
  br label %45, !dbg !9807

38:                                               ; preds = %15
  %39 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9808
  %40 = and i32 %39, 256, !dbg !9810
  %41 = icmp eq i32 %40, 0, !dbg !9811
  %42 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !9812
  br i1 %41, label %44, label %43, !dbg !9813

43:                                               ; preds = %38
  store i32 1, i32* %42, align 4, !dbg !9814
  br label %45, !dbg !9816

44:                                               ; preds = %38
  store i32 0, i32* %42, align 4, !dbg !9817
  br label %45

45:                                               ; preds = %43, %44, %36
  %46 = load volatile i32, i32* inttoptr (i32 1073887284 to i32*), align 4, !dbg !9819
  %47 = and i32 %46, 1, !dbg !9821
  %48 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !9822
  store i32 %47, i32* %48, align 4, !dbg !9824
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !9825
  %50 = and i32 %49, 16777216, !dbg !9827
  %51 = icmp eq i32 %50, 0, !dbg !9828
  %52 = select i1 %51, i32 1, i32 2, !dbg !9829
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 0, !dbg !9830
  store i32 %52, i32* %53, align 4, !dbg !9832
  %54 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9833
  %55 = and i32 %54, 65536, !dbg !9834
  %56 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 1, !dbg !9835
  store i32 %55, i32* %56, align 4, !dbg !9836
  %57 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9837
  %58 = and i32 %57, 3932160, !dbg !9838
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 2, !dbg !9839
  store i32 %58, i32* %59, align 4, !dbg !9840
  %60 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9841
  %61 = and i32 %60, 12582912, !dbg !9842
  %62 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 9, i32 3, !dbg !9843
  store i32 %61, i32* %62, align 4, !dbg !9844
  ret void, !dbg !9845
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !9846 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !9850, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.value(metadata i32* %1, metadata !9851, metadata !DIExpression()), !dbg !9852
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !9853
  store i32 15, i32* %3, align 4, !dbg !9854
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9855
  %5 = and i32 %4, 3, !dbg !9856
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !9857
  store i32 %5, i32* %6, align 4, !dbg !9858
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9859
  %8 = and i32 %7, 240, !dbg !9860
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !9861
  store i32 %8, i32* %9, align 4, !dbg !9862
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9863
  %11 = and i32 %10, 1792, !dbg !9864
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !9865
  store i32 %11, i32* %12, align 4, !dbg !9866
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !9867
  %14 = lshr i32 %13, 3, !dbg !9868
  %15 = and i32 %14, 1792, !dbg !9868
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !9869
  store i32 %15, i32* %16, align 4, !dbg !9870
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9871
  %18 = and i32 %17, 1, !dbg !9871
  store i32 %18, i32* %1, align 4, !dbg !9872
  ret void, !dbg !9873
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !9874 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !9875
  %2 = and i32 %1, 128, !dbg !9875
  %3 = icmp eq i32 %2, 0, !dbg !9875
  br i1 %3, label %5, label %4, !dbg !9877

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #25, !dbg !9878
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !9880
  br label %5, !dbg !9881

5:                                                ; preds = %4, %0
  ret void, !dbg !9882
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !9883 {
  ret void, !dbg !9884
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !9885 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9888, metadata !DIExpression()), !dbg !9889
  tail call fastcc void @LL_InitTick(i32 noundef %0) #25, !dbg !9890
  ret void, !dbg !9891
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !9892 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9895, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 1000, metadata !9896, metadata !DIExpression()), !dbg !9897
  %2 = udiv i32 %0, 1000, !dbg !9898
  %3 = add nsw i32 %2, -1, !dbg !9899
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !9900
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !9901
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9902
  ret void, !dbg !9903
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #13 !dbg !9904 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !9906, metadata !DIExpression()), !dbg !9909
  %3 = bitcast i32* %2 to i8*, !dbg !9910
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9910
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9907, metadata !DIExpression()), !dbg !9911
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9912
  store volatile i32 %4, i32* %2, align 4, !dbg !9911
  call void @llvm.dbg.value(metadata i32 %0, metadata !9908, metadata !DIExpression()), !dbg !9909
  %5 = load volatile i32, i32* %2, align 4, !dbg !9913
  %6 = icmp eq i32 %0, -1, !dbg !9914
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !9908, metadata !DIExpression()), !dbg !9909
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !9909
  call void @llvm.dbg.value(metadata i32 %8, metadata !9908, metadata !DIExpression()), !dbg !9909
  br label %9, !dbg !9916

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !9908, metadata !DIExpression()), !dbg !9909
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !9917
  call void @llvm.dbg.value(metadata i32 undef, metadata !9908, metadata !DIExpression()), !dbg !9909
  %12 = shl i32 %11, 15, !dbg !9909
  %13 = ashr i32 %12, 31, !dbg !9909
  %14 = add i32 %13, %10, !dbg !9909
  call void @llvm.dbg.value(metadata i32 %14, metadata !9908, metadata !DIExpression()), !dbg !9909
  %15 = icmp eq i32 %14, 0, !dbg !9920
  br i1 %15, label %16, label %9, !dbg !9916

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9921
  ret void, !dbg !9921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #3 !dbg !9922 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9924, metadata !DIExpression()), !dbg !9925
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !9926
  ret void, !dbg !9927
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !9928 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9933, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata i32 0, metadata !9934, metadata !DIExpression()), !dbg !9936
  call void @llvm.dbg.value(metadata i32 0, metadata !9935, metadata !DIExpression()), !dbg !9936
  %2 = add i32 %0, -32000001, !dbg !9937
  %3 = icmp ult i32 %2, -32000000, !dbg !9937
  br i1 %3, label %22, label %4, !dbg !9937

4:                                                ; preds = %1
  %5 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !9939
  %6 = icmp eq i32 %5, 2048, !dbg !9942
  br i1 %6, label %7, label %9, !dbg !9943

7:                                                ; preds = %4
  %8 = icmp ugt i32 %0, 16000000, !dbg !9944
  call void @llvm.dbg.value(metadata i32 undef, metadata !9935, metadata !DIExpression()), !dbg !9936
  br i1 %8, label %16, label %17, !dbg !9947

9:                                                ; preds = %4
  %10 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #25, !dbg !9948
  %11 = icmp eq i32 %10, 4096, !dbg !9950
  br i1 %11, label %12, label %14, !dbg !9951

12:                                               ; preds = %9
  %13 = icmp ugt i32 %0, 8000000, !dbg !9952
  call void @llvm.dbg.value(metadata i32 undef, metadata !9935, metadata !DIExpression()), !dbg !9936
  br i1 %13, label %16, label %17, !dbg !9947

14:                                               ; preds = %9
  %15 = icmp ugt i32 %0, 2000000, !dbg !9955
  call void @llvm.dbg.value(metadata i32 undef, metadata !9935, metadata !DIExpression()), !dbg !9936
  br i1 %15, label %16, label %17, !dbg !9947

16:                                               ; preds = %12, %7, %14
  tail call fastcc void @LL_FLASH_Enable64bitAccess() #25, !dbg !9958
  br label %17, !dbg !9961

17:                                               ; preds = %12, %7, %16, %14
  %18 = phi i32 [ 0, %7 ], [ 1, %16 ], [ 0, %14 ], [ 0, %12 ]
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %18) #25, !dbg !9962
  %19 = tail call fastcc i32 @LL_FLASH_GetLatency() #25, !dbg !9963
  %20 = icmp ne i32 %19, %18, !dbg !9965
  %21 = zext i1 %20 to i32, !dbg !9966
  br label %22, !dbg !9966

22:                                               ; preds = %17, %1
  %23 = phi i32 [ 1, %1 ], [ %21, %17 ], !dbg !9936
  call void @llvm.dbg.value(metadata i32 %23, metadata !9934, metadata !DIExpression()), !dbg !9936
  ret i32 %23, !dbg !9967
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !9968 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !9969
  %2 = and i32 %1, 6144, !dbg !9969
  ret i32 %2, !dbg !9970
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_Enable64bitAccess() unnamed_addr #14 !dbg !9971 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9972
  %2 = or i32 %1, 4, !dbg !9972
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9972
  ret void, !dbg !9973
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !9974 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9976, metadata !DIExpression()), !dbg !9977
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9978
  %3 = and i32 %2, -2, !dbg !9978
  %4 = or i32 %3, %0, !dbg !9978
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9978
  ret void, !dbg !9979
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !9980 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !9981
  %2 = and i32 %1, 1, !dbg !9981
  ret i32 %2, !dbg !9982
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_arch* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !9983 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10000, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10001, metadata !DIExpression()), !dbg !10004
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !10005
  %4 = icmp eq i32 %3, 0, !dbg !10007
  br i1 %4, label %5, label %19, !dbg !10008

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_arch* noundef %0) #25, !dbg !10009
  call void @llvm.dbg.value(metadata i32 %6, metadata !10003, metadata !DIExpression()), !dbg !10004
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.78() #25, !dbg !10011
  %8 = icmp eq i32 %7, 1, !dbg !10013
  br i1 %8, label %13, label %9, !dbg !10014

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.79() #25, !dbg !10015
  br label %10, !dbg !10017

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.78() #25, !dbg !10018
  %12 = icmp eq i32 %11, 1, !dbg !10019
  br i1 %12, label %13, label %10, !dbg !10017, !llvm.loop !10020

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 0, !dbg !10022
  %15 = load i32, i32* %14, align 4, !dbg !10022
  %16 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 0, i32 1, !dbg !10023
  %17 = load i32, i32* %16, align 4, !dbg !10023
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.80(i32 noundef 0, i32 noundef %15, i32 noundef %17) #25, !dbg !10024
  %18 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #25, !dbg !10025
  call void @llvm.dbg.value(metadata i32 %18, metadata !10002, metadata !DIExpression()), !dbg !10004
  br label %19, !dbg !10026

19:                                               ; preds = %2, %13
  %20 = phi i32 [ %18, %13 ], [ 1, %2 ], !dbg !10027
  call void @llvm.dbg.value(metadata i32 %20, metadata !10002, metadata !DIExpression()), !dbg !10004
  ret i32 %20, !dbg !10028
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !10029 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10033, metadata !DIExpression()), !dbg !10034
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.82() #25, !dbg !10035
  %2 = icmp ne i32 %1, 0, !dbg !10037
  %3 = zext i1 %2 to i32, !dbg !10038
  call void @llvm.dbg.value(metadata i32 %3, metadata !10033, metadata !DIExpression()), !dbg !10034
  ret i32 %3, !dbg !10039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* nocapture noundef readonly %1) unnamed_addr #4 !dbg !10040 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10044, metadata !DIExpression()), !dbg !10047
  call void @llvm.dbg.value(metadata %struct._thread_arch* %1, metadata !10045, metadata !DIExpression()), !dbg !10047
  %3 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 0, !dbg !10048
  %4 = load i32, i32* %3, align 4, !dbg !10048
  %5 = lshr i32 %4, 18, !dbg !10049
  %6 = getelementptr inbounds [9 x i8], [9 x i8]* @PLLMulTable, i32 0, i32 %5, !dbg !10050
  %7 = load i8, i8* %6, align 1, !dbg !10050
  %8 = zext i8 %7 to i32, !dbg !10051
  %9 = mul i32 %8, %0, !dbg !10052
  call void @llvm.dbg.value(metadata i32 %9, metadata !10046, metadata !DIExpression()), !dbg !10047
  %10 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %1, i32 0, i32 1, !dbg !10053
  %11 = load i32, i32* %10, align 4, !dbg !10053
  %12 = lshr i32 %11, 22, !dbg !10054
  %13 = add nuw nsw i32 %12, 1, !dbg !10055
  %14 = udiv i32 %9, %13, !dbg !10056
  call void @llvm.dbg.value(metadata i32 %14, metadata !10046, metadata !DIExpression()), !dbg !10047
  ret i32 %14, !dbg !10057
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.78() unnamed_addr #15 !dbg !10058 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10059
  %2 = lshr i32 %1, 1, !dbg !10060
  %3 = and i32 %2, 1, !dbg !10060
  ret i32 %3, !dbg !10061
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.79() unnamed_addr #14 !dbg !10062 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10063
  %2 = or i32 %1, 1, !dbg !10063
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10063
  ret void, !dbg !10064
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.80(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10065 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10067, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.value(metadata i32 %1, metadata !10068, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.value(metadata i32 %2, metadata !10069, metadata !DIExpression()), !dbg !10070
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10071
  %5 = and i32 %4, -16580609, !dbg !10071
  %6 = or i32 %1, %0, !dbg !10071
  %7 = or i32 %6, %2, !dbg !10071
  %8 = or i32 %7, %5, !dbg !10071
  store volatile i32 %8, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10071
  ret void, !dbg !10072
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #14 !dbg !10073 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10077, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !10078, metadata !DIExpression()), !dbg !10081
  call void @llvm.dbg.value(metadata i32 0, metadata !10079, metadata !DIExpression()), !dbg !10081
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !10082
  %4 = load i32, i32* %3, align 4, !dbg !10082
  %5 = lshr i32 %4, 4, !dbg !10082
  %6 = and i32 %5, 15, !dbg !10082
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !10082
  %8 = load i8, i8* %7, align 1, !dbg !10082
  %9 = zext i8 %8 to i32, !dbg !10082
  %10 = lshr i32 %0, %9, !dbg !10082
  call void @llvm.dbg.value(metadata i32 %10, metadata !10080, metadata !DIExpression()), !dbg !10081
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !10083
  %12 = icmp ult i32 %11, %10, !dbg !10085
  br i1 %12, label %13, label %16, !dbg !10086

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !10087
  call void @llvm.dbg.value(metadata i32 %14, metadata !10079, metadata !DIExpression()), !dbg !10081
  %15 = icmp eq i32 %14, 0, !dbg !10089
  br i1 %15, label %16, label %30, !dbg !10091

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.81() #25, !dbg !10092
  br label %17, !dbg !10094

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.82() #25, !dbg !10095
  %19 = icmp eq i32 %18, 1, !dbg !10096
  br i1 %19, label %20, label %17, !dbg !10094, !llvm.loop !10097

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !10099
  tail call fastcc void @LL_RCC_SetAHBPrescaler.83(i32 noundef %21) #25, !dbg !10100
  tail call fastcc void @LL_RCC_SetSysClkSource.84() #25, !dbg !10101
  br label %22, !dbg !10102

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.85() #25, !dbg !10103
  %24 = icmp eq i32 %23, 12, !dbg !10104
  br i1 %24, label %25, label %22, !dbg !10102, !llvm.loop !10105

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !10107
  %27 = load i32, i32* %26, align 4, !dbg !10107
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.86(i32 noundef %27) #25, !dbg !10108
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !10109
  %29 = load i32, i32* %28, align 4, !dbg !10109
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.87(i32 noundef %29) #25, !dbg !10110
  br label %30, !dbg !10111

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !10112
  %33 = icmp ugt i32 %32, %10, !dbg !10114
  br i1 %33, label %34, label %36, !dbg !10115

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #25, !dbg !10116
  call void @llvm.dbg.value(metadata i32 %35, metadata !10079, metadata !DIExpression()), !dbg !10081
  br label %36, !dbg !10118

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !10081
  call void @llvm.dbg.value(metadata i32 %37, metadata !10079, metadata !DIExpression()), !dbg !10081
  %38 = icmp eq i32 %37, 0, !dbg !10119
  br i1 %38, label %39, label %40, !dbg !10121

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #25, !dbg !10122
  br label %40, !dbg !10124

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !10125
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.81() unnamed_addr #14 !dbg !10126 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10127
  %2 = or i32 %1, 16777216, !dbg !10127
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10127
  ret void, !dbg !10128
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.82() unnamed_addr #15 !dbg !10129 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10130
  %2 = lshr i32 %1, 25, !dbg !10131
  %3 = and i32 %2, 1, !dbg !10131
  ret i32 %3, !dbg !10132
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.83(i32 noundef %0) unnamed_addr #14 !dbg !10133 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10135, metadata !DIExpression()), !dbg !10136
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10137
  %3 = and i32 %2, -241, !dbg !10137
  %4 = or i32 %3, %0, !dbg !10137
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10137
  ret void, !dbg !10138
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.84() unnamed_addr #14 !dbg !10139 {
  call void @llvm.dbg.value(metadata i32 3, metadata !10141, metadata !DIExpression()), !dbg !10142
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10143
  %2 = or i32 %1, 3, !dbg !10143
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10143
  ret void, !dbg !10144
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.85() unnamed_addr #15 !dbg !10145 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10146
  %2 = and i32 %1, 12, !dbg !10146
  ret i32 %2, !dbg !10147
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.86(i32 noundef %0) unnamed_addr #14 !dbg !10148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10150, metadata !DIExpression()), !dbg !10151
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10152
  %3 = and i32 %2, -1793, !dbg !10152
  %4 = or i32 %3, %0, !dbg !10152
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10152
  ret void, !dbg !10153
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.87(i32 noundef %0) unnamed_addr #14 !dbg !10154 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10156, metadata !DIExpression()), !dbg !10157
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10158
  %3 = and i32 %2, -14337, !dbg !10158
  %4 = or i32 %3, %0, !dbg !10158
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10158
  ret void, !dbg !10159
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_arch* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !10160 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10164, metadata !DIExpression()), !dbg !10170
  call void @llvm.dbg.value(metadata i32 %1, metadata !10165, metadata !DIExpression()), !dbg !10170
  call void @llvm.dbg.value(metadata %struct._thread_arch* %2, metadata !10166, metadata !DIExpression()), !dbg !10170
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !10167, metadata !DIExpression()), !dbg !10170
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #25, !dbg !10171
  %6 = icmp eq i32 %5, 0, !dbg !10173
  br i1 %6, label %7, label %25, !dbg !10174

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_arch* noundef %2) #25, !dbg !10175
  call void @llvm.dbg.value(metadata i32 %8, metadata !10169, metadata !DIExpression()), !dbg !10170
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #25, !dbg !10177
  %10 = icmp eq i32 %9, 1, !dbg !10179
  br i1 %10, label %19, label %11, !dbg !10180

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !10181
  br i1 %12, label %13, label %14, !dbg !10184

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #25, !dbg !10185
  br label %15, !dbg !10187

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #25, !dbg !10188
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable() #25, !dbg !10190
  br label %16, !dbg !10191

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #25, !dbg !10192
  %18 = icmp eq i32 %17, 1, !dbg !10193
  br i1 %18, label %19, label %16, !dbg !10191, !llvm.loop !10194

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 0, !dbg !10196
  %21 = load i32, i32* %20, align 4, !dbg !10196
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %2, i32 0, i32 1, !dbg !10197
  %23 = load i32, i32* %22, align 4, !dbg !10197
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.80(i32 noundef 65536, i32 noundef %21, i32 noundef %23) #25, !dbg !10198
  %24 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #25, !dbg !10199
  call void @llvm.dbg.value(metadata i32 %24, metadata !10168, metadata !DIExpression()), !dbg !10170
  br label %25, !dbg !10200

25:                                               ; preds = %4, %19
  %26 = phi i32 [ %24, %19 ], [ 1, %4 ], !dbg !10201
  call void @llvm.dbg.value(metadata i32 %26, metadata !10168, metadata !DIExpression()), !dbg !10170
  ret i32 %26, !dbg !10202
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !10203 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10204
  %2 = lshr i32 %1, 17, !dbg !10205
  %3 = and i32 %2, 1, !dbg !10205
  ret i32 %3, !dbg !10206
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !10207 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10208
  %2 = or i32 %1, 262144, !dbg !10208
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10208
  ret void, !dbg !10209
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !10210 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10211
  %2 = and i32 %1, -262145, !dbg !10211
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10211
  ret void, !dbg !10212
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !10213 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10214
  %2 = or i32 %1, 65536, !dbg !10214
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10214
  ret void, !dbg !10215
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !10216 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10219, metadata !DIExpression()), !dbg !10235
  call void @llvm.dbg.value(metadata i32 undef, metadata !10219, metadata !DIExpression()), !dbg !10235
  call void @llvm.dbg.value(metadata i32 undef, metadata !10219, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !10235
  ret void, !dbg !10236
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !10237 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10241, metadata !DIExpression()), !dbg !10243
  %2 = icmp eq i8* %0, null, !dbg !10244
  br i1 %2, label %29, label %3, !dbg !10246

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !10247
  %5 = icmp eq i8 %4, 0, !dbg !10248
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !10249
  br i1 %6, label %29, label %8, !dbg !10249

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !10242, metadata !DIExpression()), !dbg !10243
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !10250

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !10242, metadata !DIExpression()), !dbg !10243
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #25, !dbg !10252
  br i1 %10, label %11, label %15, !dbg !10257

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !10258
  %13 = load i8*, i8** %12, align 4, !dbg !10258
  %14 = icmp eq i8* %13, %0, !dbg !10259
  br i1 %14, label %29, label %15, !dbg !10260

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !10261
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !10242, metadata !DIExpression()), !dbg !10243
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10262
  br i1 %17, label %7, label %8, !dbg !10263, !llvm.loop !10264

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !10242, metadata !DIExpression()), !dbg !10243
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #25, !dbg !10266
  br i1 %20, label %21, label %26, !dbg !10270

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !10271
  %23 = load i8*, i8** %22, align 4, !dbg !10271
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #24, !dbg !10272
  %25 = icmp eq i32 %24, 0, !dbg !10273
  br i1 %25, label %29, label %26, !dbg !10274

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !10275
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !10242, metadata !DIExpression()), !dbg !10243
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !10276
  br i1 %28, label %29, label %18, !dbg !10250, !llvm.loop !10277

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !10243
  ret %struct.device* %30, !dbg !10279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #4 !dbg !10280 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10284, metadata !DIExpression()), !dbg !10285
  %2 = icmp eq %struct.device* %0, null, !dbg !10286
  br i1 %2, label %14, label %3, !dbg !10288

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !10289
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !10289
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !10290
  %7 = load i8, i8* %6, align 1, !dbg !10290
  %8 = and i8 %7, 1, !dbg !10290
  %9 = icmp eq i8 %8, 0, !dbg !10290
  br i1 %9, label %14, label %10, !dbg !10291

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !10292
  %12 = load i8, i8* %11, align 1, !dbg !10292
  %13 = icmp eq i8 %12, 0, !dbg !10293
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !10285
  ret i1 %15, !dbg !10294
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #3 !dbg !10295 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !10300, metadata !DIExpression()), !dbg !10301
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !10302
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !10303
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10304 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10312, metadata !DIExpression()), !dbg !10317
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10313, metadata !DIExpression()), !dbg !10317
  call void @llvm.dbg.value(metadata i8* %2, metadata !10314, metadata !DIExpression()), !dbg !10317
  %5 = bitcast i32* %4 to i8*, !dbg !10318
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10318
  call void @llvm.dbg.value(metadata i32 0, metadata !10315, metadata !DIExpression()), !dbg !10317
  store i32 0, i32* %4, align 4, !dbg !10319
  call void @llvm.dbg.value(metadata i32* %4, metadata !10315, metadata !DIExpression(DW_OP_deref)), !dbg !10317
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !10320
  call void @llvm.dbg.value(metadata i16* %6, metadata !10316, metadata !DIExpression()), !dbg !10317
  %7 = load i32, i32* %4, align 4, !dbg !10321
  call void @llvm.dbg.value(metadata i32 %7, metadata !10315, metadata !DIExpression()), !dbg !10317
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !10322
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10323
  ret i32 %8, !dbg !10324
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !10325 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10329, metadata !DIExpression()), !dbg !10335
  call void @llvm.dbg.value(metadata i32* %1, metadata !10330, metadata !DIExpression()), !dbg !10335
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10336
  %4 = load i16*, i16** %3, align 4, !dbg !10336
  call void @llvm.dbg.value(metadata i16* %4, metadata !10331, metadata !DIExpression()), !dbg !10335
  %5 = icmp eq i16* %4, null, !dbg !10337
  br i1 %5, label %14, label %6, !dbg !10338

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !10339
  call void @llvm.dbg.value(metadata i32 %7, metadata !10332, metadata !DIExpression()), !dbg !10339
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !10340
  %9 = load i16, i16* %8, align 2, !dbg !10340
  %10 = add i16 %9, -32767, !dbg !10341
  %11 = icmp ult i16 %10, 2, !dbg !10341
  %12 = add i32 %7, 1, !dbg !10342
  call void @llvm.dbg.value(metadata i32 %12, metadata !10332, metadata !DIExpression()), !dbg !10339
  br i1 %11, label %13, label %6, !dbg !10341, !llvm.loop !10344

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !10347
  br label %14, !dbg !10348

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !10349
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !10350 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !10354, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata i32 %1, metadata !10355, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !10356, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata i8* %3, metadata !10357, metadata !DIExpression()), !dbg !10365
  call void @llvm.dbg.value(metadata i32 0, metadata !10358, metadata !DIExpression()), !dbg !10366
  %5 = icmp eq i32 %1, 0, !dbg !10367
  br i1 %5, label %16, label %8, !dbg !10368

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !10358, metadata !DIExpression()), !dbg !10366
  %7 = icmp eq i32 %15, %1, !dbg !10367
  br i1 %7, label %16, label %8, !dbg !10368, !llvm.loop !10369

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10358, metadata !DIExpression()), !dbg !10366
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !10371
  %11 = load i16, i16* %10, align 2, !dbg !10371
  call void @llvm.dbg.value(metadata i16 %11, metadata !10360, metadata !DIExpression()), !dbg !10372
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #25, !dbg !10373
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !10363, metadata !DIExpression()), !dbg !10372
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #24, !dbg !10374
  call void @llvm.dbg.value(metadata i32 %13, metadata !10364, metadata !DIExpression()), !dbg !10372
  %14 = icmp slt i32 %13, 0, !dbg !10375
  %15 = add nuw i32 %9, 1, !dbg !10377
  call void @llvm.dbg.value(metadata i32 %15, metadata !10358, metadata !DIExpression()), !dbg !10366
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !10378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #12 !dbg !10379 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10383, metadata !DIExpression()), !dbg !10386
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !10384, metadata !DIExpression()), !dbg !10386
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !10385, metadata !DIExpression()), !dbg !10386
  %2 = sext i16 %0 to i32, !dbg !10387
  %3 = icmp slt i16 %0, 1, !dbg !10389
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !10390
  %6 = add nsw i32 %2, -1, !dbg !10390
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !10390
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !10390
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10384, metadata !DIExpression()), !dbg !10386
  ret %struct.device* %8, !dbg !10391
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !10392 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10394, metadata !DIExpression()), !dbg !10399
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !10395, metadata !DIExpression()), !dbg !10399
  call void @llvm.dbg.value(metadata i8* %2, metadata !10396, metadata !DIExpression()), !dbg !10399
  %5 = bitcast i32* %4 to i8*, !dbg !10400
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10400
  call void @llvm.dbg.value(metadata i32 0, metadata !10397, metadata !DIExpression()), !dbg !10399
  store i32 0, i32* %4, align 4, !dbg !10401
  call void @llvm.dbg.value(metadata i32* %4, metadata !10397, metadata !DIExpression(DW_OP_deref)), !dbg !10399
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #25, !dbg !10402
  call void @llvm.dbg.value(metadata i16* %6, metadata !10398, metadata !DIExpression()), !dbg !10399
  %7 = load i32, i32* %4, align 4, !dbg !10403
  call void @llvm.dbg.value(metadata i32 %7, metadata !10397, metadata !DIExpression()), !dbg !10399
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #25, !dbg !10404
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !10405
  ret i32 %8, !dbg !10406
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #11 !dbg !10407 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10409, metadata !DIExpression()), !dbg !10414
  call void @llvm.dbg.value(metadata i32* %1, metadata !10410, metadata !DIExpression()), !dbg !10414
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10415
  %4 = load i16*, i16** %3, align 4, !dbg !10415
  call void @llvm.dbg.value(metadata i16* %4, metadata !10411, metadata !DIExpression()), !dbg !10414
  call void @llvm.dbg.value(metadata i32 0, metadata !10412, metadata !DIExpression()), !dbg !10414
  call void @llvm.dbg.value(metadata i32 0, metadata !10413, metadata !DIExpression()), !dbg !10414
  %5 = icmp eq i16* %4, null, !dbg !10416
  br i1 %5, label %22, label %6, !dbg !10418

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10412, metadata !DIExpression()), !dbg !10414
  call void @llvm.dbg.value(metadata i16* %8, metadata !10411, metadata !DIExpression()), !dbg !10414
  %9 = load i16, i16* %8, align 2, !dbg !10419
  %10 = icmp eq i16 %9, -32768, !dbg !10423
  call void @llvm.dbg.value(metadata i32 undef, metadata !10412, metadata !DIExpression()), !dbg !10414
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !10424
  call void @llvm.dbg.value(metadata i16* %11, metadata !10411, metadata !DIExpression()), !dbg !10414
  %12 = zext i1 %10 to i32, !dbg !10425
  %13 = add i32 %7, %12, !dbg !10425
  call void @llvm.dbg.value(metadata i32 %13, metadata !10412, metadata !DIExpression()), !dbg !10414
  %14 = icmp eq i32 %13, 2, !dbg !10426
  br i1 %14, label %15, label %6, !dbg !10427

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !10414
  call void @llvm.dbg.value(metadata i32 %16, metadata !10413, metadata !DIExpression()), !dbg !10414
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !10428
  %18 = load i16, i16* %17, align 2, !dbg !10428
  %19 = icmp eq i16 %18, 32767, !dbg !10429
  %20 = add i32 %16, 1, !dbg !10430
  call void @llvm.dbg.value(metadata i32 %20, metadata !10413, metadata !DIExpression()), !dbg !10414
  br i1 %19, label %21, label %15, !dbg !10432, !llvm.loop !10433

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !10435
  br label %22, !dbg !10436

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !10437
  call void @llvm.dbg.value(metadata i16* %23, metadata !10411, metadata !DIExpression()), !dbg !10414
  ret i16* %23, !dbg !10438
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #4 !dbg !10439 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10442
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !10443
  ret i32* %2, !dbg !10444
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #12 !dbg !10445 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !10593, metadata !DIExpression()), !dbg !10596
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !10594, metadata !DIExpression()), !dbg !10596
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10595, metadata !DIExpression()), !dbg !10596
  ret void, !dbg !10597
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !10598 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10602, metadata !DIExpression()), !dbg !10604
  call void @llvm.dbg.value(metadata i32 %1, metadata !10603, metadata !DIExpression()), !dbg !10604
  ret void, !dbg !10605
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !10606 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10610, metadata !DIExpression()), !dbg !10612
  call void @llvm.dbg.value(metadata i32 %1, metadata !10611, metadata !DIExpression()), !dbg !10612
  ret void, !dbg !10613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !10614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10618, metadata !DIExpression()), !dbg !10620
  call void @llvm.dbg.value(metadata i8* %1, metadata !10619, metadata !DIExpression()), !dbg !10620
  ret i32 -134, !dbg !10621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !10622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10626, metadata !DIExpression()), !dbg !10628
  call void @llvm.dbg.value(metadata i8* %1, metadata !10627, metadata !DIExpression()), !dbg !10628
  ret i32 -134, !dbg !10629
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !10630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10633, metadata !DIExpression()), !dbg !10634
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10635, !srcloc !10641
  call void @llvm.dbg.value(metadata i32 undef, metadata !10638, metadata !DIExpression()) #23, !dbg !10642
  call void @llvm.dbg.value(metadata i32 undef, metadata !10639, metadata !DIExpression()) #23, !dbg !10642
  br label %3, !dbg !10643

3:                                                ; preds = %3, %1
  br label %3, !dbg !10644, !llvm.loop !10647
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10654, metadata !DIExpression()), !dbg !10656
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10655, metadata !DIExpression()), !dbg !10656
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !10657
  unreachable, !dbg !10657
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !10658 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10660, metadata !DIExpression()), !dbg !10661
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !10662
  unreachable, !dbg !10662
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !10663 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10665, metadata !DIExpression()), !dbg !10669
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !10666, metadata !DIExpression()), !dbg !10669
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10670, !srcloc !10641
  call void @llvm.dbg.value(metadata i32 undef, metadata !10638, metadata !DIExpression()) #23, !dbg !10672
  call void @llvm.dbg.value(metadata i32 undef, metadata !10639, metadata !DIExpression()) #23, !dbg !10672
  call void @llvm.dbg.value(metadata i32 undef, metadata !10667, metadata !DIExpression()), !dbg !10669
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !10668, metadata !DIExpression()), !dbg !10669
  %4 = icmp eq %struct.__esf* %1, null, !dbg !10673
  br i1 %4, label %6, label %5, !dbg !10675

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #25, !dbg !10676
  br label %7, !dbg !10677

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #25, !dbg !10676
  br label %7, !dbg !10680

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !10670
  call void @llvm.dbg.value(metadata i32 %8, metadata !10638, metadata !DIExpression()) #23, !dbg !10672
  call void @llvm.dbg.value(metadata i32 %8, metadata !10667, metadata !DIExpression()), !dbg !10669
  %9 = tail call fastcc %struct.k_thread* @k_current_get.94() #26, !dbg !10682
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !10668, metadata !DIExpression()), !dbg !10669
  call void @llvm.dbg.value(metadata i32 undef, metadata !10683, metadata !DIExpression()) #23, !dbg !10686
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !10688, !srcloc !10689
  tail call fastcc void @k_thread_abort.95(%struct.k_thread* noundef %9) #25, !dbg !10690
  ret void, !dbg !10693
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.94() unnamed_addr #9 !dbg !10694 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.96() #26, !dbg !10698
  ret %struct.k_thread* %1, !dbg !10699
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.95(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !10700 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10704, metadata !DIExpression()), !dbg !10705
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10706, !srcloc !10708
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #24, !dbg !10709
  ret void, !dbg !10710
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.96() unnamed_addr #9 !dbg !10711 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10712, !srcloc !10714
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #24, !dbg !10715
  ret %struct.k_thread* %1, !dbg !10716
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10717 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10721, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.value(metadata i32 %1, metadata !10722, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.value(metadata i32 %2, metadata !10723, metadata !DIExpression()), !dbg !10724
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #24, !dbg !10725
  ret void, !dbg !10726
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10727 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10731, metadata !DIExpression()), !dbg !10734
  call void @llvm.dbg.value(metadata i8* %1, metadata !10732, metadata !DIExpression()), !dbg !10734
  call void @llvm.dbg.value(metadata i32 %2, metadata !10733, metadata !DIExpression()), !dbg !10734
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #24, !dbg !10735
  ret void, !dbg !10736
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !10737 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #25, !dbg !10738
  ret void, !dbg !10739
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !10740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10742, metadata !DIExpression()), !dbg !10743
  tail call fastcc void @init_idle_thread(i32 noundef %0) #25, !dbg !10744
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10745
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !10746
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !10747
  %4 = trunc i32 %0 to i8, !dbg !10748
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !10749
  store i8 %4, i8* %5, align 4, !dbg !10750
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !10751
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #25, !dbg !10752
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !10753
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !10754
  store i8* %8, i8** %9, align 4, !dbg !10755
  ret void, !dbg !10756
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !10757 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10759, metadata !DIExpression()), !dbg !10765
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !10766
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !10760, metadata !DIExpression()), !dbg !10765
  %3 = getelementptr inbounds [1 x [320 x %struct.z_thread_stack_element]], [1 x [320 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !10767
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !10761, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i8* null, metadata !10764, metadata !DIExpression()), !dbg !10765
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !10768
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !10769
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 256, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #24, !dbg !10770
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #25, !dbg !10771
  ret void, !dbg !10772
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !10773 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !10777, metadata !DIExpression()), !dbg !10778
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !10779
  ret i8* %2, !dbg !10780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !10781 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10786, metadata !DIExpression()), !dbg !10787
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10788
  %3 = load i8, i8* %2, align 1, !dbg !10789
  %4 = and i8 %3, -5, !dbg !10789
  store i8 %4, i8* %2, align 1, !dbg !10789
  ret void, !dbg !10790
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !10791 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #25, !dbg !10794
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #24, !dbg !10795
  %3 = ptrtoint i8* %2 to i32, !dbg !10804
  %4 = add i32 %3, 2048, !dbg !10805
  call void @llvm.dbg.value(metadata i32 %4, metadata !10799, metadata !DIExpression()) #23, !dbg !10806
  call void @llvm.dbg.value(metadata i32 %4, metadata !10807, metadata !DIExpression()) #23, !dbg !10810
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !10812, !srcloc !10813
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10814
  %6 = or i32 %5, 512, !dbg !10814
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !10814
  tail call fastcc void @__NVIC_SetPriority.103(i32 noundef -2, i32 noundef 255) #24, !dbg !10815
  tail call fastcc void @__NVIC_SetPriority.103(i32 noundef -5, i32 noundef 0) #24, !dbg !10818
  tail call fastcc void @__NVIC_SetPriority.103(i32 noundef -12, i32 noundef 0) #24, !dbg !10819
  tail call fastcc void @__NVIC_SetPriority.103(i32 noundef -11, i32 noundef 0) #24, !dbg !10820
  tail call fastcc void @__NVIC_SetPriority.103(i32 noundef -10, i32 noundef 0) #24, !dbg !10821
  tail call fastcc void @__NVIC_SetPriority.103(i32 noundef -4, i32 noundef 0) #24, !dbg !10822
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10823
  %8 = or i32 %7, 458752, !dbg !10823
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !10823
  tail call void @z_arm_fault_init() #24, !dbg !10824
  tail call void @z_arm_cpu_idle_init() #24, !dbg !10825
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !10826
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !10829
  %9 = tail call i32 @z_arm_mpu_init() #24, !dbg !10830
  tail call void @z_arm_configure_static_mpu_regions() #24, !dbg !10831
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !10832
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #23, !dbg !10832
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !10793, metadata !DIExpression()), !dbg !10833
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #25, !dbg !10834
  call void @z_device_state_init() #24, !dbg !10835
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #25, !dbg !10836
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #25, !dbg !10837
  %11 = call fastcc i8* @prepare_multithreading() #25, !dbg !10838
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !10839
  unreachable, !dbg !10839
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !1888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !1892, metadata !DIExpression()), !dbg !10840
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !10841
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !10841
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1893, metadata !DIExpression()), !dbg !10840
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !1893, metadata !DIExpression()), !dbg !10840
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !10842
  br i1 %7, label %8, label %35, !dbg !10843

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !1893, metadata !DIExpression()), !dbg !10840
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !10844
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !10844
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !1903, metadata !DIExpression()), !dbg !10845
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !10846
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !10846
  %14 = tail call i32 %13(%struct.device* noundef %11) #24, !dbg !10847
  call void @llvm.dbg.value(metadata i32 %14, metadata !1907, metadata !DIExpression()), !dbg !10845
  %15 = icmp eq %struct.device* %11, null, !dbg !10848
  br i1 %15, label %32, label %16, !dbg !10850

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !10851
  br i1 %17, label %26, label %18, !dbg !10854

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !10855
  call void @llvm.dbg.value(metadata i32 %19, metadata !1907, metadata !DIExpression()), !dbg !10845
  %20 = icmp ult i32 %19, 255, !dbg !10857
  %21 = select i1 %20, i32 %19, i32 255, !dbg !10857
  call void @llvm.dbg.value(metadata i32 %21, metadata !1907, metadata !DIExpression()), !dbg !10845
  %22 = trunc i32 %21 to i8, !dbg !10858
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10859
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !10859
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !10860
  store i8 %22, i8* %25, align 1, !dbg !10861
  br label %26, !dbg !10862

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !10863
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !10863
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !10864
  %30 = load i8, i8* %29, align 1, !dbg !10865
  %31 = or i8 %30, 1, !dbg !10865
  store i8 %31, i8* %29, align 1, !dbg !10865
  br label %32, !dbg !10866

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !10867
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !1893, metadata !DIExpression()), !dbg !10840
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !10842
  br i1 %34, label %8, label %35, !dbg !10843, !llvm.loop !10868

35:                                               ; preds = %32, %1
  ret void, !dbg !10870
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.103(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10871 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10873, metadata !DIExpression()), !dbg !10875
  call void @llvm.dbg.value(metadata i32 %1, metadata !10874, metadata !DIExpression()), !dbg !10875
  %3 = trunc i32 %1 to i8, !dbg !10876
  %4 = shl i8 %3, 4, !dbg !10876
  %5 = and i32 %0, 15, !dbg !10879
  %6 = add nsw i32 %5, -4, !dbg !10880
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !10881
  store volatile i8 %4, i8* %7, align 1, !dbg !10882
  ret void, !dbg !10883
}

; Function Attrs: optsize
declare !dbg !10884 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #3 !dbg !10885 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10888, metadata !DIExpression()), !dbg !10889
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !10890
  store i8 1, i8* %2, align 1, !dbg !10891
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !10892
  store i8 1, i8* %3, align 4, !dbg !10893
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !10894
  store i32 0, i32* %4, align 4, !dbg !10895
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !10896
  store i32 0, i32* %5, align 4, !dbg !10897
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !10898
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !10899
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10900
  ret void, !dbg !10901
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !10902 {
  tail call void @z_sched_init() #24, !dbg !10907
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !10908
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.104, i32 0, i32 0)) #24, !dbg !10909
  call void @llvm.dbg.value(metadata i8* %1, metadata !10906, metadata !DIExpression()), !dbg !10910
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !10911
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !10912
  tail call void @z_init_cpu(i32 noundef 0) #25, !dbg !10913
  ret i8* %1, !dbg !10914
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !10915 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10919, metadata !DIExpression()), !dbg !10920
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #24, !dbg !10921
  unreachable, !dbg !10922
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !10923 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10925, metadata !DIExpression()), !dbg !10928
  call void @llvm.dbg.value(metadata i8* %1, metadata !10926, metadata !DIExpression()), !dbg !10928
  call void @llvm.dbg.value(metadata i8* %2, metadata !10927, metadata !DIExpression()), !dbg !10928
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !10929
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #25, !dbg !10930
  tail call void @boot_banner() #24, !dbg !10931
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #25, !dbg !10932
  tail call void @z_init_static_threads() #24, !dbg !10933
  tail call void @main() #24, !dbg !10934
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !10935
  %5 = and i8 %4, -2, !dbg !10935
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !10935
  ret void, !dbg !10936
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !10937 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !10947, metadata !DIExpression()), !dbg !10949
  call void @llvm.dbg.value(metadata i8* %1, metadata !10948, metadata !DIExpression()), !dbg !10949
  ret void, !dbg !10950
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #12 !dbg !10951 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !10953, metadata !DIExpression()), !dbg !10955
  call void @llvm.dbg.value(metadata i8* %1, metadata !10954, metadata !DIExpression()), !dbg !10955
  ret void, !dbg !10956
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !10957 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !10958, !srcloc !10965
  call void @llvm.dbg.value(metadata i32 %1, metadata !10961, metadata !DIExpression()) #23, !dbg !10966
  %2 = icmp ne i32 %1, 0, !dbg !10967
  ret i1 %2, !dbg !10968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !10969 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10970
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !10971
  %3 = load i8, i8* %2, align 4, !dbg !10972
  %4 = or i8 %3, 1, !dbg !10972
  store i8 %4, i8* %2, align 4, !dbg !10972
  ret void, !dbg !10973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !10974 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10975
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !10976
  %3 = load i8, i8* %2, align 4, !dbg !10977
  %4 = and i8 %3, -2, !dbg !10977
  store i8 %4, i8* %2, align 4, !dbg !10977
  ret void, !dbg !10978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #4 !dbg !10979 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !10980
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !10981
  %3 = load i8, i8* %2, align 4, !dbg !10981
  %4 = and i8 %3, 1, !dbg !10982
  %5 = icmp ne i8 %4, 0, !dbg !10983
  ret i1 %5, !dbg !10984
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #12 !dbg !10985 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10989, metadata !DIExpression()), !dbg !10991
  call void @llvm.dbg.value(metadata i8* %1, metadata !10990, metadata !DIExpression()), !dbg !10991
  ret i32 -88, !dbg !10992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !10993 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !10997, metadata !DIExpression()), !dbg !10998
  ret i8* null, !dbg !10999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #12 !dbg !11000 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11004, metadata !DIExpression()), !dbg !11007
  call void @llvm.dbg.value(metadata i8* %1, metadata !11005, metadata !DIExpression()), !dbg !11007
  call void @llvm.dbg.value(metadata i32 %2, metadata !11006, metadata !DIExpression()), !dbg !11007
  ret i32 -88, !dbg !11008
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !1914 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2030, metadata !DIExpression()), !dbg !11009
  call void @llvm.dbg.value(metadata i8* %1, metadata !2031, metadata !DIExpression()), !dbg !11009
  call void @llvm.dbg.value(metadata i32 %2, metadata !2032, metadata !DIExpression()), !dbg !11009
  call void @llvm.dbg.value(metadata i32 0, metadata !2033, metadata !DIExpression()), !dbg !11009
  call void @llvm.dbg.value(metadata i8 undef, metadata !2035, metadata !DIExpression()), !dbg !11009
  %4 = icmp eq i8* %1, null, !dbg !11010
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !11012
  br i1 %6, label %46, label %7, !dbg !11012

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11013
  %9 = load i8, i8* %8, align 1, !dbg !11013
  call void @llvm.dbg.value(metadata i8 %9, metadata !2035, metadata !DIExpression()), !dbg !11009
  %10 = add i32 %2, -1, !dbg !11014
  call void @llvm.dbg.value(metadata i32 %10, metadata !2032, metadata !DIExpression()), !dbg !11009
  call void @llvm.dbg.value(metadata i8 0, metadata !2036, metadata !DIExpression()), !dbg !11015
  call void @llvm.dbg.value(metadata i8 %9, metadata !2035, metadata !DIExpression()), !dbg !11009
  call void @llvm.dbg.value(metadata i32 0, metadata !2033, metadata !DIExpression()), !dbg !11009
  %11 = icmp eq i8 %9, 0, !dbg !11016
  br i1 %11, label %12, label %15, !dbg !11018

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !11019
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !11020
  store i8 0, i8* %14, align 1, !dbg !11021
  br label %46, !dbg !11022

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2036, metadata !DIExpression()), !dbg !11015
  call void @llvm.dbg.value(metadata i8 %17, metadata !2035, metadata !DIExpression()), !dbg !11009
  call void @llvm.dbg.value(metadata i32 %18, metadata !2033, metadata !DIExpression()), !dbg !11009
  %19 = zext i8 %17 to i32, !dbg !11023
  %20 = zext i8 %16 to i32, !dbg !11024
  %21 = shl nuw i32 1, %20, !dbg !11024
  call void @llvm.dbg.value(metadata i32 %21, metadata !2034, metadata !DIExpression()), !dbg !11009
  %22 = and i32 %21, %19, !dbg !11026
  %23 = icmp eq i32 %22, 0, !dbg !11028
  br i1 %23, label %42, label %24, !dbg !11029

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !11030
  %26 = sub i32 %10, %18, !dbg !11031
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !11032
  %28 = load i8*, i8** %27, align 4, !dbg !11032
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !11033
  %30 = load i32, i32* %29, align 4, !dbg !11033
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #25, !dbg !11034
  %32 = add i32 %31, %18, !dbg !11035
  call void @llvm.dbg.value(metadata i32 %32, metadata !2033, metadata !DIExpression()), !dbg !11009
  %33 = trunc i32 %21 to i8, !dbg !11036
  %34 = xor i8 %33, -1, !dbg !11036
  %35 = and i8 %17, %34, !dbg !11036
  call void @llvm.dbg.value(metadata i8 %35, metadata !2035, metadata !DIExpression()), !dbg !11009
  %36 = icmp eq i8 %35, 0, !dbg !11037
  br i1 %36, label %12, label %37, !dbg !11039

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !11040
  %39 = sub i32 %10, %32, !dbg !11042
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #25, !dbg !11043
  %41 = add i32 %40, %32, !dbg !11044
  call void @llvm.dbg.value(metadata i32 %41, metadata !2033, metadata !DIExpression()), !dbg !11009
  br label %42, !dbg !11045

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !11009
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !11009
  call void @llvm.dbg.value(metadata i8 %44, metadata !2035, metadata !DIExpression()), !dbg !11009
  call void @llvm.dbg.value(metadata i32 %43, metadata !2033, metadata !DIExpression()), !dbg !11009
  %45 = add i8 %16, 1, !dbg !11046
  call void @llvm.dbg.value(metadata i8 %45, metadata !2036, metadata !DIExpression()), !dbg !11015
  br label %15, !dbg !11018

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i32 0, i32 0), %3 ], !dbg !11009
  ret i8* %47, !dbg !11047
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11048 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11052, metadata !DIExpression()), !dbg !11057
  call void @llvm.dbg.value(metadata i32 %1, metadata !11053, metadata !DIExpression()), !dbg !11057
  call void @llvm.dbg.value(metadata i8* %2, metadata !11054, metadata !DIExpression()), !dbg !11057
  call void @llvm.dbg.value(metadata i32 %3, metadata !11055, metadata !DIExpression()), !dbg !11057
  %5 = icmp ult i32 %1, %3, !dbg !11058
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !11058
  call void @llvm.dbg.value(metadata i32 %6, metadata !11056, metadata !DIExpression()), !dbg !11057
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #24, !dbg !11059
  ret i32 %6, !dbg !11060
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11061 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11065, metadata !DIExpression()), !dbg !11066
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #24, !dbg !11067
  ret void, !dbg !11068
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !11069 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11078, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11079, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata i32 %2, metadata !11080, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11081, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata i8* %4, metadata !11082, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata i8* %5, metadata !11083, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata i8* %6, metadata !11084, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata i32 %7, metadata !11085, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata i32 %8, metadata !11086, metadata !DIExpression()), !dbg !11089
  call void @llvm.dbg.value(metadata i8* undef, metadata !11087, metadata !DIExpression()), !dbg !11089
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !11090
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #25, !dbg !11091
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !11092
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #25, !dbg !11093
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #25, !dbg !11094
  call void @llvm.dbg.value(metadata i8* %13, metadata !11088, metadata !DIExpression()), !dbg !11089
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #24, !dbg !11095
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !11096
  store i8* null, i8** %14, align 4, !dbg !11097
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11098
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !11098
  br i1 %16, label %20, label %17, !dbg !11100

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !11101
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !11101
  br label %20, !dbg !11102

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !11089
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !11103
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !11105
  ret i8* %13, !dbg !11106
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #3 !dbg !11107 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !11112, metadata !DIExpression()), !dbg !11113
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !11114
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #25, !dbg !11115
  ret void, !dbg !11116
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #3 !dbg !11117 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11122, metadata !DIExpression()), !dbg !11126
  call void @llvm.dbg.value(metadata i32 %1, metadata !11123, metadata !DIExpression()), !dbg !11126
  call void @llvm.dbg.value(metadata i32 %2, metadata !11124, metadata !DIExpression()), !dbg !11126
  call void @llvm.dbg.value(metadata i32 %3, metadata !11125, metadata !DIExpression()), !dbg !11126
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !11127
  store %union.anon* null, %union.anon** %5, align 8, !dbg !11128
  %6 = trunc i32 %3 to i8, !dbg !11129
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !11130
  store i8 %6, i8* %7, align 4, !dbg !11131
  %8 = trunc i32 %2 to i8, !dbg !11132
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !11133
  store i8 %8, i8* %9, align 1, !dbg !11134
  %10 = trunc i32 %1 to i8, !dbg !11135
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !11136
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !11136
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !11136
  store i8 %10, i8* %13, align 2, !dbg !11137
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !11138
  store i8 0, i8* %14, align 1, !dbg !11139
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #25, !dbg !11140
  ret void, !dbg !11141
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #3 !dbg !11142 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11146, metadata !DIExpression()), !dbg !11154
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11147, metadata !DIExpression()), !dbg !11154
  call void @llvm.dbg.value(metadata i32 %2, metadata !11148, metadata !DIExpression()), !dbg !11154
  call void @llvm.dbg.value(metadata i32 0, metadata !11153, metadata !DIExpression()), !dbg !11154
  %4 = add i32 %2, 7, !dbg !11155
  %5 = and i32 %4, -8, !dbg !11155
  %6 = add i32 %5, 64, !dbg !11155
  call void @llvm.dbg.value(metadata i32 %6, metadata !11149, metadata !DIExpression()), !dbg !11154
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.113(%struct.z_thread_stack_element* noundef %1) #25, !dbg !11157
  call void @llvm.dbg.value(metadata i8* %7, metadata !11152, metadata !DIExpression()), !dbg !11154
  call void @llvm.dbg.value(metadata i32 %5, metadata !11150, metadata !DIExpression()), !dbg !11154
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !11158
  call void @llvm.dbg.value(metadata i8* %8, metadata !11151, metadata !DIExpression()), !dbg !11154
  call void @llvm.dbg.value(metadata i32 0, metadata !11153, metadata !DIExpression()), !dbg !11154
  %9 = ptrtoint i8* %7 to i32, !dbg !11159
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !11160
  store i32 %9, i32* %10, align 4, !dbg !11161
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !11162
  store i32 %5, i32* %11, align 4, !dbg !11163
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !11164
  store i32 0, i32* %12, align 4, !dbg !11165
  call void @llvm.dbg.value(metadata i8* %8, metadata !11151, metadata !DIExpression()), !dbg !11154
  ret i8* %8, !dbg !11166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.113(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #12 !dbg !11167 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !11171, metadata !DIExpression()), !dbg !11172
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !11173
  ret i8* %2, !dbg !11174
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !11175 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !11180, metadata !DIExpression()), !dbg !11181
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !11182
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !11183
  ret void, !dbg !11184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !11185 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11187, metadata !DIExpression()), !dbg !11188
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11189
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #25, !dbg !11190
  ret void, !dbg !11191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !11192 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11196, metadata !DIExpression()), !dbg !11197
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11198
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11199
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11200
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11201
  ret void, !dbg !11202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #3 !dbg !11203 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11208, metadata !DIExpression()), !dbg !11209
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11210
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !11211
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11212
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !11213
  ret void, !dbg !11214
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !11215 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !11232, metadata !DIExpression()), !dbg !11233
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11223, metadata !DIExpression()), !dbg !11233
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !11224, metadata !DIExpression()), !dbg !11233
  call void @llvm.dbg.value(metadata i32 %2, metadata !11225, metadata !DIExpression()), !dbg !11233
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !11226, metadata !DIExpression()), !dbg !11233
  call void @llvm.dbg.value(metadata i8* %4, metadata !11227, metadata !DIExpression()), !dbg !11233
  call void @llvm.dbg.value(metadata i8* %5, metadata !11228, metadata !DIExpression()), !dbg !11233
  call void @llvm.dbg.value(metadata i8* %6, metadata !11229, metadata !DIExpression()), !dbg !11233
  call void @llvm.dbg.value(metadata i32 %7, metadata !11230, metadata !DIExpression()), !dbg !11233
  call void @llvm.dbg.value(metadata i32 %8, metadata !11231, metadata !DIExpression()), !dbg !11233
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #25, !dbg !11234
  %13 = icmp eq i64 %11, -1, !dbg !11235
  br i1 %13, label %15, label %14, !dbg !11237

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #25, !dbg !11238
  br label %15, !dbg !11240

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !11241
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11242 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !11247, metadata !DIExpression()), !dbg !11248
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11246, metadata !DIExpression()), !dbg !11248
  %4 = icmp eq i64 %3, 0, !dbg !11249
  br i1 %4, label %5, label %6, !dbg !11251

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !11252
  br label %7, !dbg !11254

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !11255
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !11257
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11258 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11262, metadata !DIExpression()), !dbg !11263
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11264, !srcloc !11266
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #25, !dbg !11267
  ret void, !dbg !11268
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !11269 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !11272, metadata !DIExpression()), !dbg !11273
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11271, metadata !DIExpression()), !dbg !11273
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11274
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !11275
  ret void, !dbg !11276
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !11277 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11279, metadata !DIExpression()), !dbg !11299
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !11300

1:                                                ; preds = %2
  tail call void @k_sched_lock() #24, !dbg !11301
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11297, metadata !DIExpression()), !dbg !11302
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !11303

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !11279, metadata !DIExpression()), !dbg !11299
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !11304
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11304
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !11307
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !11307
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !11308
  %9 = load i32, i32* %8, align 4, !dbg !11308
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !11309
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !11309
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !11310
  %13 = load i8*, i8** %12, align 4, !dbg !11310
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !11311
  %15 = load i8*, i8** %14, align 4, !dbg !11311
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !11312
  %17 = load i8*, i8** %16, align 4, !dbg !11312
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !11313
  %19 = load i32, i32* %18, align 4, !dbg !11313
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !11314
  %21 = load i32, i32* %20, align 4, !dbg !11314
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #25, !dbg !11315
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !11316
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !11317
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !11318
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !11318
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !11319
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !11279, metadata !DIExpression()), !dbg !11299
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11320
  br i1 %27, label %2, label %1, !dbg !11300, !llvm.loop !11322

28:                                               ; preds = %0
  tail call void @k_sched_lock() #24, !dbg !11301
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !11297, metadata !DIExpression()), !dbg !11302
  br label %29, !dbg !11303

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #24, !dbg !11324
  ret void, !dbg !11325

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !11297, metadata !DIExpression()), !dbg !11302
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !11326
  %33 = load i32, i32* %32, align 4, !dbg !11326
  %34 = icmp eq i32 %33, -1, !dbg !11330
  br i1 %34, label %43, label %35, !dbg !11331

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !11332
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !11332
  %38 = icmp sgt i32 %33, 0, !dbg !11334
  %39 = select i1 %38, i32 %33, i32 0, !dbg !11334
  %40 = zext i32 %39 to i64, !dbg !11334
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #25, !dbg !11334
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !11335
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #25, !dbg !11335
  br label %43, !dbg !11336

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !11337
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !11297, metadata !DIExpression()), !dbg !11302
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !11338
  br i1 %45, label %30, label %29, !dbg !11303, !llvm.loop !11340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !11342 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !11347, metadata !DIExpression()), !dbg !11348
  call void @llvm.dbg.value(metadata i64 %0, metadata !11349, metadata !DIExpression()), !dbg !11366
  call void @llvm.dbg.value(metadata i32 1000, metadata !11354, metadata !DIExpression()), !dbg !11366
  call void @llvm.dbg.value(metadata i32 10000, metadata !11355, metadata !DIExpression()), !dbg !11366
  call void @llvm.dbg.value(metadata i8 1, metadata !11356, metadata !DIExpression()), !dbg !11366
  call void @llvm.dbg.value(metadata i8 0, metadata !11357, metadata !DIExpression()), !dbg !11366
  call void @llvm.dbg.value(metadata i8 1, metadata !11358, metadata !DIExpression()), !dbg !11366
  call void @llvm.dbg.value(metadata i8 0, metadata !11359, metadata !DIExpression()), !dbg !11366
  call void @llvm.dbg.value(metadata i8 1, metadata !11360, metadata !DIExpression()), !dbg !11366
  call void @llvm.dbg.value(metadata i8 0, metadata !11361, metadata !DIExpression()), !dbg !11366
  call void @llvm.dbg.value(metadata i64 0, metadata !11362, metadata !DIExpression()), !dbg !11366
  call void @llvm.dbg.value(metadata i64 0, metadata !11362, metadata !DIExpression()), !dbg !11366
  %2 = mul i64 %0, 10, !dbg !11368
  ret i64 %2, !dbg !11374
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !11375 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !11377, metadata !DIExpression()), !dbg !11381
  call void @llvm.dbg.value(metadata i8* %1, metadata !11378, metadata !DIExpression()), !dbg !11381
  call void @llvm.dbg.value(metadata i8* %2, metadata !11379, metadata !DIExpression()), !dbg !11381
  call void @llvm.dbg.value(metadata i8* %3, metadata !11380, metadata !DIExpression()), !dbg !11381
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11382
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !11383
  %7 = load i8, i8* %6, align 4, !dbg !11384
  %8 = or i8 %7, 4, !dbg !11384
  store i8 %8, i8* %6, align 4, !dbg !11384
  tail call void @z_thread_essential_clear() #25, !dbg !11385
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !11386
  unreachable, !dbg !11386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #12 !dbg !11387 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11391, metadata !DIExpression()), !dbg !11392
  ret i32 -134, !dbg !11393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #12 !dbg !11394 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11398, metadata !DIExpression()), !dbg !11400
  call void @llvm.dbg.value(metadata i32 %1, metadata !11399, metadata !DIExpression()), !dbg !11400
  ret i32 -134, !dbg !11401
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #12 !dbg !11402 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11409, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !11410, metadata !DIExpression()), !dbg !11411
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !11412
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !11414
  %6 = select i1 %5, i32 -22, i32 0, !dbg !11411
  ret i32 %6, !dbg !11415
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #12 !dbg !11416 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !11420, metadata !DIExpression()), !dbg !11421
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !11422
  %3 = select i1 %2, i32 -22, i32 0, !dbg !11421
  ret i32 %3, !dbg !11424
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !11425 {
  tail call void @sys_clock_idle_exit() #24, !dbg !11427
  ret void, !dbg !11428
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !11429 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11431, metadata !DIExpression()), !dbg !11434
  call void @llvm.dbg.value(metadata i8* %1, metadata !11432, metadata !DIExpression()), !dbg !11434
  call void @llvm.dbg.value(metadata i8* %2, metadata !11433, metadata !DIExpression()), !dbg !11434
  br label %4, !dbg !11435

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11436, !srcloc !11443
  call void @llvm.dbg.value(metadata i32 undef, metadata !11439, metadata !DIExpression()) #23, !dbg !11444
  call void @llvm.dbg.value(metadata i32 undef, metadata !11440, metadata !DIExpression()) #23, !dbg !11444
  tail call fastcc void @k_cpu_idle() #25, !dbg !11445
  br label %4, !dbg !11435, !llvm.loop !11446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !11448 {
  tail call void @arch_cpu_idle() #24, !dbg !11449
  ret void, !dbg !11450
}

; Function Attrs: optsize
declare !dbg !11451 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !11452 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11456, metadata !DIExpression()), !dbg !11460
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11457, metadata !DIExpression()), !dbg !11460
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !11461
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !11461
  %5 = load i8, i8* %4, align 2, !dbg !11461
  call void @llvm.dbg.value(metadata i8 %5, metadata !11458, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !11460
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !11462
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !11462
  %8 = load i8, i8* %7, align 2, !dbg !11462
  call void @llvm.dbg.value(metadata i8 %8, metadata !11459, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !11460
  %9 = icmp eq i8 %8, %5, !dbg !11463
  %10 = sext i8 %5 to i32, !dbg !11465
  %11 = sext i8 %8 to i32, !dbg !11465
  %12 = sub nsw i32 %11, %10, !dbg !11465
  %13 = select i1 %9, i32 0, i32 %12, !dbg !11465
  ret i32 %13, !dbg !11466
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !11467 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11471, metadata !DIExpression()), !dbg !11472
  %2 = tail call fastcc i32 @slice_time() #25, !dbg !11473
  %3 = icmp eq i32 %2, 0, !dbg !11475
  br i1 %3, label %8, label %4, !dbg !11476

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #24, !dbg !11477
  %6 = add i32 %5, %2, !dbg !11479
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11480
  %7 = tail call fastcc i32 @slice_time() #25, !dbg !11481
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #24, !dbg !11482
  br label %8, !dbg !11483

8:                                                ; preds = %4, %1
  ret void, !dbg !11484
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #4 !dbg !11485 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !11489, metadata !DIExpression()), !dbg !11491
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !11492
  call void @llvm.dbg.value(metadata i32 %1, metadata !11490, metadata !DIExpression()), !dbg !11491
  ret i32 %1, !dbg !11493
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11494 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11498, metadata !DIExpression()), !dbg !11507
  call void @llvm.dbg.value(metadata i32 %1, metadata !11499, metadata !DIExpression()), !dbg !11507
  call void @llvm.dbg.value(metadata i32 0, metadata !11500, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !11516
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11518, !srcloc !11524
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !11518
  call void @llvm.dbg.value(metadata i32 %4, metadata !11521, metadata !DIExpression()) #23, !dbg !11525
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !11525
  call void @llvm.dbg.value(metadata i32 %4, metadata !11515, metadata !DIExpression()) #23, !dbg !11516
  call void @llvm.dbg.value(metadata i32 %4, metadata !11506, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 undef, metadata !11500, metadata !DIExpression()), !dbg !11508
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11526
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #25, !dbg !11529
  %6 = icmp sgt i32 %0, 0, !dbg !11530
  %7 = icmp sgt i32 %5, 2, !dbg !11532
  %8 = select i1 %7, i32 %5, i32 2, !dbg !11532
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !11532
  store i32 %9, i32* @slice_ticks, align 4, !dbg !11533
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !11534
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !11535
  call void @llvm.dbg.value(metadata i32 %4, metadata !11536, metadata !DIExpression()) #23, !dbg !11542
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !11542
  call void @llvm.dbg.value(metadata i32 %4, metadata !11544, metadata !DIExpression()) #23, !dbg !11547
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !11549, !srcloc !11550
  call void @llvm.dbg.value(metadata i32 1, metadata !11500, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.value(metadata i32 undef, metadata !11500, metadata !DIExpression()), !dbg !11508
  ret void, !dbg !11551
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #12 !dbg !11552 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11554, metadata !DIExpression()), !dbg !11555
  call void @llvm.dbg.value(metadata i32 %0, metadata !11556, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11571
  call void @llvm.dbg.value(metadata i32 1000, metadata !11559, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.value(metadata i32 10000, metadata !11560, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.value(metadata i8 1, metadata !11561, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.value(metadata i1 true, metadata !11562, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11571
  call void @llvm.dbg.value(metadata i1 true, metadata !11563, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11571
  call void @llvm.dbg.value(metadata i8 0, metadata !11564, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.value(metadata i1 true, metadata !11565, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11571
  call void @llvm.dbg.value(metadata i1 false, metadata !11566, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11571
  call void @llvm.dbg.value(metadata i64 0, metadata !11567, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.value(metadata i64 0, metadata !11567, metadata !DIExpression()), !dbg !11571
  %2 = mul i32 %0, 10, !dbg !11573
  ret i32 %2, !dbg !11579
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !11580 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11582, metadata !DIExpression()), !dbg !11584
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !11585
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11587, !srcloc !11524
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11587
  call void @llvm.dbg.value(metadata i32 %3, metadata !11521, metadata !DIExpression()) #23, !dbg !11589
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !11589
  call void @llvm.dbg.value(metadata i32 %3, metadata !11515, metadata !DIExpression()) #23, !dbg !11585
  call void @llvm.dbg.value(metadata i32 %3, metadata !11583, metadata !DIExpression()), !dbg !11584
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !11590
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11592
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !11593
  br i1 %6, label %7, label %8, !dbg !11594

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !11595
  call void @llvm.dbg.value(metadata i32 %3, metadata !11536, metadata !DIExpression()) #23, !dbg !11597
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !11597
  call void @llvm.dbg.value(metadata i32 %3, metadata !11544, metadata !DIExpression()) #23, !dbg !11599
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !11601, !srcloc !11550
  br label %24, !dbg !11602

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !11603
  %9 = tail call fastcc i32 @slice_time() #25, !dbg !11604
  %10 = icmp eq i32 %9, 0, !dbg !11604
  br i1 %10, label %21, label %11, !dbg !11606

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #25, !dbg !11607
  br i1 %12, label %13, label %21, !dbg !11608

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11609
  %15 = icmp sgt i32 %14, %0, !dbg !11612
  br i1 %15, label %19, label %16, !dbg !11613

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !11614
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #25, !dbg !11614
  call void @llvm.dbg.value(metadata i32 %18, metadata !11583, metadata !DIExpression()), !dbg !11584
  br label %22, !dbg !11616

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !11617
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11617
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !11619
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !11584
  call void @llvm.dbg.value(metadata i32 %23, metadata !11583, metadata !DIExpression()), !dbg !11584
  call void @llvm.dbg.value(metadata i32 %23, metadata !11536, metadata !DIExpression()) #23, !dbg !11621
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !11621
  call void @llvm.dbg.value(metadata i32 %23, metadata !11544, metadata !DIExpression()) #23, !dbg !11623
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !11625, !srcloc !11550
  br label %24, !dbg !11626

24:                                               ; preds = %22, %7
  ret void, !dbg !11626
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !11627 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11631, metadata !DIExpression()), !dbg !11633
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #25, !dbg !11634
  %3 = icmp eq i32 %2, 0, !dbg !11634
  br i1 %3, label %16, label %4, !dbg !11635

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !11636
  br i1 %5, label %16, label %6, !dbg !11637

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !11638
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !11638
  %9 = load i8, i8* %8, align 2, !dbg !11638
  %10 = sext i8 %9 to i32, !dbg !11639
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !11640
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #25, !dbg !11641
  br i1 %12, label %16, label %13, !dbg !11642

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #25, !dbg !11643
  %15 = xor i1 %14, true, !dbg !11644
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !11633
  call void @llvm.dbg.value(metadata i1 %17, metadata !11632, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11633
  ret i1 %17, !dbg !11645
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !11646 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !11650, metadata !DIExpression()), !dbg !11652
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11653
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11651, metadata !DIExpression()), !dbg !11652
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #25, !dbg !11654
  br i1 %3, label %5, label %4, !dbg !11656

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #25, !dbg !11657
  br label %5, !dbg !11659

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !11650, metadata !DIExpression()), !dbg !11652
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !11660
  ret i32 %6, !dbg !11661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !11662 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11664, metadata !DIExpression()), !dbg !11666
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11667
  %3 = load i8, i8* %2, align 1, !dbg !11667
  call void @llvm.dbg.value(metadata i8 %3, metadata !11665, metadata !DIExpression()), !dbg !11666
  %4 = and i8 %3, 31, !dbg !11668
  %5 = icmp ne i8 %4, 0, !dbg !11669
  ret i1 %5, !dbg !11670
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !11671 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11673, metadata !DIExpression()), !dbg !11674
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !11675
  br i1 %2, label %3, label %7, !dbg !11677

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11678, metadata !DIExpression()) #23, !dbg !11681
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11684
  %5 = load i8, i8* %4, align 1, !dbg !11685
  %6 = and i8 %5, 127, !dbg !11685
  store i8 %6, i8* %4, align 1, !dbg !11685
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11686, metadata !DIExpression()) #23, !dbg !11689
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !11693
  br label %7, !dbg !11694

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11695, metadata !DIExpression()) #23, !dbg !11698
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11700
  %9 = load i8, i8* %8, align 1, !dbg !11701
  %10 = or i8 %9, -128, !dbg !11701
  store i8 %10, i8* %8, align 1, !dbg !11701
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11702, metadata !DIExpression()) #23, !dbg !11705
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11709, metadata !DIExpression()) #23, !dbg !11717
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11715, metadata !DIExpression()) #23, !dbg !11717
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !11719
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !11716, metadata !DIExpression()) #23, !dbg !11717
  %12 = icmp eq %struct._dnode* %11, null, !dbg !11721
  br i1 %12, label %23, label %13, !dbg !11719

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !11716, metadata !DIExpression()) #23, !dbg !11717
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !11723
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !11716, metadata !DIExpression()) #23, !dbg !11717
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #24, !dbg !11724
  %17 = icmp sgt i32 %16, 0, !dbg !11727
  br i1 %17, label %18, label %20, !dbg !11728

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11729
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #24, !dbg !11731
  br label %25, !dbg !11732

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #24, !dbg !11721
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !11716, metadata !DIExpression()) #23, !dbg !11717
  %22 = icmp eq %struct._dnode* %21, null, !dbg !11721
  br i1 %22, label %23, label %13, !dbg !11719, !llvm.loop !11733

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !11735
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #24, !dbg !11736
  br label %25, !dbg !11737

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11738
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !11739
  %28 = zext i1 %27 to i32, !dbg !11739
  tail call fastcc void @update_cache(i32 noundef %28) #25, !dbg !11740
  ret void, !dbg !11741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !11742 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11744, metadata !DIExpression()), !dbg !11745
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #25, !dbg !11746
  ret i1 %2, !dbg !11747
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !11748 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !11750, metadata !DIExpression()), !dbg !11752
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !11751, metadata !DIExpression()), !dbg !11752
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !11753
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #25, !dbg !11754
  ret void, !dbg !11755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !11756 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11760, metadata !DIExpression()), !dbg !11761
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #25, !dbg !11762
  br i1 %2, label %6, label %3, !dbg !11762

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11763
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !11763
  br label %6, !dbg !11762

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !11762
  ret %struct._dnode* %7, !dbg !11764
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !11765 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11769, metadata !DIExpression()), !dbg !11773
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11770, metadata !DIExpression()), !dbg !11773
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11774
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !11774
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !11771, metadata !DIExpression()), !dbg !11773
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !11775
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !11776
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !11777
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !11778
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !11779
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !11780
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !11781
  ret void, !dbg !11782
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !11783 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11787, metadata !DIExpression()), !dbg !11789
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11788, metadata !DIExpression()), !dbg !11789
  %3 = icmp eq %struct._dnode* %1, null, !dbg !11790
  br i1 %3, label %6, label %4, !dbg !11791

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #25, !dbg !11792
  br label %6, !dbg !11791

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !11791
  ret %struct._dnode* %7, !dbg !11793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !11794 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11798, metadata !DIExpression()), !dbg !11801
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11799, metadata !DIExpression()), !dbg !11801
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11802
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !11802
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !11800, metadata !DIExpression()), !dbg !11801
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !11803
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !11804
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !11805
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !11806
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !11807
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !11808
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !11809
  ret void, !dbg !11810
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !11811 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11813, metadata !DIExpression()), !dbg !11815
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !11816
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11823, metadata !DIExpression()) #23, !dbg !11825
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !11826
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !11827
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !11827
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11814, metadata !DIExpression()), !dbg !11815
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !11828, metadata !DIExpression()) #23, !dbg !11834
  call void @llvm.dbg.value(metadata i32 %0, metadata !11833, metadata !DIExpression()) #23, !dbg !11834
  %6 = icmp eq i32 %0, 0, !dbg !11837
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !11839
  br i1 %6, label %8, label %15, !dbg !11840

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #24, !dbg !11841
  br i1 %9, label %15, label %10, !dbg !11843

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #24, !dbg !11844
  br i1 %11, label %15, label %12, !dbg !11846

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #24, !dbg !11847
  %14 = icmp eq i32 %13, 0, !dbg !11847
  br i1 %14, label %18, label %15, !dbg !11849

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !11850
  br i1 %16, label %18, label %17, !dbg !11853

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #25, !dbg !11854
  br label %18, !dbg !11856

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !11839
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !11839
  ret void, !dbg !11857
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #4 !dbg !11858 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11862, metadata !DIExpression()), !dbg !11865
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !11863, metadata !DIExpression()), !dbg !11865
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #25, !dbg !11866
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !11864, metadata !DIExpression()), !dbg !11865
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !11863, metadata !DIExpression()), !dbg !11865
  ret %struct.k_thread* %3, !dbg !11867
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !11868 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11870, metadata !DIExpression()), !dbg !11871
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !11872
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !11873
  %4 = xor i1 %3, true, !dbg !11874
  ret i1 %4, !dbg !11875
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !11876 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11878, metadata !DIExpression()), !dbg !11879
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !11880
  %3 = load i16, i16* %2, align 2, !dbg !11880
  %4 = icmp ult i16 %3, 128, !dbg !11881
  %5 = zext i1 %4 to i32, !dbg !11881
  ret i32 %5, !dbg !11882
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !11883 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !11889, metadata !DIExpression()), !dbg !11890
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !11891
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #25, !dbg !11892
  %4 = xor i1 %3, true, !dbg !11893
  ret i1 %4, !dbg !11894
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !11895 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11901, metadata !DIExpression()), !dbg !11902
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11903
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11903
  %4 = icmp ne %struct._dnode* %3, null, !dbg !11904
  ret i1 %4, !dbg !11905
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #4 !dbg !11906 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11908, metadata !DIExpression()), !dbg !11910
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !11909, metadata !DIExpression()), !dbg !11910
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11911
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !11911
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !11912
  br i1 %5, label %9, label %6, !dbg !11913

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !11914
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !11914
  br label %9, !dbg !11913

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !11913
  ret %struct._dnode* %10, !dbg !11915
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !11916 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11920, metadata !DIExpression()), !dbg !11921
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11922
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11922
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !11923
  ret i1 %4, !dbg !11924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !11925 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11929, metadata !DIExpression()), !dbg !11932
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11933
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !11933
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !11930, metadata !DIExpression()), !dbg !11932
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11934
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !11934
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !11931, metadata !DIExpression()), !dbg !11932
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !11935
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !11936
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !11937
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !11938
  tail call fastcc void @sys_dnode_init.118(%struct._dnode* noundef %0) #25, !dbg !11939
  ret void, !dbg !11940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.118(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !11941 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !11943, metadata !DIExpression()), !dbg !11944
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !11945
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !11946
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !11947
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !11948
  ret void, !dbg !11949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !11950 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11954, metadata !DIExpression()), !dbg !11956
  call void @llvm.dbg.value(metadata i32 128, metadata !11955, metadata !DIExpression()), !dbg !11956
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !11957
  %3 = load i8, i8* %2, align 1, !dbg !11957
  %4 = icmp slt i8 %3, 0, !dbg !11958
  ret i1 %4, !dbg !11959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !11960 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11964, metadata !DIExpression()), !dbg !11966
  call void @llvm.dbg.value(metadata i32 %1, metadata !11965, metadata !DIExpression()), !dbg !11966
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #25, !dbg !11967
  ret i1 %3, !dbg !11968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #12 !dbg !11969 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11971, metadata !DIExpression()), !dbg !11972
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !11973
  ret i1 %2, !dbg !11974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !11975 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11977, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.value(metadata i32 %1, metadata !11978, metadata !DIExpression()), !dbg !11979
  %3 = icmp slt i32 %0, %1, !dbg !11980
  ret i1 %3, !dbg !11981
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !11982 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11984, metadata !DIExpression()), !dbg !11988
  call void @llvm.dbg.value(metadata i32 0, metadata !11985, metadata !DIExpression()), !dbg !11989
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !11990
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !11992, !srcloc !11524
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !11992
  call void @llvm.dbg.value(metadata i32 %3, metadata !11521, metadata !DIExpression()) #23, !dbg !11994
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !11994
  call void @llvm.dbg.value(metadata i32 %3, metadata !11515, metadata !DIExpression()) #23, !dbg !11990
  call void @llvm.dbg.value(metadata i32 %3, metadata !11987, metadata !DIExpression()), !dbg !11989
  call void @llvm.dbg.value(metadata i32 undef, metadata !11985, metadata !DIExpression()), !dbg !11989
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !11995
  call void @llvm.dbg.value(metadata i32 %3, metadata !11536, metadata !DIExpression()) #23, !dbg !12000
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !12000
  call void @llvm.dbg.value(metadata i32 %3, metadata !11544, metadata !DIExpression()) #23, !dbg !12002
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12004, !srcloc !11550
  call void @llvm.dbg.value(metadata i32 1, metadata !11985, metadata !DIExpression()), !dbg !11989
  call void @llvm.dbg.value(metadata i32 undef, metadata !11985, metadata !DIExpression()), !dbg !11989
  ret void, !dbg !12005
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12006 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12008, metadata !DIExpression()), !dbg !12009
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12010
  br i1 %2, label %24, label %3, !dbg !12012

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !12013
  br i1 %4, label %5, label %24, !dbg !12014

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11695, metadata !DIExpression()) #23, !dbg !12015
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12018
  %7 = load i8, i8* %6, align 1, !dbg !12019
  %8 = or i8 %7, -128, !dbg !12019
  store i8 %8, i8* %6, align 1, !dbg !12019
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11702, metadata !DIExpression()) #23, !dbg !12020
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11709, metadata !DIExpression()) #23, !dbg !12022
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11715, metadata !DIExpression()) #23, !dbg !12022
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12024
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !11716, metadata !DIExpression()) #23, !dbg !12022
  %10 = icmp eq %struct._dnode* %9, null, !dbg !12025
  br i1 %10, label %21, label %11, !dbg !12024

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !11716, metadata !DIExpression()) #23, !dbg !12022
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !12026
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !11716, metadata !DIExpression()) #23, !dbg !12022
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #24, !dbg !12027
  %15 = icmp sgt i32 %14, 0, !dbg !12028
  br i1 %15, label %16, label %18, !dbg !12029

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12030
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #24, !dbg !12031
  br label %23, !dbg !12032

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #24, !dbg !12025
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !11716, metadata !DIExpression()) #23, !dbg !12022
  %20 = icmp eq %struct._dnode* %19, null, !dbg !12025
  br i1 %20, label %21, label %11, !dbg !12024, !llvm.loop !12033

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12035
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #24, !dbg !12036
  br label %23, !dbg !12037

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !12038
  br label %24, !dbg !12039

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !12040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12041 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12043, metadata !DIExpression()), !dbg !12044
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #25, !dbg !12045
  br i1 %2, label %6, label %3, !dbg !12046

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #25, !dbg !12047
  %5 = xor i1 %4, true, !dbg !12046
  br label %6, !dbg !12046

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !12048
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12049 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12051, metadata !DIExpression()), !dbg !12055
  call void @llvm.dbg.value(metadata i32 0, metadata !12052, metadata !DIExpression()), !dbg !12056
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !12057
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12059, !srcloc !11524
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12059
  call void @llvm.dbg.value(metadata i32 %3, metadata !11521, metadata !DIExpression()) #23, !dbg !12061
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !12061
  call void @llvm.dbg.value(metadata i32 %3, metadata !11515, metadata !DIExpression()) #23, !dbg !12057
  call void @llvm.dbg.value(metadata i32 %3, metadata !12054, metadata !DIExpression()), !dbg !12056
  call void @llvm.dbg.value(metadata i32 undef, metadata !12052, metadata !DIExpression()), !dbg !12056
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #25, !dbg !12062
  call void @llvm.dbg.value(metadata i32 %3, metadata !11536, metadata !DIExpression()) #23, !dbg !12065
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !12065
  call void @llvm.dbg.value(metadata i32 %3, metadata !11544, metadata !DIExpression()) #23, !dbg !12067
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12069, !srcloc !11550
  call void @llvm.dbg.value(metadata i32 1, metadata !12052, metadata !DIExpression()), !dbg !12056
  call void @llvm.dbg.value(metadata i32 undef, metadata !12052, metadata !DIExpression()), !dbg !12056
  ret void, !dbg !12070
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12071 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12073, metadata !DIExpression()), !dbg !12075
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !12076
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12078, !srcloc !11524
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12078
  call void @llvm.dbg.value(metadata i32 %3, metadata !11521, metadata !DIExpression()) #23, !dbg !12080
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !12080
  call void @llvm.dbg.value(metadata i32 %3, metadata !11515, metadata !DIExpression()) #23, !dbg !12076
  call void @llvm.dbg.value(metadata i32 %3, metadata !12074, metadata !DIExpression()), !dbg !12075
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #25, !dbg !12081
  br i1 %4, label %5, label %6, !dbg !12083

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11536, metadata !DIExpression()) #23, !dbg !12084
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !12084
  call void @llvm.dbg.value(metadata i32 %3, metadata !11544, metadata !DIExpression()) #23, !dbg !12087
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12089, !srcloc !11550
  br label %8, !dbg !12090

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.123(%struct.k_thread* noundef %0) #25, !dbg !12091
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12092
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12093
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !12093
  br label %8, !dbg !12094

8:                                                ; preds = %6, %5
  ret void, !dbg !12094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12095 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12097, metadata !DIExpression()), !dbg !12098
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12099
  %3 = load i8, i8* %2, align 1, !dbg !12099
  %4 = and i8 %3, 4, !dbg !12100
  %5 = icmp eq i8 %4, 0, !dbg !12101
  ret i1 %5, !dbg !12102
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.123(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12103 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12105, metadata !DIExpression()), !dbg !12106
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12107
  %3 = load i8, i8* %2, align 1, !dbg !12108
  %4 = and i8 %3, -5, !dbg !12108
  store i8 %4, i8* %2, align 1, !dbg !12108
  ret void, !dbg !12109
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !12110 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !12113, metadata !DIExpression()), !dbg !12114
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12112, metadata !DIExpression()), !dbg !12114
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #25, !dbg !12115
  br i1 %4, label %5, label %9, !dbg !12117

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #25, !dbg !12118
  br i1 %6, label %7, label %9, !dbg !12119

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !12120, metadata !DIExpression()) #23, !dbg !12126
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12125, metadata !DIExpression()) #23, !dbg !12126
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !12129
  br label %10, !dbg !12130

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !11536, metadata !DIExpression()) #23, !dbg !12131
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !12131
  call void @llvm.dbg.value(metadata i32 %3, metadata !11544, metadata !DIExpression()) #23, !dbg !12134
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12136, !srcloc !11550
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !12137
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !12138 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12142, metadata !DIExpression()), !dbg !12143
  call void @llvm.dbg.value(metadata i32 %0, metadata !12144, metadata !DIExpression()), !dbg !12149
  %2 = icmp eq i32 %0, 0, !dbg !12151
  br i1 %2, label %3, label %6, !dbg !12152

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12153, !srcloc !12160
  call void @llvm.dbg.value(metadata i32 %4, metadata !12156, metadata !DIExpression()) #23, !dbg !12161
  %5 = icmp eq i32 %4, 0, !dbg !12162
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !12143
  ret i1 %7, !dbg !12163
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #4 !dbg !12164 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12167
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12166, metadata !DIExpression()), !dbg !12168
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12169
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !12170
  ret i1 %3, !dbg !12171
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !12172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12174, metadata !DIExpression()), !dbg !12176
  %2 = tail call i32 @arch_swap(i32 noundef %0) #24, !dbg !12177
  call void @llvm.dbg.value(metadata i32 %2, metadata !12175, metadata !DIExpression()), !dbg !12176
  ret i32 %2, !dbg !12178
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12179 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12181, metadata !DIExpression()), !dbg !12185
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !12186
  call void @llvm.dbg.value(metadata i32 0, metadata !12182, metadata !DIExpression()), !dbg !12187
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !12188
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12190, !srcloc !11524
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12190
  call void @llvm.dbg.value(metadata i32 %4, metadata !11521, metadata !DIExpression()) #23, !dbg !12192
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !12192
  call void @llvm.dbg.value(metadata i32 %4, metadata !11515, metadata !DIExpression()) #23, !dbg !12188
  call void @llvm.dbg.value(metadata i32 %4, metadata !12184, metadata !DIExpression()), !dbg !12187
  call void @llvm.dbg.value(metadata i32 undef, metadata !12182, metadata !DIExpression()), !dbg !12187
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12193
  br i1 %5, label %6, label %10, !dbg !12197

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11678, metadata !DIExpression()) #23, !dbg !12198
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12201
  %8 = load i8, i8* %7, align 1, !dbg !12202
  %9 = and i8 %8, 127, !dbg !12202
  store i8 %9, i8* %7, align 1, !dbg !12202
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11686, metadata !DIExpression()) #23, !dbg !12203
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12205
  br label %10, !dbg !12206

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #25, !dbg !12207
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12208
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !12209
  %13 = zext i1 %12 to i32, !dbg !12209
  tail call fastcc void @update_cache(i32 noundef %13) #25, !dbg !12210
  call void @llvm.dbg.value(metadata i32 %4, metadata !11536, metadata !DIExpression()) #23, !dbg !12211
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !12211
  call void @llvm.dbg.value(metadata i32 %4, metadata !11544, metadata !DIExpression()) #23, !dbg !12213
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12215, !srcloc !11550
  call void @llvm.dbg.value(metadata i32 1, metadata !12182, metadata !DIExpression()), !dbg !12187
  call void @llvm.dbg.value(metadata i32 undef, metadata !12182, metadata !DIExpression()), !dbg !12187
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12216
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !12218
  br i1 %15, label %16, label %17, !dbg !12219

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !12220
  br label %17, !dbg !12222

17:                                               ; preds = %16, %10
  ret void, !dbg !12223
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12224 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12226, metadata !DIExpression()), !dbg !12227
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12228
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !12229
  ret i32 %3, !dbg !12230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12231 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12233, metadata !DIExpression()), !dbg !12234
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12235
  %3 = load i8, i8* %2, align 1, !dbg !12236
  %4 = or i8 %3, 16, !dbg !12236
  store i8 %4, i8* %2, align 1, !dbg !12236
  ret void, !dbg !12237
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !12238 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12239, !srcloc !11524
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12239
  call void @llvm.dbg.value(metadata i32 %2, metadata !11521, metadata !DIExpression()) #23, !dbg !12241
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !12241
  tail call void @z_reschedule_irqlock(i32 noundef %2) #25, !dbg !12242
  ret void, !dbg !12243
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !12244 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12246, metadata !DIExpression()), !dbg !12247
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #25, !dbg !12248
  br i1 %2, label %3, label %5, !dbg !12250

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !12251
  br label %6, !dbg !12253

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !11544, metadata !DIExpression()) #23, !dbg !12254
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !12257, !srcloc !11550
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !12258
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12259 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12261, metadata !DIExpression()), !dbg !12263
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !12264
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12266, !srcloc !11524
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12266
  call void @llvm.dbg.value(metadata i32 %3, metadata !11521, metadata !DIExpression()) #23, !dbg !12268
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !12268
  call void @llvm.dbg.value(metadata i32 %3, metadata !11515, metadata !DIExpression()) #23, !dbg !12264
  call void @llvm.dbg.value(metadata i32 %3, metadata !12262, metadata !DIExpression()), !dbg !12263
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #25, !dbg !12269
  br i1 %4, label %6, label %5, !dbg !12271

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11536, metadata !DIExpression()) #23, !dbg !12272
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !12272
  call void @llvm.dbg.value(metadata i32 %3, metadata !11544, metadata !DIExpression()) #23, !dbg !12275
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12277, !srcloc !11550
  br label %8, !dbg !12278

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !12279
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #25, !dbg !12280
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !12281
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #25, !dbg !12281
  br label %8, !dbg !12282

8:                                                ; preds = %6, %5
  ret void, !dbg !12282
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !12283 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12285, metadata !DIExpression()), !dbg !12286
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12287
  %3 = load i8, i8* %2, align 1, !dbg !12287
  %4 = and i8 %3, 16, !dbg !12288
  %5 = icmp ne i8 %4, 0, !dbg !12289
  ret i1 %5, !dbg !12290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12291 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12293, metadata !DIExpression()), !dbg !12294
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12295
  %3 = load i8, i8* %2, align 1, !dbg !12296
  %4 = and i8 %3, -17, !dbg !12296
  store i8 %4, i8* %2, align 1, !dbg !12296
  ret void, !dbg !12297
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12298 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12308, metadata !DIExpression()), !dbg !12312
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12306, metadata !DIExpression()), !dbg !12312
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12307, metadata !DIExpression()), !dbg !12312
  call void @llvm.dbg.value(metadata i32 0, metadata !12309, metadata !DIExpression()), !dbg !12313
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !12314
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12316, !srcloc !11524
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !12316
  call void @llvm.dbg.value(metadata i32 %5, metadata !11521, metadata !DIExpression()) #23, !dbg !12318
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !12318
  call void @llvm.dbg.value(metadata i32 %5, metadata !11515, metadata !DIExpression()) #23, !dbg !12314
  call void @llvm.dbg.value(metadata i32 %5, metadata !12311, metadata !DIExpression()), !dbg !12313
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()), !dbg !12313
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !12319
  call void @llvm.dbg.value(metadata i32 %5, metadata !11536, metadata !DIExpression()) #23, !dbg !12322
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !12322
  call void @llvm.dbg.value(metadata i32 %5, metadata !11544, metadata !DIExpression()) #23, !dbg !12324
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #23, !dbg !12326, !srcloc !11550
  call void @llvm.dbg.value(metadata i32 1, metadata !12309, metadata !DIExpression()), !dbg !12313
  call void @llvm.dbg.value(metadata i32 undef, metadata !12309, metadata !DIExpression()), !dbg !12313
  ret void, !dbg !12327
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !12328 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12332, metadata !DIExpression()), !dbg !12333
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12330, metadata !DIExpression()), !dbg !12333
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12331, metadata !DIExpression()), !dbg !12333
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #25, !dbg !12334
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #25, !dbg !12335
  ret void, !dbg !12336
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !12337 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12341, metadata !DIExpression()), !dbg !12343
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12342, metadata !DIExpression()), !dbg !12343
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #25, !dbg !12344
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #25, !dbg !12345
  %3 = icmp eq %union.anon* %1, null, !dbg !12346
  br i1 %3, label %21, label %4, !dbg !12348

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12349
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !12351
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !12352
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !11709, metadata !DIExpression()) #23, !dbg !12353
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11715, metadata !DIExpression()) #23, !dbg !12353
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #24, !dbg !12355
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !11716, metadata !DIExpression()) #23, !dbg !12353
  %8 = icmp eq %struct._dnode* %7, null, !dbg !12356
  br i1 %8, label %19, label %9, !dbg !12355

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !11716, metadata !DIExpression()) #23, !dbg !12353
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !12357
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !11716, metadata !DIExpression()) #23, !dbg !12353
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #24, !dbg !12358
  %13 = icmp sgt i32 %12, 0, !dbg !12359
  br i1 %13, label %14, label %16, !dbg !12360

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12361
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #24, !dbg !12362
  br label %21, !dbg !12363

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #24, !dbg !12356
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !11716, metadata !DIExpression()) #23, !dbg !12353
  %18 = icmp eq %struct._dnode* %17, null, !dbg !12356
  br i1 %18, label %19, label %9, !dbg !12355, !llvm.loop !12364

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !12366
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #24, !dbg !12367
  br label %21, !dbg !12368

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !12369
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12370 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12375, metadata !DIExpression()), !dbg !12376
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12374, metadata !DIExpression()), !dbg !12376
  %4 = icmp eq i64 %3, -1, !dbg !12377
  br i1 %4, label %6, label %5, !dbg !12379

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.124(%struct.k_thread* noundef %0, [1 x i64] %1) #25, !dbg !12380
  br label %6, !dbg !12382

6:                                                ; preds = %5, %2
  ret void, !dbg !12383
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.124(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12384 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12387, metadata !DIExpression()), !dbg !12388
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12386, metadata !DIExpression()), !dbg !12388
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12389
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #24, !dbg !12390
  ret void, !dbg !12391
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !12392 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12394, metadata !DIExpression()), !dbg !12402
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !12403
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !12403
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12395, metadata !DIExpression()), !dbg !12402
  call void @llvm.dbg.value(metadata i32 0, metadata !12396, metadata !DIExpression()), !dbg !12404
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !12405
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12407, !srcloc !11524
  call void @llvm.dbg.value(metadata i32 undef, metadata !11521, metadata !DIExpression()) #23, !dbg !12409
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !12409
  call void @llvm.dbg.value(metadata i32 undef, metadata !11515, metadata !DIExpression()) #23, !dbg !12405
  call void @llvm.dbg.value(metadata i32 undef, metadata !12398, metadata !DIExpression()), !dbg !12404
  call void @llvm.dbg.value(metadata i32 undef, metadata !12396, metadata !DIExpression()), !dbg !12404
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !12410
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !12411
  %7 = load i8, i8* %6, align 1, !dbg !12411
  %8 = and i8 %7, 40, !dbg !12412
  %9 = icmp eq i8 %8, 0, !dbg !12412
  call void @llvm.dbg.value(metadata i1 %9, metadata !12399, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12413
  br i1 %9, label %10, label %17, !dbg !12414

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !12415
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !12415
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !12415
  %14 = icmp eq %union.anon* %13, null, !dbg !12419
  br i1 %14, label %16, label %15, !dbg !12420

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #25, !dbg !12421
  br label %16, !dbg !12423

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.123(%struct.k_thread* noundef nonnull %3) #25, !dbg !12424
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #25, !dbg !12425
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #25, !dbg !12426
  br label %17, !dbg !12427

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !12407
  call void @llvm.dbg.value(metadata i32 %18, metadata !11521, metadata !DIExpression()) #23, !dbg !12409
  call void @llvm.dbg.value(metadata i32 %18, metadata !11515, metadata !DIExpression()) #23, !dbg !12405
  call void @llvm.dbg.value(metadata i32 %18, metadata !12398, metadata !DIExpression()), !dbg !12404
  call void @llvm.dbg.value(metadata i32 undef, metadata !11536, metadata !DIExpression()) #23, !dbg !12428
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !12428
  call void @llvm.dbg.value(metadata i32 undef, metadata !11544, metadata !DIExpression()) #23, !dbg !12430
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !12432, !srcloc !11550
  call void @llvm.dbg.value(metadata i32 1, metadata !12396, metadata !DIExpression()), !dbg !12404
  call void @llvm.dbg.value(metadata i32 undef, metadata !12396, metadata !DIExpression()), !dbg !12404
  ret void, !dbg !12433
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12434 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12436, metadata !DIExpression()), !dbg !12437
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !12438
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #25, !dbg !12439
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !12440
  store %union.anon* null, %union.anon** %2, align 8, !dbg !12441
  ret void, !dbg !12442
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12443 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12445, metadata !DIExpression()), !dbg !12446
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12447
  %3 = load i8, i8* %2, align 1, !dbg !12448
  %4 = and i8 %3, -3, !dbg !12448
  store i8 %4, i8* %2, align 1, !dbg !12448
  ret void, !dbg !12449
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12450 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12452, metadata !DIExpression()), !dbg !12453
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #25, !dbg !12454
  br i1 %2, label %3, label %7, !dbg !12456

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11678, metadata !DIExpression()) #23, !dbg !12457
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12460
  %5 = load i8, i8* %4, align 1, !dbg !12461
  %6 = and i8 %5, 127, !dbg !12461
  store i8 %6, i8* %4, align 1, !dbg !12461
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11686, metadata !DIExpression()) #23, !dbg !12462
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12464
  br label %7, !dbg !12465

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12466
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !12467
  %10 = zext i1 %9 to i32, !dbg !12467
  tail call fastcc void @update_cache(i32 noundef %10) #25, !dbg !12468
  ret void, !dbg !12469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12470 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12472, metadata !DIExpression()), !dbg !12473
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12474
  %3 = load i8, i8* %2, align 1, !dbg !12475
  %4 = or i8 %3, 2, !dbg !12475
  store i8 %4, i8* %2, align 1, !dbg !12475
  ret void, !dbg !12476
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #22 !dbg !12477 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12479, metadata !DIExpression()), !dbg !12483
  call void @llvm.dbg.value(metadata i32 0, metadata !12480, metadata !DIExpression()), !dbg !12484
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !12485
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12487, !srcloc !11524
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12487
  call void @llvm.dbg.value(metadata i32 %3, metadata !11521, metadata !DIExpression()) #23, !dbg !12489
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !12489
  call void @llvm.dbg.value(metadata i32 %3, metadata !11515, metadata !DIExpression()) #23, !dbg !12485
  call void @llvm.dbg.value(metadata i32 %3, metadata !12482, metadata !DIExpression()), !dbg !12484
  call void @llvm.dbg.value(metadata i32 undef, metadata !12480, metadata !DIExpression()), !dbg !12484
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !12490
  call void @llvm.dbg.value(metadata i32 %3, metadata !11536, metadata !DIExpression()) #23, !dbg !12493
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !12493
  call void @llvm.dbg.value(metadata i32 %3, metadata !11544, metadata !DIExpression()) #23, !dbg !12495
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12497, !srcloc !11550
  call void @llvm.dbg.value(metadata i32 1, metadata !12480, metadata !DIExpression()), !dbg !12484
  call void @llvm.dbg.value(metadata i32 undef, metadata !12480, metadata !DIExpression()), !dbg !12484
  ret void, !dbg !12498
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !12499 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12505, metadata !DIExpression()), !dbg !12510
  call void @llvm.dbg.value(metadata i32 %0, metadata !12503, metadata !DIExpression()), !dbg !12510
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !12504, metadata !DIExpression()), !dbg !12510
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12511
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #25, !dbg !12512
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12513
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !12514
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #25, !dbg !12515
  call void @llvm.dbg.value(metadata i32 %6, metadata !12506, metadata !DIExpression()), !dbg !12510
  call void @llvm.dbg.value(metadata i32 0, metadata !12507, metadata !DIExpression()), !dbg !12516
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !12517
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12519, !srcloc !11524
  call void @llvm.dbg.value(metadata i32 undef, metadata !11521, metadata !DIExpression()) #23, !dbg !12521
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !12521
  call void @llvm.dbg.value(metadata i32 undef, metadata !11515, metadata !DIExpression()) #23, !dbg !12517
  call void @llvm.dbg.value(metadata i32 undef, metadata !12509, metadata !DIExpression()), !dbg !12516
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()), !dbg !12516
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !12522
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12526
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !12527
  br i1 %10, label %11, label %12, !dbg !12528

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !12529
  br label %12, !dbg !12531

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !12519
  call void @llvm.dbg.value(metadata i32 %13, metadata !11521, metadata !DIExpression()) #23, !dbg !12521
  call void @llvm.dbg.value(metadata i32 %13, metadata !11515, metadata !DIExpression()) #23, !dbg !12517
  call void @llvm.dbg.value(metadata i32 %13, metadata !12509, metadata !DIExpression()), !dbg !12516
  call void @llvm.dbg.value(metadata i32 undef, metadata !11536, metadata !DIExpression()) #23, !dbg !12532
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !12532
  call void @llvm.dbg.value(metadata i32 undef, metadata !11544, metadata !DIExpression()) #23, !dbg !12534
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !12536, !srcloc !11550
  call void @llvm.dbg.value(metadata i32 1, metadata !12507, metadata !DIExpression()), !dbg !12516
  call void @llvm.dbg.value(metadata i32 undef, metadata !12507, metadata !DIExpression()), !dbg !12516
  ret i32 %6, !dbg !12537
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !12538 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12543, metadata !DIExpression()), !dbg !12546
  call void @llvm.dbg.value(metadata i64 undef, metadata !12545, metadata !DIExpression()), !dbg !12546
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12542, metadata !DIExpression()), !dbg !12546
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !12544, metadata !DIExpression()), !dbg !12546
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12547
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !12548
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !12549
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12551, !srcloc !11524
  call void @llvm.dbg.value(metadata i32 undef, metadata !11521, metadata !DIExpression()) #23, !dbg !12553
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !12553
  call void @llvm.dbg.value(metadata i32 undef, metadata !11515, metadata !DIExpression()) #23, !dbg !12549
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12554
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !12555
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !12120, metadata !DIExpression()) #23, !dbg !12556
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12125, metadata !DIExpression()) #23, !dbg !12556
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #24, !dbg !12558
  ret i32 %9, !dbg !12559
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12560 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12564, metadata !DIExpression()), !dbg !12569
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12565, metadata !DIExpression()), !dbg !12569
  call void @llvm.dbg.value(metadata i32 0, metadata !12566, metadata !DIExpression()), !dbg !12570
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !12571
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12573, !srcloc !11524
  call void @llvm.dbg.value(metadata i32 undef, metadata !11521, metadata !DIExpression()) #23, !dbg !12575
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !12575
  call void @llvm.dbg.value(metadata i32 undef, metadata !11515, metadata !DIExpression()) #23, !dbg !12571
  call void @llvm.dbg.value(metadata i32 undef, metadata !12568, metadata !DIExpression()), !dbg !12570
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12565, metadata !DIExpression()), !dbg !12569
  call void @llvm.dbg.value(metadata i32 undef, metadata !12566, metadata !DIExpression()), !dbg !12570
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !12576
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12565, metadata !DIExpression()), !dbg !12569
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !12579
  br i1 %5, label %7, label %6, !dbg !12581

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !12582
  br label %7, !dbg !12584

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !12573
  call void @llvm.dbg.value(metadata i32 %8, metadata !11521, metadata !DIExpression()) #23, !dbg !12575
  call void @llvm.dbg.value(metadata i32 %8, metadata !11515, metadata !DIExpression()) #23, !dbg !12571
  call void @llvm.dbg.value(metadata i32 %8, metadata !12568, metadata !DIExpression()), !dbg !12570
  call void @llvm.dbg.value(metadata i32 undef, metadata !11536, metadata !DIExpression()) #23, !dbg !12585
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !12585
  call void @llvm.dbg.value(metadata i32 undef, metadata !11544, metadata !DIExpression()) #23, !dbg !12587
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !12589, !srcloc !11550
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12565, metadata !DIExpression()), !dbg !12569
  call void @llvm.dbg.value(metadata i32 undef, metadata !12566, metadata !DIExpression()), !dbg !12570
  ret %struct.k_thread* %4, !dbg !12590
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12591 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12593, metadata !DIExpression()), !dbg !12598
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12594, metadata !DIExpression()), !dbg !12598
  call void @llvm.dbg.value(metadata i32 0, metadata !12595, metadata !DIExpression()), !dbg !12599
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !12600
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12602, !srcloc !11524
  call void @llvm.dbg.value(metadata i32 undef, metadata !11521, metadata !DIExpression()) #23, !dbg !12604
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !12604
  call void @llvm.dbg.value(metadata i32 undef, metadata !11515, metadata !DIExpression()) #23, !dbg !12600
  call void @llvm.dbg.value(metadata i32 undef, metadata !12597, metadata !DIExpression()), !dbg !12599
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12594, metadata !DIExpression()), !dbg !12598
  call void @llvm.dbg.value(metadata i32 undef, metadata !12595, metadata !DIExpression()), !dbg !12599
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #25, !dbg !12605
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12594, metadata !DIExpression()), !dbg !12598
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !12608
  br i1 %5, label %8, label %6, !dbg !12610

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !12611
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #25, !dbg !12613
  br label %8, !dbg !12614

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !12602
  call void @llvm.dbg.value(metadata i32 %9, metadata !11521, metadata !DIExpression()) #23, !dbg !12604
  call void @llvm.dbg.value(metadata i32 %9, metadata !11515, metadata !DIExpression()) #23, !dbg !12600
  call void @llvm.dbg.value(metadata i32 %9, metadata !12597, metadata !DIExpression()), !dbg !12599
  call void @llvm.dbg.value(metadata i32 undef, metadata !11536, metadata !DIExpression()) #23, !dbg !12615
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !12615
  call void @llvm.dbg.value(metadata i32 undef, metadata !11544, metadata !DIExpression()) #23, !dbg !12617
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !12619, !srcloc !11550
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12594, metadata !DIExpression()), !dbg !12598
  call void @llvm.dbg.value(metadata i32 undef, metadata !12595, metadata !DIExpression()), !dbg !12599
  ret %struct.k_thread* %4, !dbg !12620
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12621 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12623, metadata !DIExpression()), !dbg !12624
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12479, metadata !DIExpression()) #23, !dbg !12625
  call void @llvm.dbg.value(metadata i32 0, metadata !12480, metadata !DIExpression()) #23, !dbg !12627
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !12628
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12630, !srcloc !11524
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !12630
  call void @llvm.dbg.value(metadata i32 %3, metadata !11521, metadata !DIExpression()) #23, !dbg !12632
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !12632
  call void @llvm.dbg.value(metadata i32 %3, metadata !11515, metadata !DIExpression()) #23, !dbg !12628
  call void @llvm.dbg.value(metadata i32 %3, metadata !12482, metadata !DIExpression()) #23, !dbg !12627
  call void @llvm.dbg.value(metadata i32 undef, metadata !12480, metadata !DIExpression()) #23, !dbg !12627
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !12633
  call void @llvm.dbg.value(metadata i32 %3, metadata !11536, metadata !DIExpression()) #23, !dbg !12634
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !12634
  call void @llvm.dbg.value(metadata i32 %3, metadata !11544, metadata !DIExpression()) #23, !dbg !12636
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !12638, !srcloc !11550
  call void @llvm.dbg.value(metadata i32 1, metadata !12480, metadata !DIExpression()) #23, !dbg !12627
  call void @llvm.dbg.value(metadata i32 undef, metadata !12480, metadata !DIExpression()) #23, !dbg !12627
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !12639
  ret void, !dbg !12640
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12641 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12643, metadata !DIExpression()), !dbg !12649
  call void @llvm.dbg.value(metadata i32 %1, metadata !12644, metadata !DIExpression()), !dbg !12649
  call void @llvm.dbg.value(metadata i8 0, metadata !12645, metadata !DIExpression()), !dbg !12649
  call void @llvm.dbg.value(metadata i32 0, metadata !12646, metadata !DIExpression()), !dbg !12650
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !12651
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12653, !srcloc !11524
  call void @llvm.dbg.value(metadata i32 undef, metadata !11521, metadata !DIExpression()) #23, !dbg !12655
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !12655
  call void @llvm.dbg.value(metadata i32 undef, metadata !11515, metadata !DIExpression()) #23, !dbg !12651
  call void @llvm.dbg.value(metadata i32 undef, metadata !12648, metadata !DIExpression()), !dbg !12650
  call void @llvm.dbg.value(metadata i8 poison, metadata !12645, metadata !DIExpression()), !dbg !12649
  call void @llvm.dbg.value(metadata i32 undef, metadata !12646, metadata !DIExpression()), !dbg !12650
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #25, !dbg !12656
  call void @llvm.dbg.value(metadata i1 %6, metadata !12645, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12649
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !12659

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11678, metadata !DIExpression()) #23, !dbg !12660
  %11 = load i8, i8* %4, align 1, !dbg !12666
  %12 = and i8 %11, 127, !dbg !12666
  store i8 %12, i8* %4, align 1, !dbg !12666
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11686, metadata !DIExpression()) #23, !dbg !12667
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !12669
  store i8 %9, i8* %8, align 2, !dbg !12670
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11695, metadata !DIExpression()) #23, !dbg !12671
  %13 = load i8, i8* %4, align 1, !dbg !12673
  %14 = or i8 %13, -128, !dbg !12673
  store i8 %14, i8* %4, align 1, !dbg !12673
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11702, metadata !DIExpression()) #23, !dbg !12674
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11709, metadata !DIExpression()) #23, !dbg !12676
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11715, metadata !DIExpression()) #23, !dbg !12676
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !12678
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !11716, metadata !DIExpression()) #23, !dbg !12676
  %16 = icmp eq %struct._dnode* %15, null, !dbg !12679
  br i1 %16, label %26, label %17, !dbg !12678

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !11716, metadata !DIExpression()) #23, !dbg !12676
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !12680
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !11716, metadata !DIExpression()) #23, !dbg !12676
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #24, !dbg !12681
  %21 = icmp sgt i32 %20, 0, !dbg !12682
  br i1 %21, label %22, label %23, !dbg !12683

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #24, !dbg !12684
  br label %27, !dbg !12685

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #24, !dbg !12679
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !11716, metadata !DIExpression()) #23, !dbg !12676
  %25 = icmp eq %struct._dnode* %24, null, !dbg !12679
  br i1 %25, label %26, label %17, !dbg !12678, !llvm.loop !12686

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #24, !dbg !12688
  br label %27, !dbg !12689

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !12690
  br label %29, !dbg !12691

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !12692
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !12653
  call void @llvm.dbg.value(metadata i32 %30, metadata !11521, metadata !DIExpression()) #23, !dbg !12655
  call void @llvm.dbg.value(metadata i32 %30, metadata !11515, metadata !DIExpression()) #23, !dbg !12651
  call void @llvm.dbg.value(metadata i32 %30, metadata !12648, metadata !DIExpression()), !dbg !12650
  call void @llvm.dbg.value(metadata i32 undef, metadata !11536, metadata !DIExpression()) #23, !dbg !12694
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !12694
  call void @llvm.dbg.value(metadata i32 undef, metadata !11544, metadata !DIExpression()) #23, !dbg !12696
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #23, !dbg !12698, !srcloc !11550
  call void @llvm.dbg.value(metadata i8 poison, metadata !12645, metadata !DIExpression()), !dbg !12649
  call void @llvm.dbg.value(metadata i32 undef, metadata !12646, metadata !DIExpression()), !dbg !12650
  ret i1 %6, !dbg !12699
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12700 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12704, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.value(metadata i32 %1, metadata !12705, metadata !DIExpression()), !dbg !12707
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !12708
  call void @llvm.dbg.value(metadata i1 %3, metadata !12706, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12707
  br i1 %3, label %4, label %12, !dbg !12709

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12711
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !12712
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !12712
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !12712
  %9 = load i8, i8* %8, align 1, !dbg !12712
  %10 = icmp eq i8 %9, 0, !dbg !12713
  br i1 %10, label %11, label %12, !dbg !12714

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !12715
  br label %12, !dbg !12717

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !12718
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !12719 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12721, metadata !DIExpression()), !dbg !12724
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !12725
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12727, !srcloc !11524
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12727
  call void @llvm.dbg.value(metadata i32 %2, metadata !11521, metadata !DIExpression()) #23, !dbg !12729
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !12729
  call void @llvm.dbg.value(metadata i32 %2, metadata !11515, metadata !DIExpression()) #23, !dbg !12725
  call void @llvm.dbg.value(metadata i32 %2, metadata !12723, metadata !DIExpression()), !dbg !12724
  call void @llvm.dbg.value(metadata i32 undef, metadata !12721, metadata !DIExpression()), !dbg !12724
  tail call fastcc void @z_sched_lock() #25, !dbg !12730
  call void @llvm.dbg.value(metadata i32 %2, metadata !11536, metadata !DIExpression()) #23, !dbg !12733
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !12733
  call void @llvm.dbg.value(metadata i32 %2, metadata !11544, metadata !DIExpression()) #23, !dbg !12735
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12737, !srcloc !11550
  call void @llvm.dbg.value(metadata i32 1, metadata !12721, metadata !DIExpression()), !dbg !12724
  call void @llvm.dbg.value(metadata i32 undef, metadata !12721, metadata !DIExpression()), !dbg !12724
  ret void, !dbg !12738
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !12739 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12740
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !12741
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !12741
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !12741
  %5 = load i8, i8* %4, align 1, !dbg !12742
  %6 = add i8 %5, -1, !dbg !12742
  store i8 %6, i8* %4, align 1, !dbg !12742
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12743, !srcloc !12745
  ret void, !dbg !12746
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !12747 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12749, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !12753
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12755, !srcloc !11524
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !12755
  call void @llvm.dbg.value(metadata i32 %2, metadata !11521, metadata !DIExpression()) #23, !dbg !12757
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !12757
  call void @llvm.dbg.value(metadata i32 %2, metadata !11515, metadata !DIExpression()) #23, !dbg !12753
  call void @llvm.dbg.value(metadata i32 %2, metadata !12751, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata i32 undef, metadata !12749, metadata !DIExpression()), !dbg !12752
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12758
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !12761
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !12761
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12761
  %7 = load i8, i8* %6, align 1, !dbg !12762
  %8 = add i8 %7, 1, !dbg !12762
  store i8 %8, i8* %6, align 1, !dbg !12762
  tail call fastcc void @update_cache(i32 noundef 0) #25, !dbg !12763
  call void @llvm.dbg.value(metadata i32 %2, metadata !11536, metadata !DIExpression()) #23, !dbg !12764
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !12764
  call void @llvm.dbg.value(metadata i32 %2, metadata !11544, metadata !DIExpression()) #23, !dbg !12766
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !12768, !srcloc !11550
  call void @llvm.dbg.value(metadata i32 1, metadata !12749, metadata !DIExpression()), !dbg !12752
  call void @llvm.dbg.value(metadata i32 undef, metadata !12749, metadata !DIExpression()), !dbg !12752
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !12769
  ret void, !dbg !12770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #4 !dbg !12771 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12772
  ret %struct.k_thread* %1, !dbg !12773
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #4 !dbg !12774 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !12778, metadata !DIExpression()), !dbg !12783
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !12779, metadata !DIExpression()), !dbg !12783
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !12784
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !12780, metadata !DIExpression()), !dbg !12783
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !12785
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12781, metadata !DIExpression()), !dbg !12783
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #25, !dbg !12786
  call void @llvm.dbg.value(metadata i32 %5, metadata !12782, metadata !DIExpression()), !dbg !12783
  %6 = icmp sgt i32 %5, 0, !dbg !12787
  br i1 %6, label %17, label %7, !dbg !12789

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !12790
  br i1 %8, label %17, label %9, !dbg !12792

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !12793
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !12793
  %12 = load i32, i32* %11, align 8, !dbg !12793
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !12795
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !12795
  %15 = load i32, i32* %14, align 8, !dbg !12795
  %16 = icmp ult i32 %12, %15, !dbg !12796
  br label %17, !dbg !12797

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !12798
  ret i1 %18, !dbg !12799
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !12800 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12817, metadata !DIExpression()), !dbg !12832
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12818, metadata !DIExpression()), !dbg !12832
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !12833
  %5 = load i32, i32* %4, align 4, !dbg !12834
  %6 = add nsw i32 %5, 1, !dbg !12834
  store i32 %6, i32* %4, align 4, !dbg !12834
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !12835
  store i32 %5, i32* %7, align 8, !dbg !12836
  %8 = load i32, i32* %4, align 4, !dbg !12837
  %9 = icmp eq i32 %8, 0, !dbg !12838
  br i1 %9, label %10, label %32, !dbg !12839

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !12840
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #23, !dbg !12840
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !12820, metadata !DIExpression()), !dbg !12840
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12840
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !12840
  %14 = load i32, i32* %13, align 4, !dbg !12840
  %15 = shl i32 %14, 2, !dbg !12840
  %16 = alloca i8, i32 %15, align 8, !dbg !12840
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !12840
  store i8* %16, i8** %17, align 4, !dbg !12840
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !12840
  %19 = alloca i8, i32 %14, align 8, !dbg !12840
  store i8* %19, i8** %18, align 4, !dbg !12840
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !12840
  store i32 -1, i32* %20, align 4, !dbg !12840
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !12841
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !12829, metadata !DIExpression()), !dbg !12842
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !12819, metadata !DIExpression()), !dbg !12832
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !12843
  br i1 %22, label %23, label %24, !dbg !12840

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #23, !dbg !12843
  br label %32, !dbg !12844

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !12819, metadata !DIExpression()), !dbg !12832
  %26 = load i32, i32* %4, align 4, !dbg !12845
  %27 = add nsw i32 %26, 1, !dbg !12845
  store i32 %27, i32* %4, align 4, !dbg !12845
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !12847
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !12847
  store i32 %26, i32* %29, align 8, !dbg !12848
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #24, !dbg !12841
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !12829, metadata !DIExpression()), !dbg !12842
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !12819, metadata !DIExpression()), !dbg !12832
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !12843
  br i1 %31, label %23, label %24, !dbg !12840, !llvm.loop !12849

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12851
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !12852
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #24, !dbg !12853
  ret void, !dbg !12854
}

; Function Attrs: optsize
declare !dbg !12855 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !12860 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !12863 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12865, metadata !DIExpression()), !dbg !12867
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !12866, metadata !DIExpression()), !dbg !12867
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12868
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !12869
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #24, !dbg !12870
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !12871
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !12871
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !12873
  br i1 %7, label %8, label %10, !dbg !12874

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !12875
  store i32 0, i32* %9, align 4, !dbg !12877
  br label %10, !dbg !12878

10:                                               ; preds = %8, %2
  ret void, !dbg !12879
}

; Function Attrs: optsize
declare !dbg !12880 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !12881 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !12885, metadata !DIExpression()), !dbg !12888
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12886, metadata !DIExpression()), !dbg !12888
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !12889
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #25, !dbg !12890
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !12887, metadata !DIExpression()), !dbg !12888
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !12886, metadata !DIExpression()), !dbg !12888
  ret %struct.k_thread* %4, !dbg !12891
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !12892 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !12896, metadata !DIExpression()), !dbg !12897
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #24, !dbg !12898
  ret %struct.rbnode* %2, !dbg !12899
}

; Function Attrs: optsize
declare !dbg !12900 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !12903 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !12913, metadata !DIExpression()), !dbg !12917
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !12918
  %3 = load i32, i32* %2, align 4, !dbg !12918
  %4 = icmp eq i32 %3, 0, !dbg !12920
  br i1 %4, label %10, label %5, !dbg !12921

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !12914, metadata !DIExpression()), !dbg !12917
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !12922, !range !5588
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !12923
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !12915, metadata !DIExpression()), !dbg !12917
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #25, !dbg !12924
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !12916, metadata !DIExpression()), !dbg !12917
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12914, metadata !DIExpression()), !dbg !12917
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !12917
  ret %struct.k_thread* %11, !dbg !12925
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !12926 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12930, metadata !DIExpression()), !dbg !12933
  call void @llvm.dbg.value(metadata i32 0, metadata !12931, metadata !DIExpression()), !dbg !12933
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !12934
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12932, metadata !DIExpression()), !dbg !12933
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !12935
  br i1 %3, label %8, label %4, !dbg !12936

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !12937
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !12939
  call void @llvm.dbg.value(metadata i32 1, metadata !12931, metadata !DIExpression()), !dbg !12933
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !12934
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !12932, metadata !DIExpression()), !dbg !12933
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !12935
  br i1 %7, label %8, label %4, !dbg !12936, !llvm.loop !12940

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !12933
  ret i32 %9, !dbg !12942
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #4 !dbg !12943 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !12945, metadata !DIExpression()), !dbg !12946
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !12947
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #25, !dbg !12948
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !12949
  ret %struct.k_thread* %4, !dbg !12950
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #3 !dbg !12951 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !12960, metadata !DIExpression()), !dbg !12961
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !12962
  tail call fastcc void @sys_dlist_init.131(%struct._dnode* noundef nonnull %2) #25, !dbg !12963
  ret void, !dbg !12964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.131(%struct._dnode* noundef %0) unnamed_addr #3 !dbg !12965 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12969, metadata !DIExpression()), !dbg !12970
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12971
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12972
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12973
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12974
  ret void, !dbg !12975
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !12976 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #25, !dbg !12977
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #25, !dbg !12978
  ret void, !dbg !12979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #4 !dbg !12980 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12985, metadata !DIExpression()), !dbg !12986
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !12987
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !12987
  %4 = load i8, i8* %3, align 2, !dbg !12987
  %5 = sext i8 %4 to i32, !dbg !12988
  ret i32 %5, !dbg !12989
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !12990 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12994, metadata !DIExpression()), !dbg !12997
  call void @llvm.dbg.value(metadata i32 %1, metadata !12995, metadata !DIExpression()), !dbg !12997
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12996, metadata !DIExpression()), !dbg !12997
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #25, !dbg !12998
  ret void, !dbg !12999
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !13000 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #25, !dbg !13001
  br i1 %1, label %8, label %2, !dbg !13002

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #24, !dbg !13003
  br i1 %3, label %8, label %4, !dbg !13004

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13005
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #25, !dbg !13006
  %7 = xor i1 %6, true, !dbg !13004
  br label %8, !dbg !13004

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !13007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #4 !dbg !13008 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !13009, !range !5021
  %2 = icmp eq i8 %1, 0, !dbg !13009
  ret i1 %2, !dbg !13010
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !13011 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !13014
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13016, !srcloc !11524
  call void @llvm.dbg.value(metadata i32 undef, metadata !11521, metadata !DIExpression()) #23, !dbg !13018
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !13018
  call void @llvm.dbg.value(metadata i32 undef, metadata !11515, metadata !DIExpression()) #23, !dbg !13014
  call void @llvm.dbg.value(metadata i32 undef, metadata !13013, metadata !DIExpression()), !dbg !13019
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13020
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11678, metadata !DIExpression()) #23, !dbg !13023
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !13025
  %4 = load i8, i8* %3, align 1, !dbg !13026
  %5 = and i8 %4, 127, !dbg !13026
  store i8 %5, i8* %3, align 1, !dbg !13026
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !11686, metadata !DIExpression()) #23, !dbg !13027
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #24, !dbg !13029
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13030
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11695, metadata !DIExpression()) #23, !dbg !13031
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !13033
  %8 = load i8, i8* %7, align 1, !dbg !13034
  %9 = or i8 %8, -128, !dbg !13034
  store i8 %9, i8* %7, align 1, !dbg !13034
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11702, metadata !DIExpression()) #23, !dbg !13035
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !11709, metadata !DIExpression()) #23, !dbg !13037
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !11715, metadata !DIExpression()) #23, !dbg !13037
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #24, !dbg !13039
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !11716, metadata !DIExpression()) #23, !dbg !13037
  %11 = icmp eq %struct._dnode* %10, null, !dbg !13040
  br i1 %11, label %22, label %12, !dbg !13039

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !11716, metadata !DIExpression()) #23, !dbg !13037
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !13041
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !11716, metadata !DIExpression()) #23, !dbg !13037
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #24, !dbg !13042
  %16 = icmp sgt i32 %15, 0, !dbg !13043
  br i1 %16, label %17, label %19, !dbg !13044

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13045
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #24, !dbg !13046
  br label %24, !dbg !13047

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #24, !dbg !13040
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !11716, metadata !DIExpression()) #23, !dbg !13037
  %21 = icmp eq %struct._dnode* %20, null, !dbg !13040
  br i1 %21, label %22, label %12, !dbg !13039, !llvm.loop !13048

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !13050
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #24, !dbg !13051
  br label %24, !dbg !13052

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !13016
  call void @llvm.dbg.value(metadata i32 %25, metadata !11521, metadata !DIExpression()) #23, !dbg !13018
  call void @llvm.dbg.value(metadata i32 %25, metadata !11515, metadata !DIExpression()) #23, !dbg !13014
  call void @llvm.dbg.value(metadata i32 %25, metadata !13013, metadata !DIExpression()), !dbg !13019
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13053
  call void @llvm.dbg.value(metadata i32 undef, metadata !12120, metadata !DIExpression()) #23, !dbg !13054
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12125, metadata !DIExpression()) #23, !dbg !13054
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #24, !dbg !13056
  ret void, !dbg !13057
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !13058 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !13062, metadata !DIExpression()), !dbg !13065
  %3 = icmp eq i64 %2, -1, !dbg !13066
  br i1 %3, label %4, label %6, !dbg !13068

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13069
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #25, !dbg !13071
  br label %11, !dbg !13072

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !13063, metadata !DIExpression()), !dbg !13065
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #25, !dbg !13073
  %8 = sext i32 %7 to i64, !dbg !13073
  call void @llvm.dbg.value(metadata i64 %8, metadata !13063, metadata !DIExpression()), !dbg !13065
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #25, !dbg !13074
  %10 = trunc i64 %9 to i32, !dbg !13074
  call void @llvm.dbg.value(metadata i32 %10, metadata !13064, metadata !DIExpression()), !dbg !13065
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !13065
  ret i32 %12, !dbg !13075
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13076 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13080, metadata !DIExpression()), !dbg !13081
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13082, !srcloc !13084
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #25, !dbg !13085
  ret void, !dbg !13086
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !13087 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13091, metadata !DIExpression()), !dbg !13095
  %2 = icmp eq i64 %0, 0, !dbg !13096
  br i1 %2, label %3, label %4, !dbg !13098

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #25, !dbg !13099
  br label %29, !dbg !13101

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !13093, metadata !DIExpression()), !dbg !13095
  %5 = icmp sgt i64 %0, -3, !dbg !13102
  br i1 %5, label %6, label %10, !dbg !13104

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !13105
  %8 = trunc i64 %0 to i32, !dbg !13107
  %9 = add i32 %7, %8, !dbg !13107
  call void @llvm.dbg.value(metadata i32 %9, metadata !13092, metadata !DIExpression()), !dbg !13095
  br label %13, !dbg !13108

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !13109
  %12 = sub i32 -2, %11, !dbg !13109
  call void @llvm.dbg.value(metadata i32 %12, metadata !13092, metadata !DIExpression()), !dbg !13095
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !13111
  call void @llvm.dbg.value(metadata i32 %14, metadata !13092, metadata !DIExpression()), !dbg !13095
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !13112
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13114, !srcloc !11524
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !13114
  call void @llvm.dbg.value(metadata i32 %16, metadata !11521, metadata !DIExpression()) #23, !dbg !13116
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !13116
  call void @llvm.dbg.value(metadata i32 %16, metadata !11515, metadata !DIExpression()) #23, !dbg !13112
  call void @llvm.dbg.value(metadata i32 %16, metadata !13094, metadata !DIExpression()), !dbg !13095
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13117
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !13118
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #25, !dbg !13119
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13120
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !13121
  tail call fastcc void @z_add_thread_timeout.124(%struct.k_thread* noundef %18, [1 x i64] %19) #25, !dbg !13121
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13122
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #25, !dbg !13123
  call void @llvm.dbg.value(metadata i32 %16, metadata !12120, metadata !DIExpression()) #23, !dbg !13124
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12125, metadata !DIExpression()) #23, !dbg !13124
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #24, !dbg !13126
  %22 = zext i32 %14 to i64, !dbg !13127
  %23 = tail call i32 @sys_clock_tick_get_32() #24, !dbg !13128
  %24 = zext i32 %23 to i64, !dbg !13128
  %25 = sub nsw i64 %22, %24, !dbg !13129
  call void @llvm.dbg.value(metadata i64 %25, metadata !13091, metadata !DIExpression()), !dbg !13095
  %26 = icmp sgt i64 %25, 0, !dbg !13130
  %27 = select i1 %26, i64 %25, i64 0, !dbg !13130
  %28 = trunc i64 %27 to i32, !dbg !13130
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !13095
  ret i32 %30, !dbg !13131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13132 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13134, metadata !DIExpression()), !dbg !13135
  call void @llvm.dbg.value(metadata i64 %0, metadata !11556, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata i32 10000, metadata !11559, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata i32 1000, metadata !11560, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata i8 1, metadata !11561, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata i1 false, metadata !11562, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13136
  call void @llvm.dbg.value(metadata i1 false, metadata !11563, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13136
  call void @llvm.dbg.value(metadata i8 0, metadata !11564, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata i1 false, metadata !11565, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13136
  call void @llvm.dbg.value(metadata i1 true, metadata !11566, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13136
  call void @llvm.dbg.value(metadata i64 0, metadata !11567, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata i64 0, metadata !11567, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.value(metadata i64 %0, metadata !11556, metadata !DIExpression()), !dbg !13136
  %2 = udiv i64 %0, 10, !dbg !13138
  ret i64 %2, !dbg !13142
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !13143 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13144, !srcloc !13146
  tail call void @z_impl_k_yield() #25, !dbg !13147
  ret void, !dbg !13148
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !13149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13153, metadata !DIExpression()), !dbg !13155
  %2 = sext i32 %0 to i64, !dbg !13156
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #25, !dbg !13157
  call void @llvm.dbg.value(metadata i64 %3, metadata !13154, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13155
  %4 = shl i64 %3, 32, !dbg !13158
  %5 = ashr exact i64 %4, 32, !dbg !13158
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #25, !dbg !13159
  call void @llvm.dbg.value(metadata i32 %6, metadata !13154, metadata !DIExpression()), !dbg !13155
  %7 = sext i32 %6 to i64, !dbg !13160
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #25, !dbg !13161
  %9 = trunc i64 %8 to i32, !dbg !13161
  ret i32 %9, !dbg !13162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #12 !dbg !13163 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13165, metadata !DIExpression()), !dbg !13166
  call void @llvm.dbg.value(metadata i64 %0, metadata !11556, metadata !DIExpression()), !dbg !13167
  call void @llvm.dbg.value(metadata i32 1000000, metadata !11559, metadata !DIExpression()), !dbg !13167
  call void @llvm.dbg.value(metadata i32 10000, metadata !11560, metadata !DIExpression()), !dbg !13167
  call void @llvm.dbg.value(metadata i8 1, metadata !11561, metadata !DIExpression()), !dbg !13167
  call void @llvm.dbg.value(metadata i1 false, metadata !11562, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13167
  call void @llvm.dbg.value(metadata i1 true, metadata !11563, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13167
  call void @llvm.dbg.value(metadata i8 0, metadata !11564, metadata !DIExpression()), !dbg !13167
  call void @llvm.dbg.value(metadata i1 false, metadata !11565, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13167
  call void @llvm.dbg.value(metadata i1 true, metadata !11566, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13167
  call void @llvm.dbg.value(metadata i64 0, metadata !11567, metadata !DIExpression()), !dbg !13167
  call void @llvm.dbg.value(metadata i64 0, metadata !11567, metadata !DIExpression()), !dbg !13167
  %2 = add i64 %0, 99, !dbg !13169
  call void @llvm.dbg.value(metadata i64 %2, metadata !11556, metadata !DIExpression()), !dbg !13167
  %3 = udiv i64 %2, 100, !dbg !13170
  ret i64 %3, !dbg !13171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #12 !dbg !13172 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13174, metadata !DIExpression()), !dbg !13175
  call void @llvm.dbg.value(metadata i64 %0, metadata !11556, metadata !DIExpression()), !dbg !13176
  call void @llvm.dbg.value(metadata i32 10000, metadata !11559, metadata !DIExpression()), !dbg !13176
  call void @llvm.dbg.value(metadata i32 1000000, metadata !11560, metadata !DIExpression()), !dbg !13176
  call void @llvm.dbg.value(metadata i8 1, metadata !11561, metadata !DIExpression()), !dbg !13176
  call void @llvm.dbg.value(metadata i1 false, metadata !11562, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13176
  call void @llvm.dbg.value(metadata i1 false, metadata !11563, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13176
  call void @llvm.dbg.value(metadata i8 0, metadata !11564, metadata !DIExpression()), !dbg !13176
  call void @llvm.dbg.value(metadata i1 true, metadata !11565, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13176
  call void @llvm.dbg.value(metadata i1 false, metadata !11566, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13176
  call void @llvm.dbg.value(metadata i64 0, metadata !11567, metadata !DIExpression()), !dbg !13176
  call void @llvm.dbg.value(metadata i64 0, metadata !11567, metadata !DIExpression()), !dbg !13176
  %2 = mul i64 %0, 100, !dbg !13178
  ret i64 %2, !dbg !13180
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13181 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13183, metadata !DIExpression()), !dbg !13184
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #25, !dbg !13185
  br i1 %2, label %14, label %3, !dbg !13187

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #25, !dbg !13188
  %5 = icmp slt i32 %4, 0, !dbg !13190
  br i1 %5, label %6, label %10, !dbg !13191

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13192
  %8 = load i8, i8* %7, align 1, !dbg !13192
  %9 = icmp eq i8 %8, 16, !dbg !13195
  br i1 %9, label %10, label %14, !dbg !13196

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #25, !dbg !13197
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #25, !dbg !13198
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13199, !srcloc !12160
  call void @llvm.dbg.value(metadata i32 %11, metadata !12156, metadata !DIExpression()) #23, !dbg !13203
  %12 = icmp eq i32 %11, 0, !dbg !13204
  br i1 %12, label %13, label %14, !dbg !13205

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #25, !dbg !13206
  br label %14, !dbg !13208

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !13209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13210 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13212, metadata !DIExpression()), !dbg !13213
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13214
  %3 = load i8, i8* %2, align 1, !dbg !13214
  %4 = and i8 %3, 2, !dbg !13215
  %5 = icmp ne i8 %4, 0, !dbg !13216
  ret i1 %5, !dbg !13217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #4 !dbg !13218 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13223
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13222, metadata !DIExpression()), !dbg !13224
  ret %struct.k_thread* %1, !dbg !13225
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !13226 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13227, !srcloc !12160
  call void @llvm.dbg.value(metadata i32 %1, metadata !12156, metadata !DIExpression()) #23, !dbg !13230
  %2 = icmp eq i32 %1, 0, !dbg !13231
  br i1 %2, label %3, label %8, !dbg !13232

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13233
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #25, !dbg !13234
  %6 = icmp ne i32 %5, 0, !dbg !13232
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !13235
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13236 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13238, metadata !DIExpression()), !dbg !13240
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !13241
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13243, !srcloc !11524
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13243
  call void @llvm.dbg.value(metadata i32 %3, metadata !11521, metadata !DIExpression()) #23, !dbg !13245
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !13245
  call void @llvm.dbg.value(metadata i32 %3, metadata !11515, metadata !DIExpression()) #23, !dbg !13241
  call void @llvm.dbg.value(metadata i32 %3, metadata !13239, metadata !DIExpression()), !dbg !13240
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13246
  %5 = load i8, i8* %4, align 4, !dbg !13246
  %6 = and i8 %5, 1, !dbg !13248
  %7 = icmp eq i8 %6, 0, !dbg !13249
  br i1 %7, label %9, label %8, !dbg !13250

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11536, metadata !DIExpression()) #23, !dbg !13251
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !13251
  call void @llvm.dbg.value(metadata i32 %3, metadata !11544, metadata !DIExpression()) #23, !dbg !13254
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13256, !srcloc !11550
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !13257, !srcloc !13259
  br label %24, !dbg !13260

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13261
  %11 = load i8, i8* %10, align 1, !dbg !13261
  %12 = and i8 %11, 8, !dbg !13263
  %13 = icmp eq i8 %12, 0, !dbg !13264
  br i1 %13, label %15, label %14, !dbg !13265

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !11536, metadata !DIExpression()) #23, !dbg !13266
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !13266
  call void @llvm.dbg.value(metadata i32 %3, metadata !11544, metadata !DIExpression()) #23, !dbg !13269
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13271, !srcloc !11550
  br label %24, !dbg !13272

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #25, !dbg !13273
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13274
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !13276
  br i1 %17, label %18, label %23, !dbg !13277

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13278, !srcloc !12160
  call void @llvm.dbg.value(metadata i32 %19, metadata !12156, metadata !DIExpression()) #23, !dbg !13281
  %20 = icmp eq i32 %19, 0, !dbg !13282
  br i1 %20, label %21, label %23, !dbg !13283

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !12120, metadata !DIExpression()) #23, !dbg !13284
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12125, metadata !DIExpression()) #23, !dbg !13284
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #24, !dbg !13287
  br label %23, !dbg !13288

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !11536, metadata !DIExpression()) #23, !dbg !13289
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !13289
  call void @llvm.dbg.value(metadata i32 %3, metadata !11544, metadata !DIExpression()) #23, !dbg !13291
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13293, !srcloc !11550
  br label %24, !dbg !13294

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !13294
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13295 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13297, metadata !DIExpression()), !dbg !13298
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13299
  %3 = load i8, i8* %2, align 1, !dbg !13299
  %4 = and i8 %3, 8, !dbg !13301
  %5 = icmp eq i8 %4, 0, !dbg !13302
  br i1 %5, label %6, label %20, !dbg !13303

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !13304
  %8 = or i8 %7, 8, !dbg !13304
  store i8 %8, i8* %2, align 1, !dbg !13304
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #25, !dbg !13306
  br i1 %9, label %10, label %12, !dbg !13308

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11678, metadata !DIExpression()) #23, !dbg !13309
  %11 = and i8 %8, 95, !dbg !13312
  store i8 %11, i8* %2, align 1, !dbg !13312
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !11686, metadata !DIExpression()) #23, !dbg !13313
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #24, !dbg !13315
  br label %12, !dbg !13316

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13317
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !13317
  %15 = icmp eq %union.anon* %14, null, !dbg !13319
  br i1 %15, label %17, label %16, !dbg !13320

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !13321
  br label %17, !dbg !13323

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #25, !dbg !13324
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13325
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #25, !dbg !13326
  tail call fastcc void @update_cache(i32 noundef 1) #25, !dbg !13327
  br label %20, !dbg !13328

20:                                               ; preds = %17, %1
  ret void, !dbg !13329
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !13330 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13334, metadata !DIExpression()), !dbg !13336
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13337
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13335, metadata !DIExpression()), !dbg !13336
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13338
  br i1 %3, label %10, label %4, !dbg !13339

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !13340
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #25, !dbg !13342
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13343, metadata !DIExpression()), !dbg !13349
  call void @llvm.dbg.value(metadata i32 0, metadata !13348, metadata !DIExpression()), !dbg !13349
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !13351
  store i32 0, i32* %7, align 4, !dbg !13352
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #25, !dbg !13353
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #25, !dbg !13337
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !13335, metadata !DIExpression()), !dbg !13336
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !13338
  br i1 %9, label %10, label %4, !dbg !13339, !llvm.loop !13354

10:                                               ; preds = %4, %1
  ret void, !dbg !13356
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13357 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13362, metadata !DIExpression()), !dbg !13365
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13361, metadata !DIExpression()), !dbg !13365
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !13366
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13368, !srcloc !11524
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13368
  call void @llvm.dbg.value(metadata i32 %4, metadata !11521, metadata !DIExpression()) #23, !dbg !13370
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !13370
  call void @llvm.dbg.value(metadata i32 %4, metadata !11515, metadata !DIExpression()) #23, !dbg !13366
  call void @llvm.dbg.value(metadata i32 %4, metadata !13363, metadata !DIExpression()), !dbg !13365
  call void @llvm.dbg.value(metadata i32 0, metadata !13364, metadata !DIExpression()), !dbg !13365
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13371
  %6 = load i8, i8* %5, align 1, !dbg !13371
  %7 = and i8 %6, 8, !dbg !13373
  %8 = icmp eq i8 %7, 0, !dbg !13374
  br i1 %8, label %9, label %24, !dbg !13375

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !13362, metadata !DIExpression()), !dbg !13365
  %11 = icmp eq i64 %10, 0, !dbg !13376
  br i1 %11, label %24, label %12, !dbg !13378

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13379
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !13381
  br i1 %14, label %24, label %15, !dbg !13382

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !13383
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !13383
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !13384
  %19 = icmp eq %union.anon* %17, %18, !dbg !13385
  br i1 %19, label %24, label %20, !dbg !13386

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13387
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #25, !dbg !13389
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13390
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #25, !dbg !13391
  call void @llvm.dbg.value(metadata i32 %4, metadata !12120, metadata !DIExpression()) #23, !dbg !13392
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12125, metadata !DIExpression()) #23, !dbg !13392
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #24, !dbg !13394
  call void @llvm.dbg.value(metadata i32 %23, metadata !13364, metadata !DIExpression()), !dbg !13365
  br label %26, !dbg !13395

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !13396
  call void @llvm.dbg.value(metadata i32 %25, metadata !13364, metadata !DIExpression()), !dbg !13365
  call void @llvm.dbg.value(metadata i32 %4, metadata !11536, metadata !DIExpression()) #23, !dbg !13397
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !13397
  call void @llvm.dbg.value(metadata i32 %4, metadata !11544, metadata !DIExpression()) #23, !dbg !13399
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !13401, !srcloc !11550
  br label %26, !dbg !13402

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !13365
  ret i32 %27, !dbg !13403
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !13404 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !13408, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.value(metadata i32 %1, metadata !13409, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.value(metadata i8* %2, metadata !13410, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.value(metadata i8 0, metadata !13412, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.value(metadata i32 0, metadata !13413, metadata !DIExpression()), !dbg !13417
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11509, metadata !DIExpression()) #23, !dbg !13418
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13420, !srcloc !11524
  call void @llvm.dbg.value(metadata i32 undef, metadata !11521, metadata !DIExpression()) #23, !dbg !13422
  call void @llvm.dbg.value(metadata i32 undef, metadata !11522, metadata !DIExpression()) #23, !dbg !13422
  call void @llvm.dbg.value(metadata i32 undef, metadata !11515, metadata !DIExpression()) #23, !dbg !13418
  call void @llvm.dbg.value(metadata i32 undef, metadata !13415, metadata !DIExpression()), !dbg !13417
  call void @llvm.dbg.value(metadata i8 poison, metadata !13412, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.value(metadata i32 undef, metadata !13413, metadata !DIExpression()), !dbg !13417
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #25, !dbg !13423
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13411, metadata !DIExpression()), !dbg !13416
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !13426
  br i1 %7, label %12, label %8, !dbg !13428

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13429, metadata !DIExpression()), !dbg !13437
  call void @llvm.dbg.value(metadata i32 %1, metadata !13435, metadata !DIExpression()), !dbg !13437
  call void @llvm.dbg.value(metadata i8* %2, metadata !13436, metadata !DIExpression()), !dbg !13437
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13343, metadata !DIExpression()), !dbg !13440
  call void @llvm.dbg.value(metadata i32 %1, metadata !13348, metadata !DIExpression()), !dbg !13440
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !13442
  store i32 %1, i32* %9, align 4, !dbg !13443
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !13444
  store i8* %2, i8** %10, align 4, !dbg !13445
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !13446
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #25, !dbg !13447
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #25, !dbg !13448
  call void @llvm.dbg.value(metadata i8 1, metadata !13412, metadata !DIExpression()), !dbg !13416
  br label %12, !dbg !13449

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !13420
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !13420
  call void @llvm.dbg.value(metadata i32 %14, metadata !11521, metadata !DIExpression()) #23, !dbg !13422
  call void @llvm.dbg.value(metadata i32 %14, metadata !11515, metadata !DIExpression()) #23, !dbg !13418
  call void @llvm.dbg.value(metadata i32 %14, metadata !13415, metadata !DIExpression()), !dbg !13417
  call void @llvm.dbg.value(metadata i8 poison, metadata !13412, metadata !DIExpression()), !dbg !13416
  call void @llvm.dbg.value(metadata i32 undef, metadata !11536, metadata !DIExpression()) #23, !dbg !13450
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !11541, metadata !DIExpression()) #23, !dbg !13450
  call void @llvm.dbg.value(metadata i32 undef, metadata !11544, metadata !DIExpression()) #23, !dbg !13452
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !13454, !srcloc !11550
  call void @llvm.dbg.value(metadata i32 undef, metadata !13413, metadata !DIExpression()), !dbg !13417
  ret i1 %13, !dbg !13455
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !13456 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13462, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.value(metadata i64 undef, metadata !13464, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13461, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !13463, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.value(metadata i8** %4, metadata !13465, metadata !DIExpression()), !dbg !13467
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #25, !dbg !13468
  call void @llvm.dbg.value(metadata i32 %6, metadata !13466, metadata !DIExpression()), !dbg !13467
  %7 = icmp eq i8** %4, null, !dbg !13469
  br i1 %7, label %12, label %8, !dbg !13471

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13472
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !13474
  %11 = load i8*, i8** %10, align 4, !dbg !13474
  store i8* %11, i8** %4, align 4, !dbg !13475
  br label %12, !dbg !13476

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !13477
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !13478 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #24, !dbg !13480
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #24, !dbg !13481
  ret void, !dbg !13482
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13483 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !13493, metadata !DIExpression()), !dbg !13510
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13491, metadata !DIExpression()), !dbg !13510
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !13492, metadata !DIExpression()), !dbg !13510
  %5 = icmp eq i64 %4, -1, !dbg !13511
  br i1 %5, label %55, label %6, !dbg !13513

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !13514
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !13515
  call void @llvm.dbg.value(metadata i32 0, metadata !13494, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13517, metadata !DIExpression()) #23, !dbg !13524
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13526, !srcloc !13532
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !13526
  call void @llvm.dbg.value(metadata i32 %9, metadata !13529, metadata !DIExpression()) #23, !dbg !13533
  call void @llvm.dbg.value(metadata i32 undef, metadata !13530, metadata !DIExpression()) #23, !dbg !13533
  call void @llvm.dbg.value(metadata i32 %9, metadata !13523, metadata !DIExpression()) #23, !dbg !13524
  call void @llvm.dbg.value(metadata i32 %9, metadata !13500, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.value(metadata i32 undef, metadata !13494, metadata !DIExpression()), !dbg !13516
  %10 = icmp slt i64 %4, -1, !dbg !13534
  br i1 %10, label %11, label %17, !dbg !13535

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !13536
  %13 = add i64 %4, %12, !dbg !13537
  %14 = sub i64 -2, %13, !dbg !13537
  call void @llvm.dbg.value(metadata i64 %14, metadata !13504, metadata !DIExpression()), !dbg !13538
  %15 = icmp sgt i64 %14, 1, !dbg !13539
  %16 = select i1 %15, i64 %14, i64 1, !dbg !13539
  br label %22, !dbg !13540

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !13541
  %19 = tail call fastcc i32 @elapsed.142() #25, !dbg !13543
  %20 = sext i32 %19 to i64, !dbg !13543
  %21 = add nsw i64 %18, %20, !dbg !13544
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !13545
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !13546
  store i64 %23, i64* %24, align 8, !dbg !13547
  %25 = tail call fastcc %struct._timeout* @first() #25, !dbg !13548
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !13501, metadata !DIExpression()), !dbg !13550
  %26 = icmp eq %struct._timeout* %25, null, !dbg !13551
  br i1 %26, label %42, label %27, !dbg !13551

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !13552
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !13501, metadata !DIExpression()), !dbg !13550
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !13556
  %31 = load i64, i64* %30, align 8, !dbg !13556
  %32 = icmp slt i64 %28, %31, !dbg !13557
  br i1 %32, label %33, label %38, !dbg !13558

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !13556
  %35 = sub nsw i64 %31, %28, !dbg !13559
  store i64 %35, i64* %34, align 8, !dbg !13559
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !13561
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13562
  tail call fastcc void @sys_dlist_insert.143(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #25, !dbg !13563
  br label %44, !dbg !13564

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !13565
  store i64 %39, i64* %24, align 8, !dbg !13565
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #25, !dbg !13566
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !13501, metadata !DIExpression()), !dbg !13550
  %41 = icmp eq %struct._timeout* %40, null, !dbg !13551
  br i1 %41, label %42, label %27, !dbg !13551, !llvm.loop !13567

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13569
  tail call fastcc void @sys_dlist_append.144(%struct._dnode* noundef %43) #25, !dbg !13572
  br label %44, !dbg !13573

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #25, !dbg !13574
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !13575
  br i1 %46, label %47, label %54, !dbg !13576

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #25, !dbg !13577
  call void @llvm.dbg.value(metadata i32 %48, metadata !13507, metadata !DIExpression()), !dbg !13578
  %49 = icmp ne i32 %48, 0, !dbg !13579
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !13581
  br i1 %52, label %54, label %53, !dbg !13581

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #24, !dbg !13582
  br label %54, !dbg !13584

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !13585, metadata !DIExpression()) #23, !dbg !13591
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13590, metadata !DIExpression()) #23, !dbg !13591
  call void @llvm.dbg.value(metadata i32 %9, metadata !13593, metadata !DIExpression()) #23, !dbg !13596
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !13598, !srcloc !13599
  call void @llvm.dbg.value(metadata i32 undef, metadata !13494, metadata !DIExpression()), !dbg !13516
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !13600
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.142() unnamed_addr #1 !dbg !13601 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !13604
  %2 = icmp eq i32 %1, 0, !dbg !13605
  br i1 %2, label %3, label %5, !dbg !13604

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #24, !dbg !13606
  br label %5, !dbg !13604

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !13604
  ret i32 %6, !dbg !13607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #4 !dbg !13608 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.147() #25, !dbg !13614
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13612, metadata !DIExpression()), !dbg !13615
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !13616
  ret %struct._timeout* %2, !dbg !13617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.143(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13618 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13622, metadata !DIExpression()), !dbg !13626
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13623, metadata !DIExpression()), !dbg !13626
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13627
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13627
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13624, metadata !DIExpression()), !dbg !13626
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13628
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13629
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13630
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13631
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13632
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13633
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13634
  ret void, !dbg !13635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #4 !dbg !13636 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13640, metadata !DIExpression()), !dbg !13642
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13643
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.145(%struct._dnode* noundef %2) #25, !dbg !13644
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13641, metadata !DIExpression()), !dbg !13642
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !13645
  ret %struct._timeout* %4, !dbg !13646
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.144(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13647 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13652, metadata !DIExpression()), !dbg !13655
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13653, metadata !DIExpression()), !dbg !13655
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !13656
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13654, metadata !DIExpression()), !dbg !13655
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13657
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !13658
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13659
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !13660
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !13661
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !13662
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !13663
  ret void, !dbg !13664
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !13665 {
  %1 = tail call fastcc %struct._timeout* @first() #25, !dbg !13670
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !13667, metadata !DIExpression()), !dbg !13671
  %2 = tail call fastcc i32 @elapsed.142() #25, !dbg !13672
  call void @llvm.dbg.value(metadata i32 %2, metadata !13668, metadata !DIExpression()), !dbg !13671
  %3 = icmp eq %struct._timeout* %1, null, !dbg !13673
  br i1 %3, label %14, label %4, !dbg !13675

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !13676
  %6 = load i64, i64* %5, align 8, !dbg !13676
  %7 = sext i32 %2 to i64, !dbg !13677
  %8 = sub nsw i64 %6, %7, !dbg !13678
  %9 = icmp sgt i64 %8, 2147483647, !dbg !13679
  br i1 %9, label %14, label %10, !dbg !13680

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !13681
  %12 = select i1 %11, i64 %8, i64 0, !dbg !13681
  %13 = trunc i64 %12 to i32, !dbg !13681
  call void @llvm.dbg.value(metadata i32 %13, metadata !13669, metadata !DIExpression()), !dbg !13671
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !13683
  call void @llvm.dbg.value(metadata i32 %15, metadata !13669, metadata !DIExpression()), !dbg !13671
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13684
  %17 = icmp ne i32 %16, 0, !dbg !13686
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !13687
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !13687
  call void @llvm.dbg.value(metadata i32 %20, metadata !13669, metadata !DIExpression()), !dbg !13671
  ret i32 %20, !dbg !13688
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.145(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !13689 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13693, metadata !DIExpression()), !dbg !13695
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13694, metadata !DIExpression()), !dbg !13695
  %2 = icmp eq %struct._dnode* %0, null, !dbg !13696
  br i1 %2, label %5, label %3, !dbg !13697

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.146(%struct._dnode* noundef nonnull %0) #25, !dbg !13698
  br label %5, !dbg !13697

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !13697
  ret %struct._dnode* %6, !dbg !13699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.146(%struct._dnode* noundef readonly %0) unnamed_addr #4 !dbg !13700 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13702, metadata !DIExpression()), !dbg !13704
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13703, metadata !DIExpression()), !dbg !13704
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !13705
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !13706
  br i1 %3, label %7, label %4, !dbg !13707

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13708
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !13708
  br label %7, !dbg !13707

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !13707
  ret %struct._dnode* %8, !dbg !13709
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.147() unnamed_addr #4 !dbg !13710 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13714, metadata !DIExpression()), !dbg !13715
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.148() #25, !dbg !13716
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !13716
  ret %struct._dnode* %3, !dbg !13717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.148() unnamed_addr #4 !dbg !13718 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !13722, metadata !DIExpression()), !dbg !13723
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !13724
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !13725
  ret i1 %2, !dbg !13726
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !13727 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13731, metadata !DIExpression()), !dbg !13736
  call void @llvm.dbg.value(metadata i32 -22, metadata !13732, metadata !DIExpression()), !dbg !13736
  call void @llvm.dbg.value(metadata i32 0, metadata !13733, metadata !DIExpression()), !dbg !13737
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13517, metadata !DIExpression()) #23, !dbg !13738
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13740, !srcloc !13532
  call void @llvm.dbg.value(metadata i32 undef, metadata !13529, metadata !DIExpression()) #23, !dbg !13742
  call void @llvm.dbg.value(metadata i32 undef, metadata !13530, metadata !DIExpression()) #23, !dbg !13742
  call void @llvm.dbg.value(metadata i32 undef, metadata !13523, metadata !DIExpression()) #23, !dbg !13738
  call void @llvm.dbg.value(metadata i32 undef, metadata !13735, metadata !DIExpression()), !dbg !13737
  call void @llvm.dbg.value(metadata i32 -22, metadata !13732, metadata !DIExpression()), !dbg !13736
  call void @llvm.dbg.value(metadata i32 undef, metadata !13733, metadata !DIExpression()), !dbg !13737
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !13732, metadata !DIExpression()), !dbg !13736
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.151(%struct._dnode* noundef %3) #25, !dbg !13743
  br i1 %4, label %5, label %6, !dbg !13747

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #25, !dbg !13748
  call void @llvm.dbg.value(metadata i32 0, metadata !13732, metadata !DIExpression()), !dbg !13736
  br label %6, !dbg !13750

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !13736
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !13740
  call void @llvm.dbg.value(metadata i32 %8, metadata !13529, metadata !DIExpression()) #23, !dbg !13742
  call void @llvm.dbg.value(metadata i32 %8, metadata !13523, metadata !DIExpression()) #23, !dbg !13738
  call void @llvm.dbg.value(metadata i32 %8, metadata !13735, metadata !DIExpression()), !dbg !13737
  call void @llvm.dbg.value(metadata i32 %7, metadata !13732, metadata !DIExpression()), !dbg !13736
  call void @llvm.dbg.value(metadata i32 undef, metadata !13585, metadata !DIExpression()) #23, !dbg !13751
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13590, metadata !DIExpression()) #23, !dbg !13751
  call void @llvm.dbg.value(metadata i32 undef, metadata !13593, metadata !DIExpression()) #23, !dbg !13753
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !13755, !srcloc !13599
  call void @llvm.dbg.value(metadata i32 undef, metadata !13733, metadata !DIExpression()), !dbg !13737
  ret i32 %7, !dbg !13756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.151(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13757 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13763, metadata !DIExpression()), !dbg !13764
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13765
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13765
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13766
  ret i1 %4, !dbg !13767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !13768 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13770, metadata !DIExpression()), !dbg !13771
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #25, !dbg !13772
  %3 = icmp eq %struct._timeout* %2, null, !dbg !13774
  br i1 %3, label %10, label %4, !dbg !13775

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !13776
  %6 = load i64, i64* %5, align 8, !dbg !13776
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !13778
  %8 = load i64, i64* %7, align 8, !dbg !13779
  %9 = add nsw i64 %8, %6, !dbg !13779
  store i64 %9, i64* %7, align 8, !dbg !13779
  br label %10, !dbg !13780

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13781
  tail call fastcc void @sys_dlist_remove.152(%struct._dnode* noundef %11) #25, !dbg !13782
  ret void, !dbg !13783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.152(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !13784 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13788, metadata !DIExpression()), !dbg !13791
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13792
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13792
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13789, metadata !DIExpression()), !dbg !13791
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13793
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13793
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !13790, metadata !DIExpression()), !dbg !13791
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !13794
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !13795
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !13796
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !13797
  tail call fastcc void @sys_dnode_init.153(%struct._dnode* noundef %0) #25, !dbg !13798
  ret void, !dbg !13799
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.153(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #3 !dbg !13800 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13802, metadata !DIExpression()), !dbg !13803
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13804
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13805
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13806
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13807
  ret void, !dbg !13808
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !13809 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13815, metadata !DIExpression()), !dbg !13820
  call void @llvm.dbg.value(metadata i64 0, metadata !13816, metadata !DIExpression()), !dbg !13820
  call void @llvm.dbg.value(metadata i32 0, metadata !13817, metadata !DIExpression()), !dbg !13821
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13517, metadata !DIExpression()) #23, !dbg !13822
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13824, !srcloc !13532
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13824
  call void @llvm.dbg.value(metadata i32 %3, metadata !13529, metadata !DIExpression()) #23, !dbg !13826
  call void @llvm.dbg.value(metadata i32 undef, metadata !13530, metadata !DIExpression()) #23, !dbg !13826
  call void @llvm.dbg.value(metadata i32 %3, metadata !13523, metadata !DIExpression()) #23, !dbg !13822
  call void @llvm.dbg.value(metadata i32 %3, metadata !13819, metadata !DIExpression()), !dbg !13821
  call void @llvm.dbg.value(metadata i64 0, metadata !13816, metadata !DIExpression()), !dbg !13820
  call void @llvm.dbg.value(metadata i32 undef, metadata !13817, metadata !DIExpression()), !dbg !13821
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !13827
  call void @llvm.dbg.value(metadata i64 %4, metadata !13816, metadata !DIExpression()), !dbg !13820
  call void @llvm.dbg.value(metadata i32 %3, metadata !13585, metadata !DIExpression()) #23, !dbg !13830
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13590, metadata !DIExpression()) #23, !dbg !13830
  call void @llvm.dbg.value(metadata i32 %3, metadata !13593, metadata !DIExpression()) #23, !dbg !13832
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13834, !srcloc !13599
  call void @llvm.dbg.value(metadata i32 undef, metadata !13817, metadata !DIExpression()), !dbg !13821
  ret i64 %4, !dbg !13835
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !13836 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13838, metadata !DIExpression()), !dbg !13842
  call void @llvm.dbg.value(metadata i64 0, metadata !13839, metadata !DIExpression()), !dbg !13842
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.154(%struct._timeout* noundef %0) #25, !dbg !13843
  br i1 %2, label %21, label %3, !dbg !13845

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #25, !dbg !13846
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !13840, metadata !DIExpression()), !dbg !13847
  call void @llvm.dbg.value(metadata i64 0, metadata !13839, metadata !DIExpression()), !dbg !13842
  %5 = icmp eq %struct._timeout* %4, null, !dbg !13848
  br i1 %5, label %16, label %6, !dbg !13850

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !13840, metadata !DIExpression()), !dbg !13847
  call void @llvm.dbg.value(metadata i64 %8, metadata !13839, metadata !DIExpression()), !dbg !13842
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !13851
  %10 = load i64, i64* %9, align 8, !dbg !13851
  %11 = add nsw i64 %10, %8, !dbg !13853
  call void @llvm.dbg.value(metadata i64 %11, metadata !13839, metadata !DIExpression()), !dbg !13842
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !13854
  br i1 %12, label %16, label %13, !dbg !13856

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #25, !dbg !13857
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !13840, metadata !DIExpression()), !dbg !13847
  call void @llvm.dbg.value(metadata i64 %11, metadata !13839, metadata !DIExpression()), !dbg !13842
  %15 = icmp eq %struct._timeout* %14, null, !dbg !13848
  br i1 %15, label %16, label %6, !dbg !13850, !llvm.loop !13858

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !13842
  call void @llvm.dbg.value(metadata i64 %17, metadata !13839, metadata !DIExpression()), !dbg !13842
  %18 = tail call fastcc i32 @elapsed.142() #25, !dbg !13860
  %19 = sext i32 %18 to i64, !dbg !13860
  %20 = sub nsw i64 %17, %19, !dbg !13861
  br label %21, !dbg !13862

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !13842
  ret i64 %22, !dbg !13863
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.154(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #4 !dbg !13864 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13868, metadata !DIExpression()), !dbg !13869
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13870
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.151(%struct._dnode* noundef %2) #25, !dbg !13871
  %4 = xor i1 %3, true, !dbg !13872
  ret i1 %4, !dbg !13873
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !13874 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13876, metadata !DIExpression()), !dbg !13881
  call void @llvm.dbg.value(metadata i64 0, metadata !13877, metadata !DIExpression()), !dbg !13881
  call void @llvm.dbg.value(metadata i32 0, metadata !13878, metadata !DIExpression()), !dbg !13882
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13517, metadata !DIExpression()) #23, !dbg !13883
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13885, !srcloc !13532
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13885
  call void @llvm.dbg.value(metadata i32 %3, metadata !13529, metadata !DIExpression()) #23, !dbg !13887
  call void @llvm.dbg.value(metadata i32 undef, metadata !13530, metadata !DIExpression()) #23, !dbg !13887
  call void @llvm.dbg.value(metadata i32 %3, metadata !13523, metadata !DIExpression()) #23, !dbg !13883
  call void @llvm.dbg.value(metadata i32 %3, metadata !13880, metadata !DIExpression()), !dbg !13882
  call void @llvm.dbg.value(metadata i64 0, metadata !13877, metadata !DIExpression()), !dbg !13881
  call void @llvm.dbg.value(metadata i32 undef, metadata !13878, metadata !DIExpression()), !dbg !13882
  %4 = load i64, i64* @curr_tick, align 8, !dbg !13888
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #25, !dbg !13891
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !13877, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !13881
  call void @llvm.dbg.value(metadata i32 %3, metadata !13585, metadata !DIExpression()) #23, !dbg !13892
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13590, metadata !DIExpression()) #23, !dbg !13892
  call void @llvm.dbg.value(metadata i32 %3, metadata !13593, metadata !DIExpression()) #23, !dbg !13894
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !13896, !srcloc !13599
  call void @llvm.dbg.value(metadata i32 undef, metadata !13878, metadata !DIExpression()), !dbg !13882
  %6 = add i64 %5, %4, !dbg !13897
  ret i64 %6, !dbg !13898
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !13899 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !13901, metadata !DIExpression()), !dbg !13905
  call void @llvm.dbg.value(metadata i32 0, metadata !13902, metadata !DIExpression()), !dbg !13906
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13517, metadata !DIExpression()) #23, !dbg !13907
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13909, !srcloc !13532
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13909
  call void @llvm.dbg.value(metadata i32 %2, metadata !13529, metadata !DIExpression()) #23, !dbg !13911
  call void @llvm.dbg.value(metadata i32 undef, metadata !13530, metadata !DIExpression()) #23, !dbg !13911
  call void @llvm.dbg.value(metadata i32 %2, metadata !13523, metadata !DIExpression()) #23, !dbg !13907
  call void @llvm.dbg.value(metadata i32 %2, metadata !13904, metadata !DIExpression()), !dbg !13906
  call void @llvm.dbg.value(metadata i32 -1, metadata !13901, metadata !DIExpression()), !dbg !13905
  call void @llvm.dbg.value(metadata i32 undef, metadata !13902, metadata !DIExpression()), !dbg !13906
  %3 = tail call fastcc i32 @next_timeout() #25, !dbg !13912
  call void @llvm.dbg.value(metadata i32 %3, metadata !13901, metadata !DIExpression()), !dbg !13905
  call void @llvm.dbg.value(metadata i32 %2, metadata !13585, metadata !DIExpression()) #23, !dbg !13915
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13590, metadata !DIExpression()) #23, !dbg !13915
  call void @llvm.dbg.value(metadata i32 %2, metadata !13593, metadata !DIExpression()) #23, !dbg !13917
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !13919, !srcloc !13599
  call void @llvm.dbg.value(metadata i32 undef, metadata !13902, metadata !DIExpression()), !dbg !13906
  ret i32 %3, !dbg !13920
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !13921 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13923, metadata !DIExpression()), !dbg !13933
  call void @llvm.dbg.value(metadata i1 %1, metadata !13924, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13933
  call void @llvm.dbg.value(metadata i32 0, metadata !13925, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13517, metadata !DIExpression()) #23, !dbg !13935
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13937, !srcloc !13532
  call void @llvm.dbg.value(metadata i32 undef, metadata !13529, metadata !DIExpression()) #23, !dbg !13939
  call void @llvm.dbg.value(metadata i32 undef, metadata !13530, metadata !DIExpression()) #23, !dbg !13939
  call void @llvm.dbg.value(metadata i32 undef, metadata !13523, metadata !DIExpression()) #23, !dbg !13935
  call void @llvm.dbg.value(metadata i32 undef, metadata !13927, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i32 undef, metadata !13925, metadata !DIExpression()), !dbg !13934
  %4 = tail call fastcc i32 @next_timeout() #25, !dbg !13940
  call void @llvm.dbg.value(metadata i32 %4, metadata !13928, metadata !DIExpression()), !dbg !13941
  call void @llvm.dbg.value(metadata i1 undef, metadata !13931, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13941
  %5 = icmp slt i32 %4, 2, !dbg !13942
  call void @llvm.dbg.value(metadata i1 %5, metadata !13932, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13941
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !13943
  call void @llvm.dbg.value(metadata i1 %6, metadata !13931, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13941
  br i1 %7, label %11, label %8, !dbg !13943

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !13945
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !13945
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #24, !dbg !13947
  br label %11, !dbg !13948

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !13937
  call void @llvm.dbg.value(metadata i32 %12, metadata !13529, metadata !DIExpression()) #23, !dbg !13939
  call void @llvm.dbg.value(metadata i32 %12, metadata !13523, metadata !DIExpression()) #23, !dbg !13935
  call void @llvm.dbg.value(metadata i32 %12, metadata !13927, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i32 undef, metadata !13585, metadata !DIExpression()) #23, !dbg !13949
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13590, metadata !DIExpression()) #23, !dbg !13949
  call void @llvm.dbg.value(metadata i32 undef, metadata !13593, metadata !DIExpression()) #23, !dbg !13951
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13953, !srcloc !13599
  call void @llvm.dbg.value(metadata i32 1, metadata !13925, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.value(metadata i32 undef, metadata !13925, metadata !DIExpression()), !dbg !13934
  ret void, !dbg !13954
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !13955 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13959, metadata !DIExpression()), !dbg !13964
  tail call void @z_time_slice(i32 noundef %0) #24, !dbg !13965
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13517, metadata !DIExpression()) #23, !dbg !13966
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13968, !srcloc !13532
  call void @llvm.dbg.value(metadata i32 undef, metadata !13529, metadata !DIExpression()) #23, !dbg !13970
  call void @llvm.dbg.value(metadata i32 undef, metadata !13530, metadata !DIExpression()) #23, !dbg !13970
  call void @llvm.dbg.value(metadata i32 undef, metadata !13523, metadata !DIExpression()) #23, !dbg !13966
  call void @llvm.dbg.value(metadata i32 undef, metadata !13960, metadata !DIExpression()), !dbg !13964
  store i32 %0, i32* @announce_remaining, align 4, !dbg !13964
  call void @llvm.dbg.value(metadata i32 undef, metadata !13960, metadata !DIExpression()), !dbg !13964
  %3 = tail call fastcc %struct._timeout* @first() #25, !dbg !13971
  %4 = icmp eq %struct._timeout* %3, null, !dbg !13972
  br i1 %4, label %28, label %5, !dbg !13973

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !13974
  %10 = load i64, i64* %9, align 8, !dbg !13974
  %11 = sext i32 %8 to i64, !dbg !13975
  %12 = icmp sgt i64 %10, %11, !dbg !13976
  br i1 %12, label %26, label %13, !dbg !13977

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !13964
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !13961, metadata !DIExpression()), !dbg !13978
  %15 = trunc i64 %10 to i32, !dbg !13979
  call void @llvm.dbg.value(metadata i32 %15, metadata !13963, metadata !DIExpression()), !dbg !13978
  %16 = sext i32 %15 to i64, !dbg !13980
  %17 = load i64, i64* @curr_tick, align 8, !dbg !13981
  %18 = add i64 %17, %16, !dbg !13981
  store i64 %18, i64* @curr_tick, align 8, !dbg !13981
  store i64 0, i64* %9, align 8, !dbg !13982
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #25, !dbg !13983
  call void @llvm.dbg.value(metadata i32 %14, metadata !13585, metadata !DIExpression()) #23, !dbg !13984
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13590, metadata !DIExpression()) #23, !dbg !13984
  call void @llvm.dbg.value(metadata i32 %14, metadata !13593, metadata !DIExpression()) #23, !dbg !13986
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !13988, !srcloc !13599
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !13989
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !13989
  tail call void %20(%struct._timeout* noundef nonnull %6) #24, !dbg !13990
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13517, metadata !DIExpression()) #23, !dbg !13991
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13993, !srcloc !13532
  call void @llvm.dbg.value(metadata i32 undef, metadata !13529, metadata !DIExpression()) #23, !dbg !13995
  call void @llvm.dbg.value(metadata i32 undef, metadata !13530, metadata !DIExpression()) #23, !dbg !13995
  call void @llvm.dbg.value(metadata i32 undef, metadata !13523, metadata !DIExpression()) #23, !dbg !13991
  call void @llvm.dbg.value(metadata i32 undef, metadata !13960, metadata !DIExpression()), !dbg !13964
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !13996
  %23 = sub nsw i32 %22, %15, !dbg !13996
  store i32 %23, i32* @announce_remaining, align 4, !dbg !13964
  call void @llvm.dbg.value(metadata i32 undef, metadata !13960, metadata !DIExpression()), !dbg !13964
  %24 = tail call fastcc %struct._timeout* @first() #25, !dbg !13971
  %25 = icmp eq %struct._timeout* %24, null, !dbg !13972
  br i1 %25, label %28, label %5, !dbg !13973, !llvm.loop !13997

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !13999
  store i64 %27, i64* %9, align 8, !dbg !13999
  br label %32, !dbg !14002

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !13964
  %31 = sext i32 %30 to i64, !dbg !14003
  br label %32, !dbg !14003

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !14003
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !13964
  %36 = load i64, i64* @curr_tick, align 8, !dbg !14004
  %37 = add i64 %36, %33, !dbg !14004
  store i64 %37, i64* @curr_tick, align 8, !dbg !14004
  store i32 0, i32* @announce_remaining, align 4, !dbg !14005
  %38 = tail call fastcc i32 @next_timeout() #25, !dbg !14006
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #24, !dbg !14007
  call void @llvm.dbg.value(metadata i32 %35, metadata !13585, metadata !DIExpression()) #23, !dbg !14008
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13590, metadata !DIExpression()) #23, !dbg !14008
  call void @llvm.dbg.value(metadata i32 %35, metadata !13593, metadata !DIExpression()) #23, !dbg !14010
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #23, !dbg !14012, !srcloc !13599
  ret void, !dbg !14013
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !14014 {
  call void @llvm.dbg.value(metadata i64 0, metadata !14018, metadata !DIExpression()), !dbg !14022
  call void @llvm.dbg.value(metadata i32 0, metadata !14019, metadata !DIExpression()), !dbg !14023
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13517, metadata !DIExpression()) #23, !dbg !14024
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14026, !srcloc !13532
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14026
  call void @llvm.dbg.value(metadata i32 %2, metadata !13529, metadata !DIExpression()) #23, !dbg !14028
  call void @llvm.dbg.value(metadata i32 undef, metadata !13530, metadata !DIExpression()) #23, !dbg !14028
  call void @llvm.dbg.value(metadata i32 %2, metadata !13523, metadata !DIExpression()) #23, !dbg !14024
  call void @llvm.dbg.value(metadata i32 %2, metadata !14021, metadata !DIExpression()), !dbg !14023
  call void @llvm.dbg.value(metadata i64 0, metadata !14018, metadata !DIExpression()), !dbg !14022
  call void @llvm.dbg.value(metadata i32 undef, metadata !14019, metadata !DIExpression()), !dbg !14023
  %3 = load i64, i64* @curr_tick, align 8, !dbg !14029
  %4 = tail call fastcc i32 @elapsed.142() #25, !dbg !14032
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !14018, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !14022
  call void @llvm.dbg.value(metadata i32 %2, metadata !13585, metadata !DIExpression()) #23, !dbg !14033
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13590, metadata !DIExpression()) #23, !dbg !14033
  call void @llvm.dbg.value(metadata i32 %2, metadata !13593, metadata !DIExpression()) #23, !dbg !14035
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #23, !dbg !14037, !srcloc !13599
  call void @llvm.dbg.value(metadata i32 undef, metadata !14019, metadata !DIExpression()), !dbg !14023
  %5 = sext i32 %4 to i64, !dbg !14032
  %6 = add i64 %3, %5, !dbg !14038
  ret i64 %6, !dbg !14039
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !14040 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !14041
  %2 = trunc i64 %1 to i32, !dbg !14042
  ret i32 %2, !dbg !14043
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !14044 {
  %1 = tail call i64 @sys_clock_tick_get() #25, !dbg !14045
  ret i64 %1, !dbg !14046
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !14047 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14049, metadata !DIExpression()), !dbg !14056
  %2 = icmp eq i32 %0, 0, !dbg !14057
  br i1 %2, label %10, label %3, !dbg !14059

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !14060
  call void @llvm.dbg.value(metadata i32 %4, metadata !14050, metadata !DIExpression()), !dbg !14056
  %5 = shl i32 %0, 5, !dbg !14061
  call void @llvm.dbg.value(metadata i32 %5, metadata !14051, metadata !DIExpression()), !dbg !14056
  br label %6, !dbg !14062

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #25, !dbg !14063
  call void @llvm.dbg.value(metadata i32 %7, metadata !14052, metadata !DIExpression()), !dbg !14064
  %8 = sub i32 %7, %4, !dbg !14065
  %9 = icmp ult i32 %8, %5, !dbg !14067
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !14068
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !14069 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #25, !dbg !14070
  ret i32 %1, !dbg !14071
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !14072 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #24, !dbg !14074
  ret i32 %1, !dbg !14075
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !14076 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !14080, metadata !DIExpression()), !dbg !14082
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !14083

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #25, !dbg !14084
  br label %14, !dbg !14088

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !14081, metadata !DIExpression()), !dbg !14082
  %6 = icmp slt i64 %2, -1, !dbg !14089
  br i1 %6, label %7, label %9, !dbg !14092

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !14093
  br label %14, !dbg !14094

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #25, !dbg !14096
  %11 = icmp ugt i64 %2, 1, !dbg !14097
  %12 = select i1 %11, i64 %2, i64 1, !dbg !14097
  %13 = add nsw i64 %10, %12, !dbg !14098
  br label %14, !dbg !14099

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !14100
  ret i64 %15, !dbg !14101
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !14102 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.163, i32 0, i32 0)) #24, !dbg !14104
  ret void, !dbg !14105
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { argmemonly nofree nosync nounwind willreturn }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { argmemonly nofree nounwind willreturn writeonly }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m3" "target-features"="+armv7-m,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-dsp,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!696, !2, !2193, !2195, !27, !2197, !2199, !2237, !111, !181, !2239, !2250, !2296, !2298, !2326, !2354, !2397, !2469, !2514, !210, !364, !2542, !400, !410, !435, !543, !726, !2547, !844, !910, !1180, !1413, !2568, !1528, !1615, !2570, !2641, !2690, !1650, !2693, !1657, !2019, !2711, !2041, !2713, !2156, !2716}
!llvm.ident = !{!2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718, !2718}
!llvm.module.flags = !{!2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 57, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 2880, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 45)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 1440, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "_char_out", scope: !27, file: !105, line: 54, type: !106, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!104 = !{!25}
!105 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DISubroutineType(types: !108)
!108 = !{!103, !103}
!109 = !DIGlobalVariableExpression(var: !110, expr: !DIExpression())
!110 = distinct !DIGlobalVariable(name: "__init_stm32l1_init", scope: !111, file: !142, line: 60, type: !143, isLocal: true, isDefinition: true, align: 32)
!111 = distinct !DICompileUnit(language: DW_LANG_C99, file: !112, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !113, globals: !141, splitDebugInlining: false, nameTableKind: None)
!112 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!113 = !{!114, !135}
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !117)
!116 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l151xba.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !118)
!118 = !{!119, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134}
!119 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !117, file: !116, line: 372, baseType: !120, size: 32)
!120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !121)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !117, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !117, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !117, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !117, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !117, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !117, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !117, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !117, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !117, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !117, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !117, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !117, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !117, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 364, baseType: !137)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 360, size: 64, elements: !138)
!138 = !{!139, !140}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !137, file: !116, line: 362, baseType: !120, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !137, file: !116, line: 363, baseType: !120, size: 32, offset: 32)
!141 = !{!109}
!142 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32l1/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!143 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !144)
!144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !146)
!145 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!146 = !{!147, !178}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !144, file: !145, line: 60, baseType: !148, size: 32)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 32)
!149 = !DISubroutineType(types: !150)
!150 = !{!103, !151}
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 32)
!152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !155)
!154 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!155 = !{!156, !160, !161, !162, !171, !172}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !153, file: !154, line: 380, baseType: !157, size: 32)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 32)
!158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !159)
!159 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !153, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !153, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !153, file: !154, line: 386, baseType: !163, size: 32, offset: 96)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 32)
!164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !165)
!165 = !{!166, !169}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !164, file: !154, line: 359, baseType: !167, size: 8)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !168)
!168 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !164, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!170 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !153, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !153, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !154, line: 43, baseType: !176)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !177)
!177 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !144, file: !145, line: 65, baseType: !151, size: 32, offset: 32)
!179 = !DIGlobalVariableExpression(var: !180, expr: !DIExpression())
!180 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !181, file: !184, line: 71, type: !185, isLocal: true, isDefinition: true, align: 32)
!181 = distinct !DICompileUnit(language: DW_LANG_C99, file: !182, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !183, splitDebugInlining: false, nameTableKind: None)
!182 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!183 = !{!179}
!184 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !186)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !187)
!187 = !{!188, !207}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !186, file: !145, line: 60, baseType: !189, size: 32)
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 32)
!190 = !DISubroutineType(types: !191)
!191 = !{!103, !192}
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !194)
!194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !195)
!195 = !{!196, !197, !198, !199, !205, !206}
!196 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !194, file: !154, line: 380, baseType: !157, size: 32)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !194, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !194, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !194, file: !154, line: 386, baseType: !200, size: 32, offset: 96)
!200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 32)
!201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !202)
!202 = !{!203, !204}
!203 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !201, file: !154, line: 359, baseType: !167, size: 8)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !201, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !194, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !194, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !186, file: !145, line: 65, baseType: !192, size: 32, offset: 32)
!208 = !DIGlobalVariableExpression(var: !209, expr: !DIExpression())
!209 = distinct !DIGlobalVariable(name: "static_regions", scope: !210, file: !219, line: 62, type: !360, isLocal: true, isDefinition: true)
!210 = distinct !DICompileUnit(language: DW_LANG_C99, file: !211, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !212, globals: !215, splitDebugInlining: false, nameTableKind: None)
!211 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!212 = !{!213, !103, !121, !102}
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !214, line: 214, baseType: !32)
!214 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!215 = !{!216, !208}
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !218, file: !219, line: 198, type: !346, isLocal: true, isDefinition: true)
!218 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !219, file: !219, line: 175, type: !220, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !341)
!219 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!220 = !DISubroutineType(types: !221)
!221 = !{null, !222}
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 32)
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !224, line: 245, size: 1024, elements: !225)
!224 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!225 = !{!226, !295, !308, !309, !310, !311, !317, !336}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !223, file: !224, line: 247, baseType: !227, size: 384)
!227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !224, line: 57, size: 384, elements: !228)
!228 = !{!229, !257, !265, !266, !267, !280, !281, !282}
!229 = !DIDerivedType(tag: DW_TAG_member, scope: !227, file: !224, line: 60, baseType: !230, size: 64)
!230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !227, file: !224, line: 60, size: 64, elements: !231)
!231 = !{!232, !248}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !230, file: !224, line: 61, baseType: !233, size: 64)
!233 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !234, line: 49, baseType: !235)
!234 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !236)
!236 = !{!237, !243}
!237 = !DIDerivedType(tag: DW_TAG_member, scope: !235, file: !234, line: 38, baseType: !238, size: 32)
!238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !235, file: !234, line: 38, size: 32, elements: !239)
!239 = !{!240, !242}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !238, file: !234, line: 39, baseType: !241, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !238, file: !234, line: 40, baseType: !241, size: 32)
!243 = !DIDerivedType(tag: DW_TAG_member, scope: !235, file: !234, line: 42, baseType: !244, size: 32, offset: 32)
!244 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !235, file: !234, line: 42, size: 32, elements: !245)
!245 = !{!246, !247}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !244, file: !234, line: 43, baseType: !241, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !244, file: !234, line: 44, baseType: !241, size: 32)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !230, file: !224, line: 62, baseType: !249, size: 64)
!249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !250, line: 49, size: 64, elements: !251)
!250 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!251 = !{!252}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !249, file: !250, line: 50, baseType: !253, size: 64)
!253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !254, size: 64, elements: !255)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 32)
!255 = !{!256}
!256 = !DISubrange(count: 2)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !227, file: !224, line: 68, baseType: !258, size: 32, offset: 64)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 32)
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !260, line: 233, baseType: !261)
!260 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!261 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !260, line: 231, size: 64, elements: !262)
!262 = !{!263}
!263 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !261, file: !260, line: 232, baseType: !264, size: 64)
!264 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !235)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !227, file: !224, line: 71, baseType: !167, size: 8, offset: 96)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !227, file: !224, line: 74, baseType: !167, size: 8, offset: 104)
!267 = !DIDerivedType(tag: DW_TAG_member, scope: !227, file: !224, line: 90, baseType: !268, size: 16, offset: 112)
!268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !227, file: !224, line: 90, size: 16, elements: !269)
!269 = !{!270, !277}
!270 = !DIDerivedType(tag: DW_TAG_member, scope: !268, file: !224, line: 91, baseType: !271, size: 16)
!271 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !268, file: !224, line: 91, size: 16, elements: !272)
!272 = !{!273, !276}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !271, file: !224, line: 96, baseType: !274, size: 8)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !275)
!275 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !271, file: !224, line: 97, baseType: !167, size: 8, offset: 8)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !268, file: !224, line: 100, baseType: !278, size: 16)
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !279)
!279 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !227, file: !224, line: 107, baseType: !121, size: 32, offset: 128)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !227, file: !224, line: 127, baseType: !102, size: 32, offset: 160)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !227, file: !224, line: 131, baseType: !283, size: 192, offset: 192)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !260, line: 244, size: 192, elements: !284)
!284 = !{!285, !286, !292}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !283, file: !260, line: 245, baseType: !233, size: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !283, file: !260, line: 246, baseType: !287, size: 32, offset: 64)
!287 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !260, line: 242, baseType: !288)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 32)
!289 = !DISubroutineType(types: !290)
!290 = !{null, !291}
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 32)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !283, file: !260, line: 249, baseType: !293, size: 64, offset: 128)
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !294)
!294 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !223, file: !224, line: 250, baseType: !296, size: 288, offset: 384)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !298)
!297 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!298 = !{!299, !300, !301, !302, !303, !304, !305, !306, !307}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !296, file: !297, line: 26, baseType: !121, size: 32)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !296, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !296, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !296, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !296, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !296, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !296, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !296, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !296, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !223, file: !224, line: 253, baseType: !102, size: 32, offset: 672)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !223, file: !224, line: 256, baseType: !259, size: 64, offset: 704)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !223, file: !224, line: 294, baseType: !103, size: 32, offset: 768)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !223, file: !224, line: 300, baseType: !312, size: 96, offset: 800)
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !224, line: 149, size: 96, elements: !313)
!313 = !{!314, !315, !316}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !312, file: !224, line: 153, baseType: !22, size: 32)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !312, file: !224, line: 162, baseType: !213, size: 32, offset: 32)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !312, file: !224, line: 168, baseType: !213, size: 32, offset: 64)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !223, file: !224, line: 325, baseType: !318, size: 32, offset: 896)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 32)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !320, line: 5073, size: 160, elements: !321)
!320 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!321 = !{!322, !331, !332}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !319, file: !320, line: 5074, baseType: !323, size: 96)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !325)
!324 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!325 = !{!326, !329, !330}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !323, file: !324, line: 57, baseType: !327, size: 32)
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 32)
!328 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !324, line: 57, flags: DIFlagFwdDecl)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !323, file: !324, line: 58, baseType: !102, size: 32, offset: 32)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !323, file: !324, line: 59, baseType: !213, size: 32, offset: 64)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !319, file: !320, line: 5075, baseType: !259, size: 64, offset: 96)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !319, file: !320, line: 5076, baseType: !333, offset: 160)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!334 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!335 = !{}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !223, file: !224, line: 343, baseType: !337, size: 64, offset: 928)
!337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !297, line: 60, size: 64, elements: !338)
!338 = !{!339, !340}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !337, file: !297, line: 63, baseType: !121, size: 32)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !337, file: !297, line: 66, baseType: !121, size: 32, offset: 32)
!341 = !{!342, !343, !344, !345}
!342 = !DILocalVariable(name: "thread", arg: 1, scope: !218, file: !219, line: 175, type: !222)
!343 = !DILocalVariable(name: "region_num", scope: !218, file: !219, line: 200, type: !167)
!344 = !DILocalVariable(name: "guard_start", scope: !218, file: !219, line: 265, type: !22)
!345 = !DILocalVariable(name: "guard_size", scope: !218, file: !219, line: 266, type: !213)
!346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 96, elements: !358)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !348, line: 52, size: 96, elements: !349)
!348 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!349 = !{!350, !351, !352}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !347, file: !348, line: 53, baseType: !22, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !347, file: !348, line: 54, baseType: !213, size: 32, offset: 32)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !347, file: !348, line: 55, baseType: !353, size: 32, offset: 64)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !354, line: 151, baseType: !355)
!354 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!355 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !354, line: 149, size: 32, elements: !356)
!356 = !{!357}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !355, file: !354, line: 150, baseType: !121, size: 32)
!358 = !{!359}
!359 = !DISubrange(count: 1)
!360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !361, size: 96, elements: !358)
!361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!362 = !DIGlobalVariableExpression(var: !363, expr: !DIExpression())
!363 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !364, file: !397, line: 39, type: !167, isLocal: true, isDefinition: true)
!364 = distinct !DICompileUnit(language: DW_LANG_C99, file: !365, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !366, globals: !396, splitDebugInlining: false, nameTableKind: None)
!365 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!366 = !{!367, !102, !103, !384, !167}
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 32)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !369, line: 1168, baseType: !370)
!369 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm3.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 1155, size: 352, elements: !371)
!371 = !{!372, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !370, file: !369, line: 1157, baseType: !373, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !370, file: !369, line: 1158, baseType: !120, size: 32, offset: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !370, file: !369, line: 1159, baseType: !120, size: 32, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !370, file: !369, line: 1160, baseType: !120, size: 32, offset: 96)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !370, file: !369, line: 1161, baseType: !120, size: 32, offset: 128)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !370, file: !369, line: 1162, baseType: !120, size: 32, offset: 160)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !370, file: !369, line: 1163, baseType: !120, size: 32, offset: 192)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !370, file: !369, line: 1164, baseType: !120, size: 32, offset: 224)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !370, file: !369, line: 1165, baseType: !120, size: 32, offset: 256)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !370, file: !369, line: 1166, baseType: !120, size: 32, offset: 288)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !370, file: !369, line: 1167, baseType: !120, size: 32, offset: 320)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 32)
!385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !386)
!386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !387, line: 27, size: 96, elements: !388)
!387 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!388 = !{!389, !390, !391}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !386, file: !387, line: 29, baseType: !121, size: 32)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !386, file: !387, line: 31, baseType: !157, size: 32, offset: 32)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !386, file: !387, line: 37, baseType: !392, size: 32, offset: 64)
!392 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !354, line: 146, baseType: !393)
!393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !354, line: 141, size: 32, elements: !394)
!394 = !{!395}
!395 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !393, file: !354, line: 143, baseType: !121, size: 32)
!396 = !{!362}
!397 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!398 = !DIGlobalVariableExpression(var: !399, expr: !DIExpression())
!399 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !400, file: !407, line: 21, type: !106, isLocal: true, isDefinition: true)
!400 = distinct !DICompileUnit(language: DW_LANG_C99, file: !401, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !402, globals: !406, splitDebugInlining: false, nameTableKind: None)
!401 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!402 = !{!403, !103, !102}
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 32)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !405, line: 22, baseType: !103)
!405 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!406 = !{!398}
!407 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!408 = !DIGlobalVariableExpression(var: !409, expr: !DIExpression())
!409 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !410, file: !415, line: 13, type: !432, isLocal: true, isDefinition: true)
!410 = distinct !DICompileUnit(language: DW_LANG_C99, file: !411, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !412, splitDebugInlining: false, nameTableKind: None)
!411 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!412 = !{!413, !408}
!413 = !DIGlobalVariableExpression(var: !414, expr: !DIExpression())
!414 = distinct !DIGlobalVariable(name: "mpu_config", scope: !410, file: !415, line: 37, type: !416, isLocal: false, isDefinition: true)
!415 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !417)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !387, line: 41, size: 64, elements: !418)
!418 = !{!419, !420}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !417, file: !387, line: 43, baseType: !121, size: 32)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !417, file: !387, line: 45, baseType: !421, size: 32, offset: 32)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !423)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !387, line: 27, size: 96, elements: !424)
!424 = !{!425, !426, !427}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !423, file: !387, line: 29, baseType: !121, size: 32)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !423, file: !387, line: 31, baseType: !157, size: 32, offset: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !423, file: !387, line: 37, baseType: !428, size: 32, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !354, line: 146, baseType: !429)
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !354, line: 141, size: 32, elements: !430)
!430 = !{!431}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !429, file: !354, line: 143, baseType: !121, size: 32)
!432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !422, size: 192, elements: !255)
!433 = !DIGlobalVariableExpression(var: !434, expr: !DIExpression())
!434 = distinct !DIGlobalVariable(name: "__init_rf_init", scope: !435, file: !532, line: 36, type: !533, isLocal: true, isDefinition: true, align: 32)
!435 = distinct !DICompileUnit(language: DW_LANG_C99, file: !436, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !437, retainedTypes: !449, globals: !531, splitDebugInlining: false, nameTableKind: None)
!436 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!437 = !{!438, !444}
!438 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !439, line: 506, baseType: !32, size: 32, elements: !440)
!439 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!440 = !{!441, !442, !443}
!441 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!442 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!443 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!444 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !439, line: 512, baseType: !32, size: 32, elements: !445)
!445 = !{!446, !447, !448}
!446 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!447 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!448 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!449 = !{!450, !520, !525, !485, !444, !438, !530, !102}
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 32)
!451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !452)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !439, line: 523, size: 288, elements: !453)
!453 = !{!454, !475, !481, !486, !490, !491, !492, !496, !516}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !452, file: !439, line: 524, baseType: !455, size: 32)
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 32)
!456 = !DISubroutineType(types: !457)
!457 = !{!103, !458, !473, !474}
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 32)
!459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !460)
!460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !461)
!461 = !{!462, !463, !464, !465, !471, !472}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !460, file: !154, line: 380, baseType: !157, size: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !460, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !460, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !460, file: !154, line: 386, baseType: !466, size: 32, offset: 96)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 32)
!467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !468)
!468 = !{!469, !470}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !467, file: !154, line: 359, baseType: !167, size: 8)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !467, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !460, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !460, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!473 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !439, line: 237, baseType: !167)
!474 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !439, line: 257, baseType: !121)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !452, file: !439, line: 530, baseType: !476, size: 32, offset: 32)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 32)
!477 = !DISubroutineType(types: !478)
!478 = !{!103, !458, !479}
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 32)
!480 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !439, line: 229, baseType: !121)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !452, file: !439, line: 532, baseType: !482, size: 32, offset: 64)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 32)
!483 = !DISubroutineType(types: !484)
!484 = !{!103, !458, !485, !480}
!485 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !439, line: 216, baseType: !121)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !452, file: !439, line: 535, baseType: !487, size: 32, offset: 96)
!487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 32)
!488 = !DISubroutineType(types: !489)
!489 = !{!103, !458, !485}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !452, file: !439, line: 537, baseType: !487, size: 32, offset: 128)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !452, file: !439, line: 539, baseType: !487, size: 32, offset: 160)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !452, file: !439, line: 541, baseType: !493, size: 32, offset: 192)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 32)
!494 = !DISubroutineType(types: !495)
!495 = !{!103, !458, !473, !438, !444}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !452, file: !439, line: 544, baseType: !497, size: 32, offset: 224)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 32)
!498 = !DISubroutineType(types: !499)
!499 = !{!103, !458, !500, !170}
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 32)
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !439, line: 478, size: 96, elements: !502)
!502 = !{!503, !510, !515}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !501, file: !439, line: 482, baseType: !504, size: 32)
!504 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !505, line: 33, baseType: !506)
!505 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !505, line: 29, size: 32, elements: !507)
!507 = !{!508}
!508 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !506, file: !505, line: 30, baseType: !509, size: 32)
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !501, file: !439, line: 485, baseType: !511, size: 32, offset: 32)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !439, line: 464, baseType: !512)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 32)
!513 = !DISubroutineType(types: !514)
!514 = !{null, !458, !500, !485}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !501, file: !439, line: 493, baseType: !485, size: 32, offset: 64)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !452, file: !439, line: 547, baseType: !517, size: 32, offset: 256)
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 32)
!518 = !DISubroutineType(types: !519)
!519 = !{!121, !458}
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 32)
!521 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !522)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !439, line: 428, size: 32, elements: !523)
!523 = !{!524}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !522, file: !439, line: 434, baseType: !485, size: 32)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 32)
!526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !527)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !439, line: 441, size: 32, elements: !528)
!528 = !{!529}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !527, file: !439, line: 447, baseType: !485, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 32)
!531 = !{!433}
!532 = !DIFile(filename: "zephyr/boards/arm/96b_wistrio/rf.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !534)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !535)
!535 = !{!536, !540}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !534, file: !145, line: 60, baseType: !537, size: 32)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 32)
!538 = !DISubroutineType(types: !539)
!539 = !{!103, !458}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !534, file: !145, line: 65, baseType: !458, size: 32, offset: 32)
!541 = !DIGlobalVariableExpression(var: !542, expr: !DIExpression())
!542 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !543, file: !615, line: 48, type: !691, isLocal: true, isDefinition: true)
!543 = distinct !DICompileUnit(language: DW_LANG_C99, file: !544, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !545, retainedTypes: !601, globals: !612, splitDebugInlining: false, nameTableKind: None)
!544 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!545 = !{!30, !546}
!546 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 69, baseType: !103, size: 32, elements: !547)
!547 = !{!548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600}
!548 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!549 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!550 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!551 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!552 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!553 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!554 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!555 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!556 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!557 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!558 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!559 = !DIEnumerator(name: "TAMPER_STAMP_IRQn", value: 2)
!560 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!561 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!562 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!563 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!564 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!565 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!566 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!567 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!568 = !DIEnumerator(name: "DMA1_Channel1_IRQn", value: 11)
!569 = !DIEnumerator(name: "DMA1_Channel2_IRQn", value: 12)
!570 = !DIEnumerator(name: "DMA1_Channel3_IRQn", value: 13)
!571 = !DIEnumerator(name: "DMA1_Channel4_IRQn", value: 14)
!572 = !DIEnumerator(name: "DMA1_Channel5_IRQn", value: 15)
!573 = !DIEnumerator(name: "DMA1_Channel6_IRQn", value: 16)
!574 = !DIEnumerator(name: "DMA1_Channel7_IRQn", value: 17)
!575 = !DIEnumerator(name: "ADC1_IRQn", value: 18)
!576 = !DIEnumerator(name: "USB_HP_IRQn", value: 19)
!577 = !DIEnumerator(name: "USB_LP_IRQn", value: 20)
!578 = !DIEnumerator(name: "DAC_IRQn", value: 21)
!579 = !DIEnumerator(name: "COMP_IRQn", value: 22)
!580 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!581 = !DIEnumerator(name: "TIM9_IRQn", value: 25)
!582 = !DIEnumerator(name: "TIM10_IRQn", value: 26)
!583 = !DIEnumerator(name: "TIM11_IRQn", value: 27)
!584 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!585 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!586 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!587 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!588 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!589 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!590 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!591 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!592 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!593 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!594 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!595 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!596 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!597 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!598 = !DIEnumerator(name: "USB_FS_WKUP_IRQn", value: 42)
!599 = !DIEnumerator(name: "TIM6_IRQn", value: 43)
!600 = !DIEnumerator(name: "TIM7_IRQn", value: 44)
!601 = !{!213, !103, !102, !602}
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !116, line: 270, baseType: !604)
!604 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 262, size: 192, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !611}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !604, file: !116, line: 264, baseType: !120, size: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !604, file: !116, line: 265, baseType: !120, size: 32, offset: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !604, file: !116, line: 266, baseType: !120, size: 32, offset: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !604, file: !116, line: 267, baseType: !120, size: 32, offset: 96)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !604, file: !116, line: 268, baseType: !120, size: 32, offset: 128)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !604, file: !116, line: 269, baseType: !120, size: 32, offset: 160)
!612 = !{!613, !619, !635, !646, !663, !541, !665, !679, !681, !683, !685, !687, !689}
!613 = !DIGlobalVariableExpression(var: !614, expr: !DIExpression())
!614 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !543, file: !615, line: 424, type: !616, isLocal: false, isDefinition: true, align: 16)
!615 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 64, elements: !617)
!617 = !{!618}
!618 = !DISubrange(count: 4)
!619 = !DIGlobalVariableExpression(var: !620, expr: !DIExpression())
!620 = distinct !DIGlobalVariable(name: "__device_dts_ord_32", scope: !543, file: !615, line: 424, type: !621, isLocal: false, isDefinition: true, align: 32)
!621 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !622)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !623)
!623 = !{!624, !625, !626, !627, !633, !634}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !622, file: !154, line: 380, baseType: !157, size: 32)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !622, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !622, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !622, file: !154, line: 386, baseType: !628, size: 32, offset: 96)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 32)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !630)
!630 = !{!631, !632}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !629, file: !154, line: 359, baseType: !167, size: 8)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !629, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !622, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !622, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!635 = !DIGlobalVariableExpression(var: !636, expr: !DIExpression())
!636 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_32", scope: !543, file: !615, line: 424, type: !637, isLocal: true, isDefinition: true, align: 32)
!637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !638)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !639)
!639 = !{!640, !645}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !638, file: !145, line: 60, baseType: !641, size: 32)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 32)
!642 = !DISubroutineType(types: !643)
!643 = !{!103, !644}
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 32)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !638, file: !145, line: 65, baseType: !644, size: 32, offset: 32)
!646 = !DIGlobalVariableExpression(var: !647, expr: !DIExpression())
!647 = distinct !DIGlobalVariable(name: "exti_data", scope: !543, file: !615, line: 423, type: !648, isLocal: true, isDefinition: true)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !615, line: 107, size: 1024, elements: !649)
!649 = !{!650}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !648, file: !615, line: 109, baseType: !651, size: 1024)
!651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !652, size: 1024, elements: !661)
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !615, line: 101, size: 64, elements: !653)
!653 = !{!654, !660}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !652, file: !615, line: 102, baseType: !655, size: 32)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !656, line: 63, baseType: !657)
!656 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 32)
!658 = !DISubroutineType(types: !659)
!659 = !{null, !103, !102}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !652, file: !615, line: 103, baseType: !102, size: 32, offset: 32)
!661 = !{!662}
!662 = !DISubrange(count: 16)
!663 = !DIGlobalVariableExpression(var: !664, expr: !DIExpression())
!664 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_32", scope: !543, file: !615, line: 424, type: !629, isLocal: true, isDefinition: true, align: 8)
!665 = !DIGlobalVariableExpression(var: !666, expr: !DIExpression())
!666 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !667, file: !615, line: 493, type: !672, isLocal: true, isDefinition: true, align: 32)
!667 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !615, file: !615, line: 460, type: !668, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !670)
!668 = !DISubroutineType(types: !669)
!669 = !{null, !644}
!670 = !{!671}
!671 = !DILocalVariable(name: "dev", arg: 1, scope: !667, file: !615, line: 460, type: !644)
!672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !673)
!673 = !{!674, !676, !677, !678}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !672, file: !10, line: 55, baseType: !675, size: 32)
!675 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !103)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !672, file: !10, line: 57, baseType: !675, size: 32, offset: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !672, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !672, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!679 = !DIGlobalVariableExpression(var: !680, expr: !DIExpression())
!680 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !667, file: !615, line: 497, type: !672, isLocal: true, isDefinition: true, align: 32)
!681 = !DIGlobalVariableExpression(var: !682, expr: !DIExpression())
!682 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !667, file: !615, line: 507, type: !672, isLocal: true, isDefinition: true, align: 32)
!683 = !DIGlobalVariableExpression(var: !684, expr: !DIExpression())
!684 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !667, file: !615, line: 512, type: !672, isLocal: true, isDefinition: true, align: 32)
!685 = !DIGlobalVariableExpression(var: !686, expr: !DIExpression())
!686 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !667, file: !615, line: 516, type: !672, isLocal: true, isDefinition: true, align: 32)
!687 = !DIGlobalVariableExpression(var: !688, expr: !DIExpression())
!688 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !667, file: !615, line: 523, type: !672, isLocal: true, isDefinition: true, align: 32)
!689 = !DIGlobalVariableExpression(var: !690, expr: !DIExpression())
!690 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !667, file: !615, line: 527, type: !672, isLocal: true, isDefinition: true, align: 32)
!691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !692, size: 512, elements: !661)
!692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !693)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !116, line: 127, baseType: !546)
!694 = !DIGlobalVariableExpression(var: !695, expr: !DIExpression())
!695 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_32", scope: !696, file: !701, line: 21, type: !721, isLocal: false, isDefinition: true, align: 16)
!696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !698, splitDebugInlining: false, nameTableKind: None)
!697 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!698 = !{!699, !694, !705, !707, !709, !711, !713, !715, !717, !719}
!699 = !DIGlobalVariableExpression(var: !700, expr: !DIExpression())
!700 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !696, file: !701, line: 16, type: !702, isLocal: false, isDefinition: true, align: 16)
!701 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 176, elements: !703)
!703 = !{!704}
!704 = !DISubrange(count: 11)
!705 = !DIGlobalVariableExpression(var: !706, expr: !DIExpression())
!706 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !696, file: !701, line: 28, type: !616, isLocal: false, isDefinition: true, align: 16)
!707 = !DIGlobalVariableExpression(var: !708, expr: !DIExpression())
!708 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !696, file: !701, line: 35, type: !616, isLocal: false, isDefinition: true, align: 16)
!709 = !DIGlobalVariableExpression(var: !710, expr: !DIExpression())
!710 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !696, file: !701, line: 42, type: !616, isLocal: false, isDefinition: true, align: 16)
!711 = !DIGlobalVariableExpression(var: !712, expr: !DIExpression())
!712 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !696, file: !701, line: 49, type: !616, isLocal: false, isDefinition: true, align: 16)
!713 = !DIGlobalVariableExpression(var: !714, expr: !DIExpression())
!714 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !696, file: !701, line: 56, type: !616, isLocal: false, isDefinition: true, align: 16)
!715 = !DIGlobalVariableExpression(var: !716, expr: !DIExpression())
!716 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !696, file: !701, line: 63, type: !616, isLocal: false, isDefinition: true, align: 16)
!717 = !DIGlobalVariableExpression(var: !718, expr: !DIExpression())
!718 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !696, file: !701, line: 70, type: !616, isLocal: false, isDefinition: true, align: 16)
!719 = !DIGlobalVariableExpression(var: !720, expr: !DIExpression())
!720 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !696, file: !701, line: 77, type: !616, isLocal: false, isDefinition: true, align: 16)
!721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 48, elements: !722)
!722 = !{!723}
!723 = !DISubrange(count: 3)
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !726, file: !770, line: 398, type: !803, isLocal: true, isDefinition: true)
!726 = distinct !DICompileUnit(language: DW_LANG_C99, file: !727, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !728, retainedTypes: !741, globals: !767, splitDebugInlining: false, nameTableKind: None)
!727 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!728 = !{!729, !30, !734}
!729 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !730, line: 190, baseType: !32, size: 32, elements: !731)
!730 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/stm32l1xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!731 = !{!732, !733}
!732 = !DIEnumerator(name: "SUCCESS", value: 0)
!733 = !DIEnumerator(name: "ERROR", value: 1)
!734 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !735, line: 44, baseType: !32, size: 32, elements: !736)
!735 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!736 = !{!737, !738, !739, !740}
!737 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!738 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!739 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!740 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!741 = !{!102, !103, !121, !742, !760, !766}
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 32)
!743 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !744)
!744 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !745)
!745 = !{!746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !744, file: !116, line: 372, baseType: !120, size: 32)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !744, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !744, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !744, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !744, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !744, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !744, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !744, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !744, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !744, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !744, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !744, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !744, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !744, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 32)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !762, line: 343, size: 64, elements: !763)
!762 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!763 = !{!764, !765}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !761, file: !762, line: 344, baseType: !121, size: 32)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !761, file: !762, line: 345, baseType: !121, size: 32, offset: 32)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!767 = !{!768, !774, !790, !801, !724}
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_9", scope: !726, file: !770, line: 752, type: !771, isLocal: false, isDefinition: true, align: 16)
!770 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 512, elements: !772)
!772 = !{!773}
!773 = !DISubrange(count: 32)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "__device_dts_ord_9", scope: !726, file: !770, line: 752, type: !776, isLocal: false, isDefinition: true, align: 32)
!776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !777)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !778)
!778 = !{!779, !780, !781, !782, !788, !789}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !777, file: !154, line: 380, baseType: !157, size: 32)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !777, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !777, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !777, file: !154, line: 386, baseType: !783, size: 32, offset: 96)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 32)
!784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !785)
!785 = !{!786, !787}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !784, file: !154, line: 359, baseType: !167, size: 8)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !784, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !777, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !777, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!790 = !DIGlobalVariableExpression(var: !791, expr: !DIExpression())
!791 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_9", scope: !726, file: !770, line: 752, type: !792, isLocal: true, isDefinition: true, align: 32)
!792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !793)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !794)
!794 = !{!795, !800}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !793, file: !145, line: 60, baseType: !796, size: 32)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 32)
!797 = !DISubroutineType(types: !798)
!798 = !{!103, !799}
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 32)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !793, file: !145, line: 65, baseType: !799, size: 32, offset: 32)
!801 = !DIGlobalVariableExpression(var: !802, expr: !DIExpression())
!802 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_9", scope: !726, file: !770, line: 752, type: !784, isLocal: true, isDefinition: true, align: 8)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !735, line: 100, size: 224, elements: !804)
!804 = !{!805, !811, !812, !821, !826, !831, !837}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !803, file: !735, line: 101, baseType: !806, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !735, line: 76, baseType: !807)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 32)
!808 = !DISubroutineType(types: !809)
!809 = !{!103, !799, !810}
!810 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !735, line: 56, baseType: !102)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !803, file: !735, line: 102, baseType: !806, size: 32, offset: 32)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !803, file: !735, line: 103, baseType: !813, size: 32, offset: 64)
!813 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !735, line: 83, baseType: !814)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 32)
!815 = !DISubroutineType(types: !816)
!816 = !{!103, !799, !810, !817, !102}
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !735, line: 72, baseType: !818)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 32)
!819 = !DISubroutineType(types: !820)
!820 = !{null, !799, !810, !102}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !803, file: !735, line: 104, baseType: !822, size: 32, offset: 96)
!822 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !735, line: 79, baseType: !823)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 32)
!824 = !DISubroutineType(types: !825)
!825 = !{!103, !799, !810, !766}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !803, file: !735, line: 105, baseType: !827, size: 32, offset: 128)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !735, line: 88, baseType: !828)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 32)
!829 = !DISubroutineType(types: !830)
!830 = !{!734, !799, !810}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !803, file: !735, line: 106, baseType: !832, size: 32, offset: 160)
!832 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !735, line: 92, baseType: !833)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 32)
!834 = !DISubroutineType(types: !835)
!835 = !{!103, !799, !810, !836}
!836 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !735, line: 64, baseType: !102)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !803, file: !735, line: 107, baseType: !838, size: 32, offset: 192)
!838 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !735, line: 96, baseType: !839)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 32)
!840 = !DISubroutineType(types: !841)
!841 = !{!103, !799, !810, !102}
!842 = !DIGlobalVariableExpression(var: !843, expr: !DIExpression())
!843 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !844, file: !901, line: 603, type: !903, isLocal: true, isDefinition: true, align: 32)
!844 = distinct !DICompileUnit(language: DW_LANG_C99, file: !845, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !846, globals: !898, splitDebugInlining: false, nameTableKind: None)
!845 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!846 = !{!102, !103, !847}
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 32)
!848 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !849)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !850, line: 336, size: 160, elements: !851)
!850 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!851 = !{!852, !872, !876, !880, !893}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !849, file: !850, line: 365, baseType: !853, size: 32)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 32)
!854 = !DISubroutineType(types: !855)
!855 = !{!103, !856, !871}
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 32)
!857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !858)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !859)
!859 = !{!860, !861, !862, !863, !869, !870}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !858, file: !154, line: 380, baseType: !157, size: 32)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !858, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !858, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !858, file: !154, line: 386, baseType: !864, size: 32, offset: 96)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 32)
!865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !866)
!866 = !{!867, !868}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !865, file: !154, line: 359, baseType: !167, size: 8)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !865, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !858, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !858, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !849, file: !850, line: 366, baseType: !873, size: 32, offset: 32)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 32)
!874 = !DISubroutineType(types: !875)
!875 = !{null, !856, !168}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !849, file: !850, line: 374, baseType: !877, size: 32, offset: 64)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 32)
!878 = !DISubroutineType(types: !879)
!879 = !{!103, !856}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !849, file: !850, line: 377, baseType: !881, size: 32, offset: 96)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 32)
!882 = !DISubroutineType(types: !883)
!883 = !{!103, !856, !884}
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 32)
!885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !886)
!886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !850, line: 122, size: 64, elements: !887)
!887 = !{!888, !889, !890, !891, !892}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !886, file: !850, line: 123, baseType: !121, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !886, file: !850, line: 124, baseType: !167, size: 8, offset: 32)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !886, file: !850, line: 125, baseType: !167, size: 8, offset: 40)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !886, file: !850, line: 126, baseType: !167, size: 8, offset: 48)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !886, file: !850, line: 127, baseType: !167, size: 8, offset: 56)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !849, file: !850, line: 379, baseType: !894, size: 32, offset: 128)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 32)
!895 = !DISubroutineType(types: !896)
!896 = !{!103, !856, !897}
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 32)
!898 = !{!842, !899}
!899 = !DIGlobalVariableExpression(var: !900, expr: !DIExpression())
!900 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !844, file: !901, line: 38, type: !902, isLocal: true, isDefinition: true)
!901 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !856)
!903 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !904)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !905)
!905 = !{!906, !907}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !904, file: !145, line: 60, baseType: !877, size: 32)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !904, file: !145, line: 65, baseType: !856, size: 32, offset: 32)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !910, file: !1061, line: 762, type: !1159, isLocal: true, isDefinition: true)
!910 = distinct !DICompileUnit(language: DW_LANG_C99, file: !911, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !912, retainedTypes: !919, globals: !1058, splitDebugInlining: false, nameTableKind: None)
!911 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!912 = !{!30, !438, !444, !913, !734}
!913 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !656, line: 43, baseType: !32, size: 32, elements: !914)
!914 = !{!915, !916, !917, !918}
!915 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!916 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!917 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!918 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!919 = !{!102, !103, !920, !984, !989, !485, !444, !438, !994, !995, !121, !1009, !965, !1017, !1018, !1019}
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 32)
!921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !922)
!922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !439, line: 523, size: 288, elements: !923)
!923 = !{!924, !943, !947, !951, !955, !956, !957, !961, !980}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !922, file: !439, line: 524, baseType: !925, size: 32)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!926 = !DISubroutineType(types: !927)
!927 = !{!103, !928, !473, !474}
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 32)
!929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !930)
!930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !931)
!931 = !{!932, !933, !934, !935, !941, !942}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !930, file: !154, line: 380, baseType: !157, size: 32)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !930, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !930, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !930, file: !154, line: 386, baseType: !936, size: 32, offset: 96)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 32)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !938)
!938 = !{!939, !940}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !937, file: !154, line: 359, baseType: !167, size: 8)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !937, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !930, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !930, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !922, file: !439, line: 530, baseType: !944, size: 32, offset: 32)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 32)
!945 = !DISubroutineType(types: !946)
!946 = !{!103, !928, !479}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !922, file: !439, line: 532, baseType: !948, size: 32, offset: 64)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 32)
!949 = !DISubroutineType(types: !950)
!950 = !{!103, !928, !485, !480}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !922, file: !439, line: 535, baseType: !952, size: 32, offset: 96)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 32)
!953 = !DISubroutineType(types: !954)
!954 = !{!103, !928, !485}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !922, file: !439, line: 537, baseType: !952, size: 32, offset: 128)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !922, file: !439, line: 539, baseType: !952, size: 32, offset: 160)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !922, file: !439, line: 541, baseType: !958, size: 32, offset: 192)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 32)
!959 = !DISubroutineType(types: !960)
!960 = !{!103, !928, !473, !438, !444}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !922, file: !439, line: 544, baseType: !962, size: 32, offset: 224)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 32)
!963 = !DISubroutineType(types: !964)
!964 = !{!103, !928, !965, !170}
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 32)
!966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !439, line: 478, size: 96, elements: !967)
!967 = !{!968, !974, !979}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !966, file: !439, line: 482, baseType: !969, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !505, line: 33, baseType: !970)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !505, line: 29, size: 32, elements: !971)
!971 = !{!972}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !970, file: !505, line: 30, baseType: !973, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 32)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !966, file: !439, line: 485, baseType: !975, size: 32, offset: 32)
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !439, line: 464, baseType: !976)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 32)
!977 = !DISubroutineType(types: !978)
!978 = !{null, !928, !965, !485}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !966, file: !439, line: 493, baseType: !485, size: 32, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !922, file: !439, line: 547, baseType: !981, size: 32, offset: 256)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 32)
!982 = !DISubroutineType(types: !983)
!983 = !{!121, !928}
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 32)
!985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !986)
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !439, line: 428, size: 32, elements: !987)
!987 = !{!988}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !986, file: !439, line: 434, baseType: !485, size: 32)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 32)
!990 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !991)
!991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !439, line: 441, size: 32, elements: !992)
!992 = !{!993}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !991, file: !439, line: 447, baseType: !485, size: 32)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!996 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 314, baseType: !997)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 303, size: 320, elements: !998)
!998 = !{!999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !997, file: !116, line: 305, baseType: !120, size: 32)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !997, file: !116, line: 306, baseType: !120, size: 32, offset: 32)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !997, file: !116, line: 307, baseType: !120, size: 32, offset: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !997, file: !116, line: 308, baseType: !120, size: 32, offset: 96)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !997, file: !116, line: 309, baseType: !120, size: 32, offset: 128)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !997, file: !116, line: 310, baseType: !120, size: 32, offset: 160)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !997, file: !116, line: 311, baseType: !120, size: 32, offset: 192)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !997, file: !116, line: 312, baseType: !120, size: 32, offset: 224)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !997, file: !116, line: 313, baseType: !1008, size: 64, offset: 256)
!1008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !255)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 32)
!1010 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !116, line: 325, baseType: !1011)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 320, size: 192, elements: !1012)
!1012 = !{!1013, !1014, !1015}
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1011, file: !116, line: 322, baseType: !120, size: 32)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1011, file: !116, line: 323, baseType: !120, size: 32, offset: 32)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1011, file: !116, line: 324, baseType: !1016, size: 128, offset: 64)
!1016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !617)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 32)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 32)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 32)
!1020 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1021)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !735, line: 100, size: 224, elements: !1022)
!1022 = !{!1023, !1028, !1029, !1038, !1043, !1048, !1053}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1021, file: !735, line: 101, baseType: !1024, size: 32)
!1024 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !735, line: 76, baseType: !1025)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 32)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{!103, !928, !810}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1021, file: !735, line: 102, baseType: !1024, size: 32, offset: 32)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1021, file: !735, line: 103, baseType: !1030, size: 32, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !735, line: 83, baseType: !1031)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 32)
!1032 = !DISubroutineType(types: !1033)
!1033 = !{!103, !928, !810, !1034, !102}
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !735, line: 72, baseType: !1035)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 32)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{null, !928, !810, !102}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1021, file: !735, line: 104, baseType: !1039, size: 32, offset: 96)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !735, line: 79, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 32)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!103, !928, !810, !766}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1021, file: !735, line: 105, baseType: !1044, size: 32, offset: 128)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !735, line: 88, baseType: !1045)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 32)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!734, !928, !810}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1021, file: !735, line: 106, baseType: !1049, size: 32, offset: 160)
!1049 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !735, line: 92, baseType: !1050)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 32)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{!103, !928, !810, !836}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1021, file: !735, line: 107, baseType: !1054, size: 32, offset: 192)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !735, line: 96, baseType: !1055)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 32)
!1056 = !DISubroutineType(types: !1057)
!1057 = !{!103, !928, !810, !102}
!1058 = !{!1059, !1065, !1067, !1077, !1082, !1084, !1086, !1091, !1093, !1095, !1100, !1102, !1104, !1106, !1108, !1110, !1115, !1117, !1119, !1133, !1135, !1137, !1139, !1141, !1143, !1145, !1147, !1149, !1151, !1153, !908, !1155, !1157, !1170, !1172, !1174, !1176}
!1059 = !DIGlobalVariableExpression(var: !1060, expr: !DIExpression())
!1060 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_14", scope: !910, file: !1061, line: 762, type: !1062, isLocal: false, isDefinition: true, align: 16)
!1061 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 128, elements: !1063)
!1063 = !{!1064}
!1064 = !DISubrange(count: 8)
!1065 = !DIGlobalVariableExpression(var: !1066, expr: !DIExpression())
!1066 = distinct !DIGlobalVariable(name: "__device_dts_ord_14", scope: !910, file: !1061, line: 762, type: !929, isLocal: false, isDefinition: true, align: 32)
!1067 = !DIGlobalVariableExpression(var: !1068, expr: !DIExpression())
!1068 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_14", scope: !910, file: !1061, line: 762, type: !1069, isLocal: true, isDefinition: true, align: 32)
!1069 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1070)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !1071)
!1071 = !{!1072, !1076}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1070, file: !145, line: 60, baseType: !1073, size: 32)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!103, !928}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1070, file: !145, line: 65, baseType: !928, size: 32, offset: 32)
!1077 = !DIGlobalVariableExpression(var: !1078, expr: !DIExpression())
!1078 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_15", scope: !910, file: !1061, line: 766, type: !1079, isLocal: false, isDefinition: true, align: 16)
!1079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 144, elements: !1080)
!1080 = !{!1081}
!1081 = !DISubrange(count: 9)
!1082 = !DIGlobalVariableExpression(var: !1083, expr: !DIExpression())
!1083 = distinct !DIGlobalVariable(name: "__device_dts_ord_15", scope: !910, file: !1061, line: 766, type: !929, isLocal: false, isDefinition: true, align: 32)
!1084 = !DIGlobalVariableExpression(var: !1085, expr: !DIExpression())
!1085 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_15", scope: !910, file: !1061, line: 766, type: !1069, isLocal: true, isDefinition: true, align: 32)
!1086 = !DIGlobalVariableExpression(var: !1087, expr: !DIExpression())
!1087 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_59", scope: !910, file: !1061, line: 770, type: !1088, isLocal: false, isDefinition: true, align: 16)
!1088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 96, elements: !1089)
!1089 = !{!1090}
!1090 = !DISubrange(count: 6)
!1091 = !DIGlobalVariableExpression(var: !1092, expr: !DIExpression())
!1092 = distinct !DIGlobalVariable(name: "__device_dts_ord_59", scope: !910, file: !1061, line: 770, type: !929, isLocal: false, isDefinition: true, align: 32)
!1093 = !DIGlobalVariableExpression(var: !1094, expr: !DIExpression())
!1094 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_59", scope: !910, file: !1061, line: 770, type: !1069, isLocal: true, isDefinition: true, align: 32)
!1095 = !DIGlobalVariableExpression(var: !1096, expr: !DIExpression())
!1096 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_53", scope: !910, file: !1061, line: 774, type: !1097, isLocal: false, isDefinition: true, align: 16)
!1097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 80, elements: !1098)
!1098 = !{!1099}
!1099 = !DISubrange(count: 5)
!1100 = !DIGlobalVariableExpression(var: !1101, expr: !DIExpression())
!1101 = distinct !DIGlobalVariable(name: "__device_dts_ord_53", scope: !910, file: !1061, line: 774, type: !929, isLocal: false, isDefinition: true, align: 32)
!1102 = !DIGlobalVariableExpression(var: !1103, expr: !DIExpression())
!1103 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_53", scope: !910, file: !1061, line: 774, type: !1069, isLocal: true, isDefinition: true, align: 32)
!1104 = !DIGlobalVariableExpression(var: !1105, expr: !DIExpression())
!1105 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_54", scope: !910, file: !1061, line: 778, type: !1097, isLocal: false, isDefinition: true, align: 16)
!1106 = !DIGlobalVariableExpression(var: !1107, expr: !DIExpression())
!1107 = distinct !DIGlobalVariable(name: "__device_dts_ord_54", scope: !910, file: !1061, line: 778, type: !929, isLocal: false, isDefinition: true, align: 32)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_54", scope: !910, file: !1061, line: 778, type: !1069, isLocal: true, isDefinition: true, align: 32)
!1110 = !DIGlobalVariableExpression(var: !1111, expr: !DIExpression())
!1111 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_17", scope: !910, file: !1061, line: 790, type: !1112, isLocal: false, isDefinition: true, align: 16)
!1112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !174, size: 112, elements: !1113)
!1113 = !{!1114}
!1114 = !DISubrange(count: 7)
!1115 = !DIGlobalVariableExpression(var: !1116, expr: !DIExpression())
!1116 = distinct !DIGlobalVariable(name: "__device_dts_ord_17", scope: !910, file: !1061, line: 790, type: !929, isLocal: false, isDefinition: true, align: 32)
!1117 = !DIGlobalVariableExpression(var: !1118, expr: !DIExpression())
!1118 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_17", scope: !910, file: !1061, line: 790, type: !1069, isLocal: true, isDefinition: true, align: 32)
!1119 = !DIGlobalVariableExpression(var: !1120, expr: !DIExpression())
!1120 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !910, file: !1061, line: 762, type: !1121, isLocal: true, isDefinition: true)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1122, line: 237, size: 128, elements: !1123)
!1122 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1123 = !{!1124, !1125, !1126}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1121, file: !1122, line: 239, baseType: !991, size: 32)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1121, file: !1122, line: 241, baseType: !928, size: 32, offset: 32)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1121, file: !1122, line: 243, baseType: !1127, size: 64, offset: 64)
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !505, line: 40, baseType: !1128)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !505, line: 35, size: 64, elements: !1129)
!1129 = !{!1130, !1132}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1128, file: !505, line: 36, baseType: !1131, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 32)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1128, file: !505, line: 37, baseType: !1131, size: 32, offset: 32)
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_14", scope: !910, file: !1061, line: 762, type: !937, isLocal: true, isDefinition: true, align: 8)
!1135 = !DIGlobalVariableExpression(var: !1136, expr: !DIExpression())
!1136 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !910, file: !1061, line: 766, type: !1121, isLocal: true, isDefinition: true)
!1137 = !DIGlobalVariableExpression(var: !1138, expr: !DIExpression())
!1138 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_15", scope: !910, file: !1061, line: 766, type: !937, isLocal: true, isDefinition: true, align: 8)
!1139 = !DIGlobalVariableExpression(var: !1140, expr: !DIExpression())
!1140 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !910, file: !1061, line: 770, type: !1121, isLocal: true, isDefinition: true)
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_59", scope: !910, file: !1061, line: 770, type: !937, isLocal: true, isDefinition: true, align: 8)
!1143 = !DIGlobalVariableExpression(var: !1144, expr: !DIExpression())
!1144 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !910, file: !1061, line: 774, type: !1121, isLocal: true, isDefinition: true)
!1145 = !DIGlobalVariableExpression(var: !1146, expr: !DIExpression())
!1146 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_53", scope: !910, file: !1061, line: 774, type: !937, isLocal: true, isDefinition: true, align: 8)
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression())
!1148 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !910, file: !1061, line: 778, type: !1121, isLocal: true, isDefinition: true)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_54", scope: !910, file: !1061, line: 778, type: !937, isLocal: true, isDefinition: true, align: 8)
!1151 = !DIGlobalVariableExpression(var: !1152, expr: !DIExpression())
!1152 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !910, file: !1061, line: 790, type: !1121, isLocal: true, isDefinition: true)
!1153 = !DIGlobalVariableExpression(var: !1154, expr: !DIExpression())
!1154 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_17", scope: !910, file: !1061, line: 790, type: !937, isLocal: true, isDefinition: true, align: 8)
!1155 = !DIGlobalVariableExpression(var: !1156, expr: !DIExpression())
!1156 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !910, file: !1061, line: 656, type: !921, isLocal: true, isDefinition: true)
!1157 = !DIGlobalVariableExpression(var: !1158, expr: !DIExpression())
!1158 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !910, file: !1061, line: 766, type: !1159, isLocal: true, isDefinition: true)
!1159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1160)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1122, line: 224, size: 160, elements: !1161)
!1161 = !{!1162, !1163, !1164, !1165}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1160, file: !1122, line: 226, baseType: !986, size: 32)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1160, file: !1122, line: 228, baseType: !766, size: 32, offset: 32)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1160, file: !1122, line: 230, baseType: !103, size: 32, offset: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1160, file: !1122, line: 231, baseType: !1166, size: 64, offset: 96)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !762, line: 343, size: 64, elements: !1167)
!1167 = !{!1168, !1169}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1166, file: !762, line: 344, baseType: !121, size: 32)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1166, file: !762, line: 345, baseType: !121, size: 32, offset: 32)
!1170 = !DIGlobalVariableExpression(var: !1171, expr: !DIExpression())
!1171 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !910, file: !1061, line: 770, type: !1159, isLocal: true, isDefinition: true)
!1172 = !DIGlobalVariableExpression(var: !1173, expr: !DIExpression())
!1173 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !910, file: !1061, line: 774, type: !1159, isLocal: true, isDefinition: true)
!1174 = !DIGlobalVariableExpression(var: !1175, expr: !DIExpression())
!1175 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !910, file: !1061, line: 778, type: !1159, isLocal: true, isDefinition: true)
!1176 = !DIGlobalVariableExpression(var: !1177, expr: !DIExpression())
!1177 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !910, file: !1061, line: 790, type: !1159, isLocal: true, isDefinition: true)
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1180, file: !1318, line: 1914, type: !1386, isLocal: true, isDefinition: true)
!1180 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1181, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1182, retainedTypes: !1215, globals: !1315, splitDebugInlining: false, nameTableKind: None)
!1181 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!1182 = !{!30, !1183, !1190, !1197, !1204, !1210, !734}
!1183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !850, line: 47, baseType: !32, size: 32, elements: !1184)
!1184 = !{!1185, !1186, !1187, !1188, !1189}
!1185 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1186 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1187 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1188 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1189 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !850, line: 75, baseType: !32, size: 32, elements: !1191)
!1191 = !{!1192, !1193, !1194, !1195, !1196}
!1192 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1193 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1194 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1195 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1196 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1197 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !850, line: 92, baseType: !32, size: 32, elements: !1198)
!1198 = !{!1199, !1200, !1201, !1202, !1203}
!1199 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1200 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1201 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1202 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1203 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1204 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !850, line: 84, baseType: !32, size: 32, elements: !1205)
!1205 = !{!1206, !1207, !1208, !1209}
!1206 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1207 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1208 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1209 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1210 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !850, line: 107, baseType: !32, size: 32, elements: !1211)
!1211 = !{!1212, !1213, !1214}
!1212 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1213 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1214 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1215 = !{!102, !103, !1216, !168, !167, !1265, !121, !810, !1276, !278}
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1218)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !850, line: 336, size: 160, elements: !1219)
!1219 = !{!1220, !1239, !1243, !1247, !1260}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1218, file: !850, line: 365, baseType: !1221, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 32)
!1222 = !DISubroutineType(types: !1223)
!1223 = !{!103, !1224, !871}
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1226)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !1227)
!1227 = !{!1228, !1229, !1230, !1231, !1237, !1238}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1226, file: !154, line: 380, baseType: !157, size: 32)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1226, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1226, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1226, file: !154, line: 386, baseType: !1232, size: 32, offset: 96)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 32)
!1233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !1234)
!1234 = !{!1235, !1236}
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1233, file: !154, line: 359, baseType: !167, size: 8)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1233, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1226, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1226, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1218, file: !850, line: 366, baseType: !1240, size: 32, offset: 32)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 32)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{null, !1224, !168}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1218, file: !850, line: 374, baseType: !1244, size: 32, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 32)
!1245 = !DISubroutineType(types: !1246)
!1246 = !{!103, !1224}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1218, file: !850, line: 377, baseType: !1248, size: 32, offset: 96)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 32)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{!103, !1224, !1251}
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 32)
!1252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1253)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !850, line: 122, size: 64, elements: !1254)
!1254 = !{!1255, !1256, !1257, !1258, !1259}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1253, file: !850, line: 123, baseType: !121, size: 32)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1253, file: !850, line: 124, baseType: !167, size: 8, offset: 32)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1253, file: !850, line: 125, baseType: !167, size: 8, offset: 40)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1253, file: !850, line: 126, baseType: !167, size: 8, offset: 48)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1253, file: !850, line: 127, baseType: !167, size: 8, offset: 56)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1218, file: !850, line: 379, baseType: !1261, size: 32, offset: 128)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 32)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!103, !1224, !1264}
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 32)
!1266 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !116, line: 505, baseType: !1267)
!1267 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 496, size: 224, elements: !1268)
!1268 = !{!1269, !1270, !1271, !1272, !1273, !1274, !1275}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1267, file: !116, line: 498, baseType: !120, size: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1267, file: !116, line: 499, baseType: !120, size: 32, offset: 32)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1267, file: !116, line: 500, baseType: !120, size: 32, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1267, file: !116, line: 501, baseType: !120, size: 32, offset: 96)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1267, file: !116, line: 502, baseType: !120, size: 32, offset: 128)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1267, file: !116, line: 503, baseType: !120, size: 32, offset: 160)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1267, file: !116, line: 504, baseType: !120, size: 32, offset: 192)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1278)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !735, line: 100, size: 224, elements: !1279)
!1279 = !{!1280, !1285, !1286, !1295, !1300, !1305, !1310}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1278, file: !735, line: 101, baseType: !1281, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !735, line: 76, baseType: !1282)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 32)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{!103, !1224, !810}
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1278, file: !735, line: 102, baseType: !1281, size: 32, offset: 32)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1278, file: !735, line: 103, baseType: !1287, size: 32, offset: 64)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !735, line: 83, baseType: !1288)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 32)
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!103, !1224, !810, !1291, !102}
!1291 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !735, line: 72, baseType: !1292)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 32)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{null, !1224, !810, !102}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1278, file: !735, line: 104, baseType: !1296, size: 32, offset: 96)
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !735, line: 79, baseType: !1297)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 32)
!1298 = !DISubroutineType(types: !1299)
!1299 = !{!103, !1224, !810, !766}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1278, file: !735, line: 105, baseType: !1301, size: 32, offset: 128)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !735, line: 88, baseType: !1302)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 32)
!1303 = !DISubroutineType(types: !1304)
!1304 = !{!734, !1224, !810}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1278, file: !735, line: 106, baseType: !1306, size: 32, offset: 160)
!1306 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !735, line: 92, baseType: !1307)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 32)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!103, !1224, !810, !836}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1278, file: !735, line: 107, baseType: !1311, size: 32, offset: 192)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !735, line: 96, baseType: !1312)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 32)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{!103, !1224, !810, !102}
!1315 = !{!1316, !1319, !1321, !1328, !1330, !1332, !1334, !1336, !1178, !1338, !1346, !1369, !1372, !1375, !1377, !1384, !1401, !1403, !1405, !1407, !1409}
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !1180, file: !1318, line: 1914, type: !1062, isLocal: false, isDefinition: true, align: 16)
!1318 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1319 = !DIGlobalVariableExpression(var: !1320, expr: !DIExpression())
!1320 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !1180, file: !1318, line: 1914, type: !1225, isLocal: false, isDefinition: true, align: 32)
!1321 = !DIGlobalVariableExpression(var: !1322, expr: !DIExpression())
!1322 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !1180, file: !1318, line: 1914, type: !1323, isLocal: true, isDefinition: true, align: 32)
!1323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1324)
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !1325)
!1325 = !{!1326, !1327}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1324, file: !145, line: 60, baseType: !1244, size: 32)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1324, file: !145, line: 65, baseType: !1224, size: 32, offset: 32)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1180, file: !1318, line: 1914, type: !1062, isLocal: false, isDefinition: true, align: 16)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1180, file: !1318, line: 1914, type: !1225, isLocal: false, isDefinition: true, align: 32)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1180, file: !1318, line: 1914, type: !1323, isLocal: true, isDefinition: true, align: 32)
!1334 = !DIGlobalVariableExpression(var: !1335, expr: !DIExpression())
!1335 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !1180, file: !1318, line: 1914, type: !1233, isLocal: true, isDefinition: true, align: 8)
!1336 = !DIGlobalVariableExpression(var: !1337, expr: !DIExpression())
!1337 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1180, file: !1318, line: 1914, type: !1233, isLocal: true, isDefinition: true, align: 8)
!1338 = !DIGlobalVariableExpression(var: !1339, expr: !DIExpression())
!1339 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1180, file: !1318, line: 1914, type: !1340, isLocal: true, isDefinition: true)
!1340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1341, size: 64, elements: !358)
!1341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1342)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !762, line: 343, size: 64, elements: !1343)
!1343 = !{!1344, !1345}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1342, file: !762, line: 344, baseType: !121, size: 32)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1342, file: !762, line: 345, baseType: !121, size: 32, offset: 32)
!1346 = !DIGlobalVariableExpression(var: !1347, expr: !DIExpression())
!1347 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_36", scope: !1180, file: !1318, line: 1914, type: !1348, isLocal: true, isDefinition: true)
!1348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1349)
!1349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1350, line: 60, size: 64, elements: !1351)
!1350 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1351 = !{!1352, !1368}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1349, file: !1350, line: 69, baseType: !1353, size: 32)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 32)
!1354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1355)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1350, line: 50, size: 64, elements: !1356)
!1356 = !{!1357, !1366, !1367}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1355, file: !1350, line: 52, baseType: !1358, size: 32)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 32)
!1359 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1360)
!1360 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1361, line: 37, baseType: !1362)
!1361 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1361, line: 32, size: 64, elements: !1363)
!1363 = !{!1364, !1365}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1362, file: !1361, line: 34, baseType: !121, size: 32)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1362, file: !1361, line: 36, baseType: !121, size: 32, offset: 32)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1355, file: !1350, line: 54, baseType: !167, size: 8, offset: 32)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1355, file: !1350, line: 56, baseType: !167, size: 8, offset: 40)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1349, file: !1350, line: 71, baseType: !167, size: 8, offset: 32)
!1369 = !DIGlobalVariableExpression(var: !1370, expr: !DIExpression())
!1370 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_36", scope: !1180, file: !1318, line: 1914, type: !1371, isLocal: true, isDefinition: true)
!1371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1354, size: 64, elements: !358)
!1372 = !DIGlobalVariableExpression(var: !1373, expr: !DIExpression())
!1373 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_36", scope: !1180, file: !1318, line: 1914, type: !1374, isLocal: true, isDefinition: true)
!1374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1359, size: 128, elements: !255)
!1375 = !DIGlobalVariableExpression(var: !1376, expr: !DIExpression())
!1376 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1180, file: !1318, line: 1539, type: !1217, isLocal: true, isDefinition: true)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1180, file: !1318, line: 1914, type: !1379, isLocal: true, isDefinition: true)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1380, line: 74, size: 64, elements: !1381)
!1380 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1381 = !{!1382, !1383}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1379, file: !1380, line: 76, baseType: !121, size: 32)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1379, file: !1380, line: 78, baseType: !1224, size: 32, offset: 32)
!1384 = !DIGlobalVariableExpression(var: !1385, expr: !DIExpression())
!1385 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1180, file: !1318, line: 1914, type: !1386, isLocal: true, isDefinition: true)
!1386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1387)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1380, line: 22, size: 224, elements: !1388)
!1388 = !{!1389, !1390, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1387, file: !1380, line: 24, baseType: !1265, size: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1387, file: !1380, line: 26, baseType: !1391, size: 32, offset: 32)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1387, file: !1380, line: 28, baseType: !213, size: 32, offset: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1387, file: !1380, line: 30, baseType: !170, size: 8, offset: 96)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1387, file: !1380, line: 32, baseType: !103, size: 32, offset: 128)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1387, file: !1380, line: 34, baseType: !170, size: 8, offset: 160)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1387, file: !1380, line: 36, baseType: !170, size: 8, offset: 168)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1387, file: !1380, line: 38, baseType: !170, size: 8, offset: 176)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1387, file: !1380, line: 40, baseType: !170, size: 8, offset: 184)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1387, file: !1380, line: 41, baseType: !1400, size: 32, offset: 192)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 32)
!1401 = !DIGlobalVariableExpression(var: !1402, expr: !DIExpression())
!1402 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1180, file: !1318, line: 1914, type: !1340, isLocal: true, isDefinition: true)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1180, file: !1318, line: 1914, type: !1348, isLocal: true, isDefinition: true)
!1405 = !DIGlobalVariableExpression(var: !1406, expr: !DIExpression())
!1406 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1180, file: !1318, line: 1914, type: !1371, isLocal: true, isDefinition: true)
!1407 = !DIGlobalVariableExpression(var: !1408, expr: !DIExpression())
!1408 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1180, file: !1318, line: 1914, type: !1374, isLocal: true, isDefinition: true)
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1180, file: !1318, line: 1914, type: !1379, isLocal: true, isDefinition: true)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1413, file: !1493, line: 65, type: !120, isLocal: true, isDefinition: true)
!1413 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1414, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1415, retainedTypes: !1416, globals: !1490, splitDebugInlining: false, nameTableKind: None)
!1414 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!1415 = !{!546}
!1416 = !{!1417, !1419, !675, !167, !121, !1427, !1458}
!1417 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1418, line: 46, baseType: !293)
!1418 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !369, line: 712, baseType: !1421)
!1421 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 706, size: 128, elements: !1422)
!1422 = !{!1423, !1424, !1425, !1426}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1421, file: !369, line: 708, baseType: !120, size: 32)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1421, file: !369, line: 709, baseType: !120, size: 32, offset: 32)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1421, file: !369, line: 710, baseType: !120, size: 32, offset: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1421, file: !369, line: 711, baseType: !373, size: 32, offset: 96)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !369, line: 360, baseType: !1429)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 345, size: 28704, elements: !1430)
!1430 = !{!1431, !1433, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1448, !1453, !1457}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1429, file: !369, line: 347, baseType: !1432, size: 256)
!1432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !1063)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1429, file: !369, line: 348, baseType: !1434, size: 768, offset: 256)
!1434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 768, elements: !1435)
!1435 = !{!1436}
!1436 = !DISubrange(count: 24)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1429, file: !369, line: 349, baseType: !1432, size: 256, offset: 1024)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1429, file: !369, line: 350, baseType: !1434, size: 768, offset: 1280)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1429, file: !369, line: 351, baseType: !1432, size: 256, offset: 2048)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1429, file: !369, line: 352, baseType: !1434, size: 768, offset: 2304)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1429, file: !369, line: 353, baseType: !1432, size: 256, offset: 3072)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1429, file: !369, line: 354, baseType: !1434, size: 768, offset: 3328)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1429, file: !369, line: 355, baseType: !1432, size: 256, offset: 4096)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1429, file: !369, line: 356, baseType: !1445, size: 1792, offset: 4352)
!1445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 1792, elements: !1446)
!1446 = !{!1447}
!1447 = !DISubrange(count: 56)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1429, file: !369, line: 357, baseType: !1449, size: 1920, offset: 6144)
!1449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1450, size: 1920, elements: !1451)
!1450 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !167)
!1451 = !{!1452}
!1452 = !DISubrange(count: 240)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1429, file: !369, line: 358, baseType: !1454, size: 20608, offset: 8064)
!1454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 20608, elements: !1455)
!1455 = !{!1456}
!1456 = !DISubrange(count: 644)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1429, file: !369, line: 359, baseType: !120, size: 32, offset: 28672)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 32)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !369, line: 402, baseType: !1460)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 379, size: 1120, elements: !1461)
!1461 = !{!1462, !1463, !1464, !1465, !1466, !1467, !1468, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1481, !1482, !1483, !1485, !1487, !1489}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1460, file: !369, line: 381, baseType: !373, size: 32)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1460, file: !369, line: 382, baseType: !120, size: 32, offset: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1460, file: !369, line: 383, baseType: !120, size: 32, offset: 64)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1460, file: !369, line: 384, baseType: !120, size: 32, offset: 96)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1460, file: !369, line: 385, baseType: !120, size: 32, offset: 128)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1460, file: !369, line: 386, baseType: !120, size: 32, offset: 160)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1460, file: !369, line: 387, baseType: !1469, size: 96, offset: 192)
!1469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1450, size: 96, elements: !1470)
!1470 = !{!1471}
!1471 = !DISubrange(count: 12)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1460, file: !369, line: 388, baseType: !120, size: 32, offset: 288)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1460, file: !369, line: 389, baseType: !120, size: 32, offset: 320)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1460, file: !369, line: 390, baseType: !120, size: 32, offset: 352)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1460, file: !369, line: 391, baseType: !120, size: 32, offset: 384)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1460, file: !369, line: 392, baseType: !120, size: 32, offset: 416)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1460, file: !369, line: 393, baseType: !120, size: 32, offset: 448)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1460, file: !369, line: 394, baseType: !120, size: 32, offset: 480)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1460, file: !369, line: 395, baseType: !1480, size: 64, offset: 512)
!1480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !373, size: 64, elements: !255)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1460, file: !369, line: 396, baseType: !373, size: 32, offset: 576)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1460, file: !369, line: 397, baseType: !373, size: 32, offset: 608)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1460, file: !369, line: 398, baseType: !1484, size: 128, offset: 640)
!1484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !373, size: 128, elements: !617)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1460, file: !369, line: 399, baseType: !1486, size: 160, offset: 768)
!1486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !373, size: 160, elements: !1098)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1460, file: !369, line: 400, baseType: !1488, size: 160, offset: 928)
!1488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !121, size: 160, elements: !1098)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1460, file: !369, line: 401, baseType: !120, size: 32, offset: 1088)
!1490 = !{!1491, !1517, !1520, !1522, !1524, !1411}
!1491 = !DIGlobalVariableExpression(var: !1492, expr: !DIExpression())
!1492 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1413, file: !1493, line: 285, type: !1494, isLocal: true, isDefinition: true, align: 32)
!1493 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1494 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1495)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !1496)
!1496 = !{!1497, !1516}
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1495, file: !145, line: 60, baseType: !1498, size: 32)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!103, !1501}
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1503)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !1504)
!1504 = !{!1505, !1506, !1507, !1508, !1514, !1515}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1503, file: !154, line: 380, baseType: !157, size: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1503, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1503, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1503, file: !154, line: 386, baseType: !1509, size: 32, offset: 96)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 32)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !1511)
!1511 = !{!1512, !1513}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1510, file: !154, line: 359, baseType: !167, size: 8)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1510, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1503, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1503, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1495, file: !145, line: 65, baseType: !1501, size: 32, offset: 32)
!1517 = !DIGlobalVariableExpression(var: !1518, expr: !DIExpression())
!1518 = distinct !DIGlobalVariable(name: "lock", scope: !1413, file: !1493, line: 34, type: !1519, isLocal: true, isDefinition: true)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!1520 = !DIGlobalVariableExpression(var: !1521, expr: !DIExpression())
!1521 = distinct !DIGlobalVariable(name: "last_load", scope: !1413, file: !1493, line: 36, type: !121, isLocal: true, isDefinition: true)
!1522 = !DIGlobalVariableExpression(var: !1523, expr: !DIExpression())
!1523 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1413, file: !1493, line: 48, type: !121, isLocal: true, isDefinition: true)
!1524 = !DIGlobalVariableExpression(var: !1525, expr: !DIExpression())
!1525 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1413, file: !1493, line: 54, type: !121, isLocal: true, isDefinition: true)
!1526 = !DIGlobalVariableExpression(var: !1527, expr: !DIExpression())
!1527 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1528, file: !1609, line: 22, type: !1611, isLocal: true, isDefinition: true)
!1528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !437, retainedTypes: !1530, globals: !1606, splitDebugInlining: false, nameTableKind: None)
!1529 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!1530 = !{!1531, !1595, !1600, !485, !444, !438, !1605, !102}
!1531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1532, size: 32)
!1532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1533)
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !439, line: 523, size: 288, elements: !1534)
!1534 = !{!1535, !1554, !1558, !1562, !1566, !1567, !1568, !1572, !1591}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1533, file: !439, line: 524, baseType: !1536, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 32)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!103, !1539, !473, !474}
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 32)
!1540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1541)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !1542)
!1542 = !{!1543, !1544, !1545, !1546, !1552, !1553}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1541, file: !154, line: 380, baseType: !157, size: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1541, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1541, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1541, file: !154, line: 386, baseType: !1547, size: 32, offset: 96)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 32)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !1549)
!1549 = !{!1550, !1551}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1548, file: !154, line: 359, baseType: !167, size: 8)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1548, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1541, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1541, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1533, file: !439, line: 530, baseType: !1555, size: 32, offset: 32)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 32)
!1556 = !DISubroutineType(types: !1557)
!1557 = !{!103, !1539, !479}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1533, file: !439, line: 532, baseType: !1559, size: 32, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 32)
!1560 = !DISubroutineType(types: !1561)
!1561 = !{!103, !1539, !485, !480}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1533, file: !439, line: 535, baseType: !1563, size: 32, offset: 96)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 32)
!1564 = !DISubroutineType(types: !1565)
!1565 = !{!103, !1539, !485}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1533, file: !439, line: 537, baseType: !1563, size: 32, offset: 128)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1533, file: !439, line: 539, baseType: !1563, size: 32, offset: 160)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1533, file: !439, line: 541, baseType: !1569, size: 32, offset: 192)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 32)
!1570 = !DISubroutineType(types: !1571)
!1571 = !{!103, !1539, !473, !438, !444}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1533, file: !439, line: 544, baseType: !1573, size: 32, offset: 224)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 32)
!1574 = !DISubroutineType(types: !1575)
!1575 = !{!103, !1539, !1576, !170}
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 32)
!1577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !439, line: 478, size: 96, elements: !1578)
!1578 = !{!1579, !1585, !1590}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1577, file: !439, line: 482, baseType: !1580, size: 32)
!1580 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !505, line: 33, baseType: !1581)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !505, line: 29, size: 32, elements: !1582)
!1582 = !{!1583}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1581, file: !505, line: 30, baseType: !1584, size: 32)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1577, file: !439, line: 485, baseType: !1586, size: 32, offset: 32)
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !439, line: 464, baseType: !1587)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 32)
!1588 = !DISubroutineType(types: !1589)
!1589 = !{null, !1539, !1576, !485}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1577, file: !439, line: 493, baseType: !485, size: 32, offset: 64)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1533, file: !439, line: 547, baseType: !1592, size: 32, offset: 256)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1593, size: 32)
!1593 = !DISubroutineType(types: !1594)
!1594 = !{!121, !1539}
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1597)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !439, line: 428, size: 32, elements: !1598)
!1598 = !{!1599}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1597, file: !439, line: 434, baseType: !485, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1602)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !439, line: 441, size: 32, elements: !1603)
!1603 = !{!1604}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1602, file: !439, line: 447, baseType: !485, size: 32)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 32)
!1606 = !{!1607, !1526}
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1608 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1528, file: !1609, line: 37, type: !1610, isLocal: true, isDefinition: true)
!1609 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !213)
!1611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1612, size: 352, elements: !703)
!1612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1539)
!1613 = !DIGlobalVariableExpression(var: !1614, expr: !DIExpression())
!1614 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1615, file: !1639, line: 129, type: !1647, isLocal: false, isDefinition: true)
!1615 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1616, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1617, globals: !1636, splitDebugInlining: false, nameTableKind: None)
!1616 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!1617 = !{!1618}
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 32)
!1619 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !1620)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !1621)
!1621 = !{!1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1620, file: !116, line: 372, baseType: !120, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !1620, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1620, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1620, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !1620, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1620, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1620, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !1620, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1620, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1620, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !1620, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1620, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1620, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1620, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!1636 = !{!1637, !1640, !1644, !1613}
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1615, file: !1639, line: 126, type: !121, isLocal: false, isDefinition: true)
!1639 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/soc/system_stm32l1xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1640 = !DIGlobalVariableExpression(var: !1641, expr: !DIExpression())
!1641 = distinct !DIGlobalVariable(name: "PLLMulTable", scope: !1615, file: !1639, line: 127, type: !1642, isLocal: false, isDefinition: true)
!1642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1643, size: 72, elements: !1080)
!1643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !167)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1615, file: !1639, line: 128, type: !1646, isLocal: false, isDefinition: true)
!1646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1643, size: 128, elements: !661)
!1647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1643, size: 64, elements: !1063)
!1648 = !DIGlobalVariableExpression(var: !1649, expr: !DIExpression())
!1649 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1650, file: !1653, line: 23, type: !1654, isLocal: false, isDefinition: true)
!1650 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1651, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !1652, splitDebugInlining: false, nameTableKind: None)
!1651 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!1652 = !{!1648}
!1653 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !103)
!1655 = !DIGlobalVariableExpression(var: !1656, expr: !DIExpression())
!1656 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1657, file: !1661, line: 86, type: !1909, isLocal: false, isDefinition: true, align: 512)
!1657 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1658, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1659, retainedTypes: !1668, globals: !1742, splitDebugInlining: false, nameTableKind: None)
!1658 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!1659 = !{!1660, !30, !546}
!1660 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1661, line: 63, baseType: !32, size: 32, elements: !1662)
!1661 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1662 = !{!1663, !1664, !1665, !1666, !1667}
!1663 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1664 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1665 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1666 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1667 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1668 = !{!213, !102, !103, !1669, !1017, !121, !1700, !675, !167, !1725}
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 32)
!1670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1671)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1672, line: 51, size: 64, elements: !1673)
!1672 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1673 = !{!1674, !1695}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1671, file: !1672, line: 52, baseType: !1675, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1672, line: 38, baseType: !1676)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 32)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{!103, !1679, !1694, !278}
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1681)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !1682)
!1682 = !{!1683, !1684, !1685, !1686, !1692, !1693}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1681, file: !154, line: 380, baseType: !157, size: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1681, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1681, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1681, file: !154, line: 386, baseType: !1687, size: 32, offset: 96)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 32)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !1689)
!1689 = !{!1690, !1691}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1688, file: !154, line: 359, baseType: !167, size: 8)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1688, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1681, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1681, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1671, file: !1672, line: 53, baseType: !1696, size: 32, offset: 32)
!1696 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1672, line: 47, baseType: !1697)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 32)
!1698 = !DISubroutineType(types: !1699)
!1699 = !{!103, !1679, !1694, !278, !121}
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 32)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !369, line: 402, baseType: !1702)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 379, size: 1120, elements: !1703)
!1703 = !{!1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1702, file: !369, line: 381, baseType: !373, size: 32)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1702, file: !369, line: 382, baseType: !120, size: 32, offset: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1702, file: !369, line: 383, baseType: !120, size: 32, offset: 64)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1702, file: !369, line: 384, baseType: !120, size: 32, offset: 96)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1702, file: !369, line: 385, baseType: !120, size: 32, offset: 128)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1702, file: !369, line: 386, baseType: !120, size: 32, offset: 160)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1702, file: !369, line: 387, baseType: !1469, size: 96, offset: 192)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1702, file: !369, line: 388, baseType: !120, size: 32, offset: 288)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1702, file: !369, line: 389, baseType: !120, size: 32, offset: 320)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1702, file: !369, line: 390, baseType: !120, size: 32, offset: 352)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1702, file: !369, line: 391, baseType: !120, size: 32, offset: 384)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1702, file: !369, line: 392, baseType: !120, size: 32, offset: 416)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1702, file: !369, line: 393, baseType: !120, size: 32, offset: 448)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1702, file: !369, line: 394, baseType: !120, size: 32, offset: 480)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1702, file: !369, line: 395, baseType: !1480, size: 64, offset: 512)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1702, file: !369, line: 396, baseType: !373, size: 32, offset: 576)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1702, file: !369, line: 397, baseType: !373, size: 32, offset: 608)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1702, file: !369, line: 398, baseType: !1484, size: 128, offset: 640)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1702, file: !369, line: 399, baseType: !1486, size: 160, offset: 768)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1702, file: !369, line: 400, baseType: !1488, size: 160, offset: 928)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1702, file: !369, line: 401, baseType: !120, size: 32, offset: 1088)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !369, line: 360, baseType: !1727)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 345, size: 28704, elements: !1728)
!1728 = !{!1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1727, file: !369, line: 347, baseType: !1432, size: 256)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1727, file: !369, line: 348, baseType: !1434, size: 768, offset: 256)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1727, file: !369, line: 349, baseType: !1432, size: 256, offset: 1024)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1727, file: !369, line: 350, baseType: !1434, size: 768, offset: 1280)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1727, file: !369, line: 351, baseType: !1432, size: 256, offset: 2048)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1727, file: !369, line: 352, baseType: !1434, size: 768, offset: 2304)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1727, file: !369, line: 353, baseType: !1432, size: 256, offset: 3072)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1727, file: !369, line: 354, baseType: !1434, size: 768, offset: 3328)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1727, file: !369, line: 355, baseType: !1432, size: 256, offset: 4096)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1727, file: !369, line: 356, baseType: !1445, size: 1792, offset: 4352)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1727, file: !369, line: 357, baseType: !1449, size: 1920, offset: 6144)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1727, file: !369, line: 358, baseType: !1454, size: 20608, offset: 8064)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1727, file: !369, line: 359, baseType: !120, size: 32, offset: 28672)
!1742 = !{!1743, !1865, !1874, !1876, !1655, !1879, !1881, !1886}
!1743 = !DIGlobalVariableExpression(var: !1744, expr: !DIExpression())
!1744 = distinct !DIGlobalVariable(name: "_kernel", scope: !1657, file: !1661, line: 40, type: !1745, isLocal: false, isDefinition: true)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !260, line: 158, size: 288, elements: !1746)
!1746 = !{!1747, !1860}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1745, file: !260, line: 159, baseType: !1748, size: 192)
!1748 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1749, size: 192, elements: !358)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !260, line: 100, size: 192, elements: !1750)
!1750 = !{!1751, !1752, !1753, !1854, !1855, !1856, !1857}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1749, file: !260, line: 102, baseType: !121, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1749, file: !260, line: 105, baseType: !1017, size: 32, offset: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1749, file: !260, line: 108, baseType: !1754, size: 32, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 32)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !224, line: 245, size: 1024, elements: !1756)
!1756 = !{!1757, !1815, !1827, !1828, !1829, !1830, !1836, !1849}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1755, file: !224, line: 247, baseType: !1758, size: 384)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !224, line: 57, size: 384, elements: !1759)
!1759 = !{!1760, !1784, !1791, !1792, !1793, !1802, !1803, !1804}
!1760 = !DIDerivedType(tag: DW_TAG_member, scope: !1758, file: !224, line: 60, baseType: !1761, size: 64)
!1761 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1758, file: !224, line: 60, size: 64, elements: !1762)
!1762 = !{!1763, !1778}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1761, file: !224, line: 61, baseType: !1764, size: 64)
!1764 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !234, line: 49, baseType: !1765)
!1765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !1766)
!1766 = !{!1767, !1773}
!1767 = !DIDerivedType(tag: DW_TAG_member, scope: !1765, file: !234, line: 38, baseType: !1768, size: 32)
!1768 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1765, file: !234, line: 38, size: 32, elements: !1769)
!1769 = !{!1770, !1772}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1768, file: !234, line: 39, baseType: !1771, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1765, size: 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1768, file: !234, line: 40, baseType: !1771, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, scope: !1765, file: !234, line: 42, baseType: !1774, size: 32, offset: 32)
!1774 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1765, file: !234, line: 42, size: 32, elements: !1775)
!1775 = !{!1776, !1777}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1774, file: !234, line: 43, baseType: !1771, size: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1774, file: !234, line: 44, baseType: !1771, size: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1761, file: !224, line: 62, baseType: !1779, size: 64)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !250, line: 49, size: 64, elements: !1780)
!1780 = !{!1781}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1779, file: !250, line: 50, baseType: !1782, size: 64)
!1782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1783, size: 64, elements: !255)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 32)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1758, file: !224, line: 68, baseType: !1785, size: 32, offset: 64)
!1785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1786, size: 32)
!1786 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !260, line: 233, baseType: !1787)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !260, line: 231, size: 64, elements: !1788)
!1788 = !{!1789}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1787, file: !260, line: 232, baseType: !1790, size: 64)
!1790 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !1765)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1758, file: !224, line: 71, baseType: !167, size: 8, offset: 96)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1758, file: !224, line: 74, baseType: !167, size: 8, offset: 104)
!1793 = !DIDerivedType(tag: DW_TAG_member, scope: !1758, file: !224, line: 90, baseType: !1794, size: 16, offset: 112)
!1794 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1758, file: !224, line: 90, size: 16, elements: !1795)
!1795 = !{!1796, !1801}
!1796 = !DIDerivedType(tag: DW_TAG_member, scope: !1794, file: !224, line: 91, baseType: !1797, size: 16)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1794, file: !224, line: 91, size: 16, elements: !1798)
!1798 = !{!1799, !1800}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1797, file: !224, line: 96, baseType: !274, size: 8)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1797, file: !224, line: 97, baseType: !167, size: 8, offset: 8)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1794, file: !224, line: 100, baseType: !278, size: 16)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1758, file: !224, line: 107, baseType: !121, size: 32, offset: 128)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1758, file: !224, line: 127, baseType: !102, size: 32, offset: 160)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1758, file: !224, line: 131, baseType: !1805, size: 192, offset: 192)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !260, line: 244, size: 192, elements: !1806)
!1806 = !{!1807, !1808, !1814}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1805, file: !260, line: 245, baseType: !1764, size: 64)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1805, file: !260, line: 246, baseType: !1809, size: 32, offset: 64)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !260, line: 242, baseType: !1810)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 32)
!1811 = !DISubroutineType(types: !1812)
!1812 = !{null, !1813}
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 32)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1805, file: !260, line: 249, baseType: !293, size: 64, offset: 128)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1755, file: !224, line: 250, baseType: !1816, size: 288, offset: 384)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !1817)
!1817 = !{!1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1816, file: !297, line: 26, baseType: !121, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1816, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1816, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1816, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1816, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1816, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1816, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1816, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1816, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1755, file: !224, line: 253, baseType: !102, size: 32, offset: 672)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1755, file: !224, line: 256, baseType: !1786, size: 64, offset: 704)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1755, file: !224, line: 294, baseType: !103, size: 32, offset: 768)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1755, file: !224, line: 300, baseType: !1831, size: 96, offset: 800)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !224, line: 149, size: 96, elements: !1832)
!1832 = !{!1833, !1834, !1835}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1831, file: !224, line: 153, baseType: !22, size: 32)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1831, file: !224, line: 162, baseType: !213, size: 32, offset: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1831, file: !224, line: 168, baseType: !213, size: 32, offset: 64)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1755, file: !224, line: 325, baseType: !1837, size: 32, offset: 896)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 32)
!1838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !320, line: 5073, size: 160, elements: !1839)
!1839 = !{!1840, !1846, !1847}
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1838, file: !320, line: 5074, baseType: !1841, size: 96)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !1842)
!1842 = !{!1843, !1844, !1845}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !1841, file: !324, line: 57, baseType: !327, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !1841, file: !324, line: 58, baseType: !102, size: 32, offset: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !1841, file: !324, line: 59, baseType: !213, size: 32, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1838, file: !320, line: 5075, baseType: !1786, size: 64, offset: 96)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1838, file: !320, line: 5076, baseType: !1848, offset: 160)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1755, file: !224, line: 343, baseType: !1850, size: 64, offset: 928)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !297, line: 60, size: 64, elements: !1851)
!1851 = !{!1852, !1853}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !1850, file: !297, line: 63, baseType: !121, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !1850, file: !297, line: 66, baseType: !121, size: 32, offset: 32)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1749, file: !260, line: 111, baseType: !1754, size: 32, offset: 96)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1749, file: !260, line: 124, baseType: !103, size: 32, offset: 128)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1749, file: !260, line: 127, baseType: !167, size: 8, offset: 160)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1749, file: !260, line: 153, baseType: !1858, offset: 168)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !1859, line: 33, elements: !335)
!1859 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1745, file: !260, line: 170, baseType: !1861, size: 96, offset: 192)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !260, line: 83, size: 96, elements: !1862)
!1862 = !{!1863, !1864}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1861, file: !260, line: 86, baseType: !1754, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !1861, file: !260, line: 90, baseType: !1790, size: 64, offset: 32)
!1865 = !DIGlobalVariableExpression(var: !1866, expr: !DIExpression())
!1866 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1657, file: !1661, line: 43, type: !1867, isLocal: false, isDefinition: true, align: 512)
!1867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1868, size: 8704, elements: !1872)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1869, line: 47, size: 8, elements: !1870)
!1869 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1870 = !{!1871}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1868, file: !1869, line: 48, baseType: !159, size: 8)
!1872 = !{!1873}
!1873 = !DISubrange(count: 1088)
!1874 = !DIGlobalVariableExpression(var: !1875, expr: !DIExpression())
!1875 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1657, file: !1661, line: 44, type: !1755, isLocal: false, isDefinition: true)
!1876 = !DIGlobalVariableExpression(var: !1877, expr: !DIExpression())
!1877 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1657, file: !1661, line: 48, type: !1878, isLocal: false, isDefinition: true)
!1878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1755, size: 1024, elements: !358)
!1879 = !DIGlobalVariableExpression(var: !1880, expr: !DIExpression())
!1880 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1657, file: !1661, line: 217, type: !170, isLocal: false, isDefinition: true)
!1881 = !DIGlobalVariableExpression(var: !1882, expr: !DIExpression())
!1882 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1657, file: !1661, line: 50, type: !1883, isLocal: true, isDefinition: true, align: 512)
!1883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1868, size: 2560, elements: !1884)
!1884 = !{!359, !1885}
!1885 = !DISubrange(count: 320)
!1886 = !DIGlobalVariableExpression(var: !1887, expr: !DIExpression())
!1887 = distinct !DIGlobalVariable(name: "levels", scope: !1888, file: !1661, line: 232, type: !1908, isLocal: true, isDefinition: true)
!1888 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1661, file: !1661, line: 230, type: !1889, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !1891)
!1889 = !DISubroutineType(types: !1890)
!1890 = !{null, !1660}
!1891 = !{!1892, !1893, !1903, !1907}
!1892 = !DILocalVariable(name: "level", arg: 1, scope: !1888, file: !1661, line: 230, type: !1660)
!1893 = !DILocalVariable(name: "entry", scope: !1888, file: !1661, line: 244, type: !1894)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1896)
!1896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !145, line: 51, size: 64, elements: !1897)
!1897 = !{!1898, !1902}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1896, file: !145, line: 60, baseType: !1899, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 32)
!1900 = !DISubroutineType(types: !1901)
!1901 = !{!103, !1679}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1896, file: !145, line: 65, baseType: !1679, size: 32, offset: 32)
!1903 = !DILocalVariable(name: "dev", scope: !1904, file: !1661, line: 247, type: !1679)
!1904 = distinct !DILexicalBlock(scope: !1905, file: !1661, line: 246, column: 64)
!1905 = distinct !DILexicalBlock(scope: !1906, file: !1661, line: 246, column: 2)
!1906 = distinct !DILexicalBlock(scope: !1888, file: !1661, line: 246, column: 2)
!1907 = !DILocalVariable(name: "rc", scope: !1904, file: !1661, line: 248, type: !103)
!1908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1894, size: 192, elements: !1089)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1868, size: 16896, elements: !1910)
!1910 = !{!359, !1911}
!1911 = !DISubrange(count: 2112)
!1912 = !DIGlobalVariableExpression(var: !1913, expr: !DIExpression())
!1913 = distinct !DIGlobalVariable(name: "states_str", scope: !1914, file: !1915, line: 276, type: !2038, isLocal: true, isDefinition: true)
!1914 = distinct !DISubprogram(name: "k_thread_state_str", scope: !1915, file: !1915, line: 271, type: !1916, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !2029)
!1915 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1916 = !DISubroutineType(types: !1917)
!1917 = !{!157, !1918, !1017, !213}
!1918 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !224, line: 347, baseType: !1919)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 32)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !224, line: 245, size: 1024, elements: !1921)
!1921 = !{!1922, !1980, !1992, !1993, !1994, !1995, !2001, !2014}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1920, file: !224, line: 247, baseType: !1923, size: 384)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !224, line: 57, size: 384, elements: !1924)
!1924 = !{!1925, !1949, !1956, !1957, !1958, !1967, !1968, !1969}
!1925 = !DIDerivedType(tag: DW_TAG_member, scope: !1923, file: !224, line: 60, baseType: !1926, size: 64)
!1926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1923, file: !224, line: 60, size: 64, elements: !1927)
!1927 = !{!1928, !1943}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1926, file: !224, line: 61, baseType: !1929, size: 64)
!1929 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !234, line: 49, baseType: !1930)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !1931)
!1931 = !{!1932, !1938}
!1932 = !DIDerivedType(tag: DW_TAG_member, scope: !1930, file: !234, line: 38, baseType: !1933, size: 32)
!1933 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1930, file: !234, line: 38, size: 32, elements: !1934)
!1934 = !{!1935, !1937}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1933, file: !234, line: 39, baseType: !1936, size: 32)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 32)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1933, file: !234, line: 40, baseType: !1936, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_member, scope: !1930, file: !234, line: 42, baseType: !1939, size: 32, offset: 32)
!1939 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1930, file: !234, line: 42, size: 32, elements: !1940)
!1940 = !{!1941, !1942}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1939, file: !234, line: 43, baseType: !1936, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1939, file: !234, line: 44, baseType: !1936, size: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1926, file: !224, line: 62, baseType: !1944, size: 64)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !250, line: 49, size: 64, elements: !1945)
!1945 = !{!1946}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1944, file: !250, line: 50, baseType: !1947, size: 64)
!1947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1948, size: 64, elements: !255)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 32)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1923, file: !224, line: 68, baseType: !1950, size: 32, offset: 64)
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !260, line: 233, baseType: !1952)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !260, line: 231, size: 64, elements: !1953)
!1953 = !{!1954}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1952, file: !260, line: 232, baseType: !1955, size: 64)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !1930)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1923, file: !224, line: 71, baseType: !167, size: 8, offset: 96)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1923, file: !224, line: 74, baseType: !167, size: 8, offset: 104)
!1958 = !DIDerivedType(tag: DW_TAG_member, scope: !1923, file: !224, line: 90, baseType: !1959, size: 16, offset: 112)
!1959 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1923, file: !224, line: 90, size: 16, elements: !1960)
!1960 = !{!1961, !1966}
!1961 = !DIDerivedType(tag: DW_TAG_member, scope: !1959, file: !224, line: 91, baseType: !1962, size: 16)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1959, file: !224, line: 91, size: 16, elements: !1963)
!1963 = !{!1964, !1965}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1962, file: !224, line: 96, baseType: !274, size: 8)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1962, file: !224, line: 97, baseType: !167, size: 8, offset: 8)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1959, file: !224, line: 100, baseType: !278, size: 16)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1923, file: !224, line: 107, baseType: !121, size: 32, offset: 128)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1923, file: !224, line: 127, baseType: !102, size: 32, offset: 160)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1923, file: !224, line: 131, baseType: !1970, size: 192, offset: 192)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !260, line: 244, size: 192, elements: !1971)
!1971 = !{!1972, !1973, !1979}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1970, file: !260, line: 245, baseType: !1929, size: 64)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1970, file: !260, line: 246, baseType: !1974, size: 32, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !260, line: 242, baseType: !1975)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 32)
!1976 = !DISubroutineType(types: !1977)
!1977 = !{null, !1978}
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1970, file: !260, line: 249, baseType: !293, size: 64, offset: 128)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1920, file: !224, line: 250, baseType: !1981, size: 288, offset: 384)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !1982)
!1982 = !{!1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1981, file: !297, line: 26, baseType: !121, size: 32)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1981, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1981, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1981, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1981, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1981, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1981, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1981, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1981, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1920, file: !224, line: 253, baseType: !102, size: 32, offset: 672)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1920, file: !224, line: 256, baseType: !1951, size: 64, offset: 704)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1920, file: !224, line: 294, baseType: !103, size: 32, offset: 768)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1920, file: !224, line: 300, baseType: !1996, size: 96, offset: 800)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !224, line: 149, size: 96, elements: !1997)
!1997 = !{!1998, !1999, !2000}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1996, file: !224, line: 153, baseType: !22, size: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1996, file: !224, line: 162, baseType: !213, size: 32, offset: 32)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1996, file: !224, line: 168, baseType: !213, size: 32, offset: 64)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1920, file: !224, line: 325, baseType: !2002, size: 32, offset: 896)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 32)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !320, line: 5073, size: 160, elements: !2004)
!2004 = !{!2005, !2011, !2012}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2003, file: !320, line: 5074, baseType: !2006, size: 96)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2007)
!2007 = !{!2008, !2009, !2010}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2006, file: !324, line: 57, baseType: !327, size: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2006, file: !324, line: 58, baseType: !102, size: 32, offset: 32)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2006, file: !324, line: 59, baseType: !213, size: 32, offset: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2003, file: !320, line: 5075, baseType: !1951, size: 64, offset: 96)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2003, file: !320, line: 5076, baseType: !2013, offset: 160)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1920, file: !224, line: 343, baseType: !2015, size: 64, offset: 928)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !297, line: 60, size: 64, elements: !2016)
!2016 = !{!2017, !2018}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2015, file: !297, line: 63, baseType: !121, size: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2015, file: !297, line: 66, baseType: !121, size: 32, offset: 32)
!2019 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2020, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2021, globals: !2025, splitDebugInlining: false, nameTableKind: None)
!2020 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2021 = !{!102, !157, !1417, !167, !103, !2022, !24, !213, !1017, !22, !121, !2023}
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !2024)
!2024 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2025 = !{!1912, !2026}
!2026 = !DIGlobalVariableExpression(var: !2027, expr: !DIExpression())
!2027 = distinct !DIGlobalVariable(name: "states_sz", scope: !1914, file: !1915, line: 279, type: !2028, isLocal: true, isDefinition: true)
!2028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1610, size: 256, elements: !1063)
!2029 = !{!2030, !2031, !2032, !2033, !2034, !2035, !2036}
!2030 = !DILocalVariable(name: "thread_id", arg: 1, scope: !1914, file: !1915, line: 271, type: !1918)
!2031 = !DILocalVariable(name: "buf", arg: 2, scope: !1914, file: !1915, line: 271, type: !1017)
!2032 = !DILocalVariable(name: "buf_size", arg: 3, scope: !1914, file: !1915, line: 271, type: !213)
!2033 = !DILocalVariable(name: "off", scope: !1914, file: !1915, line: 273, type: !213)
!2034 = !DILocalVariable(name: "bit", scope: !1914, file: !1915, line: 274, type: !167)
!2035 = !DILocalVariable(name: "thread_state", scope: !1914, file: !1915, line: 275, type: !167)
!2036 = !DILocalVariable(name: "index", scope: !2037, file: !1915, line: 293, type: !167)
!2037 = distinct !DILexicalBlock(scope: !1914, file: !1915, line: 293, column: 2)
!2038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 256, elements: !1063)
!2039 = !DIGlobalVariableExpression(var: !2040, expr: !DIExpression())
!2040 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2041, file: !2149, line: 56, type: !2138, isLocal: false, isDefinition: true)
!2041 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2042, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2043, globals: !2146, splitDebugInlining: false, nameTableKind: None)
!2042 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2043 = !{!2044, !1017, !102, !2144, !1694, !1417, !675, !103, !121, !2023, !2145}
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 32)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !224, line: 245, size: 1024, elements: !2046)
!2046 = !{!2047, !2105, !2117, !2118, !2119, !2120, !2126, !2139}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2045, file: !224, line: 247, baseType: !2048, size: 384)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !224, line: 57, size: 384, elements: !2049)
!2049 = !{!2050, !2074, !2081, !2082, !2083, !2092, !2093, !2094}
!2050 = !DIDerivedType(tag: DW_TAG_member, scope: !2048, file: !224, line: 60, baseType: !2051, size: 64)
!2051 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2048, file: !224, line: 60, size: 64, elements: !2052)
!2052 = !{!2053, !2068}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2051, file: !224, line: 61, baseType: !2054, size: 64)
!2054 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !234, line: 49, baseType: !2055)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !2056)
!2056 = !{!2057, !2063}
!2057 = !DIDerivedType(tag: DW_TAG_member, scope: !2055, file: !234, line: 38, baseType: !2058, size: 32)
!2058 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2055, file: !234, line: 38, size: 32, elements: !2059)
!2059 = !{!2060, !2062}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2058, file: !234, line: 39, baseType: !2061, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2058, file: !234, line: 40, baseType: !2061, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, scope: !2055, file: !234, line: 42, baseType: !2064, size: 32, offset: 32)
!2064 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2055, file: !234, line: 42, size: 32, elements: !2065)
!2065 = !{!2066, !2067}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2064, file: !234, line: 43, baseType: !2061, size: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2064, file: !234, line: 44, baseType: !2061, size: 32)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2051, file: !224, line: 62, baseType: !2069, size: 64)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !250, line: 49, size: 64, elements: !2070)
!2070 = !{!2071}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2069, file: !250, line: 50, baseType: !2072, size: 64)
!2072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2073, size: 64, elements: !255)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2048, file: !224, line: 68, baseType: !2075, size: 32, offset: 64)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 32)
!2076 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !260, line: 233, baseType: !2077)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !260, line: 231, size: 64, elements: !2078)
!2078 = !{!2079}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2077, file: !260, line: 232, baseType: !2080, size: 64)
!2080 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !2055)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2048, file: !224, line: 71, baseType: !167, size: 8, offset: 96)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2048, file: !224, line: 74, baseType: !167, size: 8, offset: 104)
!2083 = !DIDerivedType(tag: DW_TAG_member, scope: !2048, file: !224, line: 90, baseType: !2084, size: 16, offset: 112)
!2084 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2048, file: !224, line: 90, size: 16, elements: !2085)
!2085 = !{!2086, !2091}
!2086 = !DIDerivedType(tag: DW_TAG_member, scope: !2084, file: !224, line: 91, baseType: !2087, size: 16)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2084, file: !224, line: 91, size: 16, elements: !2088)
!2088 = !{!2089, !2090}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2087, file: !224, line: 96, baseType: !274, size: 8)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2087, file: !224, line: 97, baseType: !167, size: 8, offset: 8)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2084, file: !224, line: 100, baseType: !278, size: 16)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2048, file: !224, line: 107, baseType: !121, size: 32, offset: 128)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2048, file: !224, line: 127, baseType: !102, size: 32, offset: 160)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2048, file: !224, line: 131, baseType: !2095, size: 192, offset: 192)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !260, line: 244, size: 192, elements: !2096)
!2096 = !{!2097, !2098, !2104}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2095, file: !260, line: 245, baseType: !2054, size: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2095, file: !260, line: 246, baseType: !2099, size: 32, offset: 64)
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !260, line: 242, baseType: !2100)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 32)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{null, !2103}
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2095, file: !260, line: 249, baseType: !293, size: 64, offset: 128)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2045, file: !224, line: 250, baseType: !2106, size: 288, offset: 384)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !2107)
!2107 = !{!2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2106, file: !297, line: 26, baseType: !121, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2106, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2106, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2106, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2106, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2106, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2106, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2106, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2106, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2045, file: !224, line: 253, baseType: !102, size: 32, offset: 672)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2045, file: !224, line: 256, baseType: !2076, size: 64, offset: 704)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2045, file: !224, line: 294, baseType: !103, size: 32, offset: 768)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2045, file: !224, line: 300, baseType: !2121, size: 96, offset: 800)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !224, line: 149, size: 96, elements: !2122)
!2122 = !{!2123, !2124, !2125}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2121, file: !224, line: 153, baseType: !22, size: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2121, file: !224, line: 162, baseType: !213, size: 32, offset: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2121, file: !224, line: 168, baseType: !213, size: 32, offset: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2045, file: !224, line: 325, baseType: !2127, size: 32, offset: 896)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 32)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !320, line: 5073, size: 160, elements: !2129)
!2129 = !{!2130, !2136, !2137}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2128, file: !320, line: 5074, baseType: !2131, size: 96)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !2132)
!2132 = !{!2133, !2134, !2135}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2131, file: !324, line: 57, baseType: !327, size: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2131, file: !324, line: 58, baseType: !102, size: 32, offset: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2131, file: !324, line: 59, baseType: !213, size: 32, offset: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2128, file: !320, line: 5075, baseType: !2076, size: 64, offset: 96)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2128, file: !320, line: 5076, baseType: !2138, offset: 160)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2045, file: !224, line: 343, baseType: !2140, size: 64, offset: 928)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !297, line: 60, size: 64, elements: !2141)
!2141 = !{!2142, !2143}
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2140, file: !297, line: 63, baseType: !121, size: 32)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2140, file: !297, line: 66, baseType: !121, size: 32, offset: 32)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 32)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 32)
!2146 = !{!2039, !2147, !2150, !2152}
!2147 = !DIGlobalVariableExpression(var: !2148, expr: !DIExpression())
!2148 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2041, file: !2149, line: 404, type: !103, isLocal: true, isDefinition: true)
!2149 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2150 = !DIGlobalVariableExpression(var: !2151, expr: !DIExpression())
!2151 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2041, file: !2149, line: 405, type: !103, isLocal: true, isDefinition: true)
!2152 = !DIGlobalVariableExpression(var: !2153, expr: !DIExpression())
!2153 = distinct !DIGlobalVariable(name: "pending_current", scope: !2041, file: !2149, line: 425, type: !2044, isLocal: true, isDefinition: true)
!2154 = !DIGlobalVariableExpression(var: !2155, expr: !DIExpression())
!2155 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2156, file: !2186, line: 15, type: !2023, isLocal: true, isDefinition: true)
!2156 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2157, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2158, globals: !2183, splitDebugInlining: false, nameTableKind: None)
!2157 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2158 = !{!1417, !102, !675, !121, !2023, !103, !2159, !1017, !293}
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 32)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !260, line: 244, size: 192, elements: !2161)
!2161 = !{!2162, !2177, !2182}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2160, file: !260, line: 245, baseType: !2163, size: 64)
!2163 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !234, line: 49, baseType: !2164)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !2165)
!2165 = !{!2166, !2172}
!2166 = !DIDerivedType(tag: DW_TAG_member, scope: !2164, file: !234, line: 38, baseType: !2167, size: 32)
!2167 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2164, file: !234, line: 38, size: 32, elements: !2168)
!2168 = !{!2169, !2171}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2167, file: !234, line: 39, baseType: !2170, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2167, file: !234, line: 40, baseType: !2170, size: 32)
!2172 = !DIDerivedType(tag: DW_TAG_member, scope: !2164, file: !234, line: 42, baseType: !2173, size: 32, offset: 32)
!2173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2164, file: !234, line: 42, size: 32, elements: !2174)
!2174 = !{!2175, !2176}
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2173, file: !234, line: 43, baseType: !2170, size: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2173, file: !234, line: 44, baseType: !2170, size: 32)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2160, file: !260, line: 246, baseType: !2178, size: 32, offset: 64)
!2178 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !260, line: 242, baseType: !2179)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 32)
!2180 = !DISubroutineType(types: !2181)
!2181 = !{null, !2159}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2160, file: !260, line: 249, baseType: !293, size: 64, offset: 128)
!2183 = !{!2154, !2184, !2188, !2190}
!2184 = !DIGlobalVariableExpression(var: !2185, expr: !DIExpression())
!2185 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2156, file: !2186, line: 19, type: !2187, isLocal: true, isDefinition: true)
!2186 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!2188 = !DIGlobalVariableExpression(var: !2189, expr: !DIExpression())
!2189 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2156, file: !2186, line: 25, type: !103, isLocal: true, isDefinition: true)
!2190 = !DIGlobalVariableExpression(var: !2191, expr: !DIExpression())
!2191 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2156, file: !2186, line: 17, type: !2192, isLocal: true, isDefinition: true)
!2192 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !2164)
!2193 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2194, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2194 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2195 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2196, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2196 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/hello_world/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2199 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2200, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2201, retainedTypes: !2221, splitDebugInlining: false, nameTableKind: None)
!2200 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2201 = !{!2202, !2210}
!2202 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2203, line: 69, baseType: !32, size: 32, elements: !2204)
!2203 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2204 = !{!2205, !2206, !2207, !2208, !2209}
!2205 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2206 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2207 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2208 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2209 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2210 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2203, line: 56, baseType: !32, size: 32, elements: !2211)
!2211 = !{!2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220}
!2212 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2213 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2214 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2215 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2216 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2217 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2218 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2219 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2220 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2221 = !{!103, !2202, !2210, !2222, !275, !177, !2224, !2225, !168, !279, !157, !213, !102, !22, !32, !2227, !2228, !2229, !2230, !2231, !294, !2232, !2223, !2233, !2234, !2235, !2236}
!2222 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2203, line: 31, baseType: !2223)
!2223 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !294)
!2224 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !214, line: 329, baseType: !32)
!2225 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2203, line: 32, baseType: !2226)
!2226 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !2024)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 32)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!2230 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 32)
!2235 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !214, line: 145, baseType: !103)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 32)
!2237 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2238, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2238 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2239 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2240, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2241, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2240 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2241 = !{!2242, !30}
!2242 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2243, line: 27, baseType: !32, size: 32, elements: !2244)
!2243 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2244 = !{!2245, !2246, !2247, !2248, !2249}
!2245 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2246 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2247 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2248 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2249 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2250 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2251, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2252, retainedTypes: !2253, splitDebugInlining: false, nameTableKind: None)
!2251 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2252 = !{!546, !2242, !30}
!2253 = !{!693, !2254, !102, !103, !675, !121, !167, !2271}
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 32)
!2255 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !369, line: 360, baseType: !2256)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 345, size: 28704, elements: !2257)
!2257 = !{!2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2256, file: !369, line: 347, baseType: !1432, size: 256)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2256, file: !369, line: 348, baseType: !1434, size: 768, offset: 256)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2256, file: !369, line: 349, baseType: !1432, size: 256, offset: 1024)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2256, file: !369, line: 350, baseType: !1434, size: 768, offset: 1280)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2256, file: !369, line: 351, baseType: !1432, size: 256, offset: 2048)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2256, file: !369, line: 352, baseType: !1434, size: 768, offset: 2304)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2256, file: !369, line: 353, baseType: !1432, size: 256, offset: 3072)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2256, file: !369, line: 354, baseType: !1434, size: 768, offset: 3328)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2256, file: !369, line: 355, baseType: !1432, size: 256, offset: 4096)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2256, file: !369, line: 356, baseType: !1445, size: 1792, offset: 4352)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2256, file: !369, line: 357, baseType: !1449, size: 1920, offset: 6144)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2256, file: !369, line: 358, baseType: !1454, size: 20608, offset: 8064)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2256, file: !369, line: 359, baseType: !120, size: 32, offset: 28672)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 32)
!2272 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !369, line: 402, baseType: !2273)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 379, size: 1120, elements: !2274)
!2274 = !{!2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2273, file: !369, line: 381, baseType: !373, size: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2273, file: !369, line: 382, baseType: !120, size: 32, offset: 32)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2273, file: !369, line: 383, baseType: !120, size: 32, offset: 64)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2273, file: !369, line: 384, baseType: !120, size: 32, offset: 96)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2273, file: !369, line: 385, baseType: !120, size: 32, offset: 128)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2273, file: !369, line: 386, baseType: !120, size: 32, offset: 160)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2273, file: !369, line: 387, baseType: !1469, size: 96, offset: 192)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2273, file: !369, line: 388, baseType: !120, size: 32, offset: 288)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2273, file: !369, line: 389, baseType: !120, size: 32, offset: 320)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2273, file: !369, line: 390, baseType: !120, size: 32, offset: 352)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2273, file: !369, line: 391, baseType: !120, size: 32, offset: 384)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2273, file: !369, line: 392, baseType: !120, size: 32, offset: 416)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2273, file: !369, line: 393, baseType: !120, size: 32, offset: 448)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2273, file: !369, line: 394, baseType: !120, size: 32, offset: 480)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2273, file: !369, line: 395, baseType: !1480, size: 64, offset: 512)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2273, file: !369, line: 396, baseType: !373, size: 32, offset: 576)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2273, file: !369, line: 397, baseType: !373, size: 32, offset: 608)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2273, file: !369, line: 398, baseType: !1484, size: 128, offset: 640)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2273, file: !369, line: 399, baseType: !1486, size: 160, offset: 768)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2273, file: !369, line: 400, baseType: !1488, size: 160, offset: 928)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2273, file: !369, line: 401, baseType: !120, size: 32, offset: 1088)
!2296 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2297, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2297 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2298 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2299, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2300, splitDebugInlining: false, nameTableKind: None)
!2299 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2300 = !{!102, !103, !22, !2301}
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2302, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !369, line: 402, baseType: !2303)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 379, size: 1120, elements: !2304)
!2304 = !{!2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2303, file: !369, line: 381, baseType: !373, size: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2303, file: !369, line: 382, baseType: !120, size: 32, offset: 32)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2303, file: !369, line: 383, baseType: !120, size: 32, offset: 64)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2303, file: !369, line: 384, baseType: !120, size: 32, offset: 96)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2303, file: !369, line: 385, baseType: !120, size: 32, offset: 128)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2303, file: !369, line: 386, baseType: !120, size: 32, offset: 160)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2303, file: !369, line: 387, baseType: !1469, size: 96, offset: 192)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2303, file: !369, line: 388, baseType: !120, size: 32, offset: 288)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2303, file: !369, line: 389, baseType: !120, size: 32, offset: 320)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2303, file: !369, line: 390, baseType: !120, size: 32, offset: 352)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2303, file: !369, line: 391, baseType: !120, size: 32, offset: 384)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2303, file: !369, line: 392, baseType: !120, size: 32, offset: 416)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2303, file: !369, line: 393, baseType: !120, size: 32, offset: 448)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2303, file: !369, line: 394, baseType: !120, size: 32, offset: 480)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2303, file: !369, line: 395, baseType: !1480, size: 64, offset: 512)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2303, file: !369, line: 396, baseType: !373, size: 32, offset: 576)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2303, file: !369, line: 397, baseType: !373, size: 32, offset: 608)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2303, file: !369, line: 398, baseType: !1484, size: 128, offset: 640)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2303, file: !369, line: 399, baseType: !1486, size: 160, offset: 768)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2303, file: !369, line: 400, baseType: !1488, size: 160, offset: 928)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2303, file: !369, line: 401, baseType: !120, size: 32, offset: 1088)
!2326 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2327, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2328, splitDebugInlining: false, nameTableKind: None)
!2327 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2328 = !{!2329, !102, !103}
!2329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2330, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !369, line: 402, baseType: !2331)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 379, size: 1120, elements: !2332)
!2332 = !{!2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2331, file: !369, line: 381, baseType: !373, size: 32)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2331, file: !369, line: 382, baseType: !120, size: 32, offset: 32)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2331, file: !369, line: 383, baseType: !120, size: 32, offset: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2331, file: !369, line: 384, baseType: !120, size: 32, offset: 96)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2331, file: !369, line: 385, baseType: !120, size: 32, offset: 128)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2331, file: !369, line: 386, baseType: !120, size: 32, offset: 160)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2331, file: !369, line: 387, baseType: !1469, size: 96, offset: 192)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2331, file: !369, line: 388, baseType: !120, size: 32, offset: 288)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2331, file: !369, line: 389, baseType: !120, size: 32, offset: 320)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2331, file: !369, line: 390, baseType: !120, size: 32, offset: 352)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2331, file: !369, line: 391, baseType: !120, size: 32, offset: 384)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2331, file: !369, line: 392, baseType: !120, size: 32, offset: 416)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2331, file: !369, line: 393, baseType: !120, size: 32, offset: 448)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2331, file: !369, line: 394, baseType: !120, size: 32, offset: 480)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2331, file: !369, line: 395, baseType: !1480, size: 64, offset: 512)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2331, file: !369, line: 396, baseType: !373, size: 32, offset: 576)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2331, file: !369, line: 397, baseType: !373, size: 32, offset: 608)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2331, file: !369, line: 398, baseType: !1484, size: 128, offset: 640)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2331, file: !369, line: 399, baseType: !1486, size: 160, offset: 768)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2331, file: !369, line: 400, baseType: !1488, size: 160, offset: 928)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2331, file: !369, line: 401, baseType: !120, size: 32, offset: 1088)
!2354 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2355, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2356, splitDebugInlining: false, nameTableKind: None)
!2355 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2356 = !{!2357, !121, !102, !103}
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 32)
!2358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2359, line: 98, size: 256, elements: !2360)
!2359 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2360 = !{!2361, !2366, !2371, !2376, !2381, !2386, !2391, !2396}
!2361 = !DIDerivedType(tag: DW_TAG_member, scope: !2358, file: !2359, line: 99, baseType: !2362, size: 32)
!2362 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2358, file: !2359, line: 99, size: 32, elements: !2363)
!2363 = !{!2364, !2365}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2362, file: !2359, line: 99, baseType: !121, size: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2362, file: !2359, line: 99, baseType: !121, size: 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, scope: !2358, file: !2359, line: 100, baseType: !2367, size: 32, offset: 32)
!2367 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2358, file: !2359, line: 100, size: 32, elements: !2368)
!2368 = !{!2369, !2370}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2367, file: !2359, line: 100, baseType: !121, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2367, file: !2359, line: 100, baseType: !121, size: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, scope: !2358, file: !2359, line: 101, baseType: !2372, size: 32, offset: 64)
!2372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2358, file: !2359, line: 101, size: 32, elements: !2373)
!2373 = !{!2374, !2375}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2372, file: !2359, line: 101, baseType: !121, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2372, file: !2359, line: 101, baseType: !121, size: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, scope: !2358, file: !2359, line: 102, baseType: !2377, size: 32, offset: 96)
!2377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2358, file: !2359, line: 102, size: 32, elements: !2378)
!2378 = !{!2379, !2380}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2377, file: !2359, line: 102, baseType: !121, size: 32)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2377, file: !2359, line: 102, baseType: !121, size: 32)
!2381 = !DIDerivedType(tag: DW_TAG_member, scope: !2358, file: !2359, line: 103, baseType: !2382, size: 32, offset: 128)
!2382 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2358, file: !2359, line: 103, size: 32, elements: !2383)
!2383 = !{!2384, !2385}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2382, file: !2359, line: 103, baseType: !121, size: 32)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2382, file: !2359, line: 103, baseType: !121, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, scope: !2358, file: !2359, line: 104, baseType: !2387, size: 32, offset: 160)
!2387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2358, file: !2359, line: 104, size: 32, elements: !2388)
!2388 = !{!2389, !2390}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2387, file: !2359, line: 104, baseType: !121, size: 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2387, file: !2359, line: 104, baseType: !121, size: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, scope: !2358, file: !2359, line: 105, baseType: !2392, size: 32, offset: 192)
!2392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2358, file: !2359, line: 105, size: 32, elements: !2393)
!2393 = !{!2394, !2395}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2392, file: !2359, line: 105, baseType: !121, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2392, file: !2359, line: 105, baseType: !121, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2358, file: !2359, line: 106, baseType: !121, size: 32, offset: 224)
!2397 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2398, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2241, retainedTypes: !2399, splitDebugInlining: false, nameTableKind: None)
!2398 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2399 = !{!2400, !102, !103, !2425, !2468, !121}
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 32)
!2401 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !369, line: 402, baseType: !2402)
!2402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 379, size: 1120, elements: !2403)
!2403 = !{!2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2402, file: !369, line: 381, baseType: !373, size: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2402, file: !369, line: 382, baseType: !120, size: 32, offset: 32)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2402, file: !369, line: 383, baseType: !120, size: 32, offset: 64)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2402, file: !369, line: 384, baseType: !120, size: 32, offset: 96)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2402, file: !369, line: 385, baseType: !120, size: 32, offset: 128)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2402, file: !369, line: 386, baseType: !120, size: 32, offset: 160)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2402, file: !369, line: 387, baseType: !1469, size: 96, offset: 192)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2402, file: !369, line: 388, baseType: !120, size: 32, offset: 288)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2402, file: !369, line: 389, baseType: !120, size: 32, offset: 320)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2402, file: !369, line: 390, baseType: !120, size: 32, offset: 352)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2402, file: !369, line: 391, baseType: !120, size: 32, offset: 384)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2402, file: !369, line: 392, baseType: !120, size: 32, offset: 416)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2402, file: !369, line: 393, baseType: !120, size: 32, offset: 448)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2402, file: !369, line: 394, baseType: !120, size: 32, offset: 480)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2402, file: !369, line: 395, baseType: !1480, size: 64, offset: 512)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2402, file: !369, line: 396, baseType: !373, size: 32, offset: 576)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2402, file: !369, line: 397, baseType: !373, size: 32, offset: 608)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2402, file: !369, line: 398, baseType: !1484, size: 128, offset: 640)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2402, file: !369, line: 399, baseType: !1486, size: 160, offset: 768)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2402, file: !369, line: 400, baseType: !1488, size: 160, offset: 928)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2402, file: !369, line: 401, baseType: !120, size: 32, offset: 1088)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2359, line: 141, baseType: !2427)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2359, line: 97, size: 256, elements: !2428)
!2428 = !{!2429}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2427, file: !2359, line: 107, baseType: !2430, size: 256)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2359, line: 98, size: 256, elements: !2431)
!2431 = !{!2432, !2437, !2442, !2447, !2452, !2457, !2462, !2467}
!2432 = !DIDerivedType(tag: DW_TAG_member, scope: !2430, file: !2359, line: 99, baseType: !2433, size: 32)
!2433 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2430, file: !2359, line: 99, size: 32, elements: !2434)
!2434 = !{!2435, !2436}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2433, file: !2359, line: 99, baseType: !121, size: 32)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2433, file: !2359, line: 99, baseType: !121, size: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, scope: !2430, file: !2359, line: 100, baseType: !2438, size: 32, offset: 32)
!2438 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2430, file: !2359, line: 100, size: 32, elements: !2439)
!2439 = !{!2440, !2441}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2438, file: !2359, line: 100, baseType: !121, size: 32)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2438, file: !2359, line: 100, baseType: !121, size: 32)
!2442 = !DIDerivedType(tag: DW_TAG_member, scope: !2430, file: !2359, line: 101, baseType: !2443, size: 32, offset: 64)
!2443 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2430, file: !2359, line: 101, size: 32, elements: !2444)
!2444 = !{!2445, !2446}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2443, file: !2359, line: 101, baseType: !121, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2443, file: !2359, line: 101, baseType: !121, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, scope: !2430, file: !2359, line: 102, baseType: !2448, size: 32, offset: 96)
!2448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2430, file: !2359, line: 102, size: 32, elements: !2449)
!2449 = !{!2450, !2451}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2448, file: !2359, line: 102, baseType: !121, size: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2448, file: !2359, line: 102, baseType: !121, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, scope: !2430, file: !2359, line: 103, baseType: !2453, size: 32, offset: 128)
!2453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2430, file: !2359, line: 103, size: 32, elements: !2454)
!2454 = !{!2455, !2456}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2453, file: !2359, line: 103, baseType: !121, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2453, file: !2359, line: 103, baseType: !121, size: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, scope: !2430, file: !2359, line: 104, baseType: !2458, size: 32, offset: 160)
!2458 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2430, file: !2359, line: 104, size: 32, elements: !2459)
!2459 = !{!2460, !2461}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2458, file: !2359, line: 104, baseType: !121, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2458, file: !2359, line: 104, baseType: !121, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, scope: !2430, file: !2359, line: 105, baseType: !2463, size: 32, offset: 192)
!2463 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2430, file: !2359, line: 105, size: 32, elements: !2464)
!2464 = !{!2465, !2466}
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2463, file: !2359, line: 105, baseType: !121, size: 32)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2463, file: !2359, line: 105, baseType: !121, size: 32)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2430, file: !2359, line: 106, baseType: !121, size: 32, offset: 224)
!2468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!2469 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2470, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1415, retainedTypes: !2471, splitDebugInlining: false, nameTableKind: None)
!2470 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2471 = !{!693, !675, !167, !121, !2472, !2489}
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !369, line: 360, baseType: !2474)
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 345, size: 28704, elements: !2475)
!2475 = !{!2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2474, file: !369, line: 347, baseType: !1432, size: 256)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2474, file: !369, line: 348, baseType: !1434, size: 768, offset: 256)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2474, file: !369, line: 349, baseType: !1432, size: 256, offset: 1024)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2474, file: !369, line: 350, baseType: !1434, size: 768, offset: 1280)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2474, file: !369, line: 351, baseType: !1432, size: 256, offset: 2048)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2474, file: !369, line: 352, baseType: !1434, size: 768, offset: 2304)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2474, file: !369, line: 353, baseType: !1432, size: 256, offset: 3072)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2474, file: !369, line: 354, baseType: !1434, size: 768, offset: 3328)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2474, file: !369, line: 355, baseType: !1432, size: 256, offset: 4096)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2474, file: !369, line: 356, baseType: !1445, size: 1792, offset: 4352)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2474, file: !369, line: 357, baseType: !1449, size: 1920, offset: 6144)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2474, file: !369, line: 358, baseType: !1454, size: 20608, offset: 8064)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2474, file: !369, line: 359, baseType: !120, size: 32, offset: 28672)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !369, line: 402, baseType: !2491)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 379, size: 1120, elements: !2492)
!2492 = !{!2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2491, file: !369, line: 381, baseType: !373, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2491, file: !369, line: 382, baseType: !120, size: 32, offset: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2491, file: !369, line: 383, baseType: !120, size: 32, offset: 64)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2491, file: !369, line: 384, baseType: !120, size: 32, offset: 96)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2491, file: !369, line: 385, baseType: !120, size: 32, offset: 128)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2491, file: !369, line: 386, baseType: !120, size: 32, offset: 160)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2491, file: !369, line: 387, baseType: !1469, size: 96, offset: 192)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2491, file: !369, line: 388, baseType: !120, size: 32, offset: 288)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2491, file: !369, line: 389, baseType: !120, size: 32, offset: 320)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2491, file: !369, line: 390, baseType: !120, size: 32, offset: 352)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2491, file: !369, line: 391, baseType: !120, size: 32, offset: 384)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2491, file: !369, line: 392, baseType: !120, size: 32, offset: 416)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2491, file: !369, line: 393, baseType: !120, size: 32, offset: 448)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2491, file: !369, line: 394, baseType: !120, size: 32, offset: 480)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2491, file: !369, line: 395, baseType: !1480, size: 64, offset: 512)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2491, file: !369, line: 396, baseType: !373, size: 32, offset: 576)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2491, file: !369, line: 397, baseType: !373, size: 32, offset: 608)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2491, file: !369, line: 398, baseType: !1484, size: 128, offset: 640)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2491, file: !369, line: 399, baseType: !1486, size: 160, offset: 768)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2491, file: !369, line: 400, baseType: !1488, size: 160, offset: 928)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2491, file: !369, line: 401, baseType: !120, size: 32, offset: 1088)
!2514 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2515, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2516, splitDebugInlining: false, nameTableKind: None)
!2515 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2516 = !{!2517, !102, !103}
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 32)
!2518 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !369, line: 402, baseType: !2519)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 379, size: 1120, elements: !2520)
!2520 = !{!2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2519, file: !369, line: 381, baseType: !373, size: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2519, file: !369, line: 382, baseType: !120, size: 32, offset: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2519, file: !369, line: 383, baseType: !120, size: 32, offset: 64)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2519, file: !369, line: 384, baseType: !120, size: 32, offset: 96)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2519, file: !369, line: 385, baseType: !120, size: 32, offset: 128)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2519, file: !369, line: 386, baseType: !120, size: 32, offset: 160)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2519, file: !369, line: 387, baseType: !1469, size: 96, offset: 192)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2519, file: !369, line: 388, baseType: !120, size: 32, offset: 288)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2519, file: !369, line: 389, baseType: !120, size: 32, offset: 320)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2519, file: !369, line: 390, baseType: !120, size: 32, offset: 352)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2519, file: !369, line: 391, baseType: !120, size: 32, offset: 384)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2519, file: !369, line: 392, baseType: !120, size: 32, offset: 416)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2519, file: !369, line: 393, baseType: !120, size: 32, offset: 448)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2519, file: !369, line: 394, baseType: !120, size: 32, offset: 480)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2519, file: !369, line: 395, baseType: !1480, size: 64, offset: 512)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2519, file: !369, line: 396, baseType: !373, size: 32, offset: 576)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2519, file: !369, line: 397, baseType: !373, size: 32, offset: 608)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2519, file: !369, line: 398, baseType: !1484, size: 128, offset: 640)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2519, file: !369, line: 399, baseType: !1486, size: 160, offset: 768)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2519, file: !369, line: 400, baseType: !1488, size: 160, offset: 928)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2519, file: !369, line: 401, baseType: !120, size: 32, offset: 1088)
!2542 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2543, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2544, splitDebugInlining: false, nameTableKind: None)
!2543 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2544 = !{!159, !1017, !213, !871, !2545, !168, !102}
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2546, size: 32)
!2546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !168)
!2547 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2548, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2549, splitDebugInlining: false, nameTableKind: None)
!2548 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2549 = !{!2550}
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !2552)
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !2553)
!2553 = !{!2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2552, file: !116, line: 372, baseType: !120, size: 32)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2552, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2552, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2552, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2552, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2552, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2552, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2552, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2552, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2552, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2552, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2552, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2552, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2552, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!2568 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2569, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2569 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2570 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2571, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2572, retainedTypes: !2588, splitDebugInlining: false, nameTableKind: None)
!2571 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2572 = !{!2573, !2580, !2584}
!2573 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2574, line: 39, baseType: !32, size: 32, elements: !2575)
!2574 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2575 = !{!2576, !2577, !2578, !2579}
!2576 = !DIEnumerator(name: "HAL_OK", value: 0)
!2577 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2578 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2579 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2580 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !730, line: 183, baseType: !32, size: 32, elements: !2581)
!2581 = !{!2582, !2583}
!2582 = !DIEnumerator(name: "DISABLE", value: 0)
!2583 = !DIEnumerator(name: "ENABLE", value: 1)
!2584 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !730, line: 177, baseType: !32, size: 32, elements: !2585)
!2585 = !{!2586, !2587}
!2586 = !DIEnumerator(name: "RESET", value: 0)
!2587 = !DIEnumerator(name: "SET", value: 1)
!2588 = !{!2589, !102, !121, !167, !2607, !2608, !2614, !278, !2627, !2023, !2640}
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !2591)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !2592)
!2592 = !{!2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2591, file: !116, line: 372, baseType: !120, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2591, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2591, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2591, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2591, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2591, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2591, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2591, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2591, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2591, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2591, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2591, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2591, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2591, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 32)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 32)
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 364, baseType: !2610)
!2610 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 360, size: 64, elements: !2611)
!2611 = !{!2612, !2613}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2610, file: !116, line: 362, baseType: !120, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2610, file: !116, line: 363, baseType: !120, size: 32, offset: 32)
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 286, baseType: !2616)
!2616 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 275, size: 288, elements: !2617)
!2617 = !{!2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2616, file: !116, line: 277, baseType: !120, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !2616, file: !116, line: 278, baseType: !120, size: 32, offset: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !2616, file: !116, line: 279, baseType: !120, size: 32, offset: 64)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !2616, file: !116, line: 280, baseType: !120, size: 32, offset: 96)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !2616, file: !116, line: 281, baseType: !120, size: 32, offset: 128)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2616, file: !116, line: 282, baseType: !120, size: 32, offset: 160)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2616, file: !116, line: 283, baseType: !120, size: 32, offset: 192)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !2616, file: !116, line: 284, baseType: !120, size: 32, offset: 224)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !2616, file: !116, line: 285, baseType: !120, size: 32, offset: 256)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 32)
!2628 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !116, line: 314, baseType: !2629)
!2629 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 303, size: 320, elements: !2630)
!2630 = !{!2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2629, file: !116, line: 305, baseType: !120, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2629, file: !116, line: 306, baseType: !120, size: 32, offset: 32)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2629, file: !116, line: 307, baseType: !120, size: 32, offset: 64)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2629, file: !116, line: 308, baseType: !120, size: 32, offset: 96)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2629, file: !116, line: 309, baseType: !120, size: 32, offset: 128)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2629, file: !116, line: 310, baseType: !120, size: 32, offset: 160)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2629, file: !116, line: 311, baseType: !120, size: 32, offset: 192)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2629, file: !116, line: 312, baseType: !120, size: 32, offset: 224)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2629, file: !116, line: 313, baseType: !1008, size: 64, offset: 256)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 32)
!2641 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2642, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2643, retainedTypes: !2644, splitDebugInlining: false, nameTableKind: None)
!2642 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2643 = !{!729}
!2644 = !{!2645, !121, !2653, !2659, !2672}
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !369, line: 712, baseType: !2647)
!2647 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !369, line: 706, size: 128, elements: !2648)
!2648 = !{!2649, !2650, !2651, !2652}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2647, file: !369, line: 708, baseType: !120, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2647, file: !369, line: 709, baseType: !120, size: 32, offset: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2647, file: !369, line: 710, baseType: !120, size: 32, offset: 64)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2647, file: !369, line: 711, baseType: !373, size: 32, offset: 96)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 32)
!2654 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !116, line: 364, baseType: !2655)
!2655 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 360, size: 64, elements: !2656)
!2656 = !{!2657, !2658}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2655, file: !116, line: 362, baseType: !120, size: 32)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2655, file: !116, line: 363, baseType: !120, size: 32, offset: 32)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 32)
!2660 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !116, line: 286, baseType: !2661)
!2661 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 275, size: 288, elements: !2662)
!2662 = !{!2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2661, file: !116, line: 277, baseType: !120, size: 32)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "PECR", scope: !2661, file: !116, line: 278, baseType: !120, size: 32, offset: 32)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "PDKEYR", scope: !2661, file: !116, line: 279, baseType: !120, size: 32, offset: 64)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "PEKEYR", scope: !2661, file: !116, line: 280, baseType: !120, size: 32, offset: 96)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "PRGKEYR", scope: !2661, file: !116, line: 281, baseType: !120, size: 32, offset: 128)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2661, file: !116, line: 282, baseType: !120, size: 32, offset: 160)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2661, file: !116, line: 283, baseType: !120, size: 32, offset: 192)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "OBR", scope: !2661, file: !116, line: 284, baseType: !120, size: 32, offset: 224)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "WRPR1", scope: !2661, file: !116, line: 285, baseType: !120, size: 32, offset: 256)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 32)
!2673 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !116, line: 386, baseType: !2674)
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !116, line: 370, size: 448, elements: !2675)
!2675 = !{!2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2674, file: !116, line: 372, baseType: !120, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "ICSCR", scope: !2674, file: !116, line: 373, baseType: !120, size: 32, offset: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2674, file: !116, line: 374, baseType: !120, size: 32, offset: 64)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2674, file: !116, line: 375, baseType: !120, size: 32, offset: 96)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "AHBRSTR", scope: !2674, file: !116, line: 376, baseType: !120, size: 32, offset: 128)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2674, file: !116, line: 377, baseType: !120, size: 32, offset: 160)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2674, file: !116, line: 378, baseType: !120, size: 32, offset: 192)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "AHBENR", scope: !2674, file: !116, line: 379, baseType: !120, size: 32, offset: 224)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2674, file: !116, line: 380, baseType: !120, size: 32, offset: 256)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2674, file: !116, line: 381, baseType: !120, size: 32, offset: 288)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "AHBLPENR", scope: !2674, file: !116, line: 382, baseType: !120, size: 32, offset: 320)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2674, file: !116, line: 383, baseType: !120, size: 32, offset: 352)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2674, file: !116, line: 384, baseType: !120, size: 32, offset: 384)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2674, file: !116, line: 385, baseType: !120, size: 32, offset: 416)
!2690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2691, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2692, splitDebugInlining: false, nameTableKind: None)
!2691 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2692 = !{!102, !213}
!2693 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2694, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2695, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2694 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2695 = !{!2696, !2703, !30}
!2696 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2697, line: 14, baseType: !32, size: 32, elements: !2698)
!2697 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2698 = !{!2699, !2700, !2701, !2702}
!2699 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2700 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2701 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2702 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2703 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2697, line: 42, baseType: !32, size: 32, elements: !2704)
!2704 = !{!2705, !2706, !2707, !2708, !2709, !2710}
!2705 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!2706 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!2707 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!2708 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!2709 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!2710 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!2711 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2712, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2712 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2713 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2714, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2715, splitDebugInlining: false, nameTableKind: None)
!2714 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2715 = !{!22, !102, !103}
!2716 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2717, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, splitDebugInlining: false, nameTableKind: None)
!2717 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!2718 = !{!"Ubuntu clang version 14.0.6"}
!2719 = !{i32 7, !"Dwarf Version", i32 4}
!2720 = !{i32 2, !"Debug Info Version", i32 3}
!2721 = !{i32 1, !"wchar_size", i32 4}
!2722 = !{i32 1, !"min_enum_size", i32 4}
!2723 = !{i32 1, !"branch-target-enforcement", i32 0}
!2724 = !{i32 1, !"sign-return-address", i32 0}
!2725 = !{i32 1, !"sign-return-address-all", i32 0}
!2726 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2727 = !{i32 7, !"frame-pointer", i32 2}
!2728 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !2729, file: !2729, line: 26, type: !2730, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2193, retainedNodes: !335)
!2729 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2730 = !DISubroutineType(types: !2731)
!2731 = !{null}
!2732 = !DILocation(line: 28, column: 1, scope: !2728)
!2733 = !{i64 2152483030, i64 2152483050, i64 2152483113}
!2734 = !DILocation(line: 29, column: 1, scope: !2728)
!2735 = !{i64 2152483445, i64 2152483465, i64 2152483528}
!2736 = !DILocation(line: 30, column: 1, scope: !2728)
!2737 = !{i64 2152487925, i64 2152487945, i64 2152488008}
!2738 = !DILocation(line: 31, column: 1, scope: !2728)
!2739 = !{i64 2152488344, i64 2152488364, i64 2152488427}
!2740 = !DILocation(line: 33, column: 1, scope: !2728)
!2741 = !{i64 2152488636, i64 2152488656, i64 2152488719}
!2742 = !DILocation(line: 35, column: 1, scope: !2728)
!2743 = !{i64 2152488961, i64 2152488981, i64 2152489044}
!2744 = !DILocation(line: 50, column: 1, scope: !2728)
!2745 = !{i64 2152489388, i64 2152489408, i64 2152489471}
!2746 = !DILocation(line: 54, column: 1, scope: !2728)
!2747 = !{i64 2152489827, i64 2152489847, i64 2152489910}
!2748 = !DILocation(line: 61, column: 1, scope: !2728)
!2749 = !{i64 2152490144, i64 2152490164, i64 2152490227}
!2750 = !DILocation(line: 63, column: 1, scope: !2728)
!2751 = !{i64 2152490524, i64 2152490544, i64 2152490607}
!2752 = !DILocation(line: 64, column: 1, scope: !2728)
!2753 = !{i64 2152491046, i64 2152491066, i64 2152491129}
!2754 = !DILocation(line: 65, column: 1, scope: !2728)
!2755 = !{i64 2152491544, i64 2152491564, i64 2152491627}
!2756 = !DILocation(line: 66, column: 1, scope: !2728)
!2757 = !{i64 2152492026, i64 2152492046, i64 2152492109}
!2758 = !DILocation(line: 67, column: 1, scope: !2728)
!2759 = !{i64 2152492533, i64 2152492553, i64 2152492616}
!2760 = !DILocation(line: 68, column: 1, scope: !2728)
!2761 = !{i64 2152493021, i64 2152493041, i64 2152493104}
!2762 = !DILocation(line: 70, column: 1, scope: !2728)
!2763 = !{i64 2152493489, i64 2152493509, i64 2152493572}
!2764 = !DILocation(line: 71, column: 1, scope: !2728)
!2765 = !{i64 2152493931, i64 2152493951, i64 2152494014}
!2766 = !DILocation(line: 72, column: 1, scope: !2728)
!2767 = !{i64 2152494389, i64 2152494409, i64 2152494472}
!2768 = !DILocation(line: 79, column: 1, scope: !2728)
!2769 = !{i64 2152494843, i64 2152494863, i64 2152494926}
!2770 = !DILocation(line: 80, column: 1, scope: !2728)
!2771 = !{i64 2152495354, i64 2152495374, i64 2152495437}
!2772 = !DILocation(line: 82, column: 1, scope: !2728)
!2773 = !{i64 2152495845, i64 2152495865, i64 2152495928}
!2774 = !DILocation(line: 97, column: 1, scope: !2728)
!2775 = !{i64 2152496182, i64 2152496202, i64 2152496265}
!2776 = !DILocation(line: 99, column: 1, scope: !2728)
!2777 = !{i64 2152496400, i64 2152496420, i64 2152496483}
!2778 = !DILocation(line: 102, column: 1, scope: !2728)
!2779 = !{i64 2152496657, i64 2152496677, i64 2152496740}
!2780 = !DILocation(line: 105, column: 1, scope: !2728)
!2781 = !{i64 2152496897, i64 2152496917, i64 2152496980}
!2782 = !DILocation(line: 115, column: 1, scope: !2728)
!2783 = !{i64 2152497236, i64 2152497256, i64 2152497319}
!2784 = !DILocation(line: 118, column: 1, scope: !2728)
!2785 = !{i64 2152501641, i64 2152501661, i64 2152501724}
!2786 = !DILocation(line: 32, column: 1, scope: !2787)
!2787 = !DILexicalBlockFile(scope: !2728, file: !2788, discriminator: 0)
!2788 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2789 = !{i64 2152501997, i64 2152502017, i64 2152502080}
!2790 = !DILocation(line: 33, column: 1, scope: !2787)
!2791 = !{i64 2152502509, i64 2152502529, i64 2152502592}
!2792 = !DILocation(line: 53, column: 1, scope: !2787)
!2793 = !{i64 2152503017, i64 2152503037, i64 2152503100}
!2794 = !DILocation(line: 54, column: 1, scope: !2787)
!2795 = !{i64 2152503435, i64 2152503455, i64 2152503518}
!2796 = !DILocation(line: 55, column: 1, scope: !2787)
!2797 = !{i64 2152503853, i64 2152503873, i64 2152503936}
!2798 = !DILocation(line: 56, column: 1, scope: !2787)
!2799 = !{i64 2152504271, i64 2152504291, i64 2152504354}
!2800 = !DILocation(line: 57, column: 1, scope: !2787)
!2801 = !{i64 2152504689, i64 2152504709, i64 2152504772}
!2802 = !DILocation(line: 58, column: 1, scope: !2787)
!2803 = !{i64 2152505107, i64 2152505127, i64 2152505190}
!2804 = !DILocation(line: 59, column: 1, scope: !2787)
!2805 = !{i64 2152505525, i64 2152505545, i64 2152505608}
!2806 = !DILocation(line: 60, column: 1, scope: !2787)
!2807 = !{i64 2152505949, i64 2152505969, i64 2152506032}
!2808 = !DILocation(line: 61, column: 1, scope: !2787)
!2809 = !{i64 2152506266, i64 2152506286, i64 2152506349}
!2810 = !DILocation(line: 70, column: 1, scope: !2787)
!2811 = !{i64 2152506495, i64 2152506515, i64 2152506578}
!2812 = !DILocation(line: 72, column: 1, scope: !2787)
!2813 = !{i64 2152506827, i64 2152506847, i64 2152506910}
!2814 = !DILocation(line: 73, column: 1, scope: !2787)
!2815 = !{i64 2152507277, i64 2152507297, i64 2152507360}
!2816 = !DILocation(line: 74, column: 1, scope: !2787)
!2817 = !{i64 2152507727, i64 2152507747, i64 2152507810}
!2818 = !DILocation(line: 75, column: 1, scope: !2787)
!2819 = !{i64 2152508177, i64 2152508197, i64 2152508260}
!2820 = !DILocation(line: 76, column: 1, scope: !2787)
!2821 = !{i64 2152508627, i64 2152508647, i64 2152508710}
!2822 = !DILocation(line: 77, column: 1, scope: !2787)
!2823 = !{i64 2152509077, i64 2152509097, i64 2152509160}
!2824 = !DILocation(line: 78, column: 1, scope: !2787)
!2825 = !{i64 2152509527, i64 2152509547, i64 2152509610}
!2826 = !DILocation(line: 79, column: 1, scope: !2787)
!2827 = !{i64 2152509977, i64 2152509997, i64 2152510060}
!2828 = !DILocation(line: 80, column: 1, scope: !2787)
!2829 = !{i64 2152510430, i64 2152510450, i64 2152510513}
!2830 = !DILocation(line: 84, column: 1, scope: !2787)
!2831 = !{i64 2152514823, i64 2152514843, i64 2152514906}
!2832 = !DILocation(line: 91, column: 1, scope: !2787)
!2833 = !{i64 2152515220, i64 2152515240, i64 2152515303}
!2834 = !DILocation(line: 93, column: 1, scope: !2787)
!2835 = !{i64 2152515587, i64 2152515607, i64 2152515670}
!2836 = !DILocation(line: 106, column: 1, scope: !2787)
!2837 = !{i64 2152515857, i64 2152515877, i64 2152515940}
!2838 = !DILocation(line: 11, column: 1, scope: !2839)
!2839 = !DILexicalBlockFile(scope: !2728, file: !2840, discriminator: 0)
!2840 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2841 = distinct !DISubprogram(name: "main", scope: !2842, file: !2842, line: 9, type: !2730, scopeLine: 10, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2195, retainedNodes: !335)
!2842 = !DIFile(filename: "zephyr/samples/hello_world/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2843 = !DILocation(line: 11, column: 2, scope: !2841)
!2844 = !DILocation(line: 12, column: 1, scope: !2841)
!2845 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !105, file: !105, line: 45, type: !107, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2846)
!2846 = !{!2847}
!2847 = !DILocalVariable(name: "c", arg: 1, scope: !2845, file: !105, line: 45, type: !103)
!2848 = !DILocation(line: 0, scope: !2845)
!2849 = !DILocation(line: 50, column: 2, scope: !2845)
!2850 = distinct !DISubprogram(name: "__printk_hook_install", scope: !105, file: !105, line: 63, type: !2851, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2853)
!2851 = !DISubroutineType(types: !2852)
!2852 = !{null, !106}
!2853 = !{!2854}
!2854 = !DILocalVariable(name: "fn", arg: 1, scope: !2850, file: !105, line: 63, type: !106)
!2855 = !DILocation(line: 0, scope: !2850)
!2856 = !DILocation(line: 65, column: 12, scope: !2850)
!2857 = !DILocation(line: 66, column: 1, scope: !2850)
!2858 = distinct !DISubprogram(name: "__printk_get_hook", scope: !105, file: !105, line: 76, type: !2859, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !335)
!2859 = !DISubroutineType(types: !2860)
!2860 = !{!102}
!2861 = !DILocation(line: 78, column: 9, scope: !2858)
!2862 = !DILocation(line: 78, column: 2, scope: !2858)
!2863 = distinct !DISubprogram(name: "vprintk", scope: !105, file: !105, line: 113, type: !2864, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2873)
!2864 = !DISubroutineType(types: !2865)
!2865 = !{null, !157, !2866}
!2866 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2867, line: 99, baseType: !2868)
!2867 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2868 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2867, line: 40, baseType: !2869)
!2869 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !105, baseType: !2870)
!2870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !2871)
!2871 = !{!2872}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !2870, file: !105, line: 79, baseType: !102, size: 32)
!2873 = !{!2874, !2875, !2876}
!2874 = !DILocalVariable(name: "fmt", arg: 1, scope: !2863, file: !105, line: 113, type: !157)
!2875 = !DILocalVariable(name: "ap", arg: 2, scope: !2863, file: !105, line: 113, type: !2866)
!2876 = !DILocalVariable(name: "ctx", scope: !2877, file: !105, line: 121, type: !2879)
!2877 = distinct !DILexicalBlock(scope: !2878, file: !105, line: 120, column: 27)
!2878 = distinct !DILexicalBlock(scope: !2863, file: !105, line: 120, column: 6)
!2879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !105, line: 81, size: 32, elements: !2880)
!2880 = !{!2881, !2882}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !2879, file: !105, line: 85, baseType: !32, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2879, file: !105, line: 86, baseType: !2883, offset: 32)
!2883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, elements: !2884)
!2884 = !{!2885}
!2885 = !DISubrange(count: 0)
!2886 = !DILocation(line: 0, scope: !2863)
!2887 = !DILocation(line: 148, column: 3, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2878, file: !105, line: 138, column: 9)
!2889 = !DILocation(line: 155, column: 1, scope: !2863)
!2890 = distinct !DISubprogram(name: "char_out", scope: !105, file: !105, line: 107, type: !2891, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2893)
!2891 = !DISubroutineType(types: !2892)
!2892 = !{!103, !103, !102}
!2893 = !{!2894, !2895}
!2894 = !DILocalVariable(name: "c", arg: 1, scope: !2890, file: !105, line: 107, type: !103)
!2895 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !2890, file: !105, line: 107, type: !102)
!2896 = !DILocation(line: 0, scope: !2890)
!2897 = !DILocation(line: 110, column: 9, scope: !2890)
!2898 = !DILocation(line: 110, column: 2, scope: !2890)
!2899 = distinct !DISubprogram(name: "cbvprintf", scope: !2900, file: !2900, line: 739, type: !2901, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2907)
!2900 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2901 = !DISubroutineType(types: !2902)
!2902 = !{!103, !2903, !102, !157, !2866}
!2903 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !2900, line: 297, baseType: !2904)
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 32)
!2905 = !DISubroutineType(types: !2906)
!2906 = !{!103, null}
!2907 = !{!2908, !2909, !2910, !2911}
!2908 = !DILocalVariable(name: "out", arg: 1, scope: !2899, file: !2900, line: 739, type: !2903)
!2909 = !DILocalVariable(name: "ctx", arg: 2, scope: !2899, file: !2900, line: 739, type: !102)
!2910 = !DILocalVariable(name: "format", arg: 3, scope: !2899, file: !2900, line: 739, type: !157)
!2911 = !DILocalVariable(name: "ap", arg: 4, scope: !2899, file: !2900, line: 739, type: !2866)
!2912 = !DILocation(line: 0, scope: !2899)
!2913 = !DILocation(line: 741, column: 9, scope: !2899)
!2914 = !DILocation(line: 741, column: 2, scope: !2899)
!2915 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !105, file: !105, line: 157, type: !2916, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2918)
!2916 = !DISubroutineType(types: !2917)
!2917 = !{null, !1017, !213}
!2918 = !{!2919, !2920, !2921}
!2919 = !DILocalVariable(name: "c", arg: 1, scope: !2915, file: !105, line: 157, type: !1017)
!2920 = !DILocalVariable(name: "n", arg: 2, scope: !2915, file: !105, line: 157, type: !213)
!2921 = !DILocalVariable(name: "i", scope: !2915, file: !105, line: 159, type: !213)
!2922 = !DILocation(line: 0, scope: !2915)
!2923 = !DILocation(line: 164, column: 16, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2925, file: !105, line: 164, column: 2)
!2925 = distinct !DILexicalBlock(scope: !2915, file: !105, line: 164, column: 2)
!2926 = !DILocation(line: 164, column: 2, scope: !2925)
!2927 = !DILocation(line: 165, column: 3, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2924, file: !105, line: 164, column: 26)
!2929 = !DILocation(line: 165, column: 13, scope: !2928)
!2930 = !DILocation(line: 164, column: 22, scope: !2924)
!2931 = distinct !{!2931, !2926, !2932}
!2932 = !DILocation(line: 166, column: 2, scope: !2925)
!2933 = !DILocation(line: 171, column: 1, scope: !2915)
!2934 = distinct !DISubprogram(name: "printk", scope: !105, file: !105, line: 203, type: !2935, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2937)
!2935 = !DISubroutineType(types: !2936)
!2936 = !{null, !157, null}
!2937 = !{!2938, !2939}
!2938 = !DILocalVariable(name: "fmt", arg: 1, scope: !2934, file: !105, line: 203, type: !157)
!2939 = !DILocalVariable(name: "ap", scope: !2934, file: !105, line: 205, type: !2866)
!2940 = !DILocation(line: 0, scope: !2934)
!2941 = !DILocation(line: 205, column: 2, scope: !2934)
!2942 = !DILocation(line: 205, column: 10, scope: !2934)
!2943 = !DILocation(line: 207, column: 2, scope: !2934)
!2944 = !DILocation(line: 209, column: 2, scope: !2934)
!2945 = !DILocation(line: 211, column: 2, scope: !2934)
!2946 = !DILocation(line: 212, column: 1, scope: !2934)
!2947 = distinct !DISubprogram(name: "snprintk", scope: !105, file: !105, line: 239, type: !2948, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2950)
!2948 = !DISubroutineType(types: !2949)
!2949 = !{!103, !1017, !213, !157, null}
!2950 = !{!2951, !2952, !2953, !2954, !2955}
!2951 = !DILocalVariable(name: "str", arg: 1, scope: !2947, file: !105, line: 239, type: !1017)
!2952 = !DILocalVariable(name: "size", arg: 2, scope: !2947, file: !105, line: 239, type: !213)
!2953 = !DILocalVariable(name: "fmt", arg: 3, scope: !2947, file: !105, line: 239, type: !157)
!2954 = !DILocalVariable(name: "ap", scope: !2947, file: !105, line: 241, type: !2866)
!2955 = !DILocalVariable(name: "ret", scope: !2947, file: !105, line: 242, type: !103)
!2956 = !DILocation(line: 0, scope: !2947)
!2957 = !DILocation(line: 241, column: 2, scope: !2947)
!2958 = !DILocation(line: 241, column: 10, scope: !2947)
!2959 = !DILocation(line: 244, column: 2, scope: !2947)
!2960 = !DILocation(line: 245, column: 8, scope: !2947)
!2961 = !DILocation(line: 246, column: 2, scope: !2947)
!2962 = !DILocation(line: 249, column: 1, scope: !2947)
!2963 = !DILocation(line: 248, column: 2, scope: !2947)
!2964 = distinct !DISubprogram(name: "vsnprintk", scope: !105, file: !105, line: 251, type: !2965, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2967)
!2965 = !DISubroutineType(types: !2966)
!2966 = !{!103, !1017, !213, !157, !2866}
!2967 = !{!2968, !2969, !2970, !2971, !2972}
!2968 = !DILocalVariable(name: "str", arg: 1, scope: !2964, file: !105, line: 251, type: !1017)
!2969 = !DILocalVariable(name: "size", arg: 2, scope: !2964, file: !105, line: 251, type: !213)
!2970 = !DILocalVariable(name: "fmt", arg: 3, scope: !2964, file: !105, line: 251, type: !157)
!2971 = !DILocalVariable(name: "ap", arg: 4, scope: !2964, file: !105, line: 251, type: !2866)
!2972 = !DILocalVariable(name: "ctx", scope: !2964, file: !105, line: 253, type: !2973)
!2973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !105, line: 217, size: 96, elements: !2974)
!2974 = !{!2975, !2976, !2977}
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2973, file: !105, line: 218, baseType: !1017, size: 32)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2973, file: !105, line: 219, baseType: !103, size: 32, offset: 32)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2973, file: !105, line: 220, baseType: !103, size: 32, offset: 64)
!2978 = !DILocation(line: 0, scope: !2964)
!2979 = !DILocation(line: 253, column: 2, scope: !2964)
!2980 = !DILocation(line: 253, column: 21, scope: !2964)
!2981 = !DILocation(line: 253, column: 27, scope: !2964)
!2982 = !DILocation(line: 255, column: 2, scope: !2964)
!2983 = !DILocation(line: 257, column: 10, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2964, file: !105, line: 257, column: 6)
!2985 = !DILocation(line: 257, column: 22, scope: !2984)
!2986 = !DILocation(line: 257, column: 16, scope: !2984)
!2987 = !DILocation(line: 257, column: 6, scope: !2964)
!2988 = !DILocation(line: 258, column: 3, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2984, file: !105, line: 257, column: 27)
!2990 = !DILocation(line: 258, column: 18, scope: !2989)
!2991 = !DILocation(line: 259, column: 2, scope: !2989)
!2992 = !DILocation(line: 262, column: 1, scope: !2964)
!2993 = !DILocation(line: 261, column: 2, scope: !2964)
!2994 = distinct !DISubprogram(name: "str_out", scope: !105, file: !105, line: 223, type: !2995, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2998)
!2995 = !DISubroutineType(types: !2996)
!2996 = !{!103, !103, !2997}
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 32)
!2998 = !{!2999, !3000}
!2999 = !DILocalVariable(name: "c", arg: 1, scope: !2994, file: !105, line: 223, type: !103)
!3000 = !DILocalVariable(name: "ctx", arg: 2, scope: !2994, file: !105, line: 223, type: !2997)
!3001 = !DILocation(line: 0, scope: !2994)
!3002 = !DILocation(line: 225, column: 11, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !2994, file: !105, line: 225, column: 6)
!3004 = !DILocation(line: 225, column: 15, scope: !3003)
!3005 = !DILocation(line: 0, scope: !3003)
!3006 = !DILocation(line: 225, column: 23, scope: !3003)
!3007 = !DILocation(line: 225, column: 45, scope: !3003)
!3008 = !DILocation(line: 225, column: 37, scope: !3003)
!3009 = !DILocation(line: 225, column: 6, scope: !2994)
!3010 = !DILocation(line: 226, column: 8, scope: !3011)
!3011 = distinct !DILexicalBlock(scope: !3003, file: !105, line: 225, column: 50)
!3012 = !DILocation(line: 226, column: 13, scope: !3011)
!3013 = !DILocation(line: 227, column: 3, scope: !3011)
!3014 = !DILocation(line: 230, column: 29, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !2994, file: !105, line: 230, column: 6)
!3016 = !DILocation(line: 230, column: 17, scope: !3015)
!3017 = !DILocation(line: 230, column: 6, scope: !2994)
!3018 = !DILocation(line: 231, column: 22, scope: !3019)
!3019 = distinct !DILexicalBlock(scope: !3015, file: !105, line: 230, column: 34)
!3020 = !DILocation(line: 231, column: 3, scope: !3019)
!3021 = !DILocation(line: 231, column: 26, scope: !3019)
!3022 = !DILocation(line: 232, column: 2, scope: !3019)
!3023 = !DILocation(line: 233, column: 28, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !3015, file: !105, line: 232, column: 9)
!3025 = !DILocation(line: 233, column: 22, scope: !3024)
!3026 = !DILocation(line: 233, column: 3, scope: !3024)
!3027 = !DILocation(line: 233, column: 26, scope: !3024)
!3028 = !DILocation(line: 237, column: 1, scope: !2994)
!3029 = distinct !DISubprogram(name: "z_thread_entry", scope: !3030, file: !3030, line: 30, type: !3031, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3038)
!3030 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3031 = !DISubroutineType(types: !3032)
!3032 = !{null, !3033, !102, !102, !102}
!3033 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3034, line: 46, baseType: !3035)
!3034 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3036, size: 32)
!3036 = !DISubroutineType(types: !3037)
!3037 = !{null, !102, !102, !102}
!3038 = !{!3039, !3040, !3041, !3042}
!3039 = !DILocalVariable(name: "entry", arg: 1, scope: !3029, file: !3030, line: 30, type: !3033)
!3040 = !DILocalVariable(name: "p1", arg: 2, scope: !3029, file: !3030, line: 31, type: !102)
!3041 = !DILocalVariable(name: "p2", arg: 3, scope: !3029, file: !3030, line: 31, type: !102)
!3042 = !DILocalVariable(name: "p3", arg: 4, scope: !3029, file: !3030, line: 31, type: !102)
!3043 = !DILocation(line: 0, scope: !3029)
!3044 = !DILocation(line: 36, column: 2, scope: !3029)
!3045 = !DILocation(line: 38, column: 17, scope: !3029)
!3046 = !DILocation(line: 38, column: 2, scope: !3029)
!3047 = !DILocation(line: 45, column: 2, scope: !3029)
!3048 = distinct !DISubprogram(name: "k_current_get", scope: !320, file: !320, line: 530, type: !3049, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !335)
!3049 = !DISubroutineType(types: !3050)
!3050 = !{!3051}
!3051 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !224, line: 347, baseType: !3052)
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 32)
!3053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !224, line: 245, size: 1024, elements: !3054)
!3054 = !{!3055, !3113, !3125, !3126, !3127, !3128, !3134, !3147}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3053, file: !224, line: 247, baseType: !3056, size: 384)
!3056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !224, line: 57, size: 384, elements: !3057)
!3057 = !{!3058, !3082, !3089, !3090, !3091, !3100, !3101, !3102}
!3058 = !DIDerivedType(tag: DW_TAG_member, scope: !3056, file: !224, line: 60, baseType: !3059, size: 64)
!3059 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3056, file: !224, line: 60, size: 64, elements: !3060)
!3060 = !{!3061, !3076}
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3059, file: !224, line: 61, baseType: !3062, size: 64)
!3062 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !234, line: 49, baseType: !3063)
!3063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !3064)
!3064 = !{!3065, !3071}
!3065 = !DIDerivedType(tag: DW_TAG_member, scope: !3063, file: !234, line: 38, baseType: !3066, size: 32)
!3066 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3063, file: !234, line: 38, size: 32, elements: !3067)
!3067 = !{!3068, !3070}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3066, file: !234, line: 39, baseType: !3069, size: 32)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3063, size: 32)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3066, file: !234, line: 40, baseType: !3069, size: 32)
!3071 = !DIDerivedType(tag: DW_TAG_member, scope: !3063, file: !234, line: 42, baseType: !3072, size: 32, offset: 32)
!3072 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3063, file: !234, line: 42, size: 32, elements: !3073)
!3073 = !{!3074, !3075}
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3072, file: !234, line: 43, baseType: !3069, size: 32)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3072, file: !234, line: 44, baseType: !3069, size: 32)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3059, file: !224, line: 62, baseType: !3077, size: 64)
!3077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !250, line: 49, size: 64, elements: !3078)
!3078 = !{!3079}
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3077, file: !250, line: 50, baseType: !3080, size: 64)
!3080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3081, size: 64, elements: !255)
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3077, size: 32)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3056, file: !224, line: 68, baseType: !3083, size: 32, offset: 64)
!3083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3084, size: 32)
!3084 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !260, line: 233, baseType: !3085)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !260, line: 231, size: 64, elements: !3086)
!3086 = !{!3087}
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3085, file: !260, line: 232, baseType: !3088, size: 64)
!3088 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !3063)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3056, file: !224, line: 71, baseType: !167, size: 8, offset: 96)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3056, file: !224, line: 74, baseType: !167, size: 8, offset: 104)
!3091 = !DIDerivedType(tag: DW_TAG_member, scope: !3056, file: !224, line: 90, baseType: !3092, size: 16, offset: 112)
!3092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3056, file: !224, line: 90, size: 16, elements: !3093)
!3093 = !{!3094, !3099}
!3094 = !DIDerivedType(tag: DW_TAG_member, scope: !3092, file: !224, line: 91, baseType: !3095, size: 16)
!3095 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3092, file: !224, line: 91, size: 16, elements: !3096)
!3096 = !{!3097, !3098}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3095, file: !224, line: 96, baseType: !274, size: 8)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3095, file: !224, line: 97, baseType: !167, size: 8, offset: 8)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3092, file: !224, line: 100, baseType: !278, size: 16)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3056, file: !224, line: 107, baseType: !121, size: 32, offset: 128)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3056, file: !224, line: 127, baseType: !102, size: 32, offset: 160)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3056, file: !224, line: 131, baseType: !3103, size: 192, offset: 192)
!3103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !260, line: 244, size: 192, elements: !3104)
!3104 = !{!3105, !3106, !3112}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3103, file: !260, line: 245, baseType: !3062, size: 64)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3103, file: !260, line: 246, baseType: !3107, size: 32, offset: 64)
!3107 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !260, line: 242, baseType: !3108)
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3109, size: 32)
!3109 = !DISubroutineType(types: !3110)
!3110 = !{null, !3111}
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 32)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3103, file: !260, line: 249, baseType: !293, size: 64, offset: 128)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3053, file: !224, line: 250, baseType: !3114, size: 288, offset: 384)
!3114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !3115)
!3115 = !{!3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124}
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3114, file: !297, line: 26, baseType: !121, size: 32)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3114, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3114, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3114, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3114, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3114, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3114, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3114, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3114, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3053, file: !224, line: 253, baseType: !102, size: 32, offset: 672)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3053, file: !224, line: 256, baseType: !3084, size: 64, offset: 704)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3053, file: !224, line: 294, baseType: !103, size: 32, offset: 768)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3053, file: !224, line: 300, baseType: !3129, size: 96, offset: 800)
!3129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !224, line: 149, size: 96, elements: !3130)
!3130 = !{!3131, !3132, !3133}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3129, file: !224, line: 153, baseType: !22, size: 32)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3129, file: !224, line: 162, baseType: !213, size: 32, offset: 32)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3129, file: !224, line: 168, baseType: !213, size: 32, offset: 64)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3053, file: !224, line: 325, baseType: !3135, size: 32, offset: 896)
!3135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3136, size: 32)
!3136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !320, line: 5073, size: 160, elements: !3137)
!3137 = !{!3138, !3144, !3145}
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3136, file: !320, line: 5074, baseType: !3139, size: 96)
!3139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !3140)
!3140 = !{!3141, !3142, !3143}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3139, file: !324, line: 57, baseType: !327, size: 32)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3139, file: !324, line: 58, baseType: !102, size: 32, offset: 32)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3139, file: !324, line: 59, baseType: !213, size: 32, offset: 64)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3136, file: !320, line: 5075, baseType: !3084, size: 64, offset: 96)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3136, file: !320, line: 5076, baseType: !3146, offset: 160)
!3146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3053, file: !224, line: 343, baseType: !3148, size: 64, offset: 928)
!3148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !297, line: 60, size: 64, elements: !3149)
!3149 = !{!3150, !3151}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3148, file: !297, line: 63, baseType: !121, size: 32)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3148, file: !297, line: 66, baseType: !121, size: 32, offset: 32)
!3152 = !DILocation(line: 535, column: 9, scope: !3048)
!3153 = !DILocation(line: 535, column: 2, scope: !3048)
!3154 = distinct !DISubprogram(name: "k_thread_abort", scope: !3155, file: !3155, line: 188, type: !3156, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !3158)
!3155 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!3156 = !DISubroutineType(types: !3157)
!3157 = !{null, !3051}
!3158 = !{!3159}
!3159 = !DILocalVariable(name: "thread", arg: 1, scope: !3154, file: !3155, line: 188, type: !3051)
!3160 = !DILocation(line: 0, scope: !3154)
!3161 = !DILocation(line: 197, column: 2, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !3154, file: !3155, line: 197, column: 2)
!3163 = !{i64 2152212346}
!3164 = !DILocation(line: 198, column: 2, scope: !3154)
!3165 = !DILocation(line: 199, column: 1, scope: !3154)
!3166 = distinct !DISubprogram(name: "z_current_get", scope: !3155, file: !3155, line: 173, type: !3049, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2197, retainedNodes: !335)
!3167 = !DILocation(line: 180, column: 2, scope: !3168)
!3168 = distinct !DILexicalBlock(scope: !3166, file: !3155, line: 180, column: 2)
!3169 = !{i64 2152212278}
!3170 = !DILocation(line: 181, column: 9, scope: !3166)
!3171 = !DILocation(line: 181, column: 2, scope: !3166)
!3172 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2203, file: !2203, line: 1338, type: !3173, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !3181)
!3173 = !DISubroutineType(types: !3174)
!3174 = !{!103, !2903, !102, !157, !3175, !121}
!3175 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !2867, line: 99, baseType: !3176)
!3176 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !2867, line: 40, baseType: !3177)
!3177 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2203, baseType: !3178)
!3178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3179)
!3179 = !{!3180}
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3178, file: !2203, baseType: !102, size: 32)
!3181 = !{!3182, !3183, !3184, !3185, !3186, !3187, !3191, !3192, !3193, !3195, !3200, !3245, !3248, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3260, !3261, !3262, !3266, !3269, !3271, !3274, !3275, !3276, !3281, !3287, !3290, !3294, !3300, !3304, !3307, !3309, !3312}
!3182 = !DILocalVariable(name: "out", arg: 1, scope: !3172, file: !2203, line: 1338, type: !2903)
!3183 = !DILocalVariable(name: "ctx", arg: 2, scope: !3172, file: !2203, line: 1338, type: !102)
!3184 = !DILocalVariable(name: "fp", arg: 3, scope: !3172, file: !2203, line: 1338, type: !157)
!3185 = !DILocalVariable(name: "ap", arg: 4, scope: !3172, file: !2203, line: 1339, type: !3175)
!3186 = !DILocalVariable(name: "flags", arg: 5, scope: !3172, file: !2203, line: 1339, type: !121)
!3187 = !DILocalVariable(name: "buf", scope: !3172, file: !2203, line: 1341, type: !3188)
!3188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 176, elements: !3189)
!3189 = !{!3190}
!3190 = !DISubrange(count: 22)
!3191 = !DILocalVariable(name: "count", scope: !3172, file: !2203, line: 1342, type: !213)
!3192 = !DILocalVariable(name: "sint", scope: !3172, file: !2203, line: 1343, type: !2222)
!3193 = !DILocalVariable(name: "tagged_ap", scope: !3172, file: !2203, line: 1345, type: !3194)
!3194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !170)
!3195 = !DILocalVariable(name: "rc", scope: !3196, file: !2203, line: 1377, type: !103)
!3196 = distinct !DILexicalBlock(scope: !3197, file: !2203, line: 1377, column: 4)
!3197 = distinct !DILexicalBlock(scope: !3198, file: !2203, line: 1376, column: 19)
!3198 = distinct !DILexicalBlock(scope: !3199, file: !2203, line: 1376, column: 7)
!3199 = distinct !DILexicalBlock(scope: !3172, file: !2203, line: 1375, column: 19)
!3200 = !DILocalVariable(name: "state", scope: !3199, file: !2203, line: 1395, type: !3201)
!3201 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3172, file: !2203, line: 1392, size: 192, elements: !3202)
!3202 = !{!3203, !3213}
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3201, file: !2203, line: 1393, baseType: !3204, size: 64)
!3204 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2203, line: 166, size: 64, elements: !3205)
!3205 = !{!3206, !3207, !3208, !3210, !3212}
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !3204, file: !2203, line: 168, baseType: !2222, size: 64)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !3204, file: !2203, line: 171, baseType: !2225, size: 64)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !3204, file: !2203, line: 174, baseType: !3209, size: 64)
!3209 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !3204, file: !2203, line: 177, baseType: !3211, size: 64)
!3211 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3204, file: !2203, line: 180, baseType: !102, size: 32)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !3201, file: !2203, line: 1394, baseType: !3214, size: 96, offset: 64)
!3214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2203, line: 189, size: 96, elements: !3215)
!3215 = !{!3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3240}
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !3214, file: !2203, line: 191, baseType: !170, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !3214, file: !2203, line: 194, baseType: !170, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !3214, file: !2203, line: 197, baseType: !170, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !3214, file: !2203, line: 200, baseType: !170, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !3214, file: !2203, line: 203, baseType: !170, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !3214, file: !2203, line: 206, baseType: !170, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !3214, file: !2203, line: 209, baseType: !170, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !3214, file: !2203, line: 212, baseType: !170, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !3214, file: !2203, line: 219, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !3214, file: !2203, line: 222, baseType: !170, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !3214, file: !2203, line: 229, baseType: !170, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !3214, file: !2203, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !3214, file: !2203, line: 238, baseType: !170, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !3214, file: !2203, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !3214, file: !2203, line: 244, baseType: !170, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !3214, file: !2203, line: 247, baseType: !170, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !3214, file: !2203, line: 252, baseType: !170, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !3214, file: !2203, line: 257, baseType: !170, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !3214, file: !2203, line: 260, baseType: !168, size: 8, offset: 24)
!3235 = !DIDerivedType(tag: DW_TAG_member, scope: !3214, file: !2203, line: 262, baseType: !3236, size: 32, offset: 32)
!3236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3214, file: !2203, line: 262, size: 32, elements: !3237)
!3237 = !{!3238, !3239}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !3236, file: !2203, line: 267, baseType: !103, size: 32)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !3236, file: !2203, line: 289, baseType: !103, size: 32)
!3240 = !DIDerivedType(tag: DW_TAG_member, scope: !3214, file: !2203, line: 292, baseType: !3241, size: 32, offset: 64)
!3241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3214, file: !2203, line: 292, size: 32, elements: !3242)
!3242 = !{!3243, !3244}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !3241, file: !2203, line: 297, baseType: !103, size: 32)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !3241, file: !2203, line: 306, baseType: !103, size: 32)
!3245 = !DILocalVariable(name: "conv", scope: !3199, file: !2203, line: 1400, type: !3246)
!3246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3247)
!3247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3214, size: 32)
!3248 = !DILocalVariable(name: "value", scope: !3199, file: !2203, line: 1401, type: !3249)
!3249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3250)
!3250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3204, size: 32)
!3251 = !DILocalVariable(name: "sp", scope: !3199, file: !2203, line: 1402, type: !157)
!3252 = !DILocalVariable(name: "width", scope: !3199, file: !2203, line: 1403, type: !103)
!3253 = !DILocalVariable(name: "precision", scope: !3199, file: !2203, line: 1404, type: !103)
!3254 = !DILocalVariable(name: "bps", scope: !3199, file: !2203, line: 1405, type: !157)
!3255 = !DILocalVariable(name: "bpe", scope: !3199, file: !2203, line: 1406, type: !157)
!3256 = !DILocalVariable(name: "sign", scope: !3199, file: !2203, line: 1407, type: !159)
!3257 = !DILocalVariable(name: "arg", scope: !3258, file: !2203, line: 1432, type: !103)
!3258 = distinct !DILexicalBlock(scope: !3259, file: !2203, line: 1431, column: 24)
!3259 = distinct !DILexicalBlock(scope: !3199, file: !2203, line: 1431, column: 7)
!3260 = !DILocalVariable(name: "specifier_cat", scope: !3199, file: !2203, line: 1468, type: !2202)
!3261 = !DILocalVariable(name: "length_mod", scope: !3199, file: !2203, line: 1470, type: !2210)
!3262 = !DILocalVariable(name: "rc", scope: !3263, file: !2203, line: 1575, type: !103)
!3263 = distinct !DILexicalBlock(scope: !3264, file: !2203, line: 1575, column: 4)
!3264 = distinct !DILexicalBlock(scope: !3265, file: !2203, line: 1574, column: 43)
!3265 = distinct !DILexicalBlock(scope: !3199, file: !2203, line: 1574, column: 7)
!3266 = !DILocalVariable(name: "rc", scope: !3267, file: !2203, line: 1584, type: !103)
!3267 = distinct !DILexicalBlock(scope: !3268, file: !2203, line: 1584, column: 4)
!3268 = distinct !DILexicalBlock(scope: !3199, file: !2203, line: 1582, column: 28)
!3269 = !DILocalVariable(name: "len", scope: !3270, file: !2203, line: 1589, type: !213)
!3270 = distinct !DILexicalBlock(scope: !3268, file: !2203, line: 1586, column: 13)
!3271 = !DILocalVariable(name: "len", scope: !3272, file: !2203, line: 1641, type: !213)
!3272 = distinct !DILexicalBlock(scope: !3273, file: !2203, line: 1640, column: 24)
!3273 = distinct !DILexicalBlock(scope: !3268, file: !2203, line: 1640, column: 8)
!3274 = !DILocalVariable(name: "nj_len", scope: !3199, file: !2203, line: 1722, type: !213)
!3275 = !DILocalVariable(name: "pad_len", scope: !3199, file: !2203, line: 1723, type: !103)
!3276 = !DILocalVariable(name: "pad", scope: !3277, file: !2203, line: 1751, type: !159)
!3277 = distinct !DILexicalBlock(scope: !3278, file: !2203, line: 1750, column: 26)
!3278 = distinct !DILexicalBlock(scope: !3279, file: !2203, line: 1750, column: 8)
!3279 = distinct !DILexicalBlock(scope: !3280, file: !2203, line: 1747, column: 18)
!3280 = distinct !DILexicalBlock(scope: !3199, file: !2203, line: 1747, column: 7)
!3281 = !DILocalVariable(name: "rc", scope: !3282, file: !2203, line: 1758, type: !103)
!3282 = distinct !DILexicalBlock(scope: !3283, file: !2203, line: 1758, column: 7)
!3283 = distinct !DILexicalBlock(scope: !3284, file: !2203, line: 1757, column: 21)
!3284 = distinct !DILexicalBlock(scope: !3285, file: !2203, line: 1757, column: 10)
!3285 = distinct !DILexicalBlock(scope: !3286, file: !2203, line: 1756, column: 26)
!3286 = distinct !DILexicalBlock(scope: !3277, file: !2203, line: 1756, column: 9)
!3287 = !DILocalVariable(name: "rc", scope: !3288, file: !2203, line: 1765, type: !103)
!3288 = distinct !DILexicalBlock(scope: !3289, file: !2203, line: 1765, column: 6)
!3289 = distinct !DILexicalBlock(scope: !3277, file: !2203, line: 1764, column: 25)
!3290 = !DILocalVariable(name: "rc", scope: !3291, file: !2203, line: 1774, type: !103)
!3291 = distinct !DILexicalBlock(scope: !3292, file: !2203, line: 1774, column: 4)
!3292 = distinct !DILexicalBlock(scope: !3293, file: !2203, line: 1773, column: 18)
!3293 = distinct !DILexicalBlock(scope: !3199, file: !2203, line: 1773, column: 7)
!3294 = !DILocalVariable(name: "rc", scope: !3295, file: !2203, line: 1819, type: !103)
!3295 = distinct !DILexicalBlock(scope: !3296, file: !2203, line: 1819, column: 5)
!3296 = distinct !DILexicalBlock(scope: !3297, file: !2203, line: 1818, column: 44)
!3297 = distinct !DILexicalBlock(scope: !3298, file: !2203, line: 1818, column: 8)
!3298 = distinct !DILexicalBlock(scope: !3299, file: !2203, line: 1817, column: 10)
!3299 = distinct !DILexicalBlock(scope: !3199, file: !2203, line: 1777, column: 7)
!3300 = !DILocalVariable(name: "rc", scope: !3301, file: !2203, line: 1823, type: !103)
!3301 = distinct !DILexicalBlock(scope: !3302, file: !2203, line: 1823, column: 5)
!3302 = distinct !DILexicalBlock(scope: !3303, file: !2203, line: 1822, column: 26)
!3303 = distinct !DILexicalBlock(scope: !3298, file: !2203, line: 1822, column: 8)
!3304 = !DILocalVariable(name: "rc", scope: !3305, file: !2203, line: 1828, type: !103)
!3305 = distinct !DILexicalBlock(scope: !3306, file: !2203, line: 1828, column: 5)
!3306 = distinct !DILexicalBlock(scope: !3298, file: !2203, line: 1827, column: 26)
!3307 = !DILocalVariable(name: "rc", scope: !3308, file: !2203, line: 1831, type: !103)
!3308 = distinct !DILexicalBlock(scope: !3298, file: !2203, line: 1831, column: 4)
!3309 = !DILocalVariable(name: "rc", scope: !3310, file: !2203, line: 1836, type: !103)
!3310 = distinct !DILexicalBlock(scope: !3311, file: !2203, line: 1836, column: 4)
!3311 = distinct !DILexicalBlock(scope: !3199, file: !2203, line: 1835, column: 21)
!3312 = !DILabel(scope: !3268, name: "prec_int_pad0", file: !2203, line: 1634)
!3313 = !DILocation(line: 0, scope: !3172)
!3314 = !DILocation(line: 1341, column: 2, scope: !3172)
!3315 = !DILocation(line: 1341, column: 7, scope: !3172)
!3316 = !DILocation(line: 1375, column: 2, scope: !3172)
!3317 = !DILocation(line: 1342, column: 9, scope: !3172)
!3318 = !DILocation(line: 1375, column: 9, scope: !3172)
!3319 = !DILocation(line: 1377, column: 4, scope: !3196)
!3320 = !DILocation(line: 0, scope: !3196)
!3321 = !DILocation(line: 1377, column: 4, scope: !3322)
!3322 = distinct !DILexicalBlock(scope: !3196, file: !2203, line: 1377, column: 4)
!3323 = distinct !{!3323, !3316, !3324}
!3324 = !DILocation(line: 1839, column: 2, scope: !3172)
!3325 = !DILocation(line: 1392, column: 3, scope: !3199)
!3326 = !DILocation(line: 1395, column: 5, scope: !3199)
!3327 = !DILocation(line: 0, scope: !3199)
!3328 = !DILocation(line: 1409, column: 8, scope: !3199)
!3329 = !DILocation(line: 1414, column: 13, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3199, file: !2203, line: 1414, column: 7)
!3331 = !DILocation(line: 1414, column: 7, scope: !3199)
!3332 = !DILocation(line: 1415, column: 12, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3330, file: !2203, line: 1414, column: 25)
!3334 = !DILocation(line: 1417, column: 14, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3333, file: !2203, line: 1417, column: 8)
!3336 = !DILocation(line: 1417, column: 8, scope: !3333)
!3337 = !DILocation(line: 1418, column: 21, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3335, file: !2203, line: 1417, column: 19)
!3339 = !DILocation(line: 1419, column: 13, scope: !3338)
!3340 = !DILocation(line: 1420, column: 4, scope: !3338)
!3341 = !DILocation(line: 1421, column: 20, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3330, file: !2203, line: 1421, column: 14)
!3343 = !DILocation(line: 1421, column: 14, scope: !3330)
!3344 = !DILocation(line: 1431, column: 13, scope: !3259)
!3345 = !DILocation(line: 1431, column: 7, scope: !3199)
!3346 = !DILocation(line: 1432, column: 14, scope: !3258)
!3347 = !DILocation(line: 0, scope: !3258)
!3348 = !DILocation(line: 1434, column: 12, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !3258, file: !2203, line: 1434, column: 8)
!3350 = !DILocation(line: 1434, column: 8, scope: !3258)
!3351 = !DILocation(line: 1435, column: 24, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3349, file: !2203, line: 1434, column: 17)
!3353 = !DILocation(line: 1436, column: 4, scope: !3352)
!3354 = !DILocation(line: 1439, column: 20, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3259, file: !2203, line: 1439, column: 14)
!3356 = !DILocation(line: 1439, column: 14, scope: !3259)
!3357 = !DILocation(line: 1469, column: 37, scope: !3199)
!3358 = !DILocation(line: 1448, column: 20, scope: !3199)
!3359 = !DILocation(line: 1449, column: 22, scope: !3199)
!3360 = !DILocation(line: 1471, column: 34, scope: !3199)
!3361 = !DILocation(line: 1478, column: 7, scope: !3199)
!3362 = !DILocation(line: 1479, column: 4, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3364, file: !2203, line: 1478, column: 40)
!3364 = distinct !DILexicalBlock(scope: !3199, file: !2203, line: 1478, column: 7)
!3365 = !DILocation(line: 1484, column: 19, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3363, file: !2203, line: 1479, column: 24)
!3367 = !DILocation(line: 1484, column: 17, scope: !3366)
!3368 = !DILocation(line: 1485, column: 5, scope: !3366)
!3369 = !DILocation(line: 1492, column: 20, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3371, file: !2203, line: 1491, column: 12)
!3371 = distinct !DILexicalBlock(scope: !3366, file: !2203, line: 1487, column: 9)
!3372 = !DILocation(line: 1492, column: 18, scope: !3370)
!3373 = !DILocation(line: 1494, column: 5, scope: !3366)
!3374 = !DILocation(line: 1497, column: 23, scope: !3366)
!3375 = !DILocation(line: 1496, column: 17, scope: !3366)
!3376 = !DILocation(line: 1498, column: 5, scope: !3366)
!3377 = !DILocation(line: 1501, column: 23, scope: !3366)
!3378 = !DILocation(line: 1500, column: 17, scope: !3366)
!3379 = !DILocation(line: 1502, column: 5, scope: !3366)
!3380 = !DILocation(line: 1513, column: 23, scope: !3366)
!3381 = !DILocation(line: 1513, column: 6, scope: !3366)
!3382 = !DILocation(line: 1512, column: 17, scope: !3366)
!3383 = !DILocation(line: 1514, column: 5, scope: !3366)
!3384 = !DILocation(line: 0, scope: !3366)
!3385 = !DILocation(line: 1516, column: 8, scope: !3363)
!3386 = !DILocation(line: 1517, column: 19, scope: !3387)
!3387 = distinct !DILexicalBlock(scope: !3388, file: !2203, line: 1516, column: 33)
!3388 = distinct !DILexicalBlock(scope: !3363, file: !2203, line: 1516, column: 8)
!3389 = !DILocation(line: 1517, column: 17, scope: !3387)
!3390 = !DILocation(line: 1518, column: 4, scope: !3387)
!3391 = !DILocation(line: 1519, column: 19, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3393, file: !2203, line: 1518, column: 39)
!3393 = distinct !DILexicalBlock(scope: !3388, file: !2203, line: 1518, column: 15)
!3394 = !DILocation(line: 1519, column: 17, scope: !3392)
!3395 = !DILocation(line: 1520, column: 4, scope: !3392)
!3396 = !DILocation(line: 1522, column: 4, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3398, file: !2203, line: 1521, column: 47)
!3398 = distinct !DILexicalBlock(scope: !3364, file: !2203, line: 1521, column: 14)
!3399 = !DILocation(line: 1527, column: 19, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3397, file: !2203, line: 1522, column: 24)
!3401 = !DILocation(line: 1527, column: 17, scope: !3400)
!3402 = !DILocation(line: 1528, column: 5, scope: !3400)
!3403 = !DILocation(line: 0, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3400, file: !2203, line: 1530, column: 9)
!3405 = !DILocation(line: 1540, column: 23, scope: !3400)
!3406 = !DILocation(line: 1539, column: 17, scope: !3400)
!3407 = !DILocation(line: 1542, column: 5, scope: !3400)
!3408 = !DILocation(line: 1545, column: 23, scope: !3400)
!3409 = !DILocation(line: 1544, column: 17, scope: !3400)
!3410 = !DILocation(line: 1547, column: 5, scope: !3400)
!3411 = !DILocation(line: 1551, column: 23, scope: !3400)
!3412 = !DILocation(line: 1551, column: 6, scope: !3400)
!3413 = !DILocation(line: 1550, column: 17, scope: !3400)
!3414 = !DILocation(line: 1552, column: 5, scope: !3400)
!3415 = !DILocation(line: 0, scope: !3400)
!3416 = !DILocation(line: 1554, column: 8, scope: !3397)
!3417 = !DILocation(line: 1555, column: 19, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3419, file: !2203, line: 1554, column: 33)
!3419 = distinct !DILexicalBlock(scope: !3397, file: !2203, line: 1554, column: 8)
!3420 = !DILocation(line: 1555, column: 17, scope: !3418)
!3421 = !DILocation(line: 1556, column: 4, scope: !3418)
!3422 = !DILocation(line: 1557, column: 19, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3424, file: !2203, line: 1556, column: 39)
!3424 = distinct !DILexicalBlock(scope: !3419, file: !2203, line: 1556, column: 15)
!3425 = !DILocation(line: 1557, column: 17, scope: !3423)
!3426 = !DILocation(line: 1558, column: 4, scope: !3423)
!3427 = !DILocation(line: 0, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3429, file: !2203, line: 1560, column: 8)
!3429 = distinct !DILexicalBlock(scope: !3430, file: !2203, line: 1559, column: 45)
!3430 = distinct !DILexicalBlock(scope: !3398, file: !2203, line: 1559, column: 14)
!3431 = !DILocation(line: 1566, column: 17, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3433, file: !2203, line: 1565, column: 46)
!3433 = distinct !DILexicalBlock(scope: !3430, file: !2203, line: 1565, column: 14)
!3434 = !DILocation(line: 1566, column: 15, scope: !3432)
!3435 = !DILocation(line: 1567, column: 3, scope: !3432)
!3436 = !DILocation(line: 1574, column: 21, scope: !3265)
!3437 = !DILocation(line: 1575, column: 4, scope: !3263)
!3438 = !DILocation(line: 0, scope: !3263)
!3439 = !DILocation(line: 1575, column: 4, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3263, file: !2203, line: 1575, column: 4)
!3441 = !DILocation(line: 1582, column: 17, scope: !3199)
!3442 = !DILocation(line: 1582, column: 3, scope: !3199)
!3443 = !DILocation(line: 1584, column: 4, scope: !3267)
!3444 = !DILocation(line: 0, scope: !3267)
!3445 = !DILocation(line: 1584, column: 4, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3267, file: !2203, line: 1584, column: 4)
!3447 = !DILocation(line: 1587, column: 31, scope: !3270)
!3448 = !DILocation(line: 1591, column: 18, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3270, file: !2203, line: 1591, column: 8)
!3450 = !DILocation(line: 1591, column: 8, scope: !3270)
!3451 = !DILocation(line: 1592, column: 11, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3449, file: !2203, line: 1591, column: 24)
!3453 = !DILocation(line: 0, scope: !3270)
!3454 = !DILocation(line: 1593, column: 4, scope: !3452)
!3455 = !DILocation(line: 1594, column: 11, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3449, file: !2203, line: 1593, column: 11)
!3457 = !DILocation(line: 1604, column: 51, scope: !3268)
!3458 = !DILocation(line: 1604, column: 13, scope: !3268)
!3459 = !DILocation(line: 1604, column: 11, scope: !3268)
!3460 = !DILocation(line: 1606, column: 4, scope: !3268)
!3461 = !DILocation(line: 1609, column: 14, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3268, file: !2203, line: 1609, column: 8)
!3463 = !DILocation(line: 1609, column: 8, scope: !3268)
!3464 = !DILocation(line: 1619, column: 18, scope: !3268)
!3465 = !DILocation(line: 1620, column: 13, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3268, file: !2203, line: 1620, column: 8)
!3467 = !DILocation(line: 1620, column: 8, scope: !3268)
!3468 = !DILocation(line: 1622, column: 36, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3466, file: !2203, line: 1620, column: 18)
!3470 = !DILocation(line: 1622, column: 17, scope: !3469)
!3471 = !DILocation(line: 1623, column: 4, scope: !3469)
!3472 = !DILocation(line: 1632, column: 29, scope: !3268)
!3473 = !DILocation(line: 1632, column: 10, scope: !3268)
!3474 = !DILocation(line: 1632, column: 4, scope: !3268)
!3475 = !DILocation(line: 1407, column: 8, scope: !3199)
!3476 = !DILocation(line: 0, scope: !3268)
!3477 = !DILocation(line: 1634, column: 3, scope: !3268)
!3478 = !DILocation(line: 1640, column: 18, scope: !3273)
!3479 = !DILocation(line: 1640, column: 8, scope: !3268)
!3480 = !DILocation(line: 1729, column: 13, scope: !3481)
!3481 = distinct !DILexicalBlock(scope: !3199, file: !2203, line: 1729, column: 7)
!3482 = !DILocation(line: 1641, column: 22, scope: !3272)
!3483 = !DILocation(line: 0, scope: !3272)
!3484 = !DILocation(line: 1646, column: 21, scope: !3272)
!3485 = !DILocation(line: 1649, column: 13, scope: !3486)
!3486 = distinct !DILexicalBlock(scope: !3272, file: !2203, line: 1649, column: 9)
!3487 = !DILocation(line: 1649, column: 9, scope: !3272)
!3488 = !DILocation(line: 1650, column: 35, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3486, file: !2203, line: 1649, column: 34)
!3490 = !DILocation(line: 1650, column: 23, scope: !3489)
!3491 = !DILocation(line: 1651, column: 5, scope: !3489)
!3492 = !DILocation(line: 1660, column: 15, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3268, file: !2203, line: 1660, column: 8)
!3494 = !DILocation(line: 1660, column: 19, scope: !3493)
!3495 = !DILocation(line: 1660, column: 8, scope: !3268)
!3496 = !DILocation(line: 1661, column: 23, scope: !3497)
!3497 = distinct !DILexicalBlock(scope: !3493, file: !2203, line: 1660, column: 28)
!3498 = !DILocation(line: 1661, column: 11, scope: !3497)
!3499 = !DILocation(line: 1665, column: 22, scope: !3497)
!3500 = !DILocation(line: 1666, column: 21, scope: !3497)
!3501 = !DILocation(line: 1668, column: 5, scope: !3497)
!3502 = !DILocation(line: 1677, column: 30, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3504, file: !2203, line: 1676, column: 49)
!3504 = distinct !DILexicalBlock(scope: !3268, file: !2203, line: 1676, column: 8)
!3505 = !DILocation(line: 1677, column: 5, scope: !3503)
!3506 = !DILocation(line: 1680, column: 4, scope: !3268)
!3507 = !DILocation(line: 0, scope: !3449)
!3508 = !DILocation(line: 1597, column: 14, scope: !3270)
!3509 = !DILocation(line: 1699, column: 11, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3199, file: !2203, line: 1699, column: 7)
!3511 = !DILocation(line: 1699, column: 7, scope: !3199)
!3512 = !DILocation(line: 1725, column: 7, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3199, file: !2203, line: 1725, column: 7)
!3514 = !DILocation(line: 1725, column: 12, scope: !3513)
!3515 = !DILocation(line: 1747, column: 13, scope: !3280)
!3516 = !DILocation(line: 1747, column: 7, scope: !3199)
!3517 = !DILocation(line: 1722, column: 24, scope: !3199)
!3518 = !DILocation(line: 1725, column: 7, scope: !3199)
!3519 = !DILocation(line: 1729, column: 7, scope: !3199)
!3520 = !DILocation(line: 1736, column: 13, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3199, file: !2203, line: 1736, column: 7)
!3522 = !DILocation(line: 1735, column: 19, scope: !3199)
!3523 = !DILocation(line: 1736, column: 7, scope: !3199)
!3524 = !DILocation(line: 1748, column: 10, scope: !3279)
!3525 = !DILocation(line: 1750, column: 15, scope: !3278)
!3526 = !DILocation(line: 1750, column: 8, scope: !3279)
!3527 = !DILocation(line: 0, scope: !3277)
!3528 = !DILocation(line: 1756, column: 15, scope: !3286)
!3529 = !DILocation(line: 1756, column: 9, scope: !3277)
!3530 = !DILocation(line: 1758, column: 7, scope: !3282)
!3531 = !DILocation(line: 0, scope: !3282)
!3532 = !DILocation(line: 1758, column: 7, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3282, file: !2203, line: 1758, column: 7)
!3534 = !DILocation(line: 1764, column: 5, scope: !3277)
!3535 = !DILocation(line: 0, scope: !3279)
!3536 = !DILocation(line: 1764, column: 20, scope: !3277)
!3537 = !DILocation(line: 1764, column: 17, scope: !3277)
!3538 = !DILocation(line: 1765, column: 6, scope: !3288)
!3539 = !DILocation(line: 0, scope: !3288)
!3540 = !DILocation(line: 1765, column: 6, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3288, file: !2203, line: 1765, column: 6)
!3542 = distinct !{!3542, !3534, !3543}
!3543 = !DILocation(line: 1766, column: 5, scope: !3277)
!3544 = !DILocation(line: 1773, column: 12, scope: !3293)
!3545 = !DILocation(line: 1773, column: 7, scope: !3199)
!3546 = !DILocation(line: 1773, column: 7, scope: !3293)
!3547 = !DILocation(line: 1774, column: 4, scope: !3291)
!3548 = !DILocation(line: 0, scope: !3291)
!3549 = !DILocation(line: 1774, column: 4, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3291, file: !2203, line: 1774, column: 4)
!3551 = !DILocation(line: 1818, column: 8, scope: !3297)
!3552 = !DILocation(line: 1818, column: 27, scope: !3297)
!3553 = !DILocation(line: 1818, column: 25, scope: !3297)
!3554 = !DILocation(line: 1818, column: 8, scope: !3298)
!3555 = !DILocation(line: 1819, column: 5, scope: !3295)
!3556 = !DILocation(line: 0, scope: !3295)
!3557 = !DILocation(line: 1819, column: 5, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3295, file: !2203, line: 1819, column: 5)
!3559 = !DILocation(line: 1822, column: 14, scope: !3303)
!3560 = !DILocation(line: 1822, column: 8, scope: !3298)
!3561 = !DILocation(line: 1823, column: 5, scope: !3301)
!3562 = !DILocation(line: 0, scope: !3301)
!3563 = !DILocation(line: 1823, column: 5, scope: !3564)
!3564 = distinct !DILexicalBlock(scope: !3301, file: !2203, line: 1823, column: 5)
!3565 = !DILocation(line: 1826, column: 20, scope: !3298)
!3566 = !DILocation(line: 1827, column: 4, scope: !3298)
!3567 = !DILocation(line: 0, scope: !3298)
!3568 = !DILocation(line: 1827, column: 21, scope: !3298)
!3569 = !DILocation(line: 1827, column: 18, scope: !3298)
!3570 = !DILocation(line: 1828, column: 5, scope: !3305)
!3571 = !DILocation(line: 0, scope: !3305)
!3572 = !DILocation(line: 1828, column: 5, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3305, file: !2203, line: 1828, column: 5)
!3574 = distinct !{!3574, !3566, !3575}
!3575 = !DILocation(line: 1829, column: 4, scope: !3298)
!3576 = !DILocation(line: 1831, column: 4, scope: !3308)
!3577 = !DILocation(line: 0, scope: !3308)
!3578 = !DILocation(line: 1831, column: 4, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3308, file: !2203, line: 1831, column: 4)
!3580 = !DILocation(line: 1835, column: 16, scope: !3199)
!3581 = !DILocation(line: 1835, column: 3, scope: !3199)
!3582 = !DILocation(line: 1836, column: 4, scope: !3310)
!3583 = !DILocation(line: 0, scope: !3310)
!3584 = !DILocation(line: 1836, column: 4, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3310, file: !2203, line: 1836, column: 4)
!3586 = !DILocation(line: 1837, column: 4, scope: !3311)
!3587 = distinct !{!3587, !3581, !3588}
!3588 = !DILocation(line: 1838, column: 3, scope: !3199)
!3589 = !DILocation(line: 1844, column: 1, scope: !3172)
!3590 = distinct !DISubprogram(name: "extract_conversion", scope: !2203, file: !2203, line: 642, type: !3591, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !3593)
!3591 = !DISubroutineType(types: !3592)
!3592 = !{!157, !3247, !157}
!3593 = !{!3594, !3595}
!3594 = !DILocalVariable(name: "conv", arg: 1, scope: !3590, file: !2203, line: 642, type: !3247)
!3595 = !DILocalVariable(name: "sp", arg: 2, scope: !3590, file: !2203, line: 643, type: !157)
!3596 = !DILocation(line: 0, scope: !3590)
!3597 = !DILocation(line: 645, column: 10, scope: !3590)
!3598 = !DILocation(line: 653, column: 2, scope: !3590)
!3599 = !DILocation(line: 654, column: 6, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3590, file: !2203, line: 654, column: 6)
!3601 = !DILocation(line: 654, column: 10, scope: !3600)
!3602 = !DILocation(line: 654, column: 6, scope: !3590)
!3603 = !DILocation(line: 655, column: 24, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3600, file: !2203, line: 654, column: 18)
!3605 = !DILocation(line: 655, column: 19, scope: !3604)
!3606 = !DILocation(line: 656, column: 3, scope: !3604)
!3607 = !DILocation(line: 659, column: 7, scope: !3590)
!3608 = !DILocation(line: 660, column: 7, scope: !3590)
!3609 = !DILocation(line: 661, column: 7, scope: !3590)
!3610 = !DILocation(line: 662, column: 7, scope: !3590)
!3611 = !DILocation(line: 663, column: 7, scope: !3590)
!3612 = !DILocation(line: 665, column: 2, scope: !3590)
!3613 = !DILocation(line: 666, column: 1, scope: !3590)
!3614 = distinct !DISubprogram(name: "outs", scope: !2203, file: !2203, line: 1319, type: !3615, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !3617)
!3615 = !DISubroutineType(types: !3616)
!3616 = !{!103, !2903, !102, !157, !157}
!3617 = !{!3618, !3619, !3620, !3621, !3622, !3623}
!3618 = !DILocalVariable(name: "out", arg: 1, scope: !3614, file: !2203, line: 1319, type: !2903)
!3619 = !DILocalVariable(name: "ctx", arg: 2, scope: !3614, file: !2203, line: 1320, type: !102)
!3620 = !DILocalVariable(name: "sp", arg: 3, scope: !3614, file: !2203, line: 1321, type: !157)
!3621 = !DILocalVariable(name: "ep", arg: 4, scope: !3614, file: !2203, line: 1322, type: !157)
!3622 = !DILocalVariable(name: "count", scope: !3614, file: !2203, line: 1324, type: !213)
!3623 = !DILocalVariable(name: "rc", scope: !3624, file: !2203, line: 1327, type: !103)
!3624 = distinct !DILexicalBlock(scope: !3614, file: !2203, line: 1326, column: 45)
!3625 = !DILocation(line: 0, scope: !3614)
!3626 = !DILocation(line: 1326, column: 2, scope: !3614)
!3627 = !DILocation(line: 1324, column: 9, scope: !3614)
!3628 = !DILocation(line: 1326, column: 13, scope: !3614)
!3629 = !DILocation(line: 1326, column: 19, scope: !3614)
!3630 = !DILocation(line: 1327, column: 21, scope: !3624)
!3631 = !DILocation(line: 1326, column: 36, scope: !3614)
!3632 = !DILocation(line: 1326, column: 39, scope: !3614)
!3633 = !DILocation(line: 1327, column: 24, scope: !3624)
!3634 = !DILocation(line: 1327, column: 16, scope: !3624)
!3635 = !DILocation(line: 1327, column: 12, scope: !3624)
!3636 = !DILocation(line: 0, scope: !3624)
!3637 = !DILocation(line: 1329, column: 10, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3624, file: !2203, line: 1329, column: 7)
!3639 = !DILocation(line: 1329, column: 7, scope: !3624)
!3640 = distinct !{!3640, !3626, !3641}
!3641 = !DILocation(line: 1333, column: 2, scope: !3614)
!3642 = !DILocation(line: 1336, column: 1, scope: !3614)
!3643 = distinct !DISubprogram(name: "encode_uint", scope: !2203, file: !2203, line: 788, type: !3644, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !3646)
!3644 = !DISubroutineType(types: !3645)
!3645 = !{!1017, !2225, !3247, !1017, !157}
!3646 = !{!3647, !3648, !3649, !3650, !3651, !3652, !3654, !3655}
!3647 = !DILocalVariable(name: "value", arg: 1, scope: !3643, file: !2203, line: 788, type: !2225)
!3648 = !DILocalVariable(name: "conv", arg: 2, scope: !3643, file: !2203, line: 789, type: !3247)
!3649 = !DILocalVariable(name: "bps", arg: 3, scope: !3643, file: !2203, line: 790, type: !1017)
!3650 = !DILocalVariable(name: "bpe", arg: 4, scope: !3643, file: !2203, line: 791, type: !157)
!3651 = !DILocalVariable(name: "upcase", scope: !3643, file: !2203, line: 793, type: !170)
!3652 = !DILocalVariable(name: "radix", scope: !3643, file: !2203, line: 794, type: !3653)
!3653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!3654 = !DILocalVariable(name: "bp", scope: !3643, file: !2203, line: 795, type: !1017)
!3655 = !DILocalVariable(name: "lsv", scope: !3656, file: !2203, line: 798, type: !32)
!3656 = distinct !DILexicalBlock(scope: !3643, file: !2203, line: 797, column: 5)
!3657 = !DILocation(line: 0, scope: !3643)
!3658 = !DILocation(line: 793, column: 35, scope: !3643)
!3659 = !DILocation(line: 793, column: 24, scope: !3643)
!3660 = !DILocation(line: 793, column: 16, scope: !3643)
!3661 = !DILocation(line: 794, column: 29, scope: !3643)
!3662 = !DILocation(line: 795, column: 24, scope: !3643)
!3663 = !DILocation(line: 795, column: 17, scope: !3643)
!3664 = !DILocation(line: 797, column: 2, scope: !3643)
!3665 = !DILocation(line: 802, column: 9, scope: !3656)
!3666 = !DILocation(line: 798, column: 22, scope: !3656)
!3667 = !DILocation(line: 0, scope: !3656)
!3668 = !DILocation(line: 800, column: 16, scope: !3656)
!3669 = !DILocation(line: 800, column: 11, scope: !3656)
!3670 = !DILocation(line: 800, column: 4, scope: !3656)
!3671 = !DILocation(line: 800, column: 9, scope: !3656)
!3672 = !DILocation(line: 803, column: 18, scope: !3643)
!3673 = !DILocation(line: 803, column: 24, scope: !3643)
!3674 = !DILocation(line: 803, column: 2, scope: !3656)
!3675 = distinct !{!3675, !3664, !3676}
!3676 = !DILocation(line: 803, column: 37, scope: !3643)
!3677 = !DILocation(line: 808, column: 12, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3643, file: !2203, line: 808, column: 6)
!3679 = !DILocation(line: 808, column: 6, scope: !3643)
!3680 = !DILocation(line: 809, column: 7, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3678, file: !2203, line: 808, column: 23)
!3682 = !DILocation(line: 813, column: 3, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3684, file: !2203, line: 811, column: 27)
!3684 = distinct !DILexicalBlock(scope: !3685, file: !2203, line: 811, column: 14)
!3685 = distinct !DILexicalBlock(scope: !3681, file: !2203, line: 809, column: 7)
!3686 = !DILocation(line: 0, scope: !3685)
!3687 = !DILocation(line: 818, column: 2, scope: !3643)
!3688 = distinct !DISubprogram(name: "store_count", scope: !2203, file: !2203, line: 1280, type: !3689, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !3693)
!3689 = !DISubroutineType(types: !3690)
!3690 = !{null, !3691, !102, !103}
!3691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 32)
!3692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3214)
!3693 = !{!3694, !3695, !3696}
!3694 = !DILocalVariable(name: "conv", arg: 1, scope: !3688, file: !2203, line: 1280, type: !3691)
!3695 = !DILocalVariable(name: "dp", arg: 2, scope: !3688, file: !2203, line: 1281, type: !102)
!3696 = !DILocalVariable(name: "count", arg: 3, scope: !3688, file: !2203, line: 1282, type: !103)
!3697 = !DILocation(line: 0, scope: !3688)
!3698 = !DILocation(line: 1284, column: 38, scope: !3688)
!3699 = !DILocation(line: 1284, column: 2, scope: !3688)
!3700 = !DILocation(line: 1286, column: 4, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3688, file: !2203, line: 1284, column: 50)
!3702 = !DILocation(line: 1286, column: 14, scope: !3701)
!3703 = !DILocation(line: 1287, column: 3, scope: !3701)
!3704 = !DILocation(line: 1289, column: 24, scope: !3701)
!3705 = !DILocation(line: 1289, column: 22, scope: !3701)
!3706 = !DILocation(line: 1290, column: 3, scope: !3701)
!3707 = !DILocation(line: 1292, column: 18, scope: !3701)
!3708 = !DILocation(line: 1292, column: 4, scope: !3701)
!3709 = !DILocation(line: 1292, column: 16, scope: !3701)
!3710 = !DILocation(line: 1293, column: 3, scope: !3701)
!3711 = !DILocation(line: 1295, column: 4, scope: !3701)
!3712 = !DILocation(line: 1295, column: 15, scope: !3701)
!3713 = !DILocation(line: 1296, column: 3, scope: !3701)
!3714 = !DILocation(line: 1298, column: 22, scope: !3701)
!3715 = !DILocation(line: 1298, column: 4, scope: !3701)
!3716 = !DILocation(line: 1298, column: 20, scope: !3701)
!3717 = !DILocation(line: 1299, column: 3, scope: !3701)
!3718 = !DILocation(line: 1301, column: 21, scope: !3701)
!3719 = !DILocation(line: 1301, column: 4, scope: !3701)
!3720 = !DILocation(line: 1301, column: 19, scope: !3701)
!3721 = !DILocation(line: 1302, column: 3, scope: !3701)
!3722 = !DILocation(line: 1304, column: 4, scope: !3701)
!3723 = !DILocation(line: 1304, column: 17, scope: !3701)
!3724 = !DILocation(line: 1305, column: 3, scope: !3701)
!3725 = !DILocation(line: 1307, column: 4, scope: !3701)
!3726 = !DILocation(line: 1307, column: 20, scope: !3701)
!3727 = !DILocation(line: 1308, column: 3, scope: !3701)
!3728 = !DILocation(line: 1316, column: 1, scope: !3688)
!3729 = distinct !DISubprogram(name: "isupper", scope: !3730, file: !3730, line: 16, type: !107, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !3731)
!3730 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3731 = !{!3732}
!3732 = !DILocalVariable(name: "a", arg: 1, scope: !3729, file: !3730, line: 16, type: !103)
!3733 = !DILocation(line: 0, scope: !3729)
!3734 = !DILocation(line: 18, column: 29, scope: !3729)
!3735 = !DILocation(line: 18, column: 45, scope: !3729)
!3736 = !DILocation(line: 18, column: 2, scope: !3729)
!3737 = distinct !DISubprogram(name: "conversion_radix", scope: !2203, file: !2203, line: 761, type: !3738, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !3740)
!3738 = !DISubroutineType(types: !3739)
!3739 = !{!213, !159}
!3740 = !{!3741}
!3741 = !DILocalVariable(name: "specifier", arg: 1, scope: !3737, file: !2203, line: 761, type: !159)
!3742 = !DILocation(line: 0, scope: !3737)
!3743 = !DILocation(line: 763, column: 2, scope: !3737)
!3744 = !DILocation(line: 770, column: 3, scope: !3745)
!3745 = distinct !DILexicalBlock(scope: !3737, file: !2203, line: 763, column: 21)
!3746 = !DILocation(line: 774, column: 3, scope: !3745)
!3747 = !DILocation(line: 0, scope: !3745)
!3748 = !DILocation(line: 776, column: 1, scope: !3737)
!3749 = distinct !DISubprogram(name: "extract_flags", scope: !2203, file: !2203, line: 339, type: !3591, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !3750)
!3750 = !{!3751, !3752, !3753}
!3751 = !DILocalVariable(name: "conv", arg: 1, scope: !3749, file: !2203, line: 339, type: !3247)
!3752 = !DILocalVariable(name: "sp", arg: 2, scope: !3749, file: !2203, line: 340, type: !157)
!3753 = !DILocalVariable(name: "loop", scope: !3749, file: !2203, line: 342, type: !170)
!3754 = !DILocation(line: 0, scope: !3749)
!3755 = !DILocation(line: 344, column: 2, scope: !3749)
!3756 = !DILocation(line: 345, column: 11, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3749, file: !2203, line: 344, column: 5)
!3758 = !DILocation(line: 345, column: 3, scope: !3757)
!3759 = !DILocation(line: 351, column: 4, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3757, file: !2203, line: 345, column: 16)
!3761 = !DILocation(line: 354, column: 4, scope: !3760)
!3762 = !DILocation(line: 357, column: 4, scope: !3760)
!3763 = !DILocation(line: 360, column: 4, scope: !3760)
!3764 = !DILocation(line: 0, scope: !3760)
!3765 = !DILocation(line: 370, column: 12, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3749, file: !2203, line: 370, column: 6)
!3767 = !DILocation(line: 370, column: 22, scope: !3766)
!3768 = !DILocation(line: 371, column: 19, scope: !3769)
!3769 = distinct !DILexicalBlock(scope: !3766, file: !2203, line: 370, column: 42)
!3770 = !DILocation(line: 372, column: 2, scope: !3769)
!3771 = !DILocation(line: 376, column: 2, scope: !3749)
!3772 = distinct !DISubprogram(name: "extract_width", scope: !2203, file: !2203, line: 388, type: !3591, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !3773)
!3773 = !{!3774, !3775, !3776, !3777}
!3774 = !DILocalVariable(name: "conv", arg: 1, scope: !3772, file: !2203, line: 388, type: !3247)
!3775 = !DILocalVariable(name: "sp", arg: 2, scope: !3772, file: !2203, line: 389, type: !157)
!3776 = !DILocalVariable(name: "wp", scope: !3772, file: !2203, line: 398, type: !157)
!3777 = !DILocalVariable(name: "width", scope: !3772, file: !2203, line: 399, type: !213)
!3778 = !DILocation(line: 0, scope: !3772)
!3779 = !DILocation(line: 391, column: 8, scope: !3772)
!3780 = !DILocation(line: 391, column: 22, scope: !3772)
!3781 = !DILocation(line: 393, column: 6, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3772, file: !2203, line: 393, column: 6)
!3783 = !DILocation(line: 393, column: 10, scope: !3782)
!3784 = !DILocation(line: 393, column: 6, scope: !3772)
!3785 = !DILocation(line: 394, column: 20, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3782, file: !2203, line: 393, column: 18)
!3787 = !DILocation(line: 395, column: 10, scope: !3786)
!3788 = !DILocation(line: 395, column: 3, scope: !3786)
!3789 = !DILocation(line: 399, column: 17, scope: !3772)
!3790 = !DILocation(line: 401, column: 6, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3772, file: !2203, line: 401, column: 6)
!3792 = !DILocation(line: 401, column: 9, scope: !3791)
!3793 = !DILocation(line: 401, column: 6, scope: !3772)
!3794 = !DILocation(line: 402, column: 23, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3791, file: !2203, line: 401, column: 16)
!3796 = !DILocation(line: 403, column: 9, scope: !3795)
!3797 = !DILocation(line: 403, column: 21, scope: !3795)
!3798 = !DILocation(line: 405, column: 11, scope: !3795)
!3799 = !DILocation(line: 404, column: 21, scope: !3795)
!3800 = !DILocation(line: 406, column: 2, scope: !3795)
!3801 = !DILocation(line: 409, column: 1, scope: !3772)
!3802 = distinct !DISubprogram(name: "extract_prec", scope: !2203, file: !2203, line: 420, type: !3591, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !3803)
!3803 = !{!3804, !3805, !3806}
!3804 = !DILocalVariable(name: "conv", arg: 1, scope: !3802, file: !2203, line: 420, type: !3247)
!3805 = !DILocalVariable(name: "sp", arg: 2, scope: !3802, file: !2203, line: 421, type: !157)
!3806 = !DILocalVariable(name: "prec", scope: !3802, file: !2203, line: 435, type: !213)
!3807 = !DILocation(line: 0, scope: !3802)
!3808 = !DILocation(line: 423, column: 24, scope: !3802)
!3809 = !DILocation(line: 423, column: 28, scope: !3802)
!3810 = !DILocation(line: 423, column: 8, scope: !3802)
!3811 = !DILocation(line: 423, column: 21, scope: !3802)
!3812 = !DILocation(line: 425, column: 6, scope: !3802)
!3813 = !DILocation(line: 428, column: 2, scope: !3802)
!3814 = !DILocation(line: 430, column: 6, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3802, file: !2203, line: 430, column: 6)
!3816 = !DILocation(line: 430, column: 10, scope: !3815)
!3817 = !DILocation(line: 430, column: 6, scope: !3802)
!3818 = !DILocation(line: 431, column: 19, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3815, file: !2203, line: 430, column: 18)
!3820 = !DILocation(line: 432, column: 10, scope: !3819)
!3821 = !DILocation(line: 432, column: 3, scope: !3819)
!3822 = !DILocation(line: 435, column: 16, scope: !3802)
!3823 = !DILocation(line: 437, column: 8, scope: !3802)
!3824 = !DILocation(line: 437, column: 19, scope: !3802)
!3825 = !DILocation(line: 439, column: 10, scope: !3802)
!3826 = !DILocation(line: 438, column: 20, scope: !3802)
!3827 = !DILocation(line: 441, column: 9, scope: !3802)
!3828 = !DILocation(line: 442, column: 1, scope: !3802)
!3829 = distinct !DISubprogram(name: "extract_length", scope: !2203, file: !2203, line: 453, type: !3591, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !3830)
!3830 = !{!3831, !3832}
!3831 = !DILocalVariable(name: "conv", arg: 1, scope: !3829, file: !2203, line: 453, type: !3247)
!3832 = !DILocalVariable(name: "sp", arg: 2, scope: !3829, file: !2203, line: 454, type: !157)
!3833 = !DILocation(line: 0, scope: !3829)
!3834 = !DILocation(line: 456, column: 10, scope: !3829)
!3835 = !DILocation(line: 456, column: 2, scope: !3829)
!3836 = !DILocation(line: 458, column: 8, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3838, file: !2203, line: 458, column: 7)
!3838 = distinct !DILexicalBlock(scope: !3829, file: !2203, line: 456, column: 15)
!3839 = !DILocation(line: 458, column: 7, scope: !3837)
!3840 = !DILocation(line: 458, column: 13, scope: !3837)
!3841 = !DILocation(line: 0, scope: !3837)
!3842 = !DILocation(line: 458, column: 7, scope: !3838)
!3843 = !DILocation(line: 459, column: 21, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3837, file: !2203, line: 458, column: 21)
!3845 = !DILocation(line: 460, column: 4, scope: !3844)
!3846 = !DILocation(line: 461, column: 3, scope: !3844)
!3847 = !DILocation(line: 462, column: 21, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3837, file: !2203, line: 461, column: 10)
!3849 = !DILocation(line: 466, column: 8, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3838, file: !2203, line: 466, column: 7)
!3851 = !DILocation(line: 466, column: 7, scope: !3850)
!3852 = !DILocation(line: 466, column: 13, scope: !3850)
!3853 = !DILocation(line: 0, scope: !3850)
!3854 = !DILocation(line: 466, column: 7, scope: !3838)
!3855 = !DILocation(line: 467, column: 21, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3850, file: !2203, line: 466, column: 21)
!3857 = !DILocation(line: 468, column: 4, scope: !3856)
!3858 = !DILocation(line: 469, column: 3, scope: !3856)
!3859 = !DILocation(line: 470, column: 21, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3850, file: !2203, line: 469, column: 10)
!3861 = !DILocation(line: 474, column: 9, scope: !3838)
!3862 = !DILocation(line: 474, column: 20, scope: !3838)
!3863 = !DILocation(line: 475, column: 3, scope: !3838)
!3864 = !DILocation(line: 476, column: 3, scope: !3838)
!3865 = !DILocation(line: 478, column: 9, scope: !3838)
!3866 = !DILocation(line: 478, column: 20, scope: !3838)
!3867 = !DILocation(line: 479, column: 3, scope: !3838)
!3868 = !DILocation(line: 480, column: 3, scope: !3838)
!3869 = !DILocation(line: 482, column: 9, scope: !3838)
!3870 = !DILocation(line: 482, column: 20, scope: !3838)
!3871 = !DILocation(line: 483, column: 3, scope: !3838)
!3872 = !DILocation(line: 484, column: 3, scope: !3838)
!3873 = !DILocation(line: 486, column: 9, scope: !3838)
!3874 = !DILocation(line: 486, column: 20, scope: !3838)
!3875 = !DILocation(line: 487, column: 3, scope: !3838)
!3876 = !DILocation(line: 492, column: 21, scope: !3838)
!3877 = !DILocation(line: 493, column: 3, scope: !3838)
!3878 = !DILocation(line: 495, column: 9, scope: !3838)
!3879 = !DILocation(line: 495, column: 20, scope: !3838)
!3880 = !DILocation(line: 496, column: 3, scope: !3838)
!3881 = !DILocation(line: 498, column: 2, scope: !3829)
!3882 = distinct !DISubprogram(name: "extract_specifier", scope: !2203, file: !2203, line: 513, type: !3591, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !3883)
!3883 = !{!3884, !3885, !3886, !3887}
!3884 = !DILocalVariable(name: "conv", arg: 1, scope: !3882, file: !2203, line: 513, type: !3247)
!3885 = !DILocalVariable(name: "sp", arg: 2, scope: !3882, file: !2203, line: 514, type: !157)
!3886 = !DILocalVariable(name: "unsupported", scope: !3882, file: !2203, line: 516, type: !170)
!3887 = !DILabel(scope: !3888, name: "int_conv", file: !2203, line: 526)
!3888 = distinct !DILexicalBlock(scope: !3882, file: !2203, line: 520, column: 27)
!3889 = !DILocation(line: 0, scope: !3882)
!3890 = !DILocation(line: 518, column: 20, scope: !3882)
!3891 = !DILocation(line: 518, column: 8, scope: !3882)
!3892 = !DILocation(line: 518, column: 18, scope: !3882)
!3893 = !DILocation(line: 520, column: 2, scope: !3882)
!3894 = !DILocation(line: 525, column: 3, scope: !3888)
!3895 = !DILocation(line: 0, scope: !3888)
!3896 = !DILocation(line: 526, column: 1, scope: !3888)
!3897 = !DILocation(line: 528, column: 24, scope: !3898)
!3898 = distinct !DILexicalBlock(scope: !3888, file: !2203, line: 528, column: 7)
!3899 = !DILocation(line: 528, column: 7, scope: !3888)
!3900 = !DILocation(line: 535, column: 23, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3888, file: !2203, line: 535, column: 7)
!3902 = !DILocation(line: 535, column: 7, scope: !3888)
!3903 = !DILocation(line: 536, column: 36, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3901, file: !2203, line: 535, column: 31)
!3905 = !DILocation(line: 537, column: 3, scope: !3904)
!3906 = !DILocation(line: 570, column: 9, scope: !3888)
!3907 = !DILocation(line: 570, column: 23, scope: !3888)
!3908 = !DILocation(line: 575, column: 4, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3910, file: !2203, line: 573, column: 48)
!3910 = distinct !DILexicalBlock(scope: !3888, file: !2203, line: 573, column: 7)
!3911 = !DILocation(line: 603, column: 9, scope: !3888)
!3912 = !DILocation(line: 603, column: 23, scope: !3888)
!3913 = !DILocation(line: 605, column: 24, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3888, file: !2203, line: 605, column: 7)
!3915 = !DILocation(line: 605, column: 7, scope: !3888)
!3916 = !DILocation(line: 612, column: 9, scope: !3888)
!3917 = !DILocation(line: 612, column: 23, scope: !3888)
!3918 = !DILocation(line: 619, column: 24, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3888, file: !2203, line: 619, column: 7)
!3920 = !DILocation(line: 619, column: 7, scope: !3888)
!3921 = !DILocation(line: 625, column: 9, scope: !3888)
!3922 = !DILocation(line: 625, column: 17, scope: !3888)
!3923 = !DILocation(line: 626, column: 3, scope: !3888)
!3924 = !DILocation(line: 629, column: 20, scope: !3882)
!3925 = !DILocation(line: 629, column: 8, scope: !3882)
!3926 = !DILocation(line: 518, column: 23, scope: !3882)
!3927 = !DILocation(line: 631, column: 2, scope: !3882)
!3928 = distinct !DISubprogram(name: "extract_decimal", scope: !2203, file: !2203, line: 318, type: !3929, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !3932)
!3929 = !DISubroutineType(types: !3930)
!3930 = !{!213, !3931}
!3931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!3932 = !{!3933, !3934, !3935}
!3933 = !DILocalVariable(name: "str", arg: 1, scope: !3928, file: !2203, line: 318, type: !3931)
!3934 = !DILocalVariable(name: "sp", scope: !3928, file: !2203, line: 320, type: !157)
!3935 = !DILocalVariable(name: "val", scope: !3928, file: !2203, line: 321, type: !213)
!3936 = !DILocation(line: 0, scope: !3928)
!3937 = !DILocation(line: 320, column: 19, scope: !3928)
!3938 = !DILocation(line: 323, column: 37, scope: !3928)
!3939 = !DILocation(line: 323, column: 17, scope: !3928)
!3940 = !DILocation(line: 323, column: 9, scope: !3928)
!3941 = !DILocation(line: 323, column: 2, scope: !3928)
!3942 = !DILocation(line: 324, column: 13, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3928, file: !2203, line: 323, column: 43)
!3944 = !DILocation(line: 324, column: 24, scope: !3943)
!3945 = !DILocation(line: 324, column: 19, scope: !3943)
!3946 = !DILocation(line: 324, column: 27, scope: !3943)
!3947 = distinct !{!3947, !3941, !3948}
!3948 = !DILocation(line: 325, column: 2, scope: !3928)
!3949 = !DILocation(line: 326, column: 7, scope: !3928)
!3950 = !DILocation(line: 327, column: 2, scope: !3928)
!3951 = distinct !DISubprogram(name: "isdigit", scope: !3730, file: !3730, line: 43, type: !107, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2199, retainedNodes: !3952)
!3952 = !{!3953}
!3953 = !DILocalVariable(name: "a", arg: 1, scope: !3951, file: !3730, line: 43, type: !103)
!3954 = !DILocation(line: 0, scope: !3951)
!3955 = !DILocation(line: 45, column: 29, scope: !3951)
!3956 = !DILocation(line: 45, column: 45, scope: !3951)
!3957 = !DILocation(line: 45, column: 2, scope: !3951)
!3958 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !3959, file: !3959, line: 9, type: !2730, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2237, retainedNodes: !335)
!3959 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!3960 = !DILocation(line: 11, column: 1, scope: !3958)
!3961 = !{i64 2147560425, i64 2147560468, i64 2147560508}
!3962 = !DILocation(line: 12, column: 1, scope: !3958)
!3963 = !{i64 2147564652, i64 2147564695, i64 2147564735}
!3964 = !DILocation(line: 13, column: 1, scope: !3958)
!3965 = !{i64 2147564861, i64 2147564904, i64 2147564944}
!3966 = !DILocation(line: 14, column: 1, scope: !3958)
!3967 = !{i64 2147565030, i64 2147565073, i64 2147565113}
!3968 = !DILocation(line: 15, column: 1, scope: !3958)
!3969 = !{i64 2147565193, i64 2147565236, i64 2147565276}
!3970 = !DILocation(line: 16, column: 1, scope: !3958)
!3971 = !{i64 2147565377, i64 2147565420, i64 2147565460}
!3972 = !DILocation(line: 17, column: 1, scope: !3958)
!3973 = !{i64 2147565556, i64 2147565599, i64 2147565639}
!3974 = !DILocation(line: 18, column: 1, scope: !3958)
!3975 = !{i64 2147565798, i64 2147565841, i64 2147565881}
!3976 = !DILocation(line: 19, column: 1, scope: !3958)
!3977 = !{i64 2147566033, i64 2147566076, i64 2147566116}
!3978 = !DILocation(line: 20, column: 1, scope: !3958)
!3979 = !{i64 2147566219, i64 2147566262, i64 2147566302}
!3980 = !DILocation(line: 21, column: 1, scope: !3958)
!3981 = !{i64 2147566435, i64 2147566478, i64 2147566518}
!3982 = !DILocation(line: 22, column: 1, scope: !3958)
!3983 = !{i64 2147566638, i64 2147566681, i64 2147566721}
!3984 = !DILocation(line: 23, column: 1, scope: !3958)
!3985 = !{i64 2147566841, i64 2147566884, i64 2147566924}
!3986 = !DILocation(line: 24, column: 1, scope: !3958)
!3987 = !{i64 2147567016, i64 2147567059, i64 2147567099}
!3988 = !DILocation(line: 25, column: 1, scope: !3958)
!3989 = !{i64 2147567224, i64 2147567267, i64 2147567307}
!3990 = !DILocation(line: 26, column: 1, scope: !3958)
!3991 = !{i64 2147567428, i64 2147567471, i64 2147567511}
!3992 = !DILocation(line: 27, column: 1, scope: !3958)
!3993 = !{i64 2147567621, i64 2147567664, i64 2147567704}
!3994 = !DILocation(line: 28, column: 1, scope: !3958)
!3995 = !{i64 2147567823, i64 2147567866, i64 2147567906}
!3996 = !DILocation(line: 29, column: 1, scope: !3958)
!3997 = !{i64 2147568050, i64 2147568093, i64 2147568133}
!3998 = !DILocation(line: 30, column: 1, scope: !3958)
!3999 = !{i64 2147568252, i64 2147568295, i64 2147568335}
!4000 = !DILocation(line: 31, column: 1, scope: !3958)
!4001 = !{i64 2147568467, i64 2147568510, i64 2147568550}
!4002 = !DILocation(line: 32, column: 1, scope: !3958)
!4003 = !{i64 2147568639, i64 2147568682, i64 2147568722}
!4004 = !DILocation(line: 33, column: 1, scope: !3958)
!4005 = !{i64 2147568841, i64 2147568884, i64 2147568924}
!4006 = !DILocation(line: 34, column: 1, scope: !3958)
!4007 = !{i64 2147569067, i64 2147569110, i64 2147569150}
!4008 = !DILocation(line: 35, column: 1, scope: !3958)
!4009 = !{i64 2147569266, i64 2147569309, i64 2147569349}
!4010 = !DILocation(line: 36, column: 1, scope: !3958)
!4011 = !{i64 2147569441, i64 2147569484, i64 2147569524}
!4012 = !DILocation(line: 37, column: 1, scope: !3958)
!4013 = !{i64 2147569694, i64 2147569737, i64 2147569777}
!4014 = !DILocation(line: 38, column: 1, scope: !3958)
!4015 = !{i64 2147569932, i64 2147569975, i64 2147570015}
!4016 = !DILocation(line: 39, column: 1, scope: !3958)
!4017 = !{i64 2147570167, i64 2147570210, i64 2147570250}
!4018 = !DILocation(line: 40, column: 1, scope: !3958)
!4019 = !{i64 2147570399, i64 2147570442, i64 2147570482}
!4020 = !DILocation(line: 41, column: 1, scope: !3958)
!4021 = !{i64 2147570625, i64 2147570668, i64 2147570708}
!4022 = !DILocation(line: 42, column: 1, scope: !3958)
!4023 = !{i64 2147570884, i64 2147570927, i64 2147570967}
!4024 = !DILocation(line: 43, column: 1, scope: !3958)
!4025 = !{i64 2147571110, i64 2147571153, i64 2147571193}
!4026 = !DILocation(line: 44, column: 1, scope: !3958)
!4027 = !{i64 2147571351, i64 2147571394, i64 2147571434}
!4028 = !DILocation(line: 45, column: 1, scope: !3958)
!4029 = !{i64 2147571595, i64 2147571638, i64 2147571678}
!4030 = !DILocation(line: 46, column: 1, scope: !3958)
!4031 = !{i64 2147571836, i64 2147571879, i64 2147571919}
!4032 = !DILocation(line: 47, column: 1, scope: !3958)
!4033 = !{i64 2147572071, i64 2147572114, i64 2147572154}
!4034 = !DILocation(line: 48, column: 1, scope: !3958)
!4035 = !{i64 2147572297, i64 2147572340, i64 2147572380}
!4036 = !DILocation(line: 49, column: 1, scope: !3958)
!4037 = !{i64 2147572523, i64 2147572566, i64 2147572606}
!4038 = !DILocation(line: 50, column: 1, scope: !3958)
!4039 = !{i64 2147572767, i64 2147572810, i64 2147572850}
!4040 = !DILocation(line: 51, column: 1, scope: !3958)
!4041 = !{i64 2147573005, i64 2147573048, i64 2147573088}
!4042 = !DILocation(line: 52, column: 1, scope: !3958)
!4043 = !{i64 2147573279, i64 2147573322, i64 2147573362}
!4044 = !DILocation(line: 53, column: 1, scope: !3958)
!4045 = !{i64 2147577578, i64 2147577621, i64 2147577661}
!4046 = !DILocation(line: 54, column: 1, scope: !3958)
!4047 = !{i64 2147577822, i64 2147577865, i64 2147577905}
!4048 = !DILocation(line: 55, column: 1, scope: !3958)
!4049 = !{i64 2147578072, i64 2147578115, i64 2147578155}
!4050 = !DILocation(line: 56, column: 1, scope: !3958)
!4051 = !{i64 2147578319, i64 2147578362, i64 2147578402}
!4052 = !DILocation(line: 57, column: 1, scope: !3958)
!4053 = !{i64 2147578554, i64 2147578597, i64 2147578637}
!4054 = !DILocation(line: 58, column: 1, scope: !3958)
!4055 = !{i64 2147578789, i64 2147578832, i64 2147578872}
!4056 = !DILocation(line: 59, column: 1, scope: !3958)
!4057 = !{i64 2147579024, i64 2147579067, i64 2147579107}
!4058 = !DILocation(line: 60, column: 1, scope: !3958)
!4059 = !{i64 2147579262, i64 2147579305, i64 2147579345}
!4060 = !DILocation(line: 61, column: 1, scope: !3958)
!4061 = !{i64 2147579503, i64 2147579546, i64 2147579586}
!4062 = !DILocation(line: 62, column: 1, scope: !3958)
!4063 = !{i64 2147579762, i64 2147579805, i64 2147579845}
!4064 = !DILocation(line: 63, column: 1, scope: !3958)
!4065 = !{i64 2147580042, i64 2147580085, i64 2147580125}
!4066 = !DILocation(line: 64, column: 1, scope: !3958)
!4067 = !{i64 2147580271, i64 2147580314, i64 2147580354}
!4068 = !DILocation(line: 65, column: 1, scope: !3958)
!4069 = !{i64 2147580479, i64 2147580522, i64 2147580562}
!4070 = !DILocation(line: 66, column: 1, scope: !3958)
!4071 = !{i64 2147580690, i64 2147580733, i64 2147580773}
!4072 = !DILocation(line: 67, column: 1, scope: !3958)
!4073 = !{i64 2147580925, i64 2147580968, i64 2147581008}
!4074 = !DILocation(line: 68, column: 1, scope: !3958)
!4075 = !{i64 2147581154, i64 2147581197, i64 2147581237}
!4076 = !DILocation(line: 69, column: 1, scope: !3958)
!4077 = !{i64 2147581392, i64 2147581435, i64 2147581475}
!4078 = !DILocation(line: 70, column: 1, scope: !3958)
!4079 = !{i64 2147581624, i64 2147581667, i64 2147581707}
!4080 = !DILocation(line: 71, column: 1, scope: !3958)
!4081 = !{i64 2147581850, i64 2147581893, i64 2147581933}
!4082 = !DILocation(line: 72, column: 1, scope: !3958)
!4083 = !{i64 2147582067, i64 2147582110, i64 2147582150}
!4084 = !DILocation(line: 73, column: 1, scope: !3958)
!4085 = !{i64 2147582299, i64 2147582342, i64 2147582382}
!4086 = !DILocation(line: 74, column: 1, scope: !3958)
!4087 = !{i64 2147582525, i64 2147582568, i64 2147582608}
!4088 = !DILocation(line: 75, column: 1, scope: !3958)
!4089 = !{i64 2147582739, i64 2147582782, i64 2147582822}
!4090 = !DILocation(line: 76, column: 1, scope: !3958)
!4091 = !{i64 2147582959, i64 2147583002, i64 2147583042}
!4092 = !DILocation(line: 77, column: 1, scope: !3958)
!4093 = !{i64 2147583191, i64 2147583234, i64 2147583274}
!4094 = !DILocation(line: 78, column: 1, scope: !3958)
!4095 = !{i64 2147583399, i64 2147583442, i64 2147583482}
!4096 = !DILocation(line: 79, column: 1, scope: !3958)
!4097 = !{i64 2147583604, i64 2147583647, i64 2147583687}
!4098 = !DILocation(line: 80, column: 1, scope: !3958)
!4099 = !{i64 2147583821, i64 2147583864, i64 2147583904}
!4100 = !DILocation(line: 81, column: 1, scope: !3958)
!4101 = !{i64 2147584035, i64 2147584078, i64 2147584118}
!4102 = !DILocation(line: 82, column: 1, scope: !3958)
!4103 = !{i64 2147584261, i64 2147584304, i64 2147584344}
!4104 = !DILocation(line: 83, column: 1, scope: !3958)
!4105 = !{i64 2147584481, i64 2147584524, i64 2147584564}
!4106 = !DILocation(line: 84, column: 1, scope: !3958)
!4107 = !{i64 2147584686, i64 2147584729, i64 2147584769}
!4108 = !DILocation(line: 85, column: 1, scope: !3958)
!4109 = !{i64 2147584918, i64 2147584961, i64 2147585001}
!4110 = !DILocation(line: 86, column: 1, scope: !3958)
!4111 = !{i64 2147585153, i64 2147585196, i64 2147585236}
!4112 = !DILocation(line: 87, column: 1, scope: !3958)
!4113 = !{i64 2147585403, i64 2147585446, i64 2147585486}
!4114 = !DILocation(line: 88, column: 1, scope: !3958)
!4115 = !{i64 2147589714, i64 2147589757, i64 2147589797}
!4116 = !DILocation(line: 89, column: 1, scope: !3958)
!4117 = !{i64 2147589952, i64 2147589995, i64 2147590035}
!4118 = !DILocation(line: 90, column: 1, scope: !3958)
!4119 = !{i64 2147590163, i64 2147590206, i64 2147590246}
!4120 = !DILocation(line: 91, column: 1, scope: !3958)
!4121 = !{i64 2147590380, i64 2147590423, i64 2147590463}
!4122 = !DILocation(line: 92, column: 1, scope: !3958)
!4123 = !{i64 2147590576, i64 2147590619, i64 2147590659}
!4124 = !DILocation(line: 93, column: 1, scope: !3958)
!4125 = !{i64 2147590778, i64 2147590821, i64 2147590861}
!4126 = !DILocation(line: 94, column: 1, scope: !3958)
!4127 = !{i64 2147590971, i64 2147591014, i64 2147591054}
!4128 = !DILocation(line: 95, column: 1, scope: !3958)
!4129 = !{i64 2147591179, i64 2147591222, i64 2147591262}
!4130 = !DILocation(line: 96, column: 1, scope: !3958)
!4131 = !{i64 2147591375, i64 2147591418, i64 2147591458}
!4132 = !DILocation(line: 97, column: 1, scope: !3958)
!4133 = !{i64 2147591580, i64 2147591623, i64 2147591663}
!4134 = !DILocation(line: 98, column: 1, scope: !3958)
!4135 = !{i64 2147591791, i64 2147591834, i64 2147591874}
!4136 = !DILocation(line: 99, column: 1, scope: !3958)
!4137 = !{i64 2147591990, i64 2147592033, i64 2147592073}
!4138 = !DILocation(line: 100, column: 1, scope: !3958)
!4139 = !{i64 2147592165, i64 2147592208, i64 2147592248}
!4140 = !DILocation(line: 101, column: 1, scope: !3958)
!4141 = !{i64 2147592349, i64 2147592392, i64 2147592432}
!4142 = !DILocation(line: 102, column: 1, scope: !3958)
!4143 = !{i64 2147592551, i64 2147592594, i64 2147592634}
!4144 = !DILocation(line: 103, column: 1, scope: !3958)
!4145 = !{i64 2147592753, i64 2147592796, i64 2147592836}
!4146 = !DILocation(line: 104, column: 1, scope: !3958)
!4147 = !{i64 2147592919, i64 2147592962, i64 2147593002}
!4148 = !DILocation(line: 105, column: 1, scope: !3958)
!4149 = !{i64 2147593103, i64 2147593146, i64 2147593186}
!4150 = !DILocation(line: 106, column: 1, scope: !3958)
!4151 = !{i64 2147593293, i64 2147593336, i64 2147593376}
!4152 = !DILocation(line: 107, column: 1, scope: !3958)
!4153 = !{i64 2147593477, i64 2147593520, i64 2147593560}
!4154 = !DILocation(line: 108, column: 1, scope: !3958)
!4155 = !{i64 2147593691, i64 2147593734, i64 2147593774}
!4156 = !DILocation(line: 109, column: 1, scope: !3958)
!4157 = !{i64 2147593902, i64 2147593945, i64 2147593985}
!4158 = !DILocation(line: 110, column: 1, scope: !3958)
!4159 = !{i64 2147594125, i64 2147594168, i64 2147594208}
!4160 = !DILocation(line: 111, column: 1, scope: !3958)
!4161 = !{i64 2147594309, i64 2147594352, i64 2147594392}
!4162 = !DILocation(line: 112, column: 1, scope: !3958)
!4163 = !{i64 2147594523, i64 2147594566, i64 2147594606}
!4164 = !DILocation(line: 113, column: 1, scope: !3958)
!4165 = !{i64 2147594689, i64 2147594732, i64 2147594772}
!4166 = !DILocation(line: 114, column: 1, scope: !3958)
!4167 = !{i64 2147594870, i64 2147594913, i64 2147594953}
!4168 = !DILocation(line: 115, column: 1, scope: !3958)
!4169 = !{i64 2147595063, i64 2147595106, i64 2147595146}
!4170 = !DILocation(line: 116, column: 1, scope: !3958)
!4171 = !{i64 2147595289, i64 2147595332, i64 2147595372}
!4172 = !DILocation(line: 117, column: 1, scope: !3958)
!4173 = !{i64 2147595503, i64 2147595546, i64 2147595586}
!4174 = !DILocation(line: 118, column: 1, scope: !3958)
!4175 = !{i64 2147595729, i64 2147595772, i64 2147595812}
!4176 = !DILocation(line: 119, column: 1, scope: !3958)
!4177 = !{i64 2147595946, i64 2147595989, i64 2147596029}
!4178 = !DILocation(line: 120, column: 1, scope: !3958)
!4179 = !{i64 2147596223, i64 2147596266, i64 2147596306}
!4180 = !DILocation(line: 121, column: 1, scope: !3958)
!4181 = !{i64 2147596449, i64 2147596492, i64 2147596532}
!4182 = !DILocation(line: 122, column: 1, scope: !3958)
!4183 = !{i64 2147596645, i64 2147596688, i64 2147596728}
!4184 = !DILocation(line: 123, column: 1, scope: !3958)
!4185 = !{i64 2147596910, i64 2147596953, i64 2147596993}
!4186 = !DILocation(line: 124, column: 1, scope: !3958)
!4187 = !{i64 2147597124, i64 2147597167, i64 2147597207}
!4188 = !DILocation(line: 125, column: 1, scope: !3958)
!4189 = !{i64 2147597299, i64 2147597342, i64 2147597382}
!4190 = !DILocation(line: 126, column: 1, scope: !3958)
!4191 = !{i64 2147597553, i64 2147597596, i64 2147597636}
!4192 = !DILocation(line: 127, column: 1, scope: !3958)
!4193 = !{i64 2147597752, i64 2147597795, i64 2147597835}
!4194 = !DILocation(line: 128, column: 1, scope: !3958)
!4195 = !{i64 2147597994, i64 2147598037, i64 2147598077}
!4196 = !DILocation(line: 129, column: 1, scope: !3958)
!4197 = !{i64 2147598157, i64 2147598200, i64 2147598240}
!4198 = !DILocation(line: 130, column: 1, scope: !3958)
!4199 = !{i64 2147598344, i64 2147598387, i64 2147598427}
!4200 = !DILocation(line: 131, column: 1, scope: !3958)
!4201 = !{i64 2147598537, i64 2147598580, i64 2147598620}
!4202 = !DILocation(line: 132, column: 1, scope: !3958)
!4203 = !{i64 2147598719, i64 2147598762, i64 2147598802}
!4204 = !DILocation(line: 133, column: 1, scope: !3958)
!4205 = !{i64 2147602994, i64 2147603037, i64 2147603077}
!4206 = !DILocation(line: 134, column: 1, scope: !3958)
!4207 = !{i64 2147603205, i64 2147603248, i64 2147603288}
!4208 = !DILocation(line: 135, column: 1, scope: !3958)
!4209 = !{i64 2147603425, i64 2147603468, i64 2147603508}
!4210 = !DILocation(line: 136, column: 1, scope: !3958)
!4211 = !{i64 2147603632, i64 2147603675, i64 2147603715}
!4212 = !DILocation(line: 137, column: 1, scope: !3958)
!4213 = !{i64 2147603905, i64 2147603948, i64 2147603988}
!4214 = !DILocation(line: 138, column: 1, scope: !3958)
!4215 = !{i64 2147604153, i64 2147604196, i64 2147604236}
!4216 = !DILocation(line: 139, column: 1, scope: !3958)
!4217 = !{i64 2147604352, i64 2147604395, i64 2147604435}
!4218 = !DILocation(line: 140, column: 1, scope: !3958)
!4219 = !{i64 2147604587, i64 2147604630, i64 2147604670}
!4220 = !DILocation(line: 141, column: 1, scope: !3958)
!4221 = !{i64 2147604837, i64 2147604880, i64 2147604920}
!4222 = !DILocation(line: 142, column: 1, scope: !3958)
!4223 = !{i64 2147605039, i64 2147605082, i64 2147605122}
!4224 = !DILocation(line: 143, column: 1, scope: !3958)
!4225 = !{i64 2147605262, i64 2147605305, i64 2147605345}
!4226 = !DILocation(line: 144, column: 1, scope: !3958)
!4227 = !{i64 2147605476, i64 2147605519, i64 2147605559}
!4228 = !DILocation(line: 145, column: 1, scope: !3958)
!4229 = !{i64 2147605720, i64 2147605763, i64 2147605803}
!4230 = !DILocation(line: 146, column: 1, scope: !3958)
!4231 = !{i64 2147605949, i64 2147605992, i64 2147606032}
!4232 = !DILocation(line: 147, column: 1, scope: !3958)
!4233 = !{i64 2147606178, i64 2147606221, i64 2147606261}
!4234 = !DILocation(line: 148, column: 1, scope: !3958)
!4235 = !{i64 2147606386, i64 2147606429, i64 2147606469}
!4236 = !DILocation(line: 149, column: 1, scope: !3958)
!4237 = !{i64 2147606624, i64 2147606667, i64 2147606707}
!4238 = !DILocation(line: 150, column: 1, scope: !3958)
!4239 = !{i64 2147606850, i64 2147606893, i64 2147606933}
!4240 = !DILocation(line: 151, column: 1, scope: !3958)
!4241 = !{i64 2147607109, i64 2147607152, i64 2147607192}
!4242 = !DILocation(line: 152, column: 1, scope: !3958)
!4243 = !{i64 2147607329, i64 2147607372, i64 2147607412}
!4244 = !DILocation(line: 153, column: 1, scope: !3958)
!4245 = !{i64 2147607561, i64 2147607604, i64 2147607644}
!4246 = !DILocation(line: 154, column: 1, scope: !3958)
!4247 = !{i64 2147607802, i64 2147607845, i64 2147607885}
!4248 = !DILocation(line: 155, column: 1, scope: !3958)
!4249 = !{i64 2147608043, i64 2147608086, i64 2147608126}
!4250 = !DILocation(line: 156, column: 1, scope: !3958)
!4251 = !{i64 2147608266, i64 2147608309, i64 2147608349}
!4252 = !DILocation(line: 157, column: 1, scope: !3958)
!4253 = !{i64 2147608483, i64 2147608526, i64 2147608566}
!4254 = !DILocation(line: 158, column: 1, scope: !3958)
!4255 = !{i64 2147608724, i64 2147608767, i64 2147608807}
!4256 = !DILocation(line: 159, column: 1, scope: !3958)
!4257 = !{i64 2147608911, i64 2147608954, i64 2147608994}
!4258 = !DILocation(line: 160, column: 1, scope: !3958)
!4259 = !{i64 2147609074, i64 2147609117, i64 2147609157}
!4260 = !DILocation(line: 161, column: 1, scope: !3958)
!4261 = !{i64 2147609333, i64 2147609376, i64 2147609416}
!4262 = !DILocation(line: 162, column: 1, scope: !3958)
!4263 = !{i64 2147609556, i64 2147609599, i64 2147609639}
!4264 = !DILocation(line: 163, column: 1, scope: !3958)
!4265 = !{i64 2147609785, i64 2147609828, i64 2147609868}
!4266 = !DILocation(line: 164, column: 1, scope: !3958)
!4267 = !{i64 2147609981, i64 2147610024, i64 2147610064}
!4268 = !DILocation(line: 165, column: 1, scope: !3958)
!4269 = !{i64 2147610193, i64 2147610236, i64 2147610276}
!4270 = !DILocation(line: 166, column: 1, scope: !3958)
!4271 = !{i64 2147610414, i64 2147610457, i64 2147610497}
!4272 = !DILocation(line: 167, column: 1, scope: !3958)
!4273 = !{i64 2147610628, i64 2147610671, i64 2147610711}
!4274 = !DILocation(line: 168, column: 1, scope: !3958)
!4275 = !{i64 2147610818, i64 2147610861, i64 2147610901}
!4276 = !DILocation(line: 169, column: 1, scope: !3958)
!4277 = !{i64 2147611017, i64 2147611060, i64 2147611100}
!4278 = !DILocation(line: 170, column: 1, scope: !3958)
!4279 = !{i64 2147611222, i64 2147611265, i64 2147611305}
!4280 = !DILocation(line: 171, column: 1, scope: !3958)
!4281 = !{i64 2147615503, i64 2147615546, i64 2147615586}
!4282 = !DILocation(line: 172, column: 1, scope: !3958)
!4283 = !{i64 2147615704, i64 2147615747, i64 2147615787}
!4284 = !DILocation(line: 173, column: 1, scope: !3958)
!4285 = !{i64 2147615903, i64 2147615946, i64 2147615986}
!4286 = !DILocation(line: 174, column: 1, scope: !3958)
!4287 = !{i64 2147616108, i64 2147616151, i64 2147616191}
!4288 = !DILocation(line: 175, column: 1, scope: !3958)
!4289 = !{i64 2147616277, i64 2147616320, i64 2147616360}
!4290 = !DILocation(line: 176, column: 1, scope: !3958)
!4291 = !{i64 2147616461, i64 2147616504, i64 2147616544}
!4292 = !DILocation(line: 177, column: 1, scope: !3958)
!4293 = !{i64 2147616645, i64 2147616688, i64 2147616728}
!4294 = !DILocation(line: 178, column: 1, scope: !3958)
!4295 = !{i64 2147616832, i64 2147616875, i64 2147616915}
!4296 = !DILocation(line: 179, column: 1, scope: !3958)
!4297 = !{i64 2147617016, i64 2147617059, i64 2147617099}
!4298 = !DILocation(line: 180, column: 1, scope: !3958)
!4299 = !{i64 2147617254, i64 2147617297, i64 2147617337}
!4300 = !DILocation(line: 181, column: 1, scope: !3958)
!4301 = !{i64 2147617484, i64 2147617527, i64 2147617567}
!4302 = !DILocation(line: 182, column: 1, scope: !3958)
!4303 = !{i64 2147617713, i64 2147617756, i64 2147617796}
!4304 = !DILocation(line: 183, column: 1, scope: !3958)
!4305 = !{i64 2147617900, i64 2147617943, i64 2147617983}
!4306 = !DILocation(line: 184, column: 1, scope: !3958)
!4307 = !{i64 2147618096, i64 2147618139, i64 2147618179}
!4308 = !DILocation(line: 185, column: 1, scope: !3958)
!4309 = !{i64 2147618304, i64 2147618347, i64 2147618387}
!4310 = !DILocation(line: 186, column: 1, scope: !3958)
!4311 = !{i64 2147618516, i64 2147618559, i64 2147618599}
!4312 = !DILocation(line: 187, column: 1, scope: !3958)
!4313 = !{i64 2147618715, i64 2147618758, i64 2147618798}
!4314 = !DILocation(line: 188, column: 1, scope: !3958)
!4315 = !{i64 2147618953, i64 2147618996, i64 2147619036}
!4316 = !DILocation(line: 189, column: 1, scope: !3958)
!4317 = !{i64 2147619149, i64 2147619192, i64 2147619232}
!4318 = !DILocation(line: 190, column: 1, scope: !3958)
!4319 = !{i64 2147619351, i64 2147619394, i64 2147619434}
!4320 = !DILocation(line: 191, column: 1, scope: !3958)
!4321 = !{i64 2147619544, i64 2147619587, i64 2147619627}
!4322 = !DILocation(line: 192, column: 1, scope: !3958)
!4323 = !{i64 2147619778, i64 2147619821, i64 2147619861}
!4324 = !DILocation(line: 193, column: 1, scope: !3958)
!4325 = !{i64 2147619941, i64 2147619984, i64 2147620024}
!4326 = !DILocation(line: 194, column: 1, scope: !3958)
!4327 = !{i64 2147620180, i64 2147620223, i64 2147620263}
!4328 = !DILocation(line: 195, column: 1, scope: !3958)
!4329 = !{i64 2147620419, i64 2147620462, i64 2147620502}
!4330 = !DILocation(line: 196, column: 1, scope: !3958)
!4331 = !{i64 2147620655, i64 2147620698, i64 2147620738}
!4332 = !DILocation(line: 197, column: 1, scope: !3958)
!4333 = !{i64 2147620885, i64 2147620928, i64 2147620968}
!4334 = !DILocation(line: 198, column: 1, scope: !3958)
!4335 = !{i64 2147621072, i64 2147621115, i64 2147621155}
!4336 = !DILocation(line: 199, column: 1, scope: !3958)
!4337 = !{i64 2147621271, i64 2147621314, i64 2147621354}
!4338 = !DILocation(line: 200, column: 1, scope: !3958)
!4339 = !{i64 2147621542, i64 2147621585, i64 2147621625}
!4340 = !DILocation(line: 201, column: 1, scope: !3958)
!4341 = !{i64 2147621717, i64 2147621760, i64 2147621800}
!4342 = !DILocation(line: 202, column: 1, scope: !3958)
!4343 = !{i64 2147621951, i64 2147621994, i64 2147622034}
!4344 = !DILocation(line: 203, column: 1, scope: !3958)
!4345 = !{i64 2147622159, i64 2147622202, i64 2147622242}
!4346 = !DILocation(line: 204, column: 1, scope: !3958)
!4347 = !{i64 2147622377, i64 2147622420, i64 2147622460}
!4348 = !DILocation(line: 205, column: 1, scope: !3958)
!4349 = !{i64 2147622567, i64 2147622610, i64 2147622650}
!4350 = !DILocation(line: 206, column: 1, scope: !3958)
!4351 = !{i64 2147622763, i64 2147622806, i64 2147622846}
!4352 = !DILocation(line: 207, column: 1, scope: !3958)
!4353 = !{i64 2147622969, i64 2147623012, i64 2147623052}
!4354 = !DILocation(line: 208, column: 1, scope: !3958)
!4355 = !{i64 2147623174, i64 2147623217, i64 2147623257}
!4356 = !DILocation(line: 209, column: 1, scope: !3958)
!4357 = !{i64 2147623400, i64 2147623443, i64 2147623483}
!4358 = !DILocation(line: 210, column: 1, scope: !3958)
!4359 = !{i64 2147623632, i64 2147623675, i64 2147623715}
!4360 = !DILocation(line: 211, column: 1, scope: !3958)
!4361 = !{i64 2147623816, i64 2147623859, i64 2147623899}
!4362 = !DILocation(line: 212, column: 1, scope: !3958)
!4363 = !{i64 2147624025, i64 2147624068, i64 2147624108}
!4364 = !DILocation(line: 213, column: 1, scope: !3958)
!4365 = !{i64 2147624209, i64 2147624252, i64 2147624292}
!4366 = !DILocation(line: 214, column: 1, scope: !3958)
!4367 = !{i64 2147624435, i64 2147624478, i64 2147624518}
!4368 = !DILocation(line: 215, column: 1, scope: !3958)
!4369 = !{i64 2147628722, i64 2147628765, i64 2147628805}
!4370 = !DILocation(line: 216, column: 1, scope: !3958)
!4371 = !{i64 2147628948, i64 2147628991, i64 2147629031}
!4372 = !DILocation(line: 217, column: 1, scope: !3958)
!4373 = !{i64 2147629174, i64 2147629217, i64 2147629257}
!4374 = !DILocation(line: 218, column: 1, scope: !3958)
!4375 = !{i64 2147629400, i64 2147629443, i64 2147629483}
!4376 = !DILocation(line: 219, column: 1, scope: !3958)
!4377 = !{i64 2147629632, i64 2147629675, i64 2147629715}
!4378 = !DILocation(line: 220, column: 1, scope: !3958)
!4379 = !{i64 2147629870, i64 2147629913, i64 2147629953}
!4380 = !DILocation(line: 221, column: 1, scope: !3958)
!4381 = !{i64 2147630102, i64 2147630145, i64 2147630185}
!4382 = !DILocation(line: 222, column: 1, scope: !3958)
!4383 = !{i64 2147630304, i64 2147630347, i64 2147630387}
!4384 = !DILocation(line: 223, column: 1, scope: !3958)
!4385 = !{i64 2147630554, i64 2147630597, i64 2147630637}
!4386 = !DILocation(line: 224, column: 1, scope: !3958)
!4387 = !{i64 2147630792, i64 2147630835, i64 2147630875}
!4388 = !DILocation(line: 225, column: 1, scope: !3958)
!4389 = !{i64 2147630976, i64 2147631019, i64 2147631059}
!4390 = !DILocation(line: 226, column: 1, scope: !3958)
!4391 = !{i64 2147631199, i64 2147631242, i64 2147631282}
!4392 = !DILocation(line: 227, column: 1, scope: !3958)
!4393 = !{i64 2147631437, i64 2147631480, i64 2147631520}
!4394 = !DILocation(line: 228, column: 1, scope: !3958)
!4395 = !{i64 2147631675, i64 2147631718, i64 2147631758}
!4396 = !DILocation(line: 229, column: 1, scope: !3958)
!4397 = !{i64 2147631868, i64 2147631911, i64 2147631951}
!4398 = !DILocation(line: 230, column: 1, scope: !3958)
!4399 = !{i64 2147632121, i64 2147632164, i64 2147632204}
!4400 = !DILocation(line: 231, column: 1, scope: !3958)
!4401 = !{i64 2147632335, i64 2147632378, i64 2147632418}
!4402 = !DILocation(line: 232, column: 1, scope: !3958)
!4403 = !{i64 2147632543, i64 2147632586, i64 2147632626}
!4404 = !DILocation(line: 233, column: 1, scope: !3958)
!4405 = !{i64 2147632733, i64 2147632776, i64 2147632816}
!4406 = !DILocation(line: 234, column: 1, scope: !3958)
!4407 = !{i64 2147632947, i64 2147632990, i64 2147633030}
!4408 = !DILocation(line: 235, column: 1, scope: !3958)
!4409 = !{i64 2147633209, i64 2147633252, i64 2147633292}
!4410 = !DILocation(line: 236, column: 1, scope: !3958)
!4411 = !{i64 2147633420, i64 2147633463, i64 2147633503}
!4412 = !DILocation(line: 237, column: 1, scope: !3958)
!4413 = !{i64 2147633664, i64 2147633707, i64 2147633747}
!4414 = !DILocation(line: 238, column: 1, scope: !3958)
!4415 = !{i64 2147633875, i64 2147633918, i64 2147633958}
!4416 = !DILocation(line: 239, column: 1, scope: !3958)
!4417 = !{i64 2147634104, i64 2147634147, i64 2147634187}
!4418 = !DILocation(line: 240, column: 1, scope: !3958)
!4419 = !{i64 2147634369, i64 2147634412, i64 2147634452}
!4420 = !DILocation(line: 241, column: 1, scope: !3958)
!4421 = !{i64 2147634574, i64 2147634617, i64 2147634657}
!4422 = !DILocation(line: 242, column: 1, scope: !3958)
!4423 = !{i64 2147634770, i64 2147634813, i64 2147634853}
!4424 = !DILocation(line: 243, column: 1, scope: !3958)
!4425 = !{i64 2147634993, i64 2147635036, i64 2147635076}
!4426 = !DILocation(line: 244, column: 1, scope: !3958)
!4427 = !{i64 2147635156, i64 2147635199, i64 2147635239}
!4428 = !DILocation(line: 245, column: 1, scope: !3958)
!4429 = !{i64 2147635361, i64 2147635404, i64 2147635444}
!4430 = !DILocation(line: 246, column: 1, scope: !3958)
!4431 = !{i64 2147635581, i64 2147635624, i64 2147635664}
!4432 = !DILocation(line: 247, column: 1, scope: !3958)
!4433 = !{i64 2147635795, i64 2147635838, i64 2147635878}
!4434 = !DILocation(line: 248, column: 1, scope: !3958)
!4435 = !{i64 2147636009, i64 2147636052, i64 2147636092}
!4436 = !DILocation(line: 249, column: 1, scope: !3958)
!4437 = !{i64 2147636220, i64 2147636263, i64 2147636303}
!4438 = !DILocation(line: 250, column: 1, scope: !3958)
!4439 = !{i64 2147636413, i64 2147636456, i64 2147636496}
!4440 = !DILocation(line: 251, column: 1, scope: !3958)
!4441 = !{i64 2147636612, i64 2147636655, i64 2147636695}
!4442 = !DILocation(line: 252, column: 1, scope: !3958)
!4443 = !{i64 2147636784, i64 2147636827, i64 2147636867}
!4444 = !DILocation(line: 253, column: 1, scope: !3958)
!4445 = !{i64 2147636977, i64 2147637020, i64 2147637060}
!4446 = !DILocation(line: 254, column: 1, scope: !3958)
!4447 = !{i64 2147637173, i64 2147637216, i64 2147637256}
!4448 = !DILocation(line: 255, column: 1, scope: !3958)
!4449 = !{i64 2147641461, i64 2147641504, i64 2147641544}
!4450 = !DILocation(line: 256, column: 1, scope: !3958)
!4451 = !{i64 2147641678, i64 2147641721, i64 2147641761}
!4452 = !DILocation(line: 257, column: 1, scope: !3958)
!4453 = !{i64 2147641970, i64 2147642013, i64 2147642053}
!4454 = !DILocation(line: 258, column: 1, scope: !3958)
!4455 = !{i64 2147642202, i64 2147642245, i64 2147642285}
!4456 = !DILocation(line: 259, column: 1, scope: !3958)
!4457 = !{i64 2147642419, i64 2147642462, i64 2147642502}
!4458 = !DILocation(line: 260, column: 1, scope: !3958)
!4459 = !{i64 2147642626, i64 2147642669, i64 2147642709}
!4460 = !DILocation(line: 261, column: 1, scope: !3958)
!4461 = !{i64 2147642827, i64 2147642870, i64 2147642910}
!4462 = !DILocation(line: 262, column: 1, scope: !3958)
!4463 = !{i64 2147643059, i64 2147643102, i64 2147643142}
!4464 = !DILocation(line: 263, column: 1, scope: !3958)
!4465 = !{i64 2147643267, i64 2147643310, i64 2147643350}
!4466 = !DILocation(line: 264, column: 1, scope: !3958)
!4467 = !{i64 2147643457, i64 2147643500, i64 2147643540}
!4468 = !DILocation(line: 265, column: 1, scope: !3958)
!4469 = !{i64 2147643683, i64 2147643726, i64 2147643766}
!4470 = !DILocation(line: 266, column: 1, scope: !3958)
!4471 = !{i64 2147643872, i64 2147643915, i64 2147643955}
!4472 = !DILocation(line: 267, column: 1, scope: !3958)
!4473 = !{i64 2147644143, i64 2147644186, i64 2147644226}
!4474 = !DILocation(line: 268, column: 1, scope: !3958)
!4475 = !{i64 2147644363, i64 2147644406, i64 2147644446}
!4476 = !DILocation(line: 269, column: 1, scope: !3958)
!4477 = !{i64 2147644616, i64 2147644659, i64 2147644699}
!4478 = !DILocation(line: 270, column: 1, scope: !3958)
!4479 = !{i64 2147644824, i64 2147644867, i64 2147644907}
!4480 = !DILocation(line: 271, column: 1, scope: !3958)
!4481 = !{i64 2147645056, i64 2147645099, i64 2147645139}
!4482 = !DILocation(line: 272, column: 1, scope: !3958)
!4483 = !{i64 2147645267, i64 2147645310, i64 2147645350}
!4484 = !DILocation(line: 273, column: 1, scope: !3958)
!4485 = !{i64 2147645457, i64 2147645500, i64 2147645540}
!4486 = !DILocation(line: 274, column: 1, scope: !3958)
!4487 = !{i64 2147645671, i64 2147645714, i64 2147645754}
!4488 = !DILocation(line: 275, column: 1, scope: !3958)
!4489 = !{i64 2147645870, i64 2147645913, i64 2147645953}
!4490 = !DILocation(line: 276, column: 1, scope: !3958)
!4491 = !{i64 2147646057, i64 2147646100, i64 2147646140}
!4492 = !DILocation(line: 277, column: 1, scope: !3958)
!4493 = !{i64 2147646265, i64 2147646308, i64 2147646348}
!4494 = !DILocation(line: 278, column: 1, scope: !3958)
!4495 = !{i64 2147646494, i64 2147646537, i64 2147646577}
!4496 = !DILocation(line: 279, column: 1, scope: !3958)
!4497 = !{i64 2147646696, i64 2147646739, i64 2147646779}
!4498 = !DILocation(line: 280, column: 1, scope: !3958)
!4499 = !{i64 2147646895, i64 2147646938, i64 2147646978}
!4500 = !DILocation(line: 281, column: 1, scope: !3958)
!4501 = !{i64 2147647112, i64 2147647155, i64 2147647195}
!4502 = !DILocation(line: 283, column: 1, scope: !3958)
!4503 = distinct !DISubprogram(name: "stm32l1_init", scope: !142, file: !142, line: 31, type: !149, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4504)
!4504 = !{!4505, !4506}
!4505 = !DILocalVariable(name: "arg", arg: 1, scope: !4503, file: !142, line: 31, type: !151)
!4506 = !DILocalVariable(name: "key", scope: !4503, file: !142, line: 33, type: !121)
!4507 = !DILocation(line: 0, scope: !4503)
!4508 = !DILocation(line: 55, column: 2, scope: !4509, inlinedAt: !4516)
!4509 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4510, file: !4510, line: 42, type: !4511, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4513)
!4510 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4511 = !DISubroutineType(types: !4512)
!4512 = !{!32}
!4513 = !{!4514, !4515}
!4514 = !DILocalVariable(name: "key", scope: !4509, file: !4510, line: 44, type: !32)
!4515 = !DILocalVariable(name: "tmp", scope: !4509, file: !4510, line: 53, type: !32)
!4516 = distinct !DILocation(line: 37, column: 8, scope: !4503)
!4517 = !{i64 1523262}
!4518 = !DILocation(line: 0, scope: !4509, inlinedAt: !4516)
!4519 = !DILocalVariable(name: "key", arg: 1, scope: !4520, file: !4510, line: 84, type: !32)
!4520 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4510, file: !4510, line: 84, type: !4521, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4523)
!4521 = !DISubroutineType(types: !4522)
!4522 = !{null, !32}
!4523 = !{!4519}
!4524 = !DILocation(line: 0, scope: !4520, inlinedAt: !4525)
!4525 = distinct !DILocation(line: 44, column: 2, scope: !4503)
!4526 = !DILocation(line: 95, column: 2, scope: !4520, inlinedAt: !4525)
!4527 = !{i64 1524079}
!4528 = !DILocation(line: 48, column: 18, scope: !4503)
!4529 = !DILocation(line: 54, column: 2, scope: !4503)
!4530 = !DILocation(line: 55, column: 2, scope: !4503)
!4531 = !DILocation(line: 57, column: 2, scope: !4503)
!4532 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !4533, file: !4533, line: 531, type: !4534, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4536)
!4533 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4534 = !DISubroutineType(types: !4535)
!4535 = !{null, !121}
!4536 = !{!4537, !4538}
!4537 = !DILocalVariable(name: "Periphs", arg: 1, scope: !4532, file: !4533, line: 531, type: !121)
!4538 = !DILocalVariable(name: "tmpreg", scope: !4532, file: !4533, line: 533, type: !120)
!4539 = !DILocation(line: 0, scope: !4532)
!4540 = !DILocation(line: 533, column: 3, scope: !4532)
!4541 = !DILocation(line: 533, column: 17, scope: !4532)
!4542 = !DILocation(line: 534, column: 3, scope: !4532)
!4543 = !DILocation(line: 536, column: 12, scope: !4532)
!4544 = !DILocation(line: 536, column: 10, scope: !4532)
!4545 = !DILocation(line: 537, column: 9, scope: !4532)
!4546 = !DILocation(line: 538, column: 1, scope: !4532)
!4547 = distinct !DISubprogram(name: "LL_PWR_SetRegulVoltageScaling", scope: !4548, file: !4548, line: 272, type: !4534, scopeLine: 273, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !111, retainedNodes: !4549)
!4548 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4549 = !{!4550}
!4550 = !DILocalVariable(name: "VoltageScaling", arg: 1, scope: !4547, file: !4548, line: 272, type: !121)
!4551 = !DILocation(line: 0, scope: !4547)
!4552 = !DILocation(line: 274, column: 3, scope: !4547)
!4553 = !DILocation(line: 275, column: 1, scope: !4547)
!4554 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !184, file: !184, line: 26, type: !190, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !181, retainedNodes: !4555)
!4555 = !{!4556}
!4556 = !DILocalVariable(name: "dev", arg: 1, scope: !4554, file: !184, line: 26, type: !192)
!4557 = !DILocation(line: 0, scope: !4554)
!4558 = !DILocation(line: 68, column: 2, scope: !4554)
!4559 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !4560, file: !4560, line: 57, type: !4561, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2239, retainedNodes: !4607)
!4560 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4561 = !DISubroutineType(types: !4562)
!4562 = !{null, !32, !4563}
!4563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4564, size: 32)
!4564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4565)
!4565 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2359, line: 141, baseType: !4566)
!4566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2359, line: 97, size: 256, elements: !4567)
!4567 = !{!4568}
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !4566, file: !2359, line: 107, baseType: !4569, size: 256)
!4569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2359, line: 98, size: 256, elements: !4570)
!4570 = !{!4571, !4576, !4581, !4586, !4591, !4596, !4601, !4606}
!4571 = !DIDerivedType(tag: DW_TAG_member, scope: !4569, file: !2359, line: 99, baseType: !4572, size: 32)
!4572 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4569, file: !2359, line: 99, size: 32, elements: !4573)
!4573 = !{!4574, !4575}
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !4572, file: !2359, line: 99, baseType: !121, size: 32)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !4572, file: !2359, line: 99, baseType: !121, size: 32)
!4576 = !DIDerivedType(tag: DW_TAG_member, scope: !4569, file: !2359, line: 100, baseType: !4577, size: 32, offset: 32)
!4577 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4569, file: !2359, line: 100, size: 32, elements: !4578)
!4578 = !{!4579, !4580}
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !4577, file: !2359, line: 100, baseType: !121, size: 32)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !4577, file: !2359, line: 100, baseType: !121, size: 32)
!4581 = !DIDerivedType(tag: DW_TAG_member, scope: !4569, file: !2359, line: 101, baseType: !4582, size: 32, offset: 64)
!4582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4569, file: !2359, line: 101, size: 32, elements: !4583)
!4583 = !{!4584, !4585}
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !4582, file: !2359, line: 101, baseType: !121, size: 32)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !4582, file: !2359, line: 101, baseType: !121, size: 32)
!4586 = !DIDerivedType(tag: DW_TAG_member, scope: !4569, file: !2359, line: 102, baseType: !4587, size: 32, offset: 96)
!4587 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4569, file: !2359, line: 102, size: 32, elements: !4588)
!4588 = !{!4589, !4590}
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !4587, file: !2359, line: 102, baseType: !121, size: 32)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !4587, file: !2359, line: 102, baseType: !121, size: 32)
!4591 = !DIDerivedType(tag: DW_TAG_member, scope: !4569, file: !2359, line: 103, baseType: !4592, size: 32, offset: 128)
!4592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4569, file: !2359, line: 103, size: 32, elements: !4593)
!4593 = !{!4594, !4595}
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !4592, file: !2359, line: 103, baseType: !121, size: 32)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !4592, file: !2359, line: 103, baseType: !121, size: 32)
!4596 = !DIDerivedType(tag: DW_TAG_member, scope: !4569, file: !2359, line: 104, baseType: !4597, size: 32, offset: 160)
!4597 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4569, file: !2359, line: 104, size: 32, elements: !4598)
!4598 = !{!4599, !4600}
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !4597, file: !2359, line: 104, baseType: !121, size: 32)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !4597, file: !2359, line: 104, baseType: !121, size: 32)
!4601 = !DIDerivedType(tag: DW_TAG_member, scope: !4569, file: !2359, line: 105, baseType: !4602, size: 32, offset: 192)
!4602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4569, file: !2359, line: 105, size: 32, elements: !4603)
!4603 = !{!4604, !4605}
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !4602, file: !2359, line: 105, baseType: !121, size: 32)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !4602, file: !2359, line: 105, baseType: !121, size: 32)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !4569, file: !2359, line: 106, baseType: !121, size: 32, offset: 224)
!4607 = !{!4608, !4609}
!4608 = !DILocalVariable(name: "reason", arg: 1, scope: !4559, file: !4560, line: 57, type: !32)
!4609 = !DILocalVariable(name: "esf", arg: 2, scope: !4559, file: !4560, line: 57, type: !4563)
!4610 = !DILocation(line: 0, scope: !4559)
!4611 = !DILocation(line: 63, column: 2, scope: !4559)
!4612 = !DILocation(line: 64, column: 1, scope: !4559)
!4613 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !4560, file: !4560, line: 82, type: !4614, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2239, retainedNodes: !4629)
!4614 = !DISubroutineType(types: !4615)
!4615 = !{null, !4563, !4616}
!4616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4617, size: 32)
!4617 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !297, line: 37, baseType: !4618)
!4618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !4619)
!4619 = !{!4620, !4621, !4622, !4623, !4624, !4625, !4626, !4627, !4628}
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4618, file: !297, line: 26, baseType: !121, size: 32)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4618, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4618, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4618, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4618, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4618, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4618, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4618, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4618, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!4629 = !{!4630, !4631, !4632}
!4630 = !DILocalVariable(name: "esf", arg: 1, scope: !4613, file: !4560, line: 82, type: !4563)
!4631 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !4613, file: !4560, line: 82, type: !4616)
!4632 = !DILocalVariable(name: "reason", scope: !4613, file: !4560, line: 88, type: !32)
!4633 = !DILocation(line: 0, scope: !4613)
!4634 = !DILocation(line: 88, column: 35, scope: !4613)
!4635 = !DILocation(line: 108, column: 2, scope: !4613)
!4636 = !DILocation(line: 131, column: 1, scope: !4613)
!4637 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !4560, file: !4560, line: 133, type: !4638, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2239, retainedNodes: !4640)
!4638 = !DISubroutineType(types: !4639)
!4639 = !{null, !102}
!4640 = !{!4641, !4642, !4643}
!4641 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !4637, file: !4560, line: 133, type: !102)
!4642 = !DILocalVariable(name: "ssf_contents", scope: !4637, file: !4560, line: 135, type: !766)
!4643 = !DILocalVariable(name: "oops_esf", scope: !4637, file: !4560, line: 136, type: !4565)
!4644 = !DILocation(line: 0, scope: !4637)
!4645 = !DILocation(line: 136, column: 2, scope: !4637)
!4646 = !DILocation(line: 136, column: 15, scope: !4637)
!4647 = !DILocation(line: 139, column: 22, scope: !4637)
!4648 = !DILocation(line: 139, column: 17, scope: !4637)
!4649 = !DILocation(line: 139, column: 20, scope: !4637)
!4650 = !DILocation(line: 141, column: 2, scope: !4637)
!4651 = !DILocation(line: 142, column: 2, scope: !4637)
!4652 = distinct !DISubprogram(name: "arch_irq_enable", scope: !4653, file: !4653, line: 40, type: !4521, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !4654)
!4653 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4654 = !{!4655}
!4655 = !DILocalVariable(name: "irq", arg: 1, scope: !4652, file: !4653, line: 40, type: !32)
!4656 = !DILocation(line: 0, scope: !4652)
!4657 = !DILocation(line: 42, column: 2, scope: !4652)
!4658 = !DILocation(line: 43, column: 1, scope: !4652)
!4659 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !369, file: !369, line: 1508, type: !4660, scopeLine: 1509, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !4662)
!4660 = !DISubroutineType(types: !4661)
!4661 = !{null, !693}
!4662 = !{!4663}
!4663 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4659, file: !369, line: 1508, type: !693)
!4664 = !DILocation(line: 0, scope: !4659)
!4665 = !DILocation(line: 1510, column: 23, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4659, file: !369, line: 1510, column: 7)
!4667 = !DILocation(line: 1510, column: 7, scope: !4659)
!4668 = !DILocation(line: 1512, column: 5, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4666, file: !369, line: 1511, column: 3)
!4670 = !{i64 2149969059}
!4671 = !DILocation(line: 1513, column: 81, scope: !4669)
!4672 = !DILocation(line: 1513, column: 60, scope: !4669)
!4673 = !DILocation(line: 1513, column: 34, scope: !4669)
!4674 = !DILocation(line: 1513, column: 5, scope: !4669)
!4675 = !DILocation(line: 1513, column: 43, scope: !4669)
!4676 = !DILocation(line: 1514, column: 5, scope: !4669)
!4677 = !{i64 2149969173}
!4678 = !DILocation(line: 1515, column: 3, scope: !4669)
!4679 = !DILocation(line: 1516, column: 1, scope: !4659)
!4680 = distinct !DISubprogram(name: "arch_irq_disable", scope: !4653, file: !4653, line: 45, type: !4521, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !4681)
!4681 = !{!4682}
!4682 = !DILocalVariable(name: "irq", arg: 1, scope: !4680, file: !4653, line: 45, type: !32)
!4683 = !DILocation(line: 0, scope: !4680)
!4684 = !DILocation(line: 47, column: 2, scope: !4680)
!4685 = !DILocation(line: 48, column: 1, scope: !4680)
!4686 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !369, file: !369, line: 1546, type: !4660, scopeLine: 1547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !4687)
!4687 = !{!4688}
!4688 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4686, file: !369, line: 1546, type: !693)
!4689 = !DILocation(line: 0, scope: !4686)
!4690 = !DILocation(line: 1548, column: 23, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4686, file: !369, line: 1548, column: 7)
!4692 = !DILocation(line: 1548, column: 7, scope: !4686)
!4693 = !DILocation(line: 1550, column: 81, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4691, file: !369, line: 1549, column: 3)
!4695 = !DILocation(line: 1550, column: 60, scope: !4694)
!4696 = !DILocation(line: 1550, column: 34, scope: !4694)
!4697 = !DILocation(line: 1550, column: 5, scope: !4694)
!4698 = !DILocation(line: 1550, column: 43, scope: !4694)
!4699 = !DILocation(line: 271, column: 3, scope: !4700, inlinedAt: !4702)
!4700 = distinct !DISubprogram(name: "__DSB", scope: !4701, file: !4701, line: 269, type: !2730, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !335)
!4701 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4702 = distinct !DILocation(line: 1551, column: 5, scope: !4694)
!4703 = !{i64 2426561}
!4704 = !DILocation(line: 260, column: 3, scope: !4705, inlinedAt: !4706)
!4705 = distinct !DISubprogram(name: "__ISB", scope: !4701, file: !4701, line: 258, type: !2730, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !335)
!4706 = distinct !DILocation(line: 1552, column: 5, scope: !4694)
!4707 = !{i64 2426278}
!4708 = !DILocation(line: 1553, column: 3, scope: !4694)
!4709 = !DILocation(line: 1554, column: 1, scope: !4686)
!4710 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !4653, file: !4653, line: 50, type: !4711, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !4713)
!4711 = !DISubroutineType(types: !4712)
!4712 = !{!103, !32}
!4713 = !{!4714}
!4714 = !DILocalVariable(name: "irq", arg: 1, scope: !4710, file: !4653, line: 50, type: !32)
!4715 = !DILocation(line: 0, scope: !4710)
!4716 = !DILocation(line: 52, column: 20, scope: !4710)
!4717 = !DILocation(line: 52, column: 9, scope: !4710)
!4718 = !DILocation(line: 52, column: 41, scope: !4710)
!4719 = !DILocation(line: 52, column: 39, scope: !4710)
!4720 = !DILocation(line: 52, column: 2, scope: !4710)
!4721 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !4653, file: !4653, line: 64, type: !4722, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !4724)
!4722 = !DISubroutineType(types: !4723)
!4723 = !{null, !32, !32, !121}
!4724 = !{!4725, !4726, !4727}
!4725 = !DILocalVariable(name: "irq", arg: 1, scope: !4721, file: !4653, line: 64, type: !32)
!4726 = !DILocalVariable(name: "prio", arg: 2, scope: !4721, file: !4653, line: 64, type: !32)
!4727 = !DILocalVariable(name: "flags", arg: 3, scope: !4721, file: !4653, line: 64, type: !121)
!4728 = !DILocation(line: 0, scope: !4721)
!4729 = !DILocation(line: 83, column: 8, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4731, file: !4653, line: 82, column: 9)
!4731 = distinct !DILexicalBlock(scope: !4721, file: !4653, line: 76, column: 6)
!4732 = !DILocation(line: 95, column: 2, scope: !4721)
!4733 = !DILocation(line: 96, column: 1, scope: !4721)
!4734 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !369, file: !369, line: 1638, type: !4735, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !4737)
!4735 = !DISubroutineType(types: !4736)
!4736 = !{null, !693, !121}
!4737 = !{!4738, !4739}
!4738 = !DILocalVariable(name: "IRQn", arg: 1, scope: !4734, file: !369, line: 1638, type: !693)
!4739 = !DILocalVariable(name: "priority", arg: 2, scope: !4734, file: !369, line: 1638, type: !121)
!4740 = !DILocation(line: 0, scope: !4734)
!4741 = !DILocation(line: 0, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4734, file: !369, line: 1640, column: 7)
!4743 = !DILocation(line: 1640, column: 7, scope: !4734)
!4744 = !DILocation(line: 1648, column: 1, scope: !4734)
!4745 = distinct !DISubprogram(name: "z_irq_spurious", scope: !4653, file: !4653, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2250, retainedNodes: !4746)
!4746 = !{!4747}
!4747 = !DILocalVariable(name: "unused", arg: 1, scope: !4745, file: !4653, line: 155, type: !13)
!4748 = !DILocation(line: 0, scope: !4745)
!4749 = !DILocation(line: 159, column: 2, scope: !4745)
!4750 = !DILocation(line: 160, column: 1, scope: !4745)
!4751 = distinct !DISubprogram(name: "z_arm_nmi", scope: !4752, file: !4752, line: 87, type: !2730, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2296, retainedNodes: !335)
!4752 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4753 = !DILocation(line: 89, column: 2, scope: !4751)
!4754 = !DILocation(line: 90, column: 2, scope: !4751)
!4755 = !DILocation(line: 91, column: 1, scope: !4751)
!4756 = !DISubprogram(name: "z_SysNmiOnReset", scope: !4752, file: !4752, line: 23, type: !2730, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !335)
!4757 = !DISubprogram(name: "z_arm_int_exit", scope: !4758, file: !4758, line: 153, type: !2730, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !335)
!4758 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4759 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !4760, file: !4760, line: 256, type: !2730, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2298, retainedNodes: !335)
!4760 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4761 = !DILocation(line: 258, column: 2, scope: !4759)
!4762 = !DILocation(line: 262, column: 2, scope: !4759)
!4763 = !DILocation(line: 263, column: 2, scope: !4759)
!4764 = !DILocation(line: 267, column: 2, scope: !4759)
!4765 = !DILocation(line: 268, column: 2, scope: !4759)
!4766 = distinct !DISubprogram(name: "relocate_vector_table", scope: !4760, file: !4760, line: 53, type: !2730, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2298, retainedNodes: !335)
!4767 = !DILocation(line: 55, column: 12, scope: !4766)
!4768 = !DILocation(line: 271, column: 3, scope: !4769, inlinedAt: !4770)
!4769 = distinct !DISubprogram(name: "__DSB", scope: !4701, file: !4701, line: 269, type: !2730, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2298, retainedNodes: !335)
!4770 = distinct !DILocation(line: 56, column: 2, scope: !4766)
!4771 = !{i64 2425232}
!4772 = !DILocation(line: 260, column: 3, scope: !4773, inlinedAt: !4774)
!4773 = distinct !DISubprogram(name: "__ISB", scope: !4701, file: !4701, line: 258, type: !2730, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2298, retainedNodes: !335)
!4774 = distinct !DILocation(line: 57, column: 2, scope: !4766)
!4775 = !{i64 2424949}
!4776 = !DILocation(line: 58, column: 1, scope: !4766)
!4777 = distinct !DISubprogram(name: "arch_swap", scope: !4778, file: !4778, line: 33, type: !4711, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2326, retainedNodes: !4779)
!4778 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4779 = !{!4780}
!4780 = !DILocalVariable(name: "key", arg: 1, scope: !4777, file: !4778, line: 33, type: !32)
!4781 = !DILocation(line: 0, scope: !4777)
!4782 = !DILocation(line: 36, column: 2, scope: !4777)
!4783 = !DILocation(line: 36, column: 17, scope: !4777)
!4784 = !DILocation(line: 36, column: 25, scope: !4777)
!4785 = !DILocation(line: 37, column: 37, scope: !4777)
!4786 = !DILocation(line: 37, column: 17, scope: !4777)
!4787 = !DILocation(line: 37, column: 35, scope: !4777)
!4788 = !DILocation(line: 41, column: 12, scope: !4777)
!4789 = !DILocalVariable(name: "key", arg: 1, scope: !4790, file: !4510, line: 84, type: !32)
!4790 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4510, file: !4510, line: 84, type: !4521, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2326, retainedNodes: !4791)
!4791 = !{!4789}
!4792 = !DILocation(line: 0, scope: !4790, inlinedAt: !4793)
!4793 = distinct !DILocation(line: 44, column: 2, scope: !4777)
!4794 = !DILocation(line: 95, column: 2, scope: !4790, inlinedAt: !4793)
!4795 = !{i64 1648232}
!4796 = !DILocation(line: 53, column: 9, scope: !4777)
!4797 = !DILocation(line: 53, column: 24, scope: !4777)
!4798 = !DILocation(line: 53, column: 2, scope: !4777)
!4799 = distinct !DISubprogram(name: "arch_new_thread", scope: !4800, file: !4800, line: 56, type: !4801, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2354, retainedNodes: !4908)
!4800 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4801 = !DISubroutineType(types: !4802)
!4802 = !{null, !4803, !4903, !1017, !3033, !102, !102, !102}
!4803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4804, size: 32)
!4804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !224, line: 245, size: 1024, elements: !4805)
!4805 = !{!4806, !4864, !4876, !4877, !4878, !4879, !4885, !4898}
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4804, file: !224, line: 247, baseType: !4807, size: 384)
!4807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !224, line: 57, size: 384, elements: !4808)
!4808 = !{!4809, !4833, !4840, !4841, !4842, !4851, !4852, !4853}
!4809 = !DIDerivedType(tag: DW_TAG_member, scope: !4807, file: !224, line: 60, baseType: !4810, size: 64)
!4810 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4807, file: !224, line: 60, size: 64, elements: !4811)
!4811 = !{!4812, !4827}
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4810, file: !224, line: 61, baseType: !4813, size: 64)
!4813 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !234, line: 49, baseType: !4814)
!4814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !4815)
!4815 = !{!4816, !4822}
!4816 = !DIDerivedType(tag: DW_TAG_member, scope: !4814, file: !234, line: 38, baseType: !4817, size: 32)
!4817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4814, file: !234, line: 38, size: 32, elements: !4818)
!4818 = !{!4819, !4821}
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4817, file: !234, line: 39, baseType: !4820, size: 32)
!4820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4814, size: 32)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4817, file: !234, line: 40, baseType: !4820, size: 32)
!4822 = !DIDerivedType(tag: DW_TAG_member, scope: !4814, file: !234, line: 42, baseType: !4823, size: 32, offset: 32)
!4823 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4814, file: !234, line: 42, size: 32, elements: !4824)
!4824 = !{!4825, !4826}
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4823, file: !234, line: 43, baseType: !4820, size: 32)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4823, file: !234, line: 44, baseType: !4820, size: 32)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4810, file: !224, line: 62, baseType: !4828, size: 64)
!4828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !250, line: 49, size: 64, elements: !4829)
!4829 = !{!4830}
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4828, file: !250, line: 50, baseType: !4831, size: 64)
!4831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4832, size: 64, elements: !255)
!4832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4828, size: 32)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4807, file: !224, line: 68, baseType: !4834, size: 32, offset: 64)
!4834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4835, size: 32)
!4835 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !260, line: 233, baseType: !4836)
!4836 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !260, line: 231, size: 64, elements: !4837)
!4837 = !{!4838}
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4836, file: !260, line: 232, baseType: !4839, size: 64)
!4839 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !4814)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4807, file: !224, line: 71, baseType: !167, size: 8, offset: 96)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4807, file: !224, line: 74, baseType: !167, size: 8, offset: 104)
!4842 = !DIDerivedType(tag: DW_TAG_member, scope: !4807, file: !224, line: 90, baseType: !4843, size: 16, offset: 112)
!4843 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4807, file: !224, line: 90, size: 16, elements: !4844)
!4844 = !{!4845, !4850}
!4845 = !DIDerivedType(tag: DW_TAG_member, scope: !4843, file: !224, line: 91, baseType: !4846, size: 16)
!4846 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4843, file: !224, line: 91, size: 16, elements: !4847)
!4847 = !{!4848, !4849}
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4846, file: !224, line: 96, baseType: !274, size: 8)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4846, file: !224, line: 97, baseType: !167, size: 8, offset: 8)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4843, file: !224, line: 100, baseType: !278, size: 16)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4807, file: !224, line: 107, baseType: !121, size: 32, offset: 128)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4807, file: !224, line: 127, baseType: !102, size: 32, offset: 160)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4807, file: !224, line: 131, baseType: !4854, size: 192, offset: 192)
!4854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !260, line: 244, size: 192, elements: !4855)
!4855 = !{!4856, !4857, !4863}
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4854, file: !260, line: 245, baseType: !4813, size: 64)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4854, file: !260, line: 246, baseType: !4858, size: 32, offset: 64)
!4858 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !260, line: 242, baseType: !4859)
!4859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4860, size: 32)
!4860 = !DISubroutineType(types: !4861)
!4861 = !{null, !4862}
!4862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4854, size: 32)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4854, file: !260, line: 249, baseType: !293, size: 64, offset: 128)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4804, file: !224, line: 250, baseType: !4865, size: 288, offset: 384)
!4865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !4866)
!4866 = !{!4867, !4868, !4869, !4870, !4871, !4872, !4873, !4874, !4875}
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4865, file: !297, line: 26, baseType: !121, size: 32)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4865, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4865, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4865, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4865, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4865, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4865, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4865, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4865, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4804, file: !224, line: 253, baseType: !102, size: 32, offset: 672)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4804, file: !224, line: 256, baseType: !4835, size: 64, offset: 704)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4804, file: !224, line: 294, baseType: !103, size: 32, offset: 768)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4804, file: !224, line: 300, baseType: !4880, size: 96, offset: 800)
!4880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !224, line: 149, size: 96, elements: !4881)
!4881 = !{!4882, !4883, !4884}
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4880, file: !224, line: 153, baseType: !22, size: 32)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4880, file: !224, line: 162, baseType: !213, size: 32, offset: 32)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4880, file: !224, line: 168, baseType: !213, size: 32, offset: 64)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4804, file: !224, line: 325, baseType: !4886, size: 32, offset: 896)
!4886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4887, size: 32)
!4887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !320, line: 5073, size: 160, elements: !4888)
!4888 = !{!4889, !4895, !4896}
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4887, file: !320, line: 5074, baseType: !4890, size: 96)
!4890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !4891)
!4891 = !{!4892, !4893, !4894}
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4890, file: !324, line: 57, baseType: !327, size: 32)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4890, file: !324, line: 58, baseType: !102, size: 32, offset: 32)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4890, file: !324, line: 59, baseType: !213, size: 32, offset: 64)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4887, file: !320, line: 5075, baseType: !4835, size: 64, offset: 96)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4887, file: !320, line: 5076, baseType: !4897, offset: 160)
!4897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4804, file: !224, line: 343, baseType: !4899, size: 64, offset: 928)
!4899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !297, line: 60, size: 64, elements: !4900)
!4900 = !{!4901, !4902}
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4899, file: !297, line: 63, baseType: !121, size: 32)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4899, file: !297, line: 66, baseType: !121, size: 32, offset: 32)
!4903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4904, size: 32)
!4904 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3034, line: 44, baseType: !4905)
!4905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1869, line: 47, size: 8, elements: !4906)
!4906 = !{!4907}
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4905, file: !1869, line: 48, baseType: !159, size: 8)
!4908 = !{!4909, !4910, !4911, !4912, !4913, !4914, !4915, !4916}
!4909 = !DILocalVariable(name: "thread", arg: 1, scope: !4799, file: !4800, line: 56, type: !4803)
!4910 = !DILocalVariable(name: "stack", arg: 2, scope: !4799, file: !4800, line: 56, type: !4903)
!4911 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !4799, file: !4800, line: 57, type: !1017)
!4912 = !DILocalVariable(name: "entry", arg: 4, scope: !4799, file: !4800, line: 57, type: !3033)
!4913 = !DILocalVariable(name: "p1", arg: 5, scope: !4799, file: !4800, line: 58, type: !102)
!4914 = !DILocalVariable(name: "p2", arg: 6, scope: !4799, file: !4800, line: 58, type: !102)
!4915 = !DILocalVariable(name: "p3", arg: 7, scope: !4799, file: !4800, line: 58, type: !102)
!4916 = !DILocalVariable(name: "iframe", scope: !4799, file: !4800, line: 60, type: !2357)
!4917 = !DILocation(line: 0, scope: !4799)
!4918 = !DILocation(line: 85, column: 11, scope: !4799)
!4919 = !DILocation(line: 93, column: 10, scope: !4799)
!4920 = !DILocation(line: 98, column: 13, scope: !4799)
!4921 = !DILocation(line: 100, column: 15, scope: !4799)
!4922 = !DILocation(line: 100, column: 10, scope: !4799)
!4923 = !DILocation(line: 100, column: 13, scope: !4799)
!4924 = !DILocation(line: 101, column: 15, scope: !4799)
!4925 = !DILocation(line: 101, column: 10, scope: !4799)
!4926 = !DILocation(line: 101, column: 13, scope: !4799)
!4927 = !DILocation(line: 102, column: 15, scope: !4799)
!4928 = !DILocation(line: 102, column: 10, scope: !4799)
!4929 = !DILocation(line: 102, column: 13, scope: !4799)
!4930 = !DILocation(line: 103, column: 15, scope: !4799)
!4931 = !DILocation(line: 103, column: 10, scope: !4799)
!4932 = !DILocation(line: 103, column: 13, scope: !4799)
!4933 = !DILocation(line: 106, column: 10, scope: !4799)
!4934 = !DILocation(line: 106, column: 15, scope: !4799)
!4935 = !DILocation(line: 122, column: 29, scope: !4799)
!4936 = !DILocation(line: 122, column: 23, scope: !4799)
!4937 = !DILocation(line: 122, column: 27, scope: !4799)
!4938 = !DILocation(line: 123, column: 15, scope: !4799)
!4939 = !DILocation(line: 123, column: 23, scope: !4799)
!4940 = !DILocation(line: 143, column: 1, scope: !4799)
!4941 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !4800, file: !4800, line: 385, type: !4942, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2354, retainedNodes: !4945)
!4942 = !DISubroutineType(types: !4943)
!4943 = !{!121, !4944, !4944}
!4944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!4945 = !{!4946, !4947, !4948, !4951}
!4946 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !4941, file: !4800, line: 385, type: !4944)
!4947 = !DILocalVariable(name: "psp", arg: 2, scope: !4941, file: !4800, line: 385, type: !4944)
!4948 = !DILocalVariable(name: "thread", scope: !4941, file: !4800, line: 388, type: !4949)
!4949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4950, size: 32)
!4950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4804)
!4951 = !DILocalVariable(name: "guard_len", scope: !4941, file: !4800, line: 405, type: !121)
!4952 = !DILocation(line: 0, scope: !4941)
!4953 = !DILocation(line: 388, column: 34, scope: !4941)
!4954 = !DILocation(line: 390, column: 13, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4941, file: !4800, line: 390, column: 6)
!4956 = !DILocation(line: 390, column: 6, scope: !4941)
!4957 = !DILocation(line: 438, column: 6, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4941, file: !4800, line: 438, column: 6)
!4959 = !DILocation(line: 438, column: 6, scope: !4941)
!4960 = !DILocation(line: 442, column: 3, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4958, file: !4800, line: 440, column: 22)
!4962 = !DILocation(line: 455, column: 1, scope: !4941)
!4963 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !4800, file: !4800, line: 530, type: !4964, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2354, retainedNodes: !4966)
!4964 = !DISubroutineType(types: !4965)
!4965 = !{null, !4803, !1017, !3033}
!4966 = !{!4967, !4968, !4969}
!4967 = !DILocalVariable(name: "main_thread", arg: 1, scope: !4963, file: !4800, line: 530, type: !4803)
!4968 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !4963, file: !4800, line: 530, type: !1017)
!4969 = !DILocalVariable(name: "_main", arg: 3, scope: !4963, file: !4800, line: 531, type: !3033)
!4970 = !DILocation(line: 0, scope: !4963)
!4971 = !DILocation(line: 535, column: 11, scope: !4963)
!4972 = !DILocation(line: 560, column: 2, scope: !4963)
!4973 = !DILocation(line: 576, column: 2, scope: !4963)
!4974 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!4975 = !DILocation(line: 603, column: 2, scope: !4963)
!4976 = distinct !DISubprogram(name: "z_arm_fault", scope: !4977, file: !4977, line: 1036, type: !4978, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !4993)
!4977 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4978 = !DISubroutineType(types: !4979)
!4979 = !{null, !121, !121, !121, !4980}
!4980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4981, size: 32)
!4981 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !297, line: 37, baseType: !4982)
!4982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !4983)
!4983 = !{!4984, !4985, !4986, !4987, !4988, !4989, !4990, !4991, !4992}
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4982, file: !297, line: 26, baseType: !121, size: 32)
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4982, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4982, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4982, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4982, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4982, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4982, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4982, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4982, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!4993 = !{!4994, !4995, !4996, !4997, !4998, !4999, !5000, !5001, !5002, !5003}
!4994 = !DILocalVariable(name: "msp", arg: 1, scope: !4976, file: !4977, line: 1036, type: !121)
!4995 = !DILocalVariable(name: "psp", arg: 2, scope: !4976, file: !4977, line: 1036, type: !121)
!4996 = !DILocalVariable(name: "exc_return", arg: 3, scope: !4976, file: !4977, line: 1036, type: !121)
!4997 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !4976, file: !4977, line: 1037, type: !4980)
!4998 = !DILocalVariable(name: "reason", scope: !4976, file: !4977, line: 1039, type: !121)
!4999 = !DILocalVariable(name: "fault", scope: !4976, file: !4977, line: 1040, type: !103)
!5000 = !DILocalVariable(name: "recoverable", scope: !4976, file: !4977, line: 1041, type: !170)
!5001 = !DILocalVariable(name: "nested_exc", scope: !4976, file: !4977, line: 1041, type: !170)
!5002 = !DILocalVariable(name: "esf", scope: !4976, file: !4977, line: 1042, type: !2425)
!5003 = !DILocalVariable(name: "esf_copy", scope: !4976, file: !4977, line: 1047, type: !2426)
!5004 = !DILocation(line: 0, scope: !4976)
!5005 = !DILocation(line: 1040, column: 19, scope: !4976)
!5006 = !DILocation(line: 1040, column: 24, scope: !4976)
!5007 = !DILocation(line: 1041, column: 2, scope: !4976)
!5008 = !DILocation(line: 1047, column: 2, scope: !4976)
!5009 = !DILocation(line: 1047, column: 15, scope: !4976)
!5010 = !DILocalVariable(name: "key", arg: 1, scope: !5011, file: !4510, line: 84, type: !32)
!5011 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4510, file: !4510, line: 84, type: !4521, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !5012)
!5012 = !{!5010}
!5013 = !DILocation(line: 0, scope: !5011, inlinedAt: !5014)
!5014 = distinct !DILocation(line: 1050, column: 2, scope: !4976)
!5015 = !DILocation(line: 95, column: 2, scope: !5011, inlinedAt: !5014)
!5016 = !{i64 1681476}
!5017 = !DILocation(line: 1055, column: 9, scope: !4976)
!5018 = !DILocation(line: 1063, column: 11, scope: !4976)
!5019 = !DILocation(line: 1064, column: 6, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !4976, file: !4977, line: 1064, column: 6)
!5021 = !{i8 0, i8 2}
!5022 = !DILocation(line: 1064, column: 6, scope: !4976)
!5023 = !DILocation(line: 1070, column: 20, scope: !4976)
!5024 = !DILocation(line: 1070, column: 2, scope: !4976)
!5025 = !DILocation(line: 1089, column: 6, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !4976, file: !4977, line: 1089, column: 6)
!5027 = !DILocation(line: 0, scope: !5026)
!5028 = !DILocation(line: 1089, column: 6, scope: !4976)
!5029 = !DILocation(line: 1090, column: 28, scope: !5030)
!5030 = distinct !DILexicalBlock(scope: !5031, file: !4977, line: 1090, column: 7)
!5031 = distinct !DILexicalBlock(scope: !5026, file: !4977, line: 1089, column: 18)
!5032 = !DILocation(line: 1090, column: 44, scope: !5030)
!5033 = !DILocation(line: 1090, column: 7, scope: !5031)
!5034 = !DILocation(line: 1091, column: 24, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5030, file: !4977, line: 1090, column: 50)
!5036 = !DILocation(line: 1092, column: 3, scope: !5035)
!5037 = !DILocation(line: 1094, column: 23, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5026, file: !4977, line: 1093, column: 9)
!5039 = !DILocation(line: 1097, column: 2, scope: !4976)
!5040 = !DILocation(line: 1098, column: 1, scope: !4976)
!5041 = distinct !DISubprogram(name: "get_esf", scope: !4977, file: !4977, line: 894, type: !5042, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !5045)
!5042 = !DISubroutineType(types: !5043)
!5043 = !{!2425, !121, !121, !121, !5044}
!5044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 32)
!5045 = !{!5046, !5047, !5048, !5049, !5050, !5051}
!5046 = !DILocalVariable(name: "msp", arg: 1, scope: !5041, file: !4977, line: 894, type: !121)
!5047 = !DILocalVariable(name: "psp", arg: 2, scope: !5041, file: !4977, line: 894, type: !121)
!5048 = !DILocalVariable(name: "exc_return", arg: 3, scope: !5041, file: !4977, line: 894, type: !121)
!5049 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !5041, file: !4977, line: 895, type: !5044)
!5050 = !DILocalVariable(name: "alternative_state_exc", scope: !5041, file: !4977, line: 897, type: !170)
!5051 = !DILocalVariable(name: "ptr_esf", scope: !5041, file: !4977, line: 898, type: !2425)
!5052 = !DILocation(line: 0, scope: !5041)
!5053 = !DILocation(line: 900, column: 14, scope: !5041)
!5054 = !DILocation(line: 902, column: 49, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5041, file: !4977, line: 902, column: 6)
!5056 = !DILocation(line: 902, column: 6, scope: !5041)
!5057 = !DILocation(line: 983, column: 18, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5041, file: !4977, line: 983, column: 6)
!5059 = !DILocation(line: 991, column: 7, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5061, file: !4977, line: 990, column: 30)
!5061 = distinct !DILexicalBlock(scope: !5041, file: !4977, line: 990, column: 6)
!5062 = !DILocation(line: 998, column: 16, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5064, file: !4977, line: 995, column: 10)
!5064 = distinct !DILexicalBlock(scope: !5060, file: !4977, line: 991, column: 7)
!5065 = !DILocation(line: 1002, column: 2, scope: !5041)
!5066 = !DILocation(line: 1003, column: 1, scope: !5041)
!5067 = distinct !DISubprogram(name: "fault_handle", scope: !4977, file: !4977, line: 786, type: !5068, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !5070)
!5068 = !DISubroutineType(types: !5069)
!5069 = !{!121, !2425, !103, !5044}
!5070 = !{!5071, !5072, !5073, !5074}
!5071 = !DILocalVariable(name: "esf", arg: 1, scope: !5067, file: !4977, line: 786, type: !2425)
!5072 = !DILocalVariable(name: "fault", arg: 2, scope: !5067, file: !4977, line: 786, type: !103)
!5073 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5067, file: !4977, line: 786, type: !5044)
!5074 = !DILocalVariable(name: "reason", scope: !5067, file: !4977, line: 788, type: !121)
!5075 = !DILocation(line: 0, scope: !5067)
!5076 = !DILocation(line: 790, column: 15, scope: !5067)
!5077 = !DILocation(line: 792, column: 2, scope: !5067)
!5078 = !DILocation(line: 794, column: 12, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5067, file: !4977, line: 792, column: 17)
!5080 = !DILocation(line: 795, column: 3, scope: !5079)
!5081 = !DILocation(line: 800, column: 12, scope: !5079)
!5082 = !DILocation(line: 801, column: 3, scope: !5079)
!5083 = !DILocation(line: 803, column: 12, scope: !5079)
!5084 = !DILocation(line: 804, column: 3, scope: !5079)
!5085 = !DILocation(line: 806, column: 12, scope: !5079)
!5086 = !DILocation(line: 807, column: 3, scope: !5079)
!5087 = !DILocation(line: 814, column: 3, scope: !5079)
!5088 = !DILocation(line: 815, column: 3, scope: !5079)
!5089 = !DILocation(line: 829, column: 2, scope: !5067)
!5090 = distinct !DISubprogram(name: "hard_fault", scope: !4977, file: !4977, line: 709, type: !5091, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !5093)
!5091 = !DISubroutineType(types: !5092)
!5092 = !{!121, !2425, !5044}
!5093 = !{!5094, !5095, !5096}
!5094 = !DILocalVariable(name: "esf", arg: 1, scope: !5090, file: !4977, line: 709, type: !2425)
!5095 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5090, file: !4977, line: 709, type: !5044)
!5096 = !DILocalVariable(name: "reason", scope: !5090, file: !4977, line: 711, type: !121)
!5097 = !DILocation(line: 0, scope: !5090)
!5098 = !DILocation(line: 732, column: 15, scope: !5090)
!5099 = !DILocation(line: 734, column: 12, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5090, file: !4977, line: 734, column: 6)
!5101 = !DILocation(line: 734, column: 17, scope: !5100)
!5102 = !DILocation(line: 734, column: 41, scope: !5100)
!5103 = !DILocation(line: 734, column: 6, scope: !5090)
!5104 = !DILocation(line: 736, column: 19, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5100, file: !4977, line: 736, column: 13)
!5106 = !DILocation(line: 736, column: 49, scope: !5105)
!5107 = !DILocation(line: 736, column: 13, scope: !5100)
!5108 = !DILocation(line: 738, column: 19, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5105, file: !4977, line: 738, column: 13)
!5110 = !DILocation(line: 738, column: 24, scope: !5109)
!5111 = !DILocation(line: 738, column: 47, scope: !5109)
!5112 = !DILocation(line: 738, column: 13, scope: !5105)
!5113 = !DILocation(line: 740, column: 7, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5115, file: !4977, line: 740, column: 7)
!5115 = distinct !DILexicalBlock(scope: !5109, file: !4977, line: 738, column: 53)
!5116 = !DILocation(line: 740, column: 7, scope: !5115)
!5117 = !DILocation(line: 742, column: 24, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5114, file: !4977, line: 740, column: 38)
!5119 = !DILocation(line: 743, column: 3, scope: !5118)
!5120 = !DILocation(line: 743, column: 20, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5114, file: !4977, line: 743, column: 14)
!5122 = !DILocation(line: 743, column: 25, scope: !5121)
!5123 = !DILocation(line: 743, column: 52, scope: !5121)
!5124 = !DILocation(line: 743, column: 14, scope: !5114)
!5125 = !DILocation(line: 744, column: 13, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5121, file: !4977, line: 743, column: 58)
!5127 = !DILocation(line: 745, column: 3, scope: !5126)
!5128 = !DILocation(line: 745, column: 20, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !5121, file: !4977, line: 745, column: 14)
!5130 = !DILocation(line: 745, column: 25, scope: !5129)
!5131 = !DILocation(line: 745, column: 52, scope: !5129)
!5132 = !DILocation(line: 745, column: 14, scope: !5121)
!5133 = !DILocation(line: 746, column: 13, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5129, file: !4977, line: 745, column: 58)
!5135 = !DILocation(line: 747, column: 3, scope: !5134)
!5136 = !DILocation(line: 747, column: 20, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5129, file: !4977, line: 747, column: 14)
!5138 = !DILocation(line: 747, column: 52, scope: !5137)
!5139 = !DILocation(line: 747, column: 14, scope: !5129)
!5140 = !DILocation(line: 748, column: 13, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5137, file: !4977, line: 747, column: 58)
!5142 = !DILocation(line: 753, column: 3, scope: !5141)
!5143 = !DILocation(line: 766, column: 2, scope: !5090)
!5144 = distinct !DISubprogram(name: "mem_manage_fault", scope: !4977, file: !4977, line: 229, type: !5068, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !5145)
!5145 = !{!5146, !5147, !5148, !5149, !5150, !5151, !5154}
!5146 = !DILocalVariable(name: "esf", arg: 1, scope: !5144, file: !4977, line: 229, type: !2425)
!5147 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5144, file: !4977, line: 229, type: !103)
!5148 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5144, file: !4977, line: 230, type: !5044)
!5149 = !DILocalVariable(name: "reason", scope: !5144, file: !4977, line: 232, type: !121)
!5150 = !DILocalVariable(name: "mmfar", scope: !5144, file: !4977, line: 233, type: !121)
!5151 = !DILocalVariable(name: "temp", scope: !5152, file: !4977, line: 254, type: !121)
!5152 = distinct !DILexicalBlock(scope: !5153, file: !4977, line: 244, column: 48)
!5153 = distinct !DILexicalBlock(scope: !5144, file: !4977, line: 244, column: 6)
!5154 = !DILocalVariable(name: "min_stack_ptr", scope: !5155, file: !4977, line: 309, type: !121)
!5155 = distinct !DILexicalBlock(scope: !5156, file: !4977, line: 308, column: 43)
!5156 = distinct !DILexicalBlock(scope: !5157, file: !4977, line: 308, column: 7)
!5157 = distinct !DILexicalBlock(scope: !5158, file: !4977, line: 289, column: 40)
!5158 = distinct !DILexicalBlock(scope: !5144, file: !4977, line: 288, column: 6)
!5159 = !DILocation(line: 0, scope: !5144)
!5160 = !DILocation(line: 237, column: 12, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5144, file: !4977, line: 237, column: 6)
!5162 = !DILocation(line: 241, column: 12, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5144, file: !4977, line: 241, column: 6)
!5164 = !DILocation(line: 244, column: 12, scope: !5153)
!5165 = !DILocation(line: 244, column: 17, scope: !5153)
!5166 = !DILocation(line: 244, column: 42, scope: !5153)
!5167 = !DILocation(line: 244, column: 6, scope: !5144)
!5168 = !DILocation(line: 254, column: 24, scope: !5152)
!5169 = !DILocation(line: 0, scope: !5152)
!5170 = !DILocation(line: 256, column: 13, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5152, file: !4977, line: 256, column: 7)
!5172 = !DILocation(line: 256, column: 18, scope: !5171)
!5173 = !DILocation(line: 256, column: 44, scope: !5171)
!5174 = !DILocation(line: 256, column: 7, scope: !5152)
!5175 = !DILocation(line: 259, column: 24, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5177, file: !4977, line: 259, column: 8)
!5177 = distinct !DILexicalBlock(scope: !5171, file: !4977, line: 256, column: 50)
!5178 = !DILocation(line: 259, column: 8, scope: !5177)
!5179 = !DILocation(line: 261, column: 15, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5176, file: !4977, line: 259, column: 30)
!5181 = !DILocation(line: 262, column: 4, scope: !5180)
!5182 = !DILocation(line: 265, column: 12, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5144, file: !4977, line: 265, column: 6)
!5184 = !DILocation(line: 288, column: 12, scope: !5158)
!5185 = !DILocation(line: 288, column: 17, scope: !5158)
!5186 = !DILocation(line: 288, column: 41, scope: !5158)
!5187 = !DILocation(line: 289, column: 9, scope: !5158)
!5188 = !DILocation(line: 289, column: 14, scope: !5158)
!5189 = !DILocation(line: 288, column: 6, scope: !5144)
!5190 = !DILocation(line: 308, column: 12, scope: !5156)
!5191 = !DILocation(line: 308, column: 17, scope: !5156)
!5192 = !DILocation(line: 308, column: 7, scope: !5157)
!5193 = !DILocation(line: 310, column: 6, scope: !5155)
!5194 = !DILocation(line: 309, column: 29, scope: !5155)
!5195 = !DILocation(line: 0, scope: !5155)
!5196 = !DILocation(line: 312, column: 8, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5155, file: !4977, line: 312, column: 8)
!5198 = !DILocation(line: 312, column: 8, scope: !5155)
!5199 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !5200, file: !4701, line: 1099, type: !121)
!5200 = distinct !DISubprogram(name: "__set_PSP", scope: !4701, file: !4701, line: 1099, type: !4534, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !5201)
!5201 = !{!5199}
!5202 = !DILocation(line: 0, scope: !5200, inlinedAt: !5203)
!5203 = distinct !DILocation(line: 338, column: 5, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5197, file: !4977, line: 312, column: 23)
!5205 = !DILocation(line: 1101, column: 3, scope: !5200, inlinedAt: !5203)
!5206 = !{i64 2476201}
!5207 = !DILocation(line: 341, column: 4, scope: !5204)
!5208 = !DILocation(line: 366, column: 12, scope: !5144)
!5209 = !DILocation(line: 369, column: 15, scope: !5144)
!5210 = !DILocation(line: 371, column: 2, scope: !5144)
!5211 = distinct !DISubprogram(name: "bus_fault", scope: !4977, file: !4977, line: 383, type: !5212, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !5214)
!5212 = !DISubroutineType(types: !5213)
!5213 = !{!103, !2425, !103, !5044}
!5214 = !{!5215, !5216, !5217, !5218, !5219}
!5215 = !DILocalVariable(name: "esf", arg: 1, scope: !5211, file: !4977, line: 383, type: !2425)
!5216 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !5211, file: !4977, line: 383, type: !103)
!5217 = !DILocalVariable(name: "recoverable", arg: 3, scope: !5211, file: !4977, line: 383, type: !5044)
!5218 = !DILocalVariable(name: "reason", scope: !5211, file: !4977, line: 385, type: !121)
!5219 = !DILocalVariable(name: "bfar", scope: !5220, file: !4977, line: 405, type: !121)
!5220 = distinct !DILexicalBlock(scope: !5221, file: !4977, line: 395, column: 42)
!5221 = distinct !DILexicalBlock(scope: !5211, file: !4977, line: 395, column: 6)
!5222 = !DILocation(line: 0, scope: !5211)
!5223 = !DILocation(line: 389, column: 11, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5211, file: !4977, line: 389, column: 6)
!5225 = !DILocation(line: 392, column: 11, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5211, file: !4977, line: 392, column: 6)
!5227 = !DILocation(line: 395, column: 11, scope: !5221)
!5228 = !DILocation(line: 395, column: 16, scope: !5221)
!5229 = !DILocation(line: 395, column: 6, scope: !5211)
!5230 = !DILocation(line: 405, column: 3, scope: !5220)
!5231 = !DILocation(line: 0, scope: !5220)
!5232 = !DILocation(line: 407, column: 13, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5220, file: !4977, line: 407, column: 7)
!5234 = !DILocation(line: 407, column: 18, scope: !5233)
!5235 = !DILocation(line: 407, column: 44, scope: !5233)
!5236 = !DILocation(line: 407, column: 7, scope: !5220)
!5237 = !DILocation(line: 411, column: 15, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5239, file: !4977, line: 409, column: 30)
!5239 = distinct !DILexicalBlock(scope: !5240, file: !4977, line: 409, column: 8)
!5240 = distinct !DILexicalBlock(scope: !5233, file: !4977, line: 407, column: 50)
!5241 = !DILocation(line: 412, column: 4, scope: !5238)
!5242 = !DILocation(line: 415, column: 11, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5211, file: !4977, line: 415, column: 6)
!5244 = !DILocation(line: 418, column: 12, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5211, file: !4977, line: 418, column: 6)
!5246 = !DILocation(line: 524, column: 12, scope: !5211)
!5247 = !DILocation(line: 526, column: 15, scope: !5211)
!5248 = !DILocation(line: 528, column: 2, scope: !5211)
!5249 = distinct !DISubprogram(name: "usage_fault", scope: !4977, file: !4977, line: 539, type: !5250, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !5254)
!5250 = !DISubroutineType(types: !5251)
!5251 = !{!121, !5252}
!5252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5253, size: 32)
!5253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2426)
!5254 = !{!5255, !5256}
!5255 = !DILocalVariable(name: "esf", arg: 1, scope: !5249, file: !4977, line: 539, type: !5252)
!5256 = !DILocalVariable(name: "reason", scope: !5249, file: !4977, line: 541, type: !121)
!5257 = !DILocation(line: 0, scope: !5249)
!5258 = !DILocation(line: 546, column: 12, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5249, file: !4977, line: 546, column: 6)
!5260 = !DILocation(line: 549, column: 12, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5249, file: !4977, line: 549, column: 6)
!5262 = !DILocation(line: 567, column: 12, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5249, file: !4977, line: 567, column: 6)
!5264 = !DILocation(line: 570, column: 12, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5249, file: !4977, line: 570, column: 6)
!5266 = !DILocation(line: 573, column: 12, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5249, file: !4977, line: 573, column: 6)
!5268 = !DILocation(line: 576, column: 12, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5249, file: !4977, line: 576, column: 6)
!5270 = !DILocation(line: 581, column: 12, scope: !5249)
!5271 = !DILocation(line: 583, column: 2, scope: !5249)
!5272 = distinct !DISubprogram(name: "debug_monitor", scope: !4977, file: !4977, line: 632, type: !5273, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !5275)
!5273 = !DISubroutineType(types: !5274)
!5274 = !{null, !2425, !5044}
!5275 = !{!5276, !5277}
!5276 = !DILocalVariable(name: "esf", arg: 1, scope: !5272, file: !4977, line: 632, type: !2425)
!5277 = !DILocalVariable(name: "recoverable", arg: 2, scope: !5272, file: !4977, line: 632, type: !5044)
!5278 = !DILocation(line: 0, scope: !5272)
!5279 = !DILocation(line: 634, column: 15, scope: !5272)
!5280 = !DILocation(line: 652, column: 1, scope: !5272)
!5281 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !4977, file: !4977, line: 658, type: !5282, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !5284)
!5282 = !DISubroutineType(types: !5283)
!5283 = !{!170, !2425}
!5284 = !{!5285, !5286, !5287}
!5285 = !DILocalVariable(name: "esf", arg: 1, scope: !5281, file: !4977, line: 658, type: !2425)
!5286 = !DILocalVariable(name: "ret_addr", scope: !5281, file: !4977, line: 660, type: !2468)
!5287 = !DILocalVariable(name: "fault_insn", scope: !5281, file: !4977, line: 686, type: !278)
!5288 = !DILocation(line: 0, scope: !5281)
!5289 = !DILocation(line: 660, column: 46, scope: !5281)
!5290 = !DILocation(line: 660, column: 23, scope: !5281)
!5291 = !DILocation(line: 682, column: 11, scope: !5281)
!5292 = !DILocation(line: 271, column: 3, scope: !5293, inlinedAt: !5294)
!5293 = distinct !DISubprogram(name: "__DSB", scope: !4701, file: !4701, line: 269, type: !2730, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !335)
!5294 = distinct !DILocation(line: 683, column: 2, scope: !5281)
!5295 = !{i64 2452336}
!5296 = !DILocation(line: 260, column: 3, scope: !5297, inlinedAt: !5298)
!5297 = distinct !DISubprogram(name: "__ISB", scope: !4701, file: !4701, line: 258, type: !2730, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !335)
!5298 = distinct !DILocation(line: 684, column: 2, scope: !5281)
!5299 = !{i64 2452053}
!5300 = !DILocation(line: 686, column: 35, scope: !5281)
!5301 = !DILocation(line: 686, column: 24, scope: !5281)
!5302 = !DILocation(line: 688, column: 11, scope: !5281)
!5303 = !DILocation(line: 271, column: 3, scope: !5293, inlinedAt: !5304)
!5304 = distinct !DILocation(line: 689, column: 2, scope: !5281)
!5305 = !DILocation(line: 260, column: 3, scope: !5297, inlinedAt: !5306)
!5306 = distinct !DILocation(line: 690, column: 2, scope: !5281)
!5307 = !DILocation(line: 693, column: 45, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5281, file: !4977, line: 693, column: 6)
!5309 = !DILocation(line: 699, column: 1, scope: !5281)
!5310 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !4977, file: !4977, line: 1107, type: !2730, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2397, retainedNodes: !335)
!5311 = !DILocation(line: 1111, column: 11, scope: !5310)
!5312 = !DILocation(line: 1136, column: 1, scope: !5310)
!5313 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !5314, file: !5314, line: 26, type: !2730, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2469, retainedNodes: !5315)
!5314 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5315 = !{!5316}
!5316 = !DILocalVariable(name: "irq", scope: !5313, file: !5314, line: 28, type: !103)
!5317 = !DILocation(line: 0, scope: !5313)
!5318 = !DILocation(line: 30, column: 2, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5313, file: !5314, line: 30, column: 2)
!5320 = !DILocation(line: 31, column: 3, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5322, file: !5314, line: 30, column: 39)
!5322 = distinct !DILexicalBlock(scope: !5319, file: !5314, line: 30, column: 2)
!5323 = !DILocation(line: 30, column: 35, scope: !5322)
!5324 = !DILocation(line: 30, column: 13, scope: !5322)
!5325 = distinct !{!5325, !5318, !5326}
!5326 = !DILocation(line: 32, column: 2, scope: !5319)
!5327 = !DILocation(line: 33, column: 1, scope: !5313)
!5328 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !369, file: !369, line: 1638, type: !4735, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2469, retainedNodes: !5329)
!5329 = !{!5330, !5331}
!5330 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5328, file: !369, line: 1638, type: !693)
!5331 = !DILocalVariable(name: "priority", arg: 2, scope: !5328, file: !369, line: 1638, type: !121)
!5332 = !DILocation(line: 0, scope: !5328)
!5333 = !DILocation(line: 1640, column: 7, scope: !5328)
!5334 = !DILocation(line: 0, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5328, file: !369, line: 1640, column: 7)
!5336 = !DILocation(line: 1648, column: 1, scope: !5328)
!5337 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !5338, file: !5338, line: 27, type: !5339, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5442)
!5338 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5339 = !DISubroutineType(types: !5340)
!5340 = !{null, !5341}
!5341 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !224, line: 347, baseType: !5342)
!5342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5343, size: 32)
!5343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !224, line: 245, size: 1024, elements: !5344)
!5344 = !{!5345, !5403, !5415, !5416, !5417, !5418, !5424, !5437}
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5343, file: !224, line: 247, baseType: !5346, size: 384)
!5346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !224, line: 57, size: 384, elements: !5347)
!5347 = !{!5348, !5372, !5379, !5380, !5381, !5390, !5391, !5392}
!5348 = !DIDerivedType(tag: DW_TAG_member, scope: !5346, file: !224, line: 60, baseType: !5349, size: 64)
!5349 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5346, file: !224, line: 60, size: 64, elements: !5350)
!5350 = !{!5351, !5366}
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5349, file: !224, line: 61, baseType: !5352, size: 64)
!5352 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !234, line: 49, baseType: !5353)
!5353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !5354)
!5354 = !{!5355, !5361}
!5355 = !DIDerivedType(tag: DW_TAG_member, scope: !5353, file: !234, line: 38, baseType: !5356, size: 32)
!5356 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5353, file: !234, line: 38, size: 32, elements: !5357)
!5357 = !{!5358, !5360}
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5356, file: !234, line: 39, baseType: !5359, size: 32)
!5359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5353, size: 32)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5356, file: !234, line: 40, baseType: !5359, size: 32)
!5361 = !DIDerivedType(tag: DW_TAG_member, scope: !5353, file: !234, line: 42, baseType: !5362, size: 32, offset: 32)
!5362 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5353, file: !234, line: 42, size: 32, elements: !5363)
!5363 = !{!5364, !5365}
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5362, file: !234, line: 43, baseType: !5359, size: 32)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5362, file: !234, line: 44, baseType: !5359, size: 32)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5349, file: !224, line: 62, baseType: !5367, size: 64)
!5367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !250, line: 49, size: 64, elements: !5368)
!5368 = !{!5369}
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5367, file: !250, line: 50, baseType: !5370, size: 64)
!5370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5371, size: 64, elements: !255)
!5371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5367, size: 32)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5346, file: !224, line: 68, baseType: !5373, size: 32, offset: 64)
!5373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5374, size: 32)
!5374 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !260, line: 233, baseType: !5375)
!5375 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !260, line: 231, size: 64, elements: !5376)
!5376 = !{!5377}
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5375, file: !260, line: 232, baseType: !5378, size: 64)
!5378 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !5353)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5346, file: !224, line: 71, baseType: !167, size: 8, offset: 96)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5346, file: !224, line: 74, baseType: !167, size: 8, offset: 104)
!5381 = !DIDerivedType(tag: DW_TAG_member, scope: !5346, file: !224, line: 90, baseType: !5382, size: 16, offset: 112)
!5382 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5346, file: !224, line: 90, size: 16, elements: !5383)
!5383 = !{!5384, !5389}
!5384 = !DIDerivedType(tag: DW_TAG_member, scope: !5382, file: !224, line: 91, baseType: !5385, size: 16)
!5385 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5382, file: !224, line: 91, size: 16, elements: !5386)
!5386 = !{!5387, !5388}
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5385, file: !224, line: 96, baseType: !274, size: 8)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5385, file: !224, line: 97, baseType: !167, size: 8, offset: 8)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5382, file: !224, line: 100, baseType: !278, size: 16)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5346, file: !224, line: 107, baseType: !121, size: 32, offset: 128)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5346, file: !224, line: 127, baseType: !102, size: 32, offset: 160)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5346, file: !224, line: 131, baseType: !5393, size: 192, offset: 192)
!5393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !260, line: 244, size: 192, elements: !5394)
!5394 = !{!5395, !5396, !5402}
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5393, file: !260, line: 245, baseType: !5352, size: 64)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5393, file: !260, line: 246, baseType: !5397, size: 32, offset: 64)
!5397 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !260, line: 242, baseType: !5398)
!5398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5399, size: 32)
!5399 = !DISubroutineType(types: !5400)
!5400 = !{null, !5401}
!5401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5393, size: 32)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5393, file: !260, line: 249, baseType: !293, size: 64, offset: 128)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5343, file: !224, line: 250, baseType: !5404, size: 288, offset: 384)
!5404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !5405)
!5405 = !{!5406, !5407, !5408, !5409, !5410, !5411, !5412, !5413, !5414}
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5404, file: !297, line: 26, baseType: !121, size: 32)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5404, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5404, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5404, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5404, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5404, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5404, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5404, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5404, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5343, file: !224, line: 253, baseType: !102, size: 32, offset: 672)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5343, file: !224, line: 256, baseType: !5374, size: 64, offset: 704)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5343, file: !224, line: 294, baseType: !103, size: 32, offset: 768)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5343, file: !224, line: 300, baseType: !5419, size: 96, offset: 800)
!5419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !224, line: 149, size: 96, elements: !5420)
!5420 = !{!5421, !5422, !5423}
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5419, file: !224, line: 153, baseType: !22, size: 32)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5419, file: !224, line: 162, baseType: !213, size: 32, offset: 32)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5419, file: !224, line: 168, baseType: !213, size: 32, offset: 64)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5343, file: !224, line: 325, baseType: !5425, size: 32, offset: 896)
!5425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5426, size: 32)
!5426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !320, line: 5073, size: 160, elements: !5427)
!5427 = !{!5428, !5434, !5435}
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5426, file: !320, line: 5074, baseType: !5429, size: 96)
!5429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !5430)
!5430 = !{!5431, !5432, !5433}
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5429, file: !324, line: 57, baseType: !327, size: 32)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5429, file: !324, line: 58, baseType: !102, size: 32, offset: 32)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5429, file: !324, line: 59, baseType: !213, size: 32, offset: 64)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5426, file: !320, line: 5075, baseType: !5374, size: 64, offset: 96)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5426, file: !320, line: 5076, baseType: !5436, offset: 160)
!5436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5343, file: !224, line: 343, baseType: !5438, size: 64, offset: 928)
!5438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !297, line: 60, size: 64, elements: !5439)
!5439 = !{!5440, !5441}
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5438, file: !297, line: 63, baseType: !121, size: 32)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5438, file: !297, line: 66, baseType: !121, size: 32, offset: 32)
!5442 = !{!5443}
!5443 = !DILocalVariable(name: "thread", arg: 1, scope: !5337, file: !5338, line: 27, type: !5341)
!5444 = !DILocation(line: 0, scope: !5337)
!5445 = !DILocation(line: 29, column: 6, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5337, file: !5338, line: 29, column: 6)
!5447 = !DILocation(line: 29, column: 15, scope: !5446)
!5448 = !DILocation(line: 29, column: 6, scope: !5337)
!5449 = !DILocation(line: 1031, column: 3, scope: !5450, inlinedAt: !5455)
!5450 = distinct !DISubprogram(name: "__get_IPSR", scope: !4701, file: !4701, line: 1027, type: !5451, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !5453)
!5451 = !DISubroutineType(types: !5452)
!5452 = !{!121}
!5453 = !{!5454}
!5454 = !DILocalVariable(name: "result", scope: !5450, file: !4701, line: 1029, type: !121)
!5455 = distinct !DILocation(line: 48, column: 10, scope: !5456, inlinedAt: !5460)
!5456 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5457, file: !5457, line: 46, type: !5458, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !335)
!5457 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5458 = !DISubroutineType(types: !5459)
!5459 = !{!170}
!5460 = distinct !DILocation(line: 30, column: 7, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5462, file: !5338, line: 30, column: 7)
!5462 = distinct !DILexicalBlock(scope: !5446, file: !5338, line: 29, column: 26)
!5463 = !{i64 2441184}
!5464 = !DILocation(line: 0, scope: !5450, inlinedAt: !5455)
!5465 = !DILocation(line: 48, column: 9, scope: !5456, inlinedAt: !5460)
!5466 = !DILocation(line: 30, column: 7, scope: !5462)
!5467 = !DILocation(line: 42, column: 14, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5461, file: !5338, line: 30, column: 25)
!5469 = !DILocation(line: 48, column: 15, scope: !5468)
!5470 = !DILocation(line: 49, column: 3, scope: !5468)
!5471 = !DILocation(line: 52, column: 2, scope: !5337)
!5472 = !DILocation(line: 53, column: 1, scope: !5337)
!5473 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !219, file: !219, line: 127, type: !2730, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !210, retainedNodes: !335)
!5474 = !DILocation(line: 134, column: 2, scope: !5473)
!5475 = !DILocation(line: 156, column: 1, scope: !5473)
!5476 = !DILocation(line: 0, scope: !218)
!5477 = !DILocation(line: 289, column: 36, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !218, file: !219, line: 285, column: 2)
!5479 = !DILocation(line: 289, column: 42, scope: !5478)
!5480 = !DILocation(line: 300, column: 36, scope: !218)
!5481 = !DILocation(line: 301, column: 35, scope: !218)
!5482 = !DILocation(line: 302, column: 37, scope: !218)
!5483 = !DILocation(line: 311, column: 2, scope: !218)
!5484 = !DILocation(line: 316, column: 1, scope: !218)
!5485 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !397, file: !397, line: 180, type: !2730, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !335)
!5486 = !DILocation(line: 188, column: 12, scope: !5485)
!5487 = !DILocation(line: 271, column: 3, scope: !5488, inlinedAt: !5489)
!5488 = distinct !DISubprogram(name: "__DSB", scope: !4701, file: !4701, line: 269, type: !2730, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !335)
!5489 = distinct !DILocation(line: 192, column: 2, scope: !5485)
!5490 = !{i64 2597035}
!5491 = !DILocation(line: 260, column: 3, scope: !5492, inlinedAt: !5493)
!5492 = distinct !DISubprogram(name: "__ISB", scope: !4701, file: !4701, line: 258, type: !2730, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !335)
!5493 = distinct !DILocation(line: 193, column: 2, scope: !5485)
!5494 = !{i64 2596752}
!5495 = !DILocation(line: 194, column: 1, scope: !5485)
!5496 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !397, file: !397, line: 199, type: !2730, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !335)
!5497 = !DILocation(line: 282, column: 3, scope: !5498, inlinedAt: !5499)
!5498 = distinct !DISubprogram(name: "__DMB", scope: !4701, file: !4701, line: 280, type: !2730, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !335)
!5499 = distinct !DILocation(line: 202, column: 2, scope: !5496)
!5500 = !{i64 2597311}
!5501 = !DILocation(line: 205, column: 12, scope: !5496)
!5502 = !DILocation(line: 206, column: 1, scope: !5496)
!5503 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !397, file: !397, line: 275, type: !5504, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !5517)
!5504 = !DISubroutineType(types: !5505)
!5505 = !{null, !5506, !1643, !4944, !4944}
!5506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5507, size: 32)
!5507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5508)
!5508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !348, line: 52, size: 96, elements: !5509)
!5509 = !{!5510, !5511, !5512}
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5508, file: !348, line: 53, baseType: !22, size: 32)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5508, file: !348, line: 54, baseType: !213, size: 32, offset: 32)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5508, file: !348, line: 55, baseType: !5513, size: 32, offset: 64)
!5513 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !354, line: 151, baseType: !5514)
!5514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !354, line: 149, size: 32, elements: !5515)
!5515 = !{!5516}
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !5514, file: !354, line: 150, baseType: !121, size: 32)
!5517 = !{!5518, !5519, !5520, !5521}
!5518 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5503, file: !397, line: 276, type: !5506)
!5519 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5503, file: !397, line: 276, type: !1643)
!5520 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !5503, file: !397, line: 277, type: !4944)
!5521 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5503, file: !397, line: 277, type: !4944)
!5522 = !DILocation(line: 0, scope: !5503)
!5523 = !DILocation(line: 279, column: 6, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5503, file: !397, line: 279, column: 6)
!5525 = !DILocation(line: 285, column: 1, scope: !5503)
!5526 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !5527, file: !5527, line: 220, type: !5528, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !5530)
!5527 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5528 = !DISubroutineType(types: !5529)
!5529 = !{!103, !5506, !1643, !4944, !4944}
!5530 = !{!5531, !5532, !5533, !5534, !5535}
!5531 = !DILocalVariable(name: "static_regions", arg: 1, scope: !5526, file: !5527, line: 221, type: !5506)
!5532 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5526, file: !5527, line: 221, type: !1643)
!5533 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !5526, file: !5527, line: 222, type: !4944)
!5534 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !5526, file: !5527, line: 223, type: !4944)
!5535 = !DILocalVariable(name: "mpu_reg_index", scope: !5526, file: !5527, line: 225, type: !103)
!5536 = !DILocation(line: 0, scope: !5526)
!5537 = !DILocation(line: 225, column: 22, scope: !5526)
!5538 = !DILocation(line: 233, column: 18, scope: !5526)
!5539 = !DILocation(line: 236, column: 23, scope: !5526)
!5540 = !DILocation(line: 236, column: 21, scope: !5526)
!5541 = !DILocation(line: 238, column: 2, scope: !5526)
!5542 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !397, file: !397, line: 105, type: !5543, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !5545)
!5543 = !DISubroutineType(types: !5544)
!5544 = !{!103, !5506, !167, !167, !170}
!5545 = !{!5546, !5547, !5548, !5549, !5550, !5551}
!5546 = !DILocalVariable(name: "regions", arg: 1, scope: !5542, file: !397, line: 106, type: !5506)
!5547 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5542, file: !397, line: 106, type: !167)
!5548 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !5542, file: !397, line: 106, type: !167)
!5549 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !5542, file: !397, line: 107, type: !170)
!5550 = !DILocalVariable(name: "i", scope: !5542, file: !397, line: 109, type: !103)
!5551 = !DILocalVariable(name: "reg_index", scope: !5542, file: !397, line: 110, type: !103)
!5552 = !DILocation(line: 0, scope: !5542)
!5553 = !DILocation(line: 110, column: 18, scope: !5542)
!5554 = !DILocation(line: 112, column: 16, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5556, file: !397, line: 112, column: 2)
!5556 = distinct !DILexicalBlock(scope: !5542, file: !397, line: 112, column: 2)
!5557 = !DILocation(line: 112, column: 2, scope: !5556)
!5558 = !DILocation(line: 113, column: 7, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5560, file: !397, line: 113, column: 7)
!5560 = distinct !DILexicalBlock(scope: !5555, file: !397, line: 112, column: 36)
!5561 = !DILocation(line: 113, column: 18, scope: !5559)
!5562 = !DILocation(line: 113, column: 23, scope: !5559)
!5563 = !DILocation(line: 113, column: 7, scope: !5560)
!5564 = !DILocation(line: 118, column: 23, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5560, file: !397, line: 118, column: 7)
!5566 = !DILocation(line: 119, column: 7, scope: !5565)
!5567 = !DILocation(line: 118, column: 7, scope: !5560)
!5568 = !DILocation(line: 124, column: 36, scope: !5560)
!5569 = !DILocation(line: 124, column: 15, scope: !5560)
!5570 = !DILocation(line: 126, column: 17, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5560, file: !397, line: 126, column: 7)
!5572 = !DILocation(line: 126, column: 7, scope: !5560)
!5573 = !DILocation(line: 131, column: 12, scope: !5560)
!5574 = !DILocation(line: 132, column: 2, scope: !5560)
!5575 = !DILocation(line: 112, column: 32, scope: !5555)
!5576 = distinct !{!5576, !5557, !5577}
!5577 = !DILocation(line: 132, column: 2, scope: !5556)
!5578 = !DILocation(line: 135, column: 1, scope: !5542)
!5579 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !5527, file: !5527, line: 63, type: !5580, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !5582)
!5580 = !DISubroutineType(types: !5581)
!5581 = !{!103, !5506}
!5582 = !{!5583, !5584}
!5583 = !DILocalVariable(name: "part", arg: 1, scope: !5579, file: !5527, line: 63, type: !5506)
!5584 = !DILocalVariable(name: "partition_is_valid", scope: !5579, file: !5527, line: 70, type: !103)
!5585 = !DILocation(line: 0, scope: !5579)
!5586 = !DILocation(line: 71, column: 11, scope: !5579)
!5587 = !DILocation(line: 71, column: 37, scope: !5579)
!5588 = !{i32 0, i32 33}
!5589 = !DILocation(line: 72, column: 3, scope: !5579)
!5590 = !DILocation(line: 71, column: 30, scope: !5579)
!5591 = !DILocation(line: 75, column: 11, scope: !5579)
!5592 = !DILocation(line: 75, column: 17, scope: !5579)
!5593 = !DILocation(line: 75, column: 38, scope: !5579)
!5594 = !DILocation(line: 77, column: 2, scope: !5579)
!5595 = distinct !DISubprogram(name: "mpu_configure_region", scope: !397, file: !397, line: 79, type: !5596, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !5598)
!5596 = !DISubroutineType(types: !5597)
!5597 = !{!103, !1643, !5506}
!5598 = !{!5599, !5600, !5601}
!5599 = !DILocalVariable(name: "index", arg: 1, scope: !5595, file: !397, line: 79, type: !1643)
!5600 = !DILocalVariable(name: "new_region", arg: 2, scope: !5595, file: !397, line: 80, type: !5506)
!5601 = !DILocalVariable(name: "region_conf", scope: !5595, file: !397, line: 82, type: !386)
!5602 = !DILocation(line: 0, scope: !5595)
!5603 = !DILocation(line: 82, column: 2, scope: !5595)
!5604 = !DILocation(line: 82, column: 24, scope: !5595)
!5605 = !DILocation(line: 87, column: 33, scope: !5595)
!5606 = !DILocation(line: 87, column: 14, scope: !5595)
!5607 = !DILocation(line: 87, column: 19, scope: !5595)
!5608 = !DILocation(line: 91, column: 55, scope: !5595)
!5609 = !DILocation(line: 92, column: 16, scope: !5595)
!5610 = !DILocation(line: 92, column: 53, scope: !5595)
!5611 = !DILocation(line: 91, column: 2, scope: !5595)
!5612 = !DILocation(line: 95, column: 9, scope: !5595)
!5613 = !DILocation(line: 97, column: 1, scope: !5595)
!5614 = !DILocation(line: 95, column: 2, scope: !5595)
!5615 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !5527, file: !5527, line: 113, type: !5616, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !5621)
!5616 = !DISubroutineType(types: !5617)
!5617 = !{null, !5618, !5619, !121, !121}
!5618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 32)
!5619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5620, size: 32)
!5620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5513)
!5621 = !{!5622, !5623, !5624, !5625}
!5622 = !DILocalVariable(name: "p_attr", arg: 1, scope: !5615, file: !5527, line: 114, type: !5618)
!5623 = !DILocalVariable(name: "attr", arg: 2, scope: !5615, file: !5527, line: 115, type: !5619)
!5624 = !DILocalVariable(name: "base", arg: 3, scope: !5615, file: !5527, line: 115, type: !121)
!5625 = !DILocalVariable(name: "size", arg: 4, scope: !5615, file: !5527, line: 115, type: !121)
!5626 = !DILocation(line: 0, scope: !5615)
!5627 = !DILocation(line: 127, column: 23, scope: !5615)
!5628 = !DILocation(line: 127, column: 35, scope: !5615)
!5629 = !DILocation(line: 127, column: 33, scope: !5615)
!5630 = !DILocation(line: 127, column: 10, scope: !5615)
!5631 = !DILocation(line: 127, column: 15, scope: !5615)
!5632 = !DILocation(line: 129, column: 1, scope: !5615)
!5633 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !397, file: !397, line: 57, type: !5634, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !5636)
!5634 = !DISubroutineType(types: !5635)
!5635 = !{!103, !1643, !384}
!5636 = !{!5637, !5638}
!5637 = !DILocalVariable(name: "index", arg: 1, scope: !5633, file: !397, line: 57, type: !1643)
!5638 = !DILocalVariable(name: "region_conf", arg: 2, scope: !5633, file: !397, line: 58, type: !384)
!5639 = !DILocation(line: 0, scope: !5633)
!5640 = !DILocation(line: 61, column: 6, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5633, file: !397, line: 61, column: 6)
!5642 = !DILocation(line: 61, column: 12, scope: !5641)
!5643 = !DILocation(line: 61, column: 6, scope: !5633)
!5644 = !DILocation(line: 71, column: 2, scope: !5633)
!5645 = !DILocation(line: 73, column: 2, scope: !5633)
!5646 = !DILocation(line: 74, column: 1, scope: !5633)
!5647 = distinct !DISubprogram(name: "region_init", scope: !5527, file: !5527, line: 29, type: !5648, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !5650)
!5648 = !DISubroutineType(types: !5649)
!5649 = !{null, !4944, !384}
!5650 = !{!5651, !5652}
!5651 = !DILocalVariable(name: "index", arg: 1, scope: !5647, file: !5527, line: 29, type: !4944)
!5652 = !DILocalVariable(name: "region_conf", arg: 2, scope: !5647, file: !5527, line: 30, type: !384)
!5653 = !DILocation(line: 0, scope: !5647)
!5654 = !DILocation(line: 33, column: 2, scope: !5647)
!5655 = !DILocation(line: 47, column: 28, scope: !5647)
!5656 = !DILocation(line: 47, column: 33, scope: !5647)
!5657 = !DILocation(line: 48, column: 26, scope: !5647)
!5658 = !DILocation(line: 47, column: 12, scope: !5647)
!5659 = !DILocation(line: 49, column: 32, scope: !5647)
!5660 = !DILocation(line: 49, column: 37, scope: !5647)
!5661 = !DILocation(line: 49, column: 12, scope: !5647)
!5662 = !DILocation(line: 53, column: 1, scope: !5647)
!5663 = distinct !DISubprogram(name: "set_region_number", scope: !5664, file: !5664, line: 32, type: !4534, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !5665)
!5664 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5665 = !{!5666}
!5666 = !DILocalVariable(name: "index", arg: 1, scope: !5663, file: !5664, line: 32, type: !121)
!5667 = !DILocation(line: 0, scope: !5663)
!5668 = !DILocation(line: 34, column: 11, scope: !5663)
!5669 = !DILocation(line: 35, column: 1, scope: !5663)
!5670 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !5527, file: !5527, line: 88, type: !5671, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !5673)
!5671 = !DISubroutineType(types: !5672)
!5672 = !{!121, !121}
!5673 = !{!5674}
!5674 = !DILocalVariable(name: "size", arg: 1, scope: !5670, file: !5527, line: 88, type: !121)
!5675 = !DILocation(line: 0, scope: !5670)
!5676 = !DILocation(line: 91, column: 11, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5670, file: !5527, line: 91, column: 6)
!5678 = !DILocation(line: 91, column: 6, scope: !5670)
!5679 = !DILocation(line: 100, column: 11, scope: !5680)
!5680 = distinct !DILexicalBlock(scope: !5670, file: !5527, line: 100, column: 6)
!5681 = !DILocation(line: 100, column: 6, scope: !5670)
!5682 = !DILocation(line: 104, column: 35, scope: !5670)
!5683 = !DILocation(line: 104, column: 16, scope: !5670)
!5684 = !DILocation(line: 104, column: 50, scope: !5670)
!5685 = !DILocation(line: 104, column: 72, scope: !5670)
!5686 = !DILocation(line: 104, column: 2, scope: !5670)
!5687 = !DILocation(line: 106, column: 1, scope: !5670)
!5688 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !397, file: !397, line: 307, type: !5689, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !5691)
!5689 = !DISubroutineType(types: !5690)
!5690 = !{null, !5506, !167}
!5691 = !{!5692, !5693}
!5692 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !5688, file: !397, line: 308, type: !5506)
!5693 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5688, file: !397, line: 308, type: !167)
!5694 = !DILocation(line: 0, scope: !5688)
!5695 = !DILocation(line: 310, column: 6, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5688, file: !397, line: 310, column: 6)
!5697 = !DILocation(line: 316, column: 1, scope: !5688)
!5698 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !5527, file: !5527, line: 249, type: !5699, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !5701)
!5699 = !DISubroutineType(types: !5700)
!5700 = !{!103, !5506, !167}
!5701 = !{!5702, !5703, !5704, !5705}
!5702 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !5698, file: !5527, line: 250, type: !5506)
!5703 = !DILocalVariable(name: "regions_num", arg: 2, scope: !5698, file: !5527, line: 250, type: !167)
!5704 = !DILocalVariable(name: "mpu_reg_index", scope: !5698, file: !5527, line: 252, type: !103)
!5705 = !DILocalVariable(name: "i", scope: !5706, file: !5527, line: 264, type: !103)
!5706 = distinct !DILexicalBlock(scope: !5707, file: !5527, line: 264, column: 3)
!5707 = distinct !DILexicalBlock(scope: !5708, file: !5527, line: 261, column: 32)
!5708 = distinct !DILexicalBlock(scope: !5698, file: !5527, line: 261, column: 6)
!5709 = !DILocation(line: 0, scope: !5698)
!5710 = !DILocation(line: 252, column: 22, scope: !5698)
!5711 = !DILocation(line: 258, column: 18, scope: !5698)
!5712 = !DILocation(line: 261, column: 20, scope: !5708)
!5713 = !DILocation(line: 261, column: 6, scope: !5698)
!5714 = !DILocation(line: 0, scope: !5706)
!5715 = !DILocation(line: 265, column: 4, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5717, file: !5527, line: 264, column: 59)
!5717 = distinct !DILexicalBlock(scope: !5706, file: !5527, line: 264, column: 3)
!5718 = !DILocation(line: 264, column: 55, scope: !5717)
!5719 = !DILocation(line: 264, column: 33, scope: !5717)
!5720 = !DILocation(line: 264, column: 3, scope: !5706)
!5721 = distinct !{!5721, !5720, !5722}
!5722 = !DILocation(line: 266, column: 3, scope: !5706)
!5723 = !DILocation(line: 269, column: 2, scope: !5698)
!5724 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !5725, file: !5725, line: 218, type: !4534, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !5726)
!5725 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5726 = !{!5727}
!5727 = !DILocalVariable(name: "rnr", arg: 1, scope: !5724, file: !5725, line: 218, type: !121)
!5728 = !DILocation(line: 0, scope: !5724)
!5729 = !DILocation(line: 220, column: 12, scope: !5724)
!5730 = !DILocation(line: 221, column: 13, scope: !5724)
!5731 = !DILocation(line: 222, column: 1, scope: !5724)
!5732 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !397, file: !397, line: 326, type: !5733, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !364, retainedNodes: !5735)
!5733 = !DISubroutineType(types: !5734)
!5734 = !{!103}
!5735 = !{!5736}
!5736 = !DILocalVariable(name: "r_index", scope: !5732, file: !397, line: 328, type: !121)
!5737 = !DILocation(line: 330, column: 17, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5732, file: !397, line: 330, column: 6)
!5739 = !DILocation(line: 330, column: 29, scope: !5738)
!5740 = !DILocation(line: 330, column: 6, scope: !5732)
!5741 = !DILocation(line: 347, column: 2, scope: !5732)
!5742 = !DILocation(line: 0, scope: !5732)
!5743 = !DILocation(line: 364, column: 29, scope: !5744)
!5744 = distinct !DILexicalBlock(scope: !5745, file: !397, line: 364, column: 2)
!5745 = distinct !DILexicalBlock(scope: !5732, file: !397, line: 364, column: 2)
!5746 = !DILocation(line: 364, column: 2, scope: !5745)
!5747 = !DILocation(line: 365, column: 25, scope: !5748)
!5748 = distinct !DILexicalBlock(scope: !5744, file: !397, line: 364, column: 66)
!5749 = !DILocation(line: 365, column: 3, scope: !5748)
!5750 = !DILocation(line: 364, column: 62, scope: !5744)
!5751 = distinct !{!5751, !5746, !5752}
!5752 = !DILocation(line: 366, column: 2, scope: !5745)
!5753 = !DILocation(line: 369, column: 23, scope: !5732)
!5754 = !DILocation(line: 369, column: 21, scope: !5732)
!5755 = !DILocation(line: 372, column: 2, scope: !5732)
!5756 = !DILocation(line: 443, column: 2, scope: !5732)
!5757 = !DILocation(line: 444, column: 1, scope: !5732)
!5758 = distinct !DISubprogram(name: "strcpy", scope: !5759, file: !5759, line: 20, type: !5760, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !5764)
!5759 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5760 = !DISubroutineType(types: !5761)
!5761 = !{!1017, !5762, !5763}
!5762 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1017)
!5763 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !157)
!5764 = !{!5765, !5766, !5767}
!5765 = !DILocalVariable(name: "d", arg: 1, scope: !5758, file: !5759, line: 20, type: !5762)
!5766 = !DILocalVariable(name: "s", arg: 2, scope: !5758, file: !5759, line: 20, type: !5763)
!5767 = !DILocalVariable(name: "dest", scope: !5758, file: !5759, line: 22, type: !1017)
!5768 = !DILocation(line: 0, scope: !5758)
!5769 = !DILocation(line: 24, column: 9, scope: !5758)
!5770 = !DILocation(line: 24, column: 12, scope: !5758)
!5771 = !DILocation(line: 24, column: 2, scope: !5758)
!5772 = !DILocation(line: 25, column: 6, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5758, file: !5759, line: 24, column: 21)
!5774 = !DILocation(line: 26, column: 4, scope: !5773)
!5775 = !DILocation(line: 27, column: 4, scope: !5773)
!5776 = distinct !{!5776, !5771, !5777}
!5777 = !DILocation(line: 28, column: 2, scope: !5758)
!5778 = !DILocation(line: 30, column: 5, scope: !5758)
!5779 = !DILocation(line: 32, column: 2, scope: !5758)
!5780 = distinct !DISubprogram(name: "strncpy", scope: !5759, file: !5759, line: 42, type: !5781, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !5783)
!5781 = !DISubroutineType(types: !5782)
!5782 = !{!1017, !5762, !5763, !213}
!5783 = !{!5784, !5785, !5786, !5787}
!5784 = !DILocalVariable(name: "d", arg: 1, scope: !5780, file: !5759, line: 42, type: !5762)
!5785 = !DILocalVariable(name: "s", arg: 2, scope: !5780, file: !5759, line: 42, type: !5763)
!5786 = !DILocalVariable(name: "n", arg: 3, scope: !5780, file: !5759, line: 42, type: !213)
!5787 = !DILocalVariable(name: "dest", scope: !5780, file: !5759, line: 44, type: !1017)
!5788 = !DILocation(line: 0, scope: !5780)
!5789 = !DILocation(line: 46, column: 12, scope: !5780)
!5790 = !DILocation(line: 46, column: 17, scope: !5780)
!5791 = !DILocation(line: 46, column: 20, scope: !5780)
!5792 = !DILocation(line: 46, column: 23, scope: !5780)
!5793 = !DILocation(line: 46, column: 2, scope: !5780)
!5794 = !DILocation(line: 47, column: 6, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5780, file: !5759, line: 46, column: 32)
!5796 = !DILocation(line: 48, column: 4, scope: !5795)
!5797 = !DILocation(line: 49, column: 4, scope: !5795)
!5798 = !DILocation(line: 50, column: 4, scope: !5795)
!5799 = distinct !{!5799, !5793, !5800}
!5800 = !DILocation(line: 51, column: 2, scope: !5780)
!5801 = !DILocation(line: 54, column: 6, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5780, file: !5759, line: 53, column: 16)
!5803 = !DILocation(line: 55, column: 4, scope: !5802)
!5804 = !DILocation(line: 56, column: 4, scope: !5802)
!5805 = !DILocation(line: 53, column: 11, scope: !5780)
!5806 = !DILocation(line: 53, column: 2, scope: !5780)
!5807 = distinct !{!5807, !5806, !5808}
!5808 = !DILocation(line: 57, column: 2, scope: !5780)
!5809 = !DILocation(line: 59, column: 2, scope: !5780)
!5810 = distinct !DISubprogram(name: "strchr", scope: !5759, file: !5759, line: 69, type: !5811, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !5813)
!5811 = !DISubroutineType(types: !5812)
!5812 = !{!1017, !157, !103}
!5813 = !{!5814, !5815, !5816}
!5814 = !DILocalVariable(name: "s", arg: 1, scope: !5810, file: !5759, line: 69, type: !157)
!5815 = !DILocalVariable(name: "c", arg: 2, scope: !5810, file: !5759, line: 69, type: !103)
!5816 = !DILocalVariable(name: "tmp", scope: !5810, file: !5759, line: 71, type: !159)
!5817 = !DILocation(line: 0, scope: !5810)
!5818 = !DILocation(line: 73, column: 2, scope: !5810)
!5819 = !DILocation(line: 73, column: 10, scope: !5810)
!5820 = !DILocation(line: 73, column: 13, scope: !5810)
!5821 = !DILocation(line: 73, column: 21, scope: !5810)
!5822 = !DILocation(line: 74, column: 4, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5810, file: !5759, line: 73, column: 38)
!5824 = distinct !{!5824, !5818, !5825}
!5825 = !DILocation(line: 75, column: 2, scope: !5810)
!5826 = !DILocation(line: 77, column: 9, scope: !5810)
!5827 = !DILocation(line: 77, column: 2, scope: !5810)
!5828 = distinct !DISubprogram(name: "strrchr", scope: !5759, file: !5759, line: 87, type: !5811, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !5829)
!5829 = !{!5830, !5831, !5832}
!5830 = !DILocalVariable(name: "s", arg: 1, scope: !5828, file: !5759, line: 87, type: !157)
!5831 = !DILocalVariable(name: "c", arg: 2, scope: !5828, file: !5759, line: 87, type: !103)
!5832 = !DILocalVariable(name: "match", scope: !5828, file: !5759, line: 89, type: !1017)
!5833 = !DILocation(line: 0, scope: !5828)
!5834 = !DILocation(line: 91, column: 2, scope: !5828)
!5835 = !DILocation(line: 92, column: 7, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5837, file: !5759, line: 92, column: 7)
!5837 = distinct !DILexicalBlock(scope: !5828, file: !5759, line: 91, column: 5)
!5838 = !DILocation(line: 92, column: 10, scope: !5836)
!5839 = !DILocation(line: 92, column: 7, scope: !5837)
!5840 = !DILocation(line: 95, column: 13, scope: !5828)
!5841 = !DILocation(line: 95, column: 2, scope: !5837)
!5842 = distinct !{!5842, !5834, !5843}
!5843 = !DILocation(line: 95, column: 15, scope: !5828)
!5844 = !DILocation(line: 97, column: 2, scope: !5828)
!5845 = distinct !DISubprogram(name: "strlen", scope: !5759, file: !5759, line: 107, type: !5846, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !5848)
!5846 = !DISubroutineType(types: !5847)
!5847 = !{!213, !157}
!5848 = !{!5849, !5850}
!5849 = !DILocalVariable(name: "s", arg: 1, scope: !5845, file: !5759, line: 107, type: !157)
!5850 = !DILocalVariable(name: "n", scope: !5845, file: !5759, line: 109, type: !213)
!5851 = !DILocation(line: 0, scope: !5845)
!5852 = !DILocation(line: 111, column: 9, scope: !5845)
!5853 = !DILocation(line: 111, column: 12, scope: !5845)
!5854 = !DILocation(line: 111, column: 2, scope: !5845)
!5855 = !DILocation(line: 112, column: 4, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5845, file: !5759, line: 111, column: 21)
!5857 = !DILocation(line: 113, column: 4, scope: !5856)
!5858 = distinct !{!5858, !5854, !5859}
!5859 = !DILocation(line: 114, column: 2, scope: !5845)
!5860 = !DILocation(line: 116, column: 2, scope: !5845)
!5861 = distinct !DISubprogram(name: "strnlen", scope: !5759, file: !5759, line: 126, type: !5862, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !5864)
!5862 = !DISubroutineType(types: !5863)
!5863 = !{!213, !157, !213}
!5864 = !{!5865, !5866, !5867}
!5865 = !DILocalVariable(name: "s", arg: 1, scope: !5861, file: !5759, line: 126, type: !157)
!5866 = !DILocalVariable(name: "maxlen", arg: 2, scope: !5861, file: !5759, line: 126, type: !213)
!5867 = !DILocalVariable(name: "n", scope: !5861, file: !5759, line: 128, type: !213)
!5868 = !DILocation(line: 0, scope: !5861)
!5869 = !DILocation(line: 130, column: 9, scope: !5861)
!5870 = !DILocation(line: 130, column: 12, scope: !5861)
!5871 = !DILocation(line: 130, column: 20, scope: !5861)
!5872 = !DILocation(line: 130, column: 2, scope: !5861)
!5873 = !DILocation(line: 131, column: 4, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5861, file: !5759, line: 130, column: 35)
!5875 = !DILocation(line: 132, column: 4, scope: !5874)
!5876 = distinct !{!5876, !5872, !5877}
!5877 = !DILocation(line: 133, column: 2, scope: !5861)
!5878 = !DILocation(line: 135, column: 2, scope: !5861)
!5879 = distinct !DISubprogram(name: "strcmp", scope: !5759, file: !5759, line: 145, type: !5880, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !5882)
!5880 = !DISubroutineType(types: !5881)
!5881 = !{!103, !157, !157}
!5882 = !{!5883, !5884}
!5883 = !DILocalVariable(name: "s1", arg: 1, scope: !5879, file: !5759, line: 145, type: !157)
!5884 = !DILocalVariable(name: "s2", arg: 2, scope: !5879, file: !5759, line: 145, type: !157)
!5885 = !DILocation(line: 0, scope: !5879)
!5886 = !DILocation(line: 147, column: 10, scope: !5879)
!5887 = !DILocation(line: 147, column: 17, scope: !5879)
!5888 = !DILocation(line: 147, column: 14, scope: !5879)
!5889 = !DILocation(line: 147, column: 22, scope: !5879)
!5890 = !DILocation(line: 148, column: 5, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5879, file: !5759, line: 147, column: 40)
!5892 = !DILocation(line: 149, column: 5, scope: !5891)
!5893 = distinct !{!5893, !5894, !5895}
!5894 = !DILocation(line: 147, column: 2, scope: !5879)
!5895 = !DILocation(line: 150, column: 2, scope: !5879)
!5896 = !DILocation(line: 152, column: 9, scope: !5879)
!5897 = !DILocation(line: 152, column: 15, scope: !5879)
!5898 = !DILocation(line: 152, column: 13, scope: !5879)
!5899 = !DILocation(line: 152, column: 2, scope: !5879)
!5900 = distinct !DISubprogram(name: "strncmp", scope: !5759, file: !5759, line: 162, type: !5901, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !5903)
!5901 = !DISubroutineType(types: !5902)
!5902 = !{!103, !157, !157, !213}
!5903 = !{!5904, !5905, !5906}
!5904 = !DILocalVariable(name: "s1", arg: 1, scope: !5900, file: !5759, line: 162, type: !157)
!5905 = !DILocalVariable(name: "s2", arg: 2, scope: !5900, file: !5759, line: 162, type: !157)
!5906 = !DILocalVariable(name: "n", arg: 3, scope: !5900, file: !5759, line: 162, type: !213)
!5907 = !DILocation(line: 0, scope: !5900)
!5908 = !DILocation(line: 164, column: 17, scope: !5900)
!5909 = !DILocation(line: 164, column: 21, scope: !5900)
!5910 = !DILocation(line: 164, column: 28, scope: !5900)
!5911 = !DILocation(line: 164, column: 25, scope: !5900)
!5912 = !DILocation(line: 164, column: 33, scope: !5900)
!5913 = !DILocation(line: 165, column: 5, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5900, file: !5759, line: 164, column: 51)
!5915 = !DILocation(line: 166, column: 5, scope: !5914)
!5916 = !DILocation(line: 167, column: 4, scope: !5914)
!5917 = distinct !{!5917, !5918, !5919}
!5918 = !DILocation(line: 164, column: 2, scope: !5900)
!5919 = !DILocation(line: 168, column: 2, scope: !5900)
!5920 = !DILocation(line: 170, column: 25, scope: !5900)
!5921 = !DILocation(line: 170, column: 31, scope: !5900)
!5922 = !DILocation(line: 170, column: 29, scope: !5900)
!5923 = !DILocation(line: 170, column: 9, scope: !5900)
!5924 = !DILocation(line: 170, column: 2, scope: !5900)
!5925 = distinct !DISubprogram(name: "strtok_r", scope: !5759, file: !5759, line: 180, type: !5926, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !5929)
!5926 = !DISubroutineType(types: !5927)
!5927 = !{!1017, !1017, !157, !5928}
!5928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 32)
!5929 = !{!5930, !5931, !5932, !5933, !5934}
!5930 = !DILocalVariable(name: "str", arg: 1, scope: !5925, file: !5759, line: 180, type: !1017)
!5931 = !DILocalVariable(name: "sep", arg: 2, scope: !5925, file: !5759, line: 180, type: !157)
!5932 = !DILocalVariable(name: "state", arg: 3, scope: !5925, file: !5759, line: 180, type: !5928)
!5933 = !DILocalVariable(name: "start", scope: !5925, file: !5759, line: 182, type: !1017)
!5934 = !DILocalVariable(name: "end", scope: !5925, file: !5759, line: 182, type: !1017)
!5935 = !DILocation(line: 0, scope: !5925)
!5936 = !DILocation(line: 184, column: 10, scope: !5925)
!5937 = !DILocation(line: 184, column: 22, scope: !5925)
!5938 = !DILocation(line: 187, column: 9, scope: !5925)
!5939 = !DILocation(line: 187, column: 16, scope: !5925)
!5940 = !DILocation(line: 187, column: 19, scope: !5925)
!5941 = !DILocation(line: 187, column: 2, scope: !5925)
!5942 = !DILocation(line: 188, column: 8, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5925, file: !5759, line: 187, column: 40)
!5944 = distinct !{!5944, !5941, !5945}
!5945 = !DILocation(line: 189, column: 2, scope: !5925)
!5946 = !DILocation(line: 198, column: 9, scope: !5925)
!5947 = !DILocation(line: 198, column: 18, scope: !5925)
!5948 = !DILocation(line: 198, column: 17, scope: !5925)
!5949 = !DILocation(line: 198, column: 2, scope: !5925)
!5950 = !DILocation(line: 199, column: 6, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5925, file: !5759, line: 198, column: 37)
!5952 = !DILocation(line: 198, column: 14, scope: !5925)
!5953 = distinct !{!5953, !5949, !5954}
!5954 = !DILocation(line: 200, column: 2, scope: !5925)
!5955 = !DILocation(line: 203, column: 8, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5957, file: !5759, line: 202, column: 20)
!5957 = distinct !DILexicalBlock(scope: !5925, file: !5759, line: 202, column: 6)
!5958 = !DILocation(line: 204, column: 16, scope: !5956)
!5959 = !DILocation(line: 205, column: 2, scope: !5956)
!5960 = !DILocation(line: 210, column: 1, scope: !5925)
!5961 = distinct !DISubprogram(name: "strcat", scope: !5759, file: !5759, line: 212, type: !5760, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !5962)
!5962 = !{!5963, !5964}
!5963 = !DILocalVariable(name: "dest", arg: 1, scope: !5961, file: !5759, line: 212, type: !5762)
!5964 = !DILocalVariable(name: "src", arg: 2, scope: !5961, file: !5759, line: 212, type: !5763)
!5965 = !DILocation(line: 0, scope: !5961)
!5966 = !DILocation(line: 214, column: 16, scope: !5961)
!5967 = !DILocation(line: 214, column: 14, scope: !5961)
!5968 = !DILocation(line: 214, column: 2, scope: !5961)
!5969 = !DILocation(line: 215, column: 2, scope: !5961)
!5970 = distinct !DISubprogram(name: "strncat", scope: !5759, file: !5759, line: 218, type: !5781, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !5971)
!5971 = !{!5972, !5973, !5974, !5975, !5976}
!5972 = !DILocalVariable(name: "dest", arg: 1, scope: !5970, file: !5759, line: 218, type: !5762)
!5973 = !DILocalVariable(name: "src", arg: 2, scope: !5970, file: !5759, line: 218, type: !5763)
!5974 = !DILocalVariable(name: "n", arg: 3, scope: !5970, file: !5759, line: 219, type: !213)
!5975 = !DILocalVariable(name: "orig_dest", scope: !5970, file: !5759, line: 221, type: !1017)
!5976 = !DILocalVariable(name: "len", scope: !5970, file: !5759, line: 222, type: !213)
!5977 = !DILocation(line: 0, scope: !5970)
!5978 = !DILocation(line: 222, column: 15, scope: !5970)
!5979 = !DILocation(line: 224, column: 7, scope: !5970)
!5980 = !DILocation(line: 225, column: 14, scope: !5970)
!5981 = !DILocation(line: 225, column: 19, scope: !5970)
!5982 = !DILocation(line: 225, column: 11, scope: !5970)
!5983 = !DILocation(line: 225, column: 23, scope: !5970)
!5984 = !DILocation(line: 225, column: 28, scope: !5970)
!5985 = !DILocation(line: 225, column: 2, scope: !5970)
!5986 = !DILocation(line: 226, column: 17, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5970, file: !5759, line: 225, column: 38)
!5988 = !DILocation(line: 226, column: 8, scope: !5987)
!5989 = !DILocation(line: 226, column: 11, scope: !5987)
!5990 = distinct !{!5990, !5985, !5991}
!5991 = !DILocation(line: 227, column: 2, scope: !5970)
!5992 = !DILocation(line: 228, column: 8, scope: !5970)
!5993 = !DILocation(line: 230, column: 2, scope: !5970)
!5994 = distinct !DISubprogram(name: "memcmp", scope: !5759, file: !5759, line: 239, type: !5995, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !5997)
!5995 = !DISubroutineType(types: !5996)
!5996 = !{!103, !13, !13, !213}
!5997 = !{!5998, !5999, !6000, !6001, !6002}
!5998 = !DILocalVariable(name: "m1", arg: 1, scope: !5994, file: !5759, line: 239, type: !13)
!5999 = !DILocalVariable(name: "m2", arg: 2, scope: !5994, file: !5759, line: 239, type: !13)
!6000 = !DILocalVariable(name: "n", arg: 3, scope: !5994, file: !5759, line: 239, type: !213)
!6001 = !DILocalVariable(name: "c1", scope: !5994, file: !5759, line: 241, type: !157)
!6002 = !DILocalVariable(name: "c2", scope: !5994, file: !5759, line: 242, type: !157)
!6003 = !DILocation(line: 0, scope: !5994)
!6004 = !DILocation(line: 244, column: 7, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !5994, file: !5759, line: 244, column: 6)
!6006 = !DILocation(line: 244, column: 6, scope: !5994)
!6007 = !DILocation(line: 248, column: 10, scope: !5994)
!6008 = !DILocation(line: 248, column: 14, scope: !5994)
!6009 = !DILocation(line: 248, column: 19, scope: !5994)
!6010 = !DILocation(line: 248, column: 2, scope: !5994)
!6011 = !DILocation(line: 248, column: 23, scope: !5994)
!6012 = !DILocation(line: 248, column: 30, scope: !5994)
!6013 = !DILocation(line: 248, column: 27, scope: !5994)
!6014 = !DILocation(line: 249, column: 5, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !5994, file: !5759, line: 248, column: 36)
!6016 = !DILocation(line: 250, column: 5, scope: !6015)
!6017 = distinct !{!6017, !6010, !6018}
!6018 = !DILocation(line: 251, column: 2, scope: !5994)
!6019 = !DILocation(line: 253, column: 9, scope: !5994)
!6020 = !DILocation(line: 253, column: 15, scope: !5994)
!6021 = !DILocation(line: 253, column: 13, scope: !5994)
!6022 = !DILocation(line: 253, column: 2, scope: !5994)
!6023 = !DILocation(line: 254, column: 1, scope: !5994)
!6024 = distinct !DISubprogram(name: "memmove", scope: !5759, file: !5759, line: 263, type: !6025, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !6027)
!6025 = !DISubroutineType(types: !6026)
!6026 = !{!102, !102, !13, !213}
!6027 = !{!6028, !6029, !6030, !6031, !6032}
!6028 = !DILocalVariable(name: "d", arg: 1, scope: !6024, file: !5759, line: 263, type: !102)
!6029 = !DILocalVariable(name: "s", arg: 2, scope: !6024, file: !5759, line: 263, type: !13)
!6030 = !DILocalVariable(name: "n", arg: 3, scope: !6024, file: !5759, line: 263, type: !213)
!6031 = !DILocalVariable(name: "dest", scope: !6024, file: !5759, line: 265, type: !1017)
!6032 = !DILocalVariable(name: "src", scope: !6024, file: !5759, line: 266, type: !157)
!6033 = !DILocation(line: 0, scope: !6024)
!6034 = !DILocation(line: 268, column: 21, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !6024, file: !5759, line: 268, column: 6)
!6036 = !DILocation(line: 268, column: 28, scope: !6035)
!6037 = !DILocation(line: 268, column: 6, scope: !6024)
!6038 = !DILocation(line: 280, column: 12, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6035, file: !5759, line: 278, column: 9)
!6040 = !DILocation(line: 280, column: 3, scope: !6039)
!6041 = !DILocation(line: 275, column: 5, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6043, file: !5759, line: 274, column: 17)
!6043 = distinct !DILexicalBlock(scope: !6035, file: !5759, line: 268, column: 33)
!6044 = !DILocation(line: 276, column: 14, scope: !6042)
!6045 = !DILocation(line: 276, column: 4, scope: !6042)
!6046 = !DILocation(line: 276, column: 12, scope: !6042)
!6047 = !DILocation(line: 274, column: 12, scope: !6043)
!6048 = !DILocation(line: 274, column: 3, scope: !6043)
!6049 = distinct !{!6049, !6048, !6050}
!6050 = !DILocation(line: 277, column: 3, scope: !6043)
!6051 = !DILocation(line: 281, column: 12, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6039, file: !5759, line: 280, column: 17)
!6053 = !DILocation(line: 281, column: 10, scope: !6052)
!6054 = !DILocation(line: 282, column: 8, scope: !6052)
!6055 = !DILocation(line: 283, column: 7, scope: !6052)
!6056 = !DILocation(line: 284, column: 5, scope: !6052)
!6057 = distinct !{!6057, !6040, !6058}
!6058 = !DILocation(line: 285, column: 3, scope: !6039)
!6059 = !DILocation(line: 288, column: 2, scope: !6024)
!6060 = distinct !DISubprogram(name: "memcpy", scope: !5759, file: !5759, line: 298, type: !6061, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !6065)
!6061 = !DISubroutineType(types: !6062)
!6062 = !{!102, !6063, !6064, !213}
!6063 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!6064 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!6065 = !{!6066, !6067, !6068, !6069, !6070}
!6066 = !DILocalVariable(name: "d", arg: 1, scope: !6060, file: !5759, line: 298, type: !6063)
!6067 = !DILocalVariable(name: "s", arg: 2, scope: !6060, file: !5759, line: 298, type: !6064)
!6068 = !DILocalVariable(name: "n", arg: 3, scope: !6060, file: !5759, line: 298, type: !213)
!6069 = !DILocalVariable(name: "d_byte", scope: !6060, file: !5759, line: 302, type: !871)
!6070 = !DILocalVariable(name: "s_byte", scope: !6060, file: !5759, line: 303, type: !2545)
!6071 = !DILocation(line: 0, scope: !6060)
!6072 = !DILocation(line: 337, column: 11, scope: !6060)
!6073 = !DILocation(line: 337, column: 2, scope: !6060)
!6074 = !DILocation(line: 338, column: 25, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6060, file: !5759, line: 337, column: 16)
!6076 = !DILocation(line: 338, column: 17, scope: !6075)
!6077 = !DILocation(line: 338, column: 11, scope: !6075)
!6078 = !DILocation(line: 338, column: 15, scope: !6075)
!6079 = !DILocation(line: 339, column: 4, scope: !6075)
!6080 = distinct !{!6080, !6073, !6081}
!6081 = !DILocation(line: 340, column: 2, scope: !6060)
!6082 = !DILocation(line: 342, column: 2, scope: !6060)
!6083 = distinct !DISubprogram(name: "memset", scope: !5759, file: !5759, line: 352, type: !6084, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !6086)
!6084 = !DISubroutineType(types: !6085)
!6085 = !{!102, !102, !103, !213}
!6086 = !{!6087, !6088, !6089, !6090, !6091}
!6087 = !DILocalVariable(name: "buf", arg: 1, scope: !6083, file: !5759, line: 352, type: !102)
!6088 = !DILocalVariable(name: "c", arg: 2, scope: !6083, file: !5759, line: 352, type: !103)
!6089 = !DILocalVariable(name: "n", arg: 3, scope: !6083, file: !5759, line: 352, type: !213)
!6090 = !DILocalVariable(name: "d_byte", scope: !6083, file: !5759, line: 356, type: !871)
!6091 = !DILocalVariable(name: "c_byte", scope: !6083, file: !5759, line: 357, type: !168)
!6092 = !DILocation(line: 0, scope: !6083)
!6093 = !DILocation(line: 357, column: 25, scope: !6083)
!6094 = !DILocation(line: 389, column: 11, scope: !6083)
!6095 = !DILocation(line: 389, column: 2, scope: !6083)
!6096 = !DILocation(line: 390, column: 11, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6083, file: !5759, line: 389, column: 16)
!6098 = !DILocation(line: 390, column: 15, scope: !6097)
!6099 = !DILocation(line: 391, column: 4, scope: !6097)
!6100 = distinct !{!6100, !6095, !6101}
!6101 = !DILocation(line: 392, column: 2, scope: !6083)
!6102 = !DILocation(line: 394, column: 2, scope: !6083)
!6103 = distinct !DISubprogram(name: "memchr", scope: !5759, file: !5759, line: 404, type: !6104, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2542, retainedNodes: !6106)
!6104 = !DISubroutineType(types: !6105)
!6105 = !{!102, !13, !103, !213}
!6106 = !{!6107, !6108, !6109, !6110}
!6107 = !DILocalVariable(name: "s", arg: 1, scope: !6103, file: !5759, line: 404, type: !13)
!6108 = !DILocalVariable(name: "c", arg: 2, scope: !6103, file: !5759, line: 404, type: !103)
!6109 = !DILocalVariable(name: "n", arg: 3, scope: !6103, file: !5759, line: 404, type: !213)
!6110 = !DILocalVariable(name: "p", scope: !6111, file: !5759, line: 407, type: !2545)
!6111 = distinct !DILexicalBlock(scope: !6112, file: !5759, line: 406, column: 14)
!6112 = distinct !DILexicalBlock(scope: !6103, file: !5759, line: 406, column: 6)
!6113 = !DILocation(line: 0, scope: !6103)
!6114 = !DILocation(line: 406, column: 8, scope: !6112)
!6115 = !DILocation(line: 406, column: 6, scope: !6103)
!6116 = !DILocation(line: 409, column: 3, scope: !6111)
!6117 = !DILocation(line: 0, scope: !6111)
!6118 = !DILocation(line: 410, column: 8, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !6120, file: !5759, line: 410, column: 8)
!6120 = distinct !DILexicalBlock(scope: !6111, file: !5759, line: 409, column: 6)
!6121 = !DILocation(line: 410, column: 13, scope: !6119)
!6122 = !DILocation(line: 410, column: 8, scope: !6120)
!6123 = distinct !{!6123, !6116, !6124}
!6124 = !DILocation(line: 414, column: 20, scope: !6111)
!6125 = !DILocation(line: 417, column: 2, scope: !6103)
!6126 = !DILocation(line: 418, column: 1, scope: !6103)
!6127 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !407, file: !407, line: 23, type: !2851, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6128)
!6128 = !{!6129}
!6129 = !DILocalVariable(name: "hook", arg: 1, scope: !6127, file: !407, line: 23, type: !106)
!6130 = !DILocation(line: 0, scope: !6127)
!6131 = !DILocation(line: 25, column: 15, scope: !6127)
!6132 = !DILocation(line: 26, column: 1, scope: !6127)
!6133 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !407, file: !407, line: 14, type: !107, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6134)
!6134 = !{!6135}
!6135 = !DILocalVariable(name: "c", arg: 1, scope: !6133, file: !407, line: 14, type: !103)
!6136 = !DILocation(line: 0, scope: !6133)
!6137 = !DILocation(line: 18, column: 2, scope: !6133)
!6138 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !407, file: !407, line: 28, type: !6139, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6141)
!6139 = !DISubroutineType(types: !6140)
!6140 = !{!103, !103, !403}
!6141 = !{!6142, !6143}
!6142 = !DILocalVariable(name: "c", arg: 1, scope: !6138, file: !407, line: 28, type: !103)
!6143 = !DILocalVariable(name: "stream", arg: 2, scope: !6138, file: !407, line: 28, type: !403)
!6144 = !DILocation(line: 0, scope: !6138)
!6145 = !DILocation(line: 30, column: 27, scope: !6138)
!6146 = !DILocation(line: 30, column: 50, scope: !6138)
!6147 = !DILocation(line: 30, column: 9, scope: !6138)
!6148 = !DILocation(line: 30, column: 2, scope: !6138)
!6149 = distinct !DISubprogram(name: "fputc", scope: !407, file: !407, line: 41, type: !6139, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6150)
!6150 = !{!6151, !6152}
!6151 = !DILocalVariable(name: "c", arg: 1, scope: !6149, file: !407, line: 41, type: !103)
!6152 = !DILocalVariable(name: "stream", arg: 2, scope: !6149, file: !407, line: 41, type: !403)
!6153 = !DILocation(line: 0, scope: !6149)
!6154 = !DILocation(line: 43, column: 9, scope: !6149)
!6155 = !DILocation(line: 43, column: 2, scope: !6149)
!6156 = distinct !DISubprogram(name: "zephyr_fputc", scope: !6157, file: !6157, line: 72, type: !6139, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6158)
!6157 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!6158 = !{!6159, !6160}
!6159 = !DILocalVariable(name: "c", arg: 1, scope: !6156, file: !6157, line: 72, type: !103)
!6160 = !DILocalVariable(name: "stream", arg: 2, scope: !6156, file: !6157, line: 72, type: !403)
!6161 = !DILocation(line: 0, scope: !6156)
!6162 = !DILocation(line: 81, column: 2, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6156, file: !6157, line: 81, column: 2)
!6164 = !{i64 2152277895}
!6165 = !DILocation(line: 82, column: 9, scope: !6156)
!6166 = !DILocation(line: 82, column: 2, scope: !6156)
!6167 = distinct !DISubprogram(name: "fputs", scope: !407, file: !407, line: 46, type: !6168, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6171)
!6168 = !DISubroutineType(types: !6169)
!6169 = !{!103, !5763, !6170}
!6170 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !403)
!6171 = !{!6172, !6173, !6174, !6175}
!6172 = !DILocalVariable(name: "s", arg: 1, scope: !6167, file: !407, line: 46, type: !5763)
!6173 = !DILocalVariable(name: "stream", arg: 2, scope: !6167, file: !407, line: 46, type: !6170)
!6174 = !DILocalVariable(name: "len", scope: !6167, file: !407, line: 48, type: !103)
!6175 = !DILocalVariable(name: "ret", scope: !6167, file: !407, line: 49, type: !103)
!6176 = !DILocation(line: 0, scope: !6167)
!6177 = !DILocation(line: 48, column: 12, scope: !6167)
!6178 = !DILocation(line: 51, column: 8, scope: !6167)
!6179 = !DILocation(line: 53, column: 13, scope: !6167)
!6180 = !DILocation(line: 53, column: 9, scope: !6167)
!6181 = !DILocation(line: 53, column: 2, scope: !6167)
!6182 = distinct !DISubprogram(name: "fwrite", scope: !407, file: !407, line: 99, type: !6183, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6185)
!6183 = !DISubroutineType(types: !6184)
!6184 = !{!213, !6064, !213, !213, !6170}
!6185 = !{!6186, !6187, !6188, !6189}
!6186 = !DILocalVariable(name: "ptr", arg: 1, scope: !6182, file: !407, line: 99, type: !6064)
!6187 = !DILocalVariable(name: "size", arg: 2, scope: !6182, file: !407, line: 99, type: !213)
!6188 = !DILocalVariable(name: "nitems", arg: 3, scope: !6182, file: !407, line: 99, type: !213)
!6189 = !DILocalVariable(name: "stream", arg: 4, scope: !6182, file: !407, line: 100, type: !6170)
!6190 = !DILocation(line: 0, scope: !6182)
!6191 = !DILocation(line: 102, column: 9, scope: !6182)
!6192 = !DILocation(line: 102, column: 2, scope: !6182)
!6193 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !6157, file: !6157, line: 96, type: !6183, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6194)
!6194 = !{!6195, !6196, !6197, !6198}
!6195 = !DILocalVariable(name: "ptr", arg: 1, scope: !6193, file: !6157, line: 96, type: !6064)
!6196 = !DILocalVariable(name: "size", arg: 2, scope: !6193, file: !6157, line: 96, type: !213)
!6197 = !DILocalVariable(name: "nitems", arg: 3, scope: !6193, file: !6157, line: 96, type: !213)
!6198 = !DILocalVariable(name: "stream", arg: 4, scope: !6193, file: !6157, line: 96, type: !6170)
!6199 = !DILocation(line: 0, scope: !6193)
!6200 = !DILocation(line: 107, column: 2, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6193, file: !6157, line: 107, column: 2)
!6202 = !{i64 2152277999}
!6203 = !DILocation(line: 108, column: 9, scope: !6193)
!6204 = !DILocation(line: 108, column: 2, scope: !6193)
!6205 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !407, file: !407, line: 56, type: !6183, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6206)
!6206 = !{!6207, !6208, !6209, !6210, !6211, !6212, !6213, !6214}
!6207 = !DILocalVariable(name: "ptr", arg: 1, scope: !6205, file: !407, line: 56, type: !6064)
!6208 = !DILocalVariable(name: "size", arg: 2, scope: !6205, file: !407, line: 56, type: !213)
!6209 = !DILocalVariable(name: "nitems", arg: 3, scope: !6205, file: !407, line: 57, type: !213)
!6210 = !DILocalVariable(name: "stream", arg: 4, scope: !6205, file: !407, line: 57, type: !6170)
!6211 = !DILocalVariable(name: "i", scope: !6205, file: !407, line: 59, type: !213)
!6212 = !DILocalVariable(name: "j", scope: !6205, file: !407, line: 60, type: !213)
!6213 = !DILocalVariable(name: "p", scope: !6205, file: !407, line: 61, type: !2545)
!6214 = !DILabel(scope: !6205, name: "done", file: !407, line: 82)
!6215 = !DILocation(line: 0, scope: !6205)
!6216 = !DILocation(line: 63, column: 14, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6205, file: !407, line: 63, column: 6)
!6218 = !DILocation(line: 63, column: 24, scope: !6217)
!6219 = !DILocation(line: 72, column: 3, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6205, file: !407, line: 70, column: 5)
!6221 = !DILocation(line: 0, scope: !6220)
!6222 = !DILocation(line: 73, column: 8, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6224, file: !407, line: 73, column: 8)
!6224 = distinct !DILexicalBlock(scope: !6220, file: !407, line: 72, column: 6)
!6225 = !DILocation(line: 73, column: 29, scope: !6223)
!6226 = !DILocation(line: 73, column: 27, scope: !6223)
!6227 = !DILocation(line: 73, column: 21, scope: !6223)
!6228 = !DILocation(line: 73, column: 33, scope: !6223)
!6229 = !DILocation(line: 73, column: 8, scope: !6224)
!6230 = !DILocation(line: 76, column: 5, scope: !6224)
!6231 = !DILocation(line: 77, column: 14, scope: !6220)
!6232 = !DILocation(line: 77, column: 3, scope: !6224)
!6233 = distinct !{!6233, !6219, !6234}
!6234 = !DILocation(line: 77, column: 17, scope: !6220)
!6235 = !DILocation(line: 79, column: 4, scope: !6220)
!6236 = !DILocation(line: 80, column: 13, scope: !6205)
!6237 = !DILocation(line: 80, column: 2, scope: !6220)
!6238 = distinct !{!6238, !6239, !6240}
!6239 = !DILocation(line: 70, column: 2, scope: !6205)
!6240 = !DILocation(line: 80, column: 16, scope: !6205)
!6241 = !DILocation(line: 82, column: 1, scope: !6205)
!6242 = !DILocation(line: 83, column: 17, scope: !6205)
!6243 = !DILocation(line: 83, column: 2, scope: !6205)
!6244 = !DILocation(line: 84, column: 1, scope: !6205)
!6245 = distinct !DISubprogram(name: "puts", scope: !407, file: !407, line: 106, type: !6246, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !400, retainedNodes: !6248)
!6246 = !DISubroutineType(types: !6247)
!6247 = !{!103, !157}
!6248 = !{!6249}
!6249 = !DILocalVariable(name: "s", arg: 1, scope: !6245, file: !407, line: 106, type: !157)
!6250 = !DILocation(line: 0, scope: !6245)
!6251 = !DILocation(line: 108, column: 6, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6245, file: !407, line: 108, column: 6)
!6253 = !DILocation(line: 108, column: 23, scope: !6252)
!6254 = !DILocation(line: 108, column: 6, scope: !6245)
!6255 = !DILocation(line: 112, column: 9, scope: !6245)
!6256 = !DILocation(line: 112, column: 29, scope: !6245)
!6257 = !DILocation(line: 112, column: 2, scope: !6245)
!6258 = !DILocation(line: 113, column: 1, scope: !6245)
!6259 = distinct !DISubprogram(name: "rf_init", scope: !532, file: !532, line: 10, type: !538, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !435, retainedNodes: !6260)
!6260 = !{!6261, !6262, !6270, !6271}
!6261 = !DILocalVariable(name: "dev", arg: 1, scope: !6259, file: !532, line: 10, type: !458)
!6262 = !DILocalVariable(name: "rf1", scope: !6259, file: !532, line: 12, type: !6263)
!6263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6264)
!6264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_dt_spec", file: !439, line: 271, size: 64, elements: !6265)
!6265 = !{!6266, !6267, !6268}
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !6264, file: !439, line: 273, baseType: !458, size: 32)
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !6264, file: !439, line: 275, baseType: !473, size: 8, offset: 32)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "dt_flags", scope: !6264, file: !439, line: 277, baseType: !6269, size: 16, offset: 48)
!6269 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_dt_flags_t", file: !439, line: 249, baseType: !278)
!6270 = !DILocalVariable(name: "rf2", scope: !6259, file: !532, line: 14, type: !6263)
!6271 = !DILocalVariable(name: "rf3", scope: !6259, file: !532, line: 16, type: !6263)
!6272 = !DILocation(line: 0, scope: !6259)
!6273 = !DILocation(line: 12, column: 2, scope: !6259)
!6274 = !DILocation(line: 12, column: 28, scope: !6259)
!6275 = !DILocation(line: 14, column: 2, scope: !6259)
!6276 = !DILocation(line: 14, column: 28, scope: !6259)
!6277 = !DILocation(line: 16, column: 2, scope: !6259)
!6278 = !DILocation(line: 16, column: 28, scope: !6259)
!6279 = !DILocation(line: 22, column: 27, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6259, file: !532, line: 22, column: 6)
!6281 = !DILocation(line: 22, column: 7, scope: !6280)
!6282 = !DILocation(line: 22, column: 33, scope: !6280)
!6283 = !DILocation(line: 23, column: 7, scope: !6280)
!6284 = !DILocation(line: 23, column: 33, scope: !6280)
!6285 = !DILocation(line: 24, column: 7, scope: !6280)
!6286 = !DILocation(line: 22, column: 6, scope: !6259)
!6287 = !DILocation(line: 28, column: 8, scope: !6259)
!6288 = !DILocation(line: 29, column: 8, scope: !6259)
!6289 = !DILocation(line: 30, column: 8, scope: !6259)
!6290 = !DILocation(line: 32, column: 2, scope: !6259)
!6291 = !DILocation(line: 33, column: 1, scope: !6259)
!6292 = distinct !DISubprogram(name: "device_is_ready", scope: !6293, file: !6293, line: 47, type: !6294, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !435, retainedNodes: !6296)
!6293 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!6294 = !DISubroutineType(types: !6295)
!6295 = !{!170, !458}
!6296 = !{!6297}
!6297 = !DILocalVariable(name: "dev", arg: 1, scope: !6292, file: !6293, line: 47, type: !458)
!6298 = !DILocation(line: 0, scope: !6292)
!6299 = !DILocation(line: 55, column: 2, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6292, file: !6293, line: 55, column: 2)
!6301 = !{i64 2148925672}
!6302 = !DILocation(line: 56, column: 9, scope: !6292)
!6303 = !DILocation(line: 56, column: 2, scope: !6292)
!6304 = distinct !DISubprogram(name: "gpio_pin_configure_dt", scope: !439, file: !439, line: 731, type: !6305, scopeLine: 733, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !435, retainedNodes: !6308)
!6305 = !DISubroutineType(types: !6306)
!6306 = !{!103, !6307, !474}
!6307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6263, size: 32)
!6308 = !{!6309, !6310}
!6309 = !DILocalVariable(name: "spec", arg: 1, scope: !6304, file: !439, line: 731, type: !6307)
!6310 = !DILocalVariable(name: "extra_flags", arg: 2, scope: !6304, file: !439, line: 732, type: !474)
!6311 = !DILocation(line: 0, scope: !6304)
!6312 = !DILocation(line: 734, column: 34, scope: !6304)
!6313 = !DILocation(line: 735, column: 13, scope: !6304)
!6314 = !DILocation(line: 736, column: 13, scope: !6304)
!6315 = !DILocation(line: 736, column: 7, scope: !6304)
!6316 = !DILocation(line: 736, column: 22, scope: !6304)
!6317 = !DILocation(line: 734, column: 9, scope: !6304)
!6318 = !DILocation(line: 734, column: 2, scope: !6304)
!6319 = distinct !DISubprogram(name: "gpio_pin_configure", scope: !6320, file: !6320, line: 49, type: !456, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !435, retainedNodes: !6321)
!6320 = !DIFile(filename: "zephyr/include/generated/syscalls/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!6321 = !{!6322, !6323, !6324}
!6322 = !DILocalVariable(name: "port", arg: 1, scope: !6319, file: !6320, line: 49, type: !458)
!6323 = !DILocalVariable(name: "pin", arg: 2, scope: !6319, file: !6320, line: 49, type: !473)
!6324 = !DILocalVariable(name: "flags", arg: 3, scope: !6319, file: !6320, line: 49, type: !474)
!6325 = !DILocation(line: 0, scope: !6319)
!6326 = !DILocation(line: 59, column: 2, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6319, file: !6320, line: 59, column: 2)
!6328 = !{i64 2148940042}
!6329 = !DILocation(line: 60, column: 9, scope: !6319)
!6330 = !DILocation(line: 60, column: 2, scope: !6319)
!6331 = distinct !DISubprogram(name: "z_impl_gpio_pin_configure", scope: !439, file: !439, line: 667, type: !456, scopeLine: 670, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !435, retainedNodes: !6332)
!6332 = !{!6333, !6334, !6335, !6336, !6337, !6339}
!6333 = !DILocalVariable(name: "port", arg: 1, scope: !6331, file: !439, line: 667, type: !458)
!6334 = !DILocalVariable(name: "pin", arg: 2, scope: !6331, file: !439, line: 668, type: !473)
!6335 = !DILocalVariable(name: "flags", arg: 3, scope: !6331, file: !439, line: 669, type: !474)
!6336 = !DILocalVariable(name: "api", scope: !6331, file: !439, line: 671, type: !450)
!6337 = !DILocalVariable(name: "cfg", scope: !6331, file: !439, line: 673, type: !6338)
!6338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !520)
!6339 = !DILocalVariable(name: "data", scope: !6331, file: !439, line: 675, type: !530)
!6340 = !DILocation(line: 0, scope: !6331)
!6341 = !DILocation(line: 672, column: 41, scope: !6331)
!6342 = !DILocation(line: 676, column: 36, scope: !6331)
!6343 = !DILocation(line: 701, column: 6, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6331, file: !439, line: 700, column: 6)
!6345 = !DILocation(line: 711, column: 13, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6331, file: !439, line: 711, column: 6)
!6347 = !DILocation(line: 711, column: 32, scope: !6346)
!6348 = !DILocation(line: 0, scope: !6346)
!6349 = !DILocation(line: 711, column: 6, scope: !6331)
!6350 = !DILocation(line: 712, column: 9, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6346, file: !439, line: 711, column: 38)
!6352 = !DILocation(line: 712, column: 16, scope: !6351)
!6353 = !DILocation(line: 713, column: 2, scope: !6351)
!6354 = !DILocation(line: 714, column: 19, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6346, file: !439, line: 713, column: 9)
!6356 = !DILocation(line: 714, column: 9, scope: !6355)
!6357 = !DILocation(line: 714, column: 16, scope: !6355)
!6358 = !DILocation(line: 706, column: 8, scope: !6331)
!6359 = !DILocation(line: 717, column: 14, scope: !6331)
!6360 = !DILocation(line: 717, column: 9, scope: !6331)
!6361 = !DILocation(line: 717, column: 2, scope: !6331)
!6362 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !6294, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !435, retainedNodes: !6363)
!6363 = !{!6364}
!6364 = !DILocalVariable(name: "dev", arg: 1, scope: !6362, file: !154, line: 730, type: !458)
!6365 = !DILocation(line: 0, scope: !6362)
!6366 = !DILocation(line: 732, column: 9, scope: !6362)
!6367 = !DILocation(line: 732, column: 2, scope: !6362)
!6368 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !615, file: !615, line: 368, type: !668, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6369)
!6369 = !{!6370}
!6370 = !DILocalVariable(name: "dev", arg: 1, scope: !6368, file: !615, line: 368, type: !644)
!6371 = !DILocation(line: 0, scope: !6368)
!6372 = !DILocation(line: 370, column: 2, scope: !6368)
!6373 = !DILocation(line: 371, column: 1, scope: !6368)
!6374 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !615, file: !615, line: 243, type: !6375, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6377)
!6375 = !DISubroutineType(types: !6376)
!6376 = !{null, !103, !103, !644}
!6377 = !{!6378, !6379, !6380, !6381, !6383}
!6378 = !DILocalVariable(name: "min", arg: 1, scope: !6374, file: !615, line: 243, type: !103)
!6379 = !DILocalVariable(name: "max", arg: 2, scope: !6374, file: !615, line: 243, type: !103)
!6380 = !DILocalVariable(name: "dev", arg: 3, scope: !6374, file: !615, line: 243, type: !644)
!6381 = !DILocalVariable(name: "data", scope: !6374, file: !615, line: 245, type: !6382)
!6382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 32)
!6383 = !DILocalVariable(name: "line", scope: !6374, file: !615, line: 246, type: !103)
!6384 = !DILocation(line: 0, scope: !6374)
!6385 = !DILocation(line: 245, column: 38, scope: !6374)
!6386 = !DILocation(line: 249, column: 24, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6388, file: !615, line: 249, column: 2)
!6388 = distinct !DILexicalBlock(scope: !6374, file: !615, line: 249, column: 2)
!6389 = !DILocation(line: 249, column: 2, scope: !6388)
!6390 = !DILocation(line: 251, column: 7, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6392, file: !615, line: 251, column: 7)
!6392 = distinct !DILexicalBlock(scope: !6387, file: !615, line: 249, column: 39)
!6393 = !DILocation(line: 251, column: 7, scope: !6392)
!6394 = !DILocation(line: 253, column: 4, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6391, file: !615, line: 251, column: 36)
!6396 = !DILocation(line: 256, column: 24, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6395, file: !615, line: 256, column: 8)
!6398 = !DILocation(line: 256, column: 9, scope: !6397)
!6399 = !DILocation(line: 256, column: 8, scope: !6395)
!6400 = !DILocation(line: 260, column: 43, scope: !6395)
!6401 = !DILocation(line: 260, column: 4, scope: !6395)
!6402 = !DILocation(line: 261, column: 3, scope: !6395)
!6403 = !DILocation(line: 249, column: 35, scope: !6387)
!6404 = distinct !{!6404, !6389, !6405}
!6405 = !DILocation(line: 262, column: 2, scope: !6388)
!6406 = !DILocation(line: 263, column: 1, scope: !6374)
!6407 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !615, file: !615, line: 158, type: !107, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6408)
!6408 = !{!6409}
!6409 = !DILocalVariable(name: "line", arg: 1, scope: !6407, file: !615, line: 158, type: !103)
!6410 = !DILocation(line: 0, scope: !6407)
!6411 = !DILocation(line: 170, column: 38, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6413, file: !615, line: 160, column: 17)
!6413 = distinct !DILexicalBlock(scope: !6407, file: !615, line: 160, column: 6)
!6414 = !DILocation(line: 170, column: 10, scope: !6412)
!6415 = !DILocation(line: 176, column: 1, scope: !6407)
!6416 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !615, file: !615, line: 183, type: !6417, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6419)
!6417 = !DISubroutineType(types: !6418)
!6418 = !{null, !103}
!6419 = !{!6420}
!6420 = !DILocalVariable(name: "line", arg: 1, scope: !6416, file: !615, line: 183, type: !103)
!6421 = !DILocation(line: 0, scope: !6416)
!6422 = !DILocation(line: 195, column: 28, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6424, file: !615, line: 185, column: 17)
!6424 = distinct !DILexicalBlock(scope: !6416, file: !615, line: 185, column: 6)
!6425 = !DILocation(line: 195, column: 3, scope: !6423)
!6426 = !DILocation(line: 200, column: 1, scope: !6416)
!6427 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !6428, file: !6428, line: 971, type: !4534, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6429)
!6428 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6429 = !{!6430}
!6430 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6427, file: !6428, line: 971, type: !121)
!6431 = !DILocation(line: 0, scope: !6427)
!6432 = !DILocation(line: 973, column: 3, scope: !6427)
!6433 = !DILocation(line: 974, column: 1, scope: !6427)
!6434 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !6428, file: !6428, line: 891, type: !5671, scopeLine: 892, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6435)
!6435 = !{!6436}
!6436 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6434, file: !6428, line: 891, type: !121)
!6437 = !DILocation(line: 0, scope: !6434)
!6438 = !DILocation(line: 893, column: 11, scope: !6434)
!6439 = !DILocation(line: 893, column: 40, scope: !6434)
!6440 = !DILocation(line: 893, column: 3, scope: !6434)
!6441 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !615, file: !615, line: 304, type: !668, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6442)
!6442 = !{!6443}
!6443 = !DILocalVariable(name: "dev", arg: 1, scope: !6441, file: !615, line: 304, type: !644)
!6444 = !DILocation(line: 0, scope: !6441)
!6445 = !DILocation(line: 306, column: 2, scope: !6441)
!6446 = !DILocation(line: 307, column: 1, scope: !6441)
!6447 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !615, file: !615, line: 299, type: !668, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6448)
!6448 = !{!6449}
!6449 = !DILocalVariable(name: "dev", arg: 1, scope: !6447, file: !615, line: 299, type: !644)
!6450 = !DILocation(line: 0, scope: !6447)
!6451 = !DILocation(line: 301, column: 2, scope: !6447)
!6452 = !DILocation(line: 302, column: 1, scope: !6447)
!6453 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !615, file: !615, line: 294, type: !668, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6454)
!6454 = !{!6455}
!6455 = !DILocalVariable(name: "dev", arg: 1, scope: !6453, file: !615, line: 294, type: !644)
!6456 = !DILocation(line: 0, scope: !6453)
!6457 = !DILocation(line: 296, column: 2, scope: !6453)
!6458 = !DILocation(line: 297, column: 1, scope: !6453)
!6459 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !615, file: !615, line: 289, type: !668, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6460)
!6460 = !{!6461}
!6461 = !DILocalVariable(name: "dev", arg: 1, scope: !6459, file: !615, line: 289, type: !644)
!6462 = !DILocation(line: 0, scope: !6459)
!6463 = !DILocation(line: 291, column: 2, scope: !6459)
!6464 = !DILocation(line: 292, column: 1, scope: !6459)
!6465 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !615, file: !615, line: 373, type: !668, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6466)
!6466 = !{!6467}
!6467 = !DILocalVariable(name: "dev", arg: 1, scope: !6465, file: !615, line: 373, type: !644)
!6468 = !DILocation(line: 0, scope: !6465)
!6469 = !DILocation(line: 375, column: 2, scope: !6465)
!6470 = !DILocation(line: 376, column: 1, scope: !6465)
!6471 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !615, file: !615, line: 284, type: !668, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6472)
!6472 = !{!6473}
!6473 = !DILocalVariable(name: "dev", arg: 1, scope: !6471, file: !615, line: 284, type: !644)
!6474 = !DILocation(line: 0, scope: !6471)
!6475 = !DILocation(line: 286, column: 2, scope: !6471)
!6476 = !DILocation(line: 287, column: 1, scope: !6471)
!6477 = distinct !DISubprogram(name: "stm32_exti_init", scope: !615, file: !615, line: 416, type: !642, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6478)
!6478 = !{!6479}
!6479 = !DILocalVariable(name: "dev", arg: 1, scope: !6477, file: !615, line: 416, type: !644)
!6480 = !DILocation(line: 0, scope: !6477)
!6481 = !DILocation(line: 418, column: 2, scope: !6477)
!6482 = !DILocation(line: 420, column: 2, scope: !6477)
!6483 = !DILocation(line: 0, scope: !667)
!6484 = !DILocation(line: 493, column: 2, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !667, file: !615, line: 493, column: 2)
!6486 = !DILocation(line: 497, column: 2, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !667, file: !615, line: 497, column: 2)
!6488 = !DILocation(line: 507, column: 2, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !667, file: !615, line: 507, column: 2)
!6490 = !DILocation(line: 512, column: 2, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !667, file: !615, line: 512, column: 2)
!6492 = !DILocation(line: 516, column: 2, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !667, file: !615, line: 516, column: 2)
!6494 = !DILocation(line: 523, column: 2, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !667, file: !615, line: 523, column: 2)
!6496 = !DILocation(line: 527, column: 2, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !667, file: !615, line: 527, column: 2)
!6498 = !DILocation(line: 607, column: 1, scope: !667)
!6499 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !615, file: !615, line: 112, type: !6417, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6500)
!6500 = !{!6501, !6502}
!6501 = !DILocalVariable(name: "line", arg: 1, scope: !6499, file: !615, line: 112, type: !103)
!6502 = !DILocalVariable(name: "irqnum", scope: !6499, file: !615, line: 114, type: !103)
!6503 = !DILocation(line: 0, scope: !6499)
!6504 = !DILocation(line: 121, column: 11, scope: !6499)
!6505 = !DILocation(line: 130, column: 26, scope: !6499)
!6506 = !DILocation(line: 130, column: 2, scope: !6499)
!6507 = !DILocation(line: 134, column: 2, scope: !6499)
!6508 = !DILocation(line: 135, column: 1, scope: !6499)
!6509 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !6428, file: !6428, line: 274, type: !4534, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6510)
!6510 = !{!6511}
!6511 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6509, file: !6428, line: 274, type: !121)
!6512 = !DILocation(line: 0, scope: !6509)
!6513 = !DILocation(line: 276, column: 3, scope: !6509)
!6514 = !DILocation(line: 277, column: 1, scope: !6509)
!6515 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !615, file: !615, line: 137, type: !6417, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6516)
!6516 = !{!6517}
!6517 = !DILocalVariable(name: "line", arg: 1, scope: !6515, file: !615, line: 137, type: !103)
!6518 = !DILocation(line: 0, scope: !6515)
!6519 = !DILocation(line: 141, column: 11, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6515, file: !615, line: 141, column: 6)
!6521 = !DILocation(line: 141, column: 6, scope: !6515)
!6522 = !DILocation(line: 145, column: 28, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6520, file: !615, line: 141, column: 17)
!6524 = !DILocation(line: 145, column: 3, scope: !6523)
!6525 = !DILocation(line: 147, column: 2, scope: !6523)
!6526 = !DILocation(line: 151, column: 1, scope: !6515)
!6527 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !6428, file: !6428, line: 322, type: !4534, scopeLine: 323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6528)
!6528 = !{!6529}
!6529 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6527, file: !6428, line: 322, type: !121)
!6530 = !DILocation(line: 0, scope: !6527)
!6531 = !DILocation(line: 324, column: 3, scope: !6527)
!6532 = !DILocation(line: 325, column: 1, scope: !6527)
!6533 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !615, file: !615, line: 202, type: !6534, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6536)
!6534 = !DISubroutineType(types: !6535)
!6535 = !{null, !103, !103}
!6536 = !{!6537, !6538}
!6537 = !DILocalVariable(name: "line", arg: 1, scope: !6533, file: !615, line: 202, type: !103)
!6538 = !DILocalVariable(name: "trigger", arg: 2, scope: !6533, file: !615, line: 202, type: !103)
!6539 = !DILocation(line: 0, scope: !6533)
!6540 = !DILocation(line: 211, column: 2, scope: !6533)
!6541 = !DILocation(line: 213, column: 36, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6533, file: !615, line: 211, column: 19)
!6543 = !DILocation(line: 213, column: 3, scope: !6542)
!6544 = !DILocation(line: 214, column: 3, scope: !6542)
!6545 = !DILocation(line: 215, column: 3, scope: !6542)
!6546 = !DILocation(line: 217, column: 35, scope: !6542)
!6547 = !DILocation(line: 217, column: 3, scope: !6542)
!6548 = !DILocation(line: 218, column: 3, scope: !6542)
!6549 = !DILocation(line: 219, column: 3, scope: !6542)
!6550 = !DILocation(line: 221, column: 36, scope: !6542)
!6551 = !DILocation(line: 221, column: 3, scope: !6542)
!6552 = !DILocation(line: 222, column: 3, scope: !6542)
!6553 = !DILocation(line: 223, column: 3, scope: !6542)
!6554 = !DILocation(line: 225, column: 35, scope: !6542)
!6555 = !DILocation(line: 225, column: 3, scope: !6542)
!6556 = !DILocation(line: 226, column: 3, scope: !6542)
!6557 = !DILocation(line: 227, column: 3, scope: !6542)
!6558 = !DILocation(line: 232, column: 1, scope: !6533)
!6559 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !6428, file: !6428, line: 618, type: !4534, scopeLine: 619, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6560)
!6560 = !{!6561}
!6561 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6559, file: !6428, line: 618, type: !121)
!6562 = !DILocation(line: 0, scope: !6559)
!6563 = !DILocation(line: 620, column: 3, scope: !6559)
!6564 = !DILocation(line: 622, column: 1, scope: !6559)
!6565 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !6428, file: !6428, line: 754, type: !4534, scopeLine: 755, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6566)
!6566 = !{!6567}
!6567 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6565, file: !6428, line: 754, type: !121)
!6568 = !DILocation(line: 0, scope: !6565)
!6569 = !DILocation(line: 756, column: 3, scope: !6565)
!6570 = !DILocation(line: 757, column: 1, scope: !6565)
!6571 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !6428, file: !6428, line: 572, type: !4534, scopeLine: 573, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6572)
!6572 = !{!6573}
!6573 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6571, file: !6428, line: 572, type: !121)
!6574 = !DILocation(line: 0, scope: !6571)
!6575 = !DILocation(line: 574, column: 3, scope: !6571)
!6576 = !DILocation(line: 576, column: 1, scope: !6571)
!6577 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !6428, file: !6428, line: 710, type: !4534, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6578)
!6578 = !{!6579}
!6579 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !6577, file: !6428, line: 710, type: !121)
!6580 = !DILocation(line: 0, scope: !6577)
!6581 = !DILocation(line: 712, column: 3, scope: !6577)
!6582 = !DILocation(line: 713, column: 1, scope: !6577)
!6583 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !615, file: !615, line: 433, type: !6584, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6586)
!6584 = !DISubroutineType(types: !6585)
!6585 = !{!103, !103, !655, !102}
!6586 = !{!6587, !6588, !6589, !6590, !6592}
!6587 = !DILocalVariable(name: "line", arg: 1, scope: !6583, file: !615, line: 433, type: !103)
!6588 = !DILocalVariable(name: "cb", arg: 2, scope: !6583, file: !615, line: 433, type: !655)
!6589 = !DILocalVariable(name: "arg", arg: 3, scope: !6583, file: !615, line: 433, type: !102)
!6590 = !DILocalVariable(name: "dev", scope: !6583, file: !615, line: 435, type: !6591)
!6591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !644)
!6592 = !DILocalVariable(name: "data", scope: !6583, file: !615, line: 436, type: !6382)
!6593 = !DILocation(line: 0, scope: !6583)
!6594 = !DILocation(line: 438, column: 21, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6583, file: !615, line: 438, column: 6)
!6596 = !DILocation(line: 438, column: 6, scope: !6595)
!6597 = !DILocation(line: 438, column: 6, scope: !6583)
!6598 = !DILocation(line: 442, column: 20, scope: !6583)
!6599 = !DILocation(line: 443, column: 17, scope: !6583)
!6600 = !DILocation(line: 443, column: 22, scope: !6583)
!6601 = !DILocation(line: 445, column: 2, scope: !6583)
!6602 = !DILocation(line: 446, column: 1, scope: !6583)
!6603 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !615, file: !615, line: 448, type: !6417, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !543, retainedNodes: !6604)
!6604 = !{!6605, !6606, !6607}
!6605 = !DILocalVariable(name: "line", arg: 1, scope: !6603, file: !615, line: 448, type: !103)
!6606 = !DILocalVariable(name: "dev", scope: !6603, file: !615, line: 450, type: !6591)
!6607 = !DILocalVariable(name: "data", scope: !6603, file: !615, line: 451, type: !6382)
!6608 = !DILocation(line: 0, scope: !6603)
!6609 = !DILocation(line: 453, column: 17, scope: !6603)
!6610 = !DILocation(line: 453, column: 20, scope: !6603)
!6611 = !DILocation(line: 454, column: 17, scope: !6603)
!6612 = !DILocation(line: 454, column: 22, scope: !6603)
!6613 = !DILocation(line: 455, column: 1, scope: !6603)
!6614 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !770, file: !770, line: 183, type: !808, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !6615)
!6615 = !{!6616, !6617, !6618, !6619, !6620}
!6616 = !DILocalVariable(name: "dev", arg: 1, scope: !6614, file: !770, line: 183, type: !799)
!6617 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6614, file: !770, line: 184, type: !810)
!6618 = !DILocalVariable(name: "pclken", scope: !6614, file: !770, line: 186, type: !760)
!6619 = !DILocalVariable(name: "reg", scope: !6614, file: !770, line: 187, type: !2607)
!6620 = !DILocalVariable(name: "reg_val", scope: !6614, file: !770, line: 188, type: !121)
!6621 = !DILocation(line: 0, scope: !6614)
!6622 = !DILocation(line: 192, column: 6, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6614, file: !770, line: 192, column: 6)
!6624 = !DILocation(line: 192, column: 6, scope: !6614)
!6625 = !DILocation(line: 197, column: 52, scope: !6614)
!6626 = !DILocation(line: 197, column: 8, scope: !6614)
!6627 = !DILocation(line: 198, column: 12, scope: !6614)
!6628 = !DILocation(line: 199, column: 21, scope: !6614)
!6629 = !DILocation(line: 199, column: 10, scope: !6614)
!6630 = !DILocation(line: 200, column: 7, scope: !6614)
!6631 = !DILocation(line: 202, column: 2, scope: !6614)
!6632 = !DILocation(line: 203, column: 1, scope: !6614)
!6633 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !770, file: !770, line: 205, type: !808, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !6634)
!6634 = !{!6635, !6636, !6637, !6638, !6639}
!6635 = !DILocalVariable(name: "dev", arg: 1, scope: !6633, file: !770, line: 205, type: !799)
!6636 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6633, file: !770, line: 206, type: !810)
!6637 = !DILocalVariable(name: "pclken", scope: !6633, file: !770, line: 208, type: !760)
!6638 = !DILocalVariable(name: "reg", scope: !6633, file: !770, line: 209, type: !2607)
!6639 = !DILocalVariable(name: "reg_val", scope: !6633, file: !770, line: 210, type: !121)
!6640 = !DILocation(line: 0, scope: !6633)
!6641 = !DILocation(line: 214, column: 6, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6633, file: !770, line: 214, column: 6)
!6643 = !DILocation(line: 214, column: 6, scope: !6633)
!6644 = !DILocation(line: 219, column: 52, scope: !6633)
!6645 = !DILocation(line: 219, column: 8, scope: !6633)
!6646 = !DILocation(line: 220, column: 12, scope: !6633)
!6647 = !DILocation(line: 221, column: 22, scope: !6633)
!6648 = !DILocation(line: 221, column: 13, scope: !6633)
!6649 = !DILocation(line: 221, column: 10, scope: !6633)
!6650 = !DILocation(line: 222, column: 7, scope: !6633)
!6651 = !DILocation(line: 224, column: 2, scope: !6633)
!6652 = !DILocation(line: 225, column: 1, scope: !6633)
!6653 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !770, file: !770, line: 262, type: !824, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !6654)
!6654 = !{!6655, !6656, !6657, !6658, !6659, !6660, !6661}
!6655 = !DILocalVariable(name: "clock", arg: 1, scope: !6653, file: !770, line: 262, type: !799)
!6656 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6653, file: !770, line: 263, type: !810)
!6657 = !DILocalVariable(name: "rate", arg: 3, scope: !6653, file: !770, line: 264, type: !766)
!6658 = !DILocalVariable(name: "pclken", scope: !6653, file: !770, line: 266, type: !760)
!6659 = !DILocalVariable(name: "ahb_clock", scope: !6653, file: !770, line: 273, type: !121)
!6660 = !DILocalVariable(name: "apb1_clock", scope: !6653, file: !770, line: 274, type: !121)
!6661 = !DILocalVariable(name: "apb2_clock", scope: !6653, file: !770, line: 276, type: !121)
!6662 = !DILocation(line: 0, scope: !6653)
!6663 = !DILocation(line: 273, column: 23, scope: !6653)
!6664 = !DILocation(line: 299, column: 18, scope: !6653)
!6665 = !DILocation(line: 299, column: 2, scope: !6653)
!6666 = !DILocation(line: 374, column: 3, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6653, file: !770, line: 299, column: 23)
!6668 = !DILocation(line: 379, column: 3, scope: !6667)
!6669 = !DILocation(line: 389, column: 3, scope: !6667)
!6670 = !DILocation(line: 0, scope: !6667)
!6671 = !DILocation(line: 396, column: 1, scope: !6653)
!6672 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !770, file: !770, line: 227, type: !840, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !6673)
!6673 = !{!6674, !6675, !6676, !6677, !6678, !6679, !6680, !6681}
!6674 = !DILocalVariable(name: "dev", arg: 1, scope: !6672, file: !770, line: 227, type: !799)
!6675 = !DILocalVariable(name: "sub_system", arg: 2, scope: !6672, file: !770, line: 228, type: !810)
!6676 = !DILocalVariable(name: "data", arg: 3, scope: !6672, file: !770, line: 229, type: !102)
!6677 = !DILocalVariable(name: "pclken", scope: !6672, file: !770, line: 233, type: !760)
!6678 = !DILocalVariable(name: "reg", scope: !6672, file: !770, line: 234, type: !2607)
!6679 = !DILocalVariable(name: "reg_val", scope: !6672, file: !770, line: 235, type: !121)
!6680 = !DILocalVariable(name: "dt_val", scope: !6672, file: !770, line: 235, type: !121)
!6681 = !DILocalVariable(name: "err", scope: !6672, file: !770, line: 236, type: !103)
!6682 = !DILocation(line: 0, scope: !6672)
!6683 = !DILocation(line: 241, column: 30, scope: !6672)
!6684 = !DILocation(line: 241, column: 8, scope: !6672)
!6685 = !DILocation(line: 242, column: 10, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6672, file: !770, line: 242, column: 6)
!6687 = !DILocation(line: 242, column: 6, scope: !6672)
!6688 = !DILocation(line: 247, column: 11, scope: !6672)
!6689 = !DILocation(line: 248, column: 6, scope: !6672)
!6690 = !DILocation(line: 247, column: 44, scope: !6672)
!6691 = !DILocation(line: 250, column: 6, scope: !6672)
!6692 = !DILocation(line: 249, column: 52, scope: !6672)
!6693 = !DILocation(line: 249, column: 8, scope: !6672)
!6694 = !DILocation(line: 251, column: 12, scope: !6672)
!6695 = !DILocation(line: 252, column: 10, scope: !6672)
!6696 = !DILocation(line: 253, column: 7, scope: !6672)
!6697 = !DILocation(line: 255, column: 2, scope: !6672)
!6698 = !DILocation(line: 260, column: 1, scope: !6672)
!6699 = distinct !DISubprogram(name: "enabled_clock", scope: !770, file: !770, line: 100, type: !6700, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !6702)
!6700 = !DISubroutineType(types: !6701)
!6701 = !{!103, !121}
!6702 = !{!6703, !6704}
!6703 = !DILocalVariable(name: "src_clk", arg: 1, scope: !6699, file: !770, line: 100, type: !121)
!6704 = !DILocalVariable(name: "r", scope: !6699, file: !770, line: 102, type: !103)
!6705 = !DILocation(line: 0, scope: !6699)
!6706 = !DILocation(line: 104, column: 2, scope: !6699)
!6707 = !DILocation(line: 180, column: 2, scope: !6699)
!6708 = !DILocation(line: 181, column: 1, scope: !6699)
!6709 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !770, file: !770, line: 641, type: !797, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !6710)
!6710 = !{!6711, !6712, !6713}
!6711 = !DILocalVariable(name: "dev", arg: 1, scope: !6709, file: !770, line: 641, type: !799)
!6712 = !DILocalVariable(name: "old_flash_freq", scope: !6709, file: !770, line: 664, type: !121)
!6713 = !DILocalVariable(name: "new_flash_freq", scope: !6709, file: !770, line: 665, type: !121)
!6714 = !DILocation(line: 0, scope: !6709)
!6715 = !DILocation(line: 646, column: 2, scope: !6709)
!6716 = !DILocation(line: 667, column: 19, scope: !6709)
!6717 = !DILocation(line: 674, column: 21, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6709, file: !770, line: 674, column: 6)
!6719 = !DILocation(line: 674, column: 6, scope: !6709)
!6720 = !DILocation(line: 675, column: 3, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6718, file: !770, line: 674, column: 59)
!6722 = !DILocation(line: 676, column: 2, scope: !6721)
!6723 = !DILocation(line: 680, column: 2, scope: !6709)
!6724 = !DILocation(line: 683, column: 2, scope: !6709)
!6725 = !DILocation(line: 690, column: 3, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6727, file: !770, line: 689, column: 9)
!6727 = distinct !DILexicalBlock(scope: !6709, file: !770, line: 685, column: 6)
!6728 = !DILocation(line: 695, column: 2, scope: !6709)
!6729 = !DILocation(line: 696, column: 2, scope: !6709)
!6730 = !DILocation(line: 696, column: 9, scope: !6709)
!6731 = !DILocation(line: 696, column: 34, scope: !6709)
!6732 = distinct !{!6732, !6729, !6733}
!6733 = !DILocation(line: 697, column: 2, scope: !6709)
!6734 = !DILocation(line: 720, column: 21, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6709, file: !770, line: 720, column: 6)
!6736 = !DILocation(line: 720, column: 6, scope: !6709)
!6737 = !DILocation(line: 721, column: 3, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6735, file: !770, line: 720, column: 60)
!6739 = !DILocation(line: 722, column: 2, scope: !6738)
!6740 = !DILocation(line: 725, column: 18, scope: !6709)
!6741 = !DILocation(line: 728, column: 2, scope: !6709)
!6742 = !DILocation(line: 730, column: 2, scope: !6709)
!6743 = !DILocation(line: 745, column: 2, scope: !6709)
!6744 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !6745, file: !6745, line: 995, type: !5451, scopeLine: 996, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !335)
!6745 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6746 = !DILocation(line: 997, column: 21, scope: !6744)
!6747 = !DILocation(line: 997, column: 3, scope: !6744)
!6748 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !770, file: !770, line: 507, type: !2730, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !335)
!6749 = !DILocation(line: 534, column: 7, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6751, file: !770, line: 534, column: 7)
!6751 = distinct !DILexicalBlock(scope: !6752, file: !770, line: 532, column: 37)
!6752 = distinct !DILexicalBlock(scope: !6748, file: !770, line: 532, column: 6)
!6753 = !DILocation(line: 534, column: 28, scope: !6750)
!6754 = !DILocation(line: 534, column: 7, scope: !6751)
!6755 = !DILocation(line: 536, column: 4, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6750, file: !770, line: 534, column: 34)
!6757 = !DILocation(line: 537, column: 4, scope: !6756)
!6758 = !DILocation(line: 537, column: 11, scope: !6756)
!6759 = !DILocation(line: 537, column: 32, scope: !6756)
!6760 = distinct !{!6760, !6757, !6761}
!6761 = !DILocation(line: 539, column: 4, scope: !6756)
!6762 = !DILocation(line: 583, column: 3, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6764, file: !770, line: 577, column: 37)
!6764 = distinct !DILexicalBlock(scope: !6748, file: !770, line: 577, column: 6)
!6765 = !DILocation(line: 584, column: 3, scope: !6763)
!6766 = !DILocation(line: 584, column: 10, scope: !6763)
!6767 = !DILocation(line: 584, column: 31, scope: !6763)
!6768 = distinct !{!6768, !6765, !6769}
!6769 = !DILocation(line: 585, column: 3, scope: !6763)
!6770 = !DILocation(line: 627, column: 1, scope: !6748)
!6771 = distinct !DISubprogram(name: "set_up_plls", scope: !770, file: !770, line: 448, type: !2730, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !335)
!6772 = !DILocation(line: 460, column: 6, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6771, file: !770, line: 460, column: 6)
!6774 = !DILocation(line: 460, column: 31, scope: !6773)
!6775 = !DILocation(line: 460, column: 6, scope: !6771)
!6776 = !DILocation(line: 461, column: 3, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6773, file: !770, line: 460, column: 67)
!6778 = !DILocation(line: 462, column: 3, scope: !6777)
!6779 = !DILocation(line: 463, column: 2, scope: !6777)
!6780 = !DILocation(line: 464, column: 2, scope: !6771)
!6781 = !DILocation(line: 496, column: 2, scope: !6771)
!6782 = !DILocation(line: 499, column: 2, scope: !6771)
!6783 = !DILocation(line: 500, column: 2, scope: !6771)
!6784 = !DILocation(line: 500, column: 9, scope: !6771)
!6785 = !DILocation(line: 500, column: 30, scope: !6771)
!6786 = distinct !{!6786, !6783, !6787}
!6787 = !DILocation(line: 502, column: 2, scope: !6771)
!6788 = !DILocation(line: 505, column: 1, scope: !6771)
!6789 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !6745, file: !6745, line: 944, type: !4534, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !6790)
!6790 = !{!6791}
!6791 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !6789, file: !6745, line: 944, type: !121)
!6792 = !DILocation(line: 0, scope: !6789)
!6793 = !DILocation(line: 946, column: 3, scope: !6789)
!6794 = !DILocation(line: 947, column: 1, scope: !6789)
!6795 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !6745, file: !6745, line: 910, type: !4534, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !6796)
!6796 = !{!6797}
!6797 = !DILocalVariable(name: "Source", arg: 1, scope: !6795, file: !6745, line: 910, type: !121)
!6798 = !DILocation(line: 0, scope: !6795)
!6799 = !DILocation(line: 912, column: 3, scope: !6795)
!6800 = !DILocation(line: 913, column: 1, scope: !6795)
!6801 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !6745, file: !6745, line: 924, type: !5451, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !335)
!6802 = !DILocation(line: 926, column: 21, scope: !6801)
!6803 = !DILocation(line: 926, column: 3, scope: !6801)
!6804 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !6745, file: !6745, line: 960, type: !4534, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !6805)
!6805 = !{!6806}
!6806 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !6804, file: !6745, line: 960, type: !121)
!6807 = !DILocation(line: 0, scope: !6804)
!6808 = !DILocation(line: 962, column: 3, scope: !6804)
!6809 = !DILocation(line: 963, column: 1, scope: !6804)
!6810 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !6745, file: !6745, line: 976, type: !4534, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !6811)
!6811 = !{!6812}
!6812 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !6810, file: !6745, line: 976, type: !121)
!6813 = !DILocation(line: 0, scope: !6810)
!6814 = !DILocation(line: 978, column: 3, scope: !6810)
!6815 = !DILocation(line: 979, column: 1, scope: !6810)
!6816 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !770, file: !770, line: 409, type: !2730, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !335)
!6817 = !DILocation(line: 412, column: 6, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6816, file: !770, line: 412, column: 6)
!6819 = !DILocation(line: 412, column: 27, scope: !6818)
!6820 = !DILocation(line: 412, column: 6, scope: !6816)
!6821 = !DILocation(line: 414, column: 3, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6818, file: !770, line: 412, column: 33)
!6823 = !DILocation(line: 415, column: 3, scope: !6822)
!6824 = !DILocation(line: 415, column: 10, scope: !6822)
!6825 = !DILocation(line: 415, column: 31, scope: !6822)
!6826 = distinct !{!6826, !6823, !6827}
!6827 = !DILocation(line: 417, column: 3, scope: !6822)
!6828 = !DILocation(line: 421, column: 2, scope: !6816)
!6829 = !DILocation(line: 422, column: 2, scope: !6816)
!6830 = !DILocation(line: 422, column: 9, scope: !6816)
!6831 = !DILocation(line: 422, column: 34, scope: !6816)
!6832 = distinct !{!6832, !6829, !6833}
!6833 = !DILocation(line: 423, column: 2, scope: !6816)
!6834 = !DILocation(line: 424, column: 1, scope: !6816)
!6835 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !6745, file: !6745, line: 1180, type: !2730, scopeLine: 1181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !335)
!6836 = !DILocation(line: 1182, column: 3, scope: !6835)
!6837 = !DILocation(line: 1183, column: 1, scope: !6835)
!6838 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !6745, file: !6745, line: 1169, type: !2730, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !335)
!6839 = !DILocation(line: 1171, column: 3, scope: !6838)
!6840 = !DILocation(line: 1172, column: 1, scope: !6838)
!6841 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !6745, file: !6745, line: 1190, type: !5451, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !335)
!6842 = !DILocation(line: 1192, column: 12, scope: !6841)
!6843 = !DILocation(line: 1192, column: 11, scope: !6841)
!6844 = !DILocation(line: 1192, column: 3, scope: !6841)
!6845 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !6745, file: !6745, line: 612, type: !5451, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !335)
!6846 = !DILocation(line: 614, column: 12, scope: !6845)
!6847 = !DILocation(line: 614, column: 11, scope: !6845)
!6848 = !DILocation(line: 614, column: 3, scope: !6845)
!6849 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !6745, file: !6745, line: 592, type: !2730, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !335)
!6850 = !DILocation(line: 594, column: 3, scope: !6849)
!6851 = !DILocation(line: 595, column: 1, scope: !6849)
!6852 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !6745, file: !6745, line: 760, type: !2730, scopeLine: 761, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !335)
!6853 = !DILocation(line: 762, column: 3, scope: !6852)
!6854 = !DILocation(line: 763, column: 1, scope: !6852)
!6855 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !6745, file: !6745, line: 780, type: !5451, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !726, retainedNodes: !335)
!6856 = !DILocation(line: 782, column: 12, scope: !6855)
!6857 = !DILocation(line: 782, column: 11, scope: !6855)
!6858 = !DILocation(line: 782, column: 3, scope: !6855)
!6859 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !6860, file: !6860, line: 48, type: !5451, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !335)
!6860 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32l0_l1.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6861 = !DILocation(line: 51, column: 3, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6863, file: !6860, line: 50, column: 37)
!6863 = distinct !DILexicalBlock(scope: !6859, file: !6860, line: 50, column: 6)
!6864 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !6860, file: !6860, line: 64, type: !2730, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !335)
!6865 = !DILocation(line: 66, column: 2, scope: !6864)
!6866 = !DILocation(line: 69, column: 1, scope: !6864)
!6867 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !6745, file: !6745, line: 1219, type: !6868, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !6870)
!6868 = !DISubroutineType(types: !6869)
!6869 = !{null, !121, !121, !121}
!6870 = !{!6871, !6872, !6873}
!6871 = !DILocalVariable(name: "Source", arg: 1, scope: !6867, file: !6745, line: 1219, type: !121)
!6872 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !6867, file: !6745, line: 1219, type: !121)
!6873 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !6867, file: !6745, line: 1219, type: !121)
!6874 = !DILocation(line: 0, scope: !6867)
!6875 = !DILocation(line: 1221, column: 3, scope: !6867)
!6876 = !DILocation(line: 1222, column: 1, scope: !6867)
!6877 = distinct !DISubprogram(name: "get_pllout_frequency", scope: !6860, file: !6860, line: 75, type: !5451, scopeLine: 76, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !335)
!6878 = !DILocation(line: 77, column: 9, scope: !6877)
!6879 = !DILocation(line: 77, column: 2, scope: !6877)
!6880 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !6860, file: !6860, line: 87, type: !2730, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !335)
!6881 = !DILocation(line: 93, column: 2, scope: !6880)
!6882 = !DILocation(line: 95, column: 1, scope: !6880)
!6883 = distinct !DISubprogram(name: "LL_APB2_GRP1_EnableClock", scope: !4533, file: !4533, line: 895, type: !4534, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !6884)
!6884 = !{!6885, !6886}
!6885 = !DILocalVariable(name: "Periphs", arg: 1, scope: !6883, file: !4533, line: 895, type: !121)
!6886 = !DILocalVariable(name: "tmpreg", scope: !6883, file: !4533, line: 897, type: !120)
!6887 = !DILocation(line: 0, scope: !6883)
!6888 = !DILocation(line: 897, column: 3, scope: !6883)
!6889 = !DILocation(line: 897, column: 17, scope: !6883)
!6890 = !DILocation(line: 898, column: 3, scope: !6883)
!6891 = !DILocation(line: 900, column: 12, scope: !6883)
!6892 = !DILocation(line: 900, column: 10, scope: !6883)
!6893 = !DILocation(line: 901, column: 9, scope: !6883)
!6894 = !DILocation(line: 902, column: 1, scope: !6883)
!6895 = distinct !DISubprogram(name: "uart_console_init", scope: !901, file: !901, line: 588, type: !878, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !6896)
!6896 = !{!6897}
!6897 = !DILocalVariable(name: "arg", arg: 1, scope: !6895, file: !901, line: 588, type: !856)
!6898 = !DILocation(line: 0, scope: !6895)
!6899 = !DILocation(line: 593, column: 7, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6895, file: !901, line: 593, column: 6)
!6901 = !DILocation(line: 593, column: 6, scope: !6895)
!6902 = !DILocation(line: 597, column: 2, scope: !6895)
!6903 = !DILocation(line: 599, column: 2, scope: !6895)
!6904 = !DILocation(line: 600, column: 1, scope: !6895)
!6905 = distinct !DISubprogram(name: "device_is_ready", scope: !6293, file: !6293, line: 47, type: !6906, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !6908)
!6906 = !DISubroutineType(types: !6907)
!6907 = !{!170, !856}
!6908 = !{!6909}
!6909 = !DILocalVariable(name: "dev", arg: 1, scope: !6905, file: !6293, line: 47, type: !856)
!6910 = !DILocation(line: 0, scope: !6905)
!6911 = !DILocation(line: 55, column: 2, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6905, file: !6293, line: 55, column: 2)
!6913 = !{i64 2152408937}
!6914 = !DILocation(line: 56, column: 9, scope: !6905)
!6915 = !DILocation(line: 56, column: 2, scope: !6905)
!6916 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !901, file: !901, line: 573, type: !2730, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !335)
!6917 = !DILocation(line: 576, column: 2, scope: !6916)
!6918 = !DILocation(line: 579, column: 2, scope: !6916)
!6919 = !DILocation(line: 581, column: 1, scope: !6916)
!6920 = distinct !DISubprogram(name: "console_out", scope: !901, file: !901, line: 77, type: !107, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !6921)
!6921 = !{!6922}
!6922 = !DILocalVariable(name: "c", arg: 1, scope: !6920, file: !901, line: 77, type: !103)
!6923 = !DILocation(line: 0, scope: !6920)
!6924 = !DILocation(line: 89, column: 11, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6920, file: !901, line: 89, column: 6)
!6926 = !DILocation(line: 89, column: 6, scope: !6920)
!6927 = !DILocation(line: 90, column: 3, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6925, file: !901, line: 89, column: 17)
!6929 = !DILocation(line: 91, column: 2, scope: !6928)
!6930 = !DILocation(line: 92, column: 34, scope: !6920)
!6931 = !DILocation(line: 92, column: 2, scope: !6920)
!6932 = !DILocation(line: 94, column: 2, scope: !6920)
!6933 = distinct !DISubprogram(name: "uart_poll_out", scope: !6934, file: !6934, line: 95, type: !874, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !6935)
!6934 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_wistrio/hello_world")
!6935 = !{!6936, !6937}
!6936 = !DILocalVariable(name: "dev", arg: 1, scope: !6933, file: !6934, line: 95, type: !856)
!6937 = !DILocalVariable(name: "out_char", arg: 2, scope: !6933, file: !6934, line: 95, type: !168)
!6938 = !DILocation(line: 0, scope: !6933)
!6939 = !DILocation(line: 105, column: 2, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6933, file: !6934, line: 105, column: 2)
!6941 = !{i64 2152492328}
!6942 = !DILocation(line: 106, column: 2, scope: !6933)
!6943 = !DILocation(line: 107, column: 1, scope: !6933)
!6944 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !850, file: !850, line: 574, type: !874, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !6945)
!6945 = !{!6946, !6947, !6948}
!6946 = !DILocalVariable(name: "dev", arg: 1, scope: !6944, file: !850, line: 574, type: !856)
!6947 = !DILocalVariable(name: "out_char", arg: 2, scope: !6944, file: !850, line: 575, type: !168)
!6948 = !DILocalVariable(name: "api", scope: !6944, file: !850, line: 577, type: !847)
!6949 = !DILocation(line: 0, scope: !6944)
!6950 = !DILocation(line: 578, column: 40, scope: !6944)
!6951 = !DILocation(line: 580, column: 7, scope: !6944)
!6952 = !DILocation(line: 580, column: 2, scope: !6944)
!6953 = !DILocation(line: 581, column: 1, scope: !6944)
!6954 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !6906, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !6955)
!6955 = !{!6956}
!6956 = !DILocalVariable(name: "dev", arg: 1, scope: !6954, file: !154, line: 730, type: !856)
!6957 = !DILocation(line: 0, scope: !6954)
!6958 = !DILocation(line: 732, column: 9, scope: !6954)
!6959 = !DILocation(line: 732, column: 2, scope: !6954)
!6960 = distinct !DISubprogram(name: "uart_register_input", scope: !901, file: !901, line: 560, type: !6961, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !844, retainedNodes: !7006)
!6961 = !DISubroutineType(types: !6962)
!6962 = !{null, !6963, !6963, !7003}
!6963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6964, size: 32)
!6964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !320, line: 2208, size: 128, elements: !6965)
!6965 = !{!6966}
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !6964, file: !320, line: 2209, baseType: !6967, size: 128)
!6967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !320, line: 1709, size: 128, elements: !6968)
!6968 = !{!6969, !6982, !6984}
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !6967, file: !320, line: 1710, baseType: !6970, size: 64)
!6970 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !6971, line: 46, baseType: !6972)
!6971 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !6971, line: 41, size: 64, elements: !6973)
!6973 = !{!6974, !6981}
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6972, file: !6971, line: 42, baseType: !6975, size: 32)
!6975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6976, size: 32)
!6976 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !6971, line: 39, baseType: !6977)
!6977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !6971, line: 35, size: 32, elements: !6978)
!6978 = !{!6979}
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !6977, file: !6971, line: 36, baseType: !6980, size: 32)
!6980 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !6971, line: 32, baseType: !121)
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6972, file: !6971, line: 43, baseType: !6975, size: 32, offset: 32)
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6967, file: !320, line: 1711, baseType: !6983, offset: 64)
!6983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6967, file: !320, line: 1712, baseType: !6985, size: 64, offset: 64)
!6985 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !260, line: 233, baseType: !6986)
!6986 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !260, line: 231, size: 64, elements: !6987)
!6987 = !{!6988}
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6986, file: !260, line: 232, baseType: !6989, size: 64)
!6989 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !6990)
!6990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !6991)
!6991 = !{!6992, !6998}
!6992 = !DIDerivedType(tag: DW_TAG_member, scope: !6990, file: !234, line: 38, baseType: !6993, size: 32)
!6993 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6990, file: !234, line: 38, size: 32, elements: !6994)
!6994 = !{!6995, !6997}
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6993, file: !234, line: 39, baseType: !6996, size: 32)
!6996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6990, size: 32)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6993, file: !234, line: 40, baseType: !6996, size: 32)
!6998 = !DIDerivedType(tag: DW_TAG_member, scope: !6990, file: !234, line: 42, baseType: !6999, size: 32, offset: 32)
!6999 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6990, file: !234, line: 42, size: 32, elements: !7000)
!7000 = !{!7001, !7002}
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6999, file: !234, line: 43, baseType: !6996, size: 32)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6999, file: !234, line: 44, baseType: !6996, size: 32)
!7003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7004, size: 32)
!7004 = !DISubroutineType(types: !7005)
!7005 = !{!167, !1017, !167}
!7006 = !{!7007, !7008, !7009}
!7007 = !DILocalVariable(name: "avail", arg: 1, scope: !6960, file: !901, line: 560, type: !6963)
!7008 = !DILocalVariable(name: "lines", arg: 2, scope: !6960, file: !901, line: 560, type: !6963)
!7009 = !DILocalVariable(name: "completion", arg: 3, scope: !6960, file: !901, line: 561, type: !7003)
!7010 = !DILocation(line: 0, scope: !6960)
!7011 = !DILocation(line: 566, column: 1, scope: !6960)
!7012 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1061, file: !1061, line: 523, type: !926, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7013)
!7013 = !{!7014, !7015, !7016, !7017, !7018}
!7014 = !DILocalVariable(name: "dev", arg: 1, scope: !7012, file: !1061, line: 523, type: !928)
!7015 = !DILocalVariable(name: "pin", arg: 2, scope: !7012, file: !1061, line: 524, type: !473)
!7016 = !DILocalVariable(name: "flags", arg: 3, scope: !7012, file: !1061, line: 524, type: !474)
!7017 = !DILocalVariable(name: "err", scope: !7012, file: !1061, line: 526, type: !103)
!7018 = !DILocalVariable(name: "pincfg", scope: !7012, file: !1061, line: 527, type: !103)
!7019 = !DILocation(line: 0, scope: !7012)
!7020 = !DILocation(line: 527, column: 2, scope: !7012)
!7021 = !DILocation(line: 532, column: 8, scope: !7012)
!7022 = !DILocation(line: 533, column: 10, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7012, file: !1061, line: 533, column: 6)
!7024 = !DILocation(line: 533, column: 6, scope: !7012)
!7025 = !DILocation(line: 543, column: 13, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7012, file: !1061, line: 543, column: 6)
!7027 = !DILocation(line: 543, column: 28, scope: !7026)
!7028 = !DILocation(line: 543, column: 6, scope: !7012)
!7029 = !DILocation(line: 544, column: 14, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7031, file: !1061, line: 544, column: 7)
!7031 = distinct !DILexicalBlock(scope: !7026, file: !1061, line: 543, column: 34)
!7032 = !DILocation(line: 544, column: 39, scope: !7030)
!7033 = !DILocation(line: 544, column: 7, scope: !7031)
!7034 = !DILocation(line: 545, column: 38, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7030, file: !1061, line: 544, column: 45)
!7036 = !DILocation(line: 545, column: 4, scope: !7035)
!7037 = !DILocation(line: 546, column: 3, scope: !7035)
!7038 = !DILocation(line: 546, column: 21, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7030, file: !1061, line: 546, column: 14)
!7040 = !DILocation(line: 546, column: 45, scope: !7039)
!7041 = !DILocation(line: 546, column: 14, scope: !7030)
!7042 = !DILocation(line: 547, column: 40, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7039, file: !1061, line: 546, column: 51)
!7044 = !DILocation(line: 547, column: 4, scope: !7043)
!7045 = !DILocation(line: 548, column: 3, scope: !7043)
!7046 = !DILocation(line: 551, column: 32, scope: !7012)
!7047 = !DILocation(line: 551, column: 37, scope: !7012)
!7048 = !DILocation(line: 551, column: 2, scope: !7012)
!7049 = !DILocation(line: 554, column: 6, scope: !7012)
!7050 = !DILocation(line: 562, column: 1, scope: !7012)
!7051 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1061, file: !1061, line: 410, type: !7052, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7054)
!7052 = !DISubroutineType(types: !7053)
!7053 = !{!103, !928, !766}
!7054 = !{!7055, !7056, !7057, !7059}
!7055 = !DILocalVariable(name: "dev", arg: 1, scope: !7051, file: !1061, line: 410, type: !928)
!7056 = !DILocalVariable(name: "value", arg: 2, scope: !7051, file: !1061, line: 410, type: !766)
!7057 = !DILocalVariable(name: "cfg", scope: !7051, file: !1061, line: 412, type: !7058)
!7058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 32)
!7059 = !DILocalVariable(name: "gpio", scope: !7051, file: !1061, line: 413, type: !995)
!7060 = !DILocation(line: 0, scope: !7051)
!7061 = !DILocation(line: 412, column: 45, scope: !7051)
!7062 = !DILocation(line: 413, column: 44, scope: !7051)
!7063 = !DILocation(line: 415, column: 11, scope: !7051)
!7064 = !DILocation(line: 415, column: 9, scope: !7051)
!7065 = !DILocation(line: 417, column: 2, scope: !7051)
!7066 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1061, file: !1061, line: 420, type: !949, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7067)
!7067 = !{!7068, !7069, !7070, !7071, !7072, !7073}
!7068 = !DILocalVariable(name: "dev", arg: 1, scope: !7066, file: !1061, line: 420, type: !928)
!7069 = !DILocalVariable(name: "mask", arg: 2, scope: !7066, file: !1061, line: 421, type: !485)
!7070 = !DILocalVariable(name: "value", arg: 3, scope: !7066, file: !1061, line: 422, type: !480)
!7071 = !DILocalVariable(name: "cfg", scope: !7066, file: !1061, line: 424, type: !7058)
!7072 = !DILocalVariable(name: "gpio", scope: !7066, file: !1061, line: 425, type: !995)
!7073 = !DILocalVariable(name: "port_value", scope: !7066, file: !1061, line: 426, type: !121)
!7074 = !DILocation(line: 0, scope: !7066)
!7075 = !DILocation(line: 424, column: 45, scope: !7066)
!7076 = !DILocation(line: 425, column: 44, scope: !7066)
!7077 = !DILocation(line: 430, column: 15, scope: !7066)
!7078 = !DILocation(line: 431, column: 46, scope: !7066)
!7079 = !DILocation(line: 431, column: 44, scope: !7066)
!7080 = !DILocation(line: 431, column: 61, scope: !7066)
!7081 = !DILocation(line: 431, column: 53, scope: !7066)
!7082 = !DILocation(line: 431, column: 2, scope: !7066)
!7083 = !DILocation(line: 435, column: 2, scope: !7066)
!7084 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1061, file: !1061, line: 438, type: !953, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7085)
!7085 = !{!7086, !7087, !7088, !7089}
!7086 = !DILocalVariable(name: "dev", arg: 1, scope: !7084, file: !1061, line: 438, type: !928)
!7087 = !DILocalVariable(name: "pins", arg: 2, scope: !7084, file: !1061, line: 439, type: !485)
!7088 = !DILocalVariable(name: "cfg", scope: !7084, file: !1061, line: 441, type: !7058)
!7089 = !DILocalVariable(name: "gpio", scope: !7084, file: !1061, line: 442, type: !995)
!7090 = !DILocation(line: 0, scope: !7084)
!7091 = !DILocation(line: 441, column: 45, scope: !7084)
!7092 = !DILocation(line: 442, column: 44, scope: !7084)
!7093 = !DILocation(line: 448, column: 2, scope: !7084)
!7094 = !DILocation(line: 450, column: 2, scope: !7084)
!7095 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1061, file: !1061, line: 453, type: !953, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7096)
!7096 = !{!7097, !7098, !7099, !7100}
!7097 = !DILocalVariable(name: "dev", arg: 1, scope: !7095, file: !1061, line: 453, type: !928)
!7098 = !DILocalVariable(name: "pins", arg: 2, scope: !7095, file: !1061, line: 454, type: !485)
!7099 = !DILocalVariable(name: "cfg", scope: !7095, file: !1061, line: 456, type: !7058)
!7100 = !DILocalVariable(name: "gpio", scope: !7095, file: !1061, line: 457, type: !995)
!7101 = !DILocation(line: 0, scope: !7095)
!7102 = !DILocation(line: 456, column: 45, scope: !7095)
!7103 = !DILocation(line: 457, column: 44, scope: !7095)
!7104 = !DILocation(line: 467, column: 2, scope: !7095)
!7105 = !DILocation(line: 470, column: 2, scope: !7095)
!7106 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1061, file: !1061, line: 473, type: !953, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7107)
!7107 = !{!7108, !7109, !7110, !7111}
!7108 = !DILocalVariable(name: "dev", arg: 1, scope: !7106, file: !1061, line: 473, type: !928)
!7109 = !DILocalVariable(name: "pins", arg: 2, scope: !7106, file: !1061, line: 474, type: !485)
!7110 = !DILocalVariable(name: "cfg", scope: !7106, file: !1061, line: 476, type: !7058)
!7111 = !DILocalVariable(name: "gpio", scope: !7106, file: !1061, line: 477, type: !995)
!7112 = !DILocation(line: 0, scope: !7106)
!7113 = !DILocation(line: 476, column: 45, scope: !7106)
!7114 = !DILocation(line: 477, column: 44, scope: !7106)
!7115 = !DILocation(line: 484, column: 2, scope: !7106)
!7116 = !DILocation(line: 487, column: 2, scope: !7106)
!7117 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1061, file: !1061, line: 594, type: !959, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7118)
!7118 = !{!7119, !7120, !7121, !7122, !7123, !7124, !7126, !7127, !7128}
!7119 = !DILocalVariable(name: "dev", arg: 1, scope: !7117, file: !1061, line: 594, type: !928)
!7120 = !DILocalVariable(name: "pin", arg: 2, scope: !7117, file: !1061, line: 595, type: !473)
!7121 = !DILocalVariable(name: "mode", arg: 3, scope: !7117, file: !1061, line: 596, type: !438)
!7122 = !DILocalVariable(name: "trig", arg: 4, scope: !7117, file: !1061, line: 597, type: !444)
!7123 = !DILocalVariable(name: "cfg", scope: !7117, file: !1061, line: 599, type: !7058)
!7124 = !DILocalVariable(name: "data", scope: !7117, file: !1061, line: 600, type: !7125)
!7125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 32)
!7126 = !DILocalVariable(name: "edge", scope: !7117, file: !1061, line: 601, type: !103)
!7127 = !DILocalVariable(name: "err", scope: !7117, file: !1061, line: 602, type: !103)
!7128 = !DILabel(scope: !7117, name: "exit", file: !1061, line: 643)
!7129 = !DILocation(line: 0, scope: !7117)
!7130 = !DILocation(line: 599, column: 45, scope: !7117)
!7131 = !DILocation(line: 604, column: 6, scope: !7117)
!7132 = !DILocation(line: 605, column: 34, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7134, file: !1061, line: 605, column: 7)
!7134 = distinct !DILexicalBlock(scope: !7135, file: !1061, line: 604, column: 38)
!7135 = distinct !DILexicalBlock(scope: !7117, file: !1061, line: 604, column: 6)
!7136 = !DILocation(line: 605, column: 7, scope: !7133)
!7137 = !DILocation(line: 605, column: 47, scope: !7133)
!7138 = !DILocation(line: 605, column: 39, scope: !7133)
!7139 = !DILocation(line: 605, column: 7, scope: !7134)
!7140 = !DILocation(line: 606, column: 4, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7133, file: !1061, line: 605, column: 53)
!7142 = !DILocation(line: 607, column: 4, scope: !7141)
!7143 = !DILocation(line: 608, column: 4, scope: !7141)
!7144 = !DILocation(line: 609, column: 3, scope: !7141)
!7145 = !DILocation(line: 600, column: 38, scope: !7117)
!7146 = !DILocation(line: 620, column: 30, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7117, file: !1061, line: 620, column: 6)
!7148 = !DILocation(line: 620, column: 6, scope: !7147)
!7149 = !DILocation(line: 620, column: 57, scope: !7147)
!7150 = !DILocation(line: 620, column: 6, scope: !7117)
!7151 = !DILocation(line: 625, column: 29, scope: !7117)
!7152 = !DILocation(line: 625, column: 2, scope: !7117)
!7153 = !DILocation(line: 627, column: 2, scope: !7117)
!7154 = !DILocation(line: 630, column: 3, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7117, file: !1061, line: 627, column: 16)
!7156 = !DILocation(line: 633, column: 3, scope: !7155)
!7157 = !DILocation(line: 636, column: 3, scope: !7155)
!7158 = !DILocation(line: 639, column: 2, scope: !7117)
!7159 = !DILocation(line: 641, column: 2, scope: !7117)
!7160 = !DILocation(line: 643, column: 1, scope: !7117)
!7161 = !DILocation(line: 644, column: 2, scope: !7117)
!7162 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1061, file: !1061, line: 647, type: !963, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7163)
!7163 = !{!7164, !7165, !7166, !7167}
!7164 = !DILocalVariable(name: "dev", arg: 1, scope: !7162, file: !1061, line: 647, type: !928)
!7165 = !DILocalVariable(name: "callback", arg: 2, scope: !7162, file: !1061, line: 648, type: !965)
!7166 = !DILocalVariable(name: "set", arg: 3, scope: !7162, file: !1061, line: 649, type: !170)
!7167 = !DILocalVariable(name: "data", scope: !7162, file: !1061, line: 651, type: !7125)
!7168 = !DILocation(line: 0, scope: !7162)
!7169 = !DILocation(line: 651, column: 38, scope: !7162)
!7170 = !DILocation(line: 653, column: 37, scope: !7162)
!7171 = !DILocation(line: 653, column: 9, scope: !7162)
!7172 = !DILocation(line: 653, column: 2, scope: !7162)
!7173 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !7174, file: !7174, line: 38, type: !7175, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7178)
!7174 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7175 = !DISubroutineType(types: !7176)
!7176 = !{!103, !7177, !965, !170}
!7177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 32)
!7178 = !{!7179, !7180, !7181}
!7179 = !DILocalVariable(name: "callbacks", arg: 1, scope: !7173, file: !7174, line: 38, type: !7177)
!7180 = !DILocalVariable(name: "callback", arg: 2, scope: !7173, file: !7174, line: 39, type: !965)
!7181 = !DILocalVariable(name: "set", arg: 3, scope: !7173, file: !7174, line: 40, type: !170)
!7182 = !DILocation(line: 0, scope: !7173)
!7183 = !DILocation(line: 45, column: 7, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7173, file: !7174, line: 45, column: 6)
!7185 = !DILocation(line: 45, column: 6, scope: !7173)
!7186 = !DILocation(line: 46, column: 56, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7188, file: !7174, line: 46, column: 7)
!7188 = distinct !DILexicalBlock(scope: !7184, file: !7174, line: 45, column: 38)
!7189 = !DILocation(line: 46, column: 8, scope: !7187)
!7190 = !DILocation(line: 46, column: 7, scope: !7188)
!7191 = !DILocation(line: 51, column: 13, scope: !7184)
!7192 = !DILocation(line: 56, column: 43, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7194, file: !7174, line: 55, column: 11)
!7194 = distinct !DILexicalBlock(scope: !7173, file: !7174, line: 55, column: 6)
!7195 = !DILocation(line: 56, column: 3, scope: !7193)
!7196 = !DILocation(line: 57, column: 2, scope: !7193)
!7197 = !DILocation(line: 60, column: 1, scope: !7173)
!7198 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !505, file: !505, line: 261, type: !7199, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7201)
!7199 = !DISubroutineType(types: !7200)
!7200 = !{!170, !7177}
!7201 = !{!7202}
!7202 = !DILocalVariable(name: "list", arg: 1, scope: !7198, file: !505, line: 261, type: !7177)
!7203 = !DILocation(line: 0, scope: !7198)
!7204 = !DILocation(line: 261, column: 1, scope: !7198)
!7205 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !505, file: !505, line: 417, type: !7206, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7208)
!7206 = !DISubroutineType(types: !7207)
!7207 = !{!170, !7177, !1131}
!7208 = !{!7209, !7210, !7211, !7212}
!7209 = !DILocalVariable(name: "list", arg: 1, scope: !7205, file: !505, line: 417, type: !7177)
!7210 = !DILocalVariable(name: "node", arg: 2, scope: !7205, file: !505, line: 417, type: !1131)
!7211 = !DILocalVariable(name: "prev", scope: !7205, file: !505, line: 417, type: !1131)
!7212 = !DILocalVariable(name: "test", scope: !7205, file: !505, line: 417, type: !1131)
!7213 = !DILocation(line: 0, scope: !7205)
!7214 = !DILocation(line: 417, column: 1, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7205, file: !505, line: 417, column: 1)
!7216 = !DILocation(line: 417, column: 1, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7215, file: !505, line: 417, column: 1)
!7218 = !DILocation(line: 417, column: 1, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7220, file: !505, line: 417, column: 1)
!7220 = distinct !DILexicalBlock(scope: !7217, file: !505, line: 417, column: 1)
!7221 = !DILocation(line: 417, column: 1, scope: !7220)
!7222 = distinct !{!7222, !7214, !7214}
!7223 = !DILocation(line: 417, column: 1, scope: !7224)
!7224 = distinct !DILexicalBlock(scope: !7219, file: !505, line: 417, column: 1)
!7225 = !DILocation(line: 417, column: 1, scope: !7205)
!7226 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !505, file: !505, line: 298, type: !7227, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7229)
!7227 = !DISubroutineType(types: !7228)
!7228 = !{null, !7177, !1131}
!7229 = !{!7230, !7231}
!7230 = !DILocalVariable(name: "list", arg: 1, scope: !7226, file: !505, line: 298, type: !7177)
!7231 = !DILocalVariable(name: "node", arg: 2, scope: !7226, file: !505, line: 298, type: !1131)
!7232 = !DILocation(line: 0, scope: !7226)
!7233 = !DILocation(line: 298, column: 1, scope: !7226)
!7234 = !DILocation(line: 298, column: 1, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7226, file: !505, line: 298, column: 1)
!7236 = !DILocation(line: 298, column: 1, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7235, file: !505, line: 298, column: 1)
!7238 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !505, file: !505, line: 231, type: !7239, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7241)
!7239 = !DISubroutineType(types: !7240)
!7240 = !{!1131, !7177}
!7241 = !{!7242}
!7242 = !DILocalVariable(name: "list", arg: 1, scope: !7238, file: !505, line: 231, type: !7177)
!7243 = !DILocation(line: 0, scope: !7238)
!7244 = !DILocation(line: 233, column: 15, scope: !7238)
!7245 = !DILocation(line: 233, column: 2, scope: !7238)
!7246 = distinct !DISubprogram(name: "z_snode_next_set", scope: !505, file: !505, line: 209, type: !7247, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7249)
!7247 = !DISubroutineType(types: !7248)
!7248 = !{null, !1131, !1131}
!7249 = !{!7250, !7251}
!7250 = !DILocalVariable(name: "parent", arg: 1, scope: !7246, file: !505, line: 209, type: !1131)
!7251 = !DILocalVariable(name: "child", arg: 2, scope: !7246, file: !505, line: 209, type: !1131)
!7252 = !DILocation(line: 0, scope: !7246)
!7253 = !DILocation(line: 211, column: 10, scope: !7246)
!7254 = !DILocation(line: 211, column: 15, scope: !7246)
!7255 = !DILocation(line: 212, column: 1, scope: !7246)
!7256 = distinct !DISubprogram(name: "z_slist_head_set", scope: !505, file: !505, line: 214, type: !7227, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7257)
!7257 = !{!7258, !7259}
!7258 = !DILocalVariable(name: "list", arg: 1, scope: !7256, file: !505, line: 214, type: !7177)
!7259 = !DILocalVariable(name: "node", arg: 2, scope: !7256, file: !505, line: 214, type: !1131)
!7260 = !DILocation(line: 0, scope: !7256)
!7261 = !DILocation(line: 216, column: 8, scope: !7256)
!7262 = !DILocation(line: 216, column: 13, scope: !7256)
!7263 = !DILocation(line: 217, column: 1, scope: !7256)
!7264 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !505, file: !505, line: 243, type: !7239, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7265)
!7265 = !{!7266}
!7266 = !DILocalVariable(name: "list", arg: 1, scope: !7264, file: !505, line: 243, type: !7177)
!7267 = !DILocation(line: 0, scope: !7264)
!7268 = !DILocation(line: 245, column: 15, scope: !7264)
!7269 = !DILocation(line: 245, column: 2, scope: !7264)
!7270 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !505, file: !505, line: 219, type: !7227, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7271)
!7271 = !{!7272, !7273}
!7272 = !DILocalVariable(name: "list", arg: 1, scope: !7270, file: !505, line: 219, type: !7177)
!7273 = !DILocalVariable(name: "node", arg: 2, scope: !7270, file: !505, line: 219, type: !1131)
!7274 = !DILocation(line: 0, scope: !7270)
!7275 = !DILocation(line: 221, column: 8, scope: !7270)
!7276 = !DILocation(line: 221, column: 13, scope: !7270)
!7277 = !DILocation(line: 222, column: 1, scope: !7270)
!7278 = distinct !DISubprogram(name: "sys_slist_remove", scope: !505, file: !505, line: 401, type: !7279, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7281)
!7279 = !DISubroutineType(types: !7280)
!7280 = !{null, !7177, !1131, !1131}
!7281 = !{!7282, !7283, !7284}
!7282 = !DILocalVariable(name: "list", arg: 1, scope: !7278, file: !505, line: 401, type: !7177)
!7283 = !DILocalVariable(name: "prev_node", arg: 2, scope: !7278, file: !505, line: 401, type: !1131)
!7284 = !DILocalVariable(name: "node", arg: 3, scope: !7278, file: !505, line: 401, type: !1131)
!7285 = !DILocation(line: 0, scope: !7278)
!7286 = !DILocation(line: 401, column: 1, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7278, file: !505, line: 401, column: 1)
!7288 = !DILocation(line: 0, scope: !7287)
!7289 = !DILocation(line: 401, column: 1, scope: !7278)
!7290 = !DILocation(line: 401, column: 1, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7287, file: !505, line: 401, column: 1)
!7292 = !DILocation(line: 401, column: 1, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7291, file: !505, line: 401, column: 1)
!7294 = !DILocation(line: 401, column: 1, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7293, file: !505, line: 401, column: 1)
!7296 = !DILocation(line: 401, column: 1, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7287, file: !505, line: 401, column: 1)
!7298 = !DILocation(line: 401, column: 1, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7297, file: !505, line: 401, column: 1)
!7300 = !DILocation(line: 401, column: 1, scope: !7301)
!7301 = distinct !DILexicalBlock(scope: !7299, file: !505, line: 401, column: 1)
!7302 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !505, file: !505, line: 285, type: !7303, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7305)
!7303 = !DISubroutineType(types: !7304)
!7304 = !{!1131, !1131}
!7305 = !{!7306}
!7306 = !DILocalVariable(name: "node", arg: 1, scope: !7302, file: !505, line: 285, type: !1131)
!7307 = !DILocation(line: 0, scope: !7302)
!7308 = !DILocation(line: 285, column: 1, scope: !7302)
!7309 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !505, file: !505, line: 274, type: !7303, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7310)
!7310 = !{!7311}
!7311 = !DILocalVariable(name: "node", arg: 1, scope: !7309, file: !505, line: 274, type: !1131)
!7312 = !DILocation(line: 0, scope: !7309)
!7313 = !DILocation(line: 274, column: 1, scope: !7309)
!7314 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !505, file: !505, line: 204, type: !7303, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7315)
!7315 = !{!7316}
!7316 = !DILocalVariable(name: "node", arg: 1, scope: !7314, file: !505, line: 204, type: !1131)
!7317 = !DILocation(line: 0, scope: !7314)
!7318 = !DILocation(line: 206, column: 15, scope: !7314)
!7319 = !DILocation(line: 206, column: 2, scope: !7314)
!7320 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1061, file: !1061, line: 342, type: !107, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7321)
!7321 = !{!7322, !7323, !7324}
!7322 = !DILocalVariable(name: "pin", arg: 1, scope: !7320, file: !1061, line: 342, type: !103)
!7323 = !DILocalVariable(name: "line", scope: !7320, file: !1061, line: 344, type: !121)
!7324 = !DILocalVariable(name: "port", scope: !7320, file: !1061, line: 345, type: !103)
!7325 = !DILocation(line: 0, scope: !7320)
!7326 = !DILocation(line: 344, column: 18, scope: !7320)
!7327 = !{i32 983040, i32 0}
!7328 = !DILocation(line: 356, column: 9, scope: !7320)
!7329 = !DILocation(line: 370, column: 2, scope: !7320)
!7330 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1061, file: !1061, line: 37, type: !658, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7331)
!7331 = !{!7332, !7333, !7334}
!7332 = !DILocalVariable(name: "line", arg: 1, scope: !7330, file: !1061, line: 37, type: !103)
!7333 = !DILocalVariable(name: "arg", arg: 2, scope: !7330, file: !1061, line: 37, type: !102)
!7334 = !DILocalVariable(name: "data", scope: !7330, file: !1061, line: 39, type: !7125)
!7335 = !DILocation(line: 0, scope: !7330)
!7336 = !DILocation(line: 41, column: 29, scope: !7330)
!7337 = !DILocation(line: 41, column: 39, scope: !7330)
!7338 = !DILocation(line: 41, column: 44, scope: !7330)
!7339 = !DILocation(line: 41, column: 2, scope: !7330)
!7340 = !DILocation(line: 42, column: 1, scope: !7330)
!7341 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1061, file: !1061, line: 376, type: !7342, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7344)
!7342 = !DISubroutineType(types: !7343)
!7343 = !{!103, !103, !103}
!7344 = !{!7345, !7346, !7347, !7349, !7350}
!7345 = !DILocalVariable(name: "port", arg: 1, scope: !7341, file: !1061, line: 376, type: !103)
!7346 = !DILocalVariable(name: "pin", arg: 2, scope: !7341, file: !1061, line: 376, type: !103)
!7347 = !DILocalVariable(name: "clk", scope: !7341, file: !1061, line: 386, type: !7348)
!7348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !928)
!7349 = !DILocalVariable(name: "pclken", scope: !7341, file: !1061, line: 387, type: !1166)
!7350 = !DILocalVariable(name: "ret", scope: !7341, file: !1061, line: 396, type: !103)
!7351 = !DILocation(line: 0, scope: !7341)
!7352 = !DILocation(line: 387, column: 2, scope: !7341)
!7353 = !DILocation(line: 387, column: 22, scope: !7341)
!7354 = !DILocation(line: 399, column: 8, scope: !7341)
!7355 = !DILocation(line: 400, column: 10, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7341, file: !1061, line: 400, column: 6)
!7357 = !DILocation(line: 400, column: 6, scope: !7341)
!7358 = !DILocation(line: 405, column: 2, scope: !7341)
!7359 = !DILocation(line: 407, column: 2, scope: !7341)
!7360 = !DILocation(line: 408, column: 1, scope: !7341)
!7361 = distinct !DISubprogram(name: "clock_control_on", scope: !735, file: !735, line: 123, type: !1026, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7362)
!7362 = !{!7363, !7364, !7365}
!7363 = !DILocalVariable(name: "dev", arg: 1, scope: !7361, file: !735, line: 123, type: !928)
!7364 = !DILocalVariable(name: "sys", arg: 2, scope: !7361, file: !735, line: 124, type: !810)
!7365 = !DILocalVariable(name: "api", scope: !7361, file: !735, line: 126, type: !1019)
!7366 = !DILocation(line: 0, scope: !7361)
!7367 = !DILocation(line: 127, column: 49, scope: !7361)
!7368 = !DILocation(line: 129, column: 14, scope: !7361)
!7369 = !DILocation(line: 129, column: 9, scope: !7361)
!7370 = !DILocation(line: 129, column: 2, scope: !7361)
!7371 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1061, file: !1061, line: 311, type: !6534, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7372)
!7372 = !{!7373, !7374, !7375}
!7373 = !DILocalVariable(name: "port", arg: 1, scope: !7371, file: !1061, line: 311, type: !103)
!7374 = !DILocalVariable(name: "pin", arg: 2, scope: !7371, file: !1061, line: 311, type: !103)
!7375 = !DILocalVariable(name: "line", scope: !7371, file: !1061, line: 313, type: !121)
!7376 = !DILocation(line: 0, scope: !7371)
!7377 = !DILocation(line: 313, column: 18, scope: !7371)
!7378 = !DILocation(line: 337, column: 2, scope: !7371)
!7379 = !DILocation(line: 340, column: 1, scope: !7371)
!7380 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1061, file: !1061, line: 295, type: !7381, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7383)
!7381 = !DISubroutineType(types: !7382)
!7382 = !{!121, !103}
!7383 = !{!7384}
!7384 = !DILocalVariable(name: "pin", arg: 1, scope: !7380, file: !1061, line: 295, type: !103)
!7385 = !DILocation(line: 0, scope: !7380)
!7386 = !DILocation(line: 307, column: 46, scope: !7380)
!7387 = !DILocation(line: 307, column: 27, scope: !7380)
!7388 = !DILocation(line: 307, column: 32, scope: !7380)
!7389 = !DILocation(line: 307, column: 14, scope: !7380)
!7390 = !DILocation(line: 307, column: 39, scope: !7380)
!7391 = !DILocation(line: 307, column: 2, scope: !7380)
!7392 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !7393, file: !7393, line: 621, type: !7394, scopeLine: 622, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7396)
!7393 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7394 = !DISubroutineType(types: !7395)
!7395 = !{null, !121, !121}
!7396 = !{!7397, !7398}
!7397 = !DILocalVariable(name: "Port", arg: 1, scope: !7392, file: !7393, line: 621, type: !121)
!7398 = !DILocalVariable(name: "Line", arg: 2, scope: !7392, file: !7393, line: 621, type: !121)
!7399 = !DILocation(line: 0, scope: !7392)
!7400 = !DILocation(line: 623, column: 3, scope: !7392)
!7401 = !DILocalVariable(name: "value", arg: 1, scope: !7402, file: !4701, line: 373, type: !121)
!7402 = distinct !DISubprogram(name: "__RBIT", scope: !4701, file: !4701, line: 373, type: !5671, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7403)
!7403 = !{!7401, !7404}
!7404 = !DILocalVariable(name: "result", scope: !7402, file: !4701, line: 375, type: !121)
!7405 = !DILocation(line: 0, scope: !7402, inlinedAt: !7406)
!7406 = distinct !DILocation(line: 623, column: 3, scope: !7392)
!7407 = !DILocation(line: 380, column: 4, scope: !7402, inlinedAt: !7406)
!7408 = !{i64 2448484}
!7409 = !DILocalVariable(name: "value", arg: 1, scope: !7410, file: !4701, line: 403, type: !121)
!7410 = distinct !DISubprogram(name: "__CLZ", scope: !4701, file: !4701, line: 403, type: !7411, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7413)
!7411 = !DISubroutineType(types: !7412)
!7412 = !{!167, !121}
!7413 = !{!7409}
!7414 = !DILocation(line: 0, scope: !7410, inlinedAt: !7415)
!7415 = distinct !DILocation(line: 623, column: 3, scope: !7392)
!7416 = !DILocation(line: 414, column: 7, scope: !7410, inlinedAt: !7415)
!7417 = !DILocation(line: 624, column: 1, scope: !7392)
!7418 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !7174, file: !7174, line: 69, type: !7419, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7421)
!7419 = !DISubroutineType(types: !7420)
!7420 = !{null, !7177, !928, !121}
!7421 = !{!7422, !7423, !7424, !7425, !7426}
!7422 = !DILocalVariable(name: "list", arg: 1, scope: !7418, file: !7174, line: 69, type: !7177)
!7423 = !DILocalVariable(name: "port", arg: 2, scope: !7418, file: !7174, line: 70, type: !928)
!7424 = !DILocalVariable(name: "pins", arg: 3, scope: !7418, file: !7174, line: 71, type: !121)
!7425 = !DILocalVariable(name: "cb", scope: !7418, file: !7174, line: 73, type: !965)
!7426 = !DILocalVariable(name: "tmp", scope: !7418, file: !7174, line: 73, type: !965)
!7427 = !DILocation(line: 0, scope: !7418)
!7428 = !DILocation(line: 75, column: 2, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7418, file: !7174, line: 75, column: 2)
!7430 = !DILocation(line: 0, scope: !7429)
!7431 = !DILocation(line: 76, column: 11, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7433, file: !7174, line: 76, column: 7)
!7433 = distinct !DILexicalBlock(scope: !7434, file: !7174, line: 75, column: 57)
!7434 = distinct !DILexicalBlock(scope: !7429, file: !7174, line: 75, column: 2)
!7435 = !DILocation(line: 76, column: 20, scope: !7432)
!7436 = !DILocation(line: 76, column: 7, scope: !7433)
!7437 = !DILocation(line: 78, column: 8, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7432, file: !7174, line: 76, column: 28)
!7439 = !DILocation(line: 78, column: 4, scope: !7438)
!7440 = !DILocation(line: 79, column: 3, scope: !7438)
!7441 = !DILocation(line: 75, column: 2, scope: !7434)
!7442 = !DILocation(line: 81, column: 1, scope: !7418)
!7443 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !7393, file: !7393, line: 721, type: !5671, scopeLine: 722, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7444)
!7444 = !{!7445}
!7445 = !DILocalVariable(name: "Line", arg: 1, scope: !7443, file: !7393, line: 721, type: !121)
!7446 = !DILocation(line: 0, scope: !7443)
!7447 = !DILocation(line: 723, column: 21, scope: !7443)
!7448 = !DILocation(line: 0, scope: !7402, inlinedAt: !7449)
!7449 = distinct !DILocation(line: 723, column: 76, scope: !7443)
!7450 = !DILocation(line: 380, column: 4, scope: !7402, inlinedAt: !7449)
!7451 = !DILocation(line: 0, scope: !7410, inlinedAt: !7452)
!7452 = distinct !DILocation(line: 723, column: 76, scope: !7443)
!7453 = !DILocation(line: 414, column: 7, scope: !7410, inlinedAt: !7452)
!7454 = !DILocation(line: 723, column: 73, scope: !7443)
!7455 = !DILocation(line: 723, column: 3, scope: !7443)
!7456 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !7457, file: !7457, line: 913, type: !7458, scopeLine: 914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7460)
!7457 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7458 = !DISubroutineType(types: !7459)
!7459 = !{null, !995, !121}
!7460 = !{!7461, !7462}
!7461 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7456, file: !7457, line: 913, type: !995)
!7462 = !DILocalVariable(name: "PinMask", arg: 2, scope: !7456, file: !7457, line: 913, type: !121)
!7463 = !DILocation(line: 0, scope: !7456)
!7464 = !DILocation(line: 918, column: 3, scope: !7456)
!7465 = !DILocation(line: 920, column: 1, scope: !7456)
!7466 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !7457, file: !7457, line: 825, type: !7467, scopeLine: 826, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7469)
!7467 = !DISubroutineType(types: !7468)
!7468 = !{!121, !995}
!7469 = !{!7470}
!7470 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7466, file: !7457, line: 825, type: !995)
!7471 = !DILocation(line: 0, scope: !7466)
!7472 = !DILocation(line: 827, column: 21, scope: !7466)
!7473 = !DILocation(line: 827, column: 3, scope: !7466)
!7474 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !7457, file: !7457, line: 814, type: !7458, scopeLine: 815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7475)
!7475 = !{!7476, !7477}
!7476 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7474, file: !7457, line: 814, type: !995)
!7477 = !DILocalVariable(name: "PortValue", arg: 2, scope: !7474, file: !7457, line: 814, type: !121)
!7478 = !DILocation(line: 0, scope: !7474)
!7479 = !DILocation(line: 816, column: 3, scope: !7474)
!7480 = !DILocation(line: 817, column: 1, scope: !7474)
!7481 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !7457, file: !7457, line: 773, type: !7467, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7482)
!7482 = !{!7483}
!7483 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7481, file: !7457, line: 773, type: !995)
!7484 = !DILocation(line: 0, scope: !7481)
!7485 = !DILocation(line: 775, column: 21, scope: !7481)
!7486 = !DILocation(line: 775, column: 3, scope: !7481)
!7487 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1061, file: !1061, line: 47, type: !7488, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7490)
!7488 = !DISubroutineType(types: !7489)
!7489 = !{!103, !474, !2227}
!7490 = !{!7491, !7492}
!7491 = !DILocalVariable(name: "flags", arg: 1, scope: !7487, file: !1061, line: 47, type: !474)
!7492 = !DILocalVariable(name: "pincfg", arg: 2, scope: !7487, file: !1061, line: 47, type: !2227)
!7493 = !DILocation(line: 0, scope: !7487)
!7494 = !DILocation(line: 50, column: 13, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7487, file: !1061, line: 50, column: 6)
!7496 = !DILocation(line: 50, column: 28, scope: !7495)
!7497 = !DILocation(line: 50, column: 6, scope: !7487)
!7498 = !DILocation(line: 53, column: 11, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7495, file: !1061, line: 50, column: 34)
!7500 = !DILocation(line: 55, column: 14, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7499, file: !1061, line: 55, column: 7)
!7502 = !DILocation(line: 55, column: 35, scope: !7501)
!7503 = !DILocation(line: 55, column: 7, scope: !7499)
!7504 = !DILocation(line: 56, column: 14, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7506, file: !1061, line: 56, column: 8)
!7506 = distinct !DILexicalBlock(scope: !7501, file: !1061, line: 55, column: 41)
!7507 = !DILocation(line: 56, column: 8, scope: !7506)
!7508 = !DILocation(line: 0, scope: !7501)
!7509 = !DILocation(line: 66, column: 14, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7499, file: !1061, line: 66, column: 7)
!7511 = !DILocation(line: 66, column: 30, scope: !7510)
!7512 = !DILocation(line: 66, column: 7, scope: !7499)
!7513 = !DILocation(line: 67, column: 12, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7510, file: !1061, line: 66, column: 36)
!7515 = !DILocation(line: 68, column: 3, scope: !7514)
!7516 = !DILocation(line: 68, column: 21, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7510, file: !1061, line: 68, column: 14)
!7518 = !DILocation(line: 68, column: 39, scope: !7517)
!7519 = !DILocation(line: 68, column: 14, scope: !7510)
!7520 = !DILocation(line: 69, column: 12, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7517, file: !1061, line: 68, column: 45)
!7522 = !DILocation(line: 70, column: 3, scope: !7521)
!7523 = !DILocation(line: 72, column: 21, scope: !7524)
!7524 = distinct !DILexicalBlock(scope: !7495, file: !1061, line: 72, column: 14)
!7525 = !DILocation(line: 72, column: 35, scope: !7524)
!7526 = !DILocation(line: 72, column: 14, scope: !7495)
!7527 = !DILocation(line: 77, column: 14, scope: !7528)
!7528 = distinct !DILexicalBlock(scope: !7529, file: !1061, line: 77, column: 7)
!7529 = distinct !DILexicalBlock(scope: !7524, file: !1061, line: 72, column: 41)
!7530 = !DILocation(line: 77, column: 30, scope: !7528)
!7531 = !DILocation(line: 77, column: 7, scope: !7529)
!7532 = !DILocation(line: 0, scope: !7495)
!7533 = !DILocation(line: 90, column: 1, scope: !7487)
!7534 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1061, file: !1061, line: 157, type: !7535, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7537)
!7535 = !DISubroutineType(types: !7536)
!7536 = !{null, !928, !103, !103, !103}
!7537 = !{!7538, !7539, !7540, !7541, !7542, !7543, !7544, !7545, !7546, !7547, !7548}
!7538 = !DILocalVariable(name: "dev", arg: 1, scope: !7534, file: !1061, line: 157, type: !928)
!7539 = !DILocalVariable(name: "pin", arg: 2, scope: !7534, file: !1061, line: 157, type: !103)
!7540 = !DILocalVariable(name: "conf", arg: 3, scope: !7534, file: !1061, line: 158, type: !103)
!7541 = !DILocalVariable(name: "func", arg: 4, scope: !7534, file: !1061, line: 158, type: !103)
!7542 = !DILocalVariable(name: "cfg", scope: !7534, file: !1061, line: 160, type: !7058)
!7543 = !DILocalVariable(name: "gpio", scope: !7534, file: !1061, line: 161, type: !995)
!7544 = !DILocalVariable(name: "pin_ll", scope: !7534, file: !1061, line: 163, type: !103)
!7545 = !DILocalVariable(name: "mode", scope: !7534, file: !1061, line: 227, type: !32)
!7546 = !DILocalVariable(name: "otype", scope: !7534, file: !1061, line: 227, type: !32)
!7547 = !DILocalVariable(name: "ospeed", scope: !7534, file: !1061, line: 227, type: !32)
!7548 = !DILocalVariable(name: "pupd", scope: !7534, file: !1061, line: 227, type: !32)
!7549 = !DILocation(line: 0, scope: !7534)
!7550 = !DILocation(line: 160, column: 45, scope: !7534)
!7551 = !DILocation(line: 161, column: 44, scope: !7534)
!7552 = !DILocation(line: 163, column: 15, scope: !7534)
!7553 = !DILocation(line: 229, column: 14, scope: !7534)
!7554 = !DILocation(line: 246, column: 47, scope: !7534)
!7555 = !DILocation(line: 246, column: 2, scope: !7534)
!7556 = !DILocation(line: 248, column: 43, scope: !7534)
!7557 = !DILocation(line: 248, column: 2, scope: !7534)
!7558 = !DILocation(line: 250, column: 40, scope: !7534)
!7559 = !DILocation(line: 250, column: 2, scope: !7534)
!7560 = !DILocation(line: 252, column: 11, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7534, file: !1061, line: 252, column: 6)
!7562 = !DILocation(line: 252, column: 6, scope: !7534)
!7563 = !DILocation(line: 253, column: 11, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7565, file: !1061, line: 253, column: 7)
!7565 = distinct !DILexicalBlock(scope: !7561, file: !1061, line: 252, column: 36)
!7566 = !DILocation(line: 253, column: 7, scope: !7565)
!7567 = !DILocation(line: 254, column: 4, scope: !7568)
!7568 = distinct !DILexicalBlock(scope: !7564, file: !1061, line: 253, column: 16)
!7569 = !DILocation(line: 255, column: 3, scope: !7568)
!7570 = !DILocation(line: 256, column: 4, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7564, file: !1061, line: 255, column: 10)
!7572 = !DILocation(line: 260, column: 40, scope: !7534)
!7573 = !DILocation(line: 260, column: 2, scope: !7534)
!7574 = !DILocation(line: 265, column: 1, scope: !7534)
!7575 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1061, file: !1061, line: 137, type: !7381, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7576)
!7576 = !{!7577, !7578}
!7577 = !DILocalVariable(name: "pin", arg: 1, scope: !7575, file: !1061, line: 137, type: !103)
!7578 = !DILocalVariable(name: "pinval", scope: !7575, file: !1061, line: 139, type: !121)
!7579 = !DILocation(line: 0, scope: !7575)
!7580 = !DILocation(line: 149, column: 13, scope: !7575)
!7581 = !DILocation(line: 151, column: 2, scope: !7575)
!7582 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !7457, file: !7457, line: 343, type: !7583, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7585)
!7583 = !DISubroutineType(types: !7584)
!7584 = !{null, !995, !121, !121}
!7585 = !{!7586, !7587, !7588}
!7586 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7582, file: !7457, line: 343, type: !995)
!7587 = !DILocalVariable(name: "PinMask", arg: 2, scope: !7582, file: !7457, line: 343, type: !121)
!7588 = !DILocalVariable(name: "OutputType", arg: 3, scope: !7582, file: !7457, line: 343, type: !121)
!7589 = !DILocation(line: 0, scope: !7582)
!7590 = !DILocation(line: 345, column: 3, scope: !7582)
!7591 = !DILocation(line: 346, column: 1, scope: !7582)
!7592 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !7457, file: !7457, line: 414, type: !7583, scopeLine: 415, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7593)
!7593 = !{!7594, !7595, !7596}
!7594 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7592, file: !7457, line: 414, type: !995)
!7595 = !DILocalVariable(name: "Pin", arg: 2, scope: !7592, file: !7457, line: 414, type: !121)
!7596 = !DILocalVariable(name: "Speed", arg: 3, scope: !7592, file: !7457, line: 414, type: !121)
!7597 = !DILocation(line: 0, scope: !7592)
!7598 = !DILocation(line: 416, column: 3, scope: !7592)
!7599 = !DILocation(line: 0, scope: !7402, inlinedAt: !7600)
!7600 = distinct !DILocation(line: 416, column: 3, scope: !7592)
!7601 = !DILocation(line: 380, column: 4, scope: !7402, inlinedAt: !7600)
!7602 = !DILocation(line: 0, scope: !7410, inlinedAt: !7603)
!7603 = distinct !DILocation(line: 416, column: 3, scope: !7592)
!7604 = !DILocation(line: 414, column: 7, scope: !7410, inlinedAt: !7603)
!7605 = !DILocation(line: 0, scope: !7402, inlinedAt: !7606)
!7606 = distinct !DILocation(line: 416, column: 3, scope: !7592)
!7607 = !DILocation(line: 0, scope: !7410, inlinedAt: !7608)
!7608 = distinct !DILocation(line: 416, column: 3, scope: !7592)
!7609 = !DILocation(line: 418, column: 1, scope: !7592)
!7610 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !7457, file: !7457, line: 485, type: !7583, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7611)
!7611 = !{!7612, !7613, !7614}
!7612 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7610, file: !7457, line: 485, type: !995)
!7613 = !DILocalVariable(name: "Pin", arg: 2, scope: !7610, file: !7457, line: 485, type: !121)
!7614 = !DILocalVariable(name: "Pull", arg: 3, scope: !7610, file: !7457, line: 485, type: !121)
!7615 = !DILocation(line: 0, scope: !7610)
!7616 = !DILocation(line: 487, column: 3, scope: !7610)
!7617 = !DILocation(line: 0, scope: !7402, inlinedAt: !7618)
!7618 = distinct !DILocation(line: 487, column: 3, scope: !7610)
!7619 = !DILocation(line: 380, column: 4, scope: !7402, inlinedAt: !7618)
!7620 = !DILocation(line: 0, scope: !7410, inlinedAt: !7621)
!7621 = distinct !DILocation(line: 487, column: 3, scope: !7610)
!7622 = !DILocation(line: 414, column: 7, scope: !7410, inlinedAt: !7621)
!7623 = !DILocation(line: 0, scope: !7402, inlinedAt: !7624)
!7624 = distinct !DILocation(line: 487, column: 3, scope: !7610)
!7625 = !DILocation(line: 0, scope: !7410, inlinedAt: !7626)
!7626 = distinct !DILocation(line: 487, column: 3, scope: !7610)
!7627 = !DILocation(line: 488, column: 1, scope: !7610)
!7628 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !7457, file: !7457, line: 557, type: !7583, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7629)
!7629 = !{!7630, !7631, !7632}
!7630 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7628, file: !7457, line: 557, type: !995)
!7631 = !DILocalVariable(name: "Pin", arg: 2, scope: !7628, file: !7457, line: 557, type: !121)
!7632 = !DILocalVariable(name: "Alternate", arg: 3, scope: !7628, file: !7457, line: 557, type: !121)
!7633 = !DILocation(line: 0, scope: !7628)
!7634 = !DILocation(line: 559, column: 3, scope: !7628)
!7635 = !DILocation(line: 0, scope: !7402, inlinedAt: !7636)
!7636 = distinct !DILocation(line: 559, column: 3, scope: !7628)
!7637 = !DILocation(line: 380, column: 4, scope: !7402, inlinedAt: !7636)
!7638 = !DILocation(line: 0, scope: !7410, inlinedAt: !7639)
!7639 = distinct !DILocation(line: 559, column: 3, scope: !7628)
!7640 = !DILocation(line: 414, column: 7, scope: !7410, inlinedAt: !7639)
!7641 = !DILocation(line: 0, scope: !7402, inlinedAt: !7642)
!7642 = distinct !DILocation(line: 559, column: 3, scope: !7628)
!7643 = !DILocation(line: 0, scope: !7410, inlinedAt: !7644)
!7644 = distinct !DILocation(line: 559, column: 3, scope: !7628)
!7645 = !DILocation(line: 561, column: 1, scope: !7628)
!7646 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !7457, file: !7457, line: 634, type: !7583, scopeLine: 635, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7647)
!7647 = !{!7648, !7649, !7650}
!7648 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7646, file: !7457, line: 634, type: !995)
!7649 = !DILocalVariable(name: "Pin", arg: 2, scope: !7646, file: !7457, line: 634, type: !121)
!7650 = !DILocalVariable(name: "Alternate", arg: 3, scope: !7646, file: !7457, line: 634, type: !121)
!7651 = !DILocation(line: 0, scope: !7646)
!7652 = !DILocation(line: 636, column: 3, scope: !7646)
!7653 = !DILocation(line: 0, scope: !7402, inlinedAt: !7654)
!7654 = distinct !DILocation(line: 636, column: 3, scope: !7646)
!7655 = !DILocation(line: 380, column: 4, scope: !7402, inlinedAt: !7654)
!7656 = !DILocation(line: 0, scope: !7410, inlinedAt: !7657)
!7657 = distinct !DILocation(line: 636, column: 3, scope: !7646)
!7658 = !DILocation(line: 414, column: 7, scope: !7410, inlinedAt: !7657)
!7659 = !DILocation(line: 0, scope: !7402, inlinedAt: !7660)
!7660 = distinct !DILocation(line: 636, column: 3, scope: !7646)
!7661 = !DILocation(line: 0, scope: !7410, inlinedAt: !7662)
!7662 = distinct !DILocation(line: 636, column: 3, scope: !7646)
!7663 = !DILocation(line: 638, column: 1, scope: !7646)
!7664 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !7457, file: !7457, line: 274, type: !7583, scopeLine: 275, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7665)
!7665 = !{!7666, !7667, !7668}
!7666 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !7664, file: !7457, line: 274, type: !995)
!7667 = !DILocalVariable(name: "Pin", arg: 2, scope: !7664, file: !7457, line: 274, type: !121)
!7668 = !DILocalVariable(name: "Mode", arg: 3, scope: !7664, file: !7457, line: 274, type: !121)
!7669 = !DILocation(line: 0, scope: !7664)
!7670 = !DILocation(line: 276, column: 3, scope: !7664)
!7671 = !DILocation(line: 0, scope: !7402, inlinedAt: !7672)
!7672 = distinct !DILocation(line: 276, column: 3, scope: !7664)
!7673 = !DILocation(line: 380, column: 4, scope: !7402, inlinedAt: !7672)
!7674 = !DILocation(line: 0, scope: !7410, inlinedAt: !7675)
!7675 = distinct !DILocation(line: 276, column: 3, scope: !7664)
!7676 = !DILocation(line: 414, column: 7, scope: !7410, inlinedAt: !7675)
!7677 = !DILocation(line: 0, scope: !7402, inlinedAt: !7678)
!7678 = distinct !DILocation(line: 276, column: 3, scope: !7664)
!7679 = !DILocation(line: 0, scope: !7410, inlinedAt: !7680)
!7680 = distinct !DILocation(line: 276, column: 3, scope: !7664)
!7681 = !DILocation(line: 277, column: 1, scope: !7664)
!7682 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1061, file: !1061, line: 698, type: !1074, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7683)
!7683 = !{!7684, !7685, !7686}
!7684 = !DILocalVariable(name: "dev", arg: 1, scope: !7682, file: !1061, line: 698, type: !928)
!7685 = !DILocalVariable(name: "data", scope: !7682, file: !1061, line: 700, type: !7125)
!7686 = !DILocalVariable(name: "ret", scope: !7682, file: !1061, line: 701, type: !103)
!7687 = !DILocation(line: 0, scope: !7682)
!7688 = !DILocation(line: 700, column: 38, scope: !7682)
!7689 = !DILocation(line: 703, column: 8, scope: !7682)
!7690 = !DILocation(line: 703, column: 12, scope: !7682)
!7691 = !DILocation(line: 705, column: 7, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7682, file: !1061, line: 705, column: 6)
!7693 = !DILocation(line: 705, column: 6, scope: !7682)
!7694 = !DILocation(line: 722, column: 8, scope: !7682)
!7695 = !DILocation(line: 723, column: 10, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7682, file: !1061, line: 723, column: 6)
!7697 = !DILocation(line: 723, column: 6, scope: !7682)
!7698 = !DILocation(line: 731, column: 1, scope: !7682)
!7699 = distinct !DISubprogram(name: "device_is_ready", scope: !6293, file: !6293, line: 47, type: !7700, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7702)
!7700 = !DISubroutineType(types: !7701)
!7701 = !{!170, !928}
!7702 = !{!7703}
!7703 = !DILocalVariable(name: "dev", arg: 1, scope: !7699, file: !6293, line: 47, type: !928)
!7704 = !DILocation(line: 0, scope: !7699)
!7705 = !DILocation(line: 55, column: 2, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7699, file: !6293, line: 55, column: 2)
!7707 = !{i64 2152400144}
!7708 = !DILocation(line: 56, column: 9, scope: !7699)
!7709 = !DILocation(line: 56, column: 2, scope: !7699)
!7710 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1061, file: !1061, line: 270, type: !7711, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7713)
!7711 = !DISubroutineType(types: !7712)
!7712 = !{!103, !928, !170}
!7713 = !{!7714, !7715, !7716, !7717, !7718}
!7714 = !DILocalVariable(name: "dev", arg: 1, scope: !7710, file: !1061, line: 270, type: !928)
!7715 = !DILocalVariable(name: "on", arg: 2, scope: !7710, file: !1061, line: 270, type: !170)
!7716 = !DILocalVariable(name: "cfg", scope: !7710, file: !1061, line: 272, type: !7058)
!7717 = !DILocalVariable(name: "ret", scope: !7710, file: !1061, line: 273, type: !103)
!7718 = !DILocalVariable(name: "clk", scope: !7710, file: !1061, line: 278, type: !7348)
!7719 = !DILocation(line: 0, scope: !7710)
!7720 = !DILocation(line: 272, column: 45, scope: !7710)
!7721 = !DILocation(line: 282, column: 38, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7723, file: !1061, line: 280, column: 10)
!7723 = distinct !DILexicalBlock(scope: !7710, file: !1061, line: 280, column: 6)
!7724 = !DILocation(line: 282, column: 6, scope: !7722)
!7725 = !DILocation(line: 281, column: 9, scope: !7722)
!7726 = !DILocation(line: 293, column: 1, scope: !7710)
!7727 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !7700, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7728)
!7728 = !{!7729}
!7729 = !DILocalVariable(name: "dev", arg: 1, scope: !7727, file: !154, line: 730, type: !928)
!7730 = !DILocation(line: 0, scope: !7727)
!7731 = !DILocation(line: 732, column: 9, scope: !7727)
!7732 = !DILocation(line: 732, column: 2, scope: !7727)
!7733 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1061, file: !1061, line: 496, type: !7734, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !910, retainedNodes: !7736)
!7734 = !DISubroutineType(types: !7735)
!7735 = !{!103, !928, !103, !103, !103}
!7736 = !{!7737, !7738, !7739, !7740, !7741, !7742}
!7737 = !DILocalVariable(name: "dev", arg: 1, scope: !7733, file: !1061, line: 496, type: !928)
!7738 = !DILocalVariable(name: "pin", arg: 2, scope: !7733, file: !1061, line: 496, type: !103)
!7739 = !DILocalVariable(name: "conf", arg: 3, scope: !7733, file: !1061, line: 496, type: !103)
!7740 = !DILocalVariable(name: "func", arg: 4, scope: !7733, file: !1061, line: 496, type: !103)
!7741 = !DILocalVariable(name: "ret", scope: !7733, file: !1061, line: 498, type: !103)
!7742 = !DILocalVariable(name: "gpio_out", scope: !7743, file: !1061, line: 508, type: !121)
!7743 = distinct !DILexicalBlock(scope: !7744, file: !1061, line: 507, column: 27)
!7744 = distinct !DILexicalBlock(scope: !7733, file: !1061, line: 507, column: 6)
!7745 = !DILocation(line: 0, scope: !7733)
!7746 = !DILocation(line: 505, column: 2, scope: !7733)
!7747 = !DILocation(line: 507, column: 11, scope: !7744)
!7748 = !DILocation(line: 507, column: 6, scope: !7733)
!7749 = !DILocation(line: 508, column: 28, scope: !7743)
!7750 = !DILocation(line: 0, scope: !7743)
!7751 = !DILocation(line: 510, column: 16, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7743, file: !1061, line: 510, column: 7)
!7753 = !DILocation(line: 0, scope: !7752)
!7754 = !DILocation(line: 510, column: 7, scope: !7743)
!7755 = !DILocation(line: 511, column: 4, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7752, file: !1061, line: 510, column: 32)
!7757 = !DILocation(line: 512, column: 3, scope: !7756)
!7758 = !DILocation(line: 513, column: 4, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7760, file: !1061, line: 512, column: 39)
!7760 = distinct !DILexicalBlock(scope: !7752, file: !1061, line: 512, column: 14)
!7761 = !DILocation(line: 514, column: 3, scope: !7759)
!7762 = !DILocation(line: 518, column: 1, scope: !7733)
!7763 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1318, file: !1318, line: 526, type: !1222, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !7764)
!7764 = !{!7765, !7766, !7767}
!7765 = !DILocalVariable(name: "dev", arg: 1, scope: !7763, file: !1318, line: 526, type: !1224)
!7766 = !DILocalVariable(name: "c", arg: 2, scope: !7763, file: !1318, line: 526, type: !871)
!7767 = !DILocalVariable(name: "config", scope: !7763, file: !1318, line: 528, type: !7768)
!7768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 32)
!7769 = !DILocation(line: 0, scope: !7763)
!7770 = !DILocation(line: 528, column: 48, scope: !7763)
!7771 = !DILocation(line: 531, column: 40, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7763, file: !1318, line: 531, column: 6)
!7773 = !DILocation(line: 531, column: 6, scope: !7772)
!7774 = !DILocation(line: 531, column: 6, scope: !7763)
!7775 = !DILocation(line: 532, column: 34, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7772, file: !1318, line: 531, column: 48)
!7777 = !DILocation(line: 532, column: 3, scope: !7776)
!7778 = !DILocation(line: 533, column: 2, scope: !7776)
!7779 = !DILocation(line: 539, column: 42, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7763, file: !1318, line: 539, column: 6)
!7781 = !DILocation(line: 539, column: 7, scope: !7780)
!7782 = !DILocation(line: 539, column: 6, scope: !7763)
!7783 = !DILocation(line: 543, column: 52, scope: !7763)
!7784 = !DILocation(line: 543, column: 22, scope: !7763)
!7785 = !DILocation(line: 543, column: 5, scope: !7763)
!7786 = !DILocation(line: 545, column: 2, scope: !7763)
!7787 = !DILocation(line: 546, column: 1, scope: !7763)
!7788 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1318, file: !1318, line: 548, type: !1241, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !7789)
!7789 = !{!7790, !7791, !7792, !7793}
!7790 = !DILocalVariable(name: "dev", arg: 1, scope: !7788, file: !1318, line: 548, type: !1224)
!7791 = !DILocalVariable(name: "c", arg: 2, scope: !7788, file: !1318, line: 549, type: !168)
!7792 = !DILocalVariable(name: "config", scope: !7788, file: !1318, line: 551, type: !7768)
!7793 = !DILocalVariable(name: "key", scope: !7788, file: !1318, line: 555, type: !32)
!7794 = !DILocation(line: 0, scope: !7788)
!7795 = !DILocation(line: 551, column: 48, scope: !7788)
!7796 = !DILocation(line: 562, column: 2, scope: !7788)
!7797 = !DILocation(line: 563, column: 41, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7799, file: !1318, line: 563, column: 7)
!7799 = distinct !DILexicalBlock(scope: !7788, file: !1318, line: 562, column: 12)
!7800 = !DILocation(line: 563, column: 7, scope: !7798)
!7801 = !DILocation(line: 563, column: 7, scope: !7799)
!7802 = !DILocation(line: 55, column: 2, scope: !7803, inlinedAt: !7807)
!7803 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4510, file: !4510, line: 42, type: !4511, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !7804)
!7804 = !{!7805, !7806}
!7805 = !DILocalVariable(name: "key", scope: !7803, file: !4510, line: 44, type: !32)
!7806 = !DILocalVariable(name: "tmp", scope: !7803, file: !4510, line: 53, type: !32)
!7807 = distinct !DILocation(line: 564, column: 10, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7798, file: !1318, line: 563, column: 49)
!7809 = !{i64 1697833}
!7810 = !DILocation(line: 0, scope: !7803, inlinedAt: !7807)
!7811 = !DILocation(line: 565, column: 42, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7808, file: !1318, line: 565, column: 8)
!7813 = !DILocation(line: 565, column: 8, scope: !7812)
!7814 = !DILocation(line: 565, column: 8, scope: !7808)
!7815 = !DILocalVariable(name: "key", arg: 1, scope: !7816, file: !4510, line: 84, type: !32)
!7816 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4510, file: !4510, line: 84, type: !4521, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !7817)
!7817 = !{!7815}
!7818 = !DILocation(line: 0, scope: !7816, inlinedAt: !7819)
!7819 = distinct !DILocation(line: 568, column: 4, scope: !7808)
!7820 = !DILocation(line: 95, column: 2, scope: !7816, inlinedAt: !7819)
!7821 = !{i64 1698650}
!7822 = !DILocation(line: 569, column: 3, scope: !7808)
!7823 = distinct !{!7823, !7796, !7824}
!7824 = !DILocation(line: 570, column: 2, scope: !7788)
!7825 = !DILocation(line: 592, column: 33, scope: !7788)
!7826 = !DILocation(line: 592, column: 2, scope: !7788)
!7827 = !DILocation(line: 0, scope: !7816, inlinedAt: !7828)
!7828 = distinct !DILocation(line: 593, column: 2, scope: !7788)
!7829 = !DILocation(line: 95, column: 2, scope: !7816, inlinedAt: !7828)
!7830 = !DILocation(line: 594, column: 1, scope: !7788)
!7831 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1318, file: !1318, line: 596, type: !1245, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !7832)
!7832 = !{!7833, !7834, !7835}
!7833 = !DILocalVariable(name: "dev", arg: 1, scope: !7831, file: !1318, line: 596, type: !1224)
!7834 = !DILocalVariable(name: "config", scope: !7831, file: !1318, line: 598, type: !7768)
!7835 = !DILocalVariable(name: "err", scope: !7831, file: !1318, line: 599, type: !121)
!7836 = !DILocation(line: 0, scope: !7831)
!7837 = !DILocation(line: 598, column: 48, scope: !7831)
!7838 = !DILocation(line: 606, column: 40, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7831, file: !1318, line: 606, column: 6)
!7840 = !DILocation(line: 606, column: 6, scope: !7839)
!7841 = !DILocation(line: 606, column: 6, scope: !7831)
!7842 = !DILocation(line: 610, column: 39, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7831, file: !1318, line: 610, column: 6)
!7844 = !DILocation(line: 610, column: 6, scope: !7843)
!7845 = !DILocation(line: 610, column: 6, scope: !7831)
!7846 = !DILocation(line: 614, column: 39, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7831, file: !1318, line: 614, column: 6)
!7848 = !DILocation(line: 614, column: 6, scope: !7847)
!7849 = !DILocation(line: 614, column: 6, scope: !7831)
!7850 = !DILocation(line: 619, column: 40, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7831, file: !1318, line: 619, column: 6)
!7852 = !DILocation(line: 619, column: 6, scope: !7851)
!7853 = !DILocation(line: 619, column: 6, scope: !7831)
!7854 = !DILocation(line: 623, column: 10, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7831, file: !1318, line: 623, column: 6)
!7856 = !DILocation(line: 623, column: 6, scope: !7831)
!7857 = !DILocation(line: 624, column: 34, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7855, file: !1318, line: 623, column: 24)
!7859 = !DILocation(line: 624, column: 3, scope: !7858)
!7860 = !DILocation(line: 625, column: 2, scope: !7858)
!7861 = !DILocation(line: 632, column: 10, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7831, file: !1318, line: 632, column: 6)
!7863 = !DILocation(line: 632, column: 6, scope: !7831)
!7864 = !DILocation(line: 633, column: 34, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7862, file: !1318, line: 632, column: 32)
!7866 = !DILocation(line: 633, column: 3, scope: !7865)
!7867 = !DILocation(line: 634, column: 2, scope: !7865)
!7868 = !DILocation(line: 636, column: 10, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7831, file: !1318, line: 636, column: 6)
!7870 = !DILocation(line: 636, column: 6, scope: !7831)
!7871 = !DILocation(line: 637, column: 33, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7869, file: !1318, line: 636, column: 31)
!7873 = !DILocation(line: 637, column: 3, scope: !7872)
!7874 = !DILocation(line: 638, column: 2, scope: !7872)
!7875 = !DILocation(line: 640, column: 10, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7831, file: !1318, line: 640, column: 6)
!7877 = !DILocation(line: 640, column: 6, scope: !7831)
!7878 = !DILocation(line: 641, column: 33, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7876, file: !1318, line: 640, column: 32)
!7880 = !DILocation(line: 641, column: 3, scope: !7879)
!7881 = !DILocation(line: 642, column: 2, scope: !7879)
!7882 = !DILocation(line: 646, column: 32, scope: !7831)
!7883 = !DILocation(line: 646, column: 2, scope: !7831)
!7884 = !DILocation(line: 648, column: 2, scope: !7831)
!7885 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1318, file: !1318, line: 419, type: !1249, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !7886)
!7886 = !{!7887, !7888, !7889, !7890, !7892, !7893, !7894, !7895}
!7887 = !DILocalVariable(name: "dev", arg: 1, scope: !7885, file: !1318, line: 419, type: !1224)
!7888 = !DILocalVariable(name: "cfg", arg: 2, scope: !7885, file: !1318, line: 420, type: !1251)
!7889 = !DILocalVariable(name: "config", scope: !7885, file: !1318, line: 422, type: !7768)
!7890 = !DILocalVariable(name: "data", scope: !7885, file: !1318, line: 423, type: !7891)
!7891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 32)
!7892 = !DILocalVariable(name: "parity", scope: !7885, file: !1318, line: 424, type: !4944)
!7893 = !DILocalVariable(name: "stopbits", scope: !7885, file: !1318, line: 425, type: !4944)
!7894 = !DILocalVariable(name: "databits", scope: !7885, file: !1318, line: 426, type: !4944)
!7895 = !DILocalVariable(name: "flowctrl", scope: !7885, file: !1318, line: 428, type: !4944)
!7896 = !DILocation(line: 0, scope: !7885)
!7897 = !DILocation(line: 422, column: 48, scope: !7885)
!7898 = !DILocation(line: 423, column: 38, scope: !7885)
!7899 = !DILocation(line: 424, column: 56, scope: !7885)
!7900 = !DILocation(line: 424, column: 51, scope: !7885)
!7901 = !DILocation(line: 424, column: 26, scope: !7885)
!7902 = !DILocation(line: 425, column: 60, scope: !7885)
!7903 = !DILocation(line: 425, column: 55, scope: !7885)
!7904 = !DILocation(line: 425, column: 28, scope: !7885)
!7905 = !DILocation(line: 426, column: 60, scope: !7885)
!7906 = !DILocation(line: 426, column: 55, scope: !7885)
!7907 = !DILocation(line: 426, column: 28, scope: !7885)
!7908 = !DILocation(line: 428, column: 58, scope: !7885)
!7909 = !DILocation(line: 428, column: 53, scope: !7885)
!7910 = !DILocation(line: 428, column: 28, scope: !7885)
!7911 = !DILocation(line: 431, column: 44, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7885, file: !1318, line: 431, column: 6)
!7913 = !DILocation(line: 438, column: 22, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7885, file: !1318, line: 437, column: 6)
!7915 = !DILocation(line: 437, column: 6, scope: !7885)
!7916 = !DILocation(line: 448, column: 6, scope: !7885)
!7917 = !DILocation(line: 465, column: 47, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7885, file: !1318, line: 465, column: 6)
!7919 = !DILocation(line: 475, column: 21, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7885, file: !1318, line: 475, column: 6)
!7921 = !DILocation(line: 475, column: 6, scope: !7885)
!7922 = !DILocation(line: 476, column: 8, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7924, file: !1318, line: 476, column: 7)
!7924 = distinct !DILexicalBlock(scope: !7920, file: !1318, line: 475, column: 49)
!7925 = !DILocation(line: 477, column: 34, scope: !7923)
!7926 = !DILocation(line: 476, column: 7, scope: !7924)
!7927 = !DILocation(line: 482, column: 27, scope: !7885)
!7928 = !DILocation(line: 482, column: 2, scope: !7885)
!7929 = !DILocation(line: 484, column: 16, scope: !7930)
!7930 = distinct !DILexicalBlock(scope: !7885, file: !1318, line: 484, column: 6)
!7931 = !DILocation(line: 484, column: 13, scope: !7930)
!7932 = !DILocation(line: 484, column: 6, scope: !7885)
!7933 = !DILocation(line: 485, column: 3, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7930, file: !1318, line: 484, column: 44)
!7935 = !DILocation(line: 486, column: 2, scope: !7934)
!7936 = !DILocation(line: 488, column: 18, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !7885, file: !1318, line: 488, column: 6)
!7938 = !DILocation(line: 488, column: 15, scope: !7937)
!7939 = !DILocation(line: 488, column: 6, scope: !7885)
!7940 = !DILocation(line: 489, column: 3, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7937, file: !1318, line: 488, column: 48)
!7942 = !DILocation(line: 490, column: 2, scope: !7941)
!7943 = !DILocation(line: 492, column: 18, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7885, file: !1318, line: 492, column: 6)
!7945 = !DILocation(line: 492, column: 15, scope: !7944)
!7946 = !DILocation(line: 492, column: 6, scope: !7885)
!7947 = !DILocation(line: 493, column: 3, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7944, file: !1318, line: 492, column: 48)
!7949 = !DILocation(line: 494, column: 2, scope: !7948)
!7950 = !DILocation(line: 496, column: 18, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7885, file: !1318, line: 496, column: 6)
!7952 = !DILocation(line: 496, column: 15, scope: !7951)
!7953 = !DILocation(line: 496, column: 6, scope: !7885)
!7954 = !DILocation(line: 497, column: 3, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7951, file: !1318, line: 496, column: 46)
!7956 = !DILocation(line: 498, column: 2, scope: !7955)
!7957 = !DILocation(line: 500, column: 11, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7885, file: !1318, line: 500, column: 6)
!7959 = !DILocation(line: 500, column: 29, scope: !7958)
!7960 = !DILocation(line: 500, column: 20, scope: !7958)
!7961 = !DILocation(line: 500, column: 6, scope: !7885)
!7962 = !DILocation(line: 501, column: 3, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7958, file: !1318, line: 500, column: 40)
!7964 = !DILocation(line: 502, column: 26, scope: !7963)
!7965 = !DILocation(line: 502, column: 19, scope: !7963)
!7966 = !DILocation(line: 503, column: 2, scope: !7963)
!7967 = !DILocation(line: 505, column: 26, scope: !7885)
!7968 = !DILocation(line: 505, column: 2, scope: !7885)
!7969 = !DILocation(line: 506, column: 2, scope: !7885)
!7970 = !DILocation(line: 507, column: 1, scope: !7885)
!7971 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1318, file: !1318, line: 509, type: !1262, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !7972)
!7972 = !{!7973, !7974, !7975}
!7973 = !DILocalVariable(name: "dev", arg: 1, scope: !7971, file: !1318, line: 509, type: !1224)
!7974 = !DILocalVariable(name: "cfg", arg: 2, scope: !7971, file: !1318, line: 510, type: !1264)
!7975 = !DILocalVariable(name: "data", scope: !7971, file: !1318, line: 512, type: !7891)
!7976 = !DILocation(line: 0, scope: !7971)
!7977 = !DILocation(line: 512, column: 38, scope: !7971)
!7978 = !DILocation(line: 514, column: 24, scope: !7971)
!7979 = !DILocation(line: 514, column: 7, scope: !7971)
!7980 = !DILocation(line: 514, column: 16, scope: !7971)
!7981 = !DILocation(line: 515, column: 41, scope: !7971)
!7982 = !{i32 0, i32 1537}
!7983 = !DILocation(line: 515, column: 16, scope: !7971)
!7984 = !DILocation(line: 515, column: 7, scope: !7971)
!7985 = !DILocation(line: 515, column: 14, scope: !7971)
!7986 = !DILocation(line: 517, column: 3, scope: !7971)
!7987 = !{i32 0, i32 12289}
!7988 = !DILocation(line: 516, column: 19, scope: !7971)
!7989 = !DILocation(line: 516, column: 7, scope: !7971)
!7990 = !DILocation(line: 516, column: 17, scope: !7971)
!7991 = !DILocation(line: 519, column: 3, scope: !7971)
!7992 = !DILocation(line: 519, column: 33, scope: !7971)
!7993 = !DILocation(line: 518, column: 19, scope: !7971)
!7994 = !DILocation(line: 518, column: 7, scope: !7971)
!7995 = !DILocation(line: 518, column: 17, scope: !7971)
!7996 = !DILocation(line: 521, column: 3, scope: !7971)
!7997 = !{i32 0, i32 769}
!7998 = !DILocation(line: 520, column: 19, scope: !7971)
!7999 = !DILocation(line: 520, column: 7, scope: !7971)
!8000 = !DILocation(line: 520, column: 17, scope: !7971)
!8001 = !DILocation(line: 522, column: 2, scope: !7971)
!8002 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1318, file: !1318, line: 205, type: !8003, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8005)
!8003 = !DISubroutineType(types: !8004)
!8004 = !{!121, !1224}
!8005 = !{!8006, !8007}
!8006 = !DILocalVariable(name: "dev", arg: 1, scope: !8002, file: !1318, line: 205, type: !1224)
!8007 = !DILocalVariable(name: "config", scope: !8002, file: !1318, line: 207, type: !7768)
!8008 = !DILocation(line: 0, scope: !8002)
!8009 = !DILocation(line: 207, column: 48, scope: !8002)
!8010 = !DILocation(line: 209, column: 36, scope: !8002)
!8011 = !DILocation(line: 209, column: 9, scope: !8002)
!8012 = !DILocation(line: 209, column: 2, scope: !8002)
!8013 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1318, file: !1318, line: 270, type: !8014, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8016)
!8014 = !DISubroutineType(types: !8015)
!8015 = !{!1190, !121}
!8016 = !{!8017}
!8017 = !DILocalVariable(name: "parity", arg: 1, scope: !8013, file: !1318, line: 270, type: !121)
!8018 = !DILocation(line: 0, scope: !8013)
!8019 = !DILocation(line: 272, column: 2, scope: !8013)
!8020 = !DILocation(line: 281, column: 1, scope: !8013)
!8021 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1318, file: !1318, line: 220, type: !8003, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8022)
!8022 = !{!8023, !8024}
!8023 = !DILocalVariable(name: "dev", arg: 1, scope: !8021, file: !1318, line: 220, type: !1224)
!8024 = !DILocalVariable(name: "config", scope: !8021, file: !1318, line: 222, type: !7768)
!8025 = !DILocation(line: 0, scope: !8021)
!8026 = !DILocation(line: 222, column: 48, scope: !8021)
!8027 = !DILocation(line: 224, column: 44, scope: !8021)
!8028 = !DILocation(line: 224, column: 9, scope: !8021)
!8029 = !DILocation(line: 224, column: 2, scope: !8021)
!8030 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1318, file: !1318, line: 304, type: !8031, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8033)
!8031 = !DISubroutineType(types: !8032)
!8032 = !{!1204, !121}
!8033 = !{!8034}
!8034 = !DILocalVariable(name: "sb", arg: 1, scope: !8030, file: !1318, line: 304, type: !121)
!8035 = !DILocation(line: 0, scope: !8030)
!8036 = !DILocation(line: 306, column: 2, scope: !8030)
!8037 = !DILocation(line: 0, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8030, file: !1318, line: 306, column: 14)
!8039 = !DILocation(line: 323, column: 1, scope: !8030)
!8040 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1318, file: !1318, line: 235, type: !8003, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8041)
!8041 = !{!8042, !8043}
!8042 = !DILocalVariable(name: "dev", arg: 1, scope: !8040, file: !1318, line: 235, type: !1224)
!8043 = !DILocalVariable(name: "config", scope: !8040, file: !1318, line: 237, type: !7768)
!8044 = !DILocation(line: 0, scope: !8040)
!8045 = !DILocation(line: 237, column: 48, scope: !8040)
!8046 = !DILocation(line: 239, column: 39, scope: !8040)
!8047 = !DILocation(line: 239, column: 9, scope: !8040)
!8048 = !DILocation(line: 239, column: 2, scope: !8040)
!8049 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1318, file: !1318, line: 355, type: !8050, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8052)
!8050 = !DISubroutineType(types: !8051)
!8051 = !{!1197, !121, !121}
!8052 = !{!8053, !8054}
!8053 = !DILocalVariable(name: "db", arg: 1, scope: !8049, file: !1318, line: 355, type: !121)
!8054 = !DILocalVariable(name: "p", arg: 2, scope: !8049, file: !1318, line: 356, type: !121)
!8055 = !DILocation(line: 0, scope: !8049)
!8056 = !DILocation(line: 358, column: 2, scope: !8049)
!8057 = !DILocation(line: 384, column: 1, scope: !8049)
!8058 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1318, file: !1318, line: 250, type: !8003, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8059)
!8059 = !{!8060, !8061}
!8060 = !DILocalVariable(name: "dev", arg: 1, scope: !8058, file: !1318, line: 250, type: !1224)
!8061 = !DILocalVariable(name: "config", scope: !8058, file: !1318, line: 252, type: !7768)
!8062 = !DILocation(line: 0, scope: !8058)
!8063 = !DILocation(line: 252, column: 48, scope: !8058)
!8064 = !DILocation(line: 254, column: 40, scope: !8058)
!8065 = !DILocation(line: 254, column: 9, scope: !8058)
!8066 = !DILocation(line: 254, column: 2, scope: !8058)
!8067 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1318, file: !1318, line: 409, type: !8068, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8070)
!8068 = !DISubroutineType(types: !8069)
!8069 = !{!1210, !121}
!8070 = !{!8071}
!8071 = !DILocalVariable(name: "fc", arg: 1, scope: !8067, file: !1318, line: 409, type: !121)
!8072 = !DILocation(line: 0, scope: !8067)
!8073 = !DILocation(line: 411, column: 9, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8067, file: !1318, line: 411, column: 6)
!8075 = !DILocation(line: 416, column: 1, scope: !8067)
!8076 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !8077, file: !8077, line: 966, type: !8078, scopeLine: 967, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8080)
!8077 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8078 = !DISubroutineType(types: !8079)
!8079 = !{!121, !1265}
!8080 = !{!8081}
!8081 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8076, file: !8077, line: 966, type: !1265)
!8082 = !DILocation(line: 0, scope: !8076)
!8083 = !DILocation(line: 968, column: 21, scope: !8076)
!8084 = !DILocation(line: 968, column: 3, scope: !8076)
!8085 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !8077, file: !8077, line: 600, type: !8078, scopeLine: 601, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8086)
!8086 = !{!8087}
!8087 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8085, file: !8077, line: 600, type: !1265)
!8088 = !DILocation(line: 0, scope: !8085)
!8089 = !DILocation(line: 602, column: 21, scope: !8085)
!8090 = !DILocation(line: 602, column: 3, scope: !8085)
!8091 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !8077, file: !8077, line: 819, type: !8078, scopeLine: 820, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8092)
!8092 = !{!8093}
!8093 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8091, file: !8077, line: 819, type: !1265)
!8094 = !DILocation(line: 0, scope: !8091)
!8095 = !DILocation(line: 821, column: 21, scope: !8091)
!8096 = !DILocation(line: 821, column: 3, scope: !8091)
!8097 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !8077, file: !8077, line: 546, type: !8078, scopeLine: 547, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8098)
!8098 = !{!8099}
!8099 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8097, file: !8077, line: 546, type: !1265)
!8100 = !DILocation(line: 0, scope: !8097)
!8101 = !DILocation(line: 548, column: 21, scope: !8097)
!8102 = !DILocation(line: 548, column: 3, scope: !8097)
!8103 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1318, file: !1318, line: 257, type: !8104, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8106)
!8104 = !DISubroutineType(types: !8105)
!8105 = !{!121, !1190}
!8106 = !{!8107}
!8107 = !DILocalVariable(name: "parity", arg: 1, scope: !8103, file: !1318, line: 257, type: !1190)
!8108 = !DILocation(line: 0, scope: !8103)
!8109 = !DILocation(line: 259, column: 2, scope: !8103)
!8110 = !DILocation(line: 268, column: 1, scope: !8103)
!8111 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1318, file: !1318, line: 283, type: !8112, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8114)
!8112 = !DISubroutineType(types: !8113)
!8113 = !{!121, !1204}
!8114 = !{!8115}
!8115 = !DILocalVariable(name: "sb", arg: 1, scope: !8111, file: !1318, line: 283, type: !1204)
!8116 = !DILocation(line: 0, scope: !8111)
!8117 = !DILocation(line: 285, column: 2, scope: !8111)
!8118 = !DILocation(line: 0, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8111, file: !1318, line: 285, column: 14)
!8120 = !DILocation(line: 302, column: 1, scope: !8111)
!8121 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1318, file: !1318, line: 325, type: !8122, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8124)
!8122 = !DISubroutineType(types: !8123)
!8123 = !{!121, !1197, !1190}
!8124 = !{!8125, !8126}
!8125 = !DILocalVariable(name: "db", arg: 1, scope: !8121, file: !1318, line: 325, type: !1197)
!8126 = !DILocalVariable(name: "p", arg: 2, scope: !8121, file: !1318, line: 326, type: !1190)
!8127 = !DILocation(line: 0, scope: !8121)
!8128 = !DILocation(line: 328, column: 2, scope: !8121)
!8129 = !DILocation(line: 353, column: 1, scope: !8121)
!8130 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1318, file: !1318, line: 393, type: !8131, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8133)
!8131 = !DISubroutineType(types: !8132)
!8132 = !{!121, !1210}
!8133 = !{!8134}
!8134 = !DILocalVariable(name: "fc", arg: 1, scope: !8130, file: !1318, line: 393, type: !1210)
!8135 = !DILocation(line: 0, scope: !8130)
!8136 = !DILocation(line: 395, column: 9, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8130, file: !1318, line: 395, column: 6)
!8138 = !DILocation(line: 400, column: 1, scope: !8130)
!8139 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !8077, file: !8077, line: 423, type: !8140, scopeLine: 424, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8142)
!8140 = !DISubroutineType(types: !8141)
!8141 = !{null, !1265}
!8142 = !{!8143}
!8143 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8139, file: !8077, line: 423, type: !1265)
!8144 = !DILocation(line: 0, scope: !8139)
!8145 = !DILocation(line: 425, column: 3, scope: !8139)
!8146 = !DILocation(line: 426, column: 1, scope: !8139)
!8147 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1318, file: !1318, line: 197, type: !8148, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8150)
!8148 = !DISubroutineType(types: !8149)
!8149 = !{null, !1224, !121}
!8150 = !{!8151, !8152, !8153}
!8151 = !DILocalVariable(name: "dev", arg: 1, scope: !8147, file: !1318, line: 197, type: !1224)
!8152 = !DILocalVariable(name: "parity", arg: 2, scope: !8147, file: !1318, line: 198, type: !121)
!8153 = !DILocalVariable(name: "config", scope: !8147, file: !1318, line: 200, type: !7768)
!8154 = !DILocation(line: 0, scope: !8147)
!8155 = !DILocation(line: 200, column: 48, scope: !8147)
!8156 = !DILocation(line: 202, column: 29, scope: !8147)
!8157 = !DILocation(line: 202, column: 2, scope: !8147)
!8158 = !DILocation(line: 203, column: 1, scope: !8147)
!8159 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1318, file: !1318, line: 212, type: !8148, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8160)
!8160 = !{!8161, !8162, !8163}
!8161 = !DILocalVariable(name: "dev", arg: 1, scope: !8159, file: !1318, line: 212, type: !1224)
!8162 = !DILocalVariable(name: "stopbits", arg: 2, scope: !8159, file: !1318, line: 213, type: !121)
!8163 = !DILocalVariable(name: "config", scope: !8159, file: !1318, line: 215, type: !7768)
!8164 = !DILocation(line: 0, scope: !8159)
!8165 = !DILocation(line: 215, column: 48, scope: !8159)
!8166 = !DILocation(line: 217, column: 37, scope: !8159)
!8167 = !DILocation(line: 217, column: 2, scope: !8159)
!8168 = !DILocation(line: 218, column: 1, scope: !8159)
!8169 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1318, file: !1318, line: 227, type: !8148, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8170)
!8170 = !{!8171, !8172, !8173}
!8171 = !DILocalVariable(name: "dev", arg: 1, scope: !8169, file: !1318, line: 227, type: !1224)
!8172 = !DILocalVariable(name: "databits", arg: 2, scope: !8169, file: !1318, line: 228, type: !121)
!8173 = !DILocalVariable(name: "config", scope: !8169, file: !1318, line: 230, type: !7768)
!8174 = !DILocation(line: 0, scope: !8169)
!8175 = !DILocation(line: 230, column: 48, scope: !8169)
!8176 = !DILocation(line: 232, column: 32, scope: !8169)
!8177 = !DILocation(line: 232, column: 2, scope: !8169)
!8178 = !DILocation(line: 233, column: 1, scope: !8169)
!8179 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1318, file: !1318, line: 242, type: !8148, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8180)
!8180 = !{!8181, !8182, !8183}
!8181 = !DILocalVariable(name: "dev", arg: 1, scope: !8179, file: !1318, line: 242, type: !1224)
!8182 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !8179, file: !1318, line: 243, type: !121)
!8183 = !DILocalVariable(name: "config", scope: !8179, file: !1318, line: 245, type: !7768)
!8184 = !DILocation(line: 0, scope: !8179)
!8185 = !DILocation(line: 245, column: 48, scope: !8179)
!8186 = !DILocation(line: 247, column: 33, scope: !8179)
!8187 = !DILocation(line: 247, column: 2, scope: !8179)
!8188 = !DILocation(line: 248, column: 1, scope: !8179)
!8189 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1318, file: !1318, line: 107, type: !8148, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8190)
!8190 = !{!8191, !8192, !8193, !8194, !8195}
!8191 = !DILocalVariable(name: "dev", arg: 1, scope: !8189, file: !1318, line: 107, type: !1224)
!8192 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !8189, file: !1318, line: 107, type: !121)
!8193 = !DILocalVariable(name: "config", scope: !8189, file: !1318, line: 109, type: !7768)
!8194 = !DILocalVariable(name: "data", scope: !8189, file: !1318, line: 110, type: !7891)
!8195 = !DILocalVariable(name: "clock_rate", scope: !8189, file: !1318, line: 112, type: !121)
!8196 = !DILocation(line: 0, scope: !8189)
!8197 = !DILocation(line: 109, column: 48, scope: !8189)
!8198 = !DILocation(line: 110, column: 38, scope: !8189)
!8199 = !DILocation(line: 112, column: 2, scope: !8189)
!8200 = !DILocation(line: 123, column: 36, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8202, file: !1318, line: 123, column: 7)
!8202 = distinct !DILexicalBlock(scope: !8203, file: !1318, line: 122, column: 9)
!8203 = distinct !DILexicalBlock(scope: !8189, file: !1318, line: 115, column: 6)
!8204 = !DILocation(line: 124, column: 42, scope: !8201)
!8205 = !DILocation(line: 123, column: 7, scope: !8201)
!8206 = !DILocation(line: 125, column: 22, scope: !8201)
!8207 = !DILocation(line: 123, column: 7, scope: !8202)
!8208 = !DILocation(line: 176, column: 36, scope: !8189)
!8209 = !DILocation(line: 176, column: 3, scope: !8189)
!8210 = !DILocation(line: 179, column: 32, scope: !8189)
!8211 = !DILocation(line: 180, column: 10, scope: !8189)
!8212 = !DILocation(line: 179, column: 3, scope: !8189)
!8213 = !DILocation(line: 195, column: 1, scope: !8189)
!8214 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !8077, file: !8077, line: 409, type: !8140, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8215)
!8215 = !{!8216}
!8216 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8214, file: !8077, line: 409, type: !1265)
!8217 = !DILocation(line: 0, scope: !8214)
!8218 = !DILocation(line: 411, column: 3, scope: !8214)
!8219 = !DILocation(line: 412, column: 1, scope: !8214)
!8220 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !735, file: !735, line: 216, type: !1298, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8221)
!8221 = !{!8222, !8223, !8224, !8225}
!8222 = !DILocalVariable(name: "dev", arg: 1, scope: !8220, file: !735, line: 216, type: !1224)
!8223 = !DILocalVariable(name: "sys", arg: 2, scope: !8220, file: !735, line: 217, type: !810)
!8224 = !DILocalVariable(name: "rate", arg: 3, scope: !8220, file: !735, line: 218, type: !766)
!8225 = !DILocalVariable(name: "api", scope: !8220, file: !735, line: 220, type: !1276)
!8226 = !DILocation(line: 0, scope: !8220)
!8227 = !DILocation(line: 221, column: 49, scope: !8220)
!8228 = !DILocation(line: 223, column: 11, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8220, file: !735, line: 223, column: 6)
!8230 = !DILocation(line: 223, column: 20, scope: !8229)
!8231 = !DILocation(line: 223, column: 6, scope: !8220)
!8232 = !DILocation(line: 227, column: 9, scope: !8220)
!8233 = !DILocation(line: 227, column: 2, scope: !8220)
!8234 = !DILocation(line: 228, column: 1, scope: !8220)
!8235 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !8077, file: !8077, line: 614, type: !8236, scopeLine: 615, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8238)
!8236 = !DISubroutineType(types: !8237)
!8237 = !{null, !1265, !121}
!8238 = !{!8239, !8240}
!8239 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8235, file: !8077, line: 614, type: !1265)
!8240 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !8235, file: !8077, line: 614, type: !121)
!8241 = !DILocation(line: 0, scope: !8235)
!8242 = !DILocation(line: 616, column: 3, scope: !8235)
!8243 = !DILocation(line: 617, column: 1, scope: !8235)
!8244 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !8077, file: !8077, line: 1019, type: !8245, scopeLine: 1021, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8247)
!8245 = !DISubroutineType(types: !8246)
!8246 = !{null, !1265, !121, !121, !121}
!8247 = !{!8248, !8249, !8250, !8251}
!8248 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8244, file: !8077, line: 1019, type: !1265)
!8249 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !8244, file: !8077, line: 1019, type: !121)
!8250 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !8244, file: !8077, line: 1019, type: !121)
!8251 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !8244, file: !8077, line: 1020, type: !121)
!8252 = !DILocation(line: 0, scope: !8244)
!8253 = !DILocation(line: 1028, column: 30, scope: !8254)
!8254 = distinct !DILexicalBlock(scope: !8255, file: !8077, line: 1027, column: 3)
!8255 = distinct !DILexicalBlock(scope: !8244, file: !8077, line: 1022, column: 7)
!8256 = !DILocation(line: 1028, column: 19, scope: !8254)
!8257 = !DILocation(line: 1028, column: 13, scope: !8254)
!8258 = !DILocation(line: 1028, column: 17, scope: !8254)
!8259 = !DILocation(line: 1030, column: 1, scope: !8244)
!8260 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !8077, file: !8077, line: 948, type: !8236, scopeLine: 949, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8261)
!8261 = !{!8262, !8263}
!8262 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8260, file: !8077, line: 948, type: !1265)
!8263 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !8260, file: !8077, line: 948, type: !121)
!8264 = !DILocation(line: 0, scope: !8260)
!8265 = !DILocation(line: 950, column: 3, scope: !8260)
!8266 = !DILocation(line: 951, column: 1, scope: !8260)
!8267 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !8077, file: !8077, line: 587, type: !8236, scopeLine: 588, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8268)
!8268 = !{!8269, !8270}
!8269 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8267, file: !8077, line: 587, type: !1265)
!8270 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8267, file: !8077, line: 587, type: !121)
!8271 = !DILocation(line: 0, scope: !8267)
!8272 = !DILocation(line: 589, column: 3, scope: !8267)
!8273 = !DILocation(line: 590, column: 1, scope: !8267)
!8274 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !8077, file: !8077, line: 804, type: !8236, scopeLine: 805, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8275)
!8275 = !{!8276, !8277}
!8276 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8274, file: !8077, line: 804, type: !1265)
!8277 = !DILocalVariable(name: "StopBits", arg: 2, scope: !8274, file: !8077, line: 804, type: !121)
!8278 = !DILocation(line: 0, scope: !8274)
!8279 = !DILocation(line: 806, column: 3, scope: !8274)
!8280 = !DILocation(line: 807, column: 1, scope: !8274)
!8281 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !8077, file: !8077, line: 531, type: !8236, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8282)
!8282 = !{!8283, !8284}
!8283 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8281, file: !8077, line: 531, type: !1265)
!8284 = !DILocalVariable(name: "Parity", arg: 2, scope: !8281, file: !8077, line: 531, type: !121)
!8285 = !DILocation(line: 0, scope: !8281)
!8286 = !DILocation(line: 533, column: 3, scope: !8281)
!8287 = !DILocation(line: 534, column: 1, scope: !8281)
!8288 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !8077, file: !8077, line: 1769, type: !8078, scopeLine: 1770, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8289)
!8289 = !{!8290}
!8290 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8288, file: !8077, line: 1769, type: !1265)
!8291 = !DILocation(line: 0, scope: !8288)
!8292 = !DILocation(line: 1771, column: 11, scope: !8288)
!8293 = !DILocation(line: 1771, column: 46, scope: !8288)
!8294 = !DILocation(line: 1771, column: 3, scope: !8288)
!8295 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !8077, file: !8077, line: 1736, type: !8078, scopeLine: 1737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8296)
!8296 = !{!8297}
!8297 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8295, file: !8077, line: 1736, type: !1265)
!8298 = !DILocation(line: 0, scope: !8295)
!8299 = !DILocation(line: 1738, column: 11, scope: !8295)
!8300 = !DILocation(line: 1738, column: 3, scope: !8295)
!8301 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !8077, file: !8077, line: 1747, type: !8078, scopeLine: 1748, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8302)
!8302 = !{!8303}
!8303 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8301, file: !8077, line: 1747, type: !1265)
!8304 = !DILocation(line: 0, scope: !8301)
!8305 = !DILocation(line: 1749, column: 11, scope: !8301)
!8306 = !DILocation(line: 1749, column: 45, scope: !8301)
!8307 = !DILocation(line: 1749, column: 3, scope: !8301)
!8308 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !8077, file: !8077, line: 1826, type: !8078, scopeLine: 1827, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8309)
!8309 = !{!8310}
!8310 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8308, file: !8077, line: 1826, type: !1265)
!8311 = !DILocation(line: 0, scope: !8308)
!8312 = !DILocation(line: 1828, column: 11, scope: !8308)
!8313 = !DILocation(line: 1828, column: 46, scope: !8308)
!8314 = !DILocation(line: 1828, column: 3, scope: !8308)
!8315 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !8077, file: !8077, line: 1991, type: !8140, scopeLine: 1992, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8316)
!8316 = !{!8317}
!8317 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8315, file: !8077, line: 1991, type: !1265)
!8318 = !DILocation(line: 0, scope: !8315)
!8319 = !DILocation(line: 1993, column: 3, scope: !8315)
!8320 = !DILocation(line: 1994, column: 1, scope: !8315)
!8321 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !8077, file: !8077, line: 1933, type: !8140, scopeLine: 1934, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8322)
!8322 = !{!8323, !8324}
!8323 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8321, file: !8077, line: 1933, type: !1265)
!8324 = !DILocalVariable(name: "tmpreg", scope: !8321, file: !8077, line: 1935, type: !120)
!8325 = !DILocation(line: 0, scope: !8321)
!8326 = !DILocation(line: 1935, column: 3, scope: !8321)
!8327 = !DILocation(line: 1935, column: 17, scope: !8321)
!8328 = !DILocation(line: 1936, column: 20, scope: !8321)
!8329 = !DILocation(line: 1936, column: 10, scope: !8321)
!8330 = !DILocation(line: 1937, column: 10, scope: !8321)
!8331 = !DILocation(line: 1938, column: 20, scope: !8321)
!8332 = !DILocation(line: 1938, column: 10, scope: !8321)
!8333 = !DILocation(line: 1939, column: 10, scope: !8321)
!8334 = !DILocation(line: 1940, column: 1, scope: !8321)
!8335 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !8077, file: !8077, line: 1876, type: !8140, scopeLine: 1877, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8336)
!8336 = !{!8337, !8338}
!8337 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8335, file: !8077, line: 1876, type: !1265)
!8338 = !DILocalVariable(name: "tmpreg", scope: !8335, file: !8077, line: 1878, type: !120)
!8339 = !DILocation(line: 0, scope: !8335)
!8340 = !DILocation(line: 1878, column: 3, scope: !8335)
!8341 = !DILocation(line: 1878, column: 17, scope: !8335)
!8342 = !DILocation(line: 1879, column: 20, scope: !8335)
!8343 = !DILocation(line: 1879, column: 10, scope: !8335)
!8344 = !DILocation(line: 1880, column: 10, scope: !8335)
!8345 = !DILocation(line: 1881, column: 20, scope: !8335)
!8346 = !DILocation(line: 1881, column: 10, scope: !8335)
!8347 = !DILocation(line: 1882, column: 10, scope: !8335)
!8348 = !DILocation(line: 1883, column: 1, scope: !8335)
!8349 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !8077, file: !8077, line: 1895, type: !8140, scopeLine: 1896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8350)
!8350 = !{!8351, !8352}
!8351 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8349, file: !8077, line: 1895, type: !1265)
!8352 = !DILocalVariable(name: "tmpreg", scope: !8349, file: !8077, line: 1897, type: !120)
!8353 = !DILocation(line: 0, scope: !8349)
!8354 = !DILocation(line: 1897, column: 3, scope: !8349)
!8355 = !DILocation(line: 1897, column: 17, scope: !8349)
!8356 = !DILocation(line: 1898, column: 20, scope: !8349)
!8357 = !DILocation(line: 1898, column: 10, scope: !8349)
!8358 = !DILocation(line: 1899, column: 10, scope: !8349)
!8359 = !DILocation(line: 1900, column: 20, scope: !8349)
!8360 = !DILocation(line: 1900, column: 10, scope: !8349)
!8361 = !DILocation(line: 1901, column: 10, scope: !8349)
!8362 = !DILocation(line: 1902, column: 1, scope: !8349)
!8363 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !8077, file: !8077, line: 1914, type: !8140, scopeLine: 1915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8364)
!8364 = !{!8365, !8366}
!8365 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8363, file: !8077, line: 1914, type: !1265)
!8366 = !DILocalVariable(name: "tmpreg", scope: !8363, file: !8077, line: 1916, type: !120)
!8367 = !DILocation(line: 0, scope: !8363)
!8368 = !DILocation(line: 1916, column: 3, scope: !8363)
!8369 = !DILocation(line: 1916, column: 17, scope: !8363)
!8370 = !DILocation(line: 1917, column: 20, scope: !8363)
!8371 = !DILocation(line: 1917, column: 10, scope: !8363)
!8372 = !DILocation(line: 1918, column: 10, scope: !8363)
!8373 = !DILocation(line: 1919, column: 20, scope: !8363)
!8374 = !DILocation(line: 1919, column: 10, scope: !8363)
!8375 = !DILocation(line: 1920, column: 10, scope: !8363)
!8376 = !DILocation(line: 1921, column: 1, scope: !8363)
!8377 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !8077, file: !8077, line: 1813, type: !8078, scopeLine: 1814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8378)
!8378 = !{!8379}
!8379 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8377, file: !8077, line: 1813, type: !1265)
!8380 = !DILocation(line: 0, scope: !8377)
!8381 = !DILocation(line: 1815, column: 11, scope: !8377)
!8382 = !DILocation(line: 1815, column: 46, scope: !8377)
!8383 = !DILocation(line: 1815, column: 3, scope: !8377)
!8384 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !8077, file: !8077, line: 2425, type: !8385, scopeLine: 2426, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8387)
!8385 = !DISubroutineType(types: !8386)
!8386 = !{null, !1265, !167}
!8387 = !{!8388, !8389}
!8388 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8384, file: !8077, line: 2425, type: !1265)
!8389 = !DILocalVariable(name: "Value", arg: 2, scope: !8384, file: !8077, line: 2425, type: !167)
!8390 = !DILocation(line: 0, scope: !8384)
!8391 = !DILocation(line: 2427, column: 16, scope: !8384)
!8392 = !DILocation(line: 2427, column: 11, scope: !8384)
!8393 = !DILocation(line: 2427, column: 14, scope: !8384)
!8394 = !DILocation(line: 2428, column: 1, scope: !8384)
!8395 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !8077, file: !8077, line: 1791, type: !8078, scopeLine: 1792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8396)
!8396 = !{!8397}
!8397 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8395, file: !8077, line: 1791, type: !1265)
!8398 = !DILocation(line: 0, scope: !8395)
!8399 = !DILocation(line: 1793, column: 11, scope: !8395)
!8400 = !DILocation(line: 1793, column: 47, scope: !8395)
!8401 = !DILocation(line: 1793, column: 3, scope: !8395)
!8402 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !8077, file: !8077, line: 2402, type: !8403, scopeLine: 2403, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8405)
!8403 = !DISubroutineType(types: !8404)
!8404 = !{!167, !1265}
!8405 = !{!8406}
!8406 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8402, file: !8077, line: 2402, type: !1265)
!8407 = !DILocation(line: 0, scope: !8402)
!8408 = !DILocation(line: 2404, column: 20, scope: !8402)
!8409 = !DILocation(line: 2404, column: 10, scope: !8402)
!8410 = !DILocation(line: 2404, column: 3, scope: !8402)
!8411 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1318, file: !1318, line: 1583, type: !1245, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8412)
!8412 = !{!8413, !8414, !8415, !8416, !8417, !8418}
!8413 = !DILocalVariable(name: "dev", arg: 1, scope: !8411, file: !1318, line: 1583, type: !1224)
!8414 = !DILocalVariable(name: "config", scope: !8411, file: !1318, line: 1585, type: !7768)
!8415 = !DILocalVariable(name: "data", scope: !8411, file: !1318, line: 1586, type: !7891)
!8416 = !DILocalVariable(name: "ll_parity", scope: !8411, file: !1318, line: 1587, type: !121)
!8417 = !DILocalVariable(name: "ll_datawidth", scope: !8411, file: !1318, line: 1588, type: !121)
!8418 = !DILocalVariable(name: "err", scope: !8411, file: !1318, line: 1589, type: !103)
!8419 = !DILocation(line: 0, scope: !8411)
!8420 = !DILocation(line: 1585, column: 48, scope: !8411)
!8421 = !DILocation(line: 1586, column: 38, scope: !8411)
!8422 = !DILocation(line: 1591, column: 2, scope: !8411)
!8423 = !DILocation(line: 1593, column: 29, scope: !8424)
!8424 = distinct !DILexicalBlock(scope: !8411, file: !1318, line: 1593, column: 6)
!8425 = !DILocation(line: 1593, column: 7, scope: !8424)
!8426 = !DILocation(line: 1593, column: 6, scope: !8411)
!8427 = !DILocation(line: 1599, column: 31, scope: !8411)
!8428 = !DILocation(line: 1599, column: 71, scope: !8411)
!8429 = !DILocation(line: 1599, column: 8, scope: !8411)
!8430 = !DILocation(line: 1600, column: 10, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8411, file: !1318, line: 1600, column: 6)
!8432 = !DILocation(line: 1600, column: 6, scope: !8411)
!8433 = !DILocation(line: 1616, column: 36, scope: !8411)
!8434 = !DILocation(line: 1616, column: 8, scope: !8411)
!8435 = !DILocation(line: 1617, column: 10, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8411, file: !1318, line: 1617, column: 6)
!8437 = !DILocation(line: 1617, column: 6, scope: !8411)
!8438 = !DILocation(line: 1621, column: 27, scope: !8411)
!8439 = !DILocation(line: 1621, column: 2, scope: !8411)
!8440 = !DILocation(line: 1624, column: 40, scope: !8411)
!8441 = !DILocation(line: 1624, column: 2, scope: !8411)
!8442 = !DILocation(line: 1630, column: 14, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8411, file: !1318, line: 1630, column: 6)
!8444 = !DILocation(line: 1630, column: 6, scope: !8411)
!8445 = !DILocation(line: 1638, column: 2, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8447, file: !1318, line: 1634, column: 34)
!8447 = distinct !DILexicalBlock(scope: !8443, file: !1318, line: 1634, column: 13)
!8448 = !DILocation(line: 0, scope: !8443)
!8449 = !DILocation(line: 1649, column: 35, scope: !8411)
!8450 = !DILocation(line: 1649, column: 2, scope: !8411)
!8451 = !DILocation(line: 1654, column: 14, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8411, file: !1318, line: 1654, column: 6)
!8453 = !DILocation(line: 1654, column: 6, scope: !8411)
!8454 = !DILocation(line: 1655, column: 3, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8452, file: !1318, line: 1654, column: 31)
!8456 = !DILocation(line: 1656, column: 2, scope: !8455)
!8457 = !DILocation(line: 1659, column: 37, scope: !8411)
!8458 = !DILocation(line: 1659, column: 2, scope: !8411)
!8459 = !DILocation(line: 1662, column: 14, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8411, file: !1318, line: 1662, column: 6)
!8461 = !DILocation(line: 1662, column: 6, scope: !8411)
!8462 = !DILocation(line: 1663, column: 37, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8460, file: !1318, line: 1662, column: 27)
!8464 = !DILocation(line: 1663, column: 3, scope: !8463)
!8465 = !DILocation(line: 1664, column: 2, scope: !8463)
!8466 = !DILocation(line: 1684, column: 26, scope: !8411)
!8467 = !DILocation(line: 1684, column: 2, scope: !8411)
!8468 = !DILocation(line: 1722, column: 2, scope: !8411)
!8469 = !DILocation(line: 1724, column: 1, scope: !8411)
!8470 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1318, file: !1318, line: 651, type: !8471, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8473)
!8471 = !DISubroutineType(types: !8472)
!8472 = !{null, !1224}
!8473 = !{!8474, !8475, !8476}
!8474 = !DILocalVariable(name: "dev", arg: 1, scope: !8470, file: !1318, line: 651, type: !1224)
!8475 = !DILocalVariable(name: "data", scope: !8470, file: !1318, line: 653, type: !7891)
!8476 = !DILocalVariable(name: "clk", scope: !8470, file: !1318, line: 654, type: !8477)
!8477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1224)
!8478 = !DILocation(line: 0, scope: !8470)
!8479 = !DILocation(line: 653, column: 38, scope: !8470)
!8480 = !DILocation(line: 656, column: 8, scope: !8470)
!8481 = !DILocation(line: 656, column: 14, scope: !8470)
!8482 = !DILocation(line: 657, column: 1, scope: !8470)
!8483 = distinct !DISubprogram(name: "device_is_ready", scope: !6293, file: !6293, line: 47, type: !8484, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8486)
!8484 = !DISubroutineType(types: !8485)
!8485 = !{!170, !1224}
!8486 = !{!8487}
!8487 = !DILocalVariable(name: "dev", arg: 1, scope: !8483, file: !6293, line: 47, type: !1224)
!8488 = !DILocation(line: 0, scope: !8483)
!8489 = !DILocation(line: 55, column: 2, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8483, file: !6293, line: 55, column: 2)
!8491 = !{i64 2152491307}
!8492 = !DILocation(line: 56, column: 9, scope: !8483)
!8493 = !DILocation(line: 56, column: 2, scope: !8483)
!8494 = distinct !DISubprogram(name: "clock_control_on", scope: !735, file: !735, line: 123, type: !1283, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8495)
!8495 = !{!8496, !8497, !8498}
!8496 = !DILocalVariable(name: "dev", arg: 1, scope: !8494, file: !735, line: 123, type: !1224)
!8497 = !DILocalVariable(name: "sys", arg: 2, scope: !8494, file: !735, line: 124, type: !810)
!8498 = !DILocalVariable(name: "api", scope: !8494, file: !735, line: 126, type: !1276)
!8499 = !DILocation(line: 0, scope: !8494)
!8500 = !DILocation(line: 127, column: 49, scope: !8494)
!8501 = !DILocation(line: 129, column: 14, scope: !8494)
!8502 = !DILocation(line: 129, column: 9, scope: !8494)
!8503 = !DILocation(line: 129, column: 2, scope: !8494)
!8504 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1350, file: !1350, line: 342, type: !8505, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8507)
!8505 = !DISubroutineType(types: !8506)
!8506 = !{!103, !1400, !167}
!8507 = !{!8508, !8509, !8510, !8511}
!8508 = !DILocalVariable(name: "config", arg: 1, scope: !8504, file: !1350, line: 342, type: !1400)
!8509 = !DILocalVariable(name: "id", arg: 2, scope: !8504, file: !1350, line: 343, type: !167)
!8510 = !DILocalVariable(name: "ret", scope: !8504, file: !1350, line: 345, type: !103)
!8511 = !DILocalVariable(name: "state", scope: !8504, file: !1350, line: 346, type: !1353)
!8512 = !DILocation(line: 0, scope: !8504)
!8513 = !DILocation(line: 346, column: 2, scope: !8504)
!8514 = !DILocation(line: 348, column: 8, scope: !8504)
!8515 = !DILocation(line: 349, column: 10, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8504, file: !1350, line: 349, column: 6)
!8517 = !DILocation(line: 349, column: 6, scope: !8504)
!8518 = !DILocation(line: 353, column: 44, scope: !8504)
!8519 = !DILocation(line: 353, column: 9, scope: !8504)
!8520 = !DILocation(line: 353, column: 2, scope: !8504)
!8521 = !DILocation(line: 354, column: 1, scope: !8504)
!8522 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !8077, file: !8077, line: 496, type: !8236, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8523)
!8523 = !{!8524, !8525}
!8524 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8522, file: !8077, line: 496, type: !1265)
!8525 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !8522, file: !8077, line: 496, type: !121)
!8526 = !DILocation(line: 0, scope: !8522)
!8527 = !DILocation(line: 498, column: 3, scope: !8522)
!8528 = !DILocation(line: 499, column: 1, scope: !8522)
!8529 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !8077, file: !8077, line: 849, type: !8245, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8530)
!8530 = !{!8531, !8532, !8533, !8534}
!8531 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8529, file: !8077, line: 849, type: !1265)
!8532 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !8529, file: !8077, line: 849, type: !121)
!8533 = !DILocalVariable(name: "Parity", arg: 3, scope: !8529, file: !8077, line: 849, type: !121)
!8534 = !DILocalVariable(name: "StopBits", arg: 4, scope: !8529, file: !8077, line: 850, type: !121)
!8535 = !DILocation(line: 0, scope: !8529)
!8536 = !DILocation(line: 852, column: 3, scope: !8529)
!8537 = !DILocation(line: 853, column: 3, scope: !8529)
!8538 = !DILocation(line: 854, column: 1, scope: !8529)
!8539 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !8077, file: !8077, line: 1336, type: !8140, scopeLine: 1337, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8540)
!8540 = !{!8541}
!8541 = !DILocalVariable(name: "USARTx", arg: 1, scope: !8539, file: !8077, line: 1336, type: !1265)
!8542 = !DILocation(line: 0, scope: !8539)
!8543 = !DILocation(line: 1338, column: 3, scope: !8539)
!8544 = !DILocation(line: 1339, column: 1, scope: !8539)
!8545 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1350, file: !1350, line: 316, type: !8546, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8548)
!8546 = !DISubroutineType(types: !8547)
!8547 = !{!103, !1400, !1353}
!8548 = !{!8549, !8550, !8551}
!8549 = !DILocalVariable(name: "config", arg: 1, scope: !8545, file: !1350, line: 317, type: !1400)
!8550 = !DILocalVariable(name: "state", arg: 2, scope: !8545, file: !1350, line: 318, type: !1353)
!8551 = !DILocalVariable(name: "reg", scope: !8545, file: !1350, line: 320, type: !22)
!8552 = !DILocation(line: 0, scope: !8545)
!8553 = !DILocation(line: 329, column: 39, scope: !8545)
!8554 = !DILocation(line: 329, column: 52, scope: !8545)
!8555 = !DILocation(line: 329, column: 9, scope: !8545)
!8556 = !DILocation(line: 329, column: 2, scope: !8545)
!8557 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !8484, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1180, retainedNodes: !8558)
!8558 = !{!8559}
!8559 = !DILocalVariable(name: "dev", arg: 1, scope: !8557, file: !154, line: 730, type: !1224)
!8560 = !DILocation(line: 0, scope: !8557)
!8561 = !DILocation(line: 732, column: 9, scope: !8557)
!8562 = !DILocation(line: 732, column: 2, scope: !8557)
!8563 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1493, file: !1493, line: 270, type: !1499, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !8564)
!8564 = !{!8565}
!8565 = !DILocalVariable(name: "dev", arg: 1, scope: !8563, file: !1493, line: 270, type: !1501)
!8566 = !DILocation(line: 0, scope: !8563)
!8567 = !DILocation(line: 274, column: 2, scope: !8563)
!8568 = !DILocation(line: 275, column: 12, scope: !8563)
!8569 = !DILocation(line: 276, column: 15, scope: !8563)
!8570 = !DILocation(line: 277, column: 16, scope: !8563)
!8571 = !DILocation(line: 278, column: 15, scope: !8563)
!8572 = !DILocation(line: 279, column: 16, scope: !8563)
!8573 = !DILocation(line: 282, column: 2, scope: !8563)
!8574 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !369, file: !369, line: 1638, type: !4735, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !8575)
!8575 = !{!8576, !8577}
!8576 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8574, file: !369, line: 1638, type: !693)
!8577 = !DILocalVariable(name: "priority", arg: 2, scope: !8574, file: !369, line: 1638, type: !121)
!8578 = !DILocation(line: 0, scope: !8574)
!8579 = !DILocation(line: 1646, column: 46, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8581, file: !369, line: 1645, column: 3)
!8581 = distinct !DILexicalBlock(scope: !8574, file: !369, line: 1640, column: 7)
!8582 = !DILocation(line: 1648, column: 1, scope: !8574)
!8583 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1493, file: !1493, line: 118, type: !4638, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !8584)
!8584 = !{!8585, !8586}
!8585 = !DILocalVariable(name: "arg", arg: 1, scope: !8583, file: !1493, line: 118, type: !102)
!8586 = !DILocalVariable(name: "dticks", scope: !8583, file: !1493, line: 121, type: !121)
!8587 = !DILocation(line: 0, scope: !8583)
!8588 = !DILocation(line: 124, column: 2, scope: !8583)
!8589 = !DILocation(line: 129, column: 17, scope: !8583)
!8590 = !DILocation(line: 129, column: 14, scope: !8583)
!8591 = !DILocation(line: 130, column: 15, scope: !8583)
!8592 = !DILocation(line: 145, column: 27, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8594, file: !1493, line: 132, column: 16)
!8594 = distinct !DILexicalBlock(scope: !8583, file: !1493, line: 132, column: 6)
!8595 = !DILocation(line: 145, column: 25, scope: !8593)
!8596 = !DILocation(line: 145, column: 45, scope: !8593)
!8597 = !DILocation(line: 146, column: 30, scope: !8593)
!8598 = !DILocation(line: 146, column: 20, scope: !8593)
!8599 = !DILocation(line: 147, column: 3, scope: !8593)
!8600 = !DILocation(line: 151, column: 2, scope: !8583)
!8601 = !DILocation(line: 152, column: 1, scope: !8583)
!8602 = distinct !DISubprogram(name: "elapsed", scope: !1493, file: !1493, line: 85, type: !5451, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !8603)
!8603 = !{!8604, !8605, !8606}
!8604 = !DILocalVariable(name: "val1", scope: !8602, file: !1493, line: 87, type: !121)
!8605 = !DILocalVariable(name: "ctrl", scope: !8602, file: !1493, line: 88, type: !121)
!8606 = !DILocalVariable(name: "val2", scope: !8602, file: !1493, line: 89, type: !121)
!8607 = !DILocation(line: 87, column: 27, scope: !8602)
!8608 = !DILocation(line: 0, scope: !8602)
!8609 = !DILocation(line: 88, column: 27, scope: !8602)
!8610 = !DILocation(line: 89, column: 27, scope: !8602)
!8611 = !DILocation(line: 105, column: 12, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8602, file: !1493, line: 105, column: 6)
!8613 = !DILocation(line: 106, column: 6, scope: !8612)
!8614 = !DILocation(line: 107, column: 16, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8612, file: !1493, line: 106, column: 24)
!8616 = !DILocation(line: 111, column: 18, scope: !8615)
!8617 = !DILocation(line: 112, column: 2, scope: !8615)
!8618 = !DILocation(line: 114, column: 20, scope: !8602)
!8619 = !DILocation(line: 114, column: 30, scope: !8602)
!8620 = !DILocation(line: 114, column: 28, scope: !8602)
!8621 = !DILocation(line: 114, column: 2, scope: !8602)
!8622 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1493, file: !1493, line: 154, type: !8623, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !8625)
!8623 = !DISubroutineType(types: !8624)
!8624 = !{null, !675, !170}
!8625 = !{!8626, !8627, !8628, !8629, !8630, !8631, !8632, !8637, !8638}
!8626 = !DILocalVariable(name: "ticks", arg: 1, scope: !8622, file: !1493, line: 154, type: !675)
!8627 = !DILocalVariable(name: "idle", arg: 2, scope: !8622, file: !1493, line: 154, type: !170)
!8628 = !DILocalVariable(name: "delay", scope: !8622, file: !1493, line: 169, type: !121)
!8629 = !DILocalVariable(name: "val1", scope: !8622, file: !1493, line: 170, type: !121)
!8630 = !DILocalVariable(name: "val2", scope: !8622, file: !1493, line: 170, type: !121)
!8631 = !DILocalVariable(name: "last_load_", scope: !8622, file: !1493, line: 171, type: !121)
!8632 = !DILocalVariable(name: "key", scope: !8622, file: !1493, line: 176, type: !8633)
!8633 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !8634)
!8634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !8635)
!8635 = !{!8636}
!8636 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !8634, file: !334, line: 33, baseType: !103, size: 32)
!8637 = !DILocalVariable(name: "pending", scope: !8622, file: !1493, line: 178, type: !121)
!8638 = !DILocalVariable(name: "unannounced", scope: !8622, file: !1493, line: 185, type: !121)
!8639 = !DILocation(line: 0, scope: !8622)
!8640 = !DILocation(line: 162, column: 49, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8622, file: !1493, line: 162, column: 6)
!8642 = !DILocation(line: 163, column: 17, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8641, file: !1493, line: 162, column: 78)
!8644 = !DILocation(line: 164, column: 13, scope: !8643)
!8645 = !DILocation(line: 165, column: 3, scope: !8643)
!8646 = !DILocation(line: 171, column: 24, scope: !8622)
!8647 = !DILocation(line: 173, column: 10, scope: !8622)
!8648 = !DILocation(line: 174, column: 10, scope: !8622)
!8649 = !DILocalVariable(name: "l", arg: 1, scope: !8650, file: !334, line: 136, type: !8653)
!8650 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !8651, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !8654)
!8651 = !DISubroutineType(types: !8652)
!8652 = !{!8633, !8653}
!8653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!8654 = !{!8649, !8655}
!8655 = !DILocalVariable(name: "k", scope: !8650, file: !334, line: 139, type: !8633)
!8656 = !DILocation(line: 0, scope: !8650, inlinedAt: !8657)
!8657 = distinct !DILocation(line: 176, column: 25, scope: !8622)
!8658 = !DILocation(line: 55, column: 2, scope: !8659, inlinedAt: !8663)
!8659 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4510, file: !4510, line: 42, type: !4511, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !8660)
!8660 = !{!8661, !8662}
!8661 = !DILocalVariable(name: "key", scope: !8659, file: !4510, line: 44, type: !32)
!8662 = !DILocalVariable(name: "tmp", scope: !8659, file: !4510, line: 53, type: !32)
!8663 = distinct !DILocation(line: 145, column: 10, scope: !8650, inlinedAt: !8657)
!8664 = !{i64 1617391}
!8665 = !DILocation(line: 0, scope: !8659, inlinedAt: !8663)
!8666 = !DILocation(line: 178, column: 21, scope: !8622)
!8667 = !DILocation(line: 180, column: 18, scope: !8622)
!8668 = !DILocation(line: 182, column: 14, scope: !8622)
!8669 = !DILocation(line: 183, column: 15, scope: !8622)
!8670 = !DILocation(line: 185, column: 39, scope: !8622)
!8671 = !DILocation(line: 185, column: 37, scope: !8622)
!8672 = !DILocation(line: 187, column: 27, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8622, file: !1493, line: 187, column: 6)
!8674 = !DILocation(line: 187, column: 6, scope: !8622)
!8675 = !DILocation(line: 202, column: 27, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8673, file: !1493, line: 195, column: 9)
!8677 = !DILocation(line: 202, column: 48, scope: !8676)
!8678 = !DILocation(line: 203, column: 9, scope: !8676)
!8679 = !DILocation(line: 204, column: 11, scope: !8676)
!8680 = !DILocation(line: 205, column: 13, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8676, file: !1493, line: 205, column: 7)
!8682 = !DILocation(line: 205, column: 7, scope: !8676)
!8683 = !DILocation(line: 0, scope: !8673)
!8684 = !DILocation(line: 212, column: 18, scope: !8622)
!8685 = !DILocation(line: 214, column: 28, scope: !8622)
!8686 = !DILocation(line: 214, column: 16, scope: !8622)
!8687 = !DILocation(line: 215, column: 15, scope: !8622)
!8688 = !DILocation(line: 227, column: 11, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8622, file: !1493, line: 227, column: 6)
!8690 = !DILocation(line: 227, column: 6, scope: !8622)
!8691 = !DILocation(line: 228, column: 15, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8689, file: !1493, line: 227, column: 19)
!8693 = !DILocation(line: 228, column: 38, scope: !8692)
!8694 = !DILocation(line: 228, column: 24, scope: !8692)
!8695 = !DILocation(line: 229, column: 2, scope: !8692)
!8696 = !DILocation(line: 230, column: 24, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8689, file: !1493, line: 229, column: 9)
!8698 = !DILocation(line: 230, column: 15, scope: !8697)
!8699 = !DILocation(line: 0, scope: !8689)
!8700 = !DILocalVariable(name: "key", arg: 2, scope: !8701, file: !334, line: 190, type: !8633)
!8701 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !8702, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !8704)
!8702 = !DISubroutineType(types: !8703)
!8703 = !{null, !8653, !8633}
!8704 = !{!8705, !8700}
!8705 = !DILocalVariable(name: "l", arg: 1, scope: !8701, file: !334, line: 189, type: !8653)
!8706 = !DILocation(line: 0, scope: !8701, inlinedAt: !8707)
!8707 = distinct !DILocation(line: 232, column: 2, scope: !8622)
!8708 = !DILocalVariable(name: "key", arg: 1, scope: !8709, file: !4510, line: 84, type: !32)
!8709 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4510, file: !4510, line: 84, type: !4521, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !8710)
!8710 = !{!8708}
!8711 = !DILocation(line: 0, scope: !8709, inlinedAt: !8712)
!8712 = distinct !DILocation(line: 215, column: 2, scope: !8701, inlinedAt: !8707)
!8713 = !DILocation(line: 95, column: 2, scope: !8709, inlinedAt: !8712)
!8714 = !{i64 1618208}
!8715 = !DILocation(line: 234, column: 1, scope: !8622)
!8716 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1493, file: !1493, line: 236, type: !5451, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !8717)
!8717 = !{!8718, !8719}
!8718 = !DILocalVariable(name: "key", scope: !8716, file: !1493, line: 242, type: !8633)
!8719 = !DILocalVariable(name: "cyc", scope: !8716, file: !1493, line: 243, type: !121)
!8720 = !DILocation(line: 0, scope: !8650, inlinedAt: !8721)
!8721 = distinct !DILocation(line: 242, column: 25, scope: !8716)
!8722 = !DILocation(line: 55, column: 2, scope: !8659, inlinedAt: !8723)
!8723 = distinct !DILocation(line: 145, column: 10, scope: !8650, inlinedAt: !8721)
!8724 = !DILocation(line: 0, scope: !8659, inlinedAt: !8723)
!8725 = !DILocation(line: 0, scope: !8716)
!8726 = !DILocation(line: 243, column: 17, scope: !8716)
!8727 = !DILocation(line: 243, column: 29, scope: !8716)
!8728 = !DILocation(line: 243, column: 27, scope: !8716)
!8729 = !DILocation(line: 243, column: 43, scope: !8716)
!8730 = !DILocation(line: 243, column: 41, scope: !8716)
!8731 = !DILocation(line: 0, scope: !8701, inlinedAt: !8732)
!8732 = distinct !DILocation(line: 245, column: 2, scope: !8716)
!8733 = !DILocation(line: 0, scope: !8709, inlinedAt: !8734)
!8734 = distinct !DILocation(line: 215, column: 2, scope: !8701, inlinedAt: !8732)
!8735 = !DILocation(line: 95, column: 2, scope: !8709, inlinedAt: !8734)
!8736 = !DILocation(line: 246, column: 13, scope: !8716)
!8737 = !DILocation(line: 246, column: 2, scope: !8716)
!8738 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1493, file: !1493, line: 249, type: !5451, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !8739)
!8739 = !{!8740, !8741}
!8740 = !DILocalVariable(name: "key", scope: !8738, file: !1493, line: 251, type: !8633)
!8741 = !DILocalVariable(name: "ret", scope: !8738, file: !1493, line: 252, type: !121)
!8742 = !DILocation(line: 0, scope: !8650, inlinedAt: !8743)
!8743 = distinct !DILocation(line: 251, column: 25, scope: !8738)
!8744 = !DILocation(line: 55, column: 2, scope: !8659, inlinedAt: !8745)
!8745 = distinct !DILocation(line: 145, column: 10, scope: !8650, inlinedAt: !8743)
!8746 = !DILocation(line: 0, scope: !8659, inlinedAt: !8745)
!8747 = !DILocation(line: 0, scope: !8738)
!8748 = !DILocation(line: 252, column: 17, scope: !8738)
!8749 = !DILocation(line: 252, column: 29, scope: !8738)
!8750 = !DILocation(line: 252, column: 27, scope: !8738)
!8751 = !DILocation(line: 0, scope: !8701, inlinedAt: !8752)
!8752 = distinct !DILocation(line: 254, column: 2, scope: !8738)
!8753 = !DILocation(line: 0, scope: !8709, inlinedAt: !8754)
!8754 = distinct !DILocation(line: 215, column: 2, scope: !8701, inlinedAt: !8752)
!8755 = !DILocation(line: 95, column: 2, scope: !8709, inlinedAt: !8754)
!8756 = !DILocation(line: 255, column: 2, scope: !8738)
!8757 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1493, file: !1493, line: 258, type: !2730, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !335)
!8758 = !DILocation(line: 260, column: 6, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8757, file: !1493, line: 260, column: 6)
!8760 = !DILocation(line: 260, column: 16, scope: !8759)
!8761 = !DILocation(line: 260, column: 6, scope: !8757)
!8762 = !DILocation(line: 261, column: 17, scope: !8763)
!8763 = distinct !DILexicalBlock(scope: !8759, file: !1493, line: 260, column: 34)
!8764 = !DILocation(line: 262, column: 2, scope: !8763)
!8765 = !DILocation(line: 263, column: 1, scope: !8757)
!8766 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1493, file: !1493, line: 265, type: !2730, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1413, retainedNodes: !335)
!8767 = !DILocation(line: 267, column: 16, scope: !8766)
!8768 = !DILocation(line: 268, column: 1, scope: !8766)
!8769 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !8770, file: !8770, line: 9, type: !8771, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2568, retainedNodes: !8794)
!8770 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8771 = !DISubroutineType(types: !8772)
!8772 = !{!103, !8773, !167, !8793}
!8773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8774, size: 32)
!8774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8775)
!8775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1350, line: 60, size: 64, elements: !8776)
!8776 = !{!8777, !8792}
!8777 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !8775, file: !1350, line: 69, baseType: !8778, size: 32)
!8778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8779, size: 32)
!8779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8780)
!8780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1350, line: 50, size: 64, elements: !8781)
!8781 = !{!8782, !8790, !8791}
!8782 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !8780, file: !1350, line: 52, baseType: !8783, size: 32)
!8783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8784, size: 32)
!8784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8785)
!8785 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1361, line: 37, baseType: !8786)
!8786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1361, line: 32, size: 64, elements: !8787)
!8787 = !{!8788, !8789}
!8788 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !8786, file: !1361, line: 34, baseType: !121, size: 32)
!8789 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !8786, file: !1361, line: 36, baseType: !121, size: 32, offset: 32)
!8790 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !8780, file: !1350, line: 54, baseType: !167, size: 8, offset: 32)
!8791 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8780, file: !1350, line: 56, baseType: !167, size: 8, offset: 40)
!8792 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !8775, file: !1350, line: 71, baseType: !167, size: 8, offset: 32)
!8793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8778, size: 32)
!8794 = !{!8795, !8796, !8797}
!8795 = !DILocalVariable(name: "config", arg: 1, scope: !8769, file: !8770, line: 9, type: !8773)
!8796 = !DILocalVariable(name: "id", arg: 2, scope: !8769, file: !8770, line: 9, type: !167)
!8797 = !DILocalVariable(name: "state", arg: 3, scope: !8769, file: !8770, line: 10, type: !8793)
!8798 = !DILocation(line: 0, scope: !8769)
!8799 = !DILocation(line: 12, column: 20, scope: !8769)
!8800 = !DILocation(line: 13, column: 27, scope: !8769)
!8801 = !DILocation(line: 13, column: 42, scope: !8769)
!8802 = !DILocation(line: 13, column: 19, scope: !8769)
!8803 = !DILocation(line: 13, column: 16, scope: !8769)
!8804 = !DILocation(line: 13, column: 2, scope: !8769)
!8805 = distinct !{!8805, !8804, !8806}
!8806 = !DILocation(line: 19, column: 2, scope: !8769)
!8807 = !DILocation(line: 14, column: 23, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8809, file: !8770, line: 14, column: 7)
!8809 = distinct !DILexicalBlock(scope: !8769, file: !8770, line: 13, column: 54)
!8810 = !DILocation(line: 14, column: 10, scope: !8808)
!8811 = !DILocation(line: 18, column: 11, scope: !8809)
!8812 = !DILocation(line: 14, column: 7, scope: !8809)
!8813 = !DILocation(line: 22, column: 1, scope: !8769)
!8814 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1609, file: !1609, line: 193, type: !8815, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1528, retainedNodes: !8824)
!8815 = !DISubroutineType(types: !8816)
!8816 = !{!103, !8817, !167, !22}
!8817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8818, size: 32)
!8818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8819)
!8819 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1361, line: 37, baseType: !8820)
!8820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1361, line: 32, size: 64, elements: !8821)
!8821 = !{!8822, !8823}
!8822 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !8820, file: !1361, line: 34, baseType: !121, size: 32)
!8823 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !8820, file: !1361, line: 36, baseType: !121, size: 32, offset: 32)
!8824 = !{!8825, !8826, !8827, !8828, !8829, !8830, !8831, !8832, !8834}
!8825 = !DILocalVariable(name: "pins", arg: 1, scope: !8814, file: !1609, line: 193, type: !8817)
!8826 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !8814, file: !1609, line: 193, type: !167)
!8827 = !DILocalVariable(name: "reg", arg: 3, scope: !8814, file: !1609, line: 194, type: !22)
!8828 = !DILocalVariable(name: "pin", scope: !8814, file: !1609, line: 196, type: !121)
!8829 = !DILocalVariable(name: "mux", scope: !8814, file: !1609, line: 196, type: !121)
!8830 = !DILocalVariable(name: "pin_cgf", scope: !8814, file: !1609, line: 197, type: !121)
!8831 = !DILocalVariable(name: "ret", scope: !8814, file: !1609, line: 198, type: !103)
!8832 = !DILocalVariable(name: "i", scope: !8833, file: !1609, line: 209, type: !167)
!8833 = distinct !DILexicalBlock(scope: !8814, file: !1609, line: 209, column: 2)
!8834 = !DILocalVariable(name: "gpio_out", scope: !8835, file: !1609, line: 239, type: !121)
!8835 = distinct !DILexicalBlock(scope: !8836, file: !1609, line: 238, column: 55)
!8836 = distinct !DILexicalBlock(scope: !8837, file: !1609, line: 238, column: 14)
!8837 = distinct !DILexicalBlock(scope: !8838, file: !1609, line: 236, column: 14)
!8838 = distinct !DILexicalBlock(scope: !8839, file: !1609, line: 234, column: 7)
!8839 = distinct !DILexicalBlock(scope: !8840, file: !1609, line: 209, column: 41)
!8840 = distinct !DILexicalBlock(scope: !8833, file: !1609, line: 209, column: 2)
!8841 = !DILocation(line: 0, scope: !8814)
!8842 = !DILocation(line: 0, scope: !8833)
!8843 = !DILocation(line: 209, column: 25, scope: !8840)
!8844 = !DILocation(line: 209, column: 2, scope: !8833)
!8845 = distinct !{!8845, !8844, !8846}
!8846 = !DILocation(line: 259, column: 2, scope: !8833)
!8847 = !DILocation(line: 210, column: 17, scope: !8839)
!8848 = !DILocation(line: 234, column: 7, scope: !8838)
!8849 = !DILocation(line: 234, column: 33, scope: !8838)
!8850 = !DILocation(line: 234, column: 7, scope: !8839)
!8851 = !DILocation(line: 235, column: 22, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8838, file: !1609, line: 234, column: 49)
!8853 = !DILocation(line: 235, column: 29, scope: !8852)
!8854 = !DILocation(line: 236, column: 3, scope: !8852)
!8855 = !DILocation(line: 236, column: 14, scope: !8838)
!8856 = !DILocation(line: 239, column: 32, scope: !8835)
!8857 = !DILocation(line: 0, scope: !8835)
!8858 = !DILocation(line: 241, column: 8, scope: !8835)
!8859 = !DILocation(line: 246, column: 3, scope: !8835)
!8860 = !DILocation(line: 252, column: 9, scope: !8839)
!8861 = !DILocation(line: 255, column: 9, scope: !8839)
!8862 = !DILocation(line: 256, column: 11, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8839, file: !1609, line: 256, column: 7)
!8864 = !DILocation(line: 209, column: 37, scope: !8840)
!8865 = !DILocation(line: 256, column: 7, scope: !8839)
!8866 = !DILocation(line: 262, column: 1, scope: !8814)
!8867 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1609, file: !1609, line: 176, type: !8868, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1528, retainedNodes: !8870)
!8868 = !DISubroutineType(types: !8869)
!8869 = !{!103, !121, !121, !121}
!8870 = !{!8871, !8872, !8873, !8874}
!8871 = !DILocalVariable(name: "pin", arg: 1, scope: !8867, file: !1609, line: 176, type: !121)
!8872 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !8867, file: !1609, line: 176, type: !121)
!8873 = !DILocalVariable(name: "pin_func", arg: 3, scope: !8867, file: !1609, line: 176, type: !121)
!8874 = !DILocalVariable(name: "port_device", scope: !8867, file: !1609, line: 178, type: !1539)
!8875 = !DILocation(line: 0, scope: !8867)
!8876 = !DILocation(line: 180, column: 22, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8867, file: !1609, line: 180, column: 6)
!8878 = !DILocation(line: 180, column: 6, scope: !8867)
!8879 = !DILocation(line: 180, column: 6, scope: !8877)
!8880 = !DILocation(line: 184, column: 16, scope: !8867)
!8881 = !DILocation(line: 186, column: 19, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8867, file: !1609, line: 186, column: 6)
!8883 = !DILocation(line: 186, column: 28, scope: !8882)
!8884 = !DILocation(line: 186, column: 33, scope: !8882)
!8885 = !DILocation(line: 186, column: 6, scope: !8867)
!8886 = !DILocation(line: 190, column: 43, scope: !8867)
!8887 = !DILocation(line: 190, column: 9, scope: !8867)
!8888 = !DILocation(line: 190, column: 2, scope: !8867)
!8889 = !DILocation(line: 191, column: 1, scope: !8867)
!8890 = distinct !DISubprogram(name: "device_is_ready", scope: !6293, file: !6293, line: 47, type: !8891, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1528, retainedNodes: !8893)
!8891 = !DISubroutineType(types: !8892)
!8892 = !{!170, !1539}
!8893 = !{!8894}
!8894 = !DILocalVariable(name: "dev", arg: 1, scope: !8890, file: !6293, line: 47, type: !1539)
!8895 = !DILocation(line: 0, scope: !8890)
!8896 = !DILocation(line: 55, column: 2, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8890, file: !6293, line: 55, column: 2)
!8898 = !{i64 2148851400}
!8899 = !DILocation(line: 56, column: 9, scope: !8890)
!8900 = !DILocation(line: 56, column: 2, scope: !8890)
!8901 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !154, file: !154, line: 730, type: !8891, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1528, retainedNodes: !8902)
!8902 = !{!8903}
!8903 = !DILocalVariable(name: "dev", arg: 1, scope: !8901, file: !154, line: 730, type: !1539)
!8904 = !DILocation(line: 0, scope: !8901)
!8905 = !DILocation(line: 732, column: 9, scope: !8901)
!8906 = !DILocation(line: 732, column: 2, scope: !8901)
!8907 = distinct !DISubprogram(name: "SystemInit", scope: !1639, file: !1639, line: 160, type: !2730, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1615, retainedNodes: !335)
!8908 = !DILocation(line: 170, column: 1, scope: !8907)
!8909 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1639, file: !1639, line: 210, type: !2730, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1615, retainedNodes: !8910)
!8910 = !{!8911, !8912, !8913, !8914, !8915}
!8911 = !DILocalVariable(name: "tmp", scope: !8909, file: !1639, line: 212, type: !121)
!8912 = !DILocalVariable(name: "pllmul", scope: !8909, file: !1639, line: 212, type: !121)
!8913 = !DILocalVariable(name: "plldiv", scope: !8909, file: !1639, line: 212, type: !121)
!8914 = !DILocalVariable(name: "pllsource", scope: !8909, file: !1639, line: 212, type: !121)
!8915 = !DILocalVariable(name: "msirange", scope: !8909, file: !1639, line: 212, type: !121)
!8916 = !DILocation(line: 0, scope: !8909)
!8917 = !DILocation(line: 215, column: 14, scope: !8909)
!8918 = !DILocation(line: 217, column: 3, scope: !8909)
!8919 = !DILocation(line: 220, column: 24, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8909, file: !1639, line: 218, column: 3)
!8921 = !DILocation(line: 220, column: 52, scope: !8920)
!8922 = !DILocation(line: 221, column: 32, scope: !8920)
!8923 = !DILocation(line: 222, column: 7, scope: !8920)
!8924 = !DILocation(line: 228, column: 7, scope: !8920)
!8925 = !DILocation(line: 231, column: 21, scope: !8920)
!8926 = !DILocation(line: 232, column: 21, scope: !8920)
!8927 = !DILocation(line: 233, column: 36, scope: !8920)
!8928 = !DILocation(line: 233, column: 16, scope: !8920)
!8929 = !DILocation(line: 234, column: 24, scope: !8920)
!8930 = !DILocation(line: 234, column: 31, scope: !8920)
!8931 = !DILocation(line: 236, column: 24, scope: !8920)
!8932 = !DILocation(line: 236, column: 29, scope: !8920)
!8933 = !DILocation(line: 238, column: 21, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8920, file: !1639, line: 238, column: 11)
!8935 = !DILocation(line: 238, column: 11, scope: !8920)
!8936 = !DILocation(line: 241, column: 41, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8934, file: !1639, line: 239, column: 7)
!8938 = !DILocation(line: 241, column: 51, scope: !8937)
!8939 = !DILocation(line: 242, column: 7, scope: !8937)
!8940 = !DILocation(line: 246, column: 41, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8934, file: !1639, line: 244, column: 7)
!8942 = !DILocation(line: 246, column: 51, scope: !8941)
!8943 = !DILocation(line: 0, scope: !8920)
!8944 = !DILocation(line: 256, column: 30, scope: !8909)
!8945 = !DILocation(line: 256, column: 52, scope: !8909)
!8946 = !DILocation(line: 256, column: 9, scope: !8909)
!8947 = !DILocation(line: 258, column: 19, scope: !8909)
!8948 = !DILocation(line: 259, column: 1, scope: !8909)
!8949 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !8950, file: !8950, line: 228, type: !8951, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !8954)
!8950 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8951 = !DISubroutineType(types: !8952)
!8952 = !{!8953}
!8953 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2574, line: 45, baseType: !2573)
!8954 = !{!8955, !8956}
!8955 = !DILocalVariable(name: "tickstart", scope: !8949, file: !8950, line: 230, type: !121)
!8956 = !DILocalVariable(name: "status", scope: !8949, file: !8950, line: 231, type: !8953)
!8957 = !DILocation(line: 234, column: 3, scope: !8949)
!8958 = !DILocation(line: 238, column: 3, scope: !8949)
!8959 = !DILocation(line: 241, column: 15, scope: !8949)
!8960 = !DILocation(line: 0, scope: !8949)
!8961 = !DILocation(line: 244, column: 3, scope: !8949)
!8962 = !DILocation(line: 244, column: 10, scope: !8949)
!8963 = !DILocation(line: 244, column: 43, scope: !8949)
!8964 = !DILocation(line: 246, column: 10, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8966, file: !8950, line: 246, column: 9)
!8966 = distinct !DILexicalBlock(scope: !8949, file: !8950, line: 245, column: 3)
!8967 = !DILocation(line: 246, column: 24, scope: !8965)
!8968 = !DILocation(line: 246, column: 37, scope: !8965)
!8969 = !DILocation(line: 246, column: 9, scope: !8966)
!8970 = distinct !{!8970, !8961, !8971}
!8971 = !DILocation(line: 250, column: 3, scope: !8949)
!8972 = !DILocation(line: 253, column: 3, scope: !8949)
!8973 = !DILocation(line: 256, column: 3, scope: !8949)
!8974 = !DILocation(line: 256, column: 10, scope: !8949)
!8975 = !DILocation(line: 256, column: 44, scope: !8949)
!8976 = !DILocation(line: 258, column: 10, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8978, file: !8950, line: 258, column: 9)
!8978 = distinct !DILexicalBlock(scope: !8949, file: !8950, line: 257, column: 3)
!8979 = !DILocation(line: 258, column: 24, scope: !8977)
!8980 = !DILocation(line: 258, column: 37, scope: !8977)
!8981 = !DILocation(line: 258, column: 9, scope: !8978)
!8982 = distinct !{!8982, !8973, !8983}
!8983 = !DILocation(line: 262, column: 3, scope: !8949)
!8984 = !DILocation(line: 265, column: 19, scope: !8949)
!8985 = !DILocation(line: 268, column: 25, scope: !8949)
!8986 = !DILocation(line: 268, column: 12, scope: !8949)
!8987 = !DILocation(line: 269, column: 13, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8949, file: !8950, line: 269, column: 6)
!8989 = !DILocation(line: 269, column: 6, scope: !8949)
!8990 = !DILocation(line: 275, column: 3, scope: !8949)
!8991 = !DILocation(line: 277, column: 3, scope: !8949)
!8992 = !DILocation(line: 280, column: 15, scope: !8949)
!8993 = !DILocation(line: 283, column: 3, scope: !8949)
!8994 = !DILocation(line: 283, column: 10, scope: !8949)
!8995 = !DILocation(line: 283, column: 43, scope: !8949)
!8996 = !DILocation(line: 285, column: 10, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8998, file: !8950, line: 285, column: 9)
!8998 = distinct !DILexicalBlock(scope: !8949, file: !8950, line: 284, column: 3)
!8999 = !DILocation(line: 285, column: 24, scope: !8997)
!9000 = !DILocation(line: 285, column: 37, scope: !8997)
!9001 = !DILocation(line: 285, column: 9, scope: !8998)
!9002 = distinct !{!9002, !8993, !9003}
!9003 = !DILocation(line: 289, column: 3, scope: !8949)
!9004 = !DILocation(line: 292, column: 3, scope: !8949)
!9005 = !DILocation(line: 295, column: 3, scope: !8949)
!9006 = !DILocation(line: 299, column: 3, scope: !8949)
!9007 = !DILocation(line: 305, column: 3, scope: !8949)
!9008 = !DILocation(line: 307, column: 3, scope: !8949)
!9009 = !DILocation(line: 308, column: 1, scope: !8949)
!9010 = !DISubprogram(name: "HAL_GetTick", scope: !9011, file: !9011, line: 945, type: !5451, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !335)
!9011 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9012 = !DISubprogram(name: "HAL_InitTick", scope: !9011, file: !9011, line: 932, type: !9013, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !335)
!9013 = !DISubroutineType(types: !9014)
!9014 = !{!8953, !121}
!9015 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !8950, file: !8950, line: 324, type: !9016, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !9040)
!9016 = !DISubroutineType(types: !9017)
!9017 = !{!8953, !9018}
!9018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9019, size: 32)
!9019 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !9020, line: 283, baseType: !9021)
!9020 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9021 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9020, line: 252, size: 416, elements: !9022)
!9022 = !{!9023, !9024, !9025, !9026, !9027, !9028, !9029, !9030, !9031, !9032}
!9023 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !9021, file: !9020, line: 254, baseType: !121, size: 32)
!9024 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !9021, file: !9020, line: 257, baseType: !121, size: 32, offset: 32)
!9025 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !9021, file: !9020, line: 260, baseType: !121, size: 32, offset: 64)
!9026 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !9021, file: !9020, line: 263, baseType: !121, size: 32, offset: 96)
!9027 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !9021, file: !9020, line: 266, baseType: !121, size: 32, offset: 128)
!9028 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !9021, file: !9020, line: 269, baseType: !121, size: 32, offset: 160)
!9029 = !DIDerivedType(tag: DW_TAG_member, name: "MSIState", scope: !9021, file: !9020, line: 272, baseType: !121, size: 32, offset: 192)
!9030 = !DIDerivedType(tag: DW_TAG_member, name: "MSICalibrationValue", scope: !9021, file: !9020, line: 275, baseType: !121, size: 32, offset: 224)
!9031 = !DIDerivedType(tag: DW_TAG_member, name: "MSIClockRange", scope: !9021, file: !9020, line: 278, baseType: !121, size: 32, offset: 256)
!9032 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !9021, file: !9020, line: 281, baseType: !9033, size: 128, offset: 288)
!9033 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !9020, line: 247, baseType: !9034)
!9034 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9020, line: 234, size: 128, elements: !9035)
!9035 = !{!9036, !9037, !9038, !9039}
!9036 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !9034, file: !9020, line: 236, baseType: !121, size: 32)
!9037 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !9034, file: !9020, line: 239, baseType: !121, size: 32, offset: 32)
!9038 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMUL", scope: !9034, file: !9020, line: 242, baseType: !121, size: 32, offset: 64)
!9039 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDIV", scope: !9034, file: !9020, line: 245, baseType: !121, size: 32, offset: 96)
!9040 = !{!9041, !9042, !9043, !9044, !9045, !9046, !9050}
!9041 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !9015, file: !8950, line: 324, type: !9018)
!9042 = !DILocalVariable(name: "tickstart", scope: !9015, file: !8950, line: 326, type: !121)
!9043 = !DILocalVariable(name: "status", scope: !9015, file: !8950, line: 327, type: !8953)
!9044 = !DILocalVariable(name: "sysclk_source", scope: !9015, file: !8950, line: 328, type: !121)
!9045 = !DILocalVariable(name: "pll_config", scope: !9015, file: !8950, line: 328, type: !121)
!9046 = !DILocalVariable(name: "pwrclkchanged", scope: !9047, file: !8950, line: 613, type: !9049)
!9047 = distinct !DILexicalBlock(scope: !9048, file: !8950, line: 612, column: 3)
!9048 = distinct !DILexicalBlock(scope: !9015, file: !8950, line: 611, column: 6)
!9049 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !730, line: 181, baseType: !2584)
!9050 = !DILocalVariable(name: "tmpreg", scope: !9051, file: !8950, line: 622, type: !120)
!9051 = distinct !DILexicalBlock(scope: !9052, file: !8950, line: 622, column: 7)
!9052 = distinct !DILexicalBlock(scope: !9053, file: !8950, line: 621, column: 5)
!9053 = distinct !DILexicalBlock(scope: !9047, file: !8950, line: 620, column: 8)
!9054 = !DILocation(line: 0, scope: !9015)
!9055 = !DILocation(line: 331, column: 24, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9015, file: !8950, line: 331, column: 6)
!9057 = !DILocation(line: 331, column: 6, scope: !9015)
!9058 = !DILocation(line: 338, column: 19, scope: !9015)
!9059 = !DILocation(line: 339, column: 16, scope: !9015)
!9060 = !DILocation(line: 342, column: 27, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9015, file: !8950, line: 342, column: 6)
!9062 = !DILocation(line: 342, column: 43, scope: !9061)
!9063 = !DILocation(line: 342, column: 69, scope: !9061)
!9064 = !DILocation(line: 342, column: 6, scope: !9015)
!9065 = !DILocation(line: 348, column: 23, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9067, file: !8950, line: 348, column: 8)
!9067 = distinct !DILexicalBlock(scope: !9061, file: !8950, line: 343, column: 3)
!9068 = !DILocation(line: 349, column: 8, scope: !9066)
!9069 = !DILocation(line: 349, column: 27, scope: !9066)
!9070 = !DILocation(line: 349, column: 62, scope: !9066)
!9071 = !DILocation(line: 351, column: 11, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9073, file: !8950, line: 351, column: 10)
!9073 = distinct !DILexicalBlock(scope: !9066, file: !8950, line: 350, column: 5)
!9074 = !DILocation(line: 351, column: 47, scope: !9072)
!9075 = !DILocation(line: 351, column: 54, scope: !9072)
!9076 = !DILocation(line: 351, column: 77, scope: !9072)
!9077 = !DILocation(line: 351, column: 86, scope: !9072)
!9078 = !DILocation(line: 351, column: 10, scope: !9073)
!9079 = !DILocation(line: 359, column: 7, scope: !9080)
!9080 = distinct !DILexicalBlock(scope: !9081, file: !8950, line: 359, column: 7)
!9081 = distinct !DILexicalBlock(scope: !9082, file: !8950, line: 359, column: 7)
!9082 = distinct !DILexicalBlock(scope: !9066, file: !8950, line: 357, column: 5)
!9083 = !DILocation(line: 359, column: 7, scope: !9081)
!9084 = !DILocation(line: 359, column: 7, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9080, file: !8950, line: 359, column: 7)
!9086 = !DILocation(line: 359, column: 7, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9088, file: !8950, line: 359, column: 7)
!9088 = distinct !DILexicalBlock(scope: !9080, file: !8950, line: 359, column: 7)
!9089 = !DILocation(line: 359, column: 7, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9091, file: !8950, line: 359, column: 7)
!9091 = distinct !DILexicalBlock(scope: !9088, file: !8950, line: 359, column: 7)
!9092 = !DILocation(line: 359, column: 7, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9091, file: !8950, line: 359, column: 7)
!9094 = !DILocation(line: 0, scope: !9080)
!9095 = !DILocation(line: 362, column: 29, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9082, file: !8950, line: 362, column: 10)
!9097 = !DILocation(line: 362, column: 38, scope: !9096)
!9098 = !DILocation(line: 0, scope: !9096)
!9099 = !DILocation(line: 362, column: 10, scope: !9082)
!9100 = !DILocation(line: 368, column: 15, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9096, file: !8950, line: 363, column: 7)
!9102 = !DILocation(line: 368, column: 51, scope: !9101)
!9103 = !DILocation(line: 368, column: 9, scope: !9101)
!9104 = !DILocation(line: 370, column: 15, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9106, file: !8950, line: 370, column: 14)
!9106 = distinct !DILexicalBlock(scope: !9101, file: !8950, line: 369, column: 9)
!9107 = !DILocation(line: 370, column: 29, scope: !9105)
!9108 = !DILocation(line: 370, column: 43, scope: !9105)
!9109 = !DILocation(line: 370, column: 14, scope: !9106)
!9110 = distinct !{!9110, !9103, !9111}
!9111 = !DILocation(line: 374, column: 9, scope: !9101)
!9112 = !DILocation(line: 382, column: 15, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9096, file: !8950, line: 377, column: 7)
!9114 = !DILocation(line: 382, column: 51, scope: !9113)
!9115 = !DILocation(line: 382, column: 9, scope: !9113)
!9116 = !DILocation(line: 384, column: 16, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9118, file: !8950, line: 384, column: 15)
!9118 = distinct !DILexicalBlock(scope: !9113, file: !8950, line: 383, column: 9)
!9119 = !DILocation(line: 384, column: 30, scope: !9117)
!9120 = !DILocation(line: 384, column: 44, scope: !9117)
!9121 = !DILocation(line: 384, column: 15, scope: !9118)
!9122 = distinct !{!9122, !9115, !9123}
!9123 = !DILocation(line: 388, column: 9, scope: !9113)
!9124 = !DILocation(line: 393, column: 27, scope: !9125)
!9125 = distinct !DILexicalBlock(scope: !9015, file: !8950, line: 393, column: 6)
!9126 = !DILocation(line: 393, column: 43, scope: !9125)
!9127 = !DILocation(line: 393, column: 69, scope: !9125)
!9128 = !DILocation(line: 393, column: 6, scope: !9015)
!9129 = !DILocation(line: 400, column: 23, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !9131, file: !8950, line: 400, column: 8)
!9131 = distinct !DILexicalBlock(scope: !9125, file: !8950, line: 394, column: 3)
!9132 = !DILocation(line: 401, column: 8, scope: !9130)
!9133 = !DILocation(line: 401, column: 27, scope: !9130)
!9134 = !DILocation(line: 401, column: 62, scope: !9130)
!9135 = !DILocation(line: 404, column: 11, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9137, file: !8950, line: 404, column: 10)
!9137 = distinct !DILexicalBlock(scope: !9130, file: !8950, line: 402, column: 5)
!9138 = !DILocation(line: 404, column: 47, scope: !9136)
!9139 = !DILocation(line: 404, column: 54, scope: !9136)
!9140 = !DILocation(line: 404, column: 77, scope: !9136)
!9141 = !DILocation(line: 404, column: 86, scope: !9136)
!9142 = !DILocation(line: 404, column: 10, scope: !9137)
!9143 = !DILocation(line: 418, column: 29, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9145, file: !8950, line: 418, column: 10)
!9145 = distinct !DILexicalBlock(scope: !9130, file: !8950, line: 416, column: 5)
!9146 = !DILocation(line: 418, column: 38, scope: !9144)
!9147 = !DILocation(line: 418, column: 10, scope: !9145)
!9148 = !DILocation(line: 421, column: 9, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9144, file: !8950, line: 419, column: 7)
!9150 = !DILocation(line: 424, column: 21, scope: !9149)
!9151 = !DILocation(line: 427, column: 9, scope: !9149)
!9152 = !DILocation(line: 427, column: 15, scope: !9149)
!9153 = !DILocation(line: 427, column: 51, scope: !9149)
!9154 = !DILocation(line: 429, column: 15, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9156, file: !8950, line: 429, column: 14)
!9156 = distinct !DILexicalBlock(scope: !9149, file: !8950, line: 428, column: 9)
!9157 = !DILocation(line: 429, column: 29, scope: !9155)
!9158 = !DILocation(line: 429, column: 43, scope: !9155)
!9159 = !DILocation(line: 429, column: 14, scope: !9156)
!9160 = distinct !{!9160, !9151, !9161}
!9161 = !DILocation(line: 433, column: 9, scope: !9149)
!9162 = !DILocation(line: 441, column: 9, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9144, file: !8950, line: 439, column: 7)
!9164 = !DILocation(line: 444, column: 21, scope: !9163)
!9165 = !DILocation(line: 447, column: 9, scope: !9163)
!9166 = !DILocation(line: 447, column: 15, scope: !9163)
!9167 = !DILocation(line: 447, column: 51, scope: !9163)
!9168 = !DILocation(line: 449, column: 15, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9170, file: !8950, line: 449, column: 14)
!9170 = distinct !DILexicalBlock(scope: !9163, file: !8950, line: 448, column: 9)
!9171 = !DILocation(line: 449, column: 29, scope: !9169)
!9172 = !DILocation(line: 449, column: 43, scope: !9169)
!9173 = !DILocation(line: 449, column: 14, scope: !9170)
!9174 = distinct !{!9174, !9165, !9175}
!9175 = !DILocation(line: 453, column: 9, scope: !9163)
!9176 = !DILocation(line: 0, scope: !9130)
!9177 = !DILocation(line: 458, column: 27, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9015, file: !8950, line: 458, column: 6)
!9179 = !DILocation(line: 458, column: 43, scope: !9178)
!9180 = !DILocation(line: 458, column: 69, scope: !9178)
!9181 = !DILocation(line: 458, column: 6, scope: !9015)
!9182 = !DILocation(line: 461, column: 22, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9184, file: !8950, line: 461, column: 8)
!9184 = distinct !DILexicalBlock(scope: !9178, file: !8950, line: 459, column: 3)
!9185 = !DILocation(line: 461, column: 8, scope: !9184)
!9186 = !DILocation(line: 463, column: 11, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9188, file: !8950, line: 463, column: 10)
!9188 = distinct !DILexicalBlock(scope: !9183, file: !8950, line: 462, column: 5)
!9189 = !DILocation(line: 463, column: 47, scope: !9187)
!9190 = !DILocation(line: 463, column: 54, scope: !9187)
!9191 = !DILocation(line: 463, column: 77, scope: !9187)
!9192 = !DILocation(line: 463, column: 86, scope: !9187)
!9193 = !DILocation(line: 463, column: 10, scope: !9188)
!9194 = !DILocation(line: 477, column: 31, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9196, file: !8950, line: 477, column: 12)
!9196 = distinct !DILexicalBlock(scope: !9187, file: !8950, line: 469, column: 7)
!9197 = !DILocation(line: 477, column: 47, scope: !9195)
!9198 = !DILocation(line: 477, column: 45, scope: !9195)
!9199 = !DILocation(line: 477, column: 12, scope: !9196)
!9200 = !DILocation(line: 480, column: 14, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9202, file: !8950, line: 480, column: 14)
!9202 = distinct !DILexicalBlock(scope: !9195, file: !8950, line: 478, column: 9)
!9203 = !DILocation(line: 480, column: 80, scope: !9201)
!9204 = !DILocation(line: 480, column: 14, scope: !9202)
!9205 = !DILocation(line: 486, column: 11, scope: !9202)
!9206 = !DILocation(line: 488, column: 11, scope: !9202)
!9207 = !DILocation(line: 489, column: 9, scope: !9202)
!9208 = !DILocation(line: 494, column: 11, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9195, file: !8950, line: 491, column: 9)
!9210 = !DILocation(line: 496, column: 11, scope: !9209)
!9211 = !DILocation(line: 499, column: 65, scope: !9212)
!9212 = distinct !DILexicalBlock(scope: !9209, file: !8950, line: 499, column: 14)
!9213 = !DILocation(line: 499, column: 14, scope: !9212)
!9214 = !DILocation(line: 499, column: 80, scope: !9212)
!9215 = !DILocation(line: 499, column: 14, scope: !9209)
!9216 = !DILocation(line: 506, column: 67, scope: !9196)
!9217 = !DILocation(line: 506, column: 81, scope: !9196)
!9218 = !DILocation(line: 506, column: 36, scope: !9196)
!9219 = !DILocation(line: 507, column: 52, scope: !9196)
!9220 = !DILocation(line: 507, column: 74, scope: !9196)
!9221 = !DILocation(line: 507, column: 31, scope: !9196)
!9222 = !DILocation(line: 507, column: 28, scope: !9196)
!9223 = !DILocation(line: 506, column: 25, scope: !9196)
!9224 = !DILocation(line: 510, column: 31, scope: !9196)
!9225 = !DILocation(line: 510, column: 18, scope: !9196)
!9226 = !DILocation(line: 511, column: 19, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9196, file: !8950, line: 511, column: 12)
!9228 = !DILocation(line: 511, column: 12, scope: !9196)
!9229 = !DILocation(line: 523, column: 29, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9231, file: !8950, line: 523, column: 10)
!9231 = distinct !DILexicalBlock(scope: !9183, file: !8950, line: 518, column: 5)
!9232 = !DILocation(line: 523, column: 38, scope: !9230)
!9233 = !DILocation(line: 523, column: 10, scope: !9231)
!9234 = !DILocation(line: 526, column: 9, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9230, file: !8950, line: 524, column: 7)
!9236 = !DILocation(line: 529, column: 21, scope: !9235)
!9237 = !DILocation(line: 532, column: 9, scope: !9235)
!9238 = !DILocation(line: 532, column: 15, scope: !9235)
!9239 = !DILocation(line: 532, column: 51, scope: !9235)
!9240 = !DILocation(line: 534, column: 15, scope: !9241)
!9241 = distinct !DILexicalBlock(scope: !9242, file: !8950, line: 534, column: 14)
!9242 = distinct !DILexicalBlock(scope: !9235, file: !8950, line: 533, column: 9)
!9243 = !DILocation(line: 534, column: 29, scope: !9241)
!9244 = !DILocation(line: 534, column: 42, scope: !9241)
!9245 = !DILocation(line: 534, column: 14, scope: !9242)
!9246 = distinct !{!9246, !9237, !9247}
!9247 = !DILocation(line: 538, column: 9, scope: !9235)
!9248 = !DILocation(line: 544, column: 9, scope: !9235)
!9249 = !DILocation(line: 546, column: 9, scope: !9235)
!9250 = !DILocation(line: 548, column: 7, scope: !9235)
!9251 = !DILocation(line: 552, column: 9, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9230, file: !8950, line: 550, column: 7)
!9253 = !DILocation(line: 555, column: 21, scope: !9252)
!9254 = !DILocation(line: 558, column: 9, scope: !9252)
!9255 = !DILocation(line: 558, column: 15, scope: !9252)
!9256 = !DILocation(line: 558, column: 51, scope: !9252)
!9257 = !DILocation(line: 560, column: 15, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9259, file: !8950, line: 560, column: 14)
!9259 = distinct !DILexicalBlock(scope: !9252, file: !8950, line: 559, column: 9)
!9260 = !DILocation(line: 560, column: 29, scope: !9258)
!9261 = !DILocation(line: 560, column: 42, scope: !9258)
!9262 = !DILocation(line: 560, column: 14, scope: !9259)
!9263 = distinct !{!9263, !9254, !9264}
!9264 = !DILocation(line: 564, column: 9, scope: !9252)
!9265 = !DILocation(line: 569, column: 27, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9015, file: !8950, line: 569, column: 6)
!9267 = !DILocation(line: 569, column: 43, scope: !9266)
!9268 = !DILocation(line: 569, column: 69, scope: !9266)
!9269 = !DILocation(line: 569, column: 6, scope: !9015)
!9270 = !DILocation(line: 575, column: 27, scope: !9271)
!9271 = distinct !DILexicalBlock(scope: !9272, file: !8950, line: 575, column: 8)
!9272 = distinct !DILexicalBlock(scope: !9266, file: !8950, line: 570, column: 3)
!9273 = !DILocation(line: 575, column: 36, scope: !9271)
!9274 = !DILocation(line: 575, column: 8, scope: !9272)
!9275 = !DILocation(line: 578, column: 7, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9271, file: !8950, line: 576, column: 5)
!9277 = !DILocation(line: 581, column: 19, scope: !9276)
!9278 = !DILocation(line: 584, column: 7, scope: !9276)
!9279 = !DILocation(line: 584, column: 13, scope: !9276)
!9280 = !DILocation(line: 584, column: 49, scope: !9276)
!9281 = !DILocation(line: 586, column: 13, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9283, file: !8950, line: 586, column: 12)
!9283 = distinct !DILexicalBlock(scope: !9276, file: !8950, line: 585, column: 7)
!9284 = !DILocation(line: 586, column: 27, scope: !9282)
!9285 = !DILocation(line: 586, column: 41, scope: !9282)
!9286 = !DILocation(line: 586, column: 12, scope: !9283)
!9287 = distinct !{!9287, !9278, !9288}
!9288 = !DILocation(line: 590, column: 7, scope: !9276)
!9289 = !DILocation(line: 595, column: 7, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9271, file: !8950, line: 593, column: 5)
!9291 = !DILocation(line: 598, column: 19, scope: !9290)
!9292 = !DILocation(line: 601, column: 7, scope: !9290)
!9293 = !DILocation(line: 601, column: 13, scope: !9290)
!9294 = !DILocation(line: 601, column: 49, scope: !9290)
!9295 = !DILocation(line: 603, column: 13, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9297, file: !8950, line: 603, column: 12)
!9297 = distinct !DILexicalBlock(scope: !9290, file: !8950, line: 602, column: 7)
!9298 = !DILocation(line: 603, column: 27, scope: !9296)
!9299 = !DILocation(line: 603, column: 41, scope: !9296)
!9300 = !DILocation(line: 603, column: 12, scope: !9297)
!9301 = distinct !{!9301, !9292, !9302}
!9302 = !DILocation(line: 607, column: 7, scope: !9290)
!9303 = !DILocation(line: 611, column: 27, scope: !9048)
!9304 = !DILocation(line: 611, column: 43, scope: !9048)
!9305 = !DILocation(line: 611, column: 69, scope: !9048)
!9306 = !DILocation(line: 611, column: 6, scope: !9015)
!9307 = !DILocation(line: 0, scope: !9047)
!9308 = !DILocation(line: 620, column: 8, scope: !9053)
!9309 = !DILocation(line: 620, column: 8, scope: !9047)
!9310 = !DILocation(line: 622, column: 7, scope: !9051)
!9311 = !DILocation(line: 622, column: 7, scope: !9052)
!9312 = !DILocation(line: 624, column: 5, scope: !9052)
!9313 = !DILocation(line: 626, column: 8, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9047, file: !8950, line: 626, column: 8)
!9315 = !DILocation(line: 626, column: 8, scope: !9047)
!9316 = !DILocation(line: 629, column: 7, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9314, file: !8950, line: 627, column: 5)
!9318 = !DILocation(line: 632, column: 19, scope: !9317)
!9319 = !DILocation(line: 634, column: 7, scope: !9317)
!9320 = !DILocation(line: 634, column: 13, scope: !9317)
!9321 = !DILocation(line: 636, column: 13, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !9323, file: !8950, line: 636, column: 12)
!9323 = distinct !DILexicalBlock(scope: !9317, file: !8950, line: 635, column: 7)
!9324 = !DILocation(line: 636, column: 27, scope: !9322)
!9325 = !DILocation(line: 636, column: 40, scope: !9322)
!9326 = !DILocation(line: 636, column: 12, scope: !9323)
!9327 = distinct !{!9327, !9319, !9328}
!9328 = !DILocation(line: 640, column: 7, scope: !9317)
!9329 = !DILocation(line: 644, column: 5, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9331, file: !8950, line: 644, column: 5)
!9331 = distinct !DILexicalBlock(scope: !9047, file: !8950, line: 644, column: 5)
!9332 = !DILocation(line: 644, column: 5, scope: !9331)
!9333 = !DILocation(line: 644, column: 5, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9330, file: !8950, line: 644, column: 5)
!9335 = !DILocation(line: 644, column: 5, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9337, file: !8950, line: 644, column: 5)
!9337 = distinct !DILexicalBlock(scope: !9330, file: !8950, line: 644, column: 5)
!9338 = !DILocation(line: 644, column: 5, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9340, file: !8950, line: 644, column: 5)
!9340 = distinct !DILexicalBlock(scope: !9337, file: !8950, line: 644, column: 5)
!9341 = !DILocation(line: 644, column: 5, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9340, file: !8950, line: 644, column: 5)
!9343 = !DILocation(line: 0, scope: !9330)
!9344 = !DILocation(line: 646, column: 27, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9047, file: !8950, line: 646, column: 8)
!9346 = !DILocation(line: 646, column: 36, scope: !9345)
!9347 = !DILocation(line: 0, scope: !9345)
!9348 = !DILocation(line: 646, column: 8, scope: !9047)
!9349 = !DILocation(line: 652, column: 13, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9345, file: !8950, line: 647, column: 5)
!9351 = !DILocation(line: 652, column: 49, scope: !9350)
!9352 = !DILocation(line: 652, column: 7, scope: !9350)
!9353 = !DILocation(line: 654, column: 13, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9355, file: !8950, line: 654, column: 12)
!9355 = distinct !DILexicalBlock(scope: !9350, file: !8950, line: 653, column: 7)
!9356 = !DILocation(line: 654, column: 27, scope: !9354)
!9357 = !DILocation(line: 654, column: 41, scope: !9354)
!9358 = !DILocation(line: 654, column: 12, scope: !9355)
!9359 = distinct !{!9359, !9352, !9360}
!9360 = !DILocation(line: 658, column: 7, scope: !9350)
!9361 = !DILocation(line: 666, column: 13, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9345, file: !8950, line: 661, column: 5)
!9363 = !DILocation(line: 666, column: 49, scope: !9362)
!9364 = !DILocation(line: 666, column: 7, scope: !9362)
!9365 = !DILocation(line: 668, column: 13, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9367, file: !8950, line: 668, column: 12)
!9367 = distinct !DILexicalBlock(scope: !9362, file: !8950, line: 667, column: 7)
!9368 = !DILocation(line: 668, column: 27, scope: !9366)
!9369 = !DILocation(line: 668, column: 41, scope: !9366)
!9370 = !DILocation(line: 668, column: 12, scope: !9367)
!9371 = distinct !{!9371, !9364, !9372}
!9372 = !DILocation(line: 672, column: 7, scope: !9362)
!9373 = !DILocation(line: 676, column: 8, scope: !9047)
!9374 = !DILocation(line: 678, column: 7, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9376, file: !8950, line: 677, column: 5)
!9376 = distinct !DILexicalBlock(scope: !9047, file: !8950, line: 676, column: 8)
!9377 = !DILocation(line: 679, column: 5, scope: !9375)
!9378 = !DILocation(line: 685, column: 31, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9015, file: !8950, line: 685, column: 7)
!9380 = !DILocation(line: 685, column: 41, scope: !9379)
!9381 = !DILocation(line: 685, column: 7, scope: !9015)
!9382 = !DILocation(line: 688, column: 22, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9384, file: !8950, line: 688, column: 8)
!9384 = distinct !DILexicalBlock(scope: !9379, file: !8950, line: 686, column: 3)
!9385 = !DILocation(line: 688, column: 8, scope: !9384)
!9386 = !DILocation(line: 690, column: 44, scope: !9387)
!9387 = distinct !DILexicalBlock(scope: !9388, file: !8950, line: 690, column: 10)
!9388 = distinct !DILexicalBlock(scope: !9383, file: !8950, line: 689, column: 5)
!9389 = !DILocation(line: 0, scope: !9387)
!9390 = !DILocation(line: 690, column: 10, scope: !9388)
!9391 = !DILocation(line: 704, column: 15, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9387, file: !8950, line: 691, column: 7)
!9393 = !DILocation(line: 704, column: 51, scope: !9392)
!9394 = !DILocation(line: 704, column: 9, scope: !9392)
!9395 = !DILocation(line: 706, column: 15, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9397, file: !8950, line: 706, column: 14)
!9397 = distinct !DILexicalBlock(scope: !9392, file: !8950, line: 705, column: 9)
!9398 = !DILocation(line: 706, column: 29, scope: !9396)
!9399 = !DILocation(line: 706, column: 43, scope: !9396)
!9400 = !DILocation(line: 706, column: 14, scope: !9397)
!9401 = distinct !{!9401, !9394, !9402}
!9402 = !DILocation(line: 710, column: 9, scope: !9392)
!9403 = !DILocation(line: 713, column: 9, scope: !9392)
!9404 = !DILocation(line: 717, column: 9, scope: !9392)
!9405 = !DILocation(line: 720, column: 21, scope: !9392)
!9406 = !DILocation(line: 723, column: 9, scope: !9392)
!9407 = !DILocation(line: 723, column: 15, scope: !9392)
!9408 = !DILocation(line: 723, column: 51, scope: !9392)
!9409 = !DILocation(line: 725, column: 15, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9411, file: !8950, line: 725, column: 14)
!9411 = distinct !DILexicalBlock(scope: !9392, file: !8950, line: 724, column: 9)
!9412 = !DILocation(line: 725, column: 29, scope: !9410)
!9413 = !DILocation(line: 725, column: 43, scope: !9410)
!9414 = !DILocation(line: 725, column: 14, scope: !9411)
!9415 = distinct !{!9415, !9406, !9416}
!9416 = !DILocation(line: 729, column: 9, scope: !9392)
!9417 = !DILocation(line: 740, column: 15, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9387, file: !8950, line: 732, column: 7)
!9419 = !DILocation(line: 740, column: 51, scope: !9418)
!9420 = !DILocation(line: 740, column: 9, scope: !9418)
!9421 = !DILocation(line: 742, column: 15, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9423, file: !8950, line: 742, column: 14)
!9423 = distinct !DILexicalBlock(scope: !9418, file: !8950, line: 741, column: 9)
!9424 = !DILocation(line: 742, column: 29, scope: !9422)
!9425 = !DILocation(line: 742, column: 43, scope: !9422)
!9426 = !DILocation(line: 742, column: 14, scope: !9423)
!9427 = distinct !{!9427, !9420, !9428}
!9428 = !DILocation(line: 746, column: 9, scope: !9418)
!9429 = !DILocation(line: 752, column: 44, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9431, file: !8950, line: 752, column: 10)
!9431 = distinct !DILexicalBlock(scope: !9383, file: !8950, line: 750, column: 5)
!9432 = !DILocation(line: 752, column: 10, scope: !9431)
!9433 = !DILocation(line: 759, column: 27, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9430, file: !8950, line: 757, column: 7)
!9435 = !DILocation(line: 760, column: 13, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9434, file: !8950, line: 760, column: 12)
!9437 = !DILocation(line: 760, column: 77, scope: !9436)
!9438 = !DILocation(line: 760, column: 51, scope: !9436)
!9439 = !DILocation(line: 760, column: 88, scope: !9436)
!9440 = !DILocation(line: 761, column: 13, scope: !9436)
!9441 = !DILocation(line: 761, column: 77, scope: !9436)
!9442 = !DILocation(line: 761, column: 51, scope: !9436)
!9443 = !DILocation(line: 761, column: 85, scope: !9436)
!9444 = !DILocation(line: 762, column: 13, scope: !9436)
!9445 = !DILocation(line: 762, column: 77, scope: !9436)
!9446 = !DILocation(line: 762, column: 51, scope: !9436)
!9447 = !DILocation(line: 760, column: 12, scope: !9434)
!9448 = !DILocation(line: 770, column: 3, scope: !9015)
!9449 = !DILocation(line: 771, column: 1, scope: !9015)
!9450 = distinct !DISubprogram(name: "RCC_SetFlashLatencyFromMSIRange", scope: !8950, file: !8950, line: 1343, type: !9013, scopeLine: 1344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !9451)
!9451 = !{!9452, !9453, !9454, !9455}
!9452 = !DILocalVariable(name: "MSIrange", arg: 1, scope: !9450, file: !8950, line: 1343, type: !121)
!9453 = !DILocalVariable(name: "vos", scope: !9450, file: !8950, line: 1345, type: !121)
!9454 = !DILocalVariable(name: "latency", scope: !9450, file: !8950, line: 1346, type: !121)
!9455 = !DILocalVariable(name: "tmpreg", scope: !9456, file: !8950, line: 1357, type: !120)
!9456 = distinct !DILexicalBlock(scope: !9457, file: !8950, line: 1357, column: 7)
!9457 = distinct !DILexicalBlock(scope: !9458, file: !8950, line: 1356, column: 5)
!9458 = distinct !DILexicalBlock(scope: !9459, file: !8950, line: 1351, column: 8)
!9459 = distinct !DILexicalBlock(scope: !9460, file: !8950, line: 1350, column: 3)
!9460 = distinct !DILexicalBlock(scope: !9450, file: !8950, line: 1349, column: 7)
!9461 = !DILocation(line: 0, scope: !9450)
!9462 = !DILocation(line: 1349, column: 7, scope: !9460)
!9463 = !DILocation(line: 1349, column: 42, scope: !9460)
!9464 = !DILocation(line: 1349, column: 7, scope: !9450)
!9465 = !DILocation(line: 1351, column: 8, scope: !9458)
!9466 = !DILocation(line: 1351, column: 8, scope: !9459)
!9467 = !DILocation(line: 1353, column: 13, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9458, file: !8950, line: 1352, column: 5)
!9469 = !DILocation(line: 1354, column: 5, scope: !9468)
!9470 = !DILocation(line: 1357, column: 7, scope: !9456)
!9471 = !DILocation(line: 1357, column: 7, scope: !9457)
!9472 = !DILocation(line: 1358, column: 13, scope: !9457)
!9473 = !DILocation(line: 1359, column: 7, scope: !9457)
!9474 = !DILocation(line: 0, scope: !9458)
!9475 = !DILocation(line: 1363, column: 13, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9459, file: !8950, line: 1363, column: 8)
!9477 = !DILocation(line: 1363, column: 46, scope: !9476)
!9478 = !DILocation(line: 1369, column: 3, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9450, file: !8950, line: 1369, column: 3)
!9480 = !DILocation(line: 1369, column: 3, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9482, file: !8950, line: 1369, column: 3)
!9482 = distinct !DILexicalBlock(scope: !9479, file: !8950, line: 1369, column: 3)
!9483 = !DILocation(line: 1373, column: 6, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9450, file: !8950, line: 1373, column: 6)
!9485 = !DILocation(line: 1379, column: 1, scope: !9450)
!9486 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !8950, file: !8950, line: 799, type: !9487, scopeLine: 800, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !9498)
!9487 = !DISubroutineType(types: !9488)
!9488 = !{!8953, !9489, !121}
!9489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9490, size: 32)
!9490 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !9020, line: 304, baseType: !9491)
!9491 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9020, line: 288, size: 160, elements: !9492)
!9492 = !{!9493, !9494, !9495, !9496, !9497}
!9493 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !9491, file: !9020, line: 290, baseType: !121, size: 32)
!9494 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !9491, file: !9020, line: 293, baseType: !121, size: 32, offset: 32)
!9495 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !9491, file: !9020, line: 296, baseType: !121, size: 32, offset: 64)
!9496 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !9491, file: !9020, line: 299, baseType: !121, size: 32, offset: 96)
!9497 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !9491, file: !9020, line: 302, baseType: !121, size: 32, offset: 128)
!9498 = !{!9499, !9500, !9501, !9502}
!9499 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !9486, file: !8950, line: 799, type: !9489)
!9500 = !DILocalVariable(name: "FLatency", arg: 2, scope: !9486, file: !8950, line: 799, type: !121)
!9501 = !DILocalVariable(name: "tickstart", scope: !9486, file: !8950, line: 801, type: !121)
!9502 = !DILocalVariable(name: "status", scope: !9486, file: !8950, line: 802, type: !8953)
!9503 = !DILocation(line: 0, scope: !9486)
!9504 = !DILocation(line: 805, column: 24, scope: !9505)
!9505 = distinct !DILexicalBlock(scope: !9486, file: !8950, line: 805, column: 6)
!9506 = !DILocation(line: 805, column: 6, scope: !9486)
!9507 = !DILocation(line: 817, column: 17, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9486, file: !8950, line: 817, column: 6)
!9509 = !DILocation(line: 817, column: 15, scope: !9508)
!9510 = !DILocation(line: 817, column: 6, scope: !9486)
!9511 = !DILocation(line: 820, column: 5, scope: !9512)
!9512 = distinct !DILexicalBlock(scope: !9513, file: !8950, line: 820, column: 5)
!9513 = distinct !DILexicalBlock(scope: !9514, file: !8950, line: 820, column: 5)
!9514 = distinct !DILexicalBlock(scope: !9508, file: !8950, line: 818, column: 3)
!9515 = !DILocation(line: 820, column: 5, scope: !9513)
!9516 = !DILocation(line: 820, column: 5, scope: !9517)
!9517 = distinct !DILexicalBlock(scope: !9512, file: !8950, line: 820, column: 5)
!9518 = !DILocation(line: 824, column: 8, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9514, file: !8950, line: 824, column: 8)
!9520 = !DILocation(line: 824, column: 34, scope: !9519)
!9521 = !DILocation(line: 824, column: 8, scope: !9514)
!9522 = !DILocation(line: 831, column: 27, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9486, file: !8950, line: 831, column: 6)
!9524 = !DILocation(line: 831, column: 38, scope: !9523)
!9525 = !DILocation(line: 831, column: 60, scope: !9523)
!9526 = !DILocation(line: 831, column: 6, scope: !9486)
!9527 = !DILocation(line: 834, column: 5, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9523, file: !8950, line: 832, column: 3)
!9529 = !DILocation(line: 838, column: 27, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9486, file: !8950, line: 838, column: 6)
!9531 = !DILocation(line: 835, column: 3, scope: !9528)
!9532 = !DILocation(line: 838, column: 38, scope: !9530)
!9533 = !DILocation(line: 838, column: 62, scope: !9530)
!9534 = !DILocation(line: 838, column: 6, scope: !9486)
!9535 = !DILocation(line: 843, column: 27, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9537, file: !8950, line: 843, column: 8)
!9537 = distinct !DILexicalBlock(scope: !9530, file: !8950, line: 839, column: 3)
!9538 = !DILocation(line: 843, column: 8, scope: !9537)
!9539 = !DILocation(line: 846, column: 10, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9541, file: !8950, line: 846, column: 10)
!9541 = distinct !DILexicalBlock(scope: !9536, file: !8950, line: 844, column: 5)
!9542 = !DILocation(line: 846, column: 46, scope: !9540)
!9543 = !DILocation(line: 846, column: 10, scope: !9541)
!9544 = !DILocation(line: 855, column: 10, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9546, file: !8950, line: 855, column: 10)
!9546 = distinct !DILexicalBlock(scope: !9547, file: !8950, line: 853, column: 5)
!9547 = distinct !DILexicalBlock(scope: !9536, file: !8950, line: 852, column: 13)
!9548 = !DILocation(line: 855, column: 46, scope: !9545)
!9549 = !DILocation(line: 855, column: 10, scope: !9546)
!9550 = !DILocation(line: 864, column: 10, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9552, file: !8950, line: 864, column: 10)
!9552 = distinct !DILexicalBlock(scope: !9553, file: !8950, line: 862, column: 5)
!9553 = distinct !DILexicalBlock(scope: !9547, file: !8950, line: 861, column: 13)
!9554 = !DILocation(line: 864, column: 46, scope: !9551)
!9555 = !DILocation(line: 864, column: 10, scope: !9552)
!9556 = !DILocation(line: 873, column: 10, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9558, file: !8950, line: 873, column: 10)
!9558 = distinct !DILexicalBlock(scope: !9553, file: !8950, line: 871, column: 5)
!9559 = !DILocation(line: 873, column: 46, scope: !9557)
!9560 = !DILocation(line: 873, column: 10, scope: !9558)
!9561 = !DILocation(line: 878, column: 5, scope: !9537)
!9562 = !DILocation(line: 881, column: 17, scope: !9537)
!9563 = !DILocation(line: 883, column: 27, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9537, file: !8950, line: 883, column: 8)
!9565 = !DILocation(line: 883, column: 8, scope: !9537)
!9566 = !DILocation(line: 885, column: 14, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9564, file: !8950, line: 884, column: 5)
!9568 = !DILocation(line: 885, column: 44, scope: !9567)
!9569 = !DILocation(line: 885, column: 7, scope: !9567)
!9570 = !DILocation(line: 887, column: 13, scope: !9571)
!9571 = distinct !DILexicalBlock(scope: !9572, file: !8950, line: 887, column: 12)
!9572 = distinct !DILexicalBlock(scope: !9567, file: !8950, line: 886, column: 7)
!9573 = !DILocation(line: 887, column: 27, scope: !9571)
!9574 = !DILocation(line: 887, column: 41, scope: !9571)
!9575 = !DILocation(line: 887, column: 12, scope: !9572)
!9576 = distinct !{!9576, !9569, !9577}
!9577 = !DILocation(line: 891, column: 7, scope: !9567)
!9578 = !DILocation(line: 895, column: 14, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9580, file: !8950, line: 894, column: 5)
!9580 = distinct !DILexicalBlock(scope: !9564, file: !8950, line: 893, column: 13)
!9581 = !DILocation(line: 895, column: 44, scope: !9579)
!9582 = !DILocation(line: 895, column: 7, scope: !9579)
!9583 = !DILocation(line: 897, column: 13, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9585, file: !8950, line: 897, column: 12)
!9585 = distinct !DILexicalBlock(scope: !9579, file: !8950, line: 896, column: 7)
!9586 = !DILocation(line: 897, column: 27, scope: !9584)
!9587 = !DILocation(line: 897, column: 41, scope: !9584)
!9588 = !DILocation(line: 897, column: 12, scope: !9585)
!9589 = distinct !{!9589, !9582, !9590}
!9590 = !DILocation(line: 901, column: 7, scope: !9579)
!9591 = !DILocation(line: 905, column: 14, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9593, file: !8950, line: 904, column: 5)
!9593 = distinct !DILexicalBlock(scope: !9580, file: !8950, line: 903, column: 13)
!9594 = !DILocation(line: 905, column: 44, scope: !9592)
!9595 = !DILocation(line: 905, column: 7, scope: !9592)
!9596 = !DILocation(line: 907, column: 13, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9598, file: !8950, line: 907, column: 12)
!9598 = distinct !DILexicalBlock(scope: !9592, file: !8950, line: 906, column: 7)
!9599 = !DILocation(line: 907, column: 27, scope: !9597)
!9600 = !DILocation(line: 907, column: 41, scope: !9597)
!9601 = !DILocation(line: 907, column: 12, scope: !9598)
!9602 = distinct !{!9602, !9595, !9603}
!9603 = !DILocation(line: 911, column: 7, scope: !9592)
!9604 = !DILocation(line: 915, column: 13, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9593, file: !8950, line: 914, column: 5)
!9606 = !DILocation(line: 915, column: 43, scope: !9605)
!9607 = !DILocation(line: 915, column: 7, scope: !9605)
!9608 = !DILocation(line: 917, column: 13, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9610, file: !8950, line: 917, column: 12)
!9610 = distinct !DILexicalBlock(scope: !9605, file: !8950, line: 916, column: 7)
!9611 = !DILocation(line: 917, column: 27, scope: !9609)
!9612 = !DILocation(line: 917, column: 41, scope: !9609)
!9613 = !DILocation(line: 917, column: 12, scope: !9610)
!9614 = distinct !{!9614, !9607, !9615}
!9615 = !DILocation(line: 921, column: 7, scope: !9605)
!9616 = !DILocation(line: 925, column: 17, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9486, file: !8950, line: 925, column: 6)
!9618 = !DILocation(line: 925, column: 15, scope: !9617)
!9619 = !DILocation(line: 925, column: 6, scope: !9486)
!9620 = !DILocation(line: 928, column: 5, scope: !9621)
!9621 = distinct !DILexicalBlock(scope: !9622, file: !8950, line: 928, column: 5)
!9622 = distinct !DILexicalBlock(scope: !9617, file: !8950, line: 926, column: 3)
!9623 = !DILocation(line: 932, column: 8, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9622, file: !8950, line: 932, column: 8)
!9625 = !DILocation(line: 932, column: 34, scope: !9624)
!9626 = !DILocation(line: 932, column: 8, scope: !9622)
!9627 = !DILocation(line: 939, column: 27, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9486, file: !8950, line: 939, column: 6)
!9629 = !DILocation(line: 939, column: 38, scope: !9628)
!9630 = !DILocation(line: 939, column: 61, scope: !9628)
!9631 = !DILocation(line: 939, column: 6, scope: !9486)
!9632 = !DILocation(line: 942, column: 5, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9628, file: !8950, line: 940, column: 3)
!9634 = !DILocation(line: 946, column: 27, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9486, file: !8950, line: 946, column: 6)
!9636 = !DILocation(line: 943, column: 3, scope: !9633)
!9637 = !DILocation(line: 946, column: 38, scope: !9635)
!9638 = !DILocation(line: 946, column: 61, scope: !9635)
!9639 = !DILocation(line: 946, column: 6, scope: !9486)
!9640 = !DILocation(line: 949, column: 5, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9635, file: !8950, line: 947, column: 3)
!9642 = !DILocation(line: 950, column: 3, scope: !9641)
!9643 = !DILocation(line: 953, column: 21, scope: !9486)
!9644 = !DILocation(line: 953, column: 70, scope: !9486)
!9645 = !DILocation(line: 953, column: 91, scope: !9486)
!9646 = !DILocation(line: 953, column: 50, scope: !9486)
!9647 = !DILocation(line: 953, column: 47, scope: !9486)
!9648 = !DILocation(line: 953, column: 19, scope: !9486)
!9649 = !DILocation(line: 956, column: 25, scope: !9486)
!9650 = !DILocation(line: 956, column: 12, scope: !9486)
!9651 = !DILocation(line: 958, column: 3, scope: !9486)
!9652 = !DILocation(line: 959, column: 1, scope: !9486)
!9653 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !8950, file: !8950, line: 1083, type: !5451, scopeLine: 1084, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !9654)
!9654 = !{!9655, !9656, !9657, !9658, !9659, !9660}
!9655 = !DILocalVariable(name: "tmpreg", scope: !9653, file: !8950, line: 1085, type: !121)
!9656 = !DILocalVariable(name: "pllm", scope: !9653, file: !8950, line: 1085, type: !121)
!9657 = !DILocalVariable(name: "plld", scope: !9653, file: !8950, line: 1085, type: !121)
!9658 = !DILocalVariable(name: "pllvco", scope: !9653, file: !8950, line: 1085, type: !121)
!9659 = !DILocalVariable(name: "msiclkrange", scope: !9653, file: !8950, line: 1085, type: !121)
!9660 = !DILocalVariable(name: "sysclockfreq", scope: !9653, file: !8950, line: 1085, type: !121)
!9661 = !DILocation(line: 1087, column: 17, scope: !9653)
!9662 = !DILocation(line: 0, scope: !9653)
!9663 = !DILocation(line: 1090, column: 3, scope: !9653)
!9664 = !DILocation(line: 1100, column: 7, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9666, file: !8950, line: 1098, column: 5)
!9666 = distinct !DILexicalBlock(scope: !9653, file: !8950, line: 1091, column: 3)
!9667 = !DILocation(line: 1104, column: 63, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9666, file: !8950, line: 1103, column: 5)
!9669 = !DILocation(line: 1104, column: 14, scope: !9668)
!9670 = !DILocation(line: 1105, column: 52, scope: !9668)
!9671 = !DILocation(line: 1105, column: 76, scope: !9668)
!9672 = !DILocation(line: 1106, column: 11, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9668, file: !8950, line: 1106, column: 11)
!9674 = !DILocation(line: 1106, column: 41, scope: !9673)
!9675 = !DILocation(line: 1106, column: 11, scope: !9668)
!9676 = !DILocation(line: 0, scope: !9673)
!9677 = !DILocation(line: 1117, column: 7, scope: !9668)
!9678 = !DILocation(line: 1122, column: 27, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9666, file: !8950, line: 1121, column: 5)
!9680 = !DILocation(line: 1122, column: 56, scope: !9679)
!9681 = !DILocation(line: 1123, column: 30, scope: !9679)
!9682 = !DILocation(line: 1124, column: 7, scope: !9679)
!9683 = !DILocation(line: 0, scope: !9666)
!9684 = !DILocation(line: 1127, column: 3, scope: !9653)
!9685 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !8950, file: !8950, line: 1005, type: !6868, scopeLine: 1006, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !9686)
!9686 = !{!9687, !9688, !9689, !9690, !9700}
!9687 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !9685, file: !8950, line: 1005, type: !121)
!9688 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !9685, file: !8950, line: 1005, type: !121)
!9689 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !9685, file: !8950, line: 1005, type: !121)
!9690 = !DILocalVariable(name: "gpio", scope: !9685, file: !8950, line: 1007, type: !9691)
!9691 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !9692, line: 64, baseType: !9693)
!9692 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9693 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9692, line: 48, size: 160, elements: !9694)
!9694 = !{!9695, !9696, !9697, !9698, !9699}
!9695 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !9693, file: !9692, line: 50, baseType: !121, size: 32)
!9696 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !9693, file: !9692, line: 53, baseType: !121, size: 32, offset: 32)
!9697 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !9693, file: !9692, line: 56, baseType: !121, size: 32, offset: 64)
!9698 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !9693, file: !9692, line: 59, baseType: !121, size: 32, offset: 96)
!9699 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !9693, file: !9692, line: 62, baseType: !121, size: 32, offset: 128)
!9700 = !DILocalVariable(name: "tmpreg", scope: !9701, file: !8950, line: 1022, type: !120)
!9701 = distinct !DILexicalBlock(scope: !9685, file: !8950, line: 1022, column: 3)
!9702 = !DILocation(line: 0, scope: !9685)
!9703 = !DILocation(line: 1007, column: 3, scope: !9685)
!9704 = !DILocation(line: 1007, column: 20, scope: !9685)
!9705 = !DILocation(line: 1015, column: 8, scope: !9685)
!9706 = !DILocation(line: 1015, column: 18, scope: !9685)
!9707 = !DILocation(line: 1016, column: 8, scope: !9685)
!9708 = !DILocation(line: 1016, column: 18, scope: !9685)
!9709 = !DILocation(line: 1017, column: 8, scope: !9685)
!9710 = !DILocation(line: 1017, column: 18, scope: !9685)
!9711 = !DILocation(line: 1018, column: 8, scope: !9685)
!9712 = !DILocation(line: 1018, column: 18, scope: !9685)
!9713 = !DILocation(line: 1019, column: 8, scope: !9685)
!9714 = !DILocation(line: 1019, column: 18, scope: !9685)
!9715 = !DILocation(line: 1022, column: 3, scope: !9701)
!9716 = !DILocation(line: 1022, column: 3, scope: !9685)
!9717 = !DILocation(line: 1024, column: 3, scope: !9685)
!9718 = !DILocation(line: 1027, column: 3, scope: !9685)
!9719 = !DILocation(line: 1028, column: 1, scope: !9685)
!9720 = !DISubprogram(name: "HAL_GPIO_Init", scope: !9692, file: !9692, line: 293, type: !9721, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !335)
!9721 = !DISubroutineType(types: !9722)
!9722 = !{null, !2627, !9723}
!9723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9691, size: 32)
!9724 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !8950, file: !8950, line: 1039, type: !2730, scopeLine: 1040, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !335)
!9725 = !DILocation(line: 1041, column: 38, scope: !9724)
!9726 = !DILocation(line: 1042, column: 1, scope: !9724)
!9727 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !8950, file: !8950, line: 1048, type: !2730, scopeLine: 1049, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !335)
!9728 = !DILocation(line: 1050, column: 38, scope: !9727)
!9729 = !DILocation(line: 1051, column: 1, scope: !9727)
!9730 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !8950, file: !8950, line: 1139, type: !5451, scopeLine: 1140, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !335)
!9731 = !DILocation(line: 1141, column: 10, scope: !9730)
!9732 = !DILocation(line: 1141, column: 3, scope: !9730)
!9733 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !8950, file: !8950, line: 1150, type: !5451, scopeLine: 1151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !335)
!9734 = !DILocation(line: 1153, column: 11, scope: !9733)
!9735 = !DILocation(line: 1153, column: 56, scope: !9733)
!9736 = !DILocation(line: 1153, column: 79, scope: !9733)
!9737 = !DILocation(line: 1153, column: 36, scope: !9733)
!9738 = !DILocation(line: 1153, column: 33, scope: !9733)
!9739 = !DILocation(line: 1153, column: 3, scope: !9733)
!9740 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !8950, file: !8950, line: 1162, type: !5451, scopeLine: 1163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !335)
!9741 = !DILocation(line: 1165, column: 11, scope: !9740)
!9742 = !DILocation(line: 1165, column: 55, scope: !9740)
!9743 = !DILocation(line: 1165, column: 78, scope: !9740)
!9744 = !DILocation(line: 1165, column: 35, scope: !9740)
!9745 = !DILocation(line: 1165, column: 32, scope: !9740)
!9746 = !DILocation(line: 1165, column: 3, scope: !9740)
!9747 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !8950, file: !8950, line: 1175, type: !9748, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !9750)
!9748 = !DISubroutineType(types: !9749)
!9749 = !{null, !9018}
!9750 = !{!9751}
!9751 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !9747, file: !8950, line: 1175, type: !9018)
!9752 = !DILocation(line: 0, scope: !9747)
!9753 = !DILocation(line: 1181, column: 22, scope: !9747)
!9754 = !DILocation(line: 1181, column: 37, scope: !9747)
!9755 = !DILocation(line: 1186, column: 12, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9747, file: !8950, line: 1186, column: 6)
!9757 = !DILocation(line: 1186, column: 15, scope: !9756)
!9758 = !DILocation(line: 1186, column: 31, scope: !9756)
!9759 = !DILocation(line: 1186, column: 6, scope: !9747)
!9760 = !DILocation(line: 1188, column: 24, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9756, file: !8950, line: 1187, column: 3)
!9762 = !DILocation(line: 1188, column: 33, scope: !9761)
!9763 = !DILocation(line: 1189, column: 3, scope: !9761)
!9764 = !DILocation(line: 1190, column: 17, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9756, file: !8950, line: 1190, column: 11)
!9766 = !DILocation(line: 1190, column: 20, scope: !9765)
!9767 = !DILocation(line: 1190, column: 35, scope: !9765)
!9768 = !DILocation(line: 0, scope: !9765)
!9769 = !DILocation(line: 1190, column: 11, scope: !9756)
!9770 = !DILocation(line: 1192, column: 33, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9765, file: !8950, line: 1191, column: 3)
!9772 = !DILocation(line: 1193, column: 3, scope: !9771)
!9773 = !DILocation(line: 1196, column: 33, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9765, file: !8950, line: 1195, column: 3)
!9775 = !DILocation(line: 1200, column: 12, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9747, file: !8950, line: 1200, column: 6)
!9777 = !DILocation(line: 1200, column: 15, scope: !9776)
!9778 = !DILocation(line: 1206, column: 24, scope: !9779)
!9779 = distinct !DILexicalBlock(scope: !9776, file: !8950, line: 1205, column: 3)
!9780 = !DILocation(line: 1206, column: 33, scope: !9779)
!9781 = !DILocation(line: 1209, column: 61, scope: !9747)
!9782 = !DILocation(line: 1209, column: 88, scope: !9747)
!9783 = !DILocation(line: 1209, column: 22, scope: !9747)
!9784 = !DILocation(line: 1209, column: 42, scope: !9747)
!9785 = !DILocation(line: 1212, column: 12, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !9747, file: !8950, line: 1212, column: 6)
!9787 = !DILocation(line: 1212, column: 6, scope: !9747)
!9788 = !DILocation(line: 1218, column: 24, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9786, file: !8950, line: 1217, column: 3)
!9790 = !DILocation(line: 1218, column: 33, scope: !9789)
!9791 = !DILocation(line: 1221, column: 61, scope: !9747)
!9792 = !DILocation(line: 1221, column: 88, scope: !9747)
!9793 = !DILocation(line: 1221, column: 22, scope: !9747)
!9794 = !DILocation(line: 1221, column: 42, scope: !9747)
!9795 = !DILocation(line: 1222, column: 55, scope: !9747)
!9796 = !DILocation(line: 1222, column: 61, scope: !9747)
!9797 = !DILocation(line: 1222, column: 22, scope: !9747)
!9798 = !DILocation(line: 1222, column: 36, scope: !9747)
!9799 = !DILocation(line: 1225, column: 12, scope: !9800)
!9800 = distinct !DILexicalBlock(scope: !9747, file: !8950, line: 1225, column: 6)
!9801 = !DILocation(line: 1225, column: 16, scope: !9800)
!9802 = !DILocation(line: 1225, column: 33, scope: !9800)
!9803 = !DILocation(line: 1225, column: 6, scope: !9747)
!9804 = !DILocation(line: 1227, column: 24, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9800, file: !8950, line: 1226, column: 3)
!9806 = !DILocation(line: 1227, column: 33, scope: !9805)
!9807 = !DILocation(line: 1228, column: 3, scope: !9805)
!9808 = !DILocation(line: 1229, column: 17, scope: !9809)
!9809 = distinct !DILexicalBlock(scope: !9800, file: !8950, line: 1229, column: 11)
!9810 = !DILocation(line: 1229, column: 21, scope: !9809)
!9811 = !DILocation(line: 1229, column: 37, scope: !9809)
!9812 = !DILocation(line: 0, scope: !9809)
!9813 = !DILocation(line: 1229, column: 11, scope: !9800)
!9814 = !DILocation(line: 1231, column: 33, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9809, file: !8950, line: 1230, column: 3)
!9816 = !DILocation(line: 1232, column: 3, scope: !9815)
!9817 = !DILocation(line: 1235, column: 33, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9809, file: !8950, line: 1234, column: 3)
!9819 = !DILocation(line: 1239, column: 12, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9747, file: !8950, line: 1239, column: 6)
!9821 = !DILocation(line: 1239, column: 16, scope: !9820)
!9822 = !DILocation(line: 1245, column: 24, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9820, file: !8950, line: 1244, column: 3)
!9824 = !DILocation(line: 1245, column: 33, scope: !9823)
!9825 = !DILocation(line: 1250, column: 12, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9747, file: !8950, line: 1250, column: 6)
!9827 = !DILocation(line: 1250, column: 15, scope: !9826)
!9828 = !DILocation(line: 1250, column: 30, scope: !9826)
!9829 = !DILocation(line: 1250, column: 6, scope: !9747)
!9830 = !DILocation(line: 1256, column: 28, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9826, file: !8950, line: 1255, column: 3)
!9832 = !DILocation(line: 1256, column: 37, scope: !9831)
!9833 = !DILocation(line: 1258, column: 54, scope: !9747)
!9834 = !DILocation(line: 1258, column: 59, scope: !9747)
!9835 = !DILocation(line: 1258, column: 26, scope: !9747)
!9836 = !DILocation(line: 1258, column: 36, scope: !9747)
!9837 = !DILocation(line: 1259, column: 51, scope: !9747)
!9838 = !DILocation(line: 1259, column: 56, scope: !9747)
!9839 = !DILocation(line: 1259, column: 26, scope: !9747)
!9840 = !DILocation(line: 1259, column: 33, scope: !9747)
!9841 = !DILocation(line: 1260, column: 51, scope: !9747)
!9842 = !DILocation(line: 1260, column: 56, scope: !9747)
!9843 = !DILocation(line: 1260, column: 26, scope: !9747)
!9844 = !DILocation(line: 1260, column: 33, scope: !9747)
!9845 = !DILocation(line: 1261, column: 1, scope: !9747)
!9846 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !8950, file: !8950, line: 1271, type: !9847, scopeLine: 1272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !9849)
!9847 = !DISubroutineType(types: !9848)
!9848 = !{null, !9489, !766}
!9849 = !{!9850, !9851}
!9850 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !9846, file: !8950, line: 1271, type: !9489)
!9851 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !9846, file: !8950, line: 1271, type: !766)
!9852 = !DILocation(line: 0, scope: !9846)
!9853 = !DILocation(line: 1278, column: 22, scope: !9846)
!9854 = !DILocation(line: 1278, column: 32, scope: !9846)
!9855 = !DILocation(line: 1281, column: 53, scope: !9846)
!9856 = !DILocation(line: 1281, column: 58, scope: !9846)
!9857 = !DILocation(line: 1281, column: 22, scope: !9846)
!9858 = !DILocation(line: 1281, column: 35, scope: !9846)
!9859 = !DILocation(line: 1284, column: 54, scope: !9846)
!9860 = !DILocation(line: 1284, column: 59, scope: !9846)
!9861 = !DILocation(line: 1284, column: 22, scope: !9846)
!9862 = !DILocation(line: 1284, column: 36, scope: !9846)
!9863 = !DILocation(line: 1287, column: 55, scope: !9846)
!9864 = !DILocation(line: 1287, column: 60, scope: !9846)
!9865 = !DILocation(line: 1287, column: 22, scope: !9846)
!9866 = !DILocation(line: 1287, column: 37, scope: !9846)
!9867 = !DILocation(line: 1290, column: 56, scope: !9846)
!9868 = !DILocation(line: 1290, column: 79, scope: !9846)
!9869 = !DILocation(line: 1290, column: 22, scope: !9846)
!9870 = !DILocation(line: 1290, column: 37, scope: !9846)
!9871 = !DILocation(line: 1293, column: 16, scope: !9846)
!9872 = !DILocation(line: 1293, column: 14, scope: !9846)
!9873 = !DILocation(line: 1294, column: 1, scope: !9846)
!9874 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !8950, file: !8950, line: 1301, type: !2730, scopeLine: 1302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !335)
!9875 = !DILocation(line: 1304, column: 6, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9874, file: !8950, line: 1304, column: 6)
!9877 = !DILocation(line: 1304, column: 6, scope: !9874)
!9878 = !DILocation(line: 1307, column: 5, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9876, file: !8950, line: 1305, column: 3)
!9880 = !DILocation(line: 1310, column: 5, scope: !9879)
!9881 = !DILocation(line: 1311, column: 3, scope: !9879)
!9882 = !DILocation(line: 1312, column: 1, scope: !9874)
!9883 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !8950, file: !8950, line: 1318, type: !2730, scopeLine: 1319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2570, retainedNodes: !335)
!9884 = !DILocation(line: 1323, column: 1, scope: !9883)
!9885 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !9886, file: !9886, line: 147, type: !4534, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !9887)
!9886 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/src/stm32l1xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9887 = !{!9888}
!9888 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !9885, file: !9886, line: 147, type: !121)
!9889 = !DILocation(line: 0, scope: !9885)
!9890 = !DILocation(line: 150, column: 3, scope: !9885)
!9891 = !DILocation(line: 151, column: 1, scope: !9885)
!9892 = distinct !DISubprogram(name: "LL_InitTick", scope: !9893, file: !9893, line: 222, type: !7394, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !9894)
!9893 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32l1xx/drivers/include/stm32l1xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9894 = !{!9895, !9896}
!9895 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !9892, file: !9893, line: 222, type: !121)
!9896 = !DILocalVariable(name: "Ticks", arg: 2, scope: !9892, file: !9893, line: 222, type: !121)
!9897 = !DILocation(line: 0, scope: !9892)
!9898 = !DILocation(line: 225, column: 46, scope: !9892)
!9899 = !DILocation(line: 225, column: 55, scope: !9892)
!9900 = !DILocation(line: 225, column: 18, scope: !9892)
!9901 = !DILocation(line: 226, column: 18, scope: !9892)
!9902 = !DILocation(line: 227, column: 18, scope: !9892)
!9903 = !DILocation(line: 229, column: 1, scope: !9892)
!9904 = distinct !DISubprogram(name: "LL_mDelay", scope: !9886, file: !9886, line: 163, type: !4534, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !9905)
!9905 = !{!9906, !9907, !9908}
!9906 = !DILocalVariable(name: "Delay", arg: 1, scope: !9904, file: !9886, line: 163, type: !121)
!9907 = !DILocalVariable(name: "tmp", scope: !9904, file: !9886, line: 165, type: !120)
!9908 = !DILocalVariable(name: "tmpDelay", scope: !9904, file: !9886, line: 166, type: !121)
!9909 = !DILocation(line: 0, scope: !9904)
!9910 = !DILocation(line: 165, column: 3, scope: !9904)
!9911 = !DILocation(line: 165, column: 18, scope: !9904)
!9912 = !DILocation(line: 165, column: 33, scope: !9904)
!9913 = !DILocation(line: 169, column: 10, scope: !9904)
!9914 = !DILocation(line: 172, column: 15, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9904, file: !9886, line: 172, column: 6)
!9916 = !DILocation(line: 177, column: 3, scope: !9904)
!9917 = !DILocation(line: 179, column: 18, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9919, file: !9886, line: 179, column: 8)
!9919 = distinct !DILexicalBlock(scope: !9904, file: !9886, line: 178, column: 3)
!9920 = !DILocation(line: 177, column: 19, scope: !9904)
!9921 = !DILocation(line: 184, column: 1, scope: !9904)
!9922 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !9886, file: !9886, line: 227, type: !4534, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !9923)
!9923 = !{!9924}
!9924 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !9922, file: !9886, line: 227, type: !121)
!9925 = !DILocation(line: 0, scope: !9922)
!9926 = !DILocation(line: 230, column: 19, scope: !9922)
!9927 = !DILocation(line: 231, column: 1, scope: !9922)
!9928 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !9886, file: !9886, line: 242, type: !9929, scopeLine: 243, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !9932)
!9929 = !DISubroutineType(types: !9930)
!9930 = !{!9931, !121}
!9931 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !730, line: 194, baseType: !729)
!9932 = !{!9933, !9934, !9935}
!9933 = !DILocalVariable(name: "Frequency", arg: 1, scope: !9928, file: !9886, line: 242, type: !121)
!9934 = !DILocalVariable(name: "status", scope: !9928, file: !9886, line: 244, type: !9931)
!9935 = !DILocalVariable(name: "latency", scope: !9928, file: !9886, line: 246, type: !121)
!9936 = !DILocation(line: 0, scope: !9928)
!9937 = !DILocation(line: 249, column: 25, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9928, file: !9886, line: 249, column: 7)
!9939 = !DILocation(line: 255, column: 9, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9941, file: !9886, line: 255, column: 9)
!9941 = distinct !DILexicalBlock(scope: !9938, file: !9886, line: 254, column: 3)
!9942 = !DILocation(line: 255, column: 41, scope: !9940)
!9943 = !DILocation(line: 255, column: 9, scope: !9941)
!9944 = !DILocation(line: 257, column: 21, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9946, file: !9886, line: 257, column: 11)
!9946 = distinct !DILexicalBlock(scope: !9940, file: !9886, line: 256, column: 5)
!9947 = !DILocation(line: 284, column: 9, scope: !9941)
!9948 = !DILocation(line: 264, column: 14, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9940, file: !9886, line: 264, column: 14)
!9950 = !DILocation(line: 264, column: 46, scope: !9949)
!9951 = !DILocation(line: 264, column: 14, scope: !9940)
!9952 = !DILocation(line: 266, column: 21, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9954, file: !9886, line: 266, column: 11)
!9954 = distinct !DILexicalBlock(scope: !9949, file: !9886, line: 265, column: 5)
!9955 = !DILocation(line: 275, column: 21, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9957, file: !9886, line: 275, column: 11)
!9957 = distinct !DILexicalBlock(scope: !9949, file: !9886, line: 274, column: 5)
!9958 = !DILocation(line: 286, column: 7, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9960, file: !9886, line: 285, column: 5)
!9960 = distinct !DILexicalBlock(scope: !9941, file: !9886, line: 284, column: 9)
!9961 = !DILocation(line: 287, column: 5, scope: !9959)
!9962 = !DILocation(line: 289, column: 5, scope: !9941)
!9963 = !DILocation(line: 293, column: 9, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9941, file: !9886, line: 293, column: 9)
!9965 = !DILocation(line: 293, column: 31, scope: !9964)
!9966 = !DILocation(line: 293, column: 9, scope: !9941)
!9967 = !DILocation(line: 298, column: 3, scope: !9928)
!9968 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !4548, file: !4548, line: 285, type: !5451, scopeLine: 286, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !335)
!9969 = !DILocation(line: 287, column: 21, scope: !9968)
!9970 = !DILocation(line: 287, column: 3, scope: !9968)
!9971 = distinct !DISubprogram(name: "LL_FLASH_Enable64bitAccess", scope: !7393, file: !7393, line: 1897, type: !2730, scopeLine: 1898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !335)
!9972 = !DILocation(line: 1899, column: 3, scope: !9971)
!9973 = !DILocation(line: 1900, column: 1, scope: !9971)
!9974 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !7393, file: !7393, line: 1843, type: !4534, scopeLine: 1844, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !9975)
!9975 = !{!9976}
!9976 = !DILocalVariable(name: "Latency", arg: 1, scope: !9974, file: !7393, line: 1843, type: !121)
!9977 = !DILocation(line: 0, scope: !9974)
!9978 = !DILocation(line: 1845, column: 3, scope: !9974)
!9979 = !DILocation(line: 1846, column: 1, scope: !9974)
!9980 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !7393, file: !7393, line: 1855, type: !5451, scopeLine: 1856, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !335)
!9981 = !DILocation(line: 1857, column: 21, scope: !9980)
!9982 = !DILocation(line: 1857, column: 3, scope: !9980)
!9983 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !9886, file: !9886, line: 323, type: !9984, scopeLine: 325, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !9999)
!9984 = !DISubroutineType(types: !9985)
!9985 = !{!9931, !9986, !9992}
!9986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9987, size: 32)
!9987 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !9893, line: 103, baseType: !9988)
!9988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9893, line: 90, size: 64, elements: !9989)
!9989 = !{!9990, !9991}
!9990 = !DIDerivedType(tag: DW_TAG_member, name: "PLLMul", scope: !9988, file: !9893, line: 92, baseType: !121, size: 32)
!9991 = !DIDerivedType(tag: DW_TAG_member, name: "PLLDiv", scope: !9988, file: !9893, line: 98, baseType: !121, size: 32, offset: 32)
!9992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9993, size: 32)
!9993 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !9893, line: 128, baseType: !9994)
!9994 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9893, line: 108, size: 96, elements: !9995)
!9995 = !{!9996, !9997, !9998}
!9996 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !9994, file: !9893, line: 110, baseType: !121, size: 32)
!9997 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !9994, file: !9893, line: 116, baseType: !121, size: 32, offset: 32)
!9998 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !9994, file: !9893, line: 122, baseType: !121, size: 32, offset: 64)
!9999 = !{!10000, !10001, !10002, !10003}
!10000 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !9983, file: !9886, line: 323, type: !9986)
!10001 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !9983, file: !9886, line: 324, type: !9992)
!10002 = !DILocalVariable(name: "status", scope: !9983, file: !9886, line: 326, type: !9931)
!10003 = !DILocalVariable(name: "pllfreq", scope: !9983, file: !9886, line: 327, type: !121)
!10004 = !DILocation(line: 0, scope: !9983)
!10005 = !DILocation(line: 330, column: 7, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !9983, file: !9886, line: 330, column: 7)
!10007 = !DILocation(line: 330, column: 26, scope: !10006)
!10008 = !DILocation(line: 330, column: 7, scope: !9983)
!10009 = !DILocation(line: 333, column: 15, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10006, file: !9886, line: 331, column: 3)
!10011 = !DILocation(line: 336, column: 9, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !10010, file: !9886, line: 336, column: 9)
!10013 = !DILocation(line: 336, column: 30, scope: !10012)
!10014 = !DILocation(line: 336, column: 9, scope: !10010)
!10015 = !DILocation(line: 338, column: 7, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !10012, file: !9886, line: 337, column: 5)
!10017 = !DILocation(line: 339, column: 7, scope: !10016)
!10018 = !DILocation(line: 339, column: 14, scope: !10016)
!10019 = !DILocation(line: 339, column: 35, scope: !10016)
!10020 = distinct !{!10020, !10017, !10021}
!10021 = !DILocation(line: 342, column: 7, scope: !10016)
!10022 = !DILocation(line: 346, column: 76, scope: !10010)
!10023 = !DILocation(line: 346, column: 105, scope: !10010)
!10024 = !DILocation(line: 346, column: 5, scope: !10010)
!10025 = !DILocation(line: 349, column: 14, scope: !10010)
!10026 = !DILocation(line: 350, column: 3, scope: !10010)
!10027 = !DILocation(line: 0, scope: !10006)
!10028 = !DILocation(line: 357, column: 3, scope: !9983)
!10029 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !9886, file: !9886, line: 487, type: !10030, scopeLine: 488, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !10032)
!10030 = !DISubroutineType(types: !10031)
!10031 = !{!9931}
!10032 = !{!10033}
!10033 = !DILocalVariable(name: "status", scope: !10029, file: !9886, line: 489, type: !9931)
!10034 = !DILocation(line: 0, scope: !10029)
!10035 = !DILocation(line: 492, column: 7, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10029, file: !9886, line: 492, column: 7)
!10037 = !DILocation(line: 492, column: 28, scope: !10036)
!10038 = !DILocation(line: 492, column: 7, scope: !10029)
!10039 = !DILocation(line: 498, column: 3, scope: !10029)
!10040 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !9886, file: !9886, line: 457, type: !10041, scopeLine: 458, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !10043)
!10041 = !DISubroutineType(types: !10042)
!10042 = !{!121, !121, !9986}
!10043 = !{!10044, !10045, !10046}
!10044 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !10040, file: !9886, line: 457, type: !121)
!10045 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !10040, file: !9886, line: 457, type: !9986)
!10046 = !DILocalVariable(name: "pllfreq", scope: !10040, file: !9886, line: 459, type: !121)
!10047 = !DILocation(line: 0, scope: !10040)
!10048 = !DILocation(line: 470, column: 68, scope: !10040)
!10049 = !DILocation(line: 470, column: 75, scope: !10040)
!10050 = !DILocation(line: 470, column: 35, scope: !10040)
!10051 = !DILocation(line: 470, column: 34, scope: !10040)
!10052 = !DILocation(line: 470, column: 32, scope: !10040)
!10053 = !DILocation(line: 475, column: 46, scope: !10040)
!10054 = !DILocation(line: 475, column: 53, scope: !10040)
!10055 = !DILocation(line: 475, column: 76, scope: !10040)
!10056 = !DILocation(line: 475, column: 21, scope: !10040)
!10057 = !DILocation(line: 478, column: 3, scope: !10040)
!10058 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !6745, file: !6745, line: 612, type: !5451, scopeLine: 613, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !335)
!10059 = !DILocation(line: 614, column: 12, scope: !10058)
!10060 = !DILocation(line: 614, column: 11, scope: !10058)
!10061 = !DILocation(line: 614, column: 3, scope: !10058)
!10062 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !6745, file: !6745, line: 592, type: !2730, scopeLine: 593, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !335)
!10063 = !DILocation(line: 594, column: 3, scope: !10062)
!10064 = !DILocation(line: 595, column: 1, scope: !10062)
!10065 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !6745, file: !6745, line: 1219, type: !6868, scopeLine: 1220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !10066)
!10066 = !{!10067, !10068, !10069}
!10067 = !DILocalVariable(name: "Source", arg: 1, scope: !10065, file: !6745, line: 1219, type: !121)
!10068 = !DILocalVariable(name: "PLLMul", arg: 2, scope: !10065, file: !6745, line: 1219, type: !121)
!10069 = !DILocalVariable(name: "PLLDiv", arg: 3, scope: !10065, file: !6745, line: 1219, type: !121)
!10070 = !DILocation(line: 0, scope: !10065)
!10071 = !DILocation(line: 1221, column: 3, scope: !10065)
!10072 = !DILocation(line: 1222, column: 1, scope: !10065)
!10073 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !9886, file: !9886, line: 510, type: !10074, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !10076)
!10074 = !DISubroutineType(types: !10075)
!10075 = !{!9931, !121, !9992}
!10076 = !{!10077, !10078, !10079, !10080}
!10077 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !10073, file: !9886, line: 510, type: !121)
!10078 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !10073, file: !9886, line: 510, type: !9992)
!10079 = !DILocalVariable(name: "status", scope: !10073, file: !9886, line: 512, type: !9931)
!10080 = !DILocalVariable(name: "hclk_frequency", scope: !10073, file: !9886, line: 513, type: !121)
!10081 = !DILocation(line: 0, scope: !10073)
!10082 = !DILocation(line: 520, column: 20, scope: !10073)
!10083 = !DILocation(line: 523, column: 7, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !10073, file: !9886, line: 523, column: 7)
!10085 = !DILocation(line: 523, column: 23, scope: !10084)
!10086 = !DILocation(line: 523, column: 7, scope: !10073)
!10087 = !DILocation(line: 526, column: 14, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10084, file: !9886, line: 524, column: 3)
!10089 = !DILocation(line: 530, column: 14, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10073, file: !9886, line: 530, column: 7)
!10091 = !DILocation(line: 530, column: 7, scope: !10073)
!10092 = !DILocation(line: 533, column: 5, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10090, file: !9886, line: 531, column: 3)
!10094 = !DILocation(line: 534, column: 5, scope: !10093)
!10095 = !DILocation(line: 534, column: 12, scope: !10093)
!10096 = !DILocation(line: 534, column: 33, scope: !10093)
!10097 = distinct !{!10097, !10094, !10098}
!10098 = !DILocation(line: 537, column: 5, scope: !10093)
!10099 = !DILocation(line: 540, column: 49, scope: !10093)
!10100 = !DILocation(line: 540, column: 5, scope: !10093)
!10101 = !DILocation(line: 541, column: 5, scope: !10093)
!10102 = !DILocation(line: 542, column: 5, scope: !10093)
!10103 = !DILocation(line: 542, column: 12, scope: !10093)
!10104 = !DILocation(line: 542, column: 37, scope: !10093)
!10105 = distinct !{!10105, !10102, !10106}
!10106 = !DILocation(line: 545, column: 5, scope: !10093)
!10107 = !DILocation(line: 548, column: 50, scope: !10093)
!10108 = !DILocation(line: 548, column: 5, scope: !10093)
!10109 = !DILocation(line: 549, column: 50, scope: !10093)
!10110 = !DILocation(line: 549, column: 5, scope: !10093)
!10111 = !DILocation(line: 550, column: 3, scope: !10093)
!10112 = !DILocation(line: 553, column: 7, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10073, file: !9886, line: 553, column: 7)
!10114 = !DILocation(line: 553, column: 23, scope: !10113)
!10115 = !DILocation(line: 553, column: 7, scope: !10073)
!10116 = !DILocation(line: 556, column: 14, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10113, file: !9886, line: 554, column: 3)
!10118 = !DILocation(line: 557, column: 3, scope: !10117)
!10119 = !DILocation(line: 560, column: 14, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10073, file: !9886, line: 560, column: 7)
!10121 = !DILocation(line: 560, column: 7, scope: !10073)
!10122 = !DILocation(line: 562, column: 5, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10120, file: !9886, line: 561, column: 3)
!10124 = !DILocation(line: 563, column: 3, scope: !10123)
!10125 = !DILocation(line: 565, column: 3, scope: !10073)
!10126 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !6745, file: !6745, line: 1169, type: !2730, scopeLine: 1170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !335)
!10127 = !DILocation(line: 1171, column: 3, scope: !10126)
!10128 = !DILocation(line: 1172, column: 1, scope: !10126)
!10129 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !6745, file: !6745, line: 1190, type: !5451, scopeLine: 1191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !335)
!10130 = !DILocation(line: 1192, column: 12, scope: !10129)
!10131 = !DILocation(line: 1192, column: 11, scope: !10129)
!10132 = !DILocation(line: 1192, column: 3, scope: !10129)
!10133 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !6745, file: !6745, line: 944, type: !4534, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !10134)
!10134 = !{!10135}
!10135 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10133, file: !6745, line: 944, type: !121)
!10136 = !DILocation(line: 0, scope: !10133)
!10137 = !DILocation(line: 946, column: 3, scope: !10133)
!10138 = !DILocation(line: 947, column: 1, scope: !10133)
!10139 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !6745, file: !6745, line: 910, type: !4534, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !10140)
!10140 = !{!10141}
!10141 = !DILocalVariable(name: "Source", arg: 1, scope: !10139, file: !6745, line: 910, type: !121)
!10142 = !DILocation(line: 0, scope: !10139)
!10143 = !DILocation(line: 912, column: 3, scope: !10139)
!10144 = !DILocation(line: 913, column: 1, scope: !10139)
!10145 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !6745, file: !6745, line: 924, type: !5451, scopeLine: 925, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !335)
!10146 = !DILocation(line: 926, column: 21, scope: !10145)
!10147 = !DILocation(line: 926, column: 3, scope: !10145)
!10148 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !6745, file: !6745, line: 960, type: !4534, scopeLine: 961, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !10149)
!10149 = !{!10150}
!10150 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10148, file: !6745, line: 960, type: !121)
!10151 = !DILocation(line: 0, scope: !10148)
!10152 = !DILocation(line: 962, column: 3, scope: !10148)
!10153 = !DILocation(line: 963, column: 1, scope: !10148)
!10154 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !6745, file: !6745, line: 976, type: !4534, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !10155)
!10155 = !{!10156}
!10156 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10154, file: !6745, line: 976, type: !121)
!10157 = !DILocation(line: 0, scope: !10154)
!10158 = !DILocation(line: 978, column: 3, scope: !10154)
!10159 = !DILocation(line: 979, column: 1, scope: !10154)
!10160 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !9886, file: !9886, line: 385, type: !10161, scopeLine: 387, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !10163)
!10161 = !DISubroutineType(types: !10162)
!10162 = !{!9931, !121, !121, !9986, !9992}
!10163 = !{!10164, !10165, !10166, !10167, !10168, !10169}
!10164 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !10160, file: !9886, line: 385, type: !121)
!10165 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !10160, file: !9886, line: 385, type: !121)
!10166 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !10160, file: !9886, line: 386, type: !9986)
!10167 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !10160, file: !9886, line: 386, type: !9992)
!10168 = !DILocalVariable(name: "status", scope: !10160, file: !9886, line: 388, type: !9931)
!10169 = !DILocalVariable(name: "pllfreq", scope: !10160, file: !9886, line: 389, type: !121)
!10170 = !DILocation(line: 0, scope: !10160)
!10171 = !DILocation(line: 396, column: 7, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10160, file: !9886, line: 396, column: 7)
!10173 = !DILocation(line: 396, column: 26, scope: !10172)
!10174 = !DILocation(line: 396, column: 7, scope: !10160)
!10175 = !DILocation(line: 400, column: 15, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10172, file: !9886, line: 397, column: 3)
!10177 = !DILocation(line: 403, column: 9, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !10176, file: !9886, line: 403, column: 9)
!10179 = !DILocation(line: 403, column: 30, scope: !10178)
!10180 = !DILocation(line: 403, column: 9, scope: !10176)
!10181 = !DILocation(line: 406, column: 21, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10183, file: !9886, line: 406, column: 11)
!10183 = distinct !DILexicalBlock(scope: !10178, file: !9886, line: 404, column: 5)
!10184 = !DILocation(line: 406, column: 11, scope: !10183)
!10185 = !DILocation(line: 408, column: 9, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10182, file: !9886, line: 407, column: 7)
!10187 = !DILocation(line: 409, column: 7, scope: !10186)
!10188 = !DILocation(line: 412, column: 9, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10182, file: !9886, line: 411, column: 7)
!10190 = !DILocation(line: 416, column: 7, scope: !10183)
!10191 = !DILocation(line: 417, column: 7, scope: !10183)
!10192 = !DILocation(line: 417, column: 14, scope: !10183)
!10193 = !DILocation(line: 417, column: 35, scope: !10183)
!10194 = distinct !{!10194, !10191, !10195}
!10195 = !DILocation(line: 420, column: 7, scope: !10183)
!10196 = !DILocation(line: 424, column: 78, scope: !10176)
!10197 = !DILocation(line: 424, column: 107, scope: !10176)
!10198 = !DILocation(line: 424, column: 7, scope: !10176)
!10199 = !DILocation(line: 427, column: 14, scope: !10176)
!10200 = !DILocation(line: 428, column: 3, scope: !10176)
!10201 = !DILocation(line: 0, scope: !10172)
!10202 = !DILocation(line: 435, column: 3, scope: !10160)
!10203 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !6745, file: !6745, line: 545, type: !5451, scopeLine: 546, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !335)
!10204 = !DILocation(line: 547, column: 12, scope: !10203)
!10205 = !DILocation(line: 547, column: 11, scope: !10203)
!10206 = !DILocation(line: 547, column: 3, scope: !10203)
!10207 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !6745, file: !6745, line: 505, type: !2730, scopeLine: 506, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !335)
!10208 = !DILocation(line: 507, column: 3, scope: !10207)
!10209 = !DILocation(line: 508, column: 1, scope: !10207)
!10210 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !6745, file: !6745, line: 515, type: !2730, scopeLine: 516, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !335)
!10211 = !DILocation(line: 517, column: 3, scope: !10210)
!10212 = !DILocation(line: 518, column: 1, scope: !10210)
!10213 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !6745, file: !6745, line: 525, type: !2730, scopeLine: 526, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2641, retainedNodes: !335)
!10214 = !DILocation(line: 527, column: 3, scope: !10213)
!10215 = !DILocation(line: 528, column: 1, scope: !10213)
!10216 = distinct !DISubprogram(name: "z_device_state_init", scope: !10217, file: !10217, line: 23, type: !2730, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !10218)
!10217 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10218 = !{!10219}
!10219 = !DILocalVariable(name: "dev", scope: !10216, file: !10217, line: 25, type: !10220)
!10220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10221, size: 32)
!10221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10222)
!10222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !154, line: 378, size: 192, elements: !10223)
!10223 = !{!10224, !10225, !10226, !10227, !10233, !10234}
!10224 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10222, file: !154, line: 380, baseType: !157, size: 32)
!10225 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !10222, file: !154, line: 382, baseType: !13, size: 32, offset: 32)
!10226 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !10222, file: !154, line: 384, baseType: !13, size: 32, offset: 64)
!10227 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10222, file: !154, line: 386, baseType: !10228, size: 32, offset: 96)
!10228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10229, size: 32)
!10229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !154, line: 351, size: 16, elements: !10230)
!10230 = !{!10231, !10232}
!10231 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !10229, file: !154, line: 359, baseType: !167, size: 8)
!10232 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !10229, file: !154, line: 364, baseType: !170, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!10233 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10222, file: !154, line: 388, baseType: !102, size: 32, offset: 128)
!10234 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !10222, file: !154, line: 396, baseType: !173, size: 32, offset: 160)
!10235 = !DILocation(line: 0, scope: !10216)
!10236 = !DILocation(line: 31, column: 1, scope: !10216)
!10237 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !10217, file: !10217, line: 33, type: !10238, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !10240)
!10238 = !DISubroutineType(types: !10239)
!10239 = !{!10220, !157}
!10240 = !{!10241, !10242}
!10241 = !DILocalVariable(name: "name", arg: 1, scope: !10237, file: !10217, line: 33, type: !157)
!10242 = !DILocalVariable(name: "dev", scope: !10237, file: !10217, line: 35, type: !10220)
!10243 = !DILocation(line: 0, scope: !10237)
!10244 = !DILocation(line: 40, column: 12, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10237, file: !10217, line: 40, column: 6)
!10246 = !DILocation(line: 40, column: 21, scope: !10245)
!10247 = !DILocation(line: 40, column: 25, scope: !10245)
!10248 = !DILocation(line: 40, column: 33, scope: !10245)
!10249 = !DILocation(line: 40, column: 6, scope: !10237)
!10250 = !DILocation(line: 55, column: 2, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10237, file: !10217, line: 55, column: 2)
!10252 = !DILocation(line: 50, column: 7, scope: !10253)
!10253 = distinct !DILexicalBlock(scope: !10254, file: !10217, line: 50, column: 7)
!10254 = distinct !DILexicalBlock(scope: !10255, file: !10217, line: 49, column: 57)
!10255 = distinct !DILexicalBlock(scope: !10256, file: !10217, line: 49, column: 2)
!10256 = distinct !DILexicalBlock(scope: !10237, file: !10217, line: 49, column: 2)
!10257 = !DILocation(line: 50, column: 30, scope: !10253)
!10258 = !DILocation(line: 50, column: 39, scope: !10253)
!10259 = !DILocation(line: 50, column: 44, scope: !10253)
!10260 = !DILocation(line: 50, column: 7, scope: !10254)
!10261 = !DILocation(line: 49, column: 53, scope: !10255)
!10262 = !DILocation(line: 49, column: 33, scope: !10255)
!10263 = !DILocation(line: 49, column: 2, scope: !10256)
!10264 = distinct !{!10264, !10263, !10265}
!10265 = !DILocation(line: 53, column: 2, scope: !10256)
!10266 = !DILocation(line: 56, column: 7, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10268, file: !10217, line: 56, column: 7)
!10268 = distinct !DILexicalBlock(scope: !10269, file: !10217, line: 55, column: 57)
!10269 = distinct !DILexicalBlock(scope: !10251, file: !10217, line: 55, column: 2)
!10270 = !DILocation(line: 56, column: 30, scope: !10267)
!10271 = !DILocation(line: 56, column: 52, scope: !10267)
!10272 = !DILocation(line: 56, column: 34, scope: !10267)
!10273 = !DILocation(line: 56, column: 58, scope: !10267)
!10274 = !DILocation(line: 56, column: 7, scope: !10268)
!10275 = !DILocation(line: 55, column: 53, scope: !10269)
!10276 = !DILocation(line: 55, column: 33, scope: !10269)
!10277 = distinct !{!10277, !10250, !10278}
!10278 = !DILocation(line: 59, column: 2, scope: !10251)
!10279 = !DILocation(line: 62, column: 1, scope: !10237)
!10280 = distinct !DISubprogram(name: "z_device_is_ready", scope: !10217, file: !10217, line: 93, type: !10281, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !10283)
!10281 = !DISubroutineType(types: !10282)
!10282 = !{!170, !10220}
!10283 = !{!10284}
!10284 = !DILocalVariable(name: "dev", arg: 1, scope: !10280, file: !10217, line: 93, type: !10220)
!10285 = !DILocation(line: 0, scope: !10280)
!10286 = !DILocation(line: 99, column: 10, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !10280, file: !10217, line: 99, column: 6)
!10288 = !DILocation(line: 99, column: 6, scope: !10280)
!10289 = !DILocation(line: 103, column: 14, scope: !10280)
!10290 = !DILocation(line: 103, column: 21, scope: !10280)
!10291 = !DILocation(line: 103, column: 33, scope: !10280)
!10292 = !DILocation(line: 103, column: 49, scope: !10280)
!10293 = !DILocation(line: 103, column: 58, scope: !10280)
!10294 = !DILocation(line: 104, column: 1, scope: !10280)
!10295 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !10217, file: !10217, line: 87, type: !10296, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !10299)
!10296 = !DISubroutineType(types: !10297)
!10297 = !{!213, !10298}
!10298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10220, size: 32)
!10299 = !{!10300}
!10300 = !DILocalVariable(name: "devices", arg: 1, scope: !10295, file: !10217, line: 87, type: !10298)
!10301 = !DILocation(line: 0, scope: !10295)
!10302 = !DILocation(line: 89, column: 11, scope: !10295)
!10303 = !DILocation(line: 90, column: 2, scope: !10295)
!10304 = distinct !DISubprogram(name: "device_required_foreach", scope: !10217, file: !10217, line: 125, type: !10305, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !10311)
!10305 = !DISubroutineType(types: !10306)
!10306 = !{!103, !10220, !10307, !102}
!10307 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !154, line: 471, baseType: !10308)
!10308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10309, size: 32)
!10309 = !DISubroutineType(types: !10310)
!10310 = !{!103, !10220, !102}
!10311 = !{!10312, !10313, !10314, !10315, !10316}
!10312 = !DILocalVariable(name: "dev", arg: 1, scope: !10304, file: !10217, line: 125, type: !10220)
!10313 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10304, file: !10217, line: 126, type: !10307)
!10314 = !DILocalVariable(name: "context", arg: 3, scope: !10304, file: !10217, line: 127, type: !102)
!10315 = !DILocalVariable(name: "handle_count", scope: !10304, file: !10217, line: 129, type: !213)
!10316 = !DILocalVariable(name: "handles", scope: !10304, file: !10217, line: 130, type: !173)
!10317 = !DILocation(line: 0, scope: !10304)
!10318 = !DILocation(line: 129, column: 2, scope: !10304)
!10319 = !DILocation(line: 129, column: 9, scope: !10304)
!10320 = !DILocation(line: 130, column: 35, scope: !10304)
!10321 = !DILocation(line: 132, column: 33, scope: !10304)
!10322 = !DILocation(line: 132, column: 9, scope: !10304)
!10323 = !DILocation(line: 133, column: 1, scope: !10304)
!10324 = !DILocation(line: 132, column: 2, scope: !10304)
!10325 = distinct !DISubprogram(name: "device_required_handles_get", scope: !154, file: !154, line: 493, type: !10326, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !10328)
!10326 = !DISubroutineType(types: !10327)
!10327 = !{!173, !10220, !2234}
!10328 = !{!10329, !10330, !10331, !10332}
!10329 = !DILocalVariable(name: "dev", arg: 1, scope: !10325, file: !154, line: 493, type: !10220)
!10330 = !DILocalVariable(name: "count", arg: 2, scope: !10325, file: !154, line: 493, type: !2234)
!10331 = !DILocalVariable(name: "rv", scope: !10325, file: !154, line: 495, type: !173)
!10332 = !DILocalVariable(name: "i", scope: !10333, file: !154, line: 498, type: !213)
!10333 = distinct !DILexicalBlock(scope: !10334, file: !154, line: 497, column: 18)
!10334 = distinct !DILexicalBlock(scope: !10325, file: !154, line: 497, column: 6)
!10335 = !DILocation(line: 0, scope: !10325)
!10336 = !DILocation(line: 495, column: 35, scope: !10325)
!10337 = !DILocation(line: 497, column: 9, scope: !10334)
!10338 = !DILocation(line: 497, column: 6, scope: !10325)
!10339 = !DILocation(line: 0, scope: !10333)
!10340 = !DILocation(line: 500, column: 11, scope: !10333)
!10341 = !DILocation(line: 500, column: 40, scope: !10333)
!10342 = !DILocation(line: 502, column: 4, scope: !10343)
!10343 = distinct !DILexicalBlock(scope: !10333, file: !154, line: 501, column: 40)
!10344 = distinct !{!10344, !10345, !10346}
!10345 = !DILocation(line: 500, column: 3, scope: !10333)
!10346 = !DILocation(line: 503, column: 3, scope: !10333)
!10347 = !DILocation(line: 504, column: 10, scope: !10333)
!10348 = !DILocation(line: 505, column: 2, scope: !10333)
!10349 = !DILocation(line: 507, column: 2, scope: !10325)
!10350 = distinct !DISubprogram(name: "device_visitor", scope: !10217, file: !10217, line: 106, type: !10351, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !10353)
!10351 = !DISubroutineType(types: !10352)
!10352 = !{!103, !173, !213, !10307, !102}
!10353 = !{!10354, !10355, !10356, !10357, !10358, !10360, !10363, !10364}
!10354 = !DILocalVariable(name: "handles", arg: 1, scope: !10350, file: !10217, line: 106, type: !173)
!10355 = !DILocalVariable(name: "handle_count", arg: 2, scope: !10350, file: !10217, line: 107, type: !213)
!10356 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !10350, file: !10217, line: 108, type: !10307)
!10357 = !DILocalVariable(name: "context", arg: 4, scope: !10350, file: !10217, line: 109, type: !102)
!10358 = !DILocalVariable(name: "i", scope: !10359, file: !10217, line: 112, type: !213)
!10359 = distinct !DILexicalBlock(scope: !10350, file: !10217, line: 112, column: 2)
!10360 = !DILocalVariable(name: "dh", scope: !10361, file: !10217, line: 113, type: !175)
!10361 = distinct !DILexicalBlock(scope: !10362, file: !10217, line: 112, column: 44)
!10362 = distinct !DILexicalBlock(scope: !10359, file: !10217, line: 112, column: 2)
!10363 = !DILocalVariable(name: "rdev", scope: !10361, file: !10217, line: 114, type: !10220)
!10364 = !DILocalVariable(name: "rc", scope: !10361, file: !10217, line: 115, type: !103)
!10365 = !DILocation(line: 0, scope: !10350)
!10366 = !DILocation(line: 0, scope: !10359)
!10367 = !DILocation(line: 112, column: 23, scope: !10362)
!10368 = !DILocation(line: 112, column: 2, scope: !10359)
!10369 = distinct !{!10369, !10368, !10370}
!10370 = !DILocation(line: 120, column: 2, scope: !10359)
!10371 = !DILocation(line: 113, column: 24, scope: !10361)
!10372 = !DILocation(line: 0, scope: !10361)
!10373 = !DILocation(line: 114, column: 31, scope: !10361)
!10374 = !DILocation(line: 115, column: 12, scope: !10361)
!10375 = !DILocation(line: 117, column: 10, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10361, file: !10217, line: 117, column: 7)
!10377 = !DILocation(line: 112, column: 39, scope: !10362)
!10378 = !DILocation(line: 123, column: 1, scope: !10350)
!10379 = distinct !DISubprogram(name: "device_from_handle", scope: !154, file: !154, line: 439, type: !10380, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !10382)
!10380 = !DISubroutineType(types: !10381)
!10381 = !{!10220, !175}
!10382 = !{!10383, !10384, !10385}
!10383 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !10379, file: !154, line: 439, type: !175)
!10384 = !DILocalVariable(name: "dev", scope: !10379, file: !154, line: 443, type: !10220)
!10385 = !DILocalVariable(name: "numdev", scope: !10379, file: !154, line: 444, type: !213)
!10386 = !DILocation(line: 0, scope: !10379)
!10387 = !DILocation(line: 446, column: 7, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10379, file: !154, line: 446, column: 6)
!10389 = !DILocation(line: 446, column: 18, scope: !10388)
!10390 = !DILocation(line: 446, column: 23, scope: !10388)
!10391 = !DILocation(line: 450, column: 2, scope: !10379)
!10392 = distinct !DISubprogram(name: "device_supported_foreach", scope: !10217, file: !10217, line: 135, type: !10305, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !10393)
!10393 = !{!10394, !10395, !10396, !10397, !10398}
!10394 = !DILocalVariable(name: "dev", arg: 1, scope: !10392, file: !10217, line: 135, type: !10220)
!10395 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !10392, file: !10217, line: 136, type: !10307)
!10396 = !DILocalVariable(name: "context", arg: 3, scope: !10392, file: !10217, line: 137, type: !102)
!10397 = !DILocalVariable(name: "handle_count", scope: !10392, file: !10217, line: 139, type: !213)
!10398 = !DILocalVariable(name: "handles", scope: !10392, file: !10217, line: 140, type: !173)
!10399 = !DILocation(line: 0, scope: !10392)
!10400 = !DILocation(line: 139, column: 2, scope: !10392)
!10401 = !DILocation(line: 139, column: 9, scope: !10392)
!10402 = !DILocation(line: 140, column: 35, scope: !10392)
!10403 = !DILocation(line: 142, column: 33, scope: !10392)
!10404 = !DILocation(line: 142, column: 9, scope: !10392)
!10405 = !DILocation(line: 143, column: 1, scope: !10392)
!10406 = !DILocation(line: 142, column: 2, scope: !10392)
!10407 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !154, file: !154, line: 573, type: !10326, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2690, retainedNodes: !10408)
!10408 = !{!10409, !10410, !10411, !10412, !10413}
!10409 = !DILocalVariable(name: "dev", arg: 1, scope: !10407, file: !154, line: 573, type: !10220)
!10410 = !DILocalVariable(name: "count", arg: 2, scope: !10407, file: !154, line: 573, type: !2234)
!10411 = !DILocalVariable(name: "rv", scope: !10407, file: !154, line: 575, type: !173)
!10412 = !DILocalVariable(name: "region", scope: !10407, file: !154, line: 576, type: !213)
!10413 = !DILocalVariable(name: "i", scope: !10407, file: !154, line: 577, type: !213)
!10414 = !DILocation(line: 0, scope: !10407)
!10415 = !DILocation(line: 575, column: 35, scope: !10407)
!10416 = !DILocation(line: 579, column: 9, scope: !10417)
!10417 = distinct !DILexicalBlock(scope: !10407, file: !154, line: 579, column: 6)
!10418 = !DILocation(line: 579, column: 6, scope: !10407)
!10419 = !DILocation(line: 582, column: 8, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10421, file: !154, line: 582, column: 8)
!10421 = distinct !DILexicalBlock(scope: !10422, file: !154, line: 581, column: 23)
!10422 = distinct !DILexicalBlock(scope: !10417, file: !154, line: 579, column: 18)
!10423 = !DILocation(line: 582, column: 12, scope: !10420)
!10424 = !DILocation(line: 585, column: 6, scope: !10421)
!10425 = !DILocation(line: 0, scope: !10422)
!10426 = !DILocation(line: 581, column: 17, scope: !10422)
!10427 = !DILocation(line: 581, column: 3, scope: !10422)
!10428 = !DILocation(line: 588, column: 10, scope: !10422)
!10429 = !DILocation(line: 588, column: 16, scope: !10422)
!10430 = !DILocation(line: 589, column: 4, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10422, file: !154, line: 588, column: 39)
!10432 = !DILocation(line: 588, column: 3, scope: !10422)
!10433 = distinct !{!10433, !10432, !10434}
!10434 = !DILocation(line: 590, column: 3, scope: !10422)
!10435 = !DILocation(line: 591, column: 10, scope: !10422)
!10436 = !DILocation(line: 592, column: 2, scope: !10422)
!10437 = !DILocation(line: 575, column: 25, scope: !10407)
!10438 = !DILocation(line: 594, column: 2, scope: !10407)
!10439 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1653, file: !1653, line: 49, type: !10440, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1650, retainedNodes: !335)
!10440 = !DISubroutineType(types: !10441)
!10441 = !{!2227}
!10442 = !DILocation(line: 51, column: 10, scope: !10439)
!10443 = !DILocation(line: 51, column: 20, scope: !10439)
!10444 = !DILocation(line: 51, column: 2, scope: !10439)
!10445 = distinct !DISubprogram(name: "coredump", scope: !2697, file: !2697, line: 209, type: !10446, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !10592)
!10446 = !DISubroutineType(types: !10447)
!10447 = !{null, !32, !10448, !10492}
!10448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10449, size: 32)
!10449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10450)
!10450 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2359, line: 141, baseType: !10451)
!10451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2359, line: 97, size: 256, elements: !10452)
!10452 = !{!10453}
!10453 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !10451, file: !2359, line: 107, baseType: !10454, size: 256)
!10454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2359, line: 98, size: 256, elements: !10455)
!10455 = !{!10456, !10461, !10466, !10471, !10476, !10481, !10486, !10491}
!10456 = !DIDerivedType(tag: DW_TAG_member, scope: !10454, file: !2359, line: 99, baseType: !10457, size: 32)
!10457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10454, file: !2359, line: 99, size: 32, elements: !10458)
!10458 = !{!10459, !10460}
!10459 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !10457, file: !2359, line: 99, baseType: !121, size: 32)
!10460 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !10457, file: !2359, line: 99, baseType: !121, size: 32)
!10461 = !DIDerivedType(tag: DW_TAG_member, scope: !10454, file: !2359, line: 100, baseType: !10462, size: 32, offset: 32)
!10462 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10454, file: !2359, line: 100, size: 32, elements: !10463)
!10463 = !{!10464, !10465}
!10464 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !10462, file: !2359, line: 100, baseType: !121, size: 32)
!10465 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !10462, file: !2359, line: 100, baseType: !121, size: 32)
!10466 = !DIDerivedType(tag: DW_TAG_member, scope: !10454, file: !2359, line: 101, baseType: !10467, size: 32, offset: 64)
!10467 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10454, file: !2359, line: 101, size: 32, elements: !10468)
!10468 = !{!10469, !10470}
!10469 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !10467, file: !2359, line: 101, baseType: !121, size: 32)
!10470 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !10467, file: !2359, line: 101, baseType: !121, size: 32)
!10471 = !DIDerivedType(tag: DW_TAG_member, scope: !10454, file: !2359, line: 102, baseType: !10472, size: 32, offset: 96)
!10472 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10454, file: !2359, line: 102, size: 32, elements: !10473)
!10473 = !{!10474, !10475}
!10474 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !10472, file: !2359, line: 102, baseType: !121, size: 32)
!10475 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !10472, file: !2359, line: 102, baseType: !121, size: 32)
!10476 = !DIDerivedType(tag: DW_TAG_member, scope: !10454, file: !2359, line: 103, baseType: !10477, size: 32, offset: 128)
!10477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10454, file: !2359, line: 103, size: 32, elements: !10478)
!10478 = !{!10479, !10480}
!10479 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !10477, file: !2359, line: 103, baseType: !121, size: 32)
!10480 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !10477, file: !2359, line: 103, baseType: !121, size: 32)
!10481 = !DIDerivedType(tag: DW_TAG_member, scope: !10454, file: !2359, line: 104, baseType: !10482, size: 32, offset: 160)
!10482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10454, file: !2359, line: 104, size: 32, elements: !10483)
!10483 = !{!10484, !10485}
!10484 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !10482, file: !2359, line: 104, baseType: !121, size: 32)
!10485 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !10482, file: !2359, line: 104, baseType: !121, size: 32)
!10486 = !DIDerivedType(tag: DW_TAG_member, scope: !10454, file: !2359, line: 105, baseType: !10487, size: 32, offset: 192)
!10487 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10454, file: !2359, line: 105, size: 32, elements: !10488)
!10488 = !{!10489, !10490}
!10489 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !10487, file: !2359, line: 105, baseType: !121, size: 32)
!10490 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !10487, file: !2359, line: 105, baseType: !121, size: 32)
!10491 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !10454, file: !2359, line: 106, baseType: !121, size: 32, offset: 224)
!10492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10493, size: 32)
!10493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !224, line: 245, size: 1024, elements: !10494)
!10494 = !{!10495, !10553, !10565, !10566, !10567, !10568, !10574, !10587}
!10495 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !10493, file: !224, line: 247, baseType: !10496, size: 384)
!10496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !224, line: 57, size: 384, elements: !10497)
!10497 = !{!10498, !10522, !10529, !10530, !10531, !10540, !10541, !10542}
!10498 = !DIDerivedType(tag: DW_TAG_member, scope: !10496, file: !224, line: 60, baseType: !10499, size: 64)
!10499 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10496, file: !224, line: 60, size: 64, elements: !10500)
!10500 = !{!10501, !10516}
!10501 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !10499, file: !224, line: 61, baseType: !10502, size: 64)
!10502 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !234, line: 49, baseType: !10503)
!10503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !234, line: 37, size: 64, elements: !10504)
!10504 = !{!10505, !10511}
!10505 = !DIDerivedType(tag: DW_TAG_member, scope: !10503, file: !234, line: 38, baseType: !10506, size: 32)
!10506 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10503, file: !234, line: 38, size: 32, elements: !10507)
!10507 = !{!10508, !10510}
!10508 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10506, file: !234, line: 39, baseType: !10509, size: 32)
!10509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10503, size: 32)
!10510 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10506, file: !234, line: 40, baseType: !10509, size: 32)
!10511 = !DIDerivedType(tag: DW_TAG_member, scope: !10503, file: !234, line: 42, baseType: !10512, size: 32, offset: 32)
!10512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10503, file: !234, line: 42, size: 32, elements: !10513)
!10513 = !{!10514, !10515}
!10514 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10512, file: !234, line: 43, baseType: !10509, size: 32)
!10515 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10512, file: !234, line: 44, baseType: !10509, size: 32)
!10516 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !10499, file: !224, line: 62, baseType: !10517, size: 64)
!10517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !250, line: 49, size: 64, elements: !10518)
!10518 = !{!10519}
!10519 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !10517, file: !250, line: 50, baseType: !10520, size: 64)
!10520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10521, size: 64, elements: !255)
!10521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10517, size: 32)
!10522 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !10496, file: !224, line: 68, baseType: !10523, size: 32, offset: 64)
!10523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10524, size: 32)
!10524 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !260, line: 233, baseType: !10525)
!10525 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !260, line: 231, size: 64, elements: !10526)
!10526 = !{!10527}
!10527 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10525, file: !260, line: 232, baseType: !10528, size: 64)
!10528 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !234, line: 48, baseType: !10503)
!10529 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !10496, file: !224, line: 71, baseType: !167, size: 8, offset: 96)
!10530 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !10496, file: !224, line: 74, baseType: !167, size: 8, offset: 104)
!10531 = !DIDerivedType(tag: DW_TAG_member, scope: !10496, file: !224, line: 90, baseType: !10532, size: 16, offset: 112)
!10532 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10496, file: !224, line: 90, size: 16, elements: !10533)
!10533 = !{!10534, !10539}
!10534 = !DIDerivedType(tag: DW_TAG_member, scope: !10532, file: !224, line: 91, baseType: !10535, size: 16)
!10535 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10532, file: !224, line: 91, size: 16, elements: !10536)
!10536 = !{!10537, !10538}
!10537 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !10535, file: !224, line: 96, baseType: !274, size: 8)
!10538 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !10535, file: !224, line: 97, baseType: !167, size: 8, offset: 8)
!10539 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !10532, file: !224, line: 100, baseType: !278, size: 16)
!10540 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !10496, file: !224, line: 107, baseType: !121, size: 32, offset: 128)
!10541 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !10496, file: !224, line: 127, baseType: !102, size: 32, offset: 160)
!10542 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !10496, file: !224, line: 131, baseType: !10543, size: 192, offset: 192)
!10543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !260, line: 244, size: 192, elements: !10544)
!10544 = !{!10545, !10546, !10552}
!10545 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10543, file: !260, line: 245, baseType: !10502, size: 64)
!10546 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !10543, file: !260, line: 246, baseType: !10547, size: 32, offset: 64)
!10547 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !260, line: 242, baseType: !10548)
!10548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10549, size: 32)
!10549 = !DISubroutineType(types: !10550)
!10550 = !{null, !10551}
!10551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10543, size: 32)
!10552 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !10543, file: !260, line: 249, baseType: !293, size: 64, offset: 128)
!10553 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !10493, file: !224, line: 250, baseType: !10554, size: 288, offset: 384)
!10554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !297, line: 25, size: 288, elements: !10555)
!10555 = !{!10556, !10557, !10558, !10559, !10560, !10561, !10562, !10563, !10564}
!10556 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !10554, file: !297, line: 26, baseType: !121, size: 32)
!10557 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !10554, file: !297, line: 27, baseType: !121, size: 32, offset: 32)
!10558 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !10554, file: !297, line: 28, baseType: !121, size: 32, offset: 64)
!10559 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !10554, file: !297, line: 29, baseType: !121, size: 32, offset: 96)
!10560 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !10554, file: !297, line: 30, baseType: !121, size: 32, offset: 128)
!10561 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !10554, file: !297, line: 31, baseType: !121, size: 32, offset: 160)
!10562 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !10554, file: !297, line: 32, baseType: !121, size: 32, offset: 192)
!10563 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !10554, file: !297, line: 33, baseType: !121, size: 32, offset: 224)
!10564 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !10554, file: !297, line: 34, baseType: !121, size: 32, offset: 256)
!10565 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !10493, file: !224, line: 253, baseType: !102, size: 32, offset: 672)
!10566 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !10493, file: !224, line: 256, baseType: !10524, size: 64, offset: 704)
!10567 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !10493, file: !224, line: 294, baseType: !103, size: 32, offset: 768)
!10568 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !10493, file: !224, line: 300, baseType: !10569, size: 96, offset: 800)
!10569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !224, line: 149, size: 96, elements: !10570)
!10570 = !{!10571, !10572, !10573}
!10571 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !10569, file: !224, line: 153, baseType: !22, size: 32)
!10572 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10569, file: !224, line: 162, baseType: !213, size: 32, offset: 32)
!10573 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !10569, file: !224, line: 168, baseType: !213, size: 32, offset: 64)
!10574 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !10493, file: !224, line: 325, baseType: !10575, size: 32, offset: 896)
!10575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10576, size: 32)
!10576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !320, line: 5073, size: 160, elements: !10577)
!10577 = !{!10578, !10584, !10585}
!10578 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10576, file: !320, line: 5074, baseType: !10579, size: 96)
!10579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !324, line: 56, size: 96, elements: !10580)
!10580 = !{!10581, !10582, !10583}
!10581 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !10579, file: !324, line: 57, baseType: !327, size: 32)
!10582 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !10579, file: !324, line: 58, baseType: !102, size: 32, offset: 32)
!10583 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !10579, file: !324, line: 59, baseType: !213, size: 32, offset: 64)
!10584 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10576, file: !320, line: 5075, baseType: !10524, size: 64, offset: 96)
!10585 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10576, file: !320, line: 5076, baseType: !10586, offset: 160)
!10586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !334, line: 43, elements: !335)
!10587 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !10493, file: !224, line: 343, baseType: !10588, size: 64, offset: 928)
!10588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !297, line: 60, size: 64, elements: !10589)
!10589 = !{!10590, !10591}
!10590 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !10588, file: !297, line: 63, baseType: !121, size: 32)
!10591 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !10588, file: !297, line: 66, baseType: !121, size: 32, offset: 32)
!10592 = !{!10593, !10594, !10595}
!10593 = !DILocalVariable(name: "reason", arg: 1, scope: !10445, file: !2697, line: 209, type: !32)
!10594 = !DILocalVariable(name: "esf", arg: 2, scope: !10445, file: !2697, line: 209, type: !10448)
!10595 = !DILocalVariable(name: "thread", arg: 3, scope: !10445, file: !2697, line: 210, type: !10492)
!10596 = !DILocation(line: 0, scope: !10445)
!10597 = !DILocation(line: 212, column: 1, scope: !10445)
!10598 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2697, file: !2697, line: 214, type: !10599, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !10601)
!10599 = !DISubroutineType(types: !10600)
!10600 = !{null, !22, !22}
!10601 = !{!10602, !10603}
!10602 = !DILocalVariable(name: "start_addr", arg: 1, scope: !10598, file: !2697, line: 214, type: !22)
!10603 = !DILocalVariable(name: "end_addr", arg: 2, scope: !10598, file: !2697, line: 214, type: !22)
!10604 = !DILocation(line: 0, scope: !10598)
!10605 = !DILocation(line: 216, column: 1, scope: !10598)
!10606 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2697, file: !2697, line: 218, type: !10607, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !10609)
!10607 = !DISubroutineType(types: !10608)
!10608 = !{null, !1694, !213}
!10609 = !{!10610, !10611}
!10610 = !DILocalVariable(name: "buf", arg: 1, scope: !10606, file: !2697, line: 218, type: !1694)
!10611 = !DILocalVariable(name: "buflen", arg: 2, scope: !10606, file: !2697, line: 218, type: !213)
!10612 = !DILocation(line: 0, scope: !10606)
!10613 = !DILocation(line: 220, column: 1, scope: !10606)
!10614 = distinct !DISubprogram(name: "coredump_query", scope: !2697, file: !2697, line: 222, type: !10615, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !10617)
!10615 = !DISubroutineType(types: !10616)
!10616 = !{!103, !2696, !102}
!10617 = !{!10618, !10619}
!10618 = !DILocalVariable(name: "query_id", arg: 1, scope: !10614, file: !2697, line: 222, type: !2696)
!10619 = !DILocalVariable(name: "arg", arg: 2, scope: !10614, file: !2697, line: 222, type: !102)
!10620 = !DILocation(line: 0, scope: !10614)
!10621 = !DILocation(line: 224, column: 2, scope: !10614)
!10622 = distinct !DISubprogram(name: "coredump_cmd", scope: !2697, file: !2697, line: 227, type: !10623, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !10625)
!10623 = !DISubroutineType(types: !10624)
!10624 = !{!103, !2703, !102}
!10625 = !{!10626, !10627}
!10626 = !DILocalVariable(name: "query_id", arg: 1, scope: !10622, file: !2697, line: 227, type: !2703)
!10627 = !DILocalVariable(name: "arg", arg: 2, scope: !10622, file: !2697, line: 227, type: !102)
!10628 = !DILocation(line: 0, scope: !10622)
!10629 = !DILocation(line: 229, column: 2, scope: !10622)
!10630 = distinct !DISubprogram(name: "arch_system_halt", scope: !10631, file: !10631, line: 23, type: !4521, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !10632)
!10631 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10632 = !{!10633}
!10633 = !DILocalVariable(name: "reason", arg: 1, scope: !10630, file: !10631, line: 23, type: !32)
!10634 = !DILocation(line: 0, scope: !10630)
!10635 = !DILocation(line: 55, column: 2, scope: !10636, inlinedAt: !10640)
!10636 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4510, file: !4510, line: 42, type: !4511, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !10637)
!10637 = !{!10638, !10639}
!10638 = !DILocalVariable(name: "key", scope: !10636, file: !4510, line: 44, type: !32)
!10639 = !DILocalVariable(name: "tmp", scope: !10636, file: !4510, line: 53, type: !32)
!10640 = distinct !DILocation(line: 31, column: 8, scope: !10630)
!10641 = !{i64 1650393}
!10642 = !DILocation(line: 0, scope: !10636, inlinedAt: !10640)
!10643 = !DILocation(line: 32, column: 2, scope: !10630)
!10644 = !DILocation(line: 32, column: 2, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10646, file: !10631, line: 32, column: 2)
!10646 = distinct !DILexicalBlock(scope: !10630, file: !10631, line: 32, column: 2)
!10647 = distinct !{!10647, !10648, !10649}
!10648 = !DILocation(line: 32, column: 2, scope: !10646)
!10649 = !DILocation(line: 34, column: 2, scope: !10646)
!10650 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !10631, file: !10631, line: 39, type: !10651, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !10653)
!10651 = !DISubroutineType(types: !10652)
!10652 = !{null, !32, !10448}
!10653 = !{!10654, !10655}
!10654 = !DILocalVariable(name: "reason", arg: 1, scope: !10650, file: !10631, line: 39, type: !32)
!10655 = !DILocalVariable(name: "esf", arg: 2, scope: !10650, file: !10631, line: 40, type: !10448)
!10656 = !DILocation(line: 0, scope: !10650)
!10657 = !DILocation(line: 46, column: 2, scope: !10650)
!10658 = distinct !DISubprogram(name: "k_fatal_halt", scope: !10631, file: !10631, line: 81, type: !4521, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !10659)
!10659 = !{!10660}
!10660 = !DILocalVariable(name: "reason", arg: 1, scope: !10658, file: !10631, line: 81, type: !32)
!10661 = !DILocation(line: 0, scope: !10658)
!10662 = !DILocation(line: 83, column: 2, scope: !10658)
!10663 = distinct !DISubprogram(name: "z_fatal_error", scope: !10631, file: !10631, line: 96, type: !10651, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !10664)
!10664 = !{!10665, !10666, !10667, !10668}
!10665 = !DILocalVariable(name: "reason", arg: 1, scope: !10663, file: !10631, line: 96, type: !32)
!10666 = !DILocalVariable(name: "esf", arg: 2, scope: !10663, file: !10631, line: 96, type: !10448)
!10667 = !DILocalVariable(name: "key", scope: !10663, file: !10631, line: 102, type: !32)
!10668 = !DILocalVariable(name: "thread", scope: !10663, file: !10631, line: 103, type: !10492)
!10669 = !DILocation(line: 0, scope: !10663)
!10670 = !DILocation(line: 55, column: 2, scope: !10636, inlinedAt: !10671)
!10671 = distinct !DILocation(line: 102, column: 21, scope: !10663)
!10672 = !DILocation(line: 0, scope: !10636, inlinedAt: !10671)
!10673 = !DILocation(line: 119, column: 11, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10663, file: !10631, line: 119, column: 6)
!10675 = !DILocation(line: 119, column: 20, scope: !10674)
!10676 = !DILocation(line: 131, column: 2, scope: !10663)
!10677 = !DILocation(line: 151, column: 7, scope: !10678)
!10678 = distinct !DILexicalBlock(scope: !10679, file: !10631, line: 146, column: 32)
!10679 = distinct !DILexicalBlock(scope: !10663, file: !10631, line: 146, column: 6)
!10680 = !DILocation(line: 151, column: 21, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10678, file: !10631, line: 151, column: 7)
!10682 = !DILocation(line: 104, column: 4, scope: !10663)
!10683 = !DILocalVariable(name: "key", arg: 1, scope: !10684, file: !4510, line: 84, type: !32)
!10684 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4510, file: !4510, line: 84, type: !4521, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !10685)
!10685 = !{!10683}
!10686 = !DILocation(line: 0, scope: !10684, inlinedAt: !10687)
!10687 = distinct !DILocation(line: 186, column: 2, scope: !10663)
!10688 = !DILocation(line: 95, column: 2, scope: !10684, inlinedAt: !10687)
!10689 = !{i64 1651210}
!10690 = !DILocation(line: 189, column: 3, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10692, file: !10631, line: 188, column: 41)
!10692 = distinct !DILexicalBlock(scope: !10663, file: !10631, line: 188, column: 6)
!10693 = !DILocation(line: 191, column: 1, scope: !10663)
!10694 = distinct !DISubprogram(name: "k_current_get", scope: !320, file: !320, line: 530, type: !10695, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !335)
!10695 = !DISubroutineType(types: !10696)
!10696 = !{!10697}
!10697 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !224, line: 347, baseType: !10492)
!10698 = !DILocation(line: 535, column: 9, scope: !10694)
!10699 = !DILocation(line: 535, column: 2, scope: !10694)
!10700 = distinct !DISubprogram(name: "k_thread_abort", scope: !3155, file: !3155, line: 188, type: !10701, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !10703)
!10701 = !DISubroutineType(types: !10702)
!10702 = !{null, !10697}
!10703 = !{!10704}
!10704 = !DILocalVariable(name: "thread", arg: 1, scope: !10700, file: !3155, line: 188, type: !10697)
!10705 = !DILocation(line: 0, scope: !10700)
!10706 = !DILocation(line: 197, column: 2, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10700, file: !3155, line: 197, column: 2)
!10708 = !{i64 2152216051}
!10709 = !DILocation(line: 198, column: 2, scope: !10700)
!10710 = !DILocation(line: 199, column: 1, scope: !10700)
!10711 = distinct !DISubprogram(name: "z_current_get", scope: !3155, file: !3155, line: 173, type: !10695, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !335)
!10712 = !DILocation(line: 180, column: 2, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10711, file: !3155, line: 180, column: 2)
!10714 = !{i64 2152215983}
!10715 = !DILocation(line: 181, column: 9, scope: !10711)
!10716 = !DILocation(line: 181, column: 2, scope: !10711)
!10717 = distinct !DISubprogram(name: "z_early_memset", scope: !1661, file: !1661, line: 108, type: !10718, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10720)
!10718 = !DISubroutineType(types: !10719)
!10719 = !{null, !102, !103, !213}
!10720 = !{!10721, !10722, !10723}
!10721 = !DILocalVariable(name: "dst", arg: 1, scope: !10717, file: !1661, line: 108, type: !102)
!10722 = !DILocalVariable(name: "c", arg: 2, scope: !10717, file: !1661, line: 108, type: !103)
!10723 = !DILocalVariable(name: "n", arg: 3, scope: !10717, file: !1661, line: 108, type: !213)
!10724 = !DILocation(line: 0, scope: !10717)
!10725 = !DILocation(line: 110, column: 9, scope: !10717)
!10726 = !DILocation(line: 111, column: 1, scope: !10717)
!10727 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1661, file: !1661, line: 121, type: !10728, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10730)
!10728 = !DISubroutineType(types: !10729)
!10729 = !{null, !102, !13, !213}
!10730 = !{!10731, !10732, !10733}
!10731 = !DILocalVariable(name: "dst", arg: 1, scope: !10727, file: !1661, line: 121, type: !102)
!10732 = !DILocalVariable(name: "src", arg: 2, scope: !10727, file: !1661, line: 121, type: !13)
!10733 = !DILocalVariable(name: "n", arg: 3, scope: !10727, file: !1661, line: 121, type: !213)
!10734 = !DILocation(line: 0, scope: !10727)
!10735 = !DILocation(line: 123, column: 9, scope: !10727)
!10736 = !DILocation(line: 124, column: 1, scope: !10727)
!10737 = distinct !DISubprogram(name: "z_bss_zero", scope: !1661, file: !1661, line: 132, type: !2730, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !335)
!10738 = !DILocation(line: 143, column: 2, scope: !10737)
!10739 = !DILocation(line: 168, column: 1, scope: !10737)
!10740 = distinct !DISubprogram(name: "z_init_cpu", scope: !1661, file: !1661, line: 372, type: !6417, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10741)
!10741 = !{!10742}
!10742 = !DILocalVariable(name: "id", arg: 1, scope: !10740, file: !1661, line: 372, type: !103)
!10743 = !DILocation(line: 0, scope: !10740)
!10744 = !DILocation(line: 374, column: 2, scope: !10740)
!10745 = !DILocation(line: 375, column: 34, scope: !10740)
!10746 = !DILocation(line: 375, column: 19, scope: !10740)
!10747 = !DILocation(line: 375, column: 31, scope: !10740)
!10748 = !DILocation(line: 376, column: 24, scope: !10740)
!10749 = !DILocation(line: 376, column: 19, scope: !10740)
!10750 = !DILocation(line: 376, column: 22, scope: !10740)
!10751 = !DILocation(line: 378, column: 26, scope: !10740)
!10752 = !DILocation(line: 378, column: 4, scope: !10740)
!10753 = !DILocation(line: 378, column: 50, scope: !10740)
!10754 = !DILocation(line: 377, column: 19, scope: !10740)
!10755 = !DILocation(line: 377, column: 29, scope: !10740)
!10756 = !DILocation(line: 384, column: 1, scope: !10740)
!10757 = distinct !DISubprogram(name: "init_idle_thread", scope: !1661, file: !1661, line: 343, type: !6417, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10758)
!10758 = !{!10759, !10760, !10761, !10764}
!10759 = !DILocalVariable(name: "i", arg: 1, scope: !10757, file: !1661, line: 343, type: !103)
!10760 = !DILocalVariable(name: "thread", scope: !10757, file: !1661, line: 345, type: !1754)
!10761 = !DILocalVariable(name: "stack", scope: !10757, file: !1661, line: 346, type: !10762)
!10762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10763, size: 32)
!10763 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3034, line: 44, baseType: !1868)
!10764 = !DILocalVariable(name: "tname", scope: !10757, file: !1661, line: 358, type: !1017)
!10765 = !DILocation(line: 0, scope: !10757)
!10766 = !DILocation(line: 345, column: 29, scope: !10757)
!10767 = !DILocation(line: 346, column: 28, scope: !10757)
!10768 = !DILocation(line: 362, column: 37, scope: !10757)
!10769 = !DILocation(line: 362, column: 36, scope: !10757)
!10770 = !DILocation(line: 361, column: 2, scope: !10757)
!10771 = !DILocation(line: 365, column: 2, scope: !10757)
!10772 = !DILocation(line: 370, column: 1, scope: !10757)
!10773 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1869, file: !1869, line: 331, type: !10774, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10776)
!10774 = !DISubroutineType(types: !10775)
!10775 = !{!1017, !10762}
!10776 = !{!10777}
!10777 = !DILocalVariable(name: "sym", arg: 1, scope: !10773, file: !1869, line: 331, type: !10762)
!10778 = !DILocation(line: 0, scope: !10773)
!10779 = !DILocation(line: 333, column: 21, scope: !10773)
!10780 = !DILocation(line: 333, column: 2, scope: !10773)
!10781 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10782, file: !10782, line: 155, type: !10783, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10785)
!10782 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10783 = !DISubroutineType(types: !10784)
!10784 = !{null, !1754}
!10785 = !{!10786}
!10786 = !DILocalVariable(name: "thread", arg: 1, scope: !10781, file: !10782, line: 155, type: !1754)
!10787 = !DILocation(line: 0, scope: !10781)
!10788 = !DILocation(line: 157, column: 15, scope: !10781)
!10789 = !DILocation(line: 157, column: 28, scope: !10781)
!10790 = !DILocation(line: 158, column: 1, scope: !10781)
!10791 = distinct !DISubprogram(name: "z_cstart", scope: !1661, file: !1661, line: 501, type: !2730, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10792)
!10792 = !{!10793}
!10793 = !DILocalVariable(name: "dummy_thread", scope: !10791, file: !1661, line: 518, type: !1755)
!10794 = !DILocation(line: 507, column: 2, scope: !10791)
!10795 = !DILocation(line: 43, column: 14, scope: !10796, inlinedAt: !10800)
!10796 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !10797, file: !10797, line: 40, type: !2730, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10798)
!10797 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10798 = !{!10799}
!10799 = !DILocalVariable(name: "msp", scope: !10796, file: !10797, line: 42, type: !121)
!10800 = distinct !DILocation(line: 44, column: 2, scope: !10801, inlinedAt: !10803)
!10801 = distinct !DISubprogram(name: "arch_kernel_init", scope: !10802, file: !10802, line: 42, type: !2730, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !335)
!10802 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10803 = distinct !DILocation(line: 510, column: 2, scope: !10791)
!10804 = !DILocation(line: 43, column: 3, scope: !10796, inlinedAt: !10800)
!10805 = !DILocation(line: 43, column: 60, scope: !10796, inlinedAt: !10800)
!10806 = !DILocation(line: 0, scope: !10796, inlinedAt: !10800)
!10807 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !10808, file: !4701, line: 1153, type: !121)
!10808 = distinct !DISubprogram(name: "__set_MSP", scope: !4701, file: !4701, line: 1153, type: !4534, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10809)
!10809 = !{!10807}
!10810 = !DILocation(line: 0, scope: !10808, inlinedAt: !10811)
!10811 = distinct !DILocation(line: 46, column: 2, scope: !10796, inlinedAt: !10800)
!10812 = !DILocation(line: 1155, column: 3, scope: !10808, inlinedAt: !10811)
!10813 = !{i64 2463833}
!10814 = !DILocation(line: 62, column: 11, scope: !10796, inlinedAt: !10800)
!10815 = !DILocation(line: 102, column: 2, scope: !10816, inlinedAt: !10817)
!10816 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !5457, file: !5457, line: 97, type: !2730, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !335)
!10817 = distinct !DILocation(line: 45, column: 2, scope: !10801, inlinedAt: !10803)
!10818 = !DILocation(line: 108, column: 2, scope: !10816, inlinedAt: !10817)
!10819 = !DILocation(line: 112, column: 2, scope: !10816, inlinedAt: !10817)
!10820 = !DILocation(line: 113, column: 2, scope: !10816, inlinedAt: !10817)
!10821 = !DILocation(line: 114, column: 2, scope: !10816, inlinedAt: !10817)
!10822 = !DILocation(line: 116, column: 2, scope: !10816, inlinedAt: !10817)
!10823 = !DILocation(line: 123, column: 13, scope: !10816, inlinedAt: !10817)
!10824 = !DILocation(line: 46, column: 2, scope: !10801, inlinedAt: !10803)
!10825 = !DILocation(line: 47, column: 2, scope: !10801, inlinedAt: !10803)
!10826 = !DILocation(line: 174, column: 12, scope: !10827, inlinedAt: !10828)
!10827 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !5457, file: !5457, line: 169, type: !2730, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !335)
!10828 = distinct !DILocation(line: 48, column: 2, scope: !10801, inlinedAt: !10803)
!10829 = !DILocation(line: 179, column: 12, scope: !10827, inlinedAt: !10828)
!10830 = !DILocation(line: 50, column: 2, scope: !10801, inlinedAt: !10803)
!10831 = !DILocation(line: 57, column: 2, scope: !10801, inlinedAt: !10803)
!10832 = !DILocation(line: 518, column: 2, scope: !10791)
!10833 = !DILocation(line: 518, column: 18, scope: !10791)
!10834 = !DILocation(line: 520, column: 2, scope: !10791)
!10835 = !DILocation(line: 523, column: 2, scope: !10791)
!10836 = !DILocation(line: 526, column: 2, scope: !10791)
!10837 = !DILocation(line: 527, column: 2, scope: !10791)
!10838 = !DILocation(line: 543, column: 24, scope: !10791)
!10839 = !DILocation(line: 543, column: 2, scope: !10791)
!10840 = !DILocation(line: 0, scope: !1888)
!10841 = !DILocation(line: 246, column: 15, scope: !1906)
!10842 = !DILocation(line: 246, column: 36, scope: !1905)
!10843 = !DILocation(line: 246, column: 2, scope: !1906)
!10844 = !DILocation(line: 247, column: 37, scope: !1904)
!10845 = !DILocation(line: 0, scope: !1904)
!10846 = !DILocation(line: 248, column: 19, scope: !1904)
!10847 = !DILocation(line: 248, column: 12, scope: !1904)
!10848 = !DILocation(line: 250, column: 11, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !1904, file: !1661, line: 250, column: 7)
!10850 = !DILocation(line: 250, column: 7, scope: !1904)
!10851 = !DILocation(line: 254, column: 11, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10853, file: !1661, line: 254, column: 8)
!10853 = distinct !DILexicalBlock(scope: !10849, file: !1661, line: 250, column: 20)
!10854 = !DILocation(line: 254, column: 8, scope: !10853)
!10855 = !DILocation(line: 255, column: 9, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10852, file: !1661, line: 254, column: 17)
!10857 = !DILocation(line: 258, column: 9, scope: !10856)
!10858 = !DILocation(line: 261, column: 28, scope: !10856)
!10859 = !DILocation(line: 261, column: 10, scope: !10856)
!10860 = !DILocation(line: 261, column: 17, scope: !10856)
!10861 = !DILocation(line: 261, column: 26, scope: !10856)
!10862 = !DILocation(line: 262, column: 4, scope: !10856)
!10863 = !DILocation(line: 263, column: 9, scope: !10853)
!10864 = !DILocation(line: 263, column: 16, scope: !10853)
!10865 = !DILocation(line: 263, column: 28, scope: !10853)
!10866 = !DILocation(line: 264, column: 3, scope: !10853)
!10867 = !DILocation(line: 246, column: 60, scope: !1905)
!10868 = distinct !{!10868, !10843, !10869}
!10869 = !DILocation(line: 265, column: 2, scope: !1906)
!10870 = !DILocation(line: 266, column: 1, scope: !1888)
!10871 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !369, file: !369, line: 1638, type: !4735, scopeLine: 1639, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10872)
!10872 = !{!10873, !10874}
!10873 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10871, file: !369, line: 1638, type: !693)
!10874 = !DILocalVariable(name: "priority", arg: 2, scope: !10871, file: !369, line: 1638, type: !121)
!10875 = !DILocation(line: 0, scope: !10871)
!10876 = !DILocation(line: 1646, column: 48, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10878, file: !369, line: 1645, column: 3)
!10878 = distinct !DILexicalBlock(scope: !10871, file: !369, line: 1640, column: 7)
!10879 = !DILocation(line: 1646, column: 32, scope: !10877)
!10880 = !DILocation(line: 1646, column: 40, scope: !10877)
!10881 = !DILocation(line: 1646, column: 5, scope: !10877)
!10882 = !DILocation(line: 1646, column: 46, scope: !10877)
!10883 = !DILocation(line: 1648, column: 1, scope: !10871)
!10884 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !10802, file: !10802, line: 32, type: !2730, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !335)
!10885 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !10886, file: !10886, line: 215, type: !10783, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10887)
!10886 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10887 = !{!10888}
!10888 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !10885, file: !10886, line: 215, type: !1754)
!10889 = !DILocation(line: 0, scope: !10885)
!10890 = !DILocation(line: 217, column: 21, scope: !10885)
!10891 = !DILocation(line: 217, column: 34, scope: !10885)
!10892 = !DILocation(line: 221, column: 21, scope: !10885)
!10893 = !DILocation(line: 221, column: 34, scope: !10885)
!10894 = !DILocation(line: 223, column: 27, scope: !10885)
!10895 = !DILocation(line: 223, column: 33, scope: !10885)
!10896 = !DILocation(line: 224, column: 27, scope: !10885)
!10897 = !DILocation(line: 224, column: 32, scope: !10885)
!10898 = !DILocation(line: 232, column: 16, scope: !10885)
!10899 = !DILocation(line: 232, column: 30, scope: !10885)
!10900 = !DILocation(line: 239, column: 24, scope: !10885)
!10901 = !DILocation(line: 240, column: 1, scope: !10885)
!10902 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1661, file: !1661, line: 399, type: !10903, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10905)
!10903 = !DISubroutineType(types: !10904)
!10904 = !{!1017}
!10905 = !{!10906}
!10906 = !DILocalVariable(name: "stack_ptr", scope: !10902, file: !1661, line: 401, type: !1017)
!10907 = !DILocation(line: 404, column: 2, scope: !10902)
!10908 = !DILocation(line: 416, column: 24, scope: !10902)
!10909 = !DILocation(line: 418, column: 14, scope: !10902)
!10910 = !DILocation(line: 0, scope: !10902)
!10911 = !DILocation(line: 423, column: 2, scope: !10902)
!10912 = !DILocation(line: 424, column: 2, scope: !10902)
!10913 = !DILocation(line: 426, column: 2, scope: !10902)
!10914 = !DILocation(line: 428, column: 2, scope: !10902)
!10915 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1661, file: !1661, line: 432, type: !10916, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10918)
!10916 = !DISubroutineType(types: !10917)
!10917 = !{null, !1017}
!10918 = !{!10919}
!10919 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !10915, file: !1661, line: 432, type: !1017)
!10920 = !DILocation(line: 0, scope: !10915)
!10921 = !DILocation(line: 435, column: 2, scope: !10915)
!10922 = !DILocation(line: 445, column: 2, scope: !10915)
!10923 = distinct !DISubprogram(name: "bg_thread_main", scope: !1661, file: !1661, line: 277, type: !3036, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1657, retainedNodes: !10924)
!10924 = !{!10925, !10926, !10927}
!10925 = !DILocalVariable(name: "unused1", arg: 1, scope: !10923, file: !1661, line: 277, type: !102)
!10926 = !DILocalVariable(name: "unused2", arg: 2, scope: !10923, file: !1661, line: 277, type: !102)
!10927 = !DILocalVariable(name: "unused3", arg: 3, scope: !10923, file: !1661, line: 277, type: !102)
!10928 = !DILocation(line: 0, scope: !10923)
!10929 = !DILocation(line: 291, column: 20, scope: !10923)
!10930 = !DILocation(line: 293, column: 2, scope: !10923)
!10931 = !DILocation(line: 297, column: 2, scope: !10923)
!10932 = !DILocation(line: 305, column: 2, scope: !10923)
!10933 = !DILocation(line: 307, column: 2, scope: !10923)
!10934 = !DILocation(line: 330, column: 8, scope: !10923)
!10935 = !DILocation(line: 333, column: 34, scope: !10923)
!10936 = !DILocation(line: 339, column: 1, scope: !10923)
!10937 = distinct !DISubprogram(name: "k_thread_foreach", scope: !1915, file: !1915, line: 45, type: !10938, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !10946)
!10938 = !DISubroutineType(types: !10939)
!10939 = !{null, !10940, !102}
!10940 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !320, line: 103, baseType: !10941)
!10941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10942, size: 32)
!10942 = !DISubroutineType(types: !10943)
!10943 = !{null, !10944, !102}
!10944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10945, size: 32)
!10945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1920)
!10946 = !{!10947, !10948}
!10947 = !DILocalVariable(name: "user_cb", arg: 1, scope: !10937, file: !1915, line: 45, type: !10940)
!10948 = !DILocalVariable(name: "user_data", arg: 2, scope: !10937, file: !1915, line: 45, type: !102)
!10949 = !DILocation(line: 0, scope: !10937)
!10950 = !DILocation(line: 71, column: 1, scope: !10937)
!10951 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !1915, file: !1915, line: 73, type: !10938, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !10952)
!10952 = !{!10953, !10954}
!10953 = !DILocalVariable(name: "user_cb", arg: 1, scope: !10951, file: !1915, line: 73, type: !10940)
!10954 = !DILocalVariable(name: "user_data", arg: 2, scope: !10951, file: !1915, line: 73, type: !102)
!10955 = !DILocation(line: 0, scope: !10951)
!10956 = !DILocation(line: 95, column: 1, scope: !10951)
!10957 = distinct !DISubprogram(name: "k_is_in_isr", scope: !1915, file: !1915, line: 97, type: !5458, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !335)
!10958 = !DILocation(line: 1031, column: 3, scope: !10959, inlinedAt: !10962)
!10959 = distinct !DISubprogram(name: "__get_IPSR", scope: !4701, file: !4701, line: 1027, type: !5451, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !10960)
!10960 = !{!10961}
!10961 = !DILocalVariable(name: "result", scope: !10959, file: !4701, line: 1029, type: !121)
!10962 = distinct !DILocation(line: 48, column: 10, scope: !10963, inlinedAt: !10964)
!10963 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5457, file: !5457, line: 46, type: !5458, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !335)
!10964 = distinct !DILocation(line: 99, column: 9, scope: !10957)
!10965 = !{i64 2469484}
!10966 = !DILocation(line: 0, scope: !10959, inlinedAt: !10962)
!10967 = !DILocation(line: 48, column: 9, scope: !10963, inlinedAt: !10964)
!10968 = !DILocation(line: 99, column: 2, scope: !10957)
!10969 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !1915, file: !1915, line: 106, type: !2730, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !335)
!10970 = !DILocation(line: 108, column: 2, scope: !10969)
!10971 = !DILocation(line: 108, column: 17, scope: !10969)
!10972 = !DILocation(line: 108, column: 30, scope: !10969)
!10973 = !DILocation(line: 109, column: 1, scope: !10969)
!10974 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !1915, file: !1915, line: 116, type: !2730, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !335)
!10975 = !DILocation(line: 118, column: 2, scope: !10974)
!10976 = !DILocation(line: 118, column: 17, scope: !10974)
!10977 = !DILocation(line: 118, column: 30, scope: !10974)
!10978 = !DILocation(line: 119, column: 1, scope: !10974)
!10979 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !1915, file: !1915, line: 126, type: !5458, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !335)
!10980 = !DILocation(line: 128, column: 10, scope: !10979)
!10981 = !DILocation(line: 128, column: 25, scope: !10979)
!10982 = !DILocation(line: 128, column: 38, scope: !10979)
!10983 = !DILocation(line: 128, column: 53, scope: !10979)
!10984 = !DILocation(line: 128, column: 2, scope: !10979)
!10985 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !1915, file: !1915, line: 187, type: !10986, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !10988)
!10986 = !DISubroutineType(types: !10987)
!10987 = !{!103, !1919, !157}
!10988 = !{!10989, !10990}
!10989 = !DILocalVariable(name: "thread", arg: 1, scope: !10985, file: !1915, line: 187, type: !1919)
!10990 = !DILocalVariable(name: "value", arg: 2, scope: !10985, file: !1915, line: 187, type: !157)
!10991 = !DILocation(line: 0, scope: !10985)
!10992 = !DILocation(line: 206, column: 2, scope: !10985)
!10993 = distinct !DISubprogram(name: "k_thread_name_get", scope: !1915, file: !1915, line: 238, type: !10994, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !10996)
!10994 = !DISubroutineType(types: !10995)
!10995 = !{!157, !1919}
!10996 = !{!10997}
!10997 = !DILocalVariable(name: "thread", arg: 1, scope: !10993, file: !1915, line: 238, type: !1919)
!10998 = !DILocation(line: 0, scope: !10993)
!10999 = !DILocation(line: 244, column: 2, scope: !10993)
!11000 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !1915, file: !1915, line: 248, type: !11001, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11003)
!11001 = !DISubroutineType(types: !11002)
!11002 = !{!103, !1918, !1017, !213}
!11003 = !{!11004, !11005, !11006}
!11004 = !DILocalVariable(name: "thread", arg: 1, scope: !11000, file: !1915, line: 248, type: !1918)
!11005 = !DILocalVariable(name: "buf", arg: 2, scope: !11000, file: !1915, line: 248, type: !1017)
!11006 = !DILocalVariable(name: "size", arg: 3, scope: !11000, file: !1915, line: 248, type: !213)
!11007 = !DILocation(line: 0, scope: !11000)
!11008 = !DILocation(line: 257, column: 2, scope: !11000)
!11009 = !DILocation(line: 0, scope: !1914)
!11010 = !DILocation(line: 281, column: 11, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !1914, file: !1915, line: 281, column: 6)
!11012 = !DILocation(line: 281, column: 20, scope: !11011)
!11013 = !DILocation(line: 275, column: 45, scope: !1914)
!11014 = !DILocation(line: 285, column: 10, scope: !1914)
!11015 = !DILocation(line: 0, scope: !2037)
!11016 = !DILocation(line: 293, column: 39, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !2037, file: !1915, line: 293, column: 2)
!11018 = !DILocation(line: 293, column: 2, scope: !2037)
!11019 = !DILocation(line: 273, column: 14, scope: !1914)
!11020 = !DILocation(line: 309, column: 2, scope: !1914)
!11021 = !DILocation(line: 309, column: 11, scope: !1914)
!11022 = !DILocation(line: 311, column: 2, scope: !1914)
!11023 = !DILocation(line: 293, column: 26, scope: !11017)
!11024 = !DILocation(line: 294, column: 9, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11017, file: !1915, line: 293, column: 54)
!11026 = !DILocation(line: 295, column: 21, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !11025, file: !1915, line: 295, column: 7)
!11028 = !DILocation(line: 295, column: 28, scope: !11027)
!11029 = !DILocation(line: 295, column: 7, scope: !11025)
!11030 = !DILocation(line: 299, column: 25, scope: !11025)
!11031 = !DILocation(line: 299, column: 41, scope: !11025)
!11032 = !DILocation(line: 300, column: 7, scope: !11025)
!11033 = !DILocation(line: 300, column: 26, scope: !11025)
!11034 = !DILocation(line: 299, column: 10, scope: !11025)
!11035 = !DILocation(line: 299, column: 7, scope: !11025)
!11036 = !DILocation(line: 302, column: 16, scope: !11025)
!11037 = !DILocation(line: 304, column: 20, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11025, file: !1915, line: 304, column: 7)
!11039 = !DILocation(line: 304, column: 7, scope: !11025)
!11040 = !DILocation(line: 305, column: 26, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11038, file: !1915, line: 304, column: 26)
!11042 = !DILocation(line: 305, column: 42, scope: !11041)
!11043 = !DILocation(line: 305, column: 11, scope: !11041)
!11044 = !DILocation(line: 305, column: 8, scope: !11041)
!11045 = !DILocation(line: 306, column: 3, scope: !11041)
!11046 = !DILocation(line: 293, column: 50, scope: !11017)
!11047 = !DILocation(line: 312, column: 1, scope: !1914)
!11048 = distinct !DISubprogram(name: "copy_bytes", scope: !1915, file: !1915, line: 261, type: !11049, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11051)
!11049 = !DISubroutineType(types: !11050)
!11050 = !{!213, !1017, !213, !157, !213}
!11051 = !{!11052, !11053, !11054, !11055, !11056}
!11052 = !DILocalVariable(name: "dest", arg: 1, scope: !11048, file: !1915, line: 261, type: !1017)
!11053 = !DILocalVariable(name: "dest_size", arg: 2, scope: !11048, file: !1915, line: 261, type: !213)
!11054 = !DILocalVariable(name: "src", arg: 3, scope: !11048, file: !1915, line: 261, type: !157)
!11055 = !DILocalVariable(name: "src_size", arg: 4, scope: !11048, file: !1915, line: 261, type: !213)
!11056 = !DILocalVariable(name: "bytes_to_copy", scope: !11048, file: !1915, line: 263, type: !213)
!11057 = !DILocation(line: 0, scope: !11048)
!11058 = !DILocation(line: 265, column: 18, scope: !11048)
!11059 = !DILocation(line: 266, column: 2, scope: !11048)
!11060 = !DILocation(line: 268, column: 2, scope: !11048)
!11061 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !1915, file: !1915, line: 383, type: !11062, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11064)
!11062 = !DISubroutineType(types: !11063)
!11063 = !{null, !1919}
!11064 = !{!11065}
!11065 = !DILocalVariable(name: "thread", arg: 1, scope: !11061, file: !1915, line: 383, type: !1919)
!11066 = !DILocation(line: 0, scope: !11061)
!11067 = !DILocation(line: 387, column: 2, scope: !11061)
!11068 = !DILocation(line: 388, column: 1, scope: !11061)
!11069 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !1915, file: !1915, line: 528, type: !11070, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11077)
!11070 = !DISubroutineType(types: !11071)
!11071 = !{!1017, !1919, !11072, !213, !3033, !102, !102, !102, !103, !121, !157}
!11072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11073, size: 32)
!11073 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3034, line: 44, baseType: !11074)
!11074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !1869, line: 47, size: 8, elements: !11075)
!11075 = !{!11076}
!11076 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11074, file: !1869, line: 48, baseType: !159, size: 8)
!11077 = !{!11078, !11079, !11080, !11081, !11082, !11083, !11084, !11085, !11086, !11087, !11088}
!11078 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11069, file: !1915, line: 528, type: !1919)
!11079 = !DILocalVariable(name: "stack", arg: 2, scope: !11069, file: !1915, line: 529, type: !11072)
!11080 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11069, file: !1915, line: 529, type: !213)
!11081 = !DILocalVariable(name: "entry", arg: 4, scope: !11069, file: !1915, line: 530, type: !3033)
!11082 = !DILocalVariable(name: "p1", arg: 5, scope: !11069, file: !1915, line: 531, type: !102)
!11083 = !DILocalVariable(name: "p2", arg: 6, scope: !11069, file: !1915, line: 531, type: !102)
!11084 = !DILocalVariable(name: "p3", arg: 7, scope: !11069, file: !1915, line: 531, type: !102)
!11085 = !DILocalVariable(name: "prio", arg: 8, scope: !11069, file: !1915, line: 532, type: !103)
!11086 = !DILocalVariable(name: "options", arg: 9, scope: !11069, file: !1915, line: 532, type: !121)
!11087 = !DILocalVariable(name: "name", arg: 10, scope: !11069, file: !1915, line: 532, type: !157)
!11088 = !DILocalVariable(name: "stack_ptr", scope: !11069, file: !1915, line: 534, type: !1017)
!11089 = !DILocation(line: 0, scope: !11069)
!11090 = !DILocation(line: 550, column: 28, scope: !11069)
!11091 = !DILocation(line: 550, column: 2, scope: !11069)
!11092 = !DILocation(line: 553, column: 34, scope: !11069)
!11093 = !DILocation(line: 553, column: 2, scope: !11069)
!11094 = !DILocation(line: 554, column: 14, scope: !11069)
!11095 = !DILocation(line: 564, column: 2, scope: !11069)
!11096 = !DILocation(line: 567, column: 14, scope: !11069)
!11097 = !DILocation(line: 567, column: 24, scope: !11069)
!11098 = !DILocation(line: 612, column: 7, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11069, file: !1915, line: 612, column: 6)
!11100 = !DILocation(line: 612, column: 6, scope: !11069)
!11101 = !DILocation(line: 627, column: 40, scope: !11069)
!11102 = !DILocation(line: 637, column: 2, scope: !11069)
!11103 = !DILocation(line: 613, column: 15, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11099, file: !1915, line: 612, column: 17)
!11105 = !DILocation(line: 613, column: 29, scope: !11104)
!11106 = !DILocation(line: 638, column: 1, scope: !11069)
!11107 = distinct !DISubprogram(name: "z_waitq_init", scope: !11108, file: !11108, line: 47, type: !11109, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11111)
!11108 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11109 = !DISubroutineType(types: !11110)
!11110 = !{null, !1950}
!11111 = !{!11112}
!11112 = !DILocalVariable(name: "w", arg: 1, scope: !11107, file: !11108, line: 47, type: !1950)
!11113 = !DILocation(line: 0, scope: !11107)
!11114 = !DILocation(line: 49, column: 21, scope: !11107)
!11115 = !DILocation(line: 49, column: 2, scope: !11107)
!11116 = !DILocation(line: 50, column: 1, scope: !11107)
!11117 = distinct !DISubprogram(name: "z_init_thread_base", scope: !1915, file: !1915, line: 791, type: !11118, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11121)
!11118 = !DISubroutineType(types: !11119)
!11119 = !{null, !11120, !103, !121, !32}
!11120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 32)
!11121 = !{!11122, !11123, !11124, !11125}
!11122 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11117, file: !1915, line: 791, type: !11120)
!11123 = !DILocalVariable(name: "priority", arg: 2, scope: !11117, file: !1915, line: 791, type: !103)
!11124 = !DILocalVariable(name: "initial_state", arg: 3, scope: !11117, file: !1915, line: 792, type: !121)
!11125 = !DILocalVariable(name: "options", arg: 4, scope: !11117, file: !1915, line: 792, type: !32)
!11126 = !DILocation(line: 0, scope: !11117)
!11127 = !DILocation(line: 795, column: 15, scope: !11117)
!11128 = !DILocation(line: 795, column: 25, scope: !11117)
!11129 = !DILocation(line: 796, column: 30, scope: !11117)
!11130 = !DILocation(line: 796, column: 15, scope: !11117)
!11131 = !DILocation(line: 796, column: 28, scope: !11117)
!11132 = !DILocation(line: 797, column: 30, scope: !11117)
!11133 = !DILocation(line: 797, column: 15, scope: !11117)
!11134 = !DILocation(line: 797, column: 28, scope: !11117)
!11135 = !DILocation(line: 799, column: 22, scope: !11117)
!11136 = !DILocation(line: 799, column: 15, scope: !11117)
!11137 = !DILocation(line: 799, column: 20, scope: !11117)
!11138 = !DILocation(line: 801, column: 15, scope: !11117)
!11139 = !DILocation(line: 801, column: 28, scope: !11117)
!11140 = !DILocation(line: 814, column: 2, scope: !11117)
!11141 = !DILocation(line: 815, column: 1, scope: !11117)
!11142 = distinct !DISubprogram(name: "setup_thread_stack", scope: !1915, file: !1915, line: 449, type: !11143, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11145)
!11143 = !DISubroutineType(types: !11144)
!11144 = !{!1017, !1919, !11072, !213}
!11145 = !{!11146, !11147, !11148, !11149, !11150, !11151, !11152, !11153}
!11146 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11142, file: !1915, line: 449, type: !1919)
!11147 = !DILocalVariable(name: "stack", arg: 2, scope: !11142, file: !1915, line: 450, type: !11072)
!11148 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11142, file: !1915, line: 450, type: !213)
!11149 = !DILocalVariable(name: "stack_obj_size", scope: !11142, file: !1915, line: 452, type: !213)
!11150 = !DILocalVariable(name: "stack_buf_size", scope: !11142, file: !1915, line: 452, type: !213)
!11151 = !DILocalVariable(name: "stack_ptr", scope: !11142, file: !1915, line: 453, type: !1017)
!11152 = !DILocalVariable(name: "stack_buf_start", scope: !11142, file: !1915, line: 453, type: !1017)
!11153 = !DILocalVariable(name: "delta", scope: !11142, file: !1915, line: 454, type: !213)
!11154 = !DILocation(line: 0, scope: !11142)
!11155 = !DILocation(line: 465, column: 20, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11142, file: !1915, line: 463, column: 2)
!11157 = !DILocation(line: 466, column: 21, scope: !11156)
!11158 = !DILocation(line: 473, column: 28, scope: !11142)
!11159 = !DILocation(line: 514, column: 33, scope: !11142)
!11160 = !DILocation(line: 514, column: 25, scope: !11142)
!11161 = !DILocation(line: 514, column: 31, scope: !11142)
!11162 = !DILocation(line: 515, column: 25, scope: !11142)
!11163 = !DILocation(line: 515, column: 30, scope: !11142)
!11164 = !DILocation(line: 516, column: 25, scope: !11142)
!11165 = !DILocation(line: 516, column: 31, scope: !11142)
!11166 = !DILocation(line: 520, column: 2, scope: !11142)
!11167 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !1869, file: !1869, line: 331, type: !11168, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11170)
!11168 = !DISubroutineType(types: !11169)
!11169 = !{!1017, !11072}
!11170 = !{!11171}
!11171 = !DILocalVariable(name: "sym", arg: 1, scope: !11167, file: !1869, line: 331, type: !11072)
!11172 = !DILocation(line: 0, scope: !11167)
!11173 = !DILocation(line: 333, column: 21, scope: !11167)
!11174 = !DILocation(line: 333, column: 2, scope: !11167)
!11175 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !11176, file: !11176, line: 40, type: !11177, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11179)
!11176 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11177 = !DISubroutineType(types: !11178)
!11178 = !{null, !11120}
!11179 = !{!11180}
!11180 = !DILocalVariable(name: "thread_base", arg: 1, scope: !11175, file: !11176, line: 40, type: !11120)
!11181 = !DILocation(line: 0, scope: !11175)
!11182 = !DILocation(line: 42, column: 31, scope: !11175)
!11183 = !DILocation(line: 42, column: 2, scope: !11175)
!11184 = !DILocation(line: 43, column: 1, scope: !11175)
!11185 = distinct !DISubprogram(name: "z_init_timeout", scope: !11176, file: !11176, line: 25, type: !1976, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11186)
!11186 = !{!11187}
!11187 = !DILocalVariable(name: "to", arg: 1, scope: !11185, file: !11176, line: 25, type: !1978)
!11188 = !DILocation(line: 0, scope: !11185)
!11189 = !DILocation(line: 27, column: 22, scope: !11185)
!11190 = !DILocation(line: 27, column: 2, scope: !11185)
!11191 = !DILocation(line: 28, column: 1, scope: !11185)
!11192 = distinct !DISubprogram(name: "sys_dnode_init", scope: !234, file: !234, line: 211, type: !11193, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11195)
!11193 = !DISubroutineType(types: !11194)
!11194 = !{null, !2022}
!11195 = !{!11196}
!11196 = !DILocalVariable(name: "node", arg: 1, scope: !11192, file: !234, line: 211, type: !2022)
!11197 = !DILocation(line: 0, scope: !11192)
!11198 = !DILocation(line: 213, column: 8, scope: !11192)
!11199 = !DILocation(line: 213, column: 13, scope: !11192)
!11200 = !DILocation(line: 214, column: 8, scope: !11192)
!11201 = !DILocation(line: 214, column: 13, scope: !11192)
!11202 = !DILocation(line: 215, column: 1, scope: !11192)
!11203 = distinct !DISubprogram(name: "sys_dlist_init", scope: !234, file: !234, line: 197, type: !11204, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11207)
!11204 = !DISubroutineType(types: !11205)
!11205 = !{null, !11206}
!11206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 32)
!11207 = !{!11208}
!11208 = !DILocalVariable(name: "list", arg: 1, scope: !11203, file: !234, line: 197, type: !11206)
!11209 = !DILocation(line: 0, scope: !11203)
!11210 = !DILocation(line: 199, column: 8, scope: !11203)
!11211 = !DILocation(line: 199, column: 13, scope: !11203)
!11212 = !DILocation(line: 200, column: 8, scope: !11203)
!11213 = !DILocation(line: 200, column: 13, scope: !11203)
!11214 = !DILocation(line: 201, column: 1, scope: !11203)
!11215 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !1915, file: !1915, line: 641, type: !11216, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11222)
!11216 = !DISubroutineType(types: !11217)
!11217 = !{!1918, !1919, !11072, !213, !3033, !102, !102, !102, !103, !121, !11218}
!11218 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1418, line: 67, baseType: !11219)
!11219 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1418, line: 65, size: 64, elements: !11220)
!11220 = !{!11221}
!11221 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !11219, file: !1418, line: 66, baseType: !1417, size: 64)
!11222 = !{!11223, !11224, !11225, !11226, !11227, !11228, !11229, !11230, !11231, !11232}
!11223 = !DILocalVariable(name: "new_thread", arg: 1, scope: !11215, file: !1915, line: 641, type: !1919)
!11224 = !DILocalVariable(name: "stack", arg: 2, scope: !11215, file: !1915, line: 642, type: !11072)
!11225 = !DILocalVariable(name: "stack_size", arg: 3, scope: !11215, file: !1915, line: 643, type: !213)
!11226 = !DILocalVariable(name: "entry", arg: 4, scope: !11215, file: !1915, line: 643, type: !3033)
!11227 = !DILocalVariable(name: "p1", arg: 5, scope: !11215, file: !1915, line: 644, type: !102)
!11228 = !DILocalVariable(name: "p2", arg: 6, scope: !11215, file: !1915, line: 644, type: !102)
!11229 = !DILocalVariable(name: "p3", arg: 7, scope: !11215, file: !1915, line: 644, type: !102)
!11230 = !DILocalVariable(name: "prio", arg: 8, scope: !11215, file: !1915, line: 645, type: !103)
!11231 = !DILocalVariable(name: "options", arg: 9, scope: !11215, file: !1915, line: 645, type: !121)
!11232 = !DILocalVariable(name: "delay", arg: 10, scope: !11215, file: !1915, line: 645, type: !11218)
!11233 = !DILocation(line: 0, scope: !11215)
!11234 = !DILocation(line: 649, column: 2, scope: !11215)
!11235 = !DILocation(line: 652, column: 7, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11215, file: !1915, line: 652, column: 6)
!11237 = !DILocation(line: 652, column: 6, scope: !11215)
!11238 = !DILocation(line: 653, column: 3, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11236, file: !1915, line: 652, column: 39)
!11240 = !DILocation(line: 654, column: 2, scope: !11239)
!11241 = !DILocation(line: 656, column: 2, scope: !11215)
!11242 = distinct !DISubprogram(name: "schedule_new_thread", scope: !1915, file: !1915, line: 401, type: !11243, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11245)
!11243 = !DISubroutineType(types: !11244)
!11244 = !{null, !1919, !11218}
!11245 = !{!11246, !11247}
!11246 = !DILocalVariable(name: "thread", arg: 1, scope: !11242, file: !1915, line: 401, type: !1919)
!11247 = !DILocalVariable(name: "delay", arg: 2, scope: !11242, file: !1915, line: 401, type: !11218)
!11248 = !DILocation(line: 0, scope: !11242)
!11249 = !DILocation(line: 404, column: 6, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11242, file: !1915, line: 404, column: 6)
!11251 = !DILocation(line: 404, column: 6, scope: !11242)
!11252 = !DILocation(line: 405, column: 3, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11250, file: !1915, line: 404, column: 38)
!11254 = !DILocation(line: 406, column: 2, scope: !11253)
!11255 = !DILocation(line: 407, column: 3, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11250, file: !1915, line: 406, column: 9)
!11257 = !DILocation(line: 413, column: 1, scope: !11242)
!11258 = distinct !DISubprogram(name: "k_thread_start", scope: !3155, file: !3155, line: 205, type: !11259, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11261)
!11259 = !DISubroutineType(types: !11260)
!11260 = !{null, !1918}
!11261 = !{!11262}
!11262 = !DILocalVariable(name: "thread", arg: 1, scope: !11258, file: !3155, line: 205, type: !1918)
!11263 = !DILocation(line: 0, scope: !11258)
!11264 = !DILocation(line: 214, column: 2, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11258, file: !3155, line: 214, column: 2)
!11266 = !{i64 2152241275}
!11267 = !DILocation(line: 215, column: 2, scope: !11258)
!11268 = !DILocation(line: 216, column: 1, scope: !11258)
!11269 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11176, file: !11176, line: 47, type: !11243, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11270)
!11270 = !{!11271, !11272}
!11271 = !DILocalVariable(name: "thread", arg: 1, scope: !11269, file: !11176, line: 47, type: !1919)
!11272 = !DILocalVariable(name: "ticks", arg: 2, scope: !11269, file: !11176, line: 47, type: !11218)
!11273 = !DILocation(line: 0, scope: !11269)
!11274 = !DILocation(line: 49, column: 30, scope: !11269)
!11275 = !DILocation(line: 49, column: 2, scope: !11269)
!11276 = !DILocation(line: 50, column: 1, scope: !11269)
!11277 = distinct !DISubprogram(name: "z_init_static_threads", scope: !1915, file: !1915, line: 748, type: !2730, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11278)
!11278 = !{!11279, !11297}
!11279 = !DILocalVariable(name: "thread_data", scope: !11280, file: !1915, line: 750, type: !11281)
!11280 = distinct !DILexicalBlock(scope: !11277, file: !1915, line: 750, column: 2)
!11281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11282, size: 32)
!11282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !320, line: 620, size: 384, elements: !11283)
!11283 = !{!11284, !11285, !11286, !11287, !11288, !11289, !11290, !11291, !11292, !11293, !11294, !11296}
!11284 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !11282, file: !320, line: 621, baseType: !1919, size: 32)
!11285 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !11282, file: !320, line: 622, baseType: !11072, size: 32, offset: 32)
!11286 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !11282, file: !320, line: 623, baseType: !32, size: 32, offset: 64)
!11287 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !11282, file: !320, line: 624, baseType: !3033, size: 32, offset: 96)
!11288 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !11282, file: !320, line: 625, baseType: !102, size: 32, offset: 128)
!11289 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !11282, file: !320, line: 626, baseType: !102, size: 32, offset: 160)
!11290 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !11282, file: !320, line: 627, baseType: !102, size: 32, offset: 192)
!11291 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !11282, file: !320, line: 628, baseType: !103, size: 32, offset: 224)
!11292 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !11282, file: !320, line: 629, baseType: !121, size: 32, offset: 256)
!11293 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !11282, file: !320, line: 630, baseType: !675, size: 32, offset: 288)
!11294 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !11282, file: !320, line: 631, baseType: !11295, size: 32, offset: 320)
!11295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 32)
!11296 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !11282, file: !320, line: 632, baseType: !157, size: 32, offset: 352)
!11297 = !DILocalVariable(name: "thread_data", scope: !11298, file: !1915, line: 781, type: !11281)
!11298 = distinct !DILexicalBlock(scope: !11277, file: !1915, line: 781, column: 2)
!11299 = !DILocation(line: 0, scope: !11280)
!11300 = !DILocation(line: 750, column: 2, scope: !11280)
!11301 = !DILocation(line: 780, column: 2, scope: !11277)
!11302 = !DILocation(line: 0, scope: !11298)
!11303 = !DILocation(line: 781, column: 2, scope: !11298)
!11304 = !DILocation(line: 752, column: 17, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11306, file: !1915, line: 750, column: 38)
!11306 = distinct !DILexicalBlock(scope: !11280, file: !1915, line: 750, column: 2)
!11307 = !DILocation(line: 753, column: 17, scope: !11305)
!11308 = !DILocation(line: 754, column: 17, scope: !11305)
!11309 = !DILocation(line: 755, column: 17, scope: !11305)
!11310 = !DILocation(line: 756, column: 17, scope: !11305)
!11311 = !DILocation(line: 757, column: 17, scope: !11305)
!11312 = !DILocation(line: 758, column: 17, scope: !11305)
!11313 = !DILocation(line: 759, column: 17, scope: !11305)
!11314 = !DILocation(line: 760, column: 17, scope: !11305)
!11315 = !DILocation(line: 751, column: 3, scope: !11305)
!11316 = !DILocation(line: 763, column: 16, scope: !11305)
!11317 = !DILocation(line: 763, column: 29, scope: !11305)
!11318 = !DILocation(line: 763, column: 39, scope: !11305)
!11319 = !DILocation(line: 750, column: 2, scope: !11306)
!11320 = !DILocation(line: 750, column: 2, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11306, file: !1915, line: 750, column: 2)
!11322 = distinct !{!11322, !11300, !11323}
!11323 = !DILocation(line: 764, column: 2, scope: !11280)
!11324 = !DILocation(line: 787, column: 2, scope: !11277)
!11325 = !DILocation(line: 788, column: 1, scope: !11277)
!11326 = !DILocation(line: 782, column: 20, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11328, file: !1915, line: 782, column: 7)
!11328 = distinct !DILexicalBlock(scope: !11329, file: !1915, line: 781, column: 38)
!11329 = distinct !DILexicalBlock(scope: !11298, file: !1915, line: 781, column: 2)
!11330 = !DILocation(line: 782, column: 31, scope: !11327)
!11331 = !DILocation(line: 782, column: 7, scope: !11328)
!11332 = !DILocation(line: 783, column: 37, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11327, file: !1915, line: 782, column: 51)
!11334 = !DILocation(line: 784, column: 10, scope: !11333)
!11335 = !DILocation(line: 783, column: 4, scope: !11333)
!11336 = !DILocation(line: 785, column: 3, scope: !11333)
!11337 = !DILocation(line: 781, column: 2, scope: !11329)
!11338 = !DILocation(line: 781, column: 2, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11329, file: !1915, line: 781, column: 2)
!11340 = distinct !{!11340, !11303, !11341}
!11341 = !DILocation(line: 786, column: 2, scope: !11298)
!11342 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !11343, file: !11343, line: 403, type: !11344, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11346)
!11343 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11344 = !DISubroutineType(types: !11345)
!11345 = !{!2023, !2023}
!11346 = !{!11347}
!11347 = !DILocalVariable(name: "t", arg: 1, scope: !11342, file: !11343, line: 403, type: !2023)
!11348 = !DILocation(line: 0, scope: !11342)
!11349 = !DILocalVariable(name: "t", arg: 1, scope: !11350, file: !11343, line: 102, type: !2023)
!11350 = distinct !DISubprogram(name: "z_tmcvt", scope: !11343, file: !11343, line: 102, type: !11351, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11353)
!11351 = !DISubroutineType(types: !11352)
!11352 = !{!2023, !2023, !121, !121, !170, !170, !170, !170}
!11353 = !{!11349, !11354, !11355, !11356, !11357, !11358, !11359, !11360, !11361, !11362, !11363}
!11354 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11350, file: !11343, line: 102, type: !121)
!11355 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11350, file: !11343, line: 103, type: !121)
!11356 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11350, file: !11343, line: 103, type: !170)
!11357 = !DILocalVariable(name: "result32", arg: 5, scope: !11350, file: !11343, line: 104, type: !170)
!11358 = !DILocalVariable(name: "round_up", arg: 6, scope: !11350, file: !11343, line: 104, type: !170)
!11359 = !DILocalVariable(name: "round_off", arg: 7, scope: !11350, file: !11343, line: 105, type: !170)
!11360 = !DILocalVariable(name: "mul_ratio", scope: !11350, file: !11343, line: 107, type: !170)
!11361 = !DILocalVariable(name: "div_ratio", scope: !11350, file: !11343, line: 109, type: !170)
!11362 = !DILocalVariable(name: "off", scope: !11350, file: !11343, line: 116, type: !2023)
!11363 = !DILocalVariable(name: "rdivisor", scope: !11364, file: !11343, line: 119, type: !121)
!11364 = distinct !DILexicalBlock(scope: !11365, file: !11343, line: 118, column: 18)
!11365 = distinct !DILexicalBlock(scope: !11350, file: !11343, line: 118, column: 6)
!11366 = !DILocation(line: 0, scope: !11350, inlinedAt: !11367)
!11367 = distinct !DILocation(line: 406, column: 9, scope: !11342)
!11368 = !DILocation(line: 145, column: 13, scope: !11369, inlinedAt: !11367)
!11369 = distinct !DILexicalBlock(scope: !11370, file: !11343, line: 144, column: 10)
!11370 = distinct !DILexicalBlock(scope: !11371, file: !11343, line: 142, column: 7)
!11371 = distinct !DILexicalBlock(scope: !11372, file: !11343, line: 141, column: 24)
!11372 = distinct !DILexicalBlock(scope: !11373, file: !11343, line: 141, column: 13)
!11373 = distinct !DILexicalBlock(scope: !11350, file: !11343, line: 134, column: 6)
!11374 = !DILocation(line: 406, column: 2, scope: !11342)
!11375 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !1915, file: !1915, line: 817, type: !3031, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11376)
!11376 = !{!11377, !11378, !11379, !11380}
!11377 = !DILocalVariable(name: "entry", arg: 1, scope: !11375, file: !1915, line: 817, type: !3033)
!11378 = !DILocalVariable(name: "p1", arg: 2, scope: !11375, file: !1915, line: 818, type: !102)
!11379 = !DILocalVariable(name: "p2", arg: 3, scope: !11375, file: !1915, line: 818, type: !102)
!11380 = !DILocalVariable(name: "p3", arg: 4, scope: !11375, file: !1915, line: 818, type: !102)
!11381 = !DILocation(line: 0, scope: !11375)
!11382 = !DILocation(line: 822, column: 2, scope: !11375)
!11383 = !DILocation(line: 822, column: 17, scope: !11375)
!11384 = !DILocation(line: 822, column: 30, scope: !11375)
!11385 = !DILocation(line: 823, column: 2, scope: !11375)
!11386 = !DILocation(line: 845, column: 2, scope: !11375)
!11387 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !1915, file: !1915, line: 888, type: !11388, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11390)
!11388 = !DISubroutineType(types: !11389)
!11389 = !{!103, !1919}
!11390 = !{!11391}
!11391 = !DILocalVariable(name: "thread", arg: 1, scope: !11387, file: !1915, line: 888, type: !1919)
!11392 = !DILocation(line: 0, scope: !11387)
!11393 = !DILocation(line: 893, column: 2, scope: !11387)
!11394 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !1915, file: !1915, line: 897, type: !11395, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11397)
!11395 = !DISubroutineType(types: !11396)
!11396 = !{!103, !1919, !32}
!11397 = !{!11398, !11399}
!11398 = !DILocalVariable(name: "thread", arg: 1, scope: !11394, file: !1915, line: 897, type: !1919)
!11399 = !DILocalVariable(name: "options", arg: 2, scope: !11394, file: !1915, line: 897, type: !32)
!11400 = !DILocation(line: 0, scope: !11394)
!11401 = !DILocation(line: 902, column: 2, scope: !11394)
!11402 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !1915, file: !1915, line: 1072, type: !11403, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11408)
!11403 = !DISubroutineType(types: !11404)
!11404 = !{!103, !1918, !11405}
!11405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11406, size: 32)
!11406 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !224, line: 234, baseType: !11407)
!11407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !224, line: 192, elements: !335)
!11408 = !{!11409, !11410}
!11409 = !DILocalVariable(name: "thread", arg: 1, scope: !11402, file: !1915, line: 1072, type: !1918)
!11410 = !DILocalVariable(name: "stats", arg: 2, scope: !11402, file: !1915, line: 1073, type: !11405)
!11411 = !DILocation(line: 0, scope: !11402)
!11412 = !DILocation(line: 1075, column: 14, scope: !11413)
!11413 = distinct !DILexicalBlock(scope: !11402, file: !1915, line: 1075, column: 6)
!11414 = !DILocation(line: 1075, column: 23, scope: !11413)
!11415 = !DILocation(line: 1086, column: 1, scope: !11402)
!11416 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !1915, file: !1915, line: 1088, type: !11417, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2019, retainedNodes: !11419)
!11417 = !DISubroutineType(types: !11418)
!11418 = !{!103, !11405}
!11419 = !{!11420}
!11420 = !DILocalVariable(name: "stats", arg: 1, scope: !11416, file: !1915, line: 1088, type: !11405)
!11421 = !DILocation(line: 0, scope: !11416)
!11422 = !DILocation(line: 1094, column: 12, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11416, file: !1915, line: 1094, column: 6)
!11424 = !DILocation(line: 1120, column: 1, scope: !11416)
!11425 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !11426, file: !11426, line: 20, type: !2730, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2711, retainedNodes: !335)
!11426 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11427 = !DILocation(line: 30, column: 2, scope: !11425)
!11428 = !DILocation(line: 31, column: 1, scope: !11425)
!11429 = distinct !DISubprogram(name: "idle", scope: !11426, file: !11426, line: 33, type: !3036, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2711, retainedNodes: !11430)
!11430 = !{!11431, !11432, !11433}
!11431 = !DILocalVariable(name: "unused1", arg: 1, scope: !11429, file: !11426, line: 33, type: !102)
!11432 = !DILocalVariable(name: "unused2", arg: 2, scope: !11429, file: !11426, line: 33, type: !102)
!11433 = !DILocalVariable(name: "unused3", arg: 3, scope: !11429, file: !11426, line: 33, type: !102)
!11434 = !DILocation(line: 0, scope: !11429)
!11435 = !DILocation(line: 41, column: 2, scope: !11429)
!11436 = !DILocation(line: 55, column: 2, scope: !11437, inlinedAt: !11441)
!11437 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4510, file: !4510, line: 42, type: !4511, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2711, retainedNodes: !11438)
!11438 = !{!11439, !11440}
!11439 = !DILocalVariable(name: "key", scope: !11437, file: !4510, line: 44, type: !32)
!11440 = !DILocalVariable(name: "tmp", scope: !11437, file: !4510, line: 53, type: !32)
!11441 = distinct !DILocation(line: 62, column: 10, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11429, file: !11426, line: 41, column: 15)
!11443 = !{i64 1648735}
!11444 = !DILocation(line: 0, scope: !11437, inlinedAt: !11441)
!11445 = !DILocation(line: 86, column: 3, scope: !11442)
!11446 = distinct !{!11446, !11435, !11447}
!11447 = !DILocation(line: 105, column: 2, scope: !11429)
!11448 = distinct !DISubprogram(name: "k_cpu_idle", scope: !320, file: !320, line: 5627, type: !2730, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2711, retainedNodes: !335)
!11449 = !DILocation(line: 5629, column: 2, scope: !11448)
!11450 = !DILocation(line: 5630, column: 1, scope: !11448)
!11451 = !DISubprogram(name: "arch_cpu_idle", scope: !3034, file: !3034, line: 167, type: !2730, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !335)
!11452 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2149, file: !2149, line: 93, type: !11453, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11455)
!11453 = !DISubroutineType(types: !11454)
!11454 = !{!675, !2044, !2044}
!11455 = !{!11456, !11457, !11458, !11459}
!11456 = !DILocalVariable(name: "thread_1", arg: 1, scope: !11452, file: !2149, line: 93, type: !2044)
!11457 = !DILocalVariable(name: "thread_2", arg: 2, scope: !11452, file: !2149, line: 94, type: !2044)
!11458 = !DILocalVariable(name: "b1", scope: !11452, file: !2149, line: 97, type: !675)
!11459 = !DILocalVariable(name: "b2", scope: !11452, file: !2149, line: 98, type: !675)
!11460 = !DILocation(line: 0, scope: !11452)
!11461 = !DILocation(line: 97, column: 30, scope: !11452)
!11462 = !DILocation(line: 98, column: 30, scope: !11452)
!11463 = !DILocation(line: 100, column: 9, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11452, file: !2149, line: 100, column: 6)
!11465 = !DILocation(line: 100, column: 6, scope: !11452)
!11466 = !DILocation(line: 125, column: 1, scope: !11452)
!11467 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2149, file: !2149, line: 428, type: !11468, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11470)
!11468 = !DISubroutineType(types: !11469)
!11469 = !{null, !2044}
!11470 = !{!11471}
!11471 = !DILocalVariable(name: "curr", arg: 1, scope: !11467, file: !2149, line: 428, type: !2044)
!11472 = !DILocation(line: 0, scope: !11467)
!11473 = !DILocation(line: 434, column: 6, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11467, file: !2149, line: 434, column: 6)
!11475 = !DILocation(line: 434, column: 23, scope: !11474)
!11476 = !DILocation(line: 434, column: 6, scope: !11467)
!11477 = !DILocation(line: 435, column: 50, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11474, file: !2149, line: 434, column: 29)
!11479 = !DILocation(line: 435, column: 48, scope: !11478)
!11480 = !DILocation(line: 435, column: 29, scope: !11478)
!11481 = !DILocation(line: 436, column: 24, scope: !11478)
!11482 = !DILocation(line: 436, column: 3, scope: !11478)
!11483 = !DILocation(line: 437, column: 2, scope: !11478)
!11484 = !DILocation(line: 438, column: 1, scope: !11467)
!11485 = distinct !DISubprogram(name: "slice_time", scope: !2149, file: !2149, line: 407, type: !11486, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11488)
!11486 = !DISubroutineType(types: !11487)
!11487 = !{!103, !2044}
!11488 = !{!11489, !11490}
!11489 = !DILocalVariable(name: "curr", arg: 1, scope: !11485, file: !2149, line: 407, type: !2044)
!11490 = !DILocalVariable(name: "ret", scope: !11485, file: !2149, line: 409, type: !103)
!11491 = !DILocation(line: 0, scope: !11485)
!11492 = !DILocation(line: 409, column: 12, scope: !11485)
!11493 = !DILocation(line: 416, column: 2, scope: !11485)
!11494 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2149, file: !2149, line: 440, type: !11495, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11497)
!11495 = !DISubroutineType(types: !11496)
!11496 = !{null, !675, !103}
!11497 = !{!11498, !11499, !11500, !11506}
!11498 = !DILocalVariable(name: "slice", arg: 1, scope: !11494, file: !2149, line: 440, type: !675)
!11499 = !DILocalVariable(name: "prio", arg: 2, scope: !11494, file: !2149, line: 440, type: !103)
!11500 = !DILocalVariable(name: "__i", scope: !11501, file: !2149, line: 442, type: !11502)
!11501 = distinct !DILexicalBlock(scope: !11494, file: !2149, line: 442, column: 2)
!11502 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !11503)
!11503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !11504)
!11504 = !{!11505}
!11505 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11503, file: !334, line: 33, baseType: !103, size: 32)
!11506 = !DILocalVariable(name: "__key", scope: !11501, file: !2149, line: 442, type: !11502)
!11507 = !DILocation(line: 0, scope: !11494)
!11508 = !DILocation(line: 0, scope: !11501)
!11509 = !DILocalVariable(name: "l", arg: 1, scope: !11510, file: !334, line: 136, type: !11513)
!11510 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !11511, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11514)
!11511 = !DISubroutineType(types: !11512)
!11512 = !{!11502, !11513}
!11513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 32)
!11514 = !{!11509, !11515}
!11515 = !DILocalVariable(name: "k", scope: !11510, file: !334, line: 139, type: !11502)
!11516 = !DILocation(line: 0, scope: !11510, inlinedAt: !11517)
!11517 = distinct !DILocation(line: 442, column: 2, scope: !11501)
!11518 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !11523)
!11519 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4510, file: !4510, line: 42, type: !4511, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11520)
!11520 = !{!11521, !11522}
!11521 = !DILocalVariable(name: "key", scope: !11519, file: !4510, line: 44, type: !32)
!11522 = !DILocalVariable(name: "tmp", scope: !11519, file: !4510, line: 53, type: !32)
!11523 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !11517)
!11524 = !{i64 1692706}
!11525 = !DILocation(line: 0, scope: !11519, inlinedAt: !11523)
!11526 = !DILocation(line: 443, column: 29, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11528, file: !2149, line: 442, column: 26)
!11528 = distinct !DILexicalBlock(scope: !11501, file: !2149, line: 442, column: 2)
!11529 = !DILocation(line: 444, column: 17, scope: !11527)
!11530 = !DILocation(line: 445, column: 51, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11527, file: !2149, line: 445, column: 7)
!11532 = !DILocation(line: 445, column: 7, scope: !11527)
!11533 = !DILocation(line: 0, scope: !11527)
!11534 = !DILocation(line: 451, column: 18, scope: !11527)
!11535 = !DILocation(line: 452, column: 3, scope: !11527)
!11536 = !DILocalVariable(name: "key", arg: 2, scope: !11537, file: !334, line: 190, type: !11502)
!11537 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !11538, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11540)
!11538 = !DISubroutineType(types: !11539)
!11539 = !{null, !11513, !11502}
!11540 = !{!11541, !11536}
!11541 = !DILocalVariable(name: "l", arg: 1, scope: !11537, file: !334, line: 189, type: !11513)
!11542 = !DILocation(line: 0, scope: !11537, inlinedAt: !11543)
!11543 = distinct !DILocation(line: 442, column: 2, scope: !11528)
!11544 = !DILocalVariable(name: "key", arg: 1, scope: !11545, file: !4510, line: 84, type: !32)
!11545 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4510, file: !4510, line: 84, type: !4521, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11546)
!11546 = !{!11544}
!11547 = !DILocation(line: 0, scope: !11545, inlinedAt: !11548)
!11548 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !11543)
!11549 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !11548)
!11550 = !{i64 1693523}
!11551 = !DILocation(line: 454, column: 1, scope: !11494)
!11552 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !11343, file: !11343, line: 389, type: !5671, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11553)
!11553 = !{!11554}
!11554 = !DILocalVariable(name: "t", arg: 1, scope: !11552, file: !11343, line: 389, type: !121)
!11555 = !DILocation(line: 0, scope: !11552)
!11556 = !DILocalVariable(name: "t", arg: 1, scope: !11557, file: !11343, line: 102, type: !2023)
!11557 = distinct !DISubprogram(name: "z_tmcvt", scope: !11343, file: !11343, line: 102, type: !11351, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11558)
!11558 = !{!11556, !11559, !11560, !11561, !11562, !11563, !11564, !11565, !11566, !11567, !11568}
!11559 = !DILocalVariable(name: "from_hz", arg: 2, scope: !11557, file: !11343, line: 102, type: !121)
!11560 = !DILocalVariable(name: "to_hz", arg: 3, scope: !11557, file: !11343, line: 103, type: !121)
!11561 = !DILocalVariable(name: "const_hz", arg: 4, scope: !11557, file: !11343, line: 103, type: !170)
!11562 = !DILocalVariable(name: "result32", arg: 5, scope: !11557, file: !11343, line: 104, type: !170)
!11563 = !DILocalVariable(name: "round_up", arg: 6, scope: !11557, file: !11343, line: 104, type: !170)
!11564 = !DILocalVariable(name: "round_off", arg: 7, scope: !11557, file: !11343, line: 105, type: !170)
!11565 = !DILocalVariable(name: "mul_ratio", scope: !11557, file: !11343, line: 107, type: !170)
!11566 = !DILocalVariable(name: "div_ratio", scope: !11557, file: !11343, line: 109, type: !170)
!11567 = !DILocalVariable(name: "off", scope: !11557, file: !11343, line: 116, type: !2023)
!11568 = !DILocalVariable(name: "rdivisor", scope: !11569, file: !11343, line: 119, type: !121)
!11569 = distinct !DILexicalBlock(scope: !11570, file: !11343, line: 118, column: 18)
!11570 = distinct !DILexicalBlock(scope: !11557, file: !11343, line: 118, column: 6)
!11571 = !DILocation(line: 0, scope: !11557, inlinedAt: !11572)
!11572 = distinct !DILocation(line: 392, column: 9, scope: !11552)
!11573 = !DILocation(line: 143, column: 25, scope: !11574, inlinedAt: !11572)
!11574 = distinct !DILexicalBlock(scope: !11575, file: !11343, line: 142, column: 17)
!11575 = distinct !DILexicalBlock(scope: !11576, file: !11343, line: 142, column: 7)
!11576 = distinct !DILexicalBlock(scope: !11577, file: !11343, line: 141, column: 24)
!11577 = distinct !DILexicalBlock(scope: !11578, file: !11343, line: 141, column: 13)
!11578 = distinct !DILexicalBlock(scope: !11557, file: !11343, line: 134, column: 6)
!11579 = !DILocation(line: 392, column: 2, scope: !11552)
!11580 = distinct !DISubprogram(name: "z_time_slice", scope: !2149, file: !2149, line: 502, type: !6417, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11581)
!11581 = !{!11582, !11583}
!11582 = !DILocalVariable(name: "ticks", arg: 1, scope: !11580, file: !2149, line: 502, type: !103)
!11583 = !DILocalVariable(name: "key", scope: !11580, file: !2149, line: 511, type: !11502)
!11584 = !DILocation(line: 0, scope: !11580)
!11585 = !DILocation(line: 0, scope: !11510, inlinedAt: !11586)
!11586 = distinct !DILocation(line: 511, column: 25, scope: !11580)
!11587 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !11588)
!11588 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !11586)
!11589 = !DILocation(line: 0, scope: !11519, inlinedAt: !11588)
!11590 = !DILocation(line: 514, column: 6, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11580, file: !2149, line: 514, column: 6)
!11592 = !DILocation(line: 514, column: 25, scope: !11591)
!11593 = !DILocation(line: 514, column: 22, scope: !11591)
!11594 = !DILocation(line: 514, column: 6, scope: !11580)
!11595 = !DILocation(line: 515, column: 3, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11591, file: !2149, line: 514, column: 35)
!11597 = !DILocation(line: 0, scope: !11537, inlinedAt: !11598)
!11598 = distinct !DILocation(line: 516, column: 3, scope: !11596)
!11599 = !DILocation(line: 0, scope: !11545, inlinedAt: !11600)
!11600 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !11598)
!11601 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !11600)
!11602 = !DILocation(line: 517, column: 3, scope: !11596)
!11603 = !DILocation(line: 519, column: 18, scope: !11580)
!11604 = !DILocation(line: 522, column: 6, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11580, file: !2149, line: 522, column: 6)
!11606 = !DILocation(line: 522, column: 27, scope: !11605)
!11607 = !DILocation(line: 522, column: 30, scope: !11605)
!11608 = !DILocation(line: 522, column: 6, scope: !11580)
!11609 = !DILocation(line: 523, column: 30, scope: !11610)
!11610 = distinct !DILexicalBlock(scope: !11611, file: !2149, line: 523, column: 7)
!11611 = distinct !DILexicalBlock(scope: !11605, file: !2149, line: 522, column: 51)
!11612 = !DILocation(line: 523, column: 13, scope: !11610)
!11613 = !DILocation(line: 523, column: 7, scope: !11611)
!11614 = !DILocation(line: 530, column: 10, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11610, file: !2149, line: 523, column: 43)
!11616 = !DILocation(line: 531, column: 3, scope: !11615)
!11617 = !DILocation(line: 532, column: 30, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11610, file: !2149, line: 531, column: 10)
!11619 = !DILocation(line: 535, column: 29, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11605, file: !2149, line: 534, column: 9)
!11621 = !DILocation(line: 0, scope: !11537, inlinedAt: !11622)
!11622 = distinct !DILocation(line: 537, column: 2, scope: !11580)
!11623 = !DILocation(line: 0, scope: !11545, inlinedAt: !11624)
!11624 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !11622)
!11625 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !11624)
!11626 = !DILocation(line: 538, column: 1, scope: !11580)
!11627 = distinct !DISubprogram(name: "sliceable", scope: !2149, file: !2149, line: 468, type: !11628, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11630)
!11628 = !DISubroutineType(types: !11629)
!11629 = !{!170, !2044}
!11630 = !{!11631, !11632}
!11631 = !DILocalVariable(name: "thread", arg: 1, scope: !11627, file: !2149, line: 468, type: !2044)
!11632 = !DILocalVariable(name: "ret", scope: !11627, file: !2149, line: 470, type: !170)
!11633 = !DILocation(line: 0, scope: !11627)
!11634 = !DILocation(line: 470, column: 13, scope: !11627)
!11635 = !DILocation(line: 471, column: 3, scope: !11627)
!11636 = !DILocation(line: 471, column: 7, scope: !11627)
!11637 = !DILocation(line: 472, column: 3, scope: !11627)
!11638 = !DILocation(line: 472, column: 37, scope: !11627)
!11639 = !DILocation(line: 472, column: 24, scope: !11627)
!11640 = !DILocation(line: 472, column: 43, scope: !11627)
!11641 = !DILocation(line: 472, column: 7, scope: !11627)
!11642 = !DILocation(line: 473, column: 3, scope: !11627)
!11643 = !DILocation(line: 473, column: 7, scope: !11627)
!11644 = !DILocation(line: 473, column: 6, scope: !11627)
!11645 = !DILocation(line: 479, column: 2, scope: !11627)
!11646 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2149, file: !2149, line: 482, type: !11647, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11649)
!11647 = !DISubroutineType(types: !11648)
!11648 = !{!11502, !11502}
!11649 = !{!11650, !11651}
!11650 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !11646, file: !2149, line: 482, type: !11502)
!11651 = !DILocalVariable(name: "curr", scope: !11646, file: !2149, line: 484, type: !2044)
!11652 = !DILocation(line: 0, scope: !11646)
!11653 = !DILocation(line: 484, column: 26, scope: !11646)
!11654 = !DILocation(line: 493, column: 7, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11646, file: !2149, line: 493, column: 6)
!11656 = !DILocation(line: 493, column: 6, scope: !11646)
!11657 = !DILocation(line: 494, column: 3, scope: !11658)
!11658 = distinct !DILexicalBlock(scope: !11655, file: !2149, line: 493, column: 49)
!11659 = !DILocation(line: 495, column: 2, scope: !11658)
!11660 = !DILocation(line: 496, column: 2, scope: !11646)
!11661 = !DILocation(line: 499, column: 1, scope: !11646)
!11662 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !10782, file: !10782, line: 106, type: !11628, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11663)
!11663 = !{!11664, !11665}
!11664 = !DILocalVariable(name: "thread", arg: 1, scope: !11662, file: !10782, line: 106, type: !2044)
!11665 = !DILocalVariable(name: "state", scope: !11662, file: !10782, line: 108, type: !167)
!11666 = !DILocation(line: 0, scope: !11662)
!11667 = !DILocation(line: 108, column: 31, scope: !11662)
!11668 = !DILocation(line: 110, column: 16, scope: !11662)
!11669 = !DILocation(line: 111, column: 41, scope: !11662)
!11670 = !DILocation(line: 110, column: 2, scope: !11662)
!11671 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2149, file: !2149, line: 393, type: !11468, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11672)
!11672 = !{!11673}
!11673 = !DILocalVariable(name: "thread", arg: 1, scope: !11671, file: !2149, line: 393, type: !2044)
!11674 = !DILocation(line: 0, scope: !11671)
!11675 = !DILocation(line: 395, column: 6, scope: !11676)
!11676 = distinct !DILexicalBlock(scope: !11671, file: !2149, line: 395, column: 6)
!11677 = !DILocation(line: 395, column: 6, scope: !11671)
!11678 = !DILocalVariable(name: "thread", arg: 1, scope: !11679, file: !2149, line: 264, type: !2044)
!11679 = distinct !DISubprogram(name: "dequeue_thread", scope: !2149, file: !2149, line: 264, type: !11468, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11680)
!11680 = !{!11678}
!11681 = !DILocation(line: 0, scope: !11679, inlinedAt: !11682)
!11682 = distinct !DILocation(line: 396, column: 3, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11676, file: !2149, line: 395, column: 34)
!11684 = !DILocation(line: 266, column: 15, scope: !11679, inlinedAt: !11682)
!11685 = !DILocation(line: 266, column: 28, scope: !11679, inlinedAt: !11682)
!11686 = !DILocalVariable(name: "thread", arg: 1, scope: !11687, file: !2149, line: 232, type: !2044)
!11687 = distinct !DISubprogram(name: "runq_remove", scope: !2149, file: !2149, line: 232, type: !11468, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11688)
!11688 = !{!11686}
!11689 = !DILocation(line: 0, scope: !11687, inlinedAt: !11690)
!11690 = distinct !DILocation(line: 268, column: 3, scope: !11691, inlinedAt: !11682)
!11691 = distinct !DILexicalBlock(scope: !11692, file: !2149, line: 267, column: 35)
!11692 = distinct !DILexicalBlock(scope: !11679, file: !2149, line: 267, column: 6)
!11693 = !DILocation(line: 234, column: 2, scope: !11687, inlinedAt: !11690)
!11694 = !DILocation(line: 397, column: 2, scope: !11683)
!11695 = !DILocalVariable(name: "thread", arg: 1, scope: !11696, file: !2149, line: 250, type: !2044)
!11696 = distinct !DISubprogram(name: "queue_thread", scope: !2149, file: !2149, line: 250, type: !11468, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11697)
!11697 = !{!11695}
!11698 = !DILocation(line: 0, scope: !11696, inlinedAt: !11699)
!11699 = distinct !DILocation(line: 398, column: 2, scope: !11671)
!11700 = !DILocation(line: 252, column: 15, scope: !11696, inlinedAt: !11699)
!11701 = !DILocation(line: 252, column: 28, scope: !11696, inlinedAt: !11699)
!11702 = !DILocalVariable(name: "thread", arg: 1, scope: !11703, file: !2149, line: 227, type: !2044)
!11703 = distinct !DISubprogram(name: "runq_add", scope: !2149, file: !2149, line: 227, type: !11468, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11704)
!11704 = !{!11702}
!11705 = !DILocation(line: 0, scope: !11703, inlinedAt: !11706)
!11706 = distinct !DILocation(line: 254, column: 3, scope: !11707, inlinedAt: !11699)
!11707 = distinct !DILexicalBlock(scope: !11708, file: !2149, line: 253, column: 35)
!11708 = distinct !DILexicalBlock(scope: !11696, file: !2149, line: 253, column: 6)
!11709 = !DILocalVariable(name: "pq", arg: 1, scope: !11710, file: !2149, line: 181, type: !11713)
!11710 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2149, file: !2149, line: 181, type: !11711, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11714)
!11711 = !DISubroutineType(types: !11712)
!11712 = !{null, !11713, !2044}
!11713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 32)
!11714 = !{!11709, !11715, !11716}
!11715 = !DILocalVariable(name: "thread", arg: 2, scope: !11710, file: !2149, line: 182, type: !2044)
!11716 = !DILocalVariable(name: "t", scope: !11710, file: !2149, line: 184, type: !2044)
!11717 = !DILocation(line: 0, scope: !11710, inlinedAt: !11718)
!11718 = distinct !DILocation(line: 229, column: 2, scope: !11703, inlinedAt: !11706)
!11719 = !DILocation(line: 188, column: 2, scope: !11720, inlinedAt: !11718)
!11720 = distinct !DILexicalBlock(scope: !11710, file: !2149, line: 188, column: 2)
!11721 = !DILocation(line: 188, column: 2, scope: !11722, inlinedAt: !11718)
!11722 = distinct !DILexicalBlock(scope: !11720, file: !2149, line: 188, column: 2)
!11723 = !DILocation(line: 0, scope: !11720, inlinedAt: !11718)
!11724 = !DILocation(line: 189, column: 7, scope: !11725, inlinedAt: !11718)
!11725 = distinct !DILexicalBlock(scope: !11726, file: !2149, line: 189, column: 7)
!11726 = distinct !DILexicalBlock(scope: !11722, file: !2149, line: 188, column: 56)
!11727 = !DILocation(line: 189, column: 35, scope: !11725, inlinedAt: !11718)
!11728 = !DILocation(line: 189, column: 7, scope: !11726, inlinedAt: !11718)
!11729 = !DILocation(line: 191, column: 21, scope: !11730, inlinedAt: !11718)
!11730 = distinct !DILexicalBlock(scope: !11725, file: !2149, line: 189, column: 40)
!11731 = !DILocation(line: 190, column: 4, scope: !11730, inlinedAt: !11718)
!11732 = !DILocation(line: 192, column: 4, scope: !11730, inlinedAt: !11718)
!11733 = distinct !{!11733, !11719, !11734}
!11734 = !DILocation(line: 194, column: 2, scope: !11720, inlinedAt: !11718)
!11735 = !DILocation(line: 196, column: 37, scope: !11710, inlinedAt: !11718)
!11736 = !DILocation(line: 196, column: 2, scope: !11710, inlinedAt: !11718)
!11737 = !DILocation(line: 197, column: 1, scope: !11710, inlinedAt: !11718)
!11738 = !DILocation(line: 399, column: 25, scope: !11671)
!11739 = !DILocation(line: 399, column: 22, scope: !11671)
!11740 = !DILocation(line: 399, column: 2, scope: !11671)
!11741 = !DILocation(line: 400, column: 1, scope: !11671)
!11742 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !10782, file: !10782, line: 136, type: !11628, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11743)
!11743 = !{!11744}
!11744 = !DILocalVariable(name: "thread", arg: 1, scope: !11742, file: !10782, line: 136, type: !2044)
!11745 = !DILocation(line: 0, scope: !11742)
!11746 = !DILocation(line: 138, column: 9, scope: !11742)
!11747 = !DILocation(line: 138, column: 2, scope: !11742)
!11748 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2149, file: !2149, line: 1137, type: !11711, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11749)
!11749 = !{!11750, !11751}
!11750 = !DILocalVariable(name: "pq", arg: 1, scope: !11748, file: !2149, line: 1137, type: !11713)
!11751 = !DILocalVariable(name: "thread", arg: 2, scope: !11748, file: !2149, line: 1137, type: !2044)
!11752 = !DILocation(line: 0, scope: !11748)
!11753 = !DILocation(line: 1141, column: 33, scope: !11748)
!11754 = !DILocation(line: 1141, column: 2, scope: !11748)
!11755 = !DILocation(line: 1142, column: 1, scope: !11748)
!11756 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !234, file: !234, line: 294, type: !11757, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11759)
!11757 = !DISubroutineType(types: !11758)
!11758 = !{!2145, !11713}
!11759 = !{!11760}
!11760 = !DILocalVariable(name: "list", arg: 1, scope: !11756, file: !234, line: 294, type: !11713)
!11761 = !DILocation(line: 0, scope: !11756)
!11762 = !DILocation(line: 296, column: 9, scope: !11756)
!11763 = !DILocation(line: 296, column: 49, scope: !11756)
!11764 = !DILocation(line: 296, column: 2, scope: !11756)
!11765 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !234, file: !234, line: 443, type: !11766, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11768)
!11766 = !DISubroutineType(types: !11767)
!11767 = !{null, !2145, !2145}
!11768 = !{!11769, !11770, !11771}
!11769 = !DILocalVariable(name: "successor", arg: 1, scope: !11765, file: !234, line: 443, type: !2145)
!11770 = !DILocalVariable(name: "node", arg: 2, scope: !11765, file: !234, line: 443, type: !2145)
!11771 = !DILocalVariable(name: "prev", scope: !11765, file: !234, line: 445, type: !11772)
!11772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2145)
!11773 = !DILocation(line: 0, scope: !11765)
!11774 = !DILocation(line: 445, column: 39, scope: !11765)
!11775 = !DILocation(line: 447, column: 8, scope: !11765)
!11776 = !DILocation(line: 447, column: 13, scope: !11765)
!11777 = !DILocation(line: 448, column: 8, scope: !11765)
!11778 = !DILocation(line: 448, column: 13, scope: !11765)
!11779 = !DILocation(line: 449, column: 8, scope: !11765)
!11780 = !DILocation(line: 449, column: 13, scope: !11765)
!11781 = !DILocation(line: 450, column: 18, scope: !11765)
!11782 = !DILocation(line: 451, column: 1, scope: !11765)
!11783 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !234, file: !234, line: 341, type: !11784, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11786)
!11784 = !DISubroutineType(types: !11785)
!11785 = !{!2145, !11713, !2145}
!11786 = !{!11787, !11788}
!11787 = !DILocalVariable(name: "list", arg: 1, scope: !11783, file: !234, line: 341, type: !11713)
!11788 = !DILocalVariable(name: "node", arg: 2, scope: !11783, file: !234, line: 342, type: !2145)
!11789 = !DILocation(line: 0, scope: !11783)
!11790 = !DILocation(line: 344, column: 15, scope: !11783)
!11791 = !DILocation(line: 344, column: 9, scope: !11783)
!11792 = !DILocation(line: 344, column: 26, scope: !11783)
!11793 = !DILocation(line: 344, column: 2, scope: !11783)
!11794 = distinct !DISubprogram(name: "sys_dlist_append", scope: !234, file: !234, line: 404, type: !11795, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11797)
!11795 = !DISubroutineType(types: !11796)
!11796 = !{null, !11713, !2145}
!11797 = !{!11798, !11799, !11800}
!11798 = !DILocalVariable(name: "list", arg: 1, scope: !11794, file: !234, line: 404, type: !11713)
!11799 = !DILocalVariable(name: "node", arg: 2, scope: !11794, file: !234, line: 404, type: !2145)
!11800 = !DILocalVariable(name: "tail", scope: !11794, file: !234, line: 406, type: !11772)
!11801 = !DILocation(line: 0, scope: !11794)
!11802 = !DILocation(line: 406, column: 34, scope: !11794)
!11803 = !DILocation(line: 408, column: 8, scope: !11794)
!11804 = !DILocation(line: 408, column: 13, scope: !11794)
!11805 = !DILocation(line: 409, column: 8, scope: !11794)
!11806 = !DILocation(line: 409, column: 13, scope: !11794)
!11807 = !DILocation(line: 411, column: 8, scope: !11794)
!11808 = !DILocation(line: 411, column: 13, scope: !11794)
!11809 = !DILocation(line: 412, column: 13, scope: !11794)
!11810 = !DILocation(line: 413, column: 1, scope: !11794)
!11811 = distinct !DISubprogram(name: "update_cache", scope: !2149, file: !2149, line: 559, type: !6417, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11812)
!11812 = !{!11813, !11814}
!11813 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !11811, file: !2149, line: 559, type: !103)
!11814 = !DILocalVariable(name: "thread", scope: !11811, file: !2149, line: 562, type: !2044)
!11815 = !DILocation(line: 0, scope: !11811)
!11816 = !DILocation(line: 239, column: 9, scope: !11817, inlinedAt: !11820)
!11817 = distinct !DISubprogram(name: "runq_best", scope: !2149, file: !2149, line: 237, type: !11818, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !335)
!11818 = !DISubroutineType(types: !11819)
!11819 = !{!2044}
!11820 = distinct !DILocation(line: 314, column: 28, scope: !11821, inlinedAt: !11824)
!11821 = distinct !DISubprogram(name: "next_up", scope: !2149, file: !2149, line: 312, type: !11818, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11822)
!11822 = !{!11823}
!11823 = !DILocalVariable(name: "thread", scope: !11821, file: !2149, line: 314, type: !2044)
!11824 = distinct !DILocation(line: 562, column: 28, scope: !11811)
!11825 = !DILocation(line: 0, scope: !11821, inlinedAt: !11824)
!11826 = !DILocation(line: 340, column: 17, scope: !11821, inlinedAt: !11824)
!11827 = !DILocation(line: 340, column: 9, scope: !11821, inlinedAt: !11824)
!11828 = !DILocalVariable(name: "thread", arg: 1, scope: !11829, file: !2149, line: 127, type: !2044)
!11829 = distinct !DISubprogram(name: "should_preempt", scope: !2149, file: !2149, line: 127, type: !11830, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11832)
!11830 = !DISubroutineType(types: !11831)
!11831 = !{!170, !2044, !103}
!11832 = !{!11828, !11833}
!11833 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !11829, file: !2149, line: 128, type: !103)
!11834 = !DILocation(line: 0, scope: !11829, inlinedAt: !11835)
!11835 = distinct !DILocation(line: 564, column: 6, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11811, file: !2149, line: 564, column: 6)
!11837 = !DILocation(line: 133, column: 17, scope: !11838, inlinedAt: !11835)
!11838 = distinct !DILexicalBlock(scope: !11829, file: !2149, line: 133, column: 6)
!11839 = !DILocation(line: 0, scope: !11836)
!11840 = !DILocation(line: 133, column: 6, scope: !11829, inlinedAt: !11835)
!11841 = !DILocation(line: 140, column: 6, scope: !11842, inlinedAt: !11835)
!11842 = distinct !DILexicalBlock(scope: !11829, file: !2149, line: 140, column: 6)
!11843 = !DILocation(line: 140, column: 6, scope: !11829, inlinedAt: !11835)
!11844 = !DILocation(line: 150, column: 9, scope: !11845, inlinedAt: !11835)
!11845 = distinct !DILexicalBlock(scope: !11829, file: !2149, line: 149, column: 6)
!11846 = !DILocation(line: 149, column: 6, scope: !11829, inlinedAt: !11835)
!11847 = !DILocation(line: 157, column: 6, scope: !11848, inlinedAt: !11835)
!11848 = distinct !DILexicalBlock(scope: !11829, file: !2149, line: 157, column: 6)
!11849 = !DILocation(line: 564, column: 6, scope: !11811)
!11850 = !DILocation(line: 566, column: 14, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11852, file: !2149, line: 566, column: 7)
!11852 = distinct !DILexicalBlock(scope: !11836, file: !2149, line: 564, column: 42)
!11853 = !DILocation(line: 566, column: 7, scope: !11852)
!11854 = !DILocation(line: 567, column: 4, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11851, file: !2149, line: 566, column: 27)
!11856 = !DILocation(line: 568, column: 3, scope: !11855)
!11857 = !DILocation(line: 585, column: 1, scope: !11811)
!11858 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2149, file: !2149, line: 1144, type: !11859, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11861)
!11859 = !DISubroutineType(types: !11860)
!11860 = !{!2044, !11713}
!11861 = !{!11862, !11863, !11864}
!11862 = !DILocalVariable(name: "pq", arg: 1, scope: !11858, file: !2149, line: 1144, type: !11713)
!11863 = !DILocalVariable(name: "thread", scope: !11858, file: !2149, line: 1146, type: !2044)
!11864 = !DILocalVariable(name: "n", scope: !11858, file: !2149, line: 1147, type: !2145)
!11865 = !DILocation(line: 0, scope: !11858)
!11866 = !DILocation(line: 1147, column: 19, scope: !11858)
!11867 = !DILocation(line: 1152, column: 2, scope: !11858)
!11868 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !10782, file: !10782, line: 115, type: !11628, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11869)
!11869 = !{!11870}
!11870 = !DILocalVariable(name: "thread", arg: 1, scope: !11868, file: !10782, line: 115, type: !2044)
!11871 = !DILocation(line: 0, scope: !11868)
!11872 = !DILocation(line: 117, column: 46, scope: !11868)
!11873 = !DILocation(line: 117, column: 10, scope: !11868)
!11874 = !DILocation(line: 117, column: 9, scope: !11868)
!11875 = !DILocation(line: 117, column: 2, scope: !11868)
!11876 = distinct !DISubprogram(name: "is_preempt", scope: !2149, file: !2149, line: 62, type: !11486, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11877)
!11877 = !{!11878}
!11878 = !DILocalVariable(name: "thread", arg: 1, scope: !11876, file: !2149, line: 62, type: !2044)
!11879 = !DILocation(line: 0, scope: !11876)
!11880 = !DILocation(line: 65, column: 22, scope: !11876)
!11881 = !DILocation(line: 65, column: 30, scope: !11876)
!11882 = !DILocation(line: 65, column: 2, scope: !11876)
!11883 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11176, file: !11176, line: 35, type: !11884, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11888)
!11884 = !DISubroutineType(types: !11885)
!11885 = !{!170, !11886}
!11886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11887, size: 32)
!11887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2095)
!11888 = !{!11889}
!11889 = !DILocalVariable(name: "to", arg: 1, scope: !11883, file: !11176, line: 35, type: !11886)
!11890 = !DILocation(line: 0, scope: !11883)
!11891 = !DILocation(line: 37, column: 35, scope: !11883)
!11892 = !DILocation(line: 37, column: 10, scope: !11883)
!11893 = !DILocation(line: 37, column: 9, scope: !11883)
!11894 = !DILocation(line: 37, column: 2, scope: !11883)
!11895 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !234, file: !234, line: 225, type: !11896, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11900)
!11896 = !DISubroutineType(types: !11897)
!11897 = !{!170, !11898}
!11898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11899, size: 32)
!11899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2054)
!11900 = !{!11901}
!11901 = !DILocalVariable(name: "node", arg: 1, scope: !11895, file: !234, line: 225, type: !11898)
!11902 = !DILocation(line: 0, scope: !11895)
!11903 = !DILocation(line: 227, column: 15, scope: !11895)
!11904 = !DILocation(line: 227, column: 20, scope: !11895)
!11905 = !DILocation(line: 227, column: 2, scope: !11895)
!11906 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !234, file: !234, line: 325, type: !11784, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11907)
!11907 = !{!11908, !11909}
!11908 = !DILocalVariable(name: "list", arg: 1, scope: !11906, file: !234, line: 325, type: !11713)
!11909 = !DILocalVariable(name: "node", arg: 2, scope: !11906, file: !234, line: 326, type: !2145)
!11910 = !DILocation(line: 0, scope: !11906)
!11911 = !DILocation(line: 328, column: 24, scope: !11906)
!11912 = !DILocation(line: 328, column: 15, scope: !11906)
!11913 = !DILocation(line: 328, column: 9, scope: !11906)
!11914 = !DILocation(line: 328, column: 45, scope: !11906)
!11915 = !DILocation(line: 328, column: 2, scope: !11906)
!11916 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !234, file: !234, line: 266, type: !11917, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11919)
!11917 = !DISubroutineType(types: !11918)
!11918 = !{!170, !11713}
!11919 = !{!11920}
!11920 = !DILocalVariable(name: "list", arg: 1, scope: !11916, file: !234, line: 266, type: !11713)
!11921 = !DILocation(line: 0, scope: !11916)
!11922 = !DILocation(line: 268, column: 15, scope: !11916)
!11923 = !DILocation(line: 268, column: 20, scope: !11916)
!11924 = !DILocation(line: 268, column: 2, scope: !11916)
!11925 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !234, file: !234, line: 496, type: !11926, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11928)
!11926 = !DISubroutineType(types: !11927)
!11927 = !{null, !2145}
!11928 = !{!11929, !11930, !11931}
!11929 = !DILocalVariable(name: "node", arg: 1, scope: !11925, file: !234, line: 496, type: !2145)
!11930 = !DILocalVariable(name: "prev", scope: !11925, file: !234, line: 498, type: !11772)
!11931 = !DILocalVariable(name: "next", scope: !11925, file: !234, line: 499, type: !11772)
!11932 = !DILocation(line: 0, scope: !11925)
!11933 = !DILocation(line: 498, column: 34, scope: !11925)
!11934 = !DILocation(line: 499, column: 34, scope: !11925)
!11935 = !DILocation(line: 501, column: 8, scope: !11925)
!11936 = !DILocation(line: 501, column: 13, scope: !11925)
!11937 = !DILocation(line: 502, column: 8, scope: !11925)
!11938 = !DILocation(line: 502, column: 13, scope: !11925)
!11939 = !DILocation(line: 503, column: 2, scope: !11925)
!11940 = !DILocation(line: 504, column: 1, scope: !11925)
!11941 = distinct !DISubprogram(name: "sys_dnode_init", scope: !234, file: !234, line: 211, type: !11926, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11942)
!11942 = !{!11943}
!11943 = !DILocalVariable(name: "node", arg: 1, scope: !11941, file: !234, line: 211, type: !2145)
!11944 = !DILocation(line: 0, scope: !11941)
!11945 = !DILocation(line: 213, column: 8, scope: !11941)
!11946 = !DILocation(line: 213, column: 13, scope: !11941)
!11947 = !DILocation(line: 214, column: 8, scope: !11941)
!11948 = !DILocation(line: 214, column: 13, scope: !11941)
!11949 = !DILocation(line: 215, column: 1, scope: !11941)
!11950 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !10782, file: !10782, line: 131, type: !11951, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11953)
!11951 = !DISubroutineType(types: !11952)
!11952 = !{!170, !2044, !121}
!11953 = !{!11954, !11955}
!11954 = !DILocalVariable(name: "thread", arg: 1, scope: !11950, file: !10782, line: 131, type: !2044)
!11955 = !DILocalVariable(name: "state", arg: 2, scope: !11950, file: !10782, line: 131, type: !121)
!11956 = !DILocation(line: 0, scope: !11950)
!11957 = !DILocation(line: 133, column: 23, scope: !11950)
!11958 = !DILocation(line: 133, column: 45, scope: !11950)
!11959 = !DILocation(line: 133, column: 2, scope: !11950)
!11960 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !10782, file: !10782, line: 211, type: !11961, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11963)
!11961 = !DISubroutineType(types: !11962)
!11962 = !{!170, !103, !103}
!11963 = !{!11964, !11965}
!11964 = !DILocalVariable(name: "prio", arg: 1, scope: !11960, file: !10782, line: 211, type: !103)
!11965 = !DILocalVariable(name: "test_prio", arg: 2, scope: !11960, file: !10782, line: 211, type: !103)
!11966 = !DILocation(line: 0, scope: !11960)
!11967 = !DILocation(line: 213, column: 9, scope: !11960)
!11968 = !DILocation(line: 213, column: 2, scope: !11960)
!11969 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !10782, file: !10782, line: 83, type: !11628, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11970)
!11970 = !{!11971}
!11971 = !DILocalVariable(name: "thread", arg: 1, scope: !11969, file: !10782, line: 83, type: !2044)
!11972 = !DILocation(line: 0, scope: !11969)
!11973 = !DILocation(line: 89, column: 16, scope: !11969)
!11974 = !DILocation(line: 89, column: 2, scope: !11969)
!11975 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !10782, file: !10782, line: 206, type: !11961, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11976)
!11976 = !{!11977, !11978}
!11977 = !DILocalVariable(name: "prio1", arg: 1, scope: !11975, file: !10782, line: 206, type: !103)
!11978 = !DILocalVariable(name: "prio2", arg: 2, scope: !11975, file: !10782, line: 206, type: !103)
!11979 = !DILocation(line: 0, scope: !11975)
!11980 = !DILocation(line: 208, column: 15, scope: !11975)
!11981 = !DILocation(line: 208, column: 2, scope: !11975)
!11982 = distinct !DISubprogram(name: "z_ready_thread", scope: !2149, file: !2149, line: 635, type: !11468, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !11983)
!11983 = !{!11984, !11985, !11987}
!11984 = !DILocalVariable(name: "thread", arg: 1, scope: !11982, file: !2149, line: 635, type: !2044)
!11985 = !DILocalVariable(name: "__i", scope: !11986, file: !2149, line: 637, type: !11502)
!11986 = distinct !DILexicalBlock(scope: !11982, file: !2149, line: 637, column: 2)
!11987 = !DILocalVariable(name: "__key", scope: !11986, file: !2149, line: 637, type: !11502)
!11988 = !DILocation(line: 0, scope: !11982)
!11989 = !DILocation(line: 0, scope: !11986)
!11990 = !DILocation(line: 0, scope: !11510, inlinedAt: !11991)
!11991 = distinct !DILocation(line: 637, column: 2, scope: !11986)
!11992 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !11993)
!11993 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !11991)
!11994 = !DILocation(line: 0, scope: !11519, inlinedAt: !11993)
!11995 = !DILocation(line: 639, column: 4, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11997, file: !2149, line: 638, column: 41)
!11997 = distinct !DILexicalBlock(scope: !11998, file: !2149, line: 638, column: 7)
!11998 = distinct !DILexicalBlock(scope: !11999, file: !2149, line: 637, column: 26)
!11999 = distinct !DILexicalBlock(scope: !11986, file: !2149, line: 637, column: 2)
!12000 = !DILocation(line: 0, scope: !11537, inlinedAt: !12001)
!12001 = distinct !DILocation(line: 637, column: 2, scope: !11999)
!12002 = !DILocation(line: 0, scope: !11545, inlinedAt: !12003)
!12003 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !12001)
!12004 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !12003)
!12005 = !DILocation(line: 642, column: 1, scope: !11982)
!12006 = distinct !DISubprogram(name: "ready_thread", scope: !2149, file: !2149, line: 617, type: !11468, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12007)
!12007 = !{!12008}
!12008 = !DILocalVariable(name: "thread", arg: 1, scope: !12006, file: !2149, line: 617, type: !2044)
!12009 = !DILocation(line: 0, scope: !12006)
!12010 = !DILocation(line: 626, column: 7, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !12006, file: !2149, line: 626, column: 6)
!12012 = !DILocation(line: 626, column: 34, scope: !12011)
!12013 = !DILocation(line: 626, column: 37, scope: !12011)
!12014 = !DILocation(line: 626, column: 6, scope: !12006)
!12015 = !DILocation(line: 0, scope: !11696, inlinedAt: !12016)
!12016 = distinct !DILocation(line: 629, column: 3, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !12011, file: !2149, line: 626, column: 64)
!12018 = !DILocation(line: 252, column: 15, scope: !11696, inlinedAt: !12016)
!12019 = !DILocation(line: 252, column: 28, scope: !11696, inlinedAt: !12016)
!12020 = !DILocation(line: 0, scope: !11703, inlinedAt: !12021)
!12021 = distinct !DILocation(line: 254, column: 3, scope: !11707, inlinedAt: !12016)
!12022 = !DILocation(line: 0, scope: !11710, inlinedAt: !12023)
!12023 = distinct !DILocation(line: 229, column: 2, scope: !11703, inlinedAt: !12021)
!12024 = !DILocation(line: 188, column: 2, scope: !11720, inlinedAt: !12023)
!12025 = !DILocation(line: 188, column: 2, scope: !11722, inlinedAt: !12023)
!12026 = !DILocation(line: 0, scope: !11720, inlinedAt: !12023)
!12027 = !DILocation(line: 189, column: 7, scope: !11725, inlinedAt: !12023)
!12028 = !DILocation(line: 189, column: 35, scope: !11725, inlinedAt: !12023)
!12029 = !DILocation(line: 189, column: 7, scope: !11726, inlinedAt: !12023)
!12030 = !DILocation(line: 191, column: 21, scope: !11730, inlinedAt: !12023)
!12031 = !DILocation(line: 190, column: 4, scope: !11730, inlinedAt: !12023)
!12032 = !DILocation(line: 192, column: 4, scope: !11730, inlinedAt: !12023)
!12033 = distinct !{!12033, !12024, !12034}
!12034 = !DILocation(line: 194, column: 2, scope: !11720, inlinedAt: !12023)
!12035 = !DILocation(line: 196, column: 37, scope: !11710, inlinedAt: !12023)
!12036 = !DILocation(line: 196, column: 2, scope: !11710, inlinedAt: !12023)
!12037 = !DILocation(line: 197, column: 1, scope: !11710, inlinedAt: !12023)
!12038 = !DILocation(line: 630, column: 3, scope: !12017)
!12039 = !DILocation(line: 632, column: 2, scope: !12017)
!12040 = !DILocation(line: 633, column: 1, scope: !12006)
!12041 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !10782, file: !10782, line: 120, type: !11628, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12042)
!12042 = !{!12043}
!12043 = !DILocalVariable(name: "thread", arg: 1, scope: !12041, file: !10782, line: 120, type: !2044)
!12044 = !DILocation(line: 0, scope: !12041)
!12045 = !DILocation(line: 122, column: 12, scope: !12041)
!12046 = !DILocation(line: 122, column: 62, scope: !12041)
!12047 = !DILocation(line: 123, column: 4, scope: !12041)
!12048 = !DILocation(line: 122, column: 2, scope: !12041)
!12049 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2149, file: !2149, line: 644, type: !11468, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12050)
!12050 = !{!12051, !12052, !12054}
!12051 = !DILocalVariable(name: "thread", arg: 1, scope: !12049, file: !2149, line: 644, type: !2044)
!12052 = !DILocalVariable(name: "__i", scope: !12053, file: !2149, line: 646, type: !11502)
!12053 = distinct !DILexicalBlock(scope: !12049, file: !2149, line: 646, column: 2)
!12054 = !DILocalVariable(name: "__key", scope: !12053, file: !2149, line: 646, type: !11502)
!12055 = !DILocation(line: 0, scope: !12049)
!12056 = !DILocation(line: 0, scope: !12053)
!12057 = !DILocation(line: 0, scope: !11510, inlinedAt: !12058)
!12058 = distinct !DILocation(line: 646, column: 2, scope: !12053)
!12059 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !12060)
!12060 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !12058)
!12061 = !DILocation(line: 0, scope: !11519, inlinedAt: !12060)
!12062 = !DILocation(line: 647, column: 3, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12064, file: !2149, line: 646, column: 26)
!12064 = distinct !DILexicalBlock(scope: !12053, file: !2149, line: 646, column: 2)
!12065 = !DILocation(line: 0, scope: !11537, inlinedAt: !12066)
!12066 = distinct !DILocation(line: 646, column: 2, scope: !12064)
!12067 = !DILocation(line: 0, scope: !11545, inlinedAt: !12068)
!12068 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !12066)
!12069 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !12068)
!12070 = !DILocation(line: 649, column: 1, scope: !12049)
!12071 = distinct !DISubprogram(name: "z_sched_start", scope: !2149, file: !2149, line: 651, type: !11468, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12072)
!12072 = !{!12073, !12074}
!12073 = !DILocalVariable(name: "thread", arg: 1, scope: !12071, file: !2149, line: 651, type: !2044)
!12074 = !DILocalVariable(name: "key", scope: !12071, file: !2149, line: 653, type: !11502)
!12075 = !DILocation(line: 0, scope: !12071)
!12076 = !DILocation(line: 0, scope: !11510, inlinedAt: !12077)
!12077 = distinct !DILocation(line: 653, column: 25, scope: !12071)
!12078 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !12079)
!12079 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !12077)
!12080 = !DILocation(line: 0, scope: !11519, inlinedAt: !12079)
!12081 = !DILocation(line: 655, column: 6, scope: !12082)
!12082 = distinct !DILexicalBlock(scope: !12071, file: !2149, line: 655, column: 6)
!12083 = !DILocation(line: 655, column: 6, scope: !12071)
!12084 = !DILocation(line: 0, scope: !11537, inlinedAt: !12085)
!12085 = distinct !DILocation(line: 656, column: 3, scope: !12086)
!12086 = distinct !DILexicalBlock(scope: !12082, file: !2149, line: 655, column: 36)
!12087 = !DILocation(line: 0, scope: !11545, inlinedAt: !12088)
!12088 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !12085)
!12089 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !12088)
!12090 = !DILocation(line: 657, column: 3, scope: !12086)
!12091 = !DILocation(line: 660, column: 2, scope: !12071)
!12092 = !DILocation(line: 661, column: 2, scope: !12071)
!12093 = !DILocation(line: 662, column: 2, scope: !12071)
!12094 = !DILocation(line: 663, column: 1, scope: !12071)
!12095 = distinct !DISubprogram(name: "z_has_thread_started", scope: !10782, file: !10782, line: 126, type: !11628, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12096)
!12096 = !{!12097}
!12097 = !DILocalVariable(name: "thread", arg: 1, scope: !12095, file: !10782, line: 126, type: !2044)
!12098 = !DILocation(line: 0, scope: !12095)
!12099 = !DILocation(line: 128, column: 23, scope: !12095)
!12100 = !DILocation(line: 128, column: 36, scope: !12095)
!12101 = !DILocation(line: 128, column: 56, scope: !12095)
!12102 = !DILocation(line: 128, column: 2, scope: !12095)
!12103 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !10782, file: !10782, line: 155, type: !11468, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12104)
!12104 = !{!12105}
!12105 = !DILocalVariable(name: "thread", arg: 1, scope: !12103, file: !10782, line: 155, type: !2044)
!12106 = !DILocation(line: 0, scope: !12103)
!12107 = !DILocation(line: 157, column: 15, scope: !12103)
!12108 = !DILocation(line: 157, column: 28, scope: !12103)
!12109 = !DILocation(line: 158, column: 1, scope: !12103)
!12110 = distinct !DISubprogram(name: "z_reschedule", scope: !2149, file: !2149, line: 967, type: !11538, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12111)
!12111 = !{!12112, !12113}
!12112 = !DILocalVariable(name: "lock", arg: 1, scope: !12110, file: !2149, line: 967, type: !11513)
!12113 = !DILocalVariable(name: "key", arg: 2, scope: !12110, file: !2149, line: 967, type: !11502)
!12114 = !DILocation(line: 0, scope: !12110)
!12115 = !DILocation(line: 969, column: 6, scope: !12116)
!12116 = distinct !DILexicalBlock(scope: !12110, file: !2149, line: 969, column: 6)
!12117 = !DILocation(line: 969, column: 23, scope: !12116)
!12118 = !DILocation(line: 969, column: 26, scope: !12116)
!12119 = !DILocation(line: 969, column: 6, scope: !12110)
!12120 = !DILocalVariable(name: "key", arg: 2, scope: !12121, file: !10886, line: 193, type: !11502)
!12121 = distinct !DISubprogram(name: "z_swap", scope: !10886, file: !10886, line: 193, type: !12122, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12124)
!12122 = !DISubroutineType(types: !12123)
!12123 = !{!103, !11513, !11502}
!12124 = !{!12125, !12120}
!12125 = !DILocalVariable(name: "lock", arg: 1, scope: !12121, file: !10886, line: 193, type: !11513)
!12126 = !DILocation(line: 0, scope: !12121, inlinedAt: !12127)
!12127 = distinct !DILocation(line: 970, column: 3, scope: !12128)
!12128 = distinct !DILexicalBlock(scope: !12116, file: !2149, line: 969, column: 39)
!12129 = !DILocation(line: 196, column: 9, scope: !12121, inlinedAt: !12127)
!12130 = !DILocation(line: 971, column: 2, scope: !12128)
!12131 = !DILocation(line: 0, scope: !11537, inlinedAt: !12132)
!12132 = distinct !DILocation(line: 972, column: 3, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12116, file: !2149, line: 971, column: 9)
!12134 = !DILocation(line: 0, scope: !11545, inlinedAt: !12135)
!12135 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !12132)
!12136 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !12135)
!12137 = !DILocation(line: 975, column: 1, scope: !12110)
!12138 = distinct !DISubprogram(name: "resched", scope: !2149, file: !2149, line: 940, type: !12139, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12141)
!12139 = !DISubroutineType(types: !12140)
!12140 = !{!170, !121}
!12141 = !{!12142}
!12142 = !DILocalVariable(name: "key", arg: 1, scope: !12138, file: !2149, line: 940, type: !121)
!12143 = !DILocation(line: 0, scope: !12138)
!12144 = !DILocalVariable(name: "key", arg: 1, scope: !12145, file: !4510, line: 112, type: !32)
!12145 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !4510, file: !4510, line: 112, type: !12146, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12148)
!12146 = !DISubroutineType(types: !12147)
!12147 = !{!170, !32}
!12148 = !{!12144}
!12149 = !DILocation(line: 0, scope: !12145, inlinedAt: !12150)
!12150 = distinct !DILocation(line: 946, column: 9, scope: !12138)
!12151 = !DILocation(line: 115, column: 13, scope: !12145, inlinedAt: !12150)
!12152 = !DILocation(line: 946, column: 32, scope: !12138)
!12153 = !DILocation(line: 1031, column: 3, scope: !12154, inlinedAt: !12157)
!12154 = distinct !DISubprogram(name: "__get_IPSR", scope: !4701, file: !4701, line: 1027, type: !5451, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12155)
!12155 = !{!12156}
!12156 = !DILocalVariable(name: "result", scope: !12154, file: !4701, line: 1029, type: !121)
!12157 = distinct !DILocation(line: 48, column: 10, scope: !12158, inlinedAt: !12159)
!12158 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !5457, file: !5457, line: 46, type: !5458, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !335)
!12159 = distinct !DILocation(line: 946, column: 36, scope: !12138)
!12160 = !{i64 2486641}
!12161 = !DILocation(line: 0, scope: !12154, inlinedAt: !12157)
!12162 = !DILocation(line: 48, column: 9, scope: !12158, inlinedAt: !12159)
!12163 = !DILocation(line: 946, column: 2, scope: !12138)
!12164 = distinct !DISubprogram(name: "need_swap", scope: !2149, file: !2149, line: 953, type: !5458, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12165)
!12165 = !{!12166}
!12166 = !DILocalVariable(name: "new_thread", scope: !12164, file: !2149, line: 959, type: !2044)
!12167 = !DILocation(line: 962, column: 31, scope: !12164)
!12168 = !DILocation(line: 0, scope: !12164)
!12169 = !DILocation(line: 963, column: 23, scope: !12164)
!12170 = !DILocation(line: 963, column: 20, scope: !12164)
!12171 = !DILocation(line: 963, column: 2, scope: !12164)
!12172 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !10886, file: !10886, line: 181, type: !4711, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12173)
!12173 = !{!12174, !12175}
!12174 = !DILocalVariable(name: "key", arg: 1, scope: !12172, file: !10886, line: 181, type: !32)
!12175 = !DILocalVariable(name: "ret", scope: !12172, file: !10886, line: 183, type: !103)
!12176 = !DILocation(line: 0, scope: !12172)
!12177 = !DILocation(line: 185, column: 8, scope: !12172)
!12178 = !DILocation(line: 186, column: 2, scope: !12172)
!12179 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2149, file: !2149, line: 665, type: !11468, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12180)
!12180 = !{!12181, !12182, !12184}
!12181 = !DILocalVariable(name: "thread", arg: 1, scope: !12179, file: !2149, line: 665, type: !2044)
!12182 = !DILocalVariable(name: "__i", scope: !12183, file: !2149, line: 671, type: !11502)
!12183 = distinct !DILexicalBlock(scope: !12179, file: !2149, line: 671, column: 2)
!12184 = !DILocalVariable(name: "__key", scope: !12183, file: !2149, line: 671, type: !11502)
!12185 = !DILocation(line: 0, scope: !12179)
!12186 = !DILocation(line: 669, column: 8, scope: !12179)
!12187 = !DILocation(line: 0, scope: !12183)
!12188 = !DILocation(line: 0, scope: !11510, inlinedAt: !12189)
!12189 = distinct !DILocation(line: 671, column: 2, scope: !12183)
!12190 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !12191)
!12191 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !12189)
!12192 = !DILocation(line: 0, scope: !11519, inlinedAt: !12191)
!12193 = !DILocation(line: 672, column: 7, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12195, file: !2149, line: 672, column: 7)
!12195 = distinct !DILexicalBlock(scope: !12196, file: !2149, line: 671, column: 26)
!12196 = distinct !DILexicalBlock(scope: !12183, file: !2149, line: 671, column: 2)
!12197 = !DILocation(line: 672, column: 7, scope: !12195)
!12198 = !DILocation(line: 0, scope: !11679, inlinedAt: !12199)
!12199 = distinct !DILocation(line: 673, column: 4, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12194, file: !2149, line: 672, column: 35)
!12201 = !DILocation(line: 266, column: 15, scope: !11679, inlinedAt: !12199)
!12202 = !DILocation(line: 266, column: 28, scope: !11679, inlinedAt: !12199)
!12203 = !DILocation(line: 0, scope: !11687, inlinedAt: !12204)
!12204 = distinct !DILocation(line: 268, column: 3, scope: !11691, inlinedAt: !12199)
!12205 = !DILocation(line: 234, column: 2, scope: !11687, inlinedAt: !12204)
!12206 = !DILocation(line: 674, column: 3, scope: !12200)
!12207 = !DILocation(line: 675, column: 3, scope: !12195)
!12208 = !DILocation(line: 676, column: 26, scope: !12195)
!12209 = !DILocation(line: 676, column: 23, scope: !12195)
!12210 = !DILocation(line: 676, column: 3, scope: !12195)
!12211 = !DILocation(line: 0, scope: !11537, inlinedAt: !12212)
!12212 = distinct !DILocation(line: 671, column: 2, scope: !12196)
!12213 = !DILocation(line: 0, scope: !11545, inlinedAt: !12214)
!12214 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !12212)
!12215 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !12214)
!12216 = !DILocation(line: 679, column: 16, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12179, file: !2149, line: 679, column: 6)
!12218 = !DILocation(line: 679, column: 13, scope: !12217)
!12219 = !DILocation(line: 679, column: 6, scope: !12179)
!12220 = !DILocation(line: 680, column: 3, scope: !12221)
!12221 = distinct !DILexicalBlock(scope: !12217, file: !2149, line: 679, column: 26)
!12222 = !DILocation(line: 681, column: 2, scope: !12221)
!12223 = !DILocation(line: 684, column: 1, scope: !12179)
!12224 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !11176, file: !11176, line: 52, type: !11486, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12225)
!12225 = !{!12226}
!12226 = !DILocalVariable(name: "thread", arg: 1, scope: !12224, file: !11176, line: 52, type: !2044)
!12227 = !DILocation(line: 0, scope: !12224)
!12228 = !DILocation(line: 54, column: 39, scope: !12224)
!12229 = !DILocation(line: 54, column: 9, scope: !12224)
!12230 = !DILocation(line: 54, column: 2, scope: !12224)
!12231 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !10782, file: !10782, line: 141, type: !11468, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12232)
!12232 = !{!12233}
!12233 = !DILocalVariable(name: "thread", arg: 1, scope: !12231, file: !10782, line: 141, type: !2044)
!12234 = !DILocation(line: 0, scope: !12231)
!12235 = !DILocation(line: 143, column: 15, scope: !12231)
!12236 = !DILocation(line: 143, column: 28, scope: !12231)
!12237 = !DILocation(line: 146, column: 1, scope: !12231)
!12238 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !10782, file: !10782, line: 73, type: !2730, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !335)
!12239 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !12240)
!12240 = distinct !DILocation(line: 75, column: 30, scope: !12238)
!12241 = !DILocation(line: 0, scope: !11519, inlinedAt: !12240)
!12242 = !DILocation(line: 75, column: 9, scope: !12238)
!12243 = !DILocation(line: 76, column: 1, scope: !12238)
!12244 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2149, file: !2149, line: 977, type: !4534, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12245)
!12245 = !{!12246}
!12246 = !DILocalVariable(name: "key", arg: 1, scope: !12244, file: !2149, line: 977, type: !121)
!12247 = !DILocation(line: 0, scope: !12244)
!12248 = !DILocation(line: 979, column: 6, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12244, file: !2149, line: 979, column: 6)
!12250 = !DILocation(line: 979, column: 6, scope: !12244)
!12251 = !DILocation(line: 980, column: 3, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !12249, file: !2149, line: 979, column: 20)
!12253 = !DILocation(line: 981, column: 2, scope: !12252)
!12254 = !DILocation(line: 0, scope: !11545, inlinedAt: !12255)
!12255 = distinct !DILocation(line: 982, column: 3, scope: !12256)
!12256 = distinct !DILexicalBlock(scope: !12249, file: !2149, line: 981, column: 9)
!12257 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !12255)
!12258 = !DILocation(line: 985, column: 1, scope: !12244)
!12259 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2149, file: !2149, line: 695, type: !11468, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12260)
!12260 = !{!12261, !12262}
!12261 = !DILocalVariable(name: "thread", arg: 1, scope: !12259, file: !2149, line: 695, type: !2044)
!12262 = !DILocalVariable(name: "key", scope: !12259, file: !2149, line: 699, type: !11502)
!12263 = !DILocation(line: 0, scope: !12259)
!12264 = !DILocation(line: 0, scope: !11510, inlinedAt: !12265)
!12265 = distinct !DILocation(line: 699, column: 25, scope: !12259)
!12266 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !12267)
!12267 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !12265)
!12268 = !DILocation(line: 0, scope: !11519, inlinedAt: !12267)
!12269 = !DILocation(line: 702, column: 7, scope: !12270)
!12270 = distinct !DILexicalBlock(scope: !12259, file: !2149, line: 702, column: 6)
!12271 = !DILocation(line: 702, column: 6, scope: !12259)
!12272 = !DILocation(line: 0, scope: !11537, inlinedAt: !12273)
!12273 = distinct !DILocation(line: 703, column: 3, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12270, file: !2149, line: 702, column: 38)
!12275 = !DILocation(line: 0, scope: !11545, inlinedAt: !12276)
!12276 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !12273)
!12277 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !12276)
!12278 = !DILocation(line: 704, column: 3, scope: !12274)
!12279 = !DILocation(line: 707, column: 2, scope: !12259)
!12280 = !DILocation(line: 708, column: 2, scope: !12259)
!12281 = !DILocation(line: 710, column: 2, scope: !12259)
!12282 = !DILocation(line: 713, column: 1, scope: !12259)
!12283 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !10782, file: !10782, line: 96, type: !11628, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12284)
!12284 = !{!12285}
!12285 = !DILocalVariable(name: "thread", arg: 1, scope: !12283, file: !10782, line: 96, type: !2044)
!12286 = !DILocation(line: 0, scope: !12283)
!12287 = !DILocation(line: 98, column: 23, scope: !12283)
!12288 = !DILocation(line: 98, column: 36, scope: !12283)
!12289 = !DILocation(line: 98, column: 57, scope: !12283)
!12290 = !DILocation(line: 98, column: 2, scope: !12283)
!12291 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !10782, file: !10782, line: 148, type: !11468, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12292)
!12292 = !{!12293}
!12293 = !DILocalVariable(name: "thread", arg: 1, scope: !12291, file: !10782, line: 148, type: !2044)
!12294 = !DILocation(line: 0, scope: !12291)
!12295 = !DILocation(line: 150, column: 15, scope: !12291)
!12296 = !DILocation(line: 150, column: 28, scope: !12291)
!12297 = !DILocation(line: 153, column: 1, scope: !12291)
!12298 = distinct !DISubprogram(name: "z_pend_thread", scope: !2149, file: !2149, line: 770, type: !12299, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12305)
!12299 = !DISubroutineType(types: !12300)
!12300 = !{null, !2044, !2075, !12301}
!12301 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1418, line: 67, baseType: !12302)
!12302 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1418, line: 65, size: 64, elements: !12303)
!12303 = !{!12304}
!12304 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12302, file: !1418, line: 66, baseType: !1417, size: 64)
!12305 = !{!12306, !12307, !12308, !12309, !12311}
!12306 = !DILocalVariable(name: "thread", arg: 1, scope: !12298, file: !2149, line: 770, type: !2044)
!12307 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12298, file: !2149, line: 770, type: !2075)
!12308 = !DILocalVariable(name: "timeout", arg: 3, scope: !12298, file: !2149, line: 771, type: !12301)
!12309 = !DILocalVariable(name: "__i", scope: !12310, file: !2149, line: 774, type: !11502)
!12310 = distinct !DILexicalBlock(scope: !12298, file: !2149, line: 774, column: 2)
!12311 = !DILocalVariable(name: "__key", scope: !12310, file: !2149, line: 774, type: !11502)
!12312 = !DILocation(line: 0, scope: !12298)
!12313 = !DILocation(line: 0, scope: !12310)
!12314 = !DILocation(line: 0, scope: !11510, inlinedAt: !12315)
!12315 = distinct !DILocation(line: 774, column: 2, scope: !12310)
!12316 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !12317)
!12317 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !12315)
!12318 = !DILocation(line: 0, scope: !11519, inlinedAt: !12317)
!12319 = !DILocation(line: 775, column: 3, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12321, file: !2149, line: 774, column: 26)
!12321 = distinct !DILexicalBlock(scope: !12310, file: !2149, line: 774, column: 2)
!12322 = !DILocation(line: 0, scope: !11537, inlinedAt: !12323)
!12323 = distinct !DILocation(line: 774, column: 2, scope: !12321)
!12324 = !DILocation(line: 0, scope: !11545, inlinedAt: !12325)
!12325 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !12323)
!12326 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !12325)
!12327 = !DILocation(line: 777, column: 1, scope: !12298)
!12328 = distinct !DISubprogram(name: "pend_locked", scope: !2149, file: !2149, line: 760, type: !12299, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12329)
!12329 = !{!12330, !12331, !12332}
!12330 = !DILocalVariable(name: "thread", arg: 1, scope: !12328, file: !2149, line: 760, type: !2044)
!12331 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12328, file: !2149, line: 760, type: !2075)
!12332 = !DILocalVariable(name: "timeout", arg: 3, scope: !12328, file: !2149, line: 761, type: !12301)
!12333 = !DILocation(line: 0, scope: !12328)
!12334 = !DILocation(line: 766, column: 2, scope: !12328)
!12335 = !DILocation(line: 767, column: 2, scope: !12328)
!12336 = !DILocation(line: 768, column: 1, scope: !12328)
!12337 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2149, file: !2149, line: 740, type: !12338, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12340)
!12338 = !DISubroutineType(types: !12339)
!12339 = !{null, !2044, !2075}
!12340 = !{!12341, !12342}
!12341 = !DILocalVariable(name: "thread", arg: 1, scope: !12337, file: !2149, line: 740, type: !2044)
!12342 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12337, file: !2149, line: 740, type: !2075)
!12343 = !DILocation(line: 0, scope: !12337)
!12344 = !DILocation(line: 742, column: 2, scope: !12337)
!12345 = !DILocation(line: 743, column: 2, scope: !12337)
!12346 = !DILocation(line: 747, column: 13, scope: !12347)
!12347 = distinct !DILexicalBlock(scope: !12337, file: !2149, line: 747, column: 6)
!12348 = !DILocation(line: 747, column: 6, scope: !12337)
!12349 = !DILocation(line: 748, column: 16, scope: !12350)
!12350 = distinct !DILexicalBlock(scope: !12347, file: !2149, line: 747, column: 22)
!12351 = !DILocation(line: 748, column: 26, scope: !12350)
!12352 = !DILocation(line: 749, column: 28, scope: !12350)
!12353 = !DILocation(line: 0, scope: !11710, inlinedAt: !12354)
!12354 = distinct !DILocation(line: 749, column: 3, scope: !12350)
!12355 = !DILocation(line: 188, column: 2, scope: !11720, inlinedAt: !12354)
!12356 = !DILocation(line: 188, column: 2, scope: !11722, inlinedAt: !12354)
!12357 = !DILocation(line: 0, scope: !11720, inlinedAt: !12354)
!12358 = !DILocation(line: 189, column: 7, scope: !11725, inlinedAt: !12354)
!12359 = !DILocation(line: 189, column: 35, scope: !11725, inlinedAt: !12354)
!12360 = !DILocation(line: 189, column: 7, scope: !11726, inlinedAt: !12354)
!12361 = !DILocation(line: 191, column: 21, scope: !11730, inlinedAt: !12354)
!12362 = !DILocation(line: 190, column: 4, scope: !11730, inlinedAt: !12354)
!12363 = !DILocation(line: 192, column: 4, scope: !11730, inlinedAt: !12354)
!12364 = distinct !{!12364, !12355, !12365}
!12365 = !DILocation(line: 194, column: 2, scope: !11720, inlinedAt: !12354)
!12366 = !DILocation(line: 196, column: 37, scope: !11710, inlinedAt: !12354)
!12367 = !DILocation(line: 196, column: 2, scope: !11710, inlinedAt: !12354)
!12368 = !DILocation(line: 197, column: 1, scope: !11710, inlinedAt: !12354)
!12369 = !DILocation(line: 751, column: 1, scope: !12337)
!12370 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2149, file: !2149, line: 753, type: !12371, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12373)
!12371 = !DISubroutineType(types: !12372)
!12372 = !{null, !2044, !12301}
!12373 = !{!12374, !12375}
!12374 = !DILocalVariable(name: "thread", arg: 1, scope: !12370, file: !2149, line: 753, type: !2044)
!12375 = !DILocalVariable(name: "timeout", arg: 2, scope: !12370, file: !2149, line: 753, type: !12301)
!12376 = !DILocation(line: 0, scope: !12370)
!12377 = !DILocation(line: 755, column: 7, scope: !12378)
!12378 = distinct !DILexicalBlock(scope: !12370, file: !2149, line: 755, column: 6)
!12379 = !DILocation(line: 755, column: 6, scope: !12370)
!12380 = !DILocation(line: 756, column: 3, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12378, file: !2149, line: 755, column: 41)
!12382 = !DILocation(line: 757, column: 2, scope: !12381)
!12383 = !DILocation(line: 758, column: 1, scope: !12370)
!12384 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !11176, file: !11176, line: 47, type: !12371, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12385)
!12385 = !{!12386, !12387}
!12386 = !DILocalVariable(name: "thread", arg: 1, scope: !12384, file: !11176, line: 47, type: !2044)
!12387 = !DILocalVariable(name: "ticks", arg: 2, scope: !12384, file: !11176, line: 47, type: !12301)
!12388 = !DILocation(line: 0, scope: !12384)
!12389 = !DILocation(line: 49, column: 30, scope: !12384)
!12390 = !DILocation(line: 49, column: 2, scope: !12384)
!12391 = !DILocation(line: 50, column: 1, scope: !12384)
!12392 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2149, file: !2149, line: 795, type: !2101, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12393)
!12393 = !{!12394, !12395, !12396, !12398, !12399}
!12394 = !DILocalVariable(name: "timeout", arg: 1, scope: !12392, file: !2149, line: 795, type: !2103)
!12395 = !DILocalVariable(name: "thread", scope: !12392, file: !2149, line: 797, type: !2044)
!12396 = !DILocalVariable(name: "__i", scope: !12397, file: !2149, line: 800, type: !11502)
!12397 = distinct !DILexicalBlock(scope: !12392, file: !2149, line: 800, column: 2)
!12398 = !DILocalVariable(name: "__key", scope: !12397, file: !2149, line: 800, type: !11502)
!12399 = !DILocalVariable(name: "killed", scope: !12400, file: !2149, line: 801, type: !170)
!12400 = distinct !DILexicalBlock(scope: !12401, file: !2149, line: 800, column: 26)
!12401 = distinct !DILexicalBlock(scope: !12397, file: !2149, line: 800, column: 2)
!12402 = !DILocation(line: 0, scope: !12392)
!12403 = !DILocation(line: 797, column: 28, scope: !12392)
!12404 = !DILocation(line: 0, scope: !12397)
!12405 = !DILocation(line: 0, scope: !11510, inlinedAt: !12406)
!12406 = distinct !DILocation(line: 800, column: 2, scope: !12397)
!12407 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !12408)
!12408 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !12406)
!12409 = !DILocation(line: 0, scope: !11519, inlinedAt: !12408)
!12410 = !DILocation(line: 801, column: 27, scope: !12400)
!12411 = !DILocation(line: 801, column: 32, scope: !12400)
!12412 = !DILocation(line: 801, column: 61, scope: !12400)
!12413 = !DILocation(line: 0, scope: !12400)
!12414 = !DILocation(line: 804, column: 7, scope: !12400)
!12415 = !DILocation(line: 805, column: 21, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12417, file: !2149, line: 805, column: 8)
!12417 = distinct !DILexicalBlock(scope: !12418, file: !2149, line: 804, column: 16)
!12418 = distinct !DILexicalBlock(scope: !12400, file: !2149, line: 804, column: 7)
!12419 = !DILocation(line: 805, column: 31, scope: !12416)
!12420 = !DILocation(line: 805, column: 8, scope: !12417)
!12421 = !DILocation(line: 806, column: 5, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12416, file: !2149, line: 805, column: 40)
!12423 = !DILocation(line: 807, column: 4, scope: !12422)
!12424 = !DILocation(line: 808, column: 4, scope: !12417)
!12425 = !DILocation(line: 809, column: 4, scope: !12417)
!12426 = !DILocation(line: 810, column: 4, scope: !12417)
!12427 = !DILocation(line: 811, column: 3, scope: !12417)
!12428 = !DILocation(line: 0, scope: !11537, inlinedAt: !12429)
!12429 = distinct !DILocation(line: 800, column: 2, scope: !12401)
!12430 = !DILocation(line: 0, scope: !11545, inlinedAt: !12431)
!12431 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !12429)
!12432 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !12431)
!12433 = !DILocation(line: 813, column: 1, scope: !12392)
!12434 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2149, file: !2149, line: 779, type: !11468, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12435)
!12435 = !{!12436}
!12436 = !DILocalVariable(name: "thread", arg: 1, scope: !12434, file: !2149, line: 779, type: !2044)
!12437 = !DILocation(line: 0, scope: !12434)
!12438 = !DILocation(line: 781, column: 2, scope: !12434)
!12439 = !DILocation(line: 782, column: 2, scope: !12434)
!12440 = !DILocation(line: 783, column: 15, scope: !12434)
!12441 = !DILocation(line: 783, column: 25, scope: !12434)
!12442 = !DILocation(line: 784, column: 1, scope: !12434)
!12443 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !10782, file: !10782, line: 165, type: !11468, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12444)
!12444 = !{!12445}
!12445 = !DILocalVariable(name: "thread", arg: 1, scope: !12443, file: !10782, line: 165, type: !2044)
!12446 = !DILocation(line: 0, scope: !12443)
!12447 = !DILocation(line: 167, column: 15, scope: !12443)
!12448 = !DILocation(line: 167, column: 28, scope: !12443)
!12449 = !DILocation(line: 168, column: 1, scope: !12443)
!12450 = distinct !DISubprogram(name: "unready_thread", scope: !2149, file: !2149, line: 731, type: !11468, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12451)
!12451 = !{!12452}
!12452 = !DILocalVariable(name: "thread", arg: 1, scope: !12450, file: !2149, line: 731, type: !2044)
!12453 = !DILocation(line: 0, scope: !12450)
!12454 = !DILocation(line: 733, column: 6, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12450, file: !2149, line: 733, column: 6)
!12456 = !DILocation(line: 733, column: 6, scope: !12450)
!12457 = !DILocation(line: 0, scope: !11679, inlinedAt: !12458)
!12458 = distinct !DILocation(line: 734, column: 3, scope: !12459)
!12459 = distinct !DILexicalBlock(scope: !12455, file: !2149, line: 733, column: 34)
!12460 = !DILocation(line: 266, column: 15, scope: !11679, inlinedAt: !12458)
!12461 = !DILocation(line: 266, column: 28, scope: !11679, inlinedAt: !12458)
!12462 = !DILocation(line: 0, scope: !11687, inlinedAt: !12463)
!12463 = distinct !DILocation(line: 268, column: 3, scope: !11691, inlinedAt: !12458)
!12464 = !DILocation(line: 234, column: 2, scope: !11687, inlinedAt: !12463)
!12465 = !DILocation(line: 735, column: 2, scope: !12459)
!12466 = !DILocation(line: 736, column: 25, scope: !12450)
!12467 = !DILocation(line: 736, column: 22, scope: !12450)
!12468 = !DILocation(line: 736, column: 2, scope: !12450)
!12469 = !DILocation(line: 737, column: 1, scope: !12450)
!12470 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !10782, file: !10782, line: 160, type: !11468, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12471)
!12471 = !{!12472}
!12472 = !DILocalVariable(name: "thread", arg: 1, scope: !12470, file: !10782, line: 160, type: !2044)
!12473 = !DILocation(line: 0, scope: !12470)
!12474 = !DILocation(line: 162, column: 15, scope: !12470)
!12475 = !DILocation(line: 162, column: 28, scope: !12470)
!12476 = !DILocation(line: 163, column: 1, scope: !12470)
!12477 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2149, file: !2149, line: 786, type: !11468, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12478)
!12478 = !{!12479, !12480, !12482}
!12479 = !DILocalVariable(name: "thread", arg: 1, scope: !12477, file: !2149, line: 786, type: !2044)
!12480 = !DILocalVariable(name: "__i", scope: !12481, file: !2149, line: 788, type: !11502)
!12481 = distinct !DILexicalBlock(scope: !12477, file: !2149, line: 788, column: 2)
!12482 = !DILocalVariable(name: "__key", scope: !12481, file: !2149, line: 788, type: !11502)
!12483 = !DILocation(line: 0, scope: !12477)
!12484 = !DILocation(line: 0, scope: !12481)
!12485 = !DILocation(line: 0, scope: !11510, inlinedAt: !12486)
!12486 = distinct !DILocation(line: 788, column: 2, scope: !12481)
!12487 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !12488)
!12488 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !12486)
!12489 = !DILocation(line: 0, scope: !11519, inlinedAt: !12488)
!12490 = !DILocation(line: 789, column: 3, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12492, file: !2149, line: 788, column: 26)
!12492 = distinct !DILexicalBlock(scope: !12481, file: !2149, line: 788, column: 2)
!12493 = !DILocation(line: 0, scope: !11537, inlinedAt: !12494)
!12494 = distinct !DILocation(line: 788, column: 2, scope: !12492)
!12495 = !DILocation(line: 0, scope: !11545, inlinedAt: !12496)
!12496 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !12494)
!12497 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !12496)
!12498 = !DILocation(line: 791, column: 1, scope: !12477)
!12499 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2149, file: !2149, line: 816, type: !12500, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12502)
!12500 = !DISubroutineType(types: !12501)
!12501 = !{!103, !121, !2075, !12301}
!12502 = !{!12503, !12504, !12505, !12506, !12507, !12509}
!12503 = !DILocalVariable(name: "key", arg: 1, scope: !12499, file: !2149, line: 816, type: !121)
!12504 = !DILocalVariable(name: "wait_q", arg: 2, scope: !12499, file: !2149, line: 816, type: !2075)
!12505 = !DILocalVariable(name: "timeout", arg: 3, scope: !12499, file: !2149, line: 816, type: !12301)
!12506 = !DILocalVariable(name: "ret", scope: !12499, file: !2149, line: 828, type: !103)
!12507 = !DILocalVariable(name: "__i", scope: !12508, file: !2149, line: 829, type: !11502)
!12508 = distinct !DILexicalBlock(scope: !12499, file: !2149, line: 829, column: 2)
!12509 = !DILocalVariable(name: "__key", scope: !12508, file: !2149, line: 829, type: !11502)
!12510 = !DILocation(line: 0, scope: !12499)
!12511 = !DILocation(line: 823, column: 14, scope: !12499)
!12512 = !DILocation(line: 823, column: 2, scope: !12499)
!12513 = !DILocation(line: 826, column: 20, scope: !12499)
!12514 = !DILocation(line: 826, column: 18, scope: !12499)
!12515 = !DILocation(line: 828, column: 12, scope: !12499)
!12516 = !DILocation(line: 0, scope: !12508)
!12517 = !DILocation(line: 0, scope: !11510, inlinedAt: !12518)
!12518 = distinct !DILocation(line: 829, column: 2, scope: !12508)
!12519 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !12520)
!12520 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !12518)
!12521 = !DILocation(line: 0, scope: !11519, inlinedAt: !12520)
!12522 = !DILocation(line: 830, column: 7, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12524, file: !2149, line: 830, column: 7)
!12524 = distinct !DILexicalBlock(scope: !12525, file: !2149, line: 829, column: 26)
!12525 = distinct !DILexicalBlock(scope: !12508, file: !2149, line: 829, column: 2)
!12526 = !DILocation(line: 830, column: 26, scope: !12523)
!12527 = !DILocation(line: 830, column: 23, scope: !12523)
!12528 = !DILocation(line: 830, column: 7, scope: !12524)
!12529 = !DILocation(line: 831, column: 20, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12523, file: !2149, line: 830, column: 36)
!12531 = !DILocation(line: 832, column: 3, scope: !12530)
!12532 = !DILocation(line: 0, scope: !11537, inlinedAt: !12533)
!12533 = distinct !DILocation(line: 829, column: 2, scope: !12525)
!12534 = !DILocation(line: 0, scope: !11545, inlinedAt: !12535)
!12535 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !12533)
!12536 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !12535)
!12537 = !DILocation(line: 834, column: 2, scope: !12499)
!12538 = distinct !DISubprogram(name: "z_pend_curr", scope: !2149, file: !2149, line: 840, type: !12539, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12541)
!12539 = !DISubroutineType(types: !12540)
!12540 = !{!103, !11513, !11502, !2075, !12301}
!12541 = !{!12542, !12543, !12544, !12545}
!12542 = !DILocalVariable(name: "lock", arg: 1, scope: !12538, file: !2149, line: 840, type: !11513)
!12543 = !DILocalVariable(name: "key", arg: 2, scope: !12538, file: !2149, line: 840, type: !11502)
!12544 = !DILocalVariable(name: "wait_q", arg: 3, scope: !12538, file: !2149, line: 841, type: !2075)
!12545 = !DILocalVariable(name: "timeout", arg: 4, scope: !12538, file: !2149, line: 841, type: !12301)
!12546 = !DILocation(line: 0, scope: !12538)
!12547 = !DILocation(line: 844, column: 20, scope: !12538)
!12548 = !DILocation(line: 844, column: 18, scope: !12538)
!12549 = !DILocation(line: 0, scope: !11510, inlinedAt: !12550)
!12550 = distinct !DILocation(line: 856, column: 9, scope: !12538)
!12551 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !12552)
!12552 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !12550)
!12553 = !DILocation(line: 0, scope: !11519, inlinedAt: !12552)
!12554 = !DILocation(line: 857, column: 14, scope: !12538)
!12555 = !DILocation(line: 857, column: 2, scope: !12538)
!12556 = !DILocation(line: 0, scope: !12121, inlinedAt: !12557)
!12557 = distinct !DILocation(line: 859, column: 9, scope: !12538)
!12558 = !DILocation(line: 196, column: 9, scope: !12121, inlinedAt: !12557)
!12559 = !DILocation(line: 859, column: 2, scope: !12538)
!12560 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2149, file: !2149, line: 862, type: !12561, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12563)
!12561 = !DISubroutineType(types: !12562)
!12562 = !{!2044, !2075}
!12563 = !{!12564, !12565, !12566, !12568}
!12564 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12560, file: !2149, line: 862, type: !2075)
!12565 = !DILocalVariable(name: "thread", scope: !12560, file: !2149, line: 864, type: !2044)
!12566 = !DILocalVariable(name: "__i", scope: !12567, file: !2149, line: 866, type: !11502)
!12567 = distinct !DILexicalBlock(scope: !12560, file: !2149, line: 866, column: 2)
!12568 = !DILocalVariable(name: "__key", scope: !12567, file: !2149, line: 866, type: !11502)
!12569 = !DILocation(line: 0, scope: !12560)
!12570 = !DILocation(line: 0, scope: !12567)
!12571 = !DILocation(line: 0, scope: !11510, inlinedAt: !12572)
!12572 = distinct !DILocation(line: 866, column: 2, scope: !12567)
!12573 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !12574)
!12574 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !12572)
!12575 = !DILocation(line: 0, scope: !11519, inlinedAt: !12574)
!12576 = !DILocation(line: 867, column: 12, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12578, file: !2149, line: 866, column: 26)
!12578 = distinct !DILexicalBlock(scope: !12567, file: !2149, line: 866, column: 2)
!12579 = !DILocation(line: 869, column: 14, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12577, file: !2149, line: 869, column: 7)
!12581 = !DILocation(line: 869, column: 7, scope: !12577)
!12582 = !DILocation(line: 870, column: 4, scope: !12583)
!12583 = distinct !DILexicalBlock(scope: !12580, file: !2149, line: 869, column: 23)
!12584 = !DILocation(line: 871, column: 3, scope: !12583)
!12585 = !DILocation(line: 0, scope: !11537, inlinedAt: !12586)
!12586 = distinct !DILocation(line: 866, column: 2, scope: !12578)
!12587 = !DILocation(line: 0, scope: !11545, inlinedAt: !12588)
!12588 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !12586)
!12589 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !12588)
!12590 = !DILocation(line: 874, column: 2, scope: !12560)
!12591 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2149, file: !2149, line: 877, type: !12561, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12592)
!12592 = !{!12593, !12594, !12595, !12597}
!12593 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12591, file: !2149, line: 877, type: !2075)
!12594 = !DILocalVariable(name: "thread", scope: !12591, file: !2149, line: 879, type: !2044)
!12595 = !DILocalVariable(name: "__i", scope: !12596, file: !2149, line: 881, type: !11502)
!12596 = distinct !DILexicalBlock(scope: !12591, file: !2149, line: 881, column: 2)
!12597 = !DILocalVariable(name: "__key", scope: !12596, file: !2149, line: 881, type: !11502)
!12598 = !DILocation(line: 0, scope: !12591)
!12599 = !DILocation(line: 0, scope: !12596)
!12600 = !DILocation(line: 0, scope: !11510, inlinedAt: !12601)
!12601 = distinct !DILocation(line: 881, column: 2, scope: !12596)
!12602 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !12603)
!12603 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !12601)
!12604 = !DILocation(line: 0, scope: !11519, inlinedAt: !12603)
!12605 = !DILocation(line: 882, column: 12, scope: !12606)
!12606 = distinct !DILexicalBlock(scope: !12607, file: !2149, line: 881, column: 26)
!12607 = distinct !DILexicalBlock(scope: !12596, file: !2149, line: 881, column: 2)
!12608 = !DILocation(line: 884, column: 14, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12606, file: !2149, line: 884, column: 7)
!12610 = !DILocation(line: 884, column: 7, scope: !12606)
!12611 = !DILocation(line: 885, column: 4, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12609, file: !2149, line: 884, column: 23)
!12613 = !DILocation(line: 886, column: 10, scope: !12612)
!12614 = !DILocation(line: 887, column: 3, scope: !12612)
!12615 = !DILocation(line: 0, scope: !11537, inlinedAt: !12616)
!12616 = distinct !DILocation(line: 881, column: 2, scope: !12607)
!12617 = !DILocation(line: 0, scope: !11545, inlinedAt: !12618)
!12618 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !12616)
!12619 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !12618)
!12620 = !DILocation(line: 890, column: 2, scope: !12591)
!12621 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2149, file: !2149, line: 893, type: !11468, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12622)
!12622 = !{!12623}
!12623 = !DILocalVariable(name: "thread", arg: 1, scope: !12621, file: !2149, line: 893, type: !2044)
!12624 = !DILocation(line: 0, scope: !12621)
!12625 = !DILocation(line: 0, scope: !12477, inlinedAt: !12626)
!12626 = distinct !DILocation(line: 895, column: 2, scope: !12621)
!12627 = !DILocation(line: 0, scope: !12481, inlinedAt: !12626)
!12628 = !DILocation(line: 0, scope: !11510, inlinedAt: !12629)
!12629 = distinct !DILocation(line: 788, column: 2, scope: !12481, inlinedAt: !12626)
!12630 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !12631)
!12631 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !12629)
!12632 = !DILocation(line: 0, scope: !11519, inlinedAt: !12631)
!12633 = !DILocation(line: 789, column: 3, scope: !12491, inlinedAt: !12626)
!12634 = !DILocation(line: 0, scope: !11537, inlinedAt: !12635)
!12635 = distinct !DILocation(line: 788, column: 2, scope: !12492, inlinedAt: !12626)
!12636 = !DILocation(line: 0, scope: !11545, inlinedAt: !12637)
!12637 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !12635)
!12638 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !12637)
!12639 = !DILocation(line: 896, column: 8, scope: !12621)
!12640 = !DILocation(line: 897, column: 1, scope: !12621)
!12641 = distinct !DISubprogram(name: "z_set_prio", scope: !2149, file: !2149, line: 902, type: !11830, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12642)
!12642 = !{!12643, !12644, !12645, !12646, !12648}
!12643 = !DILocalVariable(name: "thread", arg: 1, scope: !12641, file: !2149, line: 902, type: !2044)
!12644 = !DILocalVariable(name: "prio", arg: 2, scope: !12641, file: !2149, line: 902, type: !103)
!12645 = !DILocalVariable(name: "need_sched", scope: !12641, file: !2149, line: 904, type: !170)
!12646 = !DILocalVariable(name: "__i", scope: !12647, file: !2149, line: 906, type: !11502)
!12647 = distinct !DILexicalBlock(scope: !12641, file: !2149, line: 906, column: 2)
!12648 = !DILocalVariable(name: "__key", scope: !12647, file: !2149, line: 906, type: !11502)
!12649 = !DILocation(line: 0, scope: !12641)
!12650 = !DILocation(line: 0, scope: !12647)
!12651 = !DILocation(line: 0, scope: !11510, inlinedAt: !12652)
!12652 = distinct !DILocation(line: 906, column: 2, scope: !12647)
!12653 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !12654)
!12654 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !12652)
!12655 = !DILocation(line: 0, scope: !11519, inlinedAt: !12654)
!12656 = !DILocation(line: 907, column: 16, scope: !12657)
!12657 = distinct !DILexicalBlock(scope: !12658, file: !2149, line: 906, column: 26)
!12658 = distinct !DILexicalBlock(scope: !12647, file: !2149, line: 906, column: 2)
!12659 = !DILocation(line: 909, column: 7, scope: !12657)
!12660 = !DILocation(line: 0, scope: !11679, inlinedAt: !12661)
!12661 = distinct !DILocation(line: 912, column: 5, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12663, file: !2149, line: 911, column: 63)
!12663 = distinct !DILexicalBlock(scope: !12664, file: !2149, line: 911, column: 8)
!12664 = distinct !DILexicalBlock(scope: !12665, file: !2149, line: 909, column: 19)
!12665 = distinct !DILexicalBlock(scope: !12657, file: !2149, line: 909, column: 7)
!12666 = !DILocation(line: 266, column: 28, scope: !11679, inlinedAt: !12661)
!12667 = !DILocation(line: 0, scope: !11687, inlinedAt: !12668)
!12668 = distinct !DILocation(line: 268, column: 3, scope: !11691, inlinedAt: !12661)
!12669 = !DILocation(line: 234, column: 2, scope: !11687, inlinedAt: !12668)
!12670 = !DILocation(line: 913, column: 23, scope: !12662)
!12671 = !DILocation(line: 0, scope: !11696, inlinedAt: !12672)
!12672 = distinct !DILocation(line: 914, column: 5, scope: !12662)
!12673 = !DILocation(line: 252, column: 28, scope: !11696, inlinedAt: !12672)
!12674 = !DILocation(line: 0, scope: !11703, inlinedAt: !12675)
!12675 = distinct !DILocation(line: 254, column: 3, scope: !11707, inlinedAt: !12672)
!12676 = !DILocation(line: 0, scope: !11710, inlinedAt: !12677)
!12677 = distinct !DILocation(line: 229, column: 2, scope: !11703, inlinedAt: !12675)
!12678 = !DILocation(line: 188, column: 2, scope: !11720, inlinedAt: !12677)
!12679 = !DILocation(line: 188, column: 2, scope: !11722, inlinedAt: !12677)
!12680 = !DILocation(line: 0, scope: !11720, inlinedAt: !12677)
!12681 = !DILocation(line: 189, column: 7, scope: !11725, inlinedAt: !12677)
!12682 = !DILocation(line: 189, column: 35, scope: !11725, inlinedAt: !12677)
!12683 = !DILocation(line: 189, column: 7, scope: !11726, inlinedAt: !12677)
!12684 = !DILocation(line: 190, column: 4, scope: !11730, inlinedAt: !12677)
!12685 = !DILocation(line: 192, column: 4, scope: !11730, inlinedAt: !12677)
!12686 = distinct !{!12686, !12678, !12687}
!12687 = !DILocation(line: 194, column: 2, scope: !11720, inlinedAt: !12677)
!12688 = !DILocation(line: 196, column: 2, scope: !11710, inlinedAt: !12677)
!12689 = !DILocation(line: 197, column: 1, scope: !11710, inlinedAt: !12677)
!12690 = !DILocation(line: 918, column: 4, scope: !12664)
!12691 = !DILocation(line: 919, column: 3, scope: !12664)
!12692 = !DILocation(line: 920, column: 22, scope: !12693)
!12693 = distinct !DILexicalBlock(scope: !12665, file: !2149, line: 919, column: 10)
!12694 = !DILocation(line: 0, scope: !11537, inlinedAt: !12695)
!12695 = distinct !DILocation(line: 906, column: 2, scope: !12658)
!12696 = !DILocation(line: 0, scope: !11545, inlinedAt: !12697)
!12697 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !12695)
!12698 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !12697)
!12699 = !DILocation(line: 926, column: 2, scope: !12641)
!12700 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2149, file: !2149, line: 929, type: !12701, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12703)
!12701 = !DISubroutineType(types: !12702)
!12702 = !{null, !2044, !103}
!12703 = !{!12704, !12705, !12706}
!12704 = !DILocalVariable(name: "thread", arg: 1, scope: !12700, file: !2149, line: 929, type: !2044)
!12705 = !DILocalVariable(name: "prio", arg: 2, scope: !12700, file: !2149, line: 929, type: !103)
!12706 = !DILocalVariable(name: "need_sched", scope: !12700, file: !2149, line: 931, type: !170)
!12707 = !DILocation(line: 0, scope: !12700)
!12708 = !DILocation(line: 931, column: 20, scope: !12700)
!12709 = !DILocation(line: 935, column: 17, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12700, file: !2149, line: 935, column: 6)
!12711 = !DILocation(line: 935, column: 20, scope: !12710)
!12712 = !DILocation(line: 935, column: 35, scope: !12710)
!12713 = !DILocation(line: 935, column: 48, scope: !12710)
!12714 = !DILocation(line: 935, column: 6, scope: !12700)
!12715 = !DILocation(line: 936, column: 3, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12710, file: !2149, line: 935, column: 55)
!12717 = !DILocation(line: 937, column: 2, scope: !12716)
!12718 = !DILocation(line: 938, column: 1, scope: !12700)
!12719 = distinct !DISubprogram(name: "k_sched_lock", scope: !2149, file: !2149, line: 987, type: !2730, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12720)
!12720 = !{!12721, !12723}
!12721 = !DILocalVariable(name: "__i", scope: !12722, file: !2149, line: 989, type: !11502)
!12722 = distinct !DILexicalBlock(scope: !12719, file: !2149, line: 989, column: 2)
!12723 = !DILocalVariable(name: "__key", scope: !12722, file: !2149, line: 989, type: !11502)
!12724 = !DILocation(line: 0, scope: !12722)
!12725 = !DILocation(line: 0, scope: !11510, inlinedAt: !12726)
!12726 = distinct !DILocation(line: 989, column: 2, scope: !12722)
!12727 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !12728)
!12728 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !12726)
!12729 = !DILocation(line: 0, scope: !11519, inlinedAt: !12728)
!12730 = !DILocation(line: 992, column: 3, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12732, file: !2149, line: 989, column: 26)
!12732 = distinct !DILexicalBlock(scope: !12722, file: !2149, line: 989, column: 2)
!12733 = !DILocation(line: 0, scope: !11537, inlinedAt: !12734)
!12734 = distinct !DILocation(line: 989, column: 2, scope: !12732)
!12735 = !DILocation(line: 0, scope: !11545, inlinedAt: !12736)
!12736 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !12734)
!12737 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !12736)
!12738 = !DILocation(line: 994, column: 1, scope: !12719)
!12739 = distinct !DISubprogram(name: "z_sched_lock", scope: !10782, file: !10782, line: 251, type: !2730, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !335)
!12740 = !DILocation(line: 256, column: 4, scope: !12739)
!12741 = !DILocation(line: 256, column: 19, scope: !12739)
!12742 = !DILocation(line: 256, column: 2, scope: !12739)
!12743 = !DILocation(line: 258, column: 2, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12739, file: !10782, line: 258, column: 2)
!12745 = !{i64 2152340451}
!12746 = !DILocation(line: 259, column: 1, scope: !12739)
!12747 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2149, file: !2149, line: 996, type: !2730, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12748)
!12748 = !{!12749, !12751}
!12749 = !DILocalVariable(name: "__i", scope: !12750, file: !2149, line: 998, type: !11502)
!12750 = distinct !DILexicalBlock(scope: !12747, file: !2149, line: 998, column: 2)
!12751 = !DILocalVariable(name: "__key", scope: !12750, file: !2149, line: 998, type: !11502)
!12752 = !DILocation(line: 0, scope: !12750)
!12753 = !DILocation(line: 0, scope: !11510, inlinedAt: !12754)
!12754 = distinct !DILocation(line: 998, column: 2, scope: !12750)
!12755 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !12756)
!12756 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !12754)
!12757 = !DILocation(line: 0, scope: !11519, inlinedAt: !12756)
!12758 = !DILocation(line: 1002, column: 5, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12760, file: !2149, line: 998, column: 26)
!12760 = distinct !DILexicalBlock(scope: !12750, file: !2149, line: 998, column: 2)
!12761 = !DILocation(line: 1002, column: 20, scope: !12759)
!12762 = !DILocation(line: 1002, column: 3, scope: !12759)
!12763 = !DILocation(line: 1003, column: 3, scope: !12759)
!12764 = !DILocation(line: 0, scope: !11537, inlinedAt: !12765)
!12765 = distinct !DILocation(line: 998, column: 2, scope: !12760)
!12766 = !DILocation(line: 0, scope: !11545, inlinedAt: !12767)
!12767 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !12765)
!12768 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !12767)
!12769 = !DILocation(line: 1011, column: 2, scope: !12747)
!12770 = !DILocation(line: 1012, column: 1, scope: !12747)
!12771 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2149, file: !2149, line: 1014, type: !11818, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !335)
!12772 = !DILocation(line: 1028, column: 25, scope: !12771)
!12773 = !DILocation(line: 1028, column: 2, scope: !12771)
!12774 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2149, file: !2149, line: 1155, type: !12775, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12777)
!12775 = !DISubroutineType(types: !12776)
!12776 = !{!170, !2073, !2073}
!12777 = !{!12778, !12779, !12780, !12781, !12782}
!12778 = !DILocalVariable(name: "a", arg: 1, scope: !12774, file: !2149, line: 1155, type: !2073)
!12779 = !DILocalVariable(name: "b", arg: 2, scope: !12774, file: !2149, line: 1155, type: !2073)
!12780 = !DILocalVariable(name: "thread_a", scope: !12774, file: !2149, line: 1157, type: !2044)
!12781 = !DILocalVariable(name: "thread_b", scope: !12774, file: !2149, line: 1157, type: !2044)
!12782 = !DILocalVariable(name: "cmp", scope: !12774, file: !2149, line: 1158, type: !675)
!12783 = !DILocation(line: 0, scope: !12774)
!12784 = !DILocation(line: 1160, column: 13, scope: !12774)
!12785 = !DILocation(line: 1161, column: 13, scope: !12774)
!12786 = !DILocation(line: 1163, column: 8, scope: !12774)
!12787 = !DILocation(line: 1165, column: 10, scope: !12788)
!12788 = distinct !DILexicalBlock(scope: !12774, file: !2149, line: 1165, column: 6)
!12789 = !DILocation(line: 1165, column: 6, scope: !12774)
!12790 = !DILocation(line: 1167, column: 17, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12788, file: !2149, line: 1167, column: 13)
!12792 = !DILocation(line: 1167, column: 13, scope: !12788)
!12793 = !DILocation(line: 1170, column: 25, scope: !12794)
!12794 = distinct !DILexicalBlock(scope: !12791, file: !2149, line: 1169, column: 9)
!12795 = !DILocation(line: 1170, column: 52, scope: !12794)
!12796 = !DILocation(line: 1170, column: 35, scope: !12794)
!12797 = !DILocation(line: 1170, column: 3, scope: !12794)
!12798 = !DILocation(line: 0, scope: !12788)
!12799 = !DILocation(line: 1173, column: 1, scope: !12774)
!12800 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2149, file: !2149, line: 1175, type: !12801, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12816)
!12801 = !DISubroutineType(types: !12802)
!12802 = !{null, !12803, !2044}
!12803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12804, size: 32)
!12804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !12805, line: 37, size: 128, elements: !12806)
!12805 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12806 = !{!12807, !12815}
!12807 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !12804, file: !12805, line: 38, baseType: !12808, size: 96)
!12808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !250, line: 83, size: 96, elements: !12809)
!12809 = !{!12810, !12811, !12814}
!12810 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !12808, file: !250, line: 84, baseType: !2073, size: 32)
!12811 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !12808, file: !250, line: 85, baseType: !12812, size: 32, offset: 32)
!12812 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !250, line: 81, baseType: !12813)
!12813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12775, size: 32)
!12814 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !12808, file: !250, line: 86, baseType: !103, size: 32, offset: 64)
!12815 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !12804, file: !12805, line: 39, baseType: !103, size: 32, offset: 96)
!12816 = !{!12817, !12818, !12819, !12820, !12829}
!12817 = !DILocalVariable(name: "pq", arg: 1, scope: !12800, file: !2149, line: 1175, type: !12803)
!12818 = !DILocalVariable(name: "thread", arg: 2, scope: !12800, file: !2149, line: 1175, type: !2044)
!12819 = !DILocalVariable(name: "t", scope: !12800, file: !2149, line: 1177, type: !2044)
!12820 = !DILocalVariable(name: "__f", scope: !12821, file: !2149, line: 1190, type: !12824)
!12821 = distinct !DILexicalBlock(scope: !12822, file: !2149, line: 1190, column: 3)
!12822 = distinct !DILexicalBlock(scope: !12823, file: !2149, line: 1189, column: 27)
!12823 = distinct !DILexicalBlock(scope: !12800, file: !2149, line: 1189, column: 6)
!12824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !250, line: 155, size: 96, elements: !12825)
!12825 = !{!12826, !12827, !12828}
!12826 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !12824, file: !250, line: 156, baseType: !2144, size: 32)
!12827 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !12824, file: !250, line: 157, baseType: !1694, size: 32, offset: 32)
!12828 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !12824, file: !250, line: 158, baseType: !675, size: 32, offset: 64)
!12829 = !DILocalVariable(name: "n", scope: !12830, file: !2149, line: 1190, type: !2073)
!12830 = distinct !DILexicalBlock(scope: !12831, file: !2149, line: 1190, column: 3)
!12831 = distinct !DILexicalBlock(scope: !12821, file: !2149, line: 1190, column: 3)
!12832 = !DILocation(line: 0, scope: !12800)
!12833 = !DILocation(line: 1181, column: 31, scope: !12800)
!12834 = !DILocation(line: 1181, column: 45, scope: !12800)
!12835 = !DILocation(line: 1181, column: 15, scope: !12800)
!12836 = !DILocation(line: 1181, column: 25, scope: !12800)
!12837 = !DILocation(line: 1189, column: 11, scope: !12823)
!12838 = !DILocation(line: 1189, column: 7, scope: !12823)
!12839 = !DILocation(line: 1189, column: 6, scope: !12800)
!12840 = !DILocation(line: 1190, column: 3, scope: !12821)
!12841 = !DILocation(line: 1190, column: 3, scope: !12830)
!12842 = !DILocation(line: 0, scope: !12830)
!12843 = !DILocation(line: 1190, column: 3, scope: !12831)
!12844 = !DILocation(line: 1193, column: 2, scope: !12822)
!12845 = !DILocation(line: 1191, column: 42, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12831, file: !2149, line: 1190, column: 54)
!12847 = !DILocation(line: 1191, column: 12, scope: !12846)
!12848 = !DILocation(line: 1191, column: 22, scope: !12846)
!12849 = distinct !{!12849, !12840, !12850}
!12850 = !DILocation(line: 1192, column: 3, scope: !12821)
!12851 = !DILocation(line: 1195, column: 17, scope: !12800)
!12852 = !DILocation(line: 1195, column: 37, scope: !12800)
!12853 = !DILocation(line: 1195, column: 2, scope: !12800)
!12854 = !DILocation(line: 1196, column: 1, scope: !12800)
!12855 = !DISubprogram(name: "z_rb_foreach_next", scope: !250, file: !250, line: 176, type: !12856, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !335)
!12856 = !DISubroutineType(types: !12857)
!12857 = !{!2073, !12858, !12859}
!12858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12808, size: 32)
!12859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12824, size: 32)
!12860 = !DISubprogram(name: "rb_insert", scope: !250, file: !250, line: 105, type: !12861, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !335)
!12861 = !DISubroutineType(types: !12862)
!12862 = !{null, !12858, !2073}
!12863 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2149, file: !2149, line: 1198, type: !12801, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12864)
!12864 = !{!12865, !12866}
!12865 = !DILocalVariable(name: "pq", arg: 1, scope: !12863, file: !2149, line: 1198, type: !12803)
!12866 = !DILocalVariable(name: "thread", arg: 2, scope: !12863, file: !2149, line: 1198, type: !2044)
!12867 = !DILocation(line: 0, scope: !12863)
!12868 = !DILocation(line: 1202, column: 17, scope: !12863)
!12869 = !DILocation(line: 1202, column: 37, scope: !12863)
!12870 = !DILocation(line: 1202, column: 2, scope: !12863)
!12871 = !DILocation(line: 1204, column: 16, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12863, file: !2149, line: 1204, column: 6)
!12873 = !DILocation(line: 1204, column: 7, scope: !12872)
!12874 = !DILocation(line: 1204, column: 6, scope: !12863)
!12875 = !DILocation(line: 1205, column: 7, scope: !12876)
!12876 = distinct !DILexicalBlock(scope: !12872, file: !2149, line: 1204, column: 22)
!12877 = !DILocation(line: 1205, column: 22, scope: !12876)
!12878 = !DILocation(line: 1206, column: 2, scope: !12876)
!12879 = !DILocation(line: 1207, column: 1, scope: !12863)
!12880 = !DISubprogram(name: "rb_remove", scope: !250, file: !250, line: 110, type: !12861, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !335)
!12881 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2149, file: !2149, line: 1209, type: !12882, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12884)
!12882 = !DISubroutineType(types: !12883)
!12883 = !{!2044, !12803}
!12884 = !{!12885, !12886, !12887}
!12885 = !DILocalVariable(name: "pq", arg: 1, scope: !12881, file: !2149, line: 1209, type: !12803)
!12886 = !DILocalVariable(name: "thread", scope: !12881, file: !2149, line: 1211, type: !2044)
!12887 = !DILocalVariable(name: "n", scope: !12881, file: !2149, line: 1212, type: !2073)
!12888 = !DILocation(line: 0, scope: !12881)
!12889 = !DILocation(line: 1212, column: 37, scope: !12881)
!12890 = !DILocation(line: 1212, column: 21, scope: !12881)
!12891 = !DILocation(line: 1217, column: 2, scope: !12881)
!12892 = distinct !DISubprogram(name: "rb_get_min", scope: !250, file: !250, line: 115, type: !12893, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12895)
!12893 = !DISubroutineType(types: !12894)
!12894 = !{!2073, !12858}
!12895 = !{!12896}
!12896 = !DILocalVariable(name: "tree", arg: 1, scope: !12892, file: !250, line: 115, type: !12858)
!12897 = !DILocation(line: 0, scope: !12892)
!12898 = !DILocation(line: 117, column: 9, scope: !12892)
!12899 = !DILocation(line: 117, column: 2, scope: !12892)
!12900 = !DISubprogram(name: "z_rb_get_minmax", scope: !250, file: !250, line: 100, type: !12901, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !335)
!12901 = !DISubroutineType(types: !12902)
!12902 = !{!2073, !12858, !167}
!12903 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2149, file: !2149, line: 1246, type: !12904, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12912)
!12904 = !DISubroutineType(types: !12905)
!12905 = !{!2044, !12906}
!12906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12907, size: 32)
!12907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !12805, line: 53, size: 2080, elements: !12908)
!12908 = !{!12909, !12911}
!12909 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !12907, file: !12805, line: 54, baseType: !12910, size: 2048)
!12910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2080, size: 2048, elements: !772)
!12911 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !12907, file: !12805, line: 55, baseType: !32, size: 32, offset: 2048)
!12912 = !{!12913, !12914, !12915, !12916}
!12913 = !DILocalVariable(name: "pq", arg: 1, scope: !12903, file: !2149, line: 1246, type: !12906)
!12914 = !DILocalVariable(name: "thread", scope: !12903, file: !2149, line: 1252, type: !2044)
!12915 = !DILocalVariable(name: "l", scope: !12903, file: !2149, line: 1253, type: !11713)
!12916 = !DILocalVariable(name: "n", scope: !12903, file: !2149, line: 1254, type: !2145)
!12917 = !DILocation(line: 0, scope: !12903)
!12918 = !DILocation(line: 1248, column: 11, scope: !12919)
!12919 = distinct !DILexicalBlock(scope: !12903, file: !2149, line: 1248, column: 6)
!12920 = !DILocation(line: 1248, column: 7, scope: !12919)
!12921 = !DILocation(line: 1248, column: 6, scope: !12903)
!12922 = !DILocation(line: 1253, column: 31, scope: !12903)
!12923 = !DILocation(line: 1253, column: 20, scope: !12903)
!12924 = !DILocation(line: 1254, column: 19, scope: !12903)
!12925 = !DILocation(line: 1260, column: 1, scope: !12903)
!12926 = distinct !DISubprogram(name: "z_unpend_all", scope: !2149, file: !2149, line: 1262, type: !12927, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12929)
!12927 = !DISubroutineType(types: !12928)
!12928 = !{!103, !2075}
!12929 = !{!12930, !12931, !12932}
!12930 = !DILocalVariable(name: "wait_q", arg: 1, scope: !12926, file: !2149, line: 1262, type: !2075)
!12931 = !DILocalVariable(name: "need_sched", scope: !12926, file: !2149, line: 1264, type: !103)
!12932 = !DILocalVariable(name: "thread", scope: !12926, file: !2149, line: 1265, type: !2044)
!12933 = !DILocation(line: 0, scope: !12926)
!12934 = !DILocation(line: 1267, column: 19, scope: !12926)
!12935 = !DILocation(line: 1267, column: 41, scope: !12926)
!12936 = !DILocation(line: 1267, column: 2, scope: !12926)
!12937 = !DILocation(line: 1268, column: 3, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !12926, file: !2149, line: 1267, column: 50)
!12939 = !DILocation(line: 1269, column: 3, scope: !12938)
!12940 = distinct !{!12940, !12936, !12941}
!12941 = !DILocation(line: 1271, column: 2, scope: !12926)
!12942 = !DILocation(line: 1273, column: 2, scope: !12926)
!12943 = distinct !DISubprogram(name: "z_waitq_head", scope: !11108, file: !11108, line: 52, type: !12561, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12944)
!12944 = !{!12945}
!12945 = !DILocalVariable(name: "w", arg: 1, scope: !12943, file: !11108, line: 52, type: !2075)
!12946 = !DILocation(line: 0, scope: !12943)
!12947 = !DILocation(line: 54, column: 52, scope: !12943)
!12948 = !DILocation(line: 54, column: 28, scope: !12943)
!12949 = !DILocation(line: 54, column: 9, scope: !12943)
!12950 = !DILocation(line: 54, column: 2, scope: !12943)
!12951 = distinct !DISubprogram(name: "init_ready_q", scope: !2149, file: !2149, line: 1276, type: !12952, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12959)
!12952 = !DISubroutineType(types: !12953)
!12953 = !{null, !12954}
!12954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12955, size: 32)
!12955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !260, line: 83, size: 96, elements: !12956)
!12956 = !{!12957, !12958}
!12957 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !12955, file: !260, line: 86, baseType: !2044, size: 32)
!12958 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !12955, file: !260, line: 90, baseType: !2080, size: 64, offset: 32)
!12959 = !{!12960}
!12960 = !DILocalVariable(name: "rq", arg: 1, scope: !12951, file: !2149, line: 1276, type: !12954)
!12961 = !DILocation(line: 0, scope: !12951)
!12962 = !DILocation(line: 1289, column: 22, scope: !12951)
!12963 = !DILocation(line: 1289, column: 2, scope: !12951)
!12964 = !DILocation(line: 1291, column: 1, scope: !12951)
!12965 = distinct !DISubprogram(name: "sys_dlist_init", scope: !234, file: !234, line: 197, type: !12966, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12968)
!12966 = !DISubroutineType(types: !12967)
!12967 = !{null, !11713}
!12968 = !{!12969}
!12969 = !DILocalVariable(name: "list", arg: 1, scope: !12965, file: !234, line: 197, type: !11713)
!12970 = !DILocation(line: 0, scope: !12965)
!12971 = !DILocation(line: 199, column: 8, scope: !12965)
!12972 = !DILocation(line: 199, column: 13, scope: !12965)
!12973 = !DILocation(line: 200, column: 8, scope: !12965)
!12974 = !DILocation(line: 200, column: 13, scope: !12965)
!12975 = !DILocation(line: 201, column: 1, scope: !12965)
!12976 = distinct !DISubprogram(name: "z_sched_init", scope: !2149, file: !2149, line: 1293, type: !2730, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !335)
!12977 = !DILocation(line: 1302, column: 2, scope: !12976)
!12978 = !DILocation(line: 1306, column: 2, scope: !12976)
!12979 = !DILocation(line: 1309, column: 1, scope: !12976)
!12980 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2149, file: !2149, line: 1311, type: !12981, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12984)
!12981 = !DISubroutineType(types: !12982)
!12982 = !{!103, !12983}
!12983 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !224, line: 347, baseType: !2044)
!12984 = !{!12985}
!12985 = !DILocalVariable(name: "thread", arg: 1, scope: !12980, file: !2149, line: 1311, type: !12983)
!12986 = !DILocation(line: 0, scope: !12980)
!12987 = !DILocation(line: 1313, column: 22, scope: !12980)
!12988 = !DILocation(line: 1313, column: 9, scope: !12980)
!12989 = !DILocation(line: 1313, column: 2, scope: !12980)
!12990 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2149, file: !2149, line: 1325, type: !12991, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !12993)
!12991 = !DISubroutineType(types: !12992)
!12992 = !{null, !12983, !103}
!12993 = !{!12994, !12995, !12996}
!12994 = !DILocalVariable(name: "thread", arg: 1, scope: !12990, file: !2149, line: 1325, type: !12983)
!12995 = !DILocalVariable(name: "prio", arg: 2, scope: !12990, file: !2149, line: 1325, type: !103)
!12996 = !DILocalVariable(name: "th", scope: !12990, file: !2149, line: 1334, type: !2044)
!12997 = !DILocation(line: 0, scope: !12990)
!12998 = !DILocation(line: 1336, column: 2, scope: !12990)
!12999 = !DILocation(line: 1337, column: 1, scope: !12990)
!13000 = distinct !DISubprogram(name: "k_can_yield", scope: !2149, file: !2149, line: 1384, type: !5458, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !335)
!13001 = !DILocation(line: 1386, column: 11, scope: !13000)
!13002 = !DILocation(line: 1386, column: 29, scope: !13000)
!13003 = !DILocation(line: 1386, column: 32, scope: !13000)
!13004 = !DILocation(line: 1386, column: 46, scope: !13000)
!13005 = !DILocation(line: 1387, column: 28, scope: !13000)
!13006 = !DILocation(line: 1387, column: 4, scope: !13000)
!13007 = !DILocation(line: 1386, column: 2, scope: !13000)
!13008 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !320, file: !320, line: 989, type: !5458, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !335)
!13009 = !DILocation(line: 993, column: 10, scope: !13008)
!13010 = !DILocation(line: 993, column: 2, scope: !13008)
!13011 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2149, file: !2149, line: 1390, type: !2730, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13012)
!13012 = !{!13013}
!13013 = !DILocalVariable(name: "key", scope: !13011, file: !2149, line: 1396, type: !11502)
!13014 = !DILocation(line: 0, scope: !11510, inlinedAt: !13015)
!13015 = distinct !DILocation(line: 1396, column: 25, scope: !13011)
!13016 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !13017)
!13017 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !13015)
!13018 = !DILocation(line: 0, scope: !11519, inlinedAt: !13017)
!13019 = !DILocation(line: 0, scope: !13011)
!13020 = !DILocation(line: 1400, column: 18, scope: !13021)
!13021 = distinct !DILexicalBlock(scope: !13022, file: !2149, line: 1399, column: 36)
!13022 = distinct !DILexicalBlock(scope: !13011, file: !2149, line: 1398, column: 6)
!13023 = !DILocation(line: 0, scope: !11679, inlinedAt: !13024)
!13024 = distinct !DILocation(line: 1400, column: 3, scope: !13021)
!13025 = !DILocation(line: 266, column: 15, scope: !11679, inlinedAt: !13024)
!13026 = !DILocation(line: 266, column: 28, scope: !11679, inlinedAt: !13024)
!13027 = !DILocation(line: 0, scope: !11687, inlinedAt: !13028)
!13028 = distinct !DILocation(line: 268, column: 3, scope: !11691, inlinedAt: !13024)
!13029 = !DILocation(line: 234, column: 2, scope: !11687, inlinedAt: !13028)
!13030 = !DILocation(line: 1402, column: 15, scope: !13011)
!13031 = !DILocation(line: 0, scope: !11696, inlinedAt: !13032)
!13032 = distinct !DILocation(line: 1402, column: 2, scope: !13011)
!13033 = !DILocation(line: 252, column: 15, scope: !11696, inlinedAt: !13032)
!13034 = !DILocation(line: 252, column: 28, scope: !11696, inlinedAt: !13032)
!13035 = !DILocation(line: 0, scope: !11703, inlinedAt: !13036)
!13036 = distinct !DILocation(line: 254, column: 3, scope: !11707, inlinedAt: !13032)
!13037 = !DILocation(line: 0, scope: !11710, inlinedAt: !13038)
!13038 = distinct !DILocation(line: 229, column: 2, scope: !11703, inlinedAt: !13036)
!13039 = !DILocation(line: 188, column: 2, scope: !11720, inlinedAt: !13038)
!13040 = !DILocation(line: 188, column: 2, scope: !11722, inlinedAt: !13038)
!13041 = !DILocation(line: 0, scope: !11720, inlinedAt: !13038)
!13042 = !DILocation(line: 189, column: 7, scope: !11725, inlinedAt: !13038)
!13043 = !DILocation(line: 189, column: 35, scope: !11725, inlinedAt: !13038)
!13044 = !DILocation(line: 189, column: 7, scope: !11726, inlinedAt: !13038)
!13045 = !DILocation(line: 191, column: 21, scope: !11730, inlinedAt: !13038)
!13046 = !DILocation(line: 190, column: 4, scope: !11730, inlinedAt: !13038)
!13047 = !DILocation(line: 192, column: 4, scope: !11730, inlinedAt: !13038)
!13048 = distinct !{!13048, !13039, !13049}
!13049 = !DILocation(line: 194, column: 2, scope: !11720, inlinedAt: !13038)
!13050 = !DILocation(line: 196, column: 37, scope: !11710, inlinedAt: !13038)
!13051 = !DILocation(line: 196, column: 2, scope: !11710, inlinedAt: !13038)
!13052 = !DILocation(line: 197, column: 1, scope: !11710, inlinedAt: !13038)
!13053 = !DILocation(line: 1403, column: 2, scope: !13011)
!13054 = !DILocation(line: 0, scope: !12121, inlinedAt: !13055)
!13055 = distinct !DILocation(line: 1404, column: 2, scope: !13011)
!13056 = !DILocation(line: 196, column: 9, scope: !12121, inlinedAt: !13055)
!13057 = !DILocation(line: 1405, column: 1, scope: !13011)
!13058 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2149, file: !2149, line: 1459, type: !13059, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13061)
!13059 = !DISubroutineType(types: !13060)
!13060 = !{!675, !12301}
!13061 = !{!13062, !13063, !13064}
!13062 = !DILocalVariable(name: "timeout", arg: 1, scope: !13058, file: !2149, line: 1459, type: !12301)
!13063 = !DILocalVariable(name: "ticks", scope: !13058, file: !2149, line: 1461, type: !1417)
!13064 = !DILocalVariable(name: "ret", scope: !13058, file: !2149, line: 1480, type: !675)
!13065 = !DILocation(line: 0, scope: !13058)
!13066 = !DILocation(line: 1468, column: 6, scope: !13067)
!13067 = distinct !DILexicalBlock(scope: !13058, file: !2149, line: 1468, column: 6)
!13068 = !DILocation(line: 1468, column: 6, scope: !13058)
!13069 = !DILocation(line: 1469, column: 20, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13067, file: !2149, line: 1468, column: 40)
!13071 = !DILocation(line: 1469, column: 3, scope: !13070)
!13072 = !DILocation(line: 1473, column: 3, scope: !13070)
!13073 = !DILocation(line: 1478, column: 10, scope: !13058)
!13074 = !DILocation(line: 1480, column: 16, scope: !13058)
!13075 = !DILocation(line: 1485, column: 1, scope: !13058)
!13076 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3155, file: !3155, line: 310, type: !13077, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13079)
!13077 = !DISubroutineType(types: !13078)
!13078 = !{null, !12983}
!13079 = !{!13080}
!13080 = !DILocalVariable(name: "thread", arg: 1, scope: !13076, file: !3155, line: 310, type: !12983)
!13081 = !DILocation(line: 0, scope: !13076)
!13082 = !DILocation(line: 319, column: 2, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13076, file: !3155, line: 319, column: 2)
!13084 = !{i64 2152258840}
!13085 = !DILocation(line: 320, column: 2, scope: !13076)
!13086 = !DILocation(line: 321, column: 1, scope: !13076)
!13087 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2149, file: !2149, line: 1415, type: !13088, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13090)
!13088 = !DISubroutineType(types: !13089)
!13089 = !{!675, !1417}
!13090 = !{!13091, !13092, !13093, !13094}
!13091 = !DILocalVariable(name: "ticks", arg: 1, scope: !13087, file: !2149, line: 1415, type: !1417)
!13092 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !13087, file: !2149, line: 1418, type: !121)
!13093 = !DILocalVariable(name: "timeout", scope: !13087, file: !2149, line: 1430, type: !12301)
!13094 = !DILocalVariable(name: "key", scope: !13087, file: !2149, line: 1437, type: !11502)
!13095 = !DILocation(line: 0, scope: !13087)
!13096 = !DILocation(line: 1425, column: 12, scope: !13097)
!13097 = distinct !DILexicalBlock(scope: !13087, file: !2149, line: 1425, column: 6)
!13098 = !DILocation(line: 1425, column: 6, scope: !13087)
!13099 = !DILocation(line: 1426, column: 3, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13097, file: !2149, line: 1425, column: 18)
!13101 = !DILocation(line: 1427, column: 3, scope: !13100)
!13102 = !DILocation(line: 1431, column: 24, scope: !13103)
!13103 = distinct !DILexicalBlock(scope: !13087, file: !2149, line: 1431, column: 6)
!13104 = !DILocation(line: 1431, column: 6, scope: !13087)
!13105 = !DILocation(line: 1432, column: 35, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13103, file: !2149, line: 1431, column: 30)
!13107 = !DILocation(line: 1432, column: 27, scope: !13106)
!13108 = !DILocation(line: 1433, column: 2, scope: !13106)
!13109 = !DILocation(line: 1434, column: 27, scope: !13110)
!13110 = distinct !DILexicalBlock(scope: !13103, file: !2149, line: 1433, column: 9)
!13111 = !DILocation(line: 0, scope: !13103)
!13112 = !DILocation(line: 0, scope: !11510, inlinedAt: !13113)
!13113 = distinct !DILocation(line: 1437, column: 25, scope: !13087)
!13114 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !13115)
!13115 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !13113)
!13116 = !DILocation(line: 0, scope: !11519, inlinedAt: !13115)
!13117 = !DILocation(line: 1440, column: 20, scope: !13087)
!13118 = !DILocation(line: 1440, column: 18, scope: !13087)
!13119 = !DILocation(line: 1442, column: 2, scope: !13087)
!13120 = !DILocation(line: 1443, column: 23, scope: !13087)
!13121 = !DILocation(line: 1443, column: 2, scope: !13087)
!13122 = !DILocation(line: 1444, column: 29, scope: !13087)
!13123 = !DILocation(line: 1444, column: 2, scope: !13087)
!13124 = !DILocation(line: 0, scope: !12121, inlinedAt: !13125)
!13125 = distinct !DILocation(line: 1446, column: 8, scope: !13087)
!13126 = !DILocation(line: 196, column: 9, scope: !12121, inlinedAt: !13125)
!13127 = !DILocation(line: 1450, column: 10, scope: !13087)
!13128 = !DILocation(line: 1450, column: 45, scope: !13087)
!13129 = !DILocation(line: 1450, column: 43, scope: !13087)
!13130 = !DILocation(line: 1451, column: 6, scope: !13087)
!13131 = !DILocation(line: 1457, column: 1, scope: !13087)
!13132 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !11343, file: !11343, line: 1103, type: !11344, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13133)
!13133 = !{!13134}
!13134 = !DILocalVariable(name: "t", arg: 1, scope: !13132, file: !11343, line: 1103, type: !2023)
!13135 = !DILocation(line: 0, scope: !13132)
!13136 = !DILocation(line: 0, scope: !11557, inlinedAt: !13137)
!13137 = distinct !DILocation(line: 1106, column: 9, scope: !13132)
!13138 = !DILocation(line: 139, column: 13, scope: !13139, inlinedAt: !13137)
!13139 = distinct !DILexicalBlock(scope: !13140, file: !11343, line: 138, column: 10)
!13140 = distinct !DILexicalBlock(scope: !13141, file: !11343, line: 136, column: 7)
!13141 = distinct !DILexicalBlock(scope: !11578, file: !11343, line: 134, column: 17)
!13142 = !DILocation(line: 1106, column: 2, scope: !13132)
!13143 = distinct !DISubprogram(name: "k_yield", scope: !3155, file: !3155, line: 140, type: !2730, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !335)
!13144 = !DILocation(line: 148, column: 2, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13143, file: !3155, line: 148, column: 2)
!13146 = !{i64 2152258160}
!13147 = !DILocation(line: 149, column: 2, scope: !13143)
!13148 = !DILocation(line: 150, column: 1, scope: !13143)
!13149 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2149, file: !2149, line: 1495, type: !13150, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13152)
!13150 = !DISubroutineType(types: !13151)
!13151 = !{!675, !103}
!13152 = !{!13153, !13154}
!13153 = !DILocalVariable(name: "us", arg: 1, scope: !13149, file: !2149, line: 1495, type: !103)
!13154 = !DILocalVariable(name: "ticks", scope: !13149, file: !2149, line: 1497, type: !675)
!13155 = !DILocation(line: 0, scope: !13149)
!13156 = !DILocation(line: 1501, column: 31, scope: !13149)
!13157 = !DILocation(line: 1501, column: 10, scope: !13149)
!13158 = !DILocation(line: 1502, column: 23, scope: !13149)
!13159 = !DILocation(line: 1502, column: 10, scope: !13149)
!13160 = !DILocation(line: 1506, column: 31, scope: !13149)
!13161 = !DILocation(line: 1506, column: 9, scope: !13149)
!13162 = !DILocation(line: 1506, column: 2, scope: !13149)
!13163 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !11343, file: !11343, line: 571, type: !11344, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13164)
!13164 = !{!13165}
!13165 = !DILocalVariable(name: "t", arg: 1, scope: !13163, file: !11343, line: 571, type: !2023)
!13166 = !DILocation(line: 0, scope: !13163)
!13167 = !DILocation(line: 0, scope: !11557, inlinedAt: !13168)
!13168 = distinct !DILocation(line: 574, column: 9, scope: !13163)
!13169 = !DILocation(line: 135, column: 5, scope: !13141, inlinedAt: !13168)
!13170 = !DILocation(line: 139, column: 13, scope: !13139, inlinedAt: !13168)
!13171 = !DILocation(line: 574, column: 2, scope: !13163)
!13172 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !11343, file: !11343, line: 1187, type: !11344, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13173)
!13173 = !{!13174}
!13174 = !DILocalVariable(name: "t", arg: 1, scope: !13172, file: !11343, line: 1187, type: !2023)
!13175 = !DILocation(line: 0, scope: !13172)
!13176 = !DILocation(line: 0, scope: !11557, inlinedAt: !13177)
!13177 = distinct !DILocation(line: 1190, column: 9, scope: !13172)
!13178 = !DILocation(line: 145, column: 13, scope: !13179, inlinedAt: !13177)
!13179 = distinct !DILexicalBlock(scope: !11575, file: !11343, line: 144, column: 10)
!13180 = !DILocation(line: 1190, column: 2, scope: !13172)
!13181 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2149, file: !2149, line: 1517, type: !13077, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13182)
!13182 = !{!13183}
!13183 = !DILocalVariable(name: "thread", arg: 1, scope: !13181, file: !2149, line: 1517, type: !12983)
!13184 = !DILocation(line: 0, scope: !13181)
!13185 = !DILocation(line: 1521, column: 6, scope: !13186)
!13186 = distinct !DILexicalBlock(scope: !13181, file: !2149, line: 1521, column: 6)
!13187 = !DILocation(line: 1521, column: 6, scope: !13181)
!13188 = !DILocation(line: 1525, column: 6, scope: !13189)
!13189 = distinct !DILexicalBlock(scope: !13181, file: !2149, line: 1525, column: 6)
!13190 = !DILocation(line: 1525, column: 37, scope: !13189)
!13191 = !DILocation(line: 1525, column: 6, scope: !13181)
!13192 = !DILocation(line: 1527, column: 20, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13194, file: !2149, line: 1527, column: 7)
!13194 = distinct !DILexicalBlock(scope: !13189, file: !2149, line: 1525, column: 42)
!13195 = !DILocation(line: 1527, column: 33, scope: !13193)
!13196 = !DILocation(line: 1527, column: 7, scope: !13194)
!13197 = !DILocation(line: 1532, column: 2, scope: !13181)
!13198 = !DILocation(line: 1533, column: 2, scope: !13181)
!13199 = !DILocation(line: 1031, column: 3, scope: !12154, inlinedAt: !13200)
!13200 = distinct !DILocation(line: 48, column: 10, scope: !12158, inlinedAt: !13201)
!13201 = distinct !DILocation(line: 1537, column: 7, scope: !13202)
!13202 = distinct !DILexicalBlock(scope: !13181, file: !2149, line: 1537, column: 6)
!13203 = !DILocation(line: 0, scope: !12154, inlinedAt: !13200)
!13204 = !DILocation(line: 48, column: 9, scope: !12158, inlinedAt: !13201)
!13205 = !DILocation(line: 1537, column: 6, scope: !13181)
!13206 = !DILocation(line: 1538, column: 3, scope: !13207)
!13207 = distinct !DILexicalBlock(scope: !13202, file: !2149, line: 1537, column: 25)
!13208 = !DILocation(line: 1539, column: 2, scope: !13207)
!13209 = !DILocation(line: 1540, column: 1, scope: !13181)
!13210 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !10782, file: !10782, line: 101, type: !11628, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13211)
!13211 = !{!13212}
!13212 = !DILocalVariable(name: "thread", arg: 1, scope: !13210, file: !10782, line: 101, type: !2044)
!13213 = !DILocation(line: 0, scope: !13210)
!13214 = !DILocation(line: 103, column: 23, scope: !13210)
!13215 = !DILocation(line: 103, column: 36, scope: !13210)
!13216 = !DILocation(line: 103, column: 55, scope: !13210)
!13217 = !DILocation(line: 103, column: 2, scope: !13210)
!13218 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2149, file: !2149, line: 1567, type: !13219, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13221)
!13219 = !DISubroutineType(types: !13220)
!13220 = !{!12983}
!13221 = !{!13222}
!13222 = !DILocalVariable(name: "ret", scope: !13218, file: !2149, line: 1577, type: !12983)
!13223 = !DILocation(line: 1577, column: 30, scope: !13218)
!13224 = !DILocation(line: 0, scope: !13218)
!13225 = !DILocation(line: 1582, column: 2, scope: !13218)
!13226 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2149, file: !2149, line: 1593, type: !5733, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !335)
!13227 = !DILocation(line: 1031, column: 3, scope: !12154, inlinedAt: !13228)
!13228 = distinct !DILocation(line: 48, column: 10, scope: !12158, inlinedAt: !13229)
!13229 = distinct !DILocation(line: 1595, column: 10, scope: !13226)
!13230 = !DILocation(line: 0, scope: !12154, inlinedAt: !13228)
!13231 = !DILocation(line: 48, column: 9, scope: !12158, inlinedAt: !13229)
!13232 = !DILocation(line: 1595, column: 27, scope: !13226)
!13233 = !DILocation(line: 1595, column: 41, scope: !13226)
!13234 = !DILocation(line: 1595, column: 30, scope: !13226)
!13235 = !DILocation(line: 1595, column: 2, scope: !13226)
!13236 = distinct !DISubprogram(name: "z_thread_abort", scope: !2149, file: !2149, line: 1725, type: !11468, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13237)
!13237 = !{!13238, !13239}
!13238 = !DILocalVariable(name: "thread", arg: 1, scope: !13236, file: !2149, line: 1725, type: !2044)
!13239 = !DILocalVariable(name: "key", scope: !13236, file: !2149, line: 1727, type: !11502)
!13240 = !DILocation(line: 0, scope: !13236)
!13241 = !DILocation(line: 0, scope: !11510, inlinedAt: !13242)
!13242 = distinct !DILocation(line: 1727, column: 25, scope: !13236)
!13243 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !13244)
!13244 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !13242)
!13245 = !DILocation(line: 0, scope: !11519, inlinedAt: !13244)
!13246 = !DILocation(line: 1729, column: 20, scope: !13247)
!13247 = distinct !DILexicalBlock(scope: !13236, file: !2149, line: 1729, column: 6)
!13248 = !DILocation(line: 1729, column: 33, scope: !13247)
!13249 = !DILocation(line: 1729, column: 48, scope: !13247)
!13250 = !DILocation(line: 1729, column: 6, scope: !13236)
!13251 = !DILocation(line: 0, scope: !11537, inlinedAt: !13252)
!13252 = distinct !DILocation(line: 1730, column: 3, scope: !13253)
!13253 = distinct !DILexicalBlock(scope: !13247, file: !2149, line: 1729, column: 54)
!13254 = !DILocation(line: 0, scope: !11545, inlinedAt: !13255)
!13255 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !13252)
!13256 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !13255)
!13257 = !DILocation(line: 1732, column: 3, scope: !13258)
!13258 = distinct !DILexicalBlock(scope: !13253, file: !2149, line: 1732, column: 3)
!13259 = !{i64 2152995570, i64 2152995586, i64 2152995612, i64 2152995640, i64 2152995660}
!13260 = !DILocation(line: 1733, column: 3, scope: !13253)
!13261 = !DILocation(line: 1736, column: 20, scope: !13262)
!13262 = distinct !DILexicalBlock(scope: !13236, file: !2149, line: 1736, column: 6)
!13263 = !DILocation(line: 1736, column: 33, scope: !13262)
!13264 = !DILocation(line: 1736, column: 49, scope: !13262)
!13265 = !DILocation(line: 1736, column: 6, scope: !13236)
!13266 = !DILocation(line: 0, scope: !11537, inlinedAt: !13267)
!13267 = distinct !DILocation(line: 1737, column: 3, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13262, file: !2149, line: 1736, column: 56)
!13269 = !DILocation(line: 0, scope: !11545, inlinedAt: !13270)
!13270 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !13267)
!13271 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !13270)
!13272 = !DILocation(line: 1738, column: 3, scope: !13268)
!13273 = !DILocation(line: 1775, column: 2, scope: !13236)
!13274 = !DILocation(line: 1776, column: 16, scope: !13275)
!13275 = distinct !DILexicalBlock(scope: !13236, file: !2149, line: 1776, column: 6)
!13276 = !DILocation(line: 1776, column: 13, scope: !13275)
!13277 = !DILocation(line: 1776, column: 25, scope: !13275)
!13278 = !DILocation(line: 1031, column: 3, scope: !12154, inlinedAt: !13279)
!13279 = distinct !DILocation(line: 48, column: 10, scope: !12158, inlinedAt: !13280)
!13280 = distinct !DILocation(line: 1776, column: 29, scope: !13275)
!13281 = !DILocation(line: 0, scope: !12154, inlinedAt: !13279)
!13282 = !DILocation(line: 48, column: 9, scope: !12158, inlinedAt: !13280)
!13283 = !DILocation(line: 1776, column: 6, scope: !13236)
!13284 = !DILocation(line: 0, scope: !12121, inlinedAt: !13285)
!13285 = distinct !DILocation(line: 1777, column: 3, scope: !13286)
!13286 = distinct !DILexicalBlock(scope: !13275, file: !2149, line: 1776, column: 47)
!13287 = !DILocation(line: 196, column: 9, scope: !12121, inlinedAt: !13285)
!13288 = !DILocation(line: 1779, column: 2, scope: !13286)
!13289 = !DILocation(line: 0, scope: !11537, inlinedAt: !13290)
!13290 = distinct !DILocation(line: 1780, column: 2, scope: !13236)
!13291 = !DILocation(line: 0, scope: !11545, inlinedAt: !13292)
!13292 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !13290)
!13293 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !13292)
!13294 = !DILocation(line: 1781, column: 1, scope: !13236)
!13295 = distinct !DISubprogram(name: "end_thread", scope: !2149, file: !2149, line: 1690, type: !11468, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13296)
!13296 = !{!13297}
!13297 = !DILocalVariable(name: "thread", arg: 1, scope: !13295, file: !2149, line: 1690, type: !2044)
!13298 = !DILocation(line: 0, scope: !13295)
!13299 = !DILocation(line: 1695, column: 20, scope: !13300)
!13300 = distinct !DILexicalBlock(scope: !13295, file: !2149, line: 1695, column: 6)
!13301 = !DILocation(line: 1695, column: 33, scope: !13300)
!13302 = !DILocation(line: 1695, column: 49, scope: !13300)
!13303 = !DILocation(line: 1695, column: 6, scope: !13295)
!13304 = !DILocation(line: 1697, column: 29, scope: !13305)
!13305 = distinct !DILexicalBlock(scope: !13300, file: !2149, line: 1695, column: 56)
!13306 = !DILocation(line: 1698, column: 7, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13305, file: !2149, line: 1698, column: 7)
!13308 = !DILocation(line: 1698, column: 7, scope: !13305)
!13309 = !DILocation(line: 0, scope: !11679, inlinedAt: !13310)
!13310 = distinct !DILocation(line: 1699, column: 4, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13307, file: !2149, line: 1698, column: 35)
!13312 = !DILocation(line: 266, column: 28, scope: !11679, inlinedAt: !13310)
!13313 = !DILocation(line: 0, scope: !11687, inlinedAt: !13314)
!13314 = distinct !DILocation(line: 268, column: 3, scope: !11691, inlinedAt: !13310)
!13315 = !DILocation(line: 234, column: 2, scope: !11687, inlinedAt: !13314)
!13316 = !DILocation(line: 1700, column: 3, scope: !13311)
!13317 = !DILocation(line: 1701, column: 20, scope: !13318)
!13318 = distinct !DILexicalBlock(scope: !13305, file: !2149, line: 1701, column: 7)
!13319 = !DILocation(line: 1701, column: 30, scope: !13318)
!13320 = !DILocation(line: 1701, column: 7, scope: !13305)
!13321 = !DILocation(line: 1702, column: 4, scope: !13322)
!13322 = distinct !DILexicalBlock(scope: !13318, file: !2149, line: 1701, column: 39)
!13323 = !DILocation(line: 1703, column: 3, scope: !13322)
!13324 = !DILocation(line: 1704, column: 9, scope: !13305)
!13325 = !DILocation(line: 1705, column: 23, scope: !13305)
!13326 = !DILocation(line: 1705, column: 3, scope: !13305)
!13327 = !DILocation(line: 1706, column: 3, scope: !13305)
!13328 = !DILocation(line: 1722, column: 2, scope: !13305)
!13329 = !DILocation(line: 1723, column: 1, scope: !13295)
!13330 = distinct !DISubprogram(name: "unpend_all", scope: !2149, file: !2149, line: 1674, type: !13331, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13333)
!13331 = !DISubroutineType(types: !13332)
!13332 = !{null, !2075}
!13333 = !{!13334, !13335}
!13334 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13330, file: !2149, line: 1674, type: !2075)
!13335 = !DILocalVariable(name: "thread", scope: !13330, file: !2149, line: 1676, type: !2044)
!13336 = !DILocation(line: 0, scope: !13330)
!13337 = !DILocation(line: 1678, column: 19, scope: !13330)
!13338 = !DILocation(line: 1678, column: 41, scope: !13330)
!13339 = !DILocation(line: 1678, column: 2, scope: !13330)
!13340 = !DILocation(line: 1679, column: 3, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !13330, file: !2149, line: 1678, column: 50)
!13342 = !DILocation(line: 1680, column: 9, scope: !13341)
!13343 = !DILocalVariable(name: "thread", arg: 1, scope: !13344, file: !10802, line: 65, type: !2044)
!13344 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !10802, file: !10802, line: 65, type: !13345, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13347)
!13345 = !DISubroutineType(types: !13346)
!13346 = !{null, !2044, !32}
!13347 = !{!13343, !13348}
!13348 = !DILocalVariable(name: "value", arg: 2, scope: !13344, file: !10802, line: 65, type: !32)
!13349 = !DILocation(line: 0, scope: !13344, inlinedAt: !13350)
!13350 = distinct !DILocation(line: 1681, column: 3, scope: !13341)
!13351 = !DILocation(line: 67, column: 15, scope: !13344, inlinedAt: !13350)
!13352 = !DILocation(line: 67, column: 33, scope: !13344, inlinedAt: !13350)
!13353 = !DILocation(line: 1682, column: 3, scope: !13341)
!13354 = distinct !{!13354, !13339, !13355}
!13355 = !DILocation(line: 1683, column: 2, scope: !13330)
!13356 = !DILocation(line: 1684, column: 1, scope: !13330)
!13357 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2149, file: !2149, line: 1794, type: !13358, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13360)
!13358 = !DISubroutineType(types: !13359)
!13359 = !{!103, !2044, !12301}
!13360 = !{!13361, !13362, !13363, !13364}
!13361 = !DILocalVariable(name: "thread", arg: 1, scope: !13357, file: !2149, line: 1794, type: !2044)
!13362 = !DILocalVariable(name: "timeout", arg: 2, scope: !13357, file: !2149, line: 1794, type: !12301)
!13363 = !DILocalVariable(name: "key", scope: !13357, file: !2149, line: 1796, type: !11502)
!13364 = !DILocalVariable(name: "ret", scope: !13357, file: !2149, line: 1797, type: !103)
!13365 = !DILocation(line: 0, scope: !13357)
!13366 = !DILocation(line: 0, scope: !11510, inlinedAt: !13367)
!13367 = distinct !DILocation(line: 1796, column: 25, scope: !13357)
!13368 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !13369)
!13369 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !13367)
!13370 = !DILocation(line: 0, scope: !11519, inlinedAt: !13369)
!13371 = !DILocation(line: 1801, column: 20, scope: !13372)
!13372 = distinct !DILexicalBlock(scope: !13357, file: !2149, line: 1801, column: 6)
!13373 = !DILocation(line: 1801, column: 33, scope: !13372)
!13374 = !DILocation(line: 1801, column: 49, scope: !13372)
!13375 = !DILocation(line: 1801, column: 6, scope: !13357)
!13376 = !DILocation(line: 1803, column: 13, scope: !13377)
!13377 = distinct !DILexicalBlock(scope: !13372, file: !2149, line: 1803, column: 13)
!13378 = !DILocation(line: 1803, column: 13, scope: !13372)
!13379 = !DILocation(line: 1805, column: 24, scope: !13380)
!13380 = distinct !DILexicalBlock(scope: !13377, file: !2149, line: 1805, column: 13)
!13381 = !DILocation(line: 1805, column: 21, scope: !13380)
!13382 = !DILocation(line: 1805, column: 34, scope: !13380)
!13383 = !DILocation(line: 1806, column: 20, scope: !13380)
!13384 = !DILocation(line: 1806, column: 44, scope: !13380)
!13385 = !DILocation(line: 1806, column: 30, scope: !13380)
!13386 = !DILocation(line: 1805, column: 13, scope: !13377)
!13387 = !DILocation(line: 1810, column: 42, scope: !13388)
!13388 = distinct !DILexicalBlock(scope: !13380, file: !2149, line: 1808, column: 9)
!13389 = !DILocation(line: 1810, column: 3, scope: !13388)
!13390 = !DILocation(line: 1811, column: 22, scope: !13388)
!13391 = !DILocation(line: 1811, column: 3, scope: !13388)
!13392 = !DILocation(line: 0, scope: !12121, inlinedAt: !13393)
!13393 = distinct !DILocation(line: 1814, column: 9, scope: !13388)
!13394 = !DILocation(line: 196, column: 9, scope: !12121, inlinedAt: !13393)
!13395 = !DILocation(line: 1817, column: 3, scope: !13388)
!13396 = !DILocation(line: 0, scope: !13372)
!13397 = !DILocation(line: 0, scope: !11537, inlinedAt: !13398)
!13398 = distinct !DILocation(line: 1822, column: 2, scope: !13357)
!13399 = !DILocation(line: 0, scope: !11545, inlinedAt: !13400)
!13400 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !13398)
!13401 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !13400)
!13402 = !DILocation(line: 1823, column: 2, scope: !13357)
!13403 = !DILocation(line: 1824, column: 1, scope: !13357)
!13404 = distinct !DISubprogram(name: "z_sched_wake", scope: !2149, file: !2149, line: 1882, type: !13405, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13407)
!13405 = !DISubroutineType(types: !13406)
!13406 = !{!170, !2075, !103, !102}
!13407 = !{!13408, !13409, !13410, !13411, !13412, !13413, !13415}
!13408 = !DILocalVariable(name: "wait_q", arg: 1, scope: !13404, file: !2149, line: 1882, type: !2075)
!13409 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !13404, file: !2149, line: 1882, type: !103)
!13410 = !DILocalVariable(name: "swap_data", arg: 3, scope: !13404, file: !2149, line: 1882, type: !102)
!13411 = !DILocalVariable(name: "thread", scope: !13404, file: !2149, line: 1884, type: !2044)
!13412 = !DILocalVariable(name: "ret", scope: !13404, file: !2149, line: 1885, type: !170)
!13413 = !DILocalVariable(name: "__i", scope: !13414, file: !2149, line: 1887, type: !11502)
!13414 = distinct !DILexicalBlock(scope: !13404, file: !2149, line: 1887, column: 2)
!13415 = !DILocalVariable(name: "__key", scope: !13414, file: !2149, line: 1887, type: !11502)
!13416 = !DILocation(line: 0, scope: !13404)
!13417 = !DILocation(line: 0, scope: !13414)
!13418 = !DILocation(line: 0, scope: !11510, inlinedAt: !13419)
!13419 = distinct !DILocation(line: 1887, column: 2, scope: !13414)
!13420 = !DILocation(line: 55, column: 2, scope: !11519, inlinedAt: !13421)
!13421 = distinct !DILocation(line: 145, column: 10, scope: !11510, inlinedAt: !13419)
!13422 = !DILocation(line: 0, scope: !11519, inlinedAt: !13421)
!13423 = !DILocation(line: 1888, column: 12, scope: !13424)
!13424 = distinct !DILexicalBlock(scope: !13425, file: !2149, line: 1887, column: 26)
!13425 = distinct !DILexicalBlock(scope: !13414, file: !2149, line: 1887, column: 2)
!13426 = !DILocation(line: 1890, column: 14, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13424, file: !2149, line: 1890, column: 7)
!13428 = !DILocation(line: 1890, column: 7, scope: !13424)
!13429 = !DILocalVariable(name: "thread", arg: 1, scope: !13430, file: !13431, line: 134, type: !2044)
!13430 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13431, file: !13431, line: 134, type: !13432, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13434)
!13431 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13432 = !DISubroutineType(types: !13433)
!13433 = !{null, !2044, !32, !102}
!13434 = !{!13429, !13435, !13436}
!13435 = !DILocalVariable(name: "value", arg: 2, scope: !13430, file: !13431, line: 135, type: !32)
!13436 = !DILocalVariable(name: "data", arg: 3, scope: !13430, file: !13431, line: 136, type: !102)
!13437 = !DILocation(line: 0, scope: !13430, inlinedAt: !13438)
!13438 = distinct !DILocation(line: 1891, column: 4, scope: !13439)
!13439 = distinct !DILexicalBlock(scope: !13427, file: !2149, line: 1890, column: 23)
!13440 = !DILocation(line: 0, scope: !13344, inlinedAt: !13441)
!13441 = distinct !DILocation(line: 138, column: 2, scope: !13430, inlinedAt: !13438)
!13442 = !DILocation(line: 67, column: 15, scope: !13344, inlinedAt: !13441)
!13443 = !DILocation(line: 67, column: 33, scope: !13344, inlinedAt: !13441)
!13444 = !DILocation(line: 139, column: 15, scope: !13430, inlinedAt: !13438)
!13445 = !DILocation(line: 139, column: 25, scope: !13430, inlinedAt: !13438)
!13446 = !DILocation(line: 1894, column: 4, scope: !13439)
!13447 = !DILocation(line: 1895, column: 10, scope: !13439)
!13448 = !DILocation(line: 1896, column: 4, scope: !13439)
!13449 = !DILocation(line: 1898, column: 3, scope: !13439)
!13450 = !DILocation(line: 0, scope: !11537, inlinedAt: !13451)
!13451 = distinct !DILocation(line: 1887, column: 2, scope: !13425)
!13452 = !DILocation(line: 0, scope: !11545, inlinedAt: !13453)
!13453 = distinct !DILocation(line: 215, column: 2, scope: !11537, inlinedAt: !13451)
!13454 = !DILocation(line: 95, column: 2, scope: !11545, inlinedAt: !13453)
!13455 = !DILocation(line: 1901, column: 2, scope: !13404)
!13456 = distinct !DISubprogram(name: "z_sched_wait", scope: !2149, file: !2149, line: 1904, type: !13457, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2041, retainedNodes: !13460)
!13457 = !DISubroutineType(types: !13458)
!13458 = !{!103, !11513, !11502, !2075, !12301, !13459}
!13459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!13460 = !{!13461, !13462, !13463, !13464, !13465, !13466}
!13461 = !DILocalVariable(name: "lock", arg: 1, scope: !13456, file: !2149, line: 1904, type: !11513)
!13462 = !DILocalVariable(name: "key", arg: 2, scope: !13456, file: !2149, line: 1904, type: !11502)
!13463 = !DILocalVariable(name: "wait_q", arg: 3, scope: !13456, file: !2149, line: 1905, type: !2075)
!13464 = !DILocalVariable(name: "timeout", arg: 4, scope: !13456, file: !2149, line: 1905, type: !12301)
!13465 = !DILocalVariable(name: "data", arg: 5, scope: !13456, file: !2149, line: 1905, type: !13459)
!13466 = !DILocalVariable(name: "ret", scope: !13456, file: !2149, line: 1907, type: !103)
!13467 = !DILocation(line: 0, scope: !13456)
!13468 = !DILocation(line: 1907, column: 12, scope: !13456)
!13469 = !DILocation(line: 1909, column: 11, scope: !13470)
!13470 = distinct !DILexicalBlock(scope: !13456, file: !2149, line: 1909, column: 6)
!13471 = !DILocation(line: 1909, column: 6, scope: !13456)
!13472 = !DILocation(line: 1910, column: 11, scope: !13473)
!13473 = distinct !DILexicalBlock(scope: !13470, file: !2149, line: 1909, column: 20)
!13474 = !DILocation(line: 1910, column: 26, scope: !13473)
!13475 = !DILocation(line: 1910, column: 9, scope: !13473)
!13476 = !DILocation(line: 1911, column: 2, scope: !13473)
!13477 = !DILocation(line: 1912, column: 2, scope: !13456)
!13478 = distinct !DISubprogram(name: "z_data_copy", scope: !13479, file: !13479, line: 22, type: !2730, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2713, retainedNodes: !335)
!13479 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13480 = !DILocation(line: 24, column: 2, scope: !13478)
!13481 = !DILocation(line: 27, column: 2, scope: !13478)
!13482 = !DILocation(line: 71, column: 1, scope: !13478)
!13483 = distinct !DISubprogram(name: "z_add_timeout", scope: !2186, file: !2186, line: 88, type: !13484, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13490)
!13484 = !DISubroutineType(types: !13485)
!13485 = !{null, !2159, !2178, !13486}
!13486 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1418, line: 67, baseType: !13487)
!13487 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1418, line: 65, size: 64, elements: !13488)
!13488 = !{!13489}
!13489 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13487, file: !1418, line: 66, baseType: !1417, size: 64)
!13490 = !{!13491, !13492, !13493, !13494, !13500, !13501, !13504, !13507}
!13491 = !DILocalVariable(name: "to", arg: 1, scope: !13483, file: !2186, line: 88, type: !2159)
!13492 = !DILocalVariable(name: "fn", arg: 2, scope: !13483, file: !2186, line: 88, type: !2178)
!13493 = !DILocalVariable(name: "timeout", arg: 3, scope: !13483, file: !2186, line: 89, type: !13486)
!13494 = !DILocalVariable(name: "__i", scope: !13495, file: !2186, line: 102, type: !13496)
!13495 = distinct !DILexicalBlock(scope: !13483, file: !2186, line: 102, column: 2)
!13496 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !334, line: 106, baseType: !13497)
!13497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !334, line: 32, size: 32, elements: !13498)
!13498 = !{!13499}
!13499 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13497, file: !334, line: 33, baseType: !103, size: 32)
!13500 = !DILocalVariable(name: "__key", scope: !13495, file: !2186, line: 102, type: !13496)
!13501 = !DILocalVariable(name: "t", scope: !13502, file: !2186, line: 103, type: !2159)
!13502 = distinct !DILexicalBlock(scope: !13503, file: !2186, line: 102, column: 24)
!13503 = distinct !DILexicalBlock(scope: !13495, file: !2186, line: 102, column: 2)
!13504 = !DILocalVariable(name: "ticks", scope: !13505, file: !2186, line: 107, type: !1417)
!13505 = distinct !DILexicalBlock(scope: !13506, file: !2186, line: 106, column: 39)
!13506 = distinct !DILexicalBlock(scope: !13502, file: !2186, line: 105, column: 7)
!13507 = !DILocalVariable(name: "next_time", scope: !13508, file: !2186, line: 137, type: !675)
!13508 = distinct !DILexicalBlock(scope: !13509, file: !2186, line: 127, column: 22)
!13509 = distinct !DILexicalBlock(scope: !13502, file: !2186, line: 127, column: 7)
!13510 = !DILocation(line: 0, scope: !13483)
!13511 = !DILocation(line: 91, column: 6, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13483, file: !2186, line: 91, column: 6)
!13513 = !DILocation(line: 91, column: 6, scope: !13483)
!13514 = !DILocation(line: 100, column: 6, scope: !13483)
!13515 = !DILocation(line: 100, column: 9, scope: !13483)
!13516 = !DILocation(line: 0, scope: !13495)
!13517 = !DILocalVariable(name: "l", arg: 1, scope: !13518, file: !334, line: 136, type: !13521)
!13518 = distinct !DISubprogram(name: "k_spin_lock", scope: !334, file: !334, line: 136, type: !13519, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13522)
!13519 = !DISubroutineType(types: !13520)
!13520 = !{!13496, !13521}
!13521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 32)
!13522 = !{!13517, !13523}
!13523 = !DILocalVariable(name: "k", scope: !13518, file: !334, line: 139, type: !13496)
!13524 = !DILocation(line: 0, scope: !13518, inlinedAt: !13525)
!13525 = distinct !DILocation(line: 102, column: 2, scope: !13495)
!13526 = !DILocation(line: 55, column: 2, scope: !13527, inlinedAt: !13531)
!13527 = distinct !DISubprogram(name: "arch_irq_lock", scope: !4510, file: !4510, line: 42, type: !4511, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13528)
!13528 = !{!13529, !13530}
!13529 = !DILocalVariable(name: "key", scope: !13527, file: !4510, line: 44, type: !32)
!13530 = !DILocalVariable(name: "tmp", scope: !13527, file: !4510, line: 53, type: !32)
!13531 = distinct !DILocation(line: 145, column: 10, scope: !13518, inlinedAt: !13525)
!13532 = !{i64 1654248}
!13533 = !DILocation(line: 0, scope: !13527, inlinedAt: !13531)
!13534 = !DILocation(line: 106, column: 33, scope: !13506)
!13535 = !DILocation(line: 105, column: 7, scope: !13502)
!13536 = !DILocation(line: 107, column: 50, scope: !13505)
!13537 = !DILocation(line: 107, column: 48, scope: !13505)
!13538 = !DILocation(line: 0, scope: !13505)
!13539 = !DILocation(line: 109, column: 17, scope: !13505)
!13540 = !DILocation(line: 110, column: 3, scope: !13505)
!13541 = !DILocation(line: 111, column: 31, scope: !13542)
!13542 = distinct !DILexicalBlock(scope: !13506, file: !2186, line: 110, column: 10)
!13543 = !DILocation(line: 111, column: 37, scope: !13542)
!13544 = !DILocation(line: 111, column: 35, scope: !13542)
!13545 = !DILocation(line: 0, scope: !13506)
!13546 = !DILocation(line: 109, column: 8, scope: !13505)
!13547 = !DILocation(line: 109, column: 15, scope: !13505)
!13548 = !DILocation(line: 114, column: 12, scope: !13549)
!13549 = distinct !DILexicalBlock(scope: !13502, file: !2186, line: 114, column: 3)
!13550 = !DILocation(line: 0, scope: !13502)
!13551 = !DILocation(line: 114, column: 3, scope: !13549)
!13552 = !DILocation(line: 115, column: 24, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13554, file: !2186, line: 115, column: 8)
!13554 = distinct !DILexicalBlock(scope: !13555, file: !2186, line: 114, column: 45)
!13555 = distinct !DILexicalBlock(scope: !13549, file: !2186, line: 114, column: 3)
!13556 = !DILocation(line: 115, column: 11, scope: !13553)
!13557 = !DILocation(line: 115, column: 18, scope: !13553)
!13558 = !DILocation(line: 115, column: 8, scope: !13554)
!13559 = !DILocation(line: 116, column: 15, scope: !13560)
!13560 = distinct !DILexicalBlock(scope: !13553, file: !2186, line: 115, column: 32)
!13561 = !DILocation(line: 117, column: 26, scope: !13560)
!13562 = !DILocation(line: 117, column: 37, scope: !13560)
!13563 = !DILocation(line: 117, column: 5, scope: !13560)
!13564 = !DILocation(line: 123, column: 7, scope: !13502)
!13565 = !DILocation(line: 120, column: 15, scope: !13554)
!13566 = !DILocation(line: 114, column: 36, scope: !13555)
!13567 = distinct !{!13567, !13551, !13568}
!13568 = !DILocation(line: 121, column: 3, scope: !13549)
!13569 = !DILocation(line: 124, column: 41, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13571, file: !2186, line: 123, column: 18)
!13571 = distinct !DILexicalBlock(scope: !13502, file: !2186, line: 123, column: 7)
!13572 = !DILocation(line: 124, column: 4, scope: !13570)
!13573 = !DILocation(line: 125, column: 3, scope: !13570)
!13574 = !DILocation(line: 127, column: 13, scope: !13509)
!13575 = !DILocation(line: 127, column: 10, scope: !13509)
!13576 = !DILocation(line: 127, column: 7, scope: !13502)
!13577 = !DILocation(line: 137, column: 24, scope: !13508)
!13578 = !DILocation(line: 0, scope: !13508)
!13579 = !DILocation(line: 139, column: 18, scope: !13580)
!13580 = distinct !DILexicalBlock(scope: !13508, file: !2186, line: 139, column: 8)
!13581 = !DILocation(line: 139, column: 23, scope: !13580)
!13582 = !DILocation(line: 141, column: 5, scope: !13583)
!13583 = distinct !DILexicalBlock(scope: !13580, file: !2186, line: 140, column: 48)
!13584 = !DILocation(line: 142, column: 4, scope: !13583)
!13585 = !DILocalVariable(name: "key", arg: 2, scope: !13586, file: !334, line: 190, type: !13496)
!13586 = distinct !DISubprogram(name: "k_spin_unlock", scope: !334, file: !334, line: 189, type: !13587, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13589)
!13587 = !DISubroutineType(types: !13588)
!13588 = !{null, !13521, !13496}
!13589 = !{!13590, !13585}
!13590 = !DILocalVariable(name: "l", arg: 1, scope: !13586, file: !334, line: 189, type: !13521)
!13591 = !DILocation(line: 0, scope: !13586, inlinedAt: !13592)
!13592 = distinct !DILocation(line: 102, column: 2, scope: !13503)
!13593 = !DILocalVariable(name: "key", arg: 1, scope: !13594, file: !4510, line: 84, type: !32)
!13594 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !4510, file: !4510, line: 84, type: !4521, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13595)
!13595 = !{!13593}
!13596 = !DILocation(line: 0, scope: !13594, inlinedAt: !13597)
!13597 = distinct !DILocation(line: 215, column: 2, scope: !13586, inlinedAt: !13592)
!13598 = !DILocation(line: 95, column: 2, scope: !13594, inlinedAt: !13597)
!13599 = !{i64 1655065}
!13600 = !DILocation(line: 148, column: 1, scope: !13483)
!13601 = distinct !DISubprogram(name: "elapsed", scope: !2186, file: !2186, line: 62, type: !13602, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !335)
!13602 = !DISubroutineType(types: !13603)
!13603 = !{!675}
!13604 = !DILocation(line: 64, column: 9, scope: !13601)
!13605 = !DILocation(line: 64, column: 28, scope: !13601)
!13606 = !DILocation(line: 64, column: 35, scope: !13601)
!13607 = !DILocation(line: 64, column: 2, scope: !13601)
!13608 = distinct !DISubprogram(name: "first", scope: !2186, file: !2186, line: 39, type: !13609, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13611)
!13609 = !DISubroutineType(types: !13610)
!13610 = !{!2159}
!13611 = !{!13612}
!13612 = !DILocalVariable(name: "t", scope: !13608, file: !2186, line: 41, type: !13613)
!13613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 32)
!13614 = !DILocation(line: 41, column: 19, scope: !13608)
!13615 = !DILocation(line: 0, scope: !13608)
!13616 = !DILocation(line: 43, column: 9, scope: !13608)
!13617 = !DILocation(line: 43, column: 2, scope: !13608)
!13618 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !234, file: !234, line: 443, type: !13619, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13621)
!13619 = !DISubroutineType(types: !13620)
!13620 = !{null, !13613, !13613}
!13621 = !{!13622, !13623, !13624}
!13622 = !DILocalVariable(name: "successor", arg: 1, scope: !13618, file: !234, line: 443, type: !13613)
!13623 = !DILocalVariable(name: "node", arg: 2, scope: !13618, file: !234, line: 443, type: !13613)
!13624 = !DILocalVariable(name: "prev", scope: !13618, file: !234, line: 445, type: !13625)
!13625 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13613)
!13626 = !DILocation(line: 0, scope: !13618)
!13627 = !DILocation(line: 445, column: 39, scope: !13618)
!13628 = !DILocation(line: 447, column: 8, scope: !13618)
!13629 = !DILocation(line: 447, column: 13, scope: !13618)
!13630 = !DILocation(line: 448, column: 8, scope: !13618)
!13631 = !DILocation(line: 448, column: 13, scope: !13618)
!13632 = !DILocation(line: 449, column: 8, scope: !13618)
!13633 = !DILocation(line: 449, column: 13, scope: !13618)
!13634 = !DILocation(line: 450, column: 18, scope: !13618)
!13635 = !DILocation(line: 451, column: 1, scope: !13618)
!13636 = distinct !DISubprogram(name: "next", scope: !2186, file: !2186, line: 46, type: !13637, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13639)
!13637 = !DISubroutineType(types: !13638)
!13638 = !{!2159, !2159}
!13639 = !{!13640, !13641}
!13640 = !DILocalVariable(name: "t", arg: 1, scope: !13636, file: !2186, line: 46, type: !2159)
!13641 = !DILocalVariable(name: "n", scope: !13636, file: !2186, line: 48, type: !13613)
!13642 = !DILocation(line: 0, scope: !13636)
!13643 = !DILocation(line: 48, column: 58, scope: !13636)
!13644 = !DILocation(line: 48, column: 19, scope: !13636)
!13645 = !DILocation(line: 50, column: 9, scope: !13636)
!13646 = !DILocation(line: 50, column: 2, scope: !13636)
!13647 = distinct !DISubprogram(name: "sys_dlist_append", scope: !234, file: !234, line: 404, type: !13648, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13651)
!13648 = !DISubroutineType(types: !13649)
!13649 = !{null, !13650, !13613}
!13650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 32)
!13651 = !{!13652, !13653, !13654}
!13652 = !DILocalVariable(name: "list", arg: 1, scope: !13647, file: !234, line: 404, type: !13650)
!13653 = !DILocalVariable(name: "node", arg: 2, scope: !13647, file: !234, line: 404, type: !13613)
!13654 = !DILocalVariable(name: "tail", scope: !13647, file: !234, line: 406, type: !13625)
!13655 = !DILocation(line: 0, scope: !13647)
!13656 = !DILocation(line: 406, column: 34, scope: !13647)
!13657 = !DILocation(line: 408, column: 8, scope: !13647)
!13658 = !DILocation(line: 408, column: 13, scope: !13647)
!13659 = !DILocation(line: 409, column: 8, scope: !13647)
!13660 = !DILocation(line: 409, column: 13, scope: !13647)
!13661 = !DILocation(line: 411, column: 8, scope: !13647)
!13662 = !DILocation(line: 411, column: 13, scope: !13647)
!13663 = !DILocation(line: 412, column: 13, scope: !13647)
!13664 = !DILocation(line: 413, column: 1, scope: !13647)
!13665 = distinct !DISubprogram(name: "next_timeout", scope: !2186, file: !2186, line: 67, type: !13602, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13666)
!13666 = !{!13667, !13668, !13669}
!13667 = !DILocalVariable(name: "to", scope: !13665, file: !2186, line: 69, type: !2159)
!13668 = !DILocalVariable(name: "ticks_elapsed", scope: !13665, file: !2186, line: 70, type: !675)
!13669 = !DILocalVariable(name: "ret", scope: !13665, file: !2186, line: 71, type: !675)
!13670 = !DILocation(line: 69, column: 24, scope: !13665)
!13671 = !DILocation(line: 0, scope: !13665)
!13672 = !DILocation(line: 70, column: 26, scope: !13665)
!13673 = !DILocation(line: 73, column: 10, scope: !13674)
!13674 = distinct !DILexicalBlock(scope: !13665, file: !2186, line: 73, column: 6)
!13675 = !DILocation(line: 73, column: 19, scope: !13674)
!13676 = !DILocation(line: 74, column: 21, scope: !13674)
!13677 = !DILocation(line: 74, column: 30, scope: !13674)
!13678 = !DILocation(line: 74, column: 28, scope: !13674)
!13679 = !DILocation(line: 74, column: 45, scope: !13674)
!13680 = !DILocation(line: 73, column: 6, scope: !13665)
!13681 = !DILocation(line: 77, column: 9, scope: !13682)
!13682 = distinct !DILexicalBlock(scope: !13674, file: !2186, line: 76, column: 9)
!13683 = !DILocation(line: 0, scope: !13674)
!13684 = !DILocation(line: 81, column: 20, scope: !13685)
!13685 = distinct !DILexicalBlock(scope: !13665, file: !2186, line: 81, column: 6)
!13686 = !DILocation(line: 81, column: 6, scope: !13685)
!13687 = !DILocation(line: 81, column: 32, scope: !13685)
!13688 = !DILocation(line: 85, column: 2, scope: !13665)
!13689 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !234, file: !234, line: 341, type: !13690, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13692)
!13690 = !DISubroutineType(types: !13691)
!13691 = !{!13613, !13650, !13613}
!13692 = !{!13693, !13694}
!13693 = !DILocalVariable(name: "list", arg: 1, scope: !13689, file: !234, line: 341, type: !13650)
!13694 = !DILocalVariable(name: "node", arg: 2, scope: !13689, file: !234, line: 342, type: !13613)
!13695 = !DILocation(line: 0, scope: !13689)
!13696 = !DILocation(line: 344, column: 15, scope: !13689)
!13697 = !DILocation(line: 344, column: 9, scope: !13689)
!13698 = !DILocation(line: 344, column: 26, scope: !13689)
!13699 = !DILocation(line: 344, column: 2, scope: !13689)
!13700 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !234, file: !234, line: 325, type: !13690, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13701)
!13701 = !{!13702, !13703}
!13702 = !DILocalVariable(name: "list", arg: 1, scope: !13700, file: !234, line: 325, type: !13650)
!13703 = !DILocalVariable(name: "node", arg: 2, scope: !13700, file: !234, line: 326, type: !13613)
!13704 = !DILocation(line: 0, scope: !13700)
!13705 = !DILocation(line: 328, column: 24, scope: !13700)
!13706 = !DILocation(line: 328, column: 15, scope: !13700)
!13707 = !DILocation(line: 328, column: 9, scope: !13700)
!13708 = !DILocation(line: 328, column: 45, scope: !13700)
!13709 = !DILocation(line: 328, column: 2, scope: !13700)
!13710 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !234, file: !234, line: 294, type: !13711, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13713)
!13711 = !DISubroutineType(types: !13712)
!13712 = !{!13613, !13650}
!13713 = !{!13714}
!13714 = !DILocalVariable(name: "list", arg: 1, scope: !13710, file: !234, line: 294, type: !13650)
!13715 = !DILocation(line: 0, scope: !13710)
!13716 = !DILocation(line: 296, column: 9, scope: !13710)
!13717 = !DILocation(line: 296, column: 2, scope: !13710)
!13718 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !234, file: !234, line: 266, type: !13719, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13721)
!13719 = !DISubroutineType(types: !13720)
!13720 = !{!170, !13650}
!13721 = !{!13722}
!13722 = !DILocalVariable(name: "list", arg: 1, scope: !13718, file: !234, line: 266, type: !13650)
!13723 = !DILocation(line: 0, scope: !13718)
!13724 = !DILocation(line: 268, column: 15, scope: !13718)
!13725 = !DILocation(line: 268, column: 20, scope: !13718)
!13726 = !DILocation(line: 268, column: 2, scope: !13718)
!13727 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2186, file: !2186, line: 150, type: !13728, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13730)
!13728 = !DISubroutineType(types: !13729)
!13729 = !{!103, !2159}
!13730 = !{!13731, !13732, !13733, !13735}
!13731 = !DILocalVariable(name: "to", arg: 1, scope: !13727, file: !2186, line: 150, type: !2159)
!13732 = !DILocalVariable(name: "ret", scope: !13727, file: !2186, line: 152, type: !103)
!13733 = !DILocalVariable(name: "__i", scope: !13734, file: !2186, line: 154, type: !13496)
!13734 = distinct !DILexicalBlock(scope: !13727, file: !2186, line: 154, column: 2)
!13735 = !DILocalVariable(name: "__key", scope: !13734, file: !2186, line: 154, type: !13496)
!13736 = !DILocation(line: 0, scope: !13727)
!13737 = !DILocation(line: 0, scope: !13734)
!13738 = !DILocation(line: 0, scope: !13518, inlinedAt: !13739)
!13739 = distinct !DILocation(line: 154, column: 2, scope: !13734)
!13740 = !DILocation(line: 55, column: 2, scope: !13527, inlinedAt: !13741)
!13741 = distinct !DILocation(line: 145, column: 10, scope: !13518, inlinedAt: !13739)
!13742 = !DILocation(line: 0, scope: !13527, inlinedAt: !13741)
!13743 = !DILocation(line: 155, column: 7, scope: !13744)
!13744 = distinct !DILexicalBlock(scope: !13745, file: !2186, line: 155, column: 7)
!13745 = distinct !DILexicalBlock(scope: !13746, file: !2186, line: 154, column: 24)
!13746 = distinct !DILexicalBlock(scope: !13734, file: !2186, line: 154, column: 2)
!13747 = !DILocation(line: 155, column: 7, scope: !13745)
!13748 = !DILocation(line: 156, column: 4, scope: !13749)
!13749 = distinct !DILexicalBlock(scope: !13744, file: !2186, line: 155, column: 39)
!13750 = !DILocation(line: 158, column: 3, scope: !13749)
!13751 = !DILocation(line: 0, scope: !13586, inlinedAt: !13752)
!13752 = distinct !DILocation(line: 154, column: 2, scope: !13746)
!13753 = !DILocation(line: 0, scope: !13594, inlinedAt: !13754)
!13754 = distinct !DILocation(line: 215, column: 2, scope: !13586, inlinedAt: !13752)
!13755 = !DILocation(line: 95, column: 2, scope: !13594, inlinedAt: !13754)
!13756 = !DILocation(line: 161, column: 2, scope: !13727)
!13757 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !234, file: !234, line: 225, type: !13758, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13762)
!13758 = !DISubroutineType(types: !13759)
!13759 = !{!170, !13760}
!13760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13761, size: 32)
!13761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2163)
!13762 = !{!13763}
!13763 = !DILocalVariable(name: "node", arg: 1, scope: !13757, file: !234, line: 225, type: !13760)
!13764 = !DILocation(line: 0, scope: !13757)
!13765 = !DILocation(line: 227, column: 15, scope: !13757)
!13766 = !DILocation(line: 227, column: 20, scope: !13757)
!13767 = !DILocation(line: 227, column: 2, scope: !13757)
!13768 = distinct !DISubprogram(name: "remove_timeout", scope: !2186, file: !2186, line: 53, type: !2180, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13769)
!13769 = !{!13770}
!13770 = !DILocalVariable(name: "t", arg: 1, scope: !13768, file: !2186, line: 53, type: !2159)
!13771 = !DILocation(line: 0, scope: !13768)
!13772 = !DILocation(line: 55, column: 6, scope: !13773)
!13773 = distinct !DILexicalBlock(scope: !13768, file: !2186, line: 55, column: 6)
!13774 = !DILocation(line: 55, column: 14, scope: !13773)
!13775 = !DILocation(line: 55, column: 6, scope: !13768)
!13776 = !DILocation(line: 56, column: 25, scope: !13777)
!13777 = distinct !DILexicalBlock(scope: !13773, file: !2186, line: 55, column: 23)
!13778 = !DILocation(line: 56, column: 12, scope: !13777)
!13779 = !DILocation(line: 56, column: 19, scope: !13777)
!13780 = !DILocation(line: 57, column: 2, scope: !13777)
!13781 = !DILocation(line: 59, column: 23, scope: !13768)
!13782 = !DILocation(line: 59, column: 2, scope: !13768)
!13783 = !DILocation(line: 60, column: 1, scope: !13768)
!13784 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !234, file: !234, line: 496, type: !13785, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13787)
!13785 = !DISubroutineType(types: !13786)
!13786 = !{null, !13613}
!13787 = !{!13788, !13789, !13790}
!13788 = !DILocalVariable(name: "node", arg: 1, scope: !13784, file: !234, line: 496, type: !13613)
!13789 = !DILocalVariable(name: "prev", scope: !13784, file: !234, line: 498, type: !13625)
!13790 = !DILocalVariable(name: "next", scope: !13784, file: !234, line: 499, type: !13625)
!13791 = !DILocation(line: 0, scope: !13784)
!13792 = !DILocation(line: 498, column: 34, scope: !13784)
!13793 = !DILocation(line: 499, column: 34, scope: !13784)
!13794 = !DILocation(line: 501, column: 8, scope: !13784)
!13795 = !DILocation(line: 501, column: 13, scope: !13784)
!13796 = !DILocation(line: 502, column: 8, scope: !13784)
!13797 = !DILocation(line: 502, column: 13, scope: !13784)
!13798 = !DILocation(line: 503, column: 2, scope: !13784)
!13799 = !DILocation(line: 504, column: 1, scope: !13784)
!13800 = distinct !DISubprogram(name: "sys_dnode_init", scope: !234, file: !234, line: 211, type: !13785, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13801)
!13801 = !{!13802}
!13802 = !DILocalVariable(name: "node", arg: 1, scope: !13800, file: !234, line: 211, type: !13613)
!13803 = !DILocation(line: 0, scope: !13800)
!13804 = !DILocation(line: 213, column: 8, scope: !13800)
!13805 = !DILocation(line: 213, column: 13, scope: !13800)
!13806 = !DILocation(line: 214, column: 8, scope: !13800)
!13807 = !DILocation(line: 214, column: 13, scope: !13800)
!13808 = !DILocation(line: 215, column: 1, scope: !13800)
!13809 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2186, file: !2186, line: 183, type: !13810, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13814)
!13810 = !DISubroutineType(types: !13811)
!13811 = !{!1417, !13812}
!13812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13813, size: 32)
!13813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2160)
!13814 = !{!13815, !13816, !13817, !13819}
!13815 = !DILocalVariable(name: "timeout", arg: 1, scope: !13809, file: !2186, line: 183, type: !13812)
!13816 = !DILocalVariable(name: "ticks", scope: !13809, file: !2186, line: 185, type: !1417)
!13817 = !DILocalVariable(name: "__i", scope: !13818, file: !2186, line: 187, type: !13496)
!13818 = distinct !DILexicalBlock(scope: !13809, file: !2186, line: 187, column: 2)
!13819 = !DILocalVariable(name: "__key", scope: !13818, file: !2186, line: 187, type: !13496)
!13820 = !DILocation(line: 0, scope: !13809)
!13821 = !DILocation(line: 0, scope: !13818)
!13822 = !DILocation(line: 0, scope: !13518, inlinedAt: !13823)
!13823 = distinct !DILocation(line: 187, column: 2, scope: !13818)
!13824 = !DILocation(line: 55, column: 2, scope: !13527, inlinedAt: !13825)
!13825 = distinct !DILocation(line: 145, column: 10, scope: !13518, inlinedAt: !13823)
!13826 = !DILocation(line: 0, scope: !13527, inlinedAt: !13825)
!13827 = !DILocation(line: 188, column: 11, scope: !13828)
!13828 = distinct !DILexicalBlock(scope: !13829, file: !2186, line: 187, column: 24)
!13829 = distinct !DILexicalBlock(scope: !13818, file: !2186, line: 187, column: 2)
!13830 = !DILocation(line: 0, scope: !13586, inlinedAt: !13831)
!13831 = distinct !DILocation(line: 187, column: 2, scope: !13829)
!13832 = !DILocation(line: 0, scope: !13594, inlinedAt: !13833)
!13833 = distinct !DILocation(line: 215, column: 2, scope: !13586, inlinedAt: !13831)
!13834 = !DILocation(line: 95, column: 2, scope: !13594, inlinedAt: !13833)
!13835 = !DILocation(line: 191, column: 2, scope: !13809)
!13836 = distinct !DISubprogram(name: "timeout_rem", scope: !2186, file: !2186, line: 165, type: !13810, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13837)
!13837 = !{!13838, !13839, !13840}
!13838 = !DILocalVariable(name: "timeout", arg: 1, scope: !13836, file: !2186, line: 165, type: !13812)
!13839 = !DILocalVariable(name: "ticks", scope: !13836, file: !2186, line: 167, type: !1417)
!13840 = !DILocalVariable(name: "t", scope: !13841, file: !2186, line: 173, type: !2159)
!13841 = distinct !DILexicalBlock(scope: !13836, file: !2186, line: 173, column: 2)
!13842 = !DILocation(line: 0, scope: !13836)
!13843 = !DILocation(line: 169, column: 6, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13836, file: !2186, line: 169, column: 6)
!13845 = !DILocation(line: 169, column: 6, scope: !13836)
!13846 = !DILocation(line: 173, column: 28, scope: !13841)
!13847 = !DILocation(line: 0, scope: !13841)
!13848 = !DILocation(line: 173, column: 39, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13841, file: !2186, line: 173, column: 2)
!13850 = !DILocation(line: 173, column: 2, scope: !13841)
!13851 = !DILocation(line: 174, column: 15, scope: !13852)
!13852 = distinct !DILexicalBlock(scope: !13849, file: !2186, line: 173, column: 61)
!13853 = !DILocation(line: 174, column: 9, scope: !13852)
!13854 = !DILocation(line: 175, column: 15, scope: !13855)
!13855 = distinct !DILexicalBlock(scope: !13852, file: !2186, line: 175, column: 7)
!13856 = !DILocation(line: 175, column: 7, scope: !13852)
!13857 = !DILocation(line: 173, column: 52, scope: !13849)
!13858 = distinct !{!13858, !13850, !13859}
!13859 = !DILocation(line: 178, column: 2, scope: !13841)
!13860 = !DILocation(line: 180, column: 17, scope: !13836)
!13861 = !DILocation(line: 180, column: 15, scope: !13836)
!13862 = !DILocation(line: 180, column: 2, scope: !13836)
!13863 = !DILocation(line: 181, column: 1, scope: !13836)
!13864 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !11176, file: !11176, line: 35, type: !13865, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13867)
!13865 = !DISubroutineType(types: !13866)
!13866 = !{!170, !13812}
!13867 = !{!13868}
!13868 = !DILocalVariable(name: "to", arg: 1, scope: !13864, file: !11176, line: 35, type: !13812)
!13869 = !DILocation(line: 0, scope: !13864)
!13870 = !DILocation(line: 37, column: 35, scope: !13864)
!13871 = !DILocation(line: 37, column: 10, scope: !13864)
!13872 = !DILocation(line: 37, column: 9, scope: !13864)
!13873 = !DILocation(line: 37, column: 2, scope: !13864)
!13874 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2186, file: !2186, line: 194, type: !13810, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13875)
!13875 = !{!13876, !13877, !13878, !13880}
!13876 = !DILocalVariable(name: "timeout", arg: 1, scope: !13874, file: !2186, line: 194, type: !13812)
!13877 = !DILocalVariable(name: "ticks", scope: !13874, file: !2186, line: 196, type: !1417)
!13878 = !DILocalVariable(name: "__i", scope: !13879, file: !2186, line: 198, type: !13496)
!13879 = distinct !DILexicalBlock(scope: !13874, file: !2186, line: 198, column: 2)
!13880 = !DILocalVariable(name: "__key", scope: !13879, file: !2186, line: 198, type: !13496)
!13881 = !DILocation(line: 0, scope: !13874)
!13882 = !DILocation(line: 0, scope: !13879)
!13883 = !DILocation(line: 0, scope: !13518, inlinedAt: !13884)
!13884 = distinct !DILocation(line: 198, column: 2, scope: !13879)
!13885 = !DILocation(line: 55, column: 2, scope: !13527, inlinedAt: !13886)
!13886 = distinct !DILocation(line: 145, column: 10, scope: !13518, inlinedAt: !13884)
!13887 = !DILocation(line: 0, scope: !13527, inlinedAt: !13886)
!13888 = !DILocation(line: 199, column: 11, scope: !13889)
!13889 = distinct !DILexicalBlock(scope: !13890, file: !2186, line: 198, column: 24)
!13890 = distinct !DILexicalBlock(scope: !13879, file: !2186, line: 198, column: 2)
!13891 = !DILocation(line: 199, column: 23, scope: !13889)
!13892 = !DILocation(line: 0, scope: !13586, inlinedAt: !13893)
!13893 = distinct !DILocation(line: 198, column: 2, scope: !13890)
!13894 = !DILocation(line: 0, scope: !13594, inlinedAt: !13895)
!13895 = distinct !DILocation(line: 215, column: 2, scope: !13586, inlinedAt: !13893)
!13896 = !DILocation(line: 95, column: 2, scope: !13594, inlinedAt: !13895)
!13897 = !DILocation(line: 199, column: 21, scope: !13889)
!13898 = !DILocation(line: 202, column: 2, scope: !13874)
!13899 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2186, file: !2186, line: 205, type: !13602, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13900)
!13900 = !{!13901, !13902, !13904}
!13901 = !DILocalVariable(name: "ret", scope: !13899, file: !2186, line: 207, type: !675)
!13902 = !DILocalVariable(name: "__i", scope: !13903, file: !2186, line: 209, type: !13496)
!13903 = distinct !DILexicalBlock(scope: !13899, file: !2186, line: 209, column: 2)
!13904 = !DILocalVariable(name: "__key", scope: !13903, file: !2186, line: 209, type: !13496)
!13905 = !DILocation(line: 0, scope: !13899)
!13906 = !DILocation(line: 0, scope: !13903)
!13907 = !DILocation(line: 0, scope: !13518, inlinedAt: !13908)
!13908 = distinct !DILocation(line: 209, column: 2, scope: !13903)
!13909 = !DILocation(line: 55, column: 2, scope: !13527, inlinedAt: !13910)
!13910 = distinct !DILocation(line: 145, column: 10, scope: !13518, inlinedAt: !13908)
!13911 = !DILocation(line: 0, scope: !13527, inlinedAt: !13910)
!13912 = !DILocation(line: 210, column: 9, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13914, file: !2186, line: 209, column: 24)
!13914 = distinct !DILexicalBlock(scope: !13903, file: !2186, line: 209, column: 2)
!13915 = !DILocation(line: 0, scope: !13586, inlinedAt: !13916)
!13916 = distinct !DILocation(line: 209, column: 2, scope: !13914)
!13917 = !DILocation(line: 0, scope: !13594, inlinedAt: !13918)
!13918 = distinct !DILocation(line: 215, column: 2, scope: !13586, inlinedAt: !13916)
!13919 = !DILocation(line: 95, column: 2, scope: !13594, inlinedAt: !13918)
!13920 = !DILocation(line: 212, column: 2, scope: !13899)
!13921 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2186, file: !2186, line: 215, type: !8623, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13922)
!13922 = !{!13923, !13924, !13925, !13927, !13928, !13931, !13932}
!13923 = !DILocalVariable(name: "ticks", arg: 1, scope: !13921, file: !2186, line: 215, type: !675)
!13924 = !DILocalVariable(name: "is_idle", arg: 2, scope: !13921, file: !2186, line: 215, type: !170)
!13925 = !DILocalVariable(name: "__i", scope: !13926, file: !2186, line: 217, type: !13496)
!13926 = distinct !DILexicalBlock(scope: !13921, file: !2186, line: 217, column: 2)
!13927 = !DILocalVariable(name: "__key", scope: !13926, file: !2186, line: 217, type: !13496)
!13928 = !DILocalVariable(name: "next_to", scope: !13929, file: !2186, line: 218, type: !103)
!13929 = distinct !DILexicalBlock(scope: !13930, file: !2186, line: 217, column: 24)
!13930 = distinct !DILexicalBlock(scope: !13926, file: !2186, line: 217, column: 2)
!13931 = !DILocalVariable(name: "sooner", scope: !13929, file: !2186, line: 219, type: !170)
!13932 = !DILocalVariable(name: "imminent", scope: !13929, file: !2186, line: 221, type: !170)
!13933 = !DILocation(line: 0, scope: !13921)
!13934 = !DILocation(line: 0, scope: !13926)
!13935 = !DILocation(line: 0, scope: !13518, inlinedAt: !13936)
!13936 = distinct !DILocation(line: 217, column: 2, scope: !13926)
!13937 = !DILocation(line: 55, column: 2, scope: !13527, inlinedAt: !13938)
!13938 = distinct !DILocation(line: 145, column: 10, scope: !13518, inlinedAt: !13936)
!13939 = !DILocation(line: 0, scope: !13527, inlinedAt: !13938)
!13940 = !DILocation(line: 218, column: 17, scope: !13929)
!13941 = !DILocation(line: 0, scope: !13929)
!13942 = !DILocation(line: 221, column: 27, scope: !13929)
!13943 = !DILocation(line: 233, column: 17, scope: !13944)
!13944 = distinct !DILexicalBlock(scope: !13929, file: !2186, line: 233, column: 7)
!13945 = !DILocation(line: 234, column: 26, scope: !13946)
!13946 = distinct !DILexicalBlock(scope: !13944, file: !2186, line: 233, column: 56)
!13947 = !DILocation(line: 234, column: 4, scope: !13946)
!13948 = !DILocation(line: 235, column: 3, scope: !13946)
!13949 = !DILocation(line: 0, scope: !13586, inlinedAt: !13950)
!13950 = distinct !DILocation(line: 217, column: 2, scope: !13930)
!13951 = !DILocation(line: 0, scope: !13594, inlinedAt: !13952)
!13952 = distinct !DILocation(line: 215, column: 2, scope: !13586, inlinedAt: !13950)
!13953 = !DILocation(line: 95, column: 2, scope: !13594, inlinedAt: !13952)
!13954 = !DILocation(line: 237, column: 1, scope: !13921)
!13955 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2186, file: !2186, line: 239, type: !13956, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !13958)
!13956 = !DISubroutineType(types: !13957)
!13957 = !{null, !675}
!13958 = !{!13959, !13960, !13961, !13963}
!13959 = !DILocalVariable(name: "ticks", arg: 1, scope: !13955, file: !2186, line: 239, type: !675)
!13960 = !DILocalVariable(name: "key", scope: !13955, file: !2186, line: 245, type: !13496)
!13961 = !DILocalVariable(name: "t", scope: !13962, file: !2186, line: 262, type: !2159)
!13962 = distinct !DILexicalBlock(scope: !13955, file: !2186, line: 261, column: 67)
!13963 = !DILocalVariable(name: "dt", scope: !13962, file: !2186, line: 263, type: !103)
!13964 = !DILocation(line: 0, scope: !13955)
!13965 = !DILocation(line: 242, column: 2, scope: !13955)
!13966 = !DILocation(line: 0, scope: !13518, inlinedAt: !13967)
!13967 = distinct !DILocation(line: 245, column: 25, scope: !13955)
!13968 = !DILocation(line: 55, column: 2, scope: !13527, inlinedAt: !13969)
!13969 = distinct !DILocation(line: 145, column: 10, scope: !13518, inlinedAt: !13967)
!13970 = !DILocation(line: 0, scope: !13527, inlinedAt: !13969)
!13971 = !DILocation(line: 261, column: 9, scope: !13955)
!13972 = !DILocation(line: 261, column: 17, scope: !13955)
!13973 = !DILocation(line: 261, column: 25, scope: !13955)
!13974 = !DILocation(line: 261, column: 37, scope: !13955)
!13975 = !DILocation(line: 261, column: 47, scope: !13955)
!13976 = !DILocation(line: 261, column: 44, scope: !13955)
!13977 = !DILocation(line: 261, column: 2, scope: !13955)
!13978 = !DILocation(line: 0, scope: !13962)
!13979 = !DILocation(line: 263, column: 12, scope: !13962)
!13980 = !DILocation(line: 265, column: 16, scope: !13962)
!13981 = !DILocation(line: 265, column: 13, scope: !13962)
!13982 = !DILocation(line: 266, column: 13, scope: !13962)
!13983 = !DILocation(line: 267, column: 3, scope: !13962)
!13984 = !DILocation(line: 0, scope: !13586, inlinedAt: !13985)
!13985 = distinct !DILocation(line: 269, column: 3, scope: !13962)
!13986 = !DILocation(line: 0, scope: !13594, inlinedAt: !13987)
!13987 = distinct !DILocation(line: 215, column: 2, scope: !13586, inlinedAt: !13985)
!13988 = !DILocation(line: 95, column: 2, scope: !13594, inlinedAt: !13987)
!13989 = !DILocation(line: 270, column: 6, scope: !13962)
!13990 = !DILocation(line: 270, column: 3, scope: !13962)
!13991 = !DILocation(line: 0, scope: !13518, inlinedAt: !13992)
!13992 = distinct !DILocation(line: 271, column: 9, scope: !13962)
!13993 = !DILocation(line: 55, column: 2, scope: !13527, inlinedAt: !13994)
!13994 = distinct !DILocation(line: 145, column: 10, scope: !13518, inlinedAt: !13992)
!13995 = !DILocation(line: 0, scope: !13527, inlinedAt: !13994)
!13996 = !DILocation(line: 272, column: 22, scope: !13962)
!13997 = distinct !{!13997, !13977, !13998}
!13998 = !DILocation(line: 273, column: 2, scope: !13955)
!13999 = !DILocation(line: 276, column: 19, scope: !14000)
!14000 = distinct !DILexicalBlock(scope: !14001, file: !2186, line: 275, column: 23)
!14001 = distinct !DILexicalBlock(scope: !13955, file: !2186, line: 275, column: 6)
!14002 = !DILocation(line: 277, column: 2, scope: !14000)
!14003 = !DILocation(line: 279, column: 15, scope: !13955)
!14004 = !DILocation(line: 279, column: 12, scope: !13955)
!14005 = !DILocation(line: 280, column: 21, scope: !13955)
!14006 = !DILocation(line: 282, column: 24, scope: !13955)
!14007 = !DILocation(line: 282, column: 2, scope: !13955)
!14008 = !DILocation(line: 0, scope: !13586, inlinedAt: !14009)
!14009 = distinct !DILocation(line: 284, column: 2, scope: !13955)
!14010 = !DILocation(line: 0, scope: !13594, inlinedAt: !14011)
!14011 = distinct !DILocation(line: 215, column: 2, scope: !13586, inlinedAt: !14009)
!14012 = !DILocation(line: 95, column: 2, scope: !13594, inlinedAt: !14011)
!14013 = !DILocation(line: 285, column: 1, scope: !13955)
!14014 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2186, file: !2186, line: 287, type: !14015, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !14017)
!14015 = !DISubroutineType(types: !14016)
!14016 = !{!293}
!14017 = !{!14018, !14019, !14021}
!14018 = !DILocalVariable(name: "t", scope: !14014, file: !2186, line: 289, type: !2023)
!14019 = !DILocalVariable(name: "__i", scope: !14020, file: !2186, line: 291, type: !13496)
!14020 = distinct !DILexicalBlock(scope: !14014, file: !2186, line: 291, column: 2)
!14021 = !DILocalVariable(name: "__key", scope: !14020, file: !2186, line: 291, type: !13496)
!14022 = !DILocation(line: 0, scope: !14014)
!14023 = !DILocation(line: 0, scope: !14020)
!14024 = !DILocation(line: 0, scope: !13518, inlinedAt: !14025)
!14025 = distinct !DILocation(line: 291, column: 2, scope: !14020)
!14026 = !DILocation(line: 55, column: 2, scope: !13527, inlinedAt: !14027)
!14027 = distinct !DILocation(line: 145, column: 10, scope: !13518, inlinedAt: !14025)
!14028 = !DILocation(line: 0, scope: !13527, inlinedAt: !14027)
!14029 = !DILocation(line: 292, column: 7, scope: !14030)
!14030 = distinct !DILexicalBlock(scope: !14031, file: !2186, line: 291, column: 24)
!14031 = distinct !DILexicalBlock(scope: !14020, file: !2186, line: 291, column: 2)
!14032 = !DILocation(line: 292, column: 19, scope: !14030)
!14033 = !DILocation(line: 0, scope: !13586, inlinedAt: !14034)
!14034 = distinct !DILocation(line: 291, column: 2, scope: !14031)
!14035 = !DILocation(line: 0, scope: !13594, inlinedAt: !14036)
!14036 = distinct !DILocation(line: 215, column: 2, scope: !13586, inlinedAt: !14034)
!14037 = !DILocation(line: 95, column: 2, scope: !13594, inlinedAt: !14036)
!14038 = !DILocation(line: 292, column: 17, scope: !14030)
!14039 = !DILocation(line: 294, column: 2, scope: !14014)
!14040 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2186, file: !2186, line: 297, type: !5451, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !335)
!14041 = !DILocation(line: 300, column: 19, scope: !14040)
!14042 = !DILocation(line: 300, column: 9, scope: !14040)
!14043 = !DILocation(line: 300, column: 2, scope: !14040)
!14044 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2186, file: !2186, line: 306, type: !14015, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !335)
!14045 = !DILocation(line: 308, column: 9, scope: !14044)
!14046 = !DILocation(line: 308, column: 2, scope: !14044)
!14047 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2186, file: !2186, line: 319, type: !4534, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !14048)
!14048 = !{!14049, !14050, !14051, !14052}
!14049 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !14047, file: !2186, line: 319, type: !121)
!14050 = !DILocalVariable(name: "start_cycles", scope: !14047, file: !2186, line: 328, type: !121)
!14051 = !DILocalVariable(name: "cycles_to_wait", scope: !14047, file: !2186, line: 331, type: !121)
!14052 = !DILocalVariable(name: "current_cycles", scope: !14053, file: !2186, line: 338, type: !121)
!14053 = distinct !DILexicalBlock(scope: !14054, file: !2186, line: 337, column: 11)
!14054 = distinct !DILexicalBlock(scope: !14055, file: !2186, line: 337, column: 2)
!14055 = distinct !DILexicalBlock(scope: !14047, file: !2186, line: 337, column: 2)
!14056 = !DILocation(line: 0, scope: !14047)
!14057 = !DILocation(line: 322, column: 19, scope: !14058)
!14058 = distinct !DILexicalBlock(scope: !14047, file: !2186, line: 322, column: 6)
!14059 = !DILocation(line: 322, column: 6, scope: !14047)
!14060 = !DILocation(line: 328, column: 26, scope: !14047)
!14061 = !DILocation(line: 333, column: 43, scope: !14047)
!14062 = !DILocation(line: 337, column: 2, scope: !14047)
!14063 = !DILocation(line: 338, column: 29, scope: !14053)
!14064 = !DILocation(line: 0, scope: !14053)
!14065 = !DILocation(line: 341, column: 23, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14053, file: !2186, line: 341, column: 7)
!14067 = !DILocation(line: 341, column: 39, scope: !14066)
!14068 = !DILocation(line: 349, column: 1, scope: !14047)
!14069 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !320, file: !320, line: 1675, type: !5451, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !335)
!14070 = !DILocation(line: 1677, column: 9, scope: !14069)
!14071 = !DILocation(line: 1677, column: 2, scope: !14069)
!14072 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !14073, file: !14073, line: 24, type: !5451, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !335)
!14073 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14074 = !DILocation(line: 26, column: 9, scope: !14072)
!14075 = !DILocation(line: 26, column: 2, scope: !14072)
!14076 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2186, file: !2186, line: 364, type: !14077, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2156, retainedNodes: !14079)
!14077 = !DISubroutineType(types: !14078)
!14078 = !{!2023, !13486}
!14079 = !{!14080, !14081}
!14080 = !DILocalVariable(name: "timeout", arg: 1, scope: !14076, file: !2186, line: 364, type: !13486)
!14081 = !DILocalVariable(name: "dt", scope: !14076, file: !2186, line: 366, type: !1417)
!14082 = !DILocation(line: 0, scope: !14076)
!14083 = !DILocation(line: 368, column: 6, scope: !14076)
!14084 = !DILocation(line: 371, column: 10, scope: !14085)
!14085 = distinct !DILexicalBlock(scope: !14086, file: !2186, line: 370, column: 47)
!14086 = distinct !DILexicalBlock(scope: !14087, file: !2186, line: 370, column: 13)
!14087 = distinct !DILexicalBlock(scope: !14076, file: !2186, line: 368, column: 6)
!14088 = !DILocation(line: 371, column: 3, scope: !14085)
!14089 = !DILocation(line: 376, column: 58, scope: !14090)
!14090 = distinct !DILexicalBlock(scope: !14091, file: !2186, line: 376, column: 7)
!14091 = distinct !DILexicalBlock(scope: !14086, file: !2186, line: 372, column: 9)
!14092 = !DILocation(line: 376, column: 7, scope: !14091)
!14093 = !DILocation(line: 376, column: 43, scope: !14090)
!14094 = !DILocation(line: 377, column: 4, scope: !14095)
!14095 = distinct !DILexicalBlock(scope: !14090, file: !2186, line: 376, column: 64)
!14096 = !DILocation(line: 379, column: 10, scope: !14091)
!14097 = !DILocation(line: 379, column: 33, scope: !14091)
!14098 = !DILocation(line: 379, column: 31, scope: !14091)
!14099 = !DILocation(line: 379, column: 3, scope: !14091)
!14100 = !DILocation(line: 0, scope: !14087)
!14101 = !DILocation(line: 381, column: 1, scope: !14076)
!14102 = distinct !DISubprogram(name: "boot_banner", scope: !14103, file: !14103, line: 26, type: !2730, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2716, retainedNodes: !335)
!14103 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14104 = !DILocation(line: 34, column: 2, scope: !14102)
!14105 = !DILocation(line: 36, column: 1, scope: !14102)
