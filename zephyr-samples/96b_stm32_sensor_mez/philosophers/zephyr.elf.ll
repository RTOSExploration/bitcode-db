; ModuleID = 'build/96b_stm32_sensor_mez/philosophers/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, %struct.__thread_entry, %struct.k_thread*, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.__thread_entry = type { void (i8*, i8*, i8*)*, i8*, i8*, i8* }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.z_thread_stack_element = type { i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q, %struct.k_thread* }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._priq_rb }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238748 to i8*), void (i8*)* inttoptr (i32 134237315 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238748 to i8*), void (i8*)* inttoptr (i32 134237295 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238748 to i8*), void (i8*)* inttoptr (i32 134237285 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238748 to i8*), void (i8*)* inttoptr (i32 134237385 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238748 to i8*), void (i8*)* inttoptr (i32 134237375 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238748 to i8*), void (i8*)* inttoptr (i32 134237365 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238748 to i8*), void (i8*)* inttoptr (i32 134237355 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134238748 to i8*), void (i8*)* inttoptr (i32 134237345 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238748 to i8*), void (i8*)* inttoptr (i32 134237335 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238748 to i8*), void (i8*)* inttoptr (i32 134237325 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134238748 to i8*), void (i8*)* inttoptr (i32 134237305 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@forks = internal unnamed_addr constant [6 x %struct.k_mutex*] [%struct.k_mutex* getelementptr inbounds ([6 x %struct.k_mutex], [6 x %struct.k_mutex]* @fork_objs, i32 0, i32 0), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 20) to %struct.k_mutex*), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 40) to %struct.k_mutex*), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 60) to %struct.k_mutex*), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 80) to %struct.k_mutex*), %struct.k_mutex* bitcast (i8* getelementptr (i8, i8* bitcast ([6 x %struct.k_mutex]* @fork_objs to i8*), i64 100) to %struct.k_mutex*)], align 4, !dbg !25
@.str = private unnamed_addr constant [23 x i8] c"       STARVING       \00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"   HOLDING ONE FORK   \00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"  EATING  [ %s%d ms ] \00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"   DROPPED ONE FORK   \00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c" THINKING [ %s%d ms ] \00", align 1
@fork_objs = dso_local global [6 x %struct.k_mutex] zeroinitializer, align 4, !dbg !114
@.str.5 = private unnamed_addr constant [26 x i8] c"Philosopher %d [%s:%s%d] \00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"P\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.9 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"\1B[%d;%dH\00", align 1
@.str.12 = private unnamed_addr constant [328 x i8] c"\1B[2J\1B[15;1HDemo Description\0A----------------\0AAn implementation of a solution to the Dining Philosophers\0Aproblem (a classic multi-thread synchronization problem).\0AThis particular implementation demonstrates the usage of multiple\0Apreemptible and cooperative threads of differing priorities, as\0Awell as %s %s and thread sleeping.\0A\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"dynamic\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"mutexes\00", align 1
@threads = internal global [6 x %struct.k_thread] zeroinitializer, align 8, !dbg !266
@stacks = internal global [6 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/phil_obj_abstract.h\22.0", align 64, !dbg !269
@.str.15 = private unnamed_addr constant [15 x i8] c"Philosopher %d\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !280
@.str.16 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.17 = private unnamed_addr constant [34 x i8] c"is_black(node) || is_black(child)\00", align 1
@.str.2.18 = private unnamed_addr constant [24 x i8] c"ZEPHYR_BASE/lib/os/rb.c\00", align 1
@.str.3.19 = private unnamed_addr constant [19 x i8] c"\09both nodes red?!\0A\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@llvm.compiler.used = appending global [46 x i8*] [i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (i32* @_kernel_thread_info_num_offsets to i8*), i8* bitcast ([14 x i32]* @_kernel_thread_info_offsets to i8*), i8* @_kernel_thread_info_size_t_size, i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*)], section "llvm.metadata"
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !290
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !343
@_kernel_thread_info_offsets = dso_local global [14 x i32] [i32 1, i32 8, i32 44, i32 96, i32 112, i32 13, i32 12, i32 14, i32 80, i32 116, i32 168, i32 -1, i32 -1, i32 -1], section ".dbg_thread_info", align 4, !dbg !372
@_kernel_thread_info_num_offsets = dso_local global i32 14, section ".dbg_thread_info", align 4, !dbg !377
@_kernel_thread_info_size_t_size = dso_local global i8 4, section ".dbg_thread_info", align 1, !dbg !380
@.str.31 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.32 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.33 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.34 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.37 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.38 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.39 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.40 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.43 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.5.44 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.6.45 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.7.41 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.8.42 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !385
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !391
@.str.55 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.56 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.57 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.58 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.61 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.62 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !529
@.str.6.63 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.64 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i32 0, i32 0), %struct.k_spinlock { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.74, i32 0, i32 0), %struct.k_spinlock { i32 285933600 } }], align 4, !dbg !565
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !570
@.str.73 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.74 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.77 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.78 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.79 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !590
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !792
@.str.4.75 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !753
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !736
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.75, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !709
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !725
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !755
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !769
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !771
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !773
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !775
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !777
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !779
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !781
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !783
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !785
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !787
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !797
@.str.80 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !830
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !928
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !917
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !969
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !817
@.str.89 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1035
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1314
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1284
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1270
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1215
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !815
@.str.1.92 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1316
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1288
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1286
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1229
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !813
@.str.2.93 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1329
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1292
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1290
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1235
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !811
@.str.3.94 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1331
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1296
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1294
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1244
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !809
@.str.4.95 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1333
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1300
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1298
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1250
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !807
@.str.5.96 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1335
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1304
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1302
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1256
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !805
@.str.6.97 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1337
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1308
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1306
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1262
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !803
@.str.7.98 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1339
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1312
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1310
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1268
@.str.8.90 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.91 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !825
@.str.102 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52 }, align 4, !dbg !1341
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1558
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1513
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1560
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.102, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1486
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1488
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !823
@.str.1.107 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42 }, align 4, !dbg !1567
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1515
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1592
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.107, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1497
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1499
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !821
@.str.2.108 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45 }, align 4, !dbg !1594
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1517
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1604
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.108, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1503
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1505
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !819
@.str.3.111 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48 }, align 4, !dbg !1606
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1519
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1616
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.111, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1509
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1511
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1521
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1529
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1552
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1555
@.str.4.103 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.5.104 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.6.105 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.7.106 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.80, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !901
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1584
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1586
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1588
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1590
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1596
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1598
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1600
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1602
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1608
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1610
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1612
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1614
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1618
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1729
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1731
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1727
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1722
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1696
@.str.118 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.119 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.120 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.121 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.122 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.123 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1733
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.89, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1213
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.92, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1227
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.93, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1233
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.94, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1242
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.95, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1248
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.96, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1254
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.97, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1260
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.98, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1266
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1823
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1867
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1870
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1877
@.str.157 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.158 = private unnamed_addr constant [29 x i8] c"reason != K_ERR_KERNEL_PANIC\00", align 1
@.str.2.159 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/fatal.c\00", align 1
@.str.3.160 = private unnamed_addr constant [53 x i8] c"\09Attempted to recover from a kernel panic condition\0A\00", align 1
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1884
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2121
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2129
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2136
@.str.4.168 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2141
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.5.172 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.173 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.174 = private unnamed_addr constant [23 x i8] c"user_cb != ((void *)0)\00", align 1
@.str.2.175 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.3.176 = private unnamed_addr constant [26 x i8] c"\09user_cb can not be NULL\0A\00", align 1
@z_thread_monitor_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2166
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4.187, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5.188, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6.189, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7.190, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8.191, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9.192, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10.186, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.193, i32 0, i32 0)], align 4, !dbg !2187
@.str.4.187 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.5.188 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.6.189 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.7.190 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.8.191 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.9.192 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.10.186 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.11.193 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2301
@.str.12.185 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.13.198 = private unnamed_addr constant [128 x i8] c"((((prio)) == 40 && z_is_idle_thread_entry((entry))) || (((40 - 1) >= ((-29))) && ((prio)) >= ((-29)) && ((prio)) <= (40 - 1)))\00", align 1
@.str.14.199 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.15.203 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.16.204 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.17 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.20 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.21 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.211 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.212 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.213 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.220 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.221 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.222 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.223 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.224 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2304
@.str.4.232 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.225 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.226 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.227 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.228 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.229 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2423
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2541
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2544
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2546
@.str.235 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.254 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.242 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.264 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.276 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.243 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.271 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.244 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.282 = private unnamed_addr constant [134 x i8] c"((((prio)) == 40 && z_is_idle_thread_entry((((void *)0)))) || (((40 - 1) >= ((-29))) && ((prio)) >= ((-29)) && ((prio)) <= (40 - 1)))\00", align 1
@.str.9.283 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.292 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.293 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.294 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.295 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.236 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.237 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.238 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.239 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.240 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.241 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.259 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.272 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.273 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2131
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2134
@.str.23.287 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.301 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.302 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.303 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.304 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2548
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2578
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2583
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1972
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2581
@.str.4.305 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.306 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.307 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.311 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.312 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.332 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

@_kernel_openocd_offsets = dso_local alias i32, getelementptr inbounds ([14 x i32], [14 x i32]* @_kernel_thread_info_offsets, i32 0, i32 0)
@_kernel_openocd_num_offsets = dso_local alias i32, i32* @_kernel_thread_info_num_offsets
@_kernel_openocd_size_t_size = dso_local alias i8, i8* @_kernel_thread_info_size_t_size

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3167 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3171, !srcloc !3172
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3173, !srcloc !3174
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3175, !srcloc !3176
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3177, !srcloc !3178
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3179, !srcloc !3180
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3181, !srcloc !3182
  tail call void asm sideeffect ".globl\09___kernel_t_threads_OFFSET\0A\09.equ\09___kernel_t_threads_OFFSET,${0:B}\0A\09.type\09___kernel_t_threads_OFFSET,%object", "n"(i32 -45) #23, !dbg !3183, !srcloc !3184
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3185, !srcloc !3186
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3187, !srcloc !3188
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -49) #23, !dbg !3189, !srcloc !3190
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3191, !srcloc !3192
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3193, !srcloc !3194
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3195, !srcloc !3196
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3197, !srcloc !3198
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3199, !srcloc !3200
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3201, !srcloc !3202
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3203, !srcloc !3204
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3205, !srcloc !3206
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -169) #23, !dbg !3207, !srcloc !3208
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3209, !srcloc !3210
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3211, !srcloc !3212
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -153) #23, !dbg !3213, !srcloc !3214
  tail call void asm sideeffect ".globl\09___thread_t_next_thread_OFFSET\0A\09.equ\09___thread_t_next_thread_OFFSET,${0:B}\0A\09.type\09___thread_t_next_thread_OFFSET,%object", "n"(i32 -113) #23, !dbg !3215, !srcloc !3216
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -177) #23, !dbg !3217, !srcloc !3218
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3219, !srcloc !3220
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3221, !srcloc !3222
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3223, !srcloc !3224
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3225, !srcloc !3226
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3227, !srcloc !3228
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3229, !srcloc !3232
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3233, !srcloc !3234
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3235, !srcloc !3236
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3237, !srcloc !3238
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3239, !srcloc !3240
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3241, !srcloc !3242
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3243, !srcloc !3244
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3245, !srcloc !3246
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3247, !srcloc !3248
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3249, !srcloc !3250
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3251, !srcloc !3252
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3253, !srcloc !3254
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3255, !srcloc !3256
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3257, !srcloc !3258
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3259, !srcloc !3260
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3261, !srcloc !3262
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3263, !srcloc !3264
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3265, !srcloc !3266
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3267, !srcloc !3268
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3269, !srcloc !3270
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3271, !srcloc !3272
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3273, !srcloc !3274
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3275, !srcloc !3276
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3277, !srcloc !3278
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -177) #23, !dbg !3279, !srcloc !3280
  ret void, !dbg !3281
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @philosopher(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #2 !dbg !3284 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3287, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata i8* undef, metadata !3288, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata i8* undef, metadata !3289, metadata !DIExpression()), !dbg !3295
  %4 = ptrtoint i8* %0 to i32, !dbg !3296
  call void @llvm.dbg.value(metadata i32 %4, metadata !3292, metadata !DIExpression()), !dbg !3295
  %5 = tail call fastcc i32 @is_last_philosopher(i32 noundef %4) #24, !dbg !3297
  %6 = icmp eq i32 %5, 0, !dbg !3297
  br i1 %6, label %7, label %11, !dbg !3299

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.k_mutex*], [6 x %struct.k_mutex*]* @forks, i32 0, i32 %4, !dbg !3300
  %9 = load %struct.k_mutex*, %struct.k_mutex** %8, align 4, !dbg !3300
  call void @llvm.dbg.value(metadata %struct.k_mutex* %9, metadata !3290, metadata !DIExpression()), !dbg !3295
  %10 = add nsw i32 %4, 1, !dbg !3302
  call void @llvm.dbg.value(metadata %struct.k_mutex* undef, metadata !3291, metadata !DIExpression()), !dbg !3295
  br label %11

11:                                               ; preds = %3, %7
  %12 = phi i32 [ %10, %7 ], [ %4, %3 ]
  %13 = phi %struct.k_mutex* [ %9, %7 ], [ getelementptr inbounds ([6 x %struct.k_mutex], [6 x %struct.k_mutex]* @fork_objs, i32 0, i32 0), %3 ], !dbg !3303
  %14 = getelementptr inbounds [6 x %struct.k_mutex*], [6 x %struct.k_mutex*]* @forks, i32 0, i32 %12, !dbg !3303
  %15 = load %struct.k_mutex*, %struct.k_mutex** %14, align 4, !dbg !3303
  call void @llvm.dbg.value(metadata %struct.k_mutex* %13, metadata !3290, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata %struct.k_mutex* %15, metadata !3291, metadata !DIExpression()), !dbg !3295
  br label %16, !dbg !3304

16:                                               ; preds = %16, %11
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0), i32 noundef 0) #24, !dbg !3305
  tail call fastcc void @k_mutex_lock(%struct.k_mutex* noundef %13) #24, !dbg !3306
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i32 0, i32 0), i32 noundef 0) #24, !dbg !3307
  tail call fastcc void @k_mutex_lock(%struct.k_mutex* noundef %15) #24, !dbg !3308
  %17 = tail call fastcc i32 @get_random_delay(i32 noundef %4) #24, !dbg !3309
  call void @llvm.dbg.value(metadata i32 %17, metadata !3293, metadata !DIExpression()), !dbg !3310
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i32 0, i32 0), i32 noundef %17) #24, !dbg !3311
  tail call fastcc void @k_msleep(i32 noundef %17) #24, !dbg !3312
  tail call fastcc void @k_mutex_unlock(%struct.k_mutex* noundef %15) #24, !dbg !3313
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i32 0, i32 0), i32 noundef 0) #24, !dbg !3314
  tail call fastcc void @k_mutex_unlock(%struct.k_mutex* noundef %13) #24, !dbg !3315
  %18 = tail call fastcc i32 @get_random_delay(i32 noundef %4) #24, !dbg !3316
  call void @llvm.dbg.value(metadata i32 %18, metadata !3293, metadata !DIExpression()), !dbg !3310
  tail call fastcc void @print_phil_state(i32 noundef %4, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i32 0, i32 0), i32 noundef %18) #24, !dbg !3317
  tail call fastcc void @k_msleep(i32 noundef %18) #24, !dbg !3318
  br label %16, !dbg !3304, !llvm.loop !3319
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @is_last_philosopher(i32 noundef %0) unnamed_addr #4 !dbg !3321 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3323, metadata !DIExpression()), !dbg !3324
  %2 = icmp eq i32 %0, 5, !dbg !3325
  %3 = zext i1 %2 to i32, !dbg !3325
  ret i32 %3, !dbg !3326
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @print_phil_state(i32 noundef %0, i8* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !3327 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3331, metadata !DIExpression()), !dbg !3335
  call void @llvm.dbg.value(metadata i8* %1, metadata !3332, metadata !DIExpression()), !dbg !3335
  call void @llvm.dbg.value(metadata i32 %2, metadata !3333, metadata !DIExpression()), !dbg !3335
  %4 = tail call fastcc %struct.k_thread* @k_current_get() #25, !dbg !3336
  %5 = tail call fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %4) #24, !dbg !3337
  call void @llvm.dbg.value(metadata i32 %5, metadata !3334, metadata !DIExpression()), !dbg !3335
  tail call fastcc void @set_phil_state_pos(i32 noundef %0) #24, !dbg !3338
  %6 = icmp slt i32 %5, 0, !dbg !3339
  %7 = select i1 %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i32 0, i32 0), !dbg !3340
  %8 = select i1 %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), !dbg !3341
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0), i32 noundef %0, i8* noundef %7, i8* noundef %8, i32 noundef %5) #26, !dbg !3342
  %9 = icmp eq i32 %2, 0, !dbg !3343
  br i1 %9, label %11, label %10, !dbg !3345

10:                                               ; preds = %3
  tail call void (i8*, ...) @printk(i8* noundef %1, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i32 noundef %2) #26, !dbg !3346
  br label %12, !dbg !3348

11:                                               ; preds = %3
  tail call void (i8*, ...) @printk(i8* noundef %1, i8* noundef getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i32 0, i32 0)) #26, !dbg !3349
  br label %12

12:                                               ; preds = %11, %10
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i32 0, i32 0)) #26, !dbg !3351
  ret void, !dbg !3352
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !3353 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3363, metadata !DIExpression()), !dbg !3364
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !3362, metadata !DIExpression()), !dbg !3364
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3365, !srcloc !3367
  %2 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] [i64 -1]) #26, !dbg !3368
  ret void, !dbg !3369
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_random_delay(i32 noundef %0) unnamed_addr #1 !dbg !3370 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3374, metadata !DIExpression()), !dbg !3378
  call void @llvm.dbg.value(metadata i32 25, metadata !3375, metadata !DIExpression()), !dbg !3378
  %2 = tail call fastcc i32 @k_uptime_get_32() #24, !dbg !3379
  %3 = udiv i32 %2, 100, !dbg !3380
  %4 = add nsw i32 %0, 1, !dbg !3381
  %5 = mul i32 %3, %4, !dbg !3382
  %6 = and i32 %5, 31, !dbg !3383
  call void @llvm.dbg.value(metadata i32 %6, metadata !3376, metadata !DIExpression()), !dbg !3378
  %7 = mul nuw nsw i32 %6, 25, !dbg !3384
  %8 = add nuw nsw i32 %7, 25, !dbg !3384
  call void @llvm.dbg.value(metadata i32 %8, metadata !3377, metadata !DIExpression()), !dbg !3378
  ret i32 %8, !dbg !3385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msleep(i32 noundef %0) unnamed_addr #1 !dbg !3386 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3390, metadata !DIExpression()), !dbg !3391
  %2 = zext i32 %0 to i64
  %3 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %2) #24, !dbg !3392
  %4 = insertvalue [1 x i64] poison, i64 %3, 0, !dbg !3393
  tail call fastcc void @k_sleep([1 x i64] %4) #24, !dbg !3393
  ret void, !dbg !3394
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !3395 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !3399, metadata !DIExpression()), !dbg !3400
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3401, !srcloc !3403
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #26, !dbg !3404
  ret void, !dbg !3405
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !3406 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3411, metadata !DIExpression()), !dbg !3412
  call void @llvm.dbg.value(metadata i64 %0, metadata !3413, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i32 1000, metadata !3418, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i32 10000, metadata !3419, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i8 1, metadata !3420, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i8 0, metadata !3421, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i1 true, metadata !3422, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3430
  call void @llvm.dbg.value(metadata i8 0, metadata !3423, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i1 true, metadata !3424, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3430
  call void @llvm.dbg.value(metadata i1 false, metadata !3425, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3430
  call void @llvm.dbg.value(metadata i64 0, metadata !3426, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i64 0, metadata !3426, metadata !DIExpression()), !dbg !3430
  %2 = mul i64 %0, 10, !dbg !3432
  ret i64 %2, !dbg !3438
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3439 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3443, metadata !DIExpression()), !dbg !3444
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3445, !srcloc !3447
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #26, !dbg !3448
  ret void, !dbg !3449
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_uptime_get_32() unnamed_addr #1 !dbg !3450 {
  %1 = tail call fastcc i64 @k_uptime_get() #24, !dbg !3453
  %2 = trunc i64 %1 to i32, !dbg !3454
  ret i32 %2, !dbg !3455
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_get() unnamed_addr #1 !dbg !3456 {
  %1 = tail call fastcc i64 @k_uptime_ticks() #24, !dbg !3459
  %2 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %1) #24, !dbg !3460
  ret i64 %2, !dbg !3461
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @k_uptime_ticks() unnamed_addr #1 !dbg !3462 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3463, !srcloc !3465
  %1 = tail call i64 @z_impl_k_uptime_ticks() #26, !dbg !3466
  ret i64 %1, !dbg !3467
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #4 !dbg !3468 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3470, metadata !DIExpression()), !dbg !3471
  call void @llvm.dbg.value(metadata i64 %0, metadata !3413, metadata !DIExpression()), !dbg !3472
  call void @llvm.dbg.value(metadata i32 10000, metadata !3418, metadata !DIExpression()), !dbg !3472
  call void @llvm.dbg.value(metadata i32 1000, metadata !3419, metadata !DIExpression()), !dbg !3472
  call void @llvm.dbg.value(metadata i8 1, metadata !3420, metadata !DIExpression()), !dbg !3472
  call void @llvm.dbg.value(metadata i8 0, metadata !3421, metadata !DIExpression()), !dbg !3472
  call void @llvm.dbg.value(metadata i1 false, metadata !3422, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3472
  call void @llvm.dbg.value(metadata i8 0, metadata !3423, metadata !DIExpression()), !dbg !3472
  call void @llvm.dbg.value(metadata i1 false, metadata !3424, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3472
  call void @llvm.dbg.value(metadata i1 true, metadata !3425, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3472
  call void @llvm.dbg.value(metadata i64 0, metadata !3426, metadata !DIExpression()), !dbg !3472
  call void @llvm.dbg.value(metadata i64 0, metadata !3426, metadata !DIExpression()), !dbg !3472
  call void @llvm.dbg.value(metadata !DIArgList(i64 %0, i64 0), metadata !3413, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3472
  call void @llvm.dbg.value(metadata i64 %0, metadata !3413, metadata !DIExpression()), !dbg !3472
  %2 = udiv i64 %0, 10, !dbg !3474
  ret i64 %2, !dbg !3478
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #5 !dbg !3479 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #25, !dbg !3483
  ret %struct.k_thread* %1, !dbg !3484
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_thread_priority_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3485 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3489, metadata !DIExpression()), !dbg !3490
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3491, !srcloc !3493
  %2 = tail call i32 @z_impl_k_thread_priority_get(%struct.k_thread* noundef %0) #26, !dbg !3494
  ret i32 %2, !dbg !3495
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_phil_state_pos(i32 noundef %0) unnamed_addr #1 !dbg !3496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3500, metadata !DIExpression()), !dbg !3501
  %2 = add nsw i32 %0, 1, !dbg !3502
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i32 0, i32 0), i32 noundef %2, i32 noundef 1) #26, !dbg !3503
  ret void, !dbg !3504
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #5 !dbg !3505 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3506, !srcloc !3508
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !3509
  ret %struct.k_thread* %1, !dbg !3510
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3511 {
  tail call fastcc void @display_demo_description() #24, !dbg !3512
  tail call void @k_sched_time_slice_set(i32 noundef 5000, i32 noundef 0) #26, !dbg !3513
  tail call fastcc void @init_objects() #24, !dbg !3514
  tail call fastcc void @start_threads() #24, !dbg !3515
  ret void, !dbg !3516
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @display_demo_description() unnamed_addr #1 !dbg !3517 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([328 x i8], [328 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i32 0, i32 0), i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0)) #26, !dbg !3518
  ret void, !dbg !3519
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_objects() unnamed_addr #1 !dbg !3520 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3522, metadata !DIExpression()), !dbg !3524
  br label %2, !dbg !3525

1:                                                ; preds = %2
  ret void, !dbg !3526

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !3522, metadata !DIExpression()), !dbg !3524
  %4 = getelementptr inbounds [6 x %struct.k_mutex*], [6 x %struct.k_mutex*]* @forks, i32 0, i32 %3, !dbg !3527
  %5 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !3527
  tail call fastcc void @k_mutex_init(%struct.k_mutex* noundef %5) #24, !dbg !3527
  %6 = add nuw nsw i32 %3, 1, !dbg !3530
  call void @llvm.dbg.value(metadata i32 %6, metadata !3522, metadata !DIExpression()), !dbg !3524
  %7 = icmp eq i32 %6, 6, !dbg !3531
  br i1 %7, label %1, label %2, !dbg !3525, !llvm.loop !3532
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @start_threads() unnamed_addr #1 !dbg !3534 {
  %1 = alloca [32 x i8], align 1
  call void @llvm.dbg.value(metadata i32 0, metadata !3536, metadata !DIExpression()), !dbg !3542
  %2 = getelementptr inbounds [32 x i8], [32 x i8]* %1, i32 0, i32 0
  br label %4, !dbg !3543

3:                                                ; preds = %4
  ret void, !dbg !3544

4:                                                ; preds = %0, %4
  %5 = phi i32 [ 0, %0 ], [ %11, %4 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3536, metadata !DIExpression()), !dbg !3542
  %6 = call fastcc i32 @new_prio(i32 noundef %5) #24, !dbg !3545, !range !3546
  call void @llvm.dbg.value(metadata i32 %6, metadata !3538, metadata !DIExpression()), !dbg !3547
  %7 = getelementptr inbounds [6 x %struct.k_thread], [6 x %struct.k_thread]* @threads, i32 0, i32 %5, !dbg !3548
  %8 = getelementptr inbounds [6 x [2112 x %struct.z_thread_stack_element]], [6 x [2112 x %struct.z_thread_stack_element]]* @stacks, i32 0, i32 %5, i32 0, !dbg !3549
  %9 = inttoptr i32 %5 to i8*, !dbg !3550
  call fastcc void @k_thread_create(%struct.k_thread* noundef nonnull %7, %struct.z_thread_stack_element* noundef nonnull %8, i8* noundef %9, i32 noundef %6) #24, !dbg !3551
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #23, !dbg !3552
  call void @llvm.dbg.declare(metadata [32 x i8]* %1, metadata !3541, metadata !DIExpression()), !dbg !3553
  %10 = call i32 (i8*, i32, i8*, ...) @snprintk(i8* noundef nonnull %2, i32 noundef 32, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i32 0, i32 0), i32 noundef %5) #26, !dbg !3554
  call fastcc void @k_thread_name_set(%struct.k_thread* noundef nonnull %7, i8* noundef nonnull %2) #24, !dbg !3555
  call fastcc void @k_object_access_grant() #24, !dbg !3556
  %11 = add nuw nsw i32 %5, 1, !dbg !3557
  call fastcc void @k_object_access_grant() #24, !dbg !3558
  call fastcc void @k_thread_start(%struct.k_thread* noundef nonnull %7) #24, !dbg !3559
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #23, !dbg !3560
  call void @llvm.dbg.value(metadata i32 %11, metadata !3536, metadata !DIExpression()), !dbg !3542
  %12 = icmp eq i32 %11, 6, !dbg !3561
  br i1 %12, label %3, label %4, !dbg !3543, !llvm.loop !3562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio(i32 noundef %0) unnamed_addr #4 !dbg !3564 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3566, metadata !DIExpression()), !dbg !3567
  %2 = sub i32 3, %0, !dbg !3568
  ret i32 %2, !dbg !3569
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !3570 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3585, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3576, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3577, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.value(metadata i32 2048, metadata !3578, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @philosopher, metadata !3579, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.value(metadata i8* %2, metadata !3580, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.value(metadata i8* null, metadata !3581, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.value(metadata i8* null, metadata !3582, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.value(metadata i32 %3, metadata !3583, metadata !DIExpression()), !dbg !3586
  call void @llvm.dbg.value(metadata i32 4, metadata !3584, metadata !DIExpression()), !dbg !3586
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3587, !srcloc !3589
  %5 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 2048, void (i8*, i8*, i8*)* noundef nonnull @philosopher, i8* noundef %2, i8* noundef null, i8* noundef null, i32 noundef %3, i32 noundef 4, [1 x i64] [i64 -1]) #26, !dbg !3590
  ret void, !dbg !3591
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !3592 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3596, metadata !DIExpression()), !dbg !3598
  call void @llvm.dbg.value(metadata i8* %1, metadata !3597, metadata !DIExpression()), !dbg !3598
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3599, !srcloc !3601
  %3 = tail call i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) #26, !dbg !3602
  ret void, !dbg !3603
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_object_access_grant() unnamed_addr #1 !dbg !3604 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !3609, metadata !DIExpression()), !dbg !3611
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !3610, metadata !DIExpression()), !dbg !3611
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3612, !srcloc !3614
  ret void, !dbg !3615
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3616 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3620, metadata !DIExpression()), !dbg !3621
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3622, !srcloc !3624
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !3625
  ret void, !dbg !3626
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_init(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !3627 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !3629, metadata !DIExpression()), !dbg !3630
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3631, !srcloc !3633
  %2 = tail call i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) #26, !dbg !3634
  ret void, !dbg !3635
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3636 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3638, metadata !DIExpression()), !dbg !3639
  ret i32 0, !dbg !3640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !3641 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3645, metadata !DIExpression()), !dbg !3646
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3647
  ret void, !dbg !3648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !3649 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3652
  ret i8* %1, !dbg !3653
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3654 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3666, metadata !DIExpression()), !dbg !3677
  call void @llvm.dbg.value(metadata i8* %0, metadata !3665, metadata !DIExpression()), !dbg !3677
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !3678
  ret void, !dbg !3680
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3681 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3685, metadata !DIExpression()), !dbg !3687
  call void @llvm.dbg.value(metadata i8* %1, metadata !3686, metadata !DIExpression()), !dbg !3687
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3688
  %4 = tail call i32 %3(i32 noundef %0) #26, !dbg !3688
  ret i32 %4, !dbg !3689
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3690 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3702, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3699, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata i8* %1, metadata !3700, metadata !DIExpression()), !dbg !3703
  call void @llvm.dbg.value(metadata i8* %2, metadata !3701, metadata !DIExpression()), !dbg !3703
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #26, !dbg !3704
  ret void, !dbg !3705
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3706 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3710, metadata !DIExpression()), !dbg !3713
  call void @llvm.dbg.value(metadata i32 %1, metadata !3711, metadata !DIExpression()), !dbg !3713
  call void @llvm.dbg.value(metadata i32 0, metadata !3712, metadata !DIExpression()), !dbg !3713
  %3 = icmp eq i32 %1, 0, !dbg !3714
  br i1 %3, label %13, label %4, !dbg !3717

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3712, metadata !DIExpression()), !dbg !3713
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3718
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3720
  %8 = load i8, i8* %7, align 1, !dbg !3720
  %9 = zext i8 %8 to i32, !dbg !3720
  %10 = tail call i32 %6(i32 noundef %9) #26, !dbg !3718
  %11 = add nuw i32 %5, 1, !dbg !3721
  call void @llvm.dbg.value(metadata i32 %11, metadata !3712, metadata !DIExpression()), !dbg !3713
  %12 = icmp eq i32 %11, %1, !dbg !3714
  br i1 %12, label %13, label %4, !dbg !3717, !llvm.loop !3722

13:                                               ; preds = %4, %2
  ret void, !dbg !3724
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3725 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3729, metadata !DIExpression()), !dbg !3731
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3732
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3732
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3730, metadata !DIExpression()), !dbg !3733
  call void @llvm.va_start(i8* nonnull %3), !dbg !3734
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3735
  %5 = load i32, i32* %4, align 4, !dbg !3735
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3735
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !3735
  call void @llvm.va_end(i8* nonnull %3), !dbg !3736
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3737
  ret void, !dbg !3737
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #9

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #9

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3738 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3742, metadata !DIExpression()), !dbg !3747
  call void @llvm.dbg.value(metadata i32 %1, metadata !3743, metadata !DIExpression()), !dbg !3747
  call void @llvm.dbg.value(metadata i8* %2, metadata !3744, metadata !DIExpression()), !dbg !3747
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3748
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3748
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3745, metadata !DIExpression()), !dbg !3749
  call void @llvm.va_start(i8* nonnull %5), !dbg !3750
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3751
  %7 = load i32, i32* %6, align 4, !dbg !3751
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3751
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !3751
  call void @llvm.dbg.value(metadata i32 %9, metadata !3746, metadata !DIExpression()), !dbg !3747
  call void @llvm.va_end(i8* nonnull %5), !dbg !3752
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !3753
  ret i32 %9, !dbg !3754
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3755 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3762, metadata !DIExpression()), !dbg !3769
  call void @llvm.dbg.value(metadata i8* %0, metadata !3759, metadata !DIExpression()), !dbg !3769
  call void @llvm.dbg.value(metadata i32 %1, metadata !3760, metadata !DIExpression()), !dbg !3769
  call void @llvm.dbg.value(metadata i8* %2, metadata !3761, metadata !DIExpression()), !dbg !3769
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3770
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3770
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3763, metadata !DIExpression()), !dbg !3771
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3772
  store i8* %0, i8** %7, align 4, !dbg !3772
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3772
  store i32 %1, i32* %8, align 4, !dbg !3772
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3772
  store i32 0, i32* %9, align 4, !dbg !3772
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !3773
  %10 = load i32, i32* %9, align 4, !dbg !3774
  %11 = load i32, i32* %8, align 4, !dbg !3776
  %12 = icmp slt i32 %10, %11, !dbg !3777
  br i1 %12, label %13, label %15, !dbg !3778

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3779
  store i8 0, i8* %14, align 1, !dbg !3781
  br label %15, !dbg !3782

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !3783
  ret i32 %10, !dbg !3784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #10 !dbg !3785 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3790, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3791, metadata !DIExpression()), !dbg !3792
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3793
  %4 = load i8*, i8** %3, align 4, !dbg !3793
  %5 = icmp eq i8* %4, null, !dbg !3795
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3796
  br i1 %5, label %12, label %8, !dbg !3797

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3798
  %10 = load i32, i32* %9, align 4, !dbg !3798
  %11 = icmp slt i32 %7, %10, !dbg !3799
  br i1 %11, label %15, label %12, !dbg !3800

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3801
  %14 = add nsw i32 %7, 1, !dbg !3803
  store i32 %14, i32* %13, align 4, !dbg !3803
  br label %25, !dbg !3804

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3805
  %17 = icmp eq i32 %7, %16, !dbg !3807
  br i1 %17, label %18, label %21, !dbg !3808

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3809
  store i32 %19, i32* %6, align 4, !dbg !3809
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3811
  store i8 0, i8* %20, align 1, !dbg !3812
  br label %25, !dbg !3813

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3814
  %23 = add nsw i32 %7, 1, !dbg !3816
  store i32 %23, i32* %6, align 4, !dbg !3816
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3817
  store i8 %22, i8* %24, align 1, !dbg !3818
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3819
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #11 !dbg !3820 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !3834, metadata !DIExpression()), !dbg !3837
  call void @llvm.dbg.value(metadata i8 %1, metadata !3835, metadata !DIExpression()), !dbg !3837
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !3838
  %4 = load %struct.rbnode*, %struct.rbnode** %3, align 4, !dbg !3838
  call void @llvm.dbg.value(metadata %struct.rbnode* %4, metadata !3836, metadata !DIExpression()), !dbg !3837
  br label %5, !dbg !3840

5:                                                ; preds = %8, %2
  %6 = phi %struct.rbnode* [ %4, %2 ], [ %9, %8 ], !dbg !3841
  call void @llvm.dbg.value(metadata %struct.rbnode* %6, metadata !3836, metadata !DIExpression()), !dbg !3837
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !3842
  br i1 %7, label %11, label %8, !dbg !3844

8:                                                ; preds = %5
  %9 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %6, i8 noundef zeroext %1) #24, !dbg !3845
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !3846
  br i1 %10, label %11, label %5, !dbg !3847, !llvm.loop !3848

11:                                               ; preds = %5, %8
  ret %struct.rbnode* %6, !dbg !3850
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.rbnode* @get_child(%struct.rbnode* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #8 !dbg !3851 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3855, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.value(metadata i8 %1, metadata !3856, metadata !DIExpression()), !dbg !3858
  %3 = icmp eq i8 %1, 0, !dbg !3859
  br i1 %3, label %7, label %4, !dbg !3861

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 1, !dbg !3862
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !3862
  br label %13, !dbg !3864

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 0, !dbg !3865
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !3865
  %10 = ptrtoint %struct.rbnode* %9 to i32, !dbg !3866
  call void @llvm.dbg.value(metadata i32 %10, metadata !3857, metadata !DIExpression()), !dbg !3858
  %11 = and i32 %10, -2, !dbg !3867
  call void @llvm.dbg.value(metadata i32 %11, metadata !3857, metadata !DIExpression()), !dbg !3858
  %12 = inttoptr i32 %11 to %struct.rbnode*, !dbg !3868
  br label %13

13:                                               ; preds = %7, %4
  %14 = phi %struct.rbnode* [ %6, %4 ], [ %12, %7 ], !dbg !3858
  ret %struct.rbnode* %14, !dbg !3869
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rb_insert(%struct.rbtree* nocapture noundef %0, %struct.rbnode* noundef %1) local_unnamed_addr #1 !dbg !3870 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !3874, metadata !DIExpression()), !dbg !3884
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !3875, metadata !DIExpression()), !dbg !3884
  tail call fastcc void @set_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0, i8* noundef null) #24, !dbg !3885
  tail call fastcc void @set_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1, i8* noundef null) #24, !dbg !3886
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !3887
  %4 = load %struct.rbnode*, %struct.rbnode** %3, align 4, !dbg !3887
  %5 = icmp eq %struct.rbnode* %4, null, !dbg !3889
  br i1 %5, label %6, label %8, !dbg !3890

6:                                                ; preds = %2
  store %struct.rbnode* %1, %struct.rbnode** %3, align 4, !dbg !3891
  %7 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 2, !dbg !3893
  store i32 1, i32* %7, align 4, !dbg !3894
  tail call fastcc void @set_color(%struct.rbnode* noundef %1, i32 noundef 1) #24, !dbg !3895
  br label %31, !dbg !3896

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 2, !dbg !3897
  %10 = load i32, i32* %9, align 4, !dbg !3897
  %11 = add nsw i32 %10, 1, !dbg !3898
  %12 = tail call i8* @llvm.stacksave(), !dbg !3899
  %13 = alloca %struct.rbnode*, i32 %11, align 4, !dbg !3899
  call void @llvm.dbg.value(metadata i32 %11, metadata !3876, metadata !DIExpression()), !dbg !3884
  call void @llvm.dbg.declare(metadata %struct.rbnode** %13, metadata !3877, metadata !DIExpression()), !dbg !3900
  %14 = call fastcc i32 @find_and_stack(%struct.rbtree* noundef nonnull %0, %struct.rbnode* noundef %1, %struct.rbnode** noundef nonnull %13) #24, !dbg !3901
  call void @llvm.dbg.value(metadata i32 %14, metadata !3881, metadata !DIExpression()), !dbg !3884
  %15 = add nsw i32 %14, -1, !dbg !3902
  %16 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %13, i32 %15, !dbg !3903
  %17 = load %struct.rbnode*, %struct.rbnode** %16, align 4, !dbg !3903
  call void @llvm.dbg.value(metadata %struct.rbnode* %17, metadata !3882, metadata !DIExpression()), !dbg !3884
  %18 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 1, !dbg !3904
  %19 = load i1 (%struct.rbnode*, %struct.rbnode*)*, i1 (%struct.rbnode*, %struct.rbnode*)** %18, align 4, !dbg !3904
  %20 = tail call zeroext i1 %19(%struct.rbnode* noundef %1, %struct.rbnode* noundef %17) #26, !dbg !3905
  %21 = xor i1 %20, true, !dbg !3905
  %22 = zext i1 %21 to i8, !dbg !3905
  call void @llvm.dbg.value(metadata i8 %22, metadata !3883, metadata !DIExpression()), !dbg !3884
  %23 = bitcast %struct.rbnode* %1 to i8*, !dbg !3906
  tail call fastcc void @set_child(%struct.rbnode* noundef %17, i8 noundef zeroext %22, i8* noundef %23) #24, !dbg !3907
  tail call fastcc void @set_color(%struct.rbnode* noundef %1, i32 noundef 0) #24, !dbg !3908
  %24 = add nsw i32 %14, 1, !dbg !3909
  call void @llvm.dbg.value(metadata i32 %24, metadata !3881, metadata !DIExpression()), !dbg !3884
  %25 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %13, i32 %14, !dbg !3910
  store %struct.rbnode* %1, %struct.rbnode** %25, align 4, !dbg !3911
  call fastcc void @fix_extra_red(%struct.rbnode** noundef nonnull %13, i32 noundef %24) #24, !dbg !3912
  %26 = load i32, i32* %9, align 4, !dbg !3913
  %27 = icmp slt i32 %14, %26, !dbg !3915
  br i1 %27, label %29, label %28, !dbg !3916

28:                                               ; preds = %8
  store i32 %24, i32* %9, align 4, !dbg !3917
  br label %29, !dbg !3919

29:                                               ; preds = %28, %8
  %30 = load %struct.rbnode*, %struct.rbnode** %13, align 4, !dbg !3920
  store %struct.rbnode* %30, %struct.rbnode** %3, align 4, !dbg !3921
  tail call void @llvm.stackrestore(i8* %12), !dbg !3922
  br label %31

31:                                               ; preds = %29, %6
  ret void, !dbg !3922
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_child(%struct.rbnode* nocapture noundef %0, i8 noundef zeroext %1, i8* noundef %2) unnamed_addr #10 !dbg !3923 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3927, metadata !DIExpression()), !dbg !3934
  call void @llvm.dbg.value(metadata i8 %1, metadata !3928, metadata !DIExpression()), !dbg !3934
  call void @llvm.dbg.value(metadata i8* %2, metadata !3929, metadata !DIExpression()), !dbg !3934
  %4 = icmp eq i8 %1, 0, !dbg !3935
  br i1 %4, label %8, label %5, !dbg !3936

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 1, !dbg !3937
  %7 = bitcast %struct.rbnode** %6 to i8**, !dbg !3939
  store i8* %2, i8** %7, align 4, !dbg !3939
  br label %16, !dbg !3940

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 0, !dbg !3941
  %10 = load %struct.rbnode*, %struct.rbnode** %9, align 4, !dbg !3941
  %11 = ptrtoint %struct.rbnode* %10 to i32, !dbg !3942
  call void @llvm.dbg.value(metadata i32 %11, metadata !3930, metadata !DIExpression()), !dbg !3943
  %12 = ptrtoint i8* %2 to i32, !dbg !3944
  call void @llvm.dbg.value(metadata i32 %12, metadata !3933, metadata !DIExpression()), !dbg !3943
  %13 = and i32 %11, 1, !dbg !3945
  %14 = or i32 %13, %12, !dbg !3946
  %15 = inttoptr i32 %14 to %struct.rbnode*, !dbg !3947
  store %struct.rbnode* %15, %struct.rbnode** %9, align 4, !dbg !3948
  br label %16

16:                                               ; preds = %8, %5
  ret void, !dbg !3949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_color(%struct.rbnode* nocapture noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3950 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !3954, metadata !DIExpression()), !dbg !3958
  call void @llvm.dbg.value(metadata i32 %1, metadata !3955, metadata !DIExpression()), !dbg !3958
  %3 = bitcast %struct.rbnode* %0 to i32*, !dbg !3959
  call void @llvm.dbg.value(metadata i32* %3, metadata !3956, metadata !DIExpression()), !dbg !3958
  %4 = load i32, i32* %3, align 4, !dbg !3960
  %5 = and i32 %4, -2, !dbg !3961
  %6 = and i32 %1, 255, !dbg !3962
  %7 = or i32 %5, %6, !dbg !3963
  store i32 %7, i32* %3, align 4, !dbg !3964
  ret void, !dbg !3965
}

; Function Attrs: nofree nosync nounwind willreturn
declare i8* @llvm.stacksave() #9

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @find_and_stack(%struct.rbtree* nocapture noundef readonly %0, %struct.rbnode* noundef %1, %struct.rbnode** nocapture noundef %2) unnamed_addr #1 !dbg !3966 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !3971, metadata !DIExpression()), !dbg !3978
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !3972, metadata !DIExpression()), !dbg !3978
  call void @llvm.dbg.value(metadata %struct.rbnode** %2, metadata !3973, metadata !DIExpression()), !dbg !3978
  call void @llvm.dbg.value(metadata i32 0, metadata !3974, metadata !DIExpression()), !dbg !3978
  %4 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !3979
  %5 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !3979
  call void @llvm.dbg.value(metadata i32 1, metadata !3974, metadata !DIExpression()), !dbg !3978
  store %struct.rbnode* %5, %struct.rbnode** %2, align 4, !dbg !3980
  %6 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 1, !dbg !3981
  call void @llvm.dbg.value(metadata i32 1, metadata !3974, metadata !DIExpression()), !dbg !3978
  %7 = icmp eq %struct.rbnode* %5, %1, !dbg !3982
  br i1 %7, label %23, label %8, !dbg !3983

8:                                                ; preds = %3, %19
  %9 = phi %struct.rbnode* [ %17, %19 ], [ %5, %3 ]
  %10 = phi %struct.rbnode** [ %21, %19 ], [ %2, %3 ]
  %11 = phi i32 [ %20, %19 ], [ 1, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !3974, metadata !DIExpression()), !dbg !3978
  %12 = load i1 (%struct.rbnode*, %struct.rbnode*)*, i1 (%struct.rbnode*, %struct.rbnode*)** %6, align 4, !dbg !3981
  %13 = tail call zeroext i1 %12(%struct.rbnode* noundef %1, %struct.rbnode* noundef %9) #26, !dbg !3984
  %14 = xor i1 %13, true, !dbg !3984
  %15 = zext i1 %14 to i8, !dbg !3984
  call void @llvm.dbg.value(metadata i8 %15, metadata !3975, metadata !DIExpression()), !dbg !3985
  %16 = load %struct.rbnode*, %struct.rbnode** %10, align 4, !dbg !3986
  %17 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %16, i8 noundef zeroext %15) #24, !dbg !3987
  call void @llvm.dbg.value(metadata %struct.rbnode* %17, metadata !3977, metadata !DIExpression()), !dbg !3985
  %18 = icmp eq %struct.rbnode* %17, null, !dbg !3988
  br i1 %18, label %23, label %19, !dbg !3990

19:                                               ; preds = %8
  %20 = add nuw nsw i32 %11, 1, !dbg !3991
  call void @llvm.dbg.value(metadata i32 %20, metadata !3974, metadata !DIExpression()), !dbg !3978
  %21 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %2, i32 %11, !dbg !3993
  store %struct.rbnode* %17, %struct.rbnode** %21, align 4, !dbg !3994
  %22 = icmp eq %struct.rbnode* %17, %1, !dbg !3982
  br i1 %22, label %23, label %8, !dbg !3983

23:                                               ; preds = %19, %8, %3
  %24 = phi i32 [ 1, %3 ], [ %11, %8 ], [ %20, %19 ], !dbg !3978
  call void @llvm.dbg.value(metadata i32 %24, metadata !3974, metadata !DIExpression()), !dbg !3978
  ret i32 %24, !dbg !3995
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @fix_extra_red(%struct.rbnode** nocapture noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !3996 {
  call void @llvm.dbg.value(metadata %struct.rbnode** %0, metadata !4000, metadata !DIExpression()), !dbg !4009
  call void @llvm.dbg.value(metadata i32 %1, metadata !4001, metadata !DIExpression()), !dbg !4009
  %3 = icmp sgt i32 %1, 1, !dbg !4010
  br i1 %3, label %4, label %34, !dbg !4011

4:                                                ; preds = %2, %32
  %5 = phi i32 [ %9, %32 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4001, metadata !DIExpression()), !dbg !4009
  %6 = add nsw i32 %5, -1, !dbg !4012
  %7 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %6, !dbg !4013
  %8 = load %struct.rbnode*, %struct.rbnode** %7, align 4, !dbg !4013
  call void @llvm.dbg.value(metadata %struct.rbnode* %8, metadata !4002, metadata !DIExpression()), !dbg !4014
  %9 = add nsw i32 %5, -2, !dbg !4015
  %10 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %9, !dbg !4016
  %11 = load %struct.rbnode*, %struct.rbnode** %10, align 4, !dbg !4016
  call void @llvm.dbg.value(metadata %struct.rbnode* %11, metadata !4004, metadata !DIExpression()), !dbg !4014
  %12 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %11) #24, !dbg !4017
  br i1 %12, label %38, label %13, !dbg !4019

13:                                               ; preds = %4
  %14 = add nsw i32 %5, -3, !dbg !4020
  %15 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %14, !dbg !4021
  %16 = load %struct.rbnode*, %struct.rbnode** %15, align 4, !dbg !4021
  call void @llvm.dbg.value(metadata %struct.rbnode* %16, metadata !4005, metadata !DIExpression()), !dbg !4014
  %17 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %16, %struct.rbnode* noundef %11) #24, !dbg !4022
  call void @llvm.dbg.value(metadata i8 %17, metadata !4006, metadata !DIExpression()), !dbg !4014
  %18 = icmp eq i8 %17, 0, !dbg !4023
  %19 = zext i1 %18 to i8, !dbg !4024
  %20 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %16, i8 noundef zeroext %19) #24, !dbg !4025
  call void @llvm.dbg.value(metadata %struct.rbnode* %20, metadata !4007, metadata !DIExpression()), !dbg !4014
  %21 = icmp eq %struct.rbnode* %20, null, !dbg !4026
  br i1 %21, label %24, label %22, !dbg !4028

22:                                               ; preds = %13
  %23 = tail call fastcc zeroext i1 @is_red(%struct.rbnode* noundef nonnull %20) #24, !dbg !4029
  br i1 %23, label %32, label %24, !dbg !4030

24:                                               ; preds = %22, %13
  %25 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %9, !dbg !4016
  %26 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %14, !dbg !4021
  %27 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %11, %struct.rbnode* noundef %8) #24, !dbg !4031
  call void @llvm.dbg.value(metadata i8 %27, metadata !4008, metadata !DIExpression()), !dbg !4014
  %28 = icmp eq i8 %27, %17, !dbg !4032
  br i1 %28, label %30, label %29, !dbg !4034

29:                                               ; preds = %24
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %5) #24, !dbg !4035
  br label %30, !dbg !4037

30:                                               ; preds = %29, %24
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %6) #24, !dbg !4038
  %31 = load %struct.rbnode*, %struct.rbnode** %26, align 4, !dbg !4039
  tail call fastcc void @set_color(%struct.rbnode* noundef %31, i32 noundef 1) #24, !dbg !4040
  br label %34

32:                                               ; preds = %22
  tail call fastcc void @set_color(%struct.rbnode* noundef %16, i32 noundef 0) #24, !dbg !4041
  tail call fastcc void @set_color(%struct.rbnode* noundef %11, i32 noundef 1) #24, !dbg !4043
  tail call fastcc void @set_color(%struct.rbnode* noundef nonnull %20, i32 noundef 1) #24, !dbg !4044
  call void @llvm.dbg.value(metadata i32 %9, metadata !4001, metadata !DIExpression()), !dbg !4009
  %33 = icmp ugt i32 %5, 3, !dbg !4010
  br i1 %33, label %4, label %34, !dbg !4011

34:                                               ; preds = %32, %2, %30
  %35 = phi %struct.rbnode** [ %25, %30 ], [ %0, %2 ], [ %0, %32 ]
  %36 = phi i32 [ 0, %30 ], [ 1, %2 ], [ 1, %32 ]
  %37 = load %struct.rbnode*, %struct.rbnode** %35, align 4, !dbg !4009
  tail call fastcc void @set_color(%struct.rbnode* noundef %37, i32 noundef %36) #24, !dbg !4009
  br label %38, !dbg !4045

38:                                               ; preds = %4, %34
  ret void, !dbg !4045
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.stackrestore(i8*) #9

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_black(%struct.rbnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !4046 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4050, metadata !DIExpression()), !dbg !4051
  %2 = tail call fastcc i32 @get_color(%struct.rbnode* noundef %0) #24, !dbg !4052
  %3 = icmp eq i32 %2, 1, !dbg !4053
  ret i1 %3, !dbg !4054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i8 @get_side(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* noundef readnone %1) unnamed_addr #8 !dbg !4055 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4059, metadata !DIExpression()), !dbg !4061
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !4060, metadata !DIExpression()), !dbg !4061
  %3 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %0, i8 noundef zeroext 1) #24, !dbg !4062
  %4 = icmp eq %struct.rbnode* %3, %1, !dbg !4063
  %5 = zext i1 %4 to i8, !dbg !4064
  ret i8 %5, !dbg !4065
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_red(%struct.rbnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !4066 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4068, metadata !DIExpression()), !dbg !4069
  %2 = tail call fastcc i32 @get_color(%struct.rbnode* noundef %0) #24, !dbg !4070
  %3 = icmp eq i32 %2, 0, !dbg !4071
  ret i1 %3, !dbg !4072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @rotate(%struct.rbnode** nocapture noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !4073 {
  call void @llvm.dbg.value(metadata %struct.rbnode** %0, metadata !4075, metadata !DIExpression()), !dbg !4085
  call void @llvm.dbg.value(metadata i32 %1, metadata !4076, metadata !DIExpression()), !dbg !4085
  %3 = add nsw i32 %1, -2, !dbg !4086
  %4 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %3, !dbg !4087
  %5 = load %struct.rbnode*, %struct.rbnode** %4, align 4, !dbg !4087
  call void @llvm.dbg.value(metadata %struct.rbnode* %5, metadata !4077, metadata !DIExpression()), !dbg !4085
  %6 = add nsw i32 %1, -1, !dbg !4088
  %7 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %6, !dbg !4089
  %8 = load %struct.rbnode*, %struct.rbnode** %7, align 4, !dbg !4089
  call void @llvm.dbg.value(metadata %struct.rbnode* %8, metadata !4078, metadata !DIExpression()), !dbg !4085
  %9 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %5, %struct.rbnode* noundef %8) #24, !dbg !4090, !range !4091
  call void @llvm.dbg.value(metadata i8 %9, metadata !4079, metadata !DIExpression()), !dbg !4085
  %10 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %8, i8 noundef zeroext %9) #24, !dbg !4092
  call void @llvm.dbg.value(metadata %struct.rbnode* %10, metadata !4080, metadata !DIExpression()), !dbg !4085
  %11 = xor i8 %9, 1, !dbg !4093
  %12 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %8, i8 noundef zeroext %11) #24, !dbg !4094
  call void @llvm.dbg.value(metadata %struct.rbnode* %12, metadata !4081, metadata !DIExpression()), !dbg !4085
  %13 = icmp sgt i32 %1, 2, !dbg !4095
  br i1 %13, label %14, label %20, !dbg !4096

14:                                               ; preds = %2
  %15 = add nsw i32 %1, -3, !dbg !4097
  %16 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %15, !dbg !4098
  %17 = load %struct.rbnode*, %struct.rbnode** %16, align 4, !dbg !4098
  call void @llvm.dbg.value(metadata %struct.rbnode* %17, metadata !4082, metadata !DIExpression()), !dbg !4099
  %18 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %17, %struct.rbnode* noundef %5) #24, !dbg !4100, !range !4091
  %19 = bitcast %struct.rbnode* %8 to i8*, !dbg !4101
  tail call fastcc void @set_child(%struct.rbnode* noundef %17, i8 noundef zeroext %18, i8* noundef %19) #24, !dbg !4102
  br label %20, !dbg !4103

20:                                               ; preds = %14, %2
  %21 = bitcast %struct.rbnode* %10 to i8*, !dbg !4104
  tail call fastcc void @set_child(%struct.rbnode* noundef %8, i8 noundef zeroext %9, i8* noundef %21) #24, !dbg !4105
  %22 = bitcast %struct.rbnode* %5 to i8*, !dbg !4106
  tail call fastcc void @set_child(%struct.rbnode* noundef %8, i8 noundef zeroext %11, i8* noundef %22) #24, !dbg !4107
  %23 = bitcast %struct.rbnode* %12 to i8*, !dbg !4108
  tail call fastcc void @set_child(%struct.rbnode* noundef %5, i8 noundef zeroext %9, i8* noundef %23) #24, !dbg !4109
  store %struct.rbnode* %8, %struct.rbnode** %4, align 4, !dbg !4110
  store %struct.rbnode* %5, %struct.rbnode** %7, align 4, !dbg !4111
  ret void, !dbg !4112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @get_color(%struct.rbnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !4113 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4117, metadata !DIExpression()), !dbg !4118
  %2 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 0, i32 0, i32 0, !dbg !4119
  %3 = load %struct.rbnode*, %struct.rbnode** %2, align 4, !dbg !4119
  %4 = ptrtoint %struct.rbnode* %3 to i32, !dbg !4120
  %5 = and i32 %4, 1, !dbg !4121
  ret i32 %5, !dbg !4122
}

; Function Attrs: noinline nounwind optsize
define dso_local void @rb_remove(%struct.rbtree* nocapture noundef %0, %struct.rbnode* noundef %1) local_unnamed_addr #1 !dbg !4123 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !4125, metadata !DIExpression()), !dbg !4143
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !4126, metadata !DIExpression()), !dbg !4143
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 2, !dbg !4144
  %4 = load i32, i32* %3, align 4, !dbg !4144
  %5 = add nsw i32 %4, 1, !dbg !4145
  %6 = alloca %struct.rbnode*, i32 %5, align 4, !dbg !4146
  call void @llvm.dbg.value(metadata i32 %5, metadata !4128, metadata !DIExpression()), !dbg !4143
  call void @llvm.dbg.declare(metadata %struct.rbnode** %6, metadata !4129, metadata !DIExpression()), !dbg !4147
  %7 = call fastcc i32 @find_and_stack(%struct.rbtree* noundef %0, %struct.rbnode* noundef %1, %struct.rbnode** noundef nonnull %6) #24, !dbg !4148
  call void @llvm.dbg.value(metadata i32 %7, metadata !4133, metadata !DIExpression()), !dbg !4143
  %8 = add nsw i32 %7, -1, !dbg !4149
  %9 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %8, !dbg !4151
  %10 = load %struct.rbnode*, %struct.rbnode** %9, align 4, !dbg !4151
  %11 = icmp eq %struct.rbnode* %10, %1, !dbg !4152
  br i1 %11, label %12, label %108, !dbg !4153

12:                                               ; preds = %2
  %13 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0) #24, !dbg !4154
  %14 = icmp eq %struct.rbnode* %13, null, !dbg !4155
  br i1 %14, label %69, label %15, !dbg !4156

15:                                               ; preds = %12
  %16 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1) #24, !dbg !4157
  %17 = icmp eq %struct.rbnode* %16, null, !dbg !4158
  br i1 %17, label %69, label %18, !dbg !4159

18:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 %7, metadata !4134, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.value(metadata %struct.rbnode* %13, metadata !4139, metadata !DIExpression()), !dbg !4160
  %19 = icmp sgt i32 %7, 1, !dbg !4161
  br i1 %19, label %20, label %24, !dbg !4162

20:                                               ; preds = %18
  %21 = add nsw i32 %7, -2, !dbg !4163
  %22 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %21, !dbg !4164
  %23 = load %struct.rbnode*, %struct.rbnode** %22, align 4, !dbg !4164
  br label %24, !dbg !4162

24:                                               ; preds = %18, %20
  %25 = phi %struct.rbnode* [ %23, %20 ], [ null, %18 ], !dbg !4162
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !4137, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.value(metadata i32 %7, metadata !4133, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4143
  %26 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %7, !dbg !4165
  store %struct.rbnode* %13, %struct.rbnode** %26, align 4, !dbg !4166
  %27 = add nsw i32 %7, 1, !dbg !4160
  call void @llvm.dbg.value(metadata i32 %27, metadata !4133, metadata !DIExpression()), !dbg !4143
  call void @llvm.dbg.value(metadata %struct.rbnode* %13, metadata !4139, metadata !DIExpression()), !dbg !4160
  %28 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %13, i8 noundef zeroext 1) #24, !dbg !4167
  %29 = icmp eq %struct.rbnode* %28, null, !dbg !4168
  br i1 %29, label %41, label %30, !dbg !4169

30:                                               ; preds = %24, %30
  %31 = phi %struct.rbnode* [ %35, %30 ], [ %28, %24 ]
  %32 = phi i32 [ %34, %30 ], [ %27, %24 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %31, metadata !4139, metadata !DIExpression()), !dbg !4160
  call void @llvm.dbg.value(metadata i32 %32, metadata !4133, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4143
  %33 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %32, !dbg !4170
  store %struct.rbnode* %31, %struct.rbnode** %33, align 4, !dbg !4172
  %34 = add nsw i32 %32, 1, !dbg !4160
  call void @llvm.dbg.value(metadata i32 %34, metadata !4133, metadata !DIExpression()), !dbg !4143
  %35 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %31, i8 noundef zeroext 1) #24, !dbg !4167
  %36 = icmp eq %struct.rbnode* %35, null, !dbg !4168
  br i1 %36, label %37, label %30, !dbg !4169, !llvm.loop !4173

37:                                               ; preds = %30
  %38 = add nsw i32 %32, -1, !dbg !4175
  %39 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %38
  %40 = load %struct.rbnode*, %struct.rbnode** %39, align 4, !dbg !4176
  br label %41, !dbg !4175

41:                                               ; preds = %37, %24
  %42 = phi %struct.rbnode* [ %40, %37 ], [ %1, %24 ], !dbg !4176
  %43 = phi %struct.rbnode* [ %31, %37 ], [ %13, %24 ], !dbg !4160
  %44 = phi i32 [ %32, %37 ], [ %7, %24 ]
  %45 = phi i32 [ %34, %37 ], [ %27, %24 ], !dbg !4160
  call void @llvm.dbg.value(metadata %struct.rbnode* %42, metadata !4138, metadata !DIExpression()), !dbg !4160
  %46 = icmp eq %struct.rbnode* %25, null, !dbg !4177
  br i1 %46, label %50, label %47, !dbg !4179

47:                                               ; preds = %41
  %48 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef nonnull %25, %struct.rbnode* noundef %1) #24, !dbg !4180, !range !4091
  %49 = bitcast %struct.rbnode* %43 to i8*, !dbg !4182
  tail call fastcc void @set_child(%struct.rbnode* noundef nonnull %25, i8 noundef zeroext %48, i8* noundef nonnull %49) #24, !dbg !4183
  br label %52, !dbg !4184

50:                                               ; preds = %41
  %51 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4185
  store %struct.rbnode* %43, %struct.rbnode** %51, align 4, !dbg !4187
  br label %52

52:                                               ; preds = %50, %47
  %53 = icmp eq %struct.rbnode* %42, %1, !dbg !4188
  br i1 %53, label %58, label %54, !dbg !4190

54:                                               ; preds = %52
  %55 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %42, %struct.rbnode* noundef nonnull %43) #24, !dbg !4191, !range !4091
  %56 = bitcast %struct.rbnode* %1 to i8*, !dbg !4193
  tail call fastcc void @set_child(%struct.rbnode* noundef %42, i8 noundef zeroext %55, i8* noundef %56) #24, !dbg !4194
  %57 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0) #24, !dbg !4195
  call void @llvm.dbg.value(metadata %struct.rbnode* %57, metadata !4127, metadata !DIExpression()), !dbg !4143
  br label %58

58:                                               ; preds = %52, %54
  %59 = phi %struct.rbnode* [ %57, %54 ], [ %1, %52 ]
  %60 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %43, i8 noundef zeroext 0) #24, !dbg !4196
  %61 = bitcast %struct.rbnode* %60 to i8*, !dbg !4196
  tail call fastcc void @set_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0, i8* noundef %61) #24, !dbg !4196
  %62 = bitcast %struct.rbnode* %59 to i8*, !dbg !4196
  tail call fastcc void @set_child(%struct.rbnode* noundef nonnull %43, i8 noundef zeroext 0, i8* noundef %62) #24, !dbg !4196
  %63 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1) #24, !dbg !4197
  %64 = bitcast %struct.rbnode* %63 to i8*, !dbg !4197
  tail call fastcc void @set_child(%struct.rbnode* noundef nonnull %43, i8 noundef zeroext 1, i8* noundef %64) #24, !dbg !4198
  tail call fastcc void @set_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1, i8* noundef null) #24, !dbg !4199
  %65 = load %struct.rbnode*, %struct.rbnode** %9, align 4, !dbg !4200
  call void @llvm.dbg.value(metadata %struct.rbnode* %65, metadata !4127, metadata !DIExpression()), !dbg !4143
  %66 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %44, !dbg !4201
  store %struct.rbnode* %43, %struct.rbnode** %9, align 4, !dbg !4202
  store %struct.rbnode* %65, %struct.rbnode** %66, align 4, !dbg !4203
  %67 = tail call fastcc i32 @get_color(%struct.rbnode* noundef %1) #24, !dbg !4204
  call void @llvm.dbg.value(metadata i32 %67, metadata !4140, metadata !DIExpression()), !dbg !4160
  %68 = tail call fastcc i32 @get_color(%struct.rbnode* noundef nonnull %43) #24, !dbg !4205, !range !4206
  tail call fastcc void @set_color(%struct.rbnode* noundef %1, i32 noundef %68) #24, !dbg !4207
  tail call fastcc void @set_color(%struct.rbnode* noundef nonnull %43, i32 noundef %67) #24, !dbg !4208
  br label %69, !dbg !4209

69:                                               ; preds = %58, %15, %12
  %70 = phi i32 [ %45, %58 ], [ %7, %15 ], [ %7, %12 ], !dbg !4143
  call void @llvm.dbg.value(metadata i32 %70, metadata !4133, metadata !DIExpression()), !dbg !4143
  %71 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 0) #24, !dbg !4210
  call void @llvm.dbg.value(metadata %struct.rbnode* %71, metadata !4141, metadata !DIExpression()), !dbg !4143
  %72 = icmp eq %struct.rbnode* %71, null, !dbg !4211
  br i1 %72, label %73, label %75, !dbg !4213

73:                                               ; preds = %69
  %74 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %1, i8 noundef zeroext 1) #24, !dbg !4214
  call void @llvm.dbg.value(metadata %struct.rbnode* %74, metadata !4141, metadata !DIExpression()), !dbg !4143
  br label %75, !dbg !4216

75:                                               ; preds = %73, %69
  %76 = phi %struct.rbnode* [ %74, %73 ], [ %71, %69 ], !dbg !4143
  call void @llvm.dbg.value(metadata %struct.rbnode* %76, metadata !4141, metadata !DIExpression()), !dbg !4143
  %77 = icmp slt i32 %70, 2, !dbg !4217
  br i1 %77, label %78, label %83, !dbg !4219

78:                                               ; preds = %75
  %79 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4220
  store %struct.rbnode* %76, %struct.rbnode** %79, align 4, !dbg !4222
  %80 = icmp eq %struct.rbnode* %76, null, !dbg !4223
  br i1 %80, label %82, label %81, !dbg !4225

81:                                               ; preds = %78
  tail call fastcc void @set_color(%struct.rbnode* noundef nonnull %76, i32 noundef 1) #24, !dbg !4226
  br label %108, !dbg !4228

82:                                               ; preds = %78
  store i32 0, i32* %3, align 4, !dbg !4229
  br label %108

83:                                               ; preds = %75
  %84 = add nsw i32 %70, -2, !dbg !4231
  %85 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %6, i32 %84, !dbg !4232
  %86 = load %struct.rbnode*, %struct.rbnode** %85, align 4, !dbg !4232
  call void @llvm.dbg.value(metadata %struct.rbnode* %86, metadata !4142, metadata !DIExpression()), !dbg !4143
  %87 = icmp eq %struct.rbnode* %76, null, !dbg !4233
  br i1 %87, label %88, label %93, !dbg !4235

88:                                               ; preds = %83
  %89 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %1) #24, !dbg !4236
  br i1 %89, label %90, label %91, !dbg !4239

90:                                               ; preds = %88
  call fastcc void @fix_missing_black(%struct.rbnode** noundef nonnull %6, i32 noundef %70, %struct.rbnode* noundef %1) #24, !dbg !4240
  br label %105, !dbg !4242

91:                                               ; preds = %88
  %92 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %86, %struct.rbnode* noundef %1) #24, !dbg !4243, !range !4091
  tail call fastcc void @set_child(%struct.rbnode* noundef %86, i8 noundef zeroext %92, i8* noundef null) #24, !dbg !4245
  br label %105

93:                                               ; preds = %83
  %94 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %86, %struct.rbnode* noundef %1) #24, !dbg !4246, !range !4091
  %95 = bitcast %struct.rbnode* %76 to i8*, !dbg !4248
  tail call fastcc void @set_child(%struct.rbnode* noundef %86, i8 noundef zeroext %94, i8* noundef nonnull %95) #24, !dbg !4249
  %96 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %1) #24, !dbg !4250
  br i1 %96, label %100, label %97, !dbg !4250

97:                                               ; preds = %93
  %98 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef nonnull %76) #24, !dbg !4250
  br i1 %98, label %100, label %99, !dbg !4253

99:                                               ; preds = %97
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16, i32 0, i32 0), i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.18, i32 0, i32 0), i32 noundef 486) #26, !dbg !4254
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.19, i32 0, i32 0)) #26, !dbg !4254
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.18, i32 0, i32 0), i32 noundef 486) #26, !dbg !4254
  unreachable, !dbg !4254

100:                                              ; preds = %97, %93
  %101 = tail call fastcc zeroext i1 @is_red(%struct.rbnode* noundef %1) #24, !dbg !4256
  br i1 %101, label %104, label %102, !dbg !4258

102:                                              ; preds = %100
  %103 = tail call fastcc zeroext i1 @is_red(%struct.rbnode* noundef nonnull %76) #24, !dbg !4259
  br i1 %103, label %104, label %105, !dbg !4260

104:                                              ; preds = %102, %100
  tail call fastcc void @set_color(%struct.rbnode* noundef nonnull %76, i32 noundef 1) #24, !dbg !4261
  br label %105, !dbg !4263

105:                                              ; preds = %102, %104, %90, %91
  %106 = load %struct.rbnode*, %struct.rbnode** %6, align 4, !dbg !4264
  %107 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4265
  store %struct.rbnode* %106, %struct.rbnode** %107, align 4, !dbg !4266
  br label %108, !dbg !4267

108:                                              ; preds = %105, %82, %81, %2
  ret void, !dbg !4267
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @fix_missing_black(%struct.rbnode** nocapture noundef %0, i32 noundef %1, %struct.rbnode* noundef readnone %2) unnamed_addr #12 !dbg !4268 {
  call void @llvm.dbg.value(metadata %struct.rbnode** %0, metadata !4272, metadata !DIExpression()), !dbg !4284
  call void @llvm.dbg.value(metadata i32 %1, metadata !4273, metadata !DIExpression()), !dbg !4284
  call void @llvm.dbg.value(metadata %struct.rbnode* %2, metadata !4274, metadata !DIExpression()), !dbg !4284
  %4 = icmp sgt i32 %1, 1, !dbg !4285
  br i1 %4, label %5, label %68, !dbg !4286

5:                                                ; preds = %3, %65
  %6 = phi i32 [ %66, %65 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !4273, metadata !DIExpression()), !dbg !4284
  %7 = add nsw i32 %6, -1, !dbg !4287
  %8 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %7, !dbg !4288
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !4288
  call void @llvm.dbg.value(metadata %struct.rbnode* %9, metadata !4280, metadata !DIExpression()), !dbg !4289
  %10 = add nsw i32 %6, -2, !dbg !4290
  %11 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %10, !dbg !4291
  %12 = load %struct.rbnode*, %struct.rbnode** %11, align 4, !dbg !4291
  call void @llvm.dbg.value(metadata %struct.rbnode* %12, metadata !4281, metadata !DIExpression()), !dbg !4289
  %13 = tail call fastcc zeroext i8 @get_side(%struct.rbnode* noundef %12, %struct.rbnode* noundef %9) #24, !dbg !4292
  call void @llvm.dbg.value(metadata i8 %13, metadata !4282, metadata !DIExpression()), !dbg !4289
  %14 = icmp eq i8 %13, 0, !dbg !4293
  %15 = zext i1 %14 to i8, !dbg !4294
  %16 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %12, i8 noundef zeroext %15) #24, !dbg !4295
  call void @llvm.dbg.value(metadata %struct.rbnode* %16, metadata !4283, metadata !DIExpression()), !dbg !4289
  %17 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %16) #24, !dbg !4296
  br i1 %17, label %23, label %18, !dbg !4298

18:                                               ; preds = %5
  store %struct.rbnode* %16, %struct.rbnode** %8, align 4, !dbg !4299
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %6) #24, !dbg !4301
  tail call fastcc void @set_color(%struct.rbnode* noundef %12, i32 noundef 0) #24, !dbg !4302
  tail call fastcc void @set_color(%struct.rbnode* noundef %16, i32 noundef 1) #24, !dbg !4303
  %19 = add nuw nsw i32 %6, 1, !dbg !4304
  call void @llvm.dbg.value(metadata i32 %19, metadata !4273, metadata !DIExpression()), !dbg !4284
  %20 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %6, !dbg !4305
  store %struct.rbnode* %9, %struct.rbnode** %20, align 4, !dbg !4306
  %21 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !4307
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !4281, metadata !DIExpression()), !dbg !4289
  %22 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %21, i8 noundef zeroext %15) #24, !dbg !4308
  call void @llvm.dbg.value(metadata %struct.rbnode* %22, metadata !4283, metadata !DIExpression()), !dbg !4289
  br label %23, !dbg !4309

23:                                               ; preds = %18, %5
  %24 = phi %struct.rbnode* [ %12, %5 ], [ %21, %18 ], !dbg !4289
  %25 = phi i32 [ %6, %5 ], [ %19, %18 ]
  %26 = phi %struct.rbnode* [ %16, %5 ], [ %22, %18 ], !dbg !4289
  call void @llvm.dbg.value(metadata %struct.rbnode* %26, metadata !4283, metadata !DIExpression()), !dbg !4289
  call void @llvm.dbg.value(metadata i32 %25, metadata !4273, metadata !DIExpression()), !dbg !4284
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !4281, metadata !DIExpression()), !dbg !4289
  %27 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %26, i8 noundef zeroext 0) #24, !dbg !4310
  call void @llvm.dbg.value(metadata %struct.rbnode* %27, metadata !4275, metadata !DIExpression()), !dbg !4289
  %28 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %26, i8 noundef zeroext 1) #24, !dbg !4311
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !4277, metadata !DIExpression()), !dbg !4289
  %29 = icmp eq %struct.rbnode* %27, null, !dbg !4312
  br i1 %29, label %32, label %30, !dbg !4314

30:                                               ; preds = %23
  %31 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef nonnull %27) #24, !dbg !4315
  br i1 %31, label %32, label %42, !dbg !4316

32:                                               ; preds = %30, %23
  %33 = icmp eq %struct.rbnode* %28, null, !dbg !4317
  br i1 %33, label %36, label %34, !dbg !4318

34:                                               ; preds = %32
  %35 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef nonnull %28) #24, !dbg !4319
  br i1 %35, label %36, label %42, !dbg !4320

36:                                               ; preds = %34, %32
  %37 = icmp eq %struct.rbnode* %9, %2, !dbg !4321
  br i1 %37, label %38, label %39, !dbg !4324

38:                                               ; preds = %36
  tail call fastcc void @set_child(%struct.rbnode* noundef %24, i8 noundef zeroext %13, i8* noundef null) #24, !dbg !4325
  br label %39, !dbg !4327

39:                                               ; preds = %38, %36
  tail call fastcc void @set_color(%struct.rbnode* noundef %26, i32 noundef 0) #24, !dbg !4328
  %40 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %24) #24, !dbg !4329
  br i1 %40, label %65, label %41, !dbg !4331

41:                                               ; preds = %39
  tail call fastcc void @set_color(%struct.rbnode* noundef %24, i32 noundef 1) #24, !dbg !4332
  br label %68, !dbg !4334

42:                                               ; preds = %34, %30
  %43 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %26, i8 noundef zeroext %15) #24, !dbg !4335
  call void @llvm.dbg.value(metadata %struct.rbnode* %43, metadata !4279, metadata !DIExpression()), !dbg !4289
  %44 = icmp eq %struct.rbnode* %43, null, !dbg !4336
  br i1 %44, label %49, label %45, !dbg !4338

45:                                               ; preds = %42
  %46 = tail call fastcc zeroext i1 @is_red(%struct.rbnode* noundef nonnull %43) #24, !dbg !4339
  br i1 %46, label %47, label %49, !dbg !4340

47:                                               ; preds = %45
  %48 = add nsw i32 %25, -1, !dbg !4341
  br label %57, !dbg !4340

49:                                               ; preds = %45, %42
  %50 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %26, i8 noundef zeroext %13) #24, !dbg !4342
  call void @llvm.dbg.value(metadata %struct.rbnode* %50, metadata !4278, metadata !DIExpression()), !dbg !4289
  %51 = add nsw i32 %25, -1, !dbg !4344
  %52 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %51, !dbg !4345
  store %struct.rbnode* %26, %struct.rbnode** %52, align 4, !dbg !4346
  %53 = add nuw nsw i32 %25, 1, !dbg !4347
  call void @llvm.dbg.value(metadata i32 %53, metadata !4273, metadata !DIExpression()), !dbg !4284
  %54 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %25, !dbg !4348
  store %struct.rbnode* %50, %struct.rbnode** %54, align 4, !dbg !4349
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %53) #24, !dbg !4350
  tail call fastcc void @set_color(%struct.rbnode* noundef %26, i32 noundef 0) #24, !dbg !4351
  tail call fastcc void @set_color(%struct.rbnode* noundef %50, i32 noundef 1) #24, !dbg !4352
  %55 = load %struct.rbnode*, %struct.rbnode** %52, align 4, !dbg !4353
  call void @llvm.dbg.value(metadata %struct.rbnode* %55, metadata !4283, metadata !DIExpression()), !dbg !4289
  %56 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %55, i8 noundef zeroext %15) #24, !dbg !4354
  call void @llvm.dbg.value(metadata %struct.rbnode* %56, metadata !4279, metadata !DIExpression()), !dbg !4289
  store %struct.rbnode* %9, %struct.rbnode** %52, align 4, !dbg !4355
  call void @llvm.dbg.value(metadata i32 %25, metadata !4273, metadata !DIExpression()), !dbg !4284
  br label %57, !dbg !4356

57:                                               ; preds = %47, %49
  %58 = phi i32 [ %48, %47 ], [ %51, %49 ], !dbg !4341
  %59 = phi %struct.rbnode* [ %43, %47 ], [ %56, %49 ], !dbg !4289
  %60 = phi %struct.rbnode* [ %26, %47 ], [ %55, %49 ], !dbg !4289
  call void @llvm.dbg.value(metadata %struct.rbnode* %60, metadata !4283, metadata !DIExpression()), !dbg !4289
  call void @llvm.dbg.value(metadata i32 %25, metadata !4273, metadata !DIExpression()), !dbg !4284
  call void @llvm.dbg.value(metadata %struct.rbnode* %59, metadata !4279, metadata !DIExpression()), !dbg !4289
  %61 = tail call fastcc i32 @get_color(%struct.rbnode* noundef %24) #24, !dbg !4357, !range !4206
  tail call fastcc void @set_color(%struct.rbnode* noundef %60, i32 noundef %61) #24, !dbg !4358
  tail call fastcc void @set_color(%struct.rbnode* noundef %24, i32 noundef 1) #24, !dbg !4359
  tail call fastcc void @set_color(%struct.rbnode* noundef %59, i32 noundef 1) #24, !dbg !4360
  %62 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %0, i32 %58, !dbg !4361
  store %struct.rbnode* %60, %struct.rbnode** %62, align 4, !dbg !4362
  tail call fastcc void @rotate(%struct.rbnode** noundef nonnull %0, i32 noundef %25) #24, !dbg !4363
  %63 = icmp eq %struct.rbnode* %9, %2, !dbg !4364
  br i1 %63, label %64, label %68, !dbg !4366

64:                                               ; preds = %57
  tail call fastcc void @set_child(%struct.rbnode* noundef %24, i8 noundef zeroext %13, i8* noundef null) #24, !dbg !4367
  br label %68, !dbg !4369

65:                                               ; preds = %39
  %66 = add nsw i32 %25, -1, !dbg !4370
  call void @llvm.dbg.value(metadata i32 %66, metadata !4273, metadata !DIExpression()), !dbg !4284
  %67 = icmp sgt i32 %25, 2, !dbg !4285
  br i1 %67, label %5, label %68, !dbg !4286

68:                                               ; preds = %65, %3, %57, %64, %41
  ret void, !dbg !4372
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_rb_walk(%struct.rbnode* noundef %0, void (%struct.rbnode*, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !4373 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4381, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata void (%struct.rbnode*, i8*)* %1, metadata !4382, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata i8* %2, metadata !4383, metadata !DIExpression()), !dbg !4384
  %4 = icmp eq %struct.rbnode* %0, null, !dbg !4385
  br i1 %4, label %10, label %5, !dbg !4387

5:                                                ; preds = %3, %5
  %6 = phi %struct.rbnode* [ %8, %5 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %6, metadata !4381, metadata !DIExpression()), !dbg !4384
  %7 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %6, i8 noundef zeroext 0) #24, !dbg !4388
  tail call void @z_rb_walk(%struct.rbnode* noundef %7, void (%struct.rbnode*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !4390
  tail call void %1(%struct.rbnode* noundef nonnull %6, i8* noundef %2) #26, !dbg !4391
  %8 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %6, i8 noundef zeroext 1) #24, !dbg !4392
  call void @llvm.dbg.value(metadata %struct.rbnode* %8, metadata !4381, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata void (%struct.rbnode*, i8*)* %1, metadata !4382, metadata !DIExpression()), !dbg !4384
  call void @llvm.dbg.value(metadata i8* %2, metadata !4383, metadata !DIExpression()), !dbg !4384
  %9 = icmp eq %struct.rbnode* %8, null, !dbg !4385
  br i1 %9, label %10, label %5, !dbg !4387

10:                                               ; preds = %5, %3
  ret void, !dbg !4393
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.rbnode* @z_rb_child(%struct.rbnode* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #8 !dbg !4394 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4396, metadata !DIExpression()), !dbg !4398
  call void @llvm.dbg.value(metadata i8 %1, metadata !4397, metadata !DIExpression()), !dbg !4398
  %3 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %0, i8 noundef zeroext %1) #24, !dbg !4399
  ret %struct.rbnode* %3, !dbg !4400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_rb_is_black(%struct.rbnode* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !4401 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4405, metadata !DIExpression()), !dbg !4406
  %2 = tail call fastcc zeroext i1 @is_black(%struct.rbnode* noundef %0) #24, !dbg !4407
  %3 = zext i1 %2 to i32, !dbg !4407
  ret i32 %3, !dbg !4408
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @rb_contains(%struct.rbtree* nocapture noundef readonly %0, %struct.rbnode* noundef %1) local_unnamed_addr #1 !dbg !4409 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !4413, metadata !DIExpression()), !dbg !4416
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !4414, metadata !DIExpression()), !dbg !4416
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4417
  %4 = load %struct.rbnode*, %struct.rbnode** %3, align 4, !dbg !4417
  call void @llvm.dbg.value(metadata %struct.rbnode* %4, metadata !4415, metadata !DIExpression()), !dbg !4416
  %5 = icmp ne %struct.rbnode* %4, null, !dbg !4418
  %6 = icmp ne %struct.rbnode* %4, %1, !dbg !4419
  %7 = and i1 %5, %6, !dbg !4419
  br i1 %7, label %8, label %19, !dbg !4420

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 1
  br label %10, !dbg !4420

10:                                               ; preds = %8, %10
  %11 = phi %struct.rbnode* [ %4, %8 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %11, metadata !4415, metadata !DIExpression()), !dbg !4416
  %12 = load i1 (%struct.rbnode*, %struct.rbnode*)*, i1 (%struct.rbnode*, %struct.rbnode*)** %9, align 4, !dbg !4421
  %13 = tail call zeroext i1 %12(%struct.rbnode* noundef nonnull %11, %struct.rbnode* noundef %1) #26, !dbg !4423
  %14 = zext i1 %13 to i8, !dbg !4423
  %15 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %11, i8 noundef zeroext %14) #24, !dbg !4424
  call void @llvm.dbg.value(metadata %struct.rbnode* %15, metadata !4415, metadata !DIExpression()), !dbg !4416
  %16 = icmp ne %struct.rbnode* %15, null, !dbg !4418
  %17 = icmp ne %struct.rbnode* %15, %1, !dbg !4419
  %18 = and i1 %16, %17, !dbg !4419
  br i1 %18, label %10, label %19, !dbg !4420, !llvm.loop !4425

19:                                               ; preds = %10, %2
  %20 = phi %struct.rbnode* [ %4, %2 ], [ %15, %10 ], !dbg !4416
  %21 = icmp eq %struct.rbnode* %20, %1, !dbg !4427
  ret i1 %21, !dbg !4428
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* nocapture noundef readonly %0, %struct._rb_foreach* nocapture noundef %1) local_unnamed_addr #12 !dbg !4429 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !4439, metadata !DIExpression()), !dbg !4442
  call void @llvm.dbg.value(metadata %struct._rb_foreach* %1, metadata !4440, metadata !DIExpression()), !dbg !4442
  %3 = getelementptr inbounds %struct.rbtree, %struct.rbtree* %0, i32 0, i32 0, !dbg !4443
  %4 = load %struct.rbnode*, %struct.rbnode** %3, align 4, !dbg !4443
  %5 = icmp eq %struct.rbnode* %4, null, !dbg !4445
  br i1 %5, label %48, label %6, !dbg !4446

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 2, !dbg !4447
  %8 = load i32, i32* %7, align 4, !dbg !4447
  %9 = icmp eq i32 %8, -1, !dbg !4449
  br i1 %9, label %10, label %12, !dbg !4450

10:                                               ; preds = %6
  %11 = tail call fastcc %struct.rbnode* @stack_left_limb(%struct.rbnode* noundef nonnull %4, %struct._rb_foreach* noundef nonnull %1) #24, !dbg !4451
  br label %48, !dbg !4453

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 0, !dbg !4454
  %14 = load %struct.rbnode**, %struct.rbnode*** %13, align 4, !dbg !4454
  %15 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %14, i32 %8, !dbg !4455
  %16 = load %struct.rbnode*, %struct.rbnode** %15, align 4, !dbg !4455
  %17 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %16, i8 noundef zeroext 1) #24, !dbg !4456
  call void @llvm.dbg.value(metadata %struct.rbnode* %17, metadata !4441, metadata !DIExpression()), !dbg !4442
  %18 = icmp eq %struct.rbnode* %17, null, !dbg !4457
  br i1 %18, label %21, label %19, !dbg !4459

19:                                               ; preds = %12
  %20 = tail call fastcc %struct.rbnode* @stack_left_limb(%struct.rbnode* noundef nonnull %17, %struct._rb_foreach* noundef nonnull %1) #24, !dbg !4460
  br label %48, !dbg !4462

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 1, !dbg !4463
  %23 = load i8*, i8** %22, align 4, !dbg !4463
  %24 = getelementptr inbounds i8, i8* %23, i32 %8, !dbg !4465
  %25 = load i8, i8* %24, align 1, !dbg !4465
  %26 = icmp eq i8 %25, 0, !dbg !4466
  br i1 %26, label %31, label %27, !dbg !4467

27:                                               ; preds = %21
  %28 = add nsw i32 %8, -1, !dbg !4468
  store i32 %28, i32* %7, align 4, !dbg !4468
  %29 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %14, i32 %28, !dbg !4470
  %30 = load %struct.rbnode*, %struct.rbnode** %29, align 4, !dbg !4470
  br label %48, !dbg !4471

31:                                               ; preds = %21
  %32 = icmp sgt i32 %8, 0, !dbg !4472
  br i1 %32, label %33, label %41, !dbg !4473

33:                                               ; preds = %31, %37
  %34 = phi i32 [ %35, %37 ], [ %8, %31 ]
  %35 = add nsw i32 %34, -1, !dbg !4474
  store i32 %35, i32* %7, align 4, !dbg !4474
  %36 = icmp sgt i32 %34, 1, !dbg !4472
  br i1 %36, label %37, label %41, !dbg !4473, !llvm.loop !4476

37:                                               ; preds = %33
  %38 = getelementptr inbounds i8, i8* %23, i32 %35
  %39 = load i8, i8* %38, align 1, !dbg !4479
  %40 = icmp eq i8 %39, 0, !dbg !4480
  br i1 %40, label %33, label %44, !dbg !4477

41:                                               ; preds = %33, %31
  %42 = phi i32 [ %8, %31 ], [ 0, %33 ], !dbg !4481
  %43 = add nsw i32 %42, -1, !dbg !4482
  store i32 %43, i32* %7, align 4, !dbg !4482
  br label %48, !dbg !4483

44:                                               ; preds = %37
  %45 = add nsw i32 %34, -2, !dbg !4482
  store i32 %45, i32* %7, align 4, !dbg !4482
  %46 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %14, i32 %45, !dbg !4484
  %47 = load %struct.rbnode*, %struct.rbnode** %46, align 4, !dbg !4484
  br label %48, !dbg !4483

48:                                               ; preds = %41, %44, %2, %27, %19, %10
  %49 = phi %struct.rbnode* [ %11, %10 ], [ %20, %19 ], [ %30, %27 ], [ null, %2 ], [ %47, %44 ], [ null, %41 ], !dbg !4442
  ret %struct.rbnode* %49, !dbg !4485
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc %struct.rbnode* @stack_left_limb(%struct.rbnode* noundef %0, %struct._rb_foreach* nocapture noundef %1) unnamed_addr #12 !dbg !4486 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4490, metadata !DIExpression()), !dbg !4492
  call void @llvm.dbg.value(metadata %struct._rb_foreach* %1, metadata !4491, metadata !DIExpression()), !dbg !4492
  %3 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 2, !dbg !4493
  %4 = load i32, i32* %3, align 4, !dbg !4494
  %5 = add nsw i32 %4, 1, !dbg !4494
  store i32 %5, i32* %3, align 4, !dbg !4494
  %6 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 0, !dbg !4495
  %7 = load %struct.rbnode**, %struct.rbnode*** %6, align 4, !dbg !4495
  %8 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %7, i32 %5, !dbg !4496
  store %struct.rbnode* %0, %struct.rbnode** %8, align 4, !dbg !4497
  %9 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %1, i32 0, i32 1, !dbg !4498
  %10 = load i8*, i8** %9, align 4, !dbg !4498
  %11 = load i32, i32* %3, align 4, !dbg !4499
  %12 = getelementptr inbounds i8, i8* %10, i32 %11, !dbg !4500
  store i8 0, i8* %12, align 1, !dbg !4501
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !4490, metadata !DIExpression()), !dbg !4492
  %13 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef %0, i8 noundef zeroext 0) #24, !dbg !4502
  call void @llvm.dbg.value(metadata %struct.rbnode* %13, metadata !4490, metadata !DIExpression()), !dbg !4492
  %14 = icmp eq %struct.rbnode* %13, null, !dbg !4503
  br i1 %14, label %26, label %15, !dbg !4504

15:                                               ; preds = %2, %15
  %16 = phi %struct.rbnode* [ %24, %15 ], [ %13, %2 ]
  %17 = load i32, i32* %3, align 4, !dbg !4505
  %18 = add nsw i32 %17, 1, !dbg !4505
  store i32 %18, i32* %3, align 4, !dbg !4505
  %19 = load %struct.rbnode**, %struct.rbnode*** %6, align 4, !dbg !4507
  %20 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %19, i32 %18, !dbg !4508
  store %struct.rbnode* %16, %struct.rbnode** %20, align 4, !dbg !4509
  %21 = load i8*, i8** %9, align 4, !dbg !4510
  %22 = load i32, i32* %3, align 4, !dbg !4511
  %23 = getelementptr inbounds i8, i8* %21, i32 %22, !dbg !4512
  store i8 1, i8* %23, align 1, !dbg !4513
  call void @llvm.dbg.value(metadata %struct.rbnode* %16, metadata !4490, metadata !DIExpression()), !dbg !4492
  %24 = tail call fastcc %struct.rbnode* @get_child(%struct.rbnode* noundef nonnull %16, i8 noundef zeroext 0) #24, !dbg !4502
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !4490, metadata !DIExpression()), !dbg !4492
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !4503
  br i1 %25, label %26, label %15, !dbg !4504, !llvm.loop !4514

26:                                               ; preds = %15, %2
  %27 = load %struct.rbnode**, %struct.rbnode*** %6, align 4, !dbg !4516
  %28 = load i32, i32* %3, align 4, !dbg !4517
  %29 = getelementptr inbounds %struct.rbnode*, %struct.rbnode** %27, i32 %28, !dbg !4518
  %30 = load %struct.rbnode*, %struct.rbnode** %29, align 4, !dbg !4518
  ret %struct.rbnode* %30, !dbg !4519
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #2 !dbg !4520 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4525, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.value(metadata i8* %1, metadata !4526, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.value(metadata i8* %2, metadata !4527, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.value(metadata i8* %3, metadata !4528, metadata !DIExpression()), !dbg !4529
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #26, !dbg !4530
  %5 = tail call fastcc %struct.k_thread* @k_current_get.20() #25, !dbg !4531
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4532
  unreachable, !dbg !4533
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.20() unnamed_addr #5 !dbg !4534 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.21() #25, !dbg !4649
  ret %struct.k_thread* %1, !dbg !4650
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4651 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4655, metadata !DIExpression()), !dbg !4656
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4657, !srcloc !4659
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !4660
  ret void, !dbg !4661
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.21() unnamed_addr #5 !dbg !4662 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4663, !srcloc !4665
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !4666
  ret %struct.k_thread* %1, !dbg !4667
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4668 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4681, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4678, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.value(metadata i8* %1, metadata !4679, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.value(metadata i8* %2, metadata !4680, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.value(metadata i32 %4, metadata !4682, metadata !DIExpression()), !dbg !4809
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4810
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4810
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4683, metadata !DIExpression()), !dbg !4811
  call void @llvm.dbg.value(metadata i32 0, metadata !4687, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.value(metadata i1 undef, metadata !4689, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4809
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4812

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4812

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4813
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4681, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.value(metadata i8* %30, metadata !4680, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.value(metadata i32 %29, metadata !4687, metadata !DIExpression()), !dbg !4809
  %31 = load i8, i8* %30, align 1, !dbg !4814
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4812

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4814
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4815
  call void @llvm.dbg.value(metadata i8* %34, metadata !4680, metadata !DIExpression()), !dbg !4809
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #26, !dbg !4815
  call void @llvm.dbg.value(metadata i32 %35, metadata !4691, metadata !DIExpression()), !dbg !4816
  %36 = icmp slt i32 %35, 0, !dbg !4817
  %37 = add i32 %29, 1, !dbg !4815
  call void @llvm.dbg.value(metadata i32 undef, metadata !4687, metadata !DIExpression()), !dbg !4809
  br i1 %36, label %365, label %28, !llvm.loop !4819

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4821
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4696, metadata !DIExpression()), !dbg !4822
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4822
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4741, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4744, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i8* %30, metadata !4747, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i32 -1, metadata !4748, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i32 -1, metadata !4749, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i8* null, metadata !4750, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i8* %14, metadata !4751, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i8 0, metadata !4752, metadata !DIExpression()), !dbg !4823
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4824
  call void @llvm.dbg.value(metadata i8* %39, metadata !4680, metadata !DIExpression()), !dbg !4809
  %40 = load i24, i24* %15, align 8, !dbg !4825
  %41 = and i24 %40, 256, !dbg !4825
  %42 = icmp eq i24 %41, 0, !dbg !4825
  br i1 %42, label %51, label %43, !dbg !4827

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4828
  call void @llvm.dbg.value(metadata i8* %44, metadata !4681, metadata !DIExpression()), !dbg !4809
  %45 = bitcast i8* %27 to i32*, !dbg !4828
  %46 = load i32, i32* %45, align 4, !dbg !4828
  call void @llvm.dbg.value(metadata i32 %46, metadata !4748, metadata !DIExpression()), !dbg !4823
  %47 = icmp slt i32 %46, 0, !dbg !4830
  br i1 %47, label %48, label %56, !dbg !4832

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4833
  store i24 %49, i24* %15, align 8, !dbg !4833
  %50 = sub nsw i32 0, %46, !dbg !4835
  call void @llvm.dbg.value(metadata i32 %50, metadata !4748, metadata !DIExpression()), !dbg !4823
  br label %56, !dbg !4836

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4837
  %53 = icmp eq i24 %52, 0, !dbg !4837
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4839
  br label %56, !dbg !4839

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4840
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4823
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4681, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.value(metadata i32 %58, metadata !4748, metadata !DIExpression()), !dbg !4823
  %60 = and i24 %57, 1024, !dbg !4840
  %61 = icmp eq i24 %60, 0, !dbg !4840
  br i1 %61, label %69, label %62, !dbg !4841

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4842
  call void @llvm.dbg.value(metadata i8* %63, metadata !4681, metadata !DIExpression()), !dbg !4809
  %64 = bitcast i8* %59 to i32*, !dbg !4842
  %65 = load i32, i32* %64, align 4, !dbg !4842
  call void @llvm.dbg.value(metadata i32 %65, metadata !4753, metadata !DIExpression()), !dbg !4843
  %66 = icmp slt i32 %65, 0, !dbg !4844
  br i1 %66, label %67, label %74, !dbg !4846

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4847
  store i24 %68, i24* %15, align 8, !dbg !4847
  br label %74, !dbg !4849

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4850
  %71 = icmp eq i24 %70, 0, !dbg !4850
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4852
  br label %74, !dbg !4852

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4853
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4823
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4823
  call void @llvm.dbg.value(metadata i8* %77, metadata !4681, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.value(metadata i32 %76, metadata !4749, metadata !DIExpression()), !dbg !4823
  store i32 0, i32* %16, align 4, !dbg !4854
  store i32 0, i32* %17, align 8, !dbg !4855
  %78 = lshr i24 %75, 16, !dbg !4853
  call void @llvm.dbg.value(metadata i24 %78, metadata !4756, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4823
  %79 = lshr i24 %75, 11, !dbg !4856
  %80 = and i24 %79, 15, !dbg !4856
  %81 = zext i24 %80 to i32, !dbg !4856
  call void @llvm.dbg.value(metadata i32 %81, metadata !4757, metadata !DIExpression()), !dbg !4823
  %82 = trunc i24 %78 to i3, !dbg !4857
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4857

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4858

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4861
  call void @llvm.dbg.value(metadata i8* %85, metadata !4681, metadata !DIExpression()), !dbg !4809
  %86 = bitcast i8* %77 to i32*, !dbg !4861
  %87 = load i32, i32* %86, align 4, !dbg !4861
  %88 = sext i32 %87 to i64, !dbg !4861
  store i64 %88, i64* %20, align 8, !dbg !4863
  br label %115, !dbg !4864

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4865
  call void @llvm.dbg.value(metadata i8* %90, metadata !4681, metadata !DIExpression()), !dbg !4809
  %91 = bitcast i8* %77 to i32*, !dbg !4865
  %92 = load i32, i32* %91, align 4, !dbg !4865
  %93 = sext i32 %92 to i64, !dbg !4865
  store i64 %93, i64* %20, align 8, !dbg !4868
  br label %115, !dbg !4869

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4870
  %96 = add i32 %95, 7, !dbg !4870
  %97 = and i32 %96, -8, !dbg !4870
  %98 = inttoptr i32 %97 to i8*, !dbg !4870
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4870
  call void @llvm.dbg.value(metadata i8* %99, metadata !4681, metadata !DIExpression()), !dbg !4809
  %100 = inttoptr i32 %97 to i64*, !dbg !4870
  %101 = load i64, i64* %100, align 8, !dbg !4870
  store i64 %101, i64* %20, align 8, !dbg !4871
  br label %115, !dbg !4872

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4873
  %104 = add i32 %103, 7, !dbg !4873
  %105 = and i32 %104, -8, !dbg !4873
  %106 = inttoptr i32 %105 to i8*, !dbg !4873
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4873
  call void @llvm.dbg.value(metadata i8* %107, metadata !4681, metadata !DIExpression()), !dbg !4809
  %108 = inttoptr i32 %105 to i64*, !dbg !4873
  %109 = load i64, i64* %108, align 8, !dbg !4873
  store i64 %109, i64* %20, align 8, !dbg !4874
  br label %115, !dbg !4875

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4876
  call void @llvm.dbg.value(metadata i8* %111, metadata !4681, metadata !DIExpression()), !dbg !4809
  %112 = bitcast i8* %77 to i32*, !dbg !4876
  %113 = load i32, i32* %112, align 4, !dbg !4876
  %114 = sext i32 %113 to i64, !dbg !4877
  store i64 %114, i64* %20, align 8, !dbg !4878
  br label %115, !dbg !4879

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4880
  call void @llvm.dbg.value(metadata i8* %117, metadata !4681, metadata !DIExpression()), !dbg !4809
  %118 = trunc i24 %79 to i4, !dbg !4881
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4881

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4882
  %121 = ashr exact i64 %120, 56, !dbg !4882
  store i64 %121, i64* %20, align 8, !dbg !4885
  br label %177, !dbg !4886

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4887
  %124 = ashr exact i64 %123, 48, !dbg !4887
  store i64 %124, i64* %20, align 8, !dbg !4890
  br label %177, !dbg !4891

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4892

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4895
  call void @llvm.dbg.value(metadata i8* %127, metadata !4681, metadata !DIExpression()), !dbg !4809
  %128 = bitcast i8* %77 to i32*, !dbg !4895
  %129 = load i32, i32* %128, align 4, !dbg !4895
  %130 = zext i32 %129 to i64, !dbg !4895
  store i64 %130, i64* %20, align 8, !dbg !4897
  br label %157, !dbg !4898

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4899
  call void @llvm.dbg.value(metadata i8* %132, metadata !4681, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.value(metadata i8* %132, metadata !4681, metadata !DIExpression()), !dbg !4809
  %133 = bitcast i8* %77 to i32*, !dbg !4899
  %134 = load i32, i32* %133, align 4, !dbg !4899
  %135 = zext i32 %134 to i64, !dbg !4899
  store i64 %135, i64* %20, align 8, !dbg !4899
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4901
  %138 = add i32 %137, 7, !dbg !4901
  %139 = and i32 %138, -8, !dbg !4901
  %140 = inttoptr i32 %139 to i8*, !dbg !4901
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4901
  call void @llvm.dbg.value(metadata i8* %141, metadata !4681, metadata !DIExpression()), !dbg !4809
  %142 = inttoptr i32 %139 to i64*, !dbg !4901
  %143 = load i64, i64* %142, align 8, !dbg !4901
  store i64 %143, i64* %20, align 8, !dbg !4902
  br label %157, !dbg !4903

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4904
  %146 = add i32 %145, 7, !dbg !4904
  %147 = and i32 %146, -8, !dbg !4904
  %148 = inttoptr i32 %147 to i8*, !dbg !4904
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4904
  call void @llvm.dbg.value(metadata i8* %149, metadata !4681, metadata !DIExpression()), !dbg !4809
  %150 = inttoptr i32 %147 to i64*, !dbg !4904
  %151 = load i64, i64* %150, align 8, !dbg !4904
  store i64 %151, i64* %20, align 8, !dbg !4905
  br label %157, !dbg !4906

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4907
  call void @llvm.dbg.value(metadata i8* %153, metadata !4681, metadata !DIExpression()), !dbg !4809
  %154 = bitcast i8* %77 to i32*, !dbg !4907
  %155 = load i32, i32* %154, align 4, !dbg !4907
  %156 = zext i32 %155 to i64, !dbg !4908
  store i64 %156, i64* %20, align 8, !dbg !4909
  br label %157, !dbg !4910

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4911
  call void @llvm.dbg.value(metadata i8* %159, metadata !4681, metadata !DIExpression()), !dbg !4809
  %160 = trunc i24 %79 to i4, !dbg !4912
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4912

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4913
  store i64 %162, i64* %20, align 8, !dbg !4916
  br label %177, !dbg !4917

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4918
  store i64 %164, i64* %20, align 8, !dbg !4921
  br label %177, !dbg !4922

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4923
  %167 = add i32 %166, 7, !dbg !4923
  %168 = and i32 %167, -8, !dbg !4923
  %169 = inttoptr i32 %168 to i8*, !dbg !4923
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4923
  call void @llvm.dbg.value(metadata i8* %170, metadata !4681, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.value(metadata i8* %170, metadata !4681, metadata !DIExpression()), !dbg !4809
  %171 = inttoptr i32 %168 to double*, !dbg !4923
  %172 = load double, double* %171, align 8, !dbg !4923
  store double %172, double* %19, align 8, !dbg !4923
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4927
  call void @llvm.dbg.value(metadata i8* %174, metadata !4681, metadata !DIExpression()), !dbg !4809
  %175 = bitcast i8* %77 to i8**, !dbg !4927
  %176 = load i8*, i8** %175, align 4, !dbg !4927
  store i8* %176, i8** %18, align 8, !dbg !4930
  br label %177, !dbg !4931

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4823
  call void @llvm.dbg.value(metadata i8* %178, metadata !4681, metadata !DIExpression()), !dbg !4809
  %179 = and i24 %75, 3, !dbg !4932
  %180 = icmp eq i24 %179, 0, !dbg !4932
  br i1 %180, label %185, label %181, !dbg !4932

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4933
  call void @llvm.dbg.value(metadata i32 %182, metadata !4758, metadata !DIExpression()), !dbg !4934
  %183 = icmp slt i32 %182, 0, !dbg !4935
  %184 = add i32 %182, %29, !dbg !4933
  call void @llvm.dbg.value(metadata i32 undef, metadata !4687, metadata !DIExpression()), !dbg !4809
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4937
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4938

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #26, !dbg !4939
  call void @llvm.dbg.value(metadata i32 %188, metadata !4762, metadata !DIExpression()), !dbg !4940
  %189 = icmp slt i32 %188, 0, !dbg !4941
  %190 = add i32 %29, 1, !dbg !4939
  call void @llvm.dbg.value(metadata i32 undef, metadata !4687, metadata !DIExpression()), !dbg !4809
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4943
  call void @llvm.dbg.value(metadata i8* %192, metadata !4750, metadata !DIExpression()), !dbg !4823
  %193 = icmp sgt i32 %76, -1, !dbg !4944
  br i1 %193, label %194, label %196, !dbg !4946

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #26, !dbg !4947
  call void @llvm.dbg.value(metadata i32 %195, metadata !4765, metadata !DIExpression()), !dbg !4949
  br label %241, !dbg !4950

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #26, !dbg !4951
  call void @llvm.dbg.value(metadata i32 %197, metadata !4765, metadata !DIExpression()), !dbg !4949
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4750, metadata !DIExpression()), !dbg !4823
  %199 = load i64, i64* %20, align 8, !dbg !4953
  %200 = trunc i64 %199 to i8, !dbg !4954
  store i8 %200, i8* %10, align 1, !dbg !4955
  call void @llvm.dbg.value(metadata i8* %23, metadata !4751, metadata !DIExpression()), !dbg !4823
  br label %245, !dbg !4956

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4957
  %203 = icmp eq i24 %202, 0, !dbg !4957
  %204 = trunc i24 %75 to i8, !dbg !4959
  %205 = shl i8 %204, 1, !dbg !4959
  %206 = and i8 %205, 32, !dbg !4959
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4959
  call void @llvm.dbg.value(metadata i8 %207, metadata !4752, metadata !DIExpression()), !dbg !4823
  %208 = load i64, i64* %20, align 8, !dbg !4960
  call void @llvm.dbg.value(metadata i64 %208, metadata !4688, metadata !DIExpression()), !dbg !4809
  %209 = icmp slt i64 %208, 0, !dbg !4961
  br i1 %209, label %210, label %212, !dbg !4963

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4752, metadata !DIExpression()), !dbg !4823
  %211 = sub nsw i64 0, %208, !dbg !4964
  store i64 %211, i64* %20, align 8, !dbg !4966
  br label %212, !dbg !4967

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4823
  call void @llvm.dbg.value(metadata i8 %213, metadata !4752, metadata !DIExpression()), !dbg !4823
  %214 = load i64, i64* %20, align 8, !dbg !4968
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4969
  call void @llvm.dbg.value(metadata i8* %215, metadata !4750, metadata !DIExpression()), !dbg !4823
  br label %216, !dbg !4970

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4971
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4972
  call void @llvm.dbg.value(metadata i8* %218, metadata !4750, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i8 %217, metadata !4752, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.label(metadata !4808), !dbg !4973
  %219 = icmp sgt i32 %76, -1, !dbg !4974
  br i1 %219, label %222, label %220, !dbg !4975

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4976
  br label %245, !dbg !4975

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4978
  %224 = sub i32 %22, %223, !dbg !4978
  call void @llvm.dbg.value(metadata i32 %224, metadata !4767, metadata !DIExpression()), !dbg !4979
  %225 = load i24, i24* %15, align 8, !dbg !4980
  %226 = and i24 %225, -65, !dbg !4980
  store i24 %226, i24* %15, align 8, !dbg !4980
  %227 = icmp ugt i32 %76, %224, !dbg !4981
  br i1 %227, label %228, label %245, !dbg !4983

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4984
  store i32 %229, i32* %16, align 4, !dbg !4986
  br label %245, !dbg !4987

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4988
  %232 = icmp eq i8* %231, null, !dbg !4990
  br i1 %232, label %245, label %233, !dbg !4991

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4992
  %235 = zext i32 %234 to i64, !dbg !4992
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4994
  call void @llvm.dbg.value(metadata i8* %236, metadata !4750, metadata !DIExpression()), !dbg !4823
  %237 = load i24, i24* %15, align 8, !dbg !4995
  %238 = or i24 %237, 1048576, !dbg !4995
  store i24 %238, i24* %15, align 8, !dbg !4995
  store i8 120, i8* %21, align 1, !dbg !4996
  br label %216, !dbg !4997

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4998
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !5001
  br label %363, !dbg !5002

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5003
  call void @llvm.dbg.value(metadata i32 %242, metadata !4765, metadata !DIExpression()), !dbg !4949
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5004
  call void @llvm.dbg.value(metadata i32 -1, metadata !4749, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i32 %29, metadata !4687, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.value(metadata i8* %192, metadata !4750, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i8* %243, metadata !4751, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i8 0, metadata !4752, metadata !DIExpression()), !dbg !4823
  %244 = icmp eq i8* %192, null, !dbg !5005
  br i1 %244, label %363, label %245, !dbg !5007, !llvm.loop !4819

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4976
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4770, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4823
  call void @llvm.dbg.value(metadata i32 0, metadata !4771, metadata !DIExpression()), !dbg !4823
  %250 = zext i8 %249 to i32, !dbg !5008
  %251 = icmp eq i8 %249, 0, !dbg !5010
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4770, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4823
  call void @llvm.dbg.value(metadata i32 undef, metadata !4770, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4770, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4823
  call void @llvm.dbg.value(metadata i32 undef, metadata !4770, metadata !DIExpression()), !dbg !4823
  %252 = icmp sgt i32 %58, 0, !dbg !5011
  br i1 %252, label %253, label %302, !dbg !5012

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4976
  %255 = icmp eq i24 %254, 0, !dbg !4976
  %256 = ptrtoint i8* %248 to i32, !dbg !5013
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4770, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4823
  %257 = ptrtoint i8* %247 to i32, !dbg !5013
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4770, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4823
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4770, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4823
  %258 = xor i1 %251, true, !dbg !5014
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4770, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4823
  %259 = sext i1 %258 to i32, !dbg !5014
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4770, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4823
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4770, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4823
  %260 = lshr i24 %246, 19, !dbg !5015
  %261 = and i24 %260, 1, !dbg !5015
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5015
  %263 = zext i24 %262 to i32, !dbg !5015
  %264 = add i32 %257, %259, !dbg !5015
  %265 = add i32 %256, %263, !dbg !5015
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4770, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4823
  %266 = and i24 %246, 4194304, !dbg !5016
  %267 = icmp eq i24 %266, 0, !dbg !5016
  %268 = load i32, i32* %16, align 4, !dbg !5018
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4770, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4823
  call void @llvm.dbg.value(metadata i32 undef, metadata !4770, metadata !DIExpression()), !dbg !4823
  %269 = load i32, i32* %17, align 8, !dbg !5019
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5019
  call void @llvm.dbg.value(metadata i32 undef, metadata !4770, metadata !DIExpression()), !dbg !4823
  %271 = add i32 %264, %58, !dbg !5019
  %272 = add i32 %265, %268, !dbg !5019
  %273 = add i32 %272, %270, !dbg !5020
  %274 = sub i32 %271, %273, !dbg !5020
  call void @llvm.dbg.value(metadata i32 %274, metadata !4748, metadata !DIExpression()), !dbg !4823
  %275 = and i24 %246, 4, !dbg !5021
  %276 = icmp eq i24 %275, 0, !dbg !5021
  br i1 %276, label %277, label %302, !dbg !5022

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4772, metadata !DIExpression()), !dbg !5023
  %278 = and i24 %246, 64, !dbg !5024
  %279 = icmp eq i24 %278, 0, !dbg !5024
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5025
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5025
  %282 = select i1 %279, i32 32, i32 48, !dbg !5025
  br i1 %280, label %287, label %283, !dbg !5025

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #26, !dbg !5026
  call void @llvm.dbg.value(metadata i32 %284, metadata !4777, metadata !DIExpression()), !dbg !5027
  %285 = icmp slt i32 %284, 0, !dbg !5028
  %286 = add i32 %29, 1, !dbg !5026
  call void @llvm.dbg.value(metadata i32 undef, metadata !4687, metadata !DIExpression()), !dbg !4809
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4823
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4813
  call void @llvm.dbg.value(metadata i32 %290, metadata !4687, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.value(metadata i8 undef, metadata !4772, metadata !DIExpression()), !dbg !5023
  call void @llvm.dbg.value(metadata i8 %288, metadata !4752, metadata !DIExpression()), !dbg !4823
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5030
  %292 = add i32 %291, -1, !dbg !5030
  br label %293, !dbg !5030

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5031
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4813
  call void @llvm.dbg.value(metadata i32 %295, metadata !4687, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.value(metadata i32 %294, metadata !4748, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i32 %294, metadata !4748, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4823
  %296 = icmp sgt i32 %294, 0, !dbg !5032
  br i1 %296, label %297, label %302, !dbg !5030

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5033
  call void @llvm.dbg.value(metadata i32 %298, metadata !4748, metadata !DIExpression()), !dbg !4823
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #26, !dbg !5034
  call void @llvm.dbg.value(metadata i32 %299, metadata !4783, metadata !DIExpression()), !dbg !5035
  %300 = icmp slt i32 %299, 0, !dbg !5036
  %301 = add i32 %295, 1, !dbg !5034
  call void @llvm.dbg.value(metadata i32 undef, metadata !4687, metadata !DIExpression()), !dbg !4809
  br i1 %300, label %361, label %293, !llvm.loop !5038

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4823
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4823
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4813
  call void @llvm.dbg.value(metadata i32 %305, metadata !4687, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.value(metadata i32 %304, metadata !4748, metadata !DIExpression()), !dbg !4823
  call void @llvm.dbg.value(metadata i8 %303, metadata !4752, metadata !DIExpression()), !dbg !4823
  %306 = icmp eq i8 %303, 0, !dbg !5040
  br i1 %306, label %312, label %307, !dbg !5041

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5042
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #26, !dbg !5043
  call void @llvm.dbg.value(metadata i32 %309, metadata !4786, metadata !DIExpression()), !dbg !5044
  %310 = icmp slt i32 %309, 0, !dbg !5045
  %311 = add i32 %305, 1, !dbg !5043
  call void @llvm.dbg.value(metadata i32 undef, metadata !4687, metadata !DIExpression()), !dbg !4809
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4813
  call void @llvm.dbg.value(metadata i32 %313, metadata !4687, metadata !DIExpression()), !dbg !4809
  %314 = lshr i24 %246, 20, !dbg !5047
  %315 = lshr i24 %246, 19, !dbg !5048
  %316 = or i24 %314, %315, !dbg !5049
  %317 = and i24 %316, 1, !dbg !5049
  %318 = icmp eq i24 %317, 0, !dbg !5049
  br i1 %318, label %323, label %319, !dbg !5050

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !5051
  call void @llvm.dbg.value(metadata i32 %320, metadata !4790, metadata !DIExpression()), !dbg !5052
  %321 = icmp slt i32 %320, 0, !dbg !5053
  %322 = add i32 %313, 1, !dbg !5051
  call void @llvm.dbg.value(metadata i32 undef, metadata !4687, metadata !DIExpression()), !dbg !4809
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4813
  call void @llvm.dbg.value(metadata i32 %324, metadata !4687, metadata !DIExpression()), !dbg !4809
  %325 = and i24 %246, 1048576, !dbg !5055
  %326 = icmp eq i24 %325, 0, !dbg !5055
  br i1 %326, label %333, label %327, !dbg !5056

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5057
  %329 = zext i8 %328 to i32, !dbg !5057
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #26, !dbg !5057
  call void @llvm.dbg.value(metadata i32 %330, metadata !4796, metadata !DIExpression()), !dbg !5058
  %331 = icmp slt i32 %330, 0, !dbg !5059
  %332 = add i32 %324, 1, !dbg !5057
  call void @llvm.dbg.value(metadata i32 undef, metadata !4687, metadata !DIExpression()), !dbg !4809
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4813
  call void @llvm.dbg.value(metadata i32 %334, metadata !4687, metadata !DIExpression()), !dbg !4809
  %335 = load i32, i32* %16, align 4, !dbg !5061
  call void @llvm.dbg.value(metadata i32 %335, metadata !4771, metadata !DIExpression()), !dbg !4823
  br label %336, !dbg !5062

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5063
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4813
  call void @llvm.dbg.value(metadata i32 %338, metadata !4687, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.value(metadata i32 %337, metadata !4771, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4823
  %339 = icmp sgt i32 %337, 0, !dbg !5064
  br i1 %339, label %340, label %345, !dbg !5062

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5065
  call void @llvm.dbg.value(metadata i32 %341, metadata !4771, metadata !DIExpression()), !dbg !4823
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #26, !dbg !5066
  call void @llvm.dbg.value(metadata i32 %342, metadata !4800, metadata !DIExpression()), !dbg !5067
  %343 = icmp slt i32 %342, 0, !dbg !5068
  %344 = add i32 %338, 1, !dbg !5066
  call void @llvm.dbg.value(metadata i32 undef, metadata !4687, metadata !DIExpression()), !dbg !4809
  br i1 %343, label %361, label %336, !llvm.loop !5070

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !5072
  call void @llvm.dbg.value(metadata i32 %346, metadata !4803, metadata !DIExpression()), !dbg !5073
  %347 = icmp slt i32 %346, 0, !dbg !5074
  call void @llvm.dbg.value(metadata i32 undef, metadata !4687, metadata !DIExpression()), !dbg !4809
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5072
  call void @llvm.dbg.value(metadata i32 %349, metadata !4687, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.value(metadata i32 %304, metadata !4748, metadata !DIExpression()), !dbg !4823
  %350 = icmp sgt i32 %304, 0, !dbg !5076
  br i1 %350, label %351, label %363, !dbg !5077

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5077
  %353 = add i32 %352, %338, !dbg !5077
  br label %354, !dbg !5077

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4687, metadata !DIExpression()), !dbg !4809
  call void @llvm.dbg.value(metadata i32 %355, metadata !4748, metadata !DIExpression()), !dbg !4823
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #26, !dbg !5078
  call void @llvm.dbg.value(metadata i32 %356, metadata !4805, metadata !DIExpression()), !dbg !5079
  %357 = icmp slt i32 %356, 0, !dbg !5080
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5082
  call void @llvm.dbg.value(metadata i32 undef, metadata !4687, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4809
  call void @llvm.dbg.value(metadata i32 %359, metadata !4748, metadata !DIExpression()), !dbg !4823
  %360 = icmp sgt i32 %355, 1, !dbg !5076
  br i1 %360, label %354, label %363, !dbg !5077, !llvm.loop !5083

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4687, metadata !DIExpression()), !dbg !4809
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4820
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4813
  call void @llvm.dbg.value(metadata i32 %364, metadata !4687, metadata !DIExpression()), !dbg !4809
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4820
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4809
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5085
  ret i32 %366, !dbg !5085
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #12 !dbg !5086 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5090, metadata !DIExpression()), !dbg !5092
  call void @llvm.dbg.value(metadata i8* %1, metadata !5091, metadata !DIExpression()), !dbg !5092
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5093
  store i24 0, i24* %3, align 4, !dbg !5093
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5093
  store i8 0, i8* %4, align 1, !dbg !5093
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5093
  store i32 0, i32* %5, align 4, !dbg !5093
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5093
  store i32 0, i32* %6, align 4, !dbg !5093
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5094
  call void @llvm.dbg.value(metadata i8* %7, metadata !5091, metadata !DIExpression()), !dbg !5092
  %8 = load i8, i8* %7, align 1, !dbg !5095
  %9 = icmp eq i8 %8, 37, !dbg !5097
  br i1 %9, label %10, label %12, !dbg !5098

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5099
  call void @llvm.dbg.value(metadata i8* %11, metadata !5091, metadata !DIExpression()), !dbg !5092
  store i8 37, i8* %4, align 1, !dbg !5101
  br label %18, !dbg !5102

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5103
  call void @llvm.dbg.value(metadata i8* %13, metadata !5091, metadata !DIExpression()), !dbg !5092
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5104
  call void @llvm.dbg.value(metadata i8* %14, metadata !5091, metadata !DIExpression()), !dbg !5092
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5105
  call void @llvm.dbg.value(metadata i8* %15, metadata !5091, metadata !DIExpression()), !dbg !5092
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5106
  call void @llvm.dbg.value(metadata i8* %16, metadata !5091, metadata !DIExpression()), !dbg !5092
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5107
  call void @llvm.dbg.value(metadata i8* %17, metadata !5091, metadata !DIExpression()), !dbg !5092
  br label %18, !dbg !5108

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5092
  ret i8* %19, !dbg !5109
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5110 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5114, metadata !DIExpression()), !dbg !5121
  call void @llvm.dbg.value(metadata i8* %1, metadata !5115, metadata !DIExpression()), !dbg !5121
  call void @llvm.dbg.value(metadata i8* %2, metadata !5116, metadata !DIExpression()), !dbg !5121
  call void @llvm.dbg.value(metadata i8* %3, metadata !5117, metadata !DIExpression()), !dbg !5121
  call void @llvm.dbg.value(metadata i32 0, metadata !5118, metadata !DIExpression()), !dbg !5121
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5122

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5123
  call void @llvm.dbg.value(metadata i32 %9, metadata !5118, metadata !DIExpression()), !dbg !5121
  call void @llvm.dbg.value(metadata i8* %8, metadata !5116, metadata !DIExpression()), !dbg !5121
  %10 = icmp ult i8* %8, %3, !dbg !5124
  br i1 %10, label %11, label %13, !dbg !5125

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5126
  br label %17, !dbg !5125

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5127

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5128
  %16 = icmp eq i8 %15, 0, !dbg !5127
  br i1 %16, label %24, label %17, !dbg !5122

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5126
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5129
  call void @llvm.dbg.value(metadata i8* %19, metadata !5116, metadata !DIExpression()), !dbg !5121
  %20 = zext i8 %18 to i32, !dbg !5130
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #26, !dbg !5131
  call void @llvm.dbg.value(metadata i32 %21, metadata !5119, metadata !DIExpression()), !dbg !5132
  %22 = icmp slt i32 %21, 0, !dbg !5133
  %23 = add i32 %9, 1, !dbg !5135
  call void @llvm.dbg.value(metadata i32 undef, metadata !5118, metadata !DIExpression()), !dbg !5121
  br i1 %22, label %24, label %7, !llvm.loop !5136

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5121
  ret i32 %25, !dbg !5138
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #12 !dbg !5139 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5143, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5144, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.value(metadata i8* %2, metadata !5145, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.value(metadata i8* %3, metadata !5146, metadata !DIExpression()), !dbg !5153
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5154
  %6 = load i8, i8* %5, align 1, !dbg !5154
  %7 = zext i8 %6 to i32, !dbg !5155
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5156
  %9 = icmp eq i32 %8, 0, !dbg !5156
  call void @llvm.dbg.value(metadata i1 %9, metadata !5147, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5153
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5157
  call void @llvm.dbg.value(metadata i32 %10, metadata !5148, metadata !DIExpression()), !dbg !5153
  %11 = ptrtoint i8* %3 to i32, !dbg !5158
  %12 = ptrtoint i8* %2 to i32, !dbg !5158
  %13 = sub i32 %11, %12, !dbg !5158
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5159
  call void @llvm.dbg.value(metadata i8* %14, metadata !5150, metadata !DIExpression()), !dbg !5153
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5160

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5153
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5143, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.value(metadata i8* %18, metadata !5150, metadata !DIExpression()), !dbg !5153
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5161
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5162
  call void @llvm.dbg.value(metadata i32 %25, metadata !5151, metadata !DIExpression()), !dbg !5163
  %26 = icmp ult i32 %25, 10, !dbg !5164
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5165
  %28 = add i32 %27, %25, !dbg !5163
  %29 = trunc i32 %28 to i8, !dbg !5165
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5166
  call void @llvm.dbg.value(metadata i8* %30, metadata !5150, metadata !DIExpression()), !dbg !5153
  store i8 %29, i8* %30, align 1, !dbg !5167
  call void @llvm.dbg.value(metadata i64 %22, metadata !5143, metadata !DIExpression()), !dbg !5153
  %31 = icmp uge i64 %19, %15, !dbg !5168
  %32 = icmp ugt i8* %30, %2, !dbg !5169
  %33 = and i1 %31, %32, !dbg !5169
  br i1 %33, label %17, label %34, !dbg !5170, !llvm.loop !5171

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5173
  %36 = load i24, i24* %35, align 4, !dbg !5173
  %37 = and i24 %36, 32, !dbg !5173
  %38 = icmp eq i24 %37, 0, !dbg !5173
  br i1 %38, label %44, label %39, !dbg !5175

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5176

40:                                               ; preds = %39
  br label %41, !dbg !5178

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5182
  store i24 %43, i24* %35, align 4, !dbg !5182
  br label %44, !dbg !5183

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5183
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #10 !dbg !5184 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5190, metadata !DIExpression()), !dbg !5193
  call void @llvm.dbg.value(metadata i8* %1, metadata !5191, metadata !DIExpression()), !dbg !5193
  call void @llvm.dbg.value(metadata i32 %2, metadata !5192, metadata !DIExpression()), !dbg !5193
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5194
  %5 = load i24, i24* %4, align 4, !dbg !5194
  %6 = lshr i24 %5, 11, !dbg !5194
  %7 = and i24 %6, 15, !dbg !5194
  %8 = zext i24 %7 to i32, !dbg !5194
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5195

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5196
  store i32 %2, i32* %10, align 4, !dbg !5198
  br label %28, !dbg !5199

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5200
  store i8 %12, i8* %1, align 1, !dbg !5201
  br label %28, !dbg !5202

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5203
  %15 = bitcast i8* %1 to i16*, !dbg !5204
  store i16 %14, i16* %15, align 2, !dbg !5205
  br label %28, !dbg !5206

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5207
  store i32 %2, i32* %17, align 4, !dbg !5208
  br label %28, !dbg !5209

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5210
  %20 = bitcast i8* %1 to i64*, !dbg !5211
  store i64 %19, i64* %20, align 8, !dbg !5212
  br label %28, !dbg !5213

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5214
  %23 = bitcast i8* %1 to i64*, !dbg !5215
  store i64 %22, i64* %23, align 8, !dbg !5216
  br label %28, !dbg !5217

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5218
  store i32 %2, i32* %25, align 4, !dbg !5219
  br label %28, !dbg !5220

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5221
  store i32 %2, i32* %27, align 4, !dbg !5222
  br label %28, !dbg !5223

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5224
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #4 !dbg !5225 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5228, metadata !DIExpression()), !dbg !5229
  %2 = add i32 %0, -65, !dbg !5230
  %3 = icmp ult i32 %2, 26, !dbg !5231
  %4 = zext i1 %3 to i32, !dbg !5231
  ret i32 %4, !dbg !5232
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #4 !dbg !5233 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5237, metadata !DIExpression()), !dbg !5238
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5239

2:                                                ; preds = %1
  br label %4, !dbg !5240

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5242

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5243
  ret i32 %5, !dbg !5244
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #12 !dbg !5245 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5247, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata i8* %1, metadata !5248, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata i8 1, metadata !5249, metadata !DIExpression()), !dbg !5250
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5251

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5249, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata i8* %5, metadata !5248, metadata !DIExpression()), !dbg !5250
  %6 = load i8, i8* %5, align 1, !dbg !5252
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5254

7:                                                ; preds = %4
  br label %11, !dbg !5255

8:                                                ; preds = %4
  br label %11, !dbg !5257

9:                                                ; preds = %4
  br label %11, !dbg !5258

10:                                               ; preds = %4
  br label %11, !dbg !5259

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5260
  %14 = or i24 %13, %12, !dbg !5260
  store i24 %14, i24* %3, align 4, !dbg !5260
  call void @llvm.dbg.value(metadata i8 poison, metadata !5249, metadata !DIExpression()), !dbg !5250
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5248, metadata !DIExpression()), !dbg !5250
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5249, metadata !DIExpression()), !dbg !5250
  call void @llvm.dbg.value(metadata i8* %15, metadata !5248, metadata !DIExpression()), !dbg !5250
  %17 = load i24, i24* %3, align 4, !dbg !5261
  %18 = and i24 %17, 68, !dbg !5263
  %19 = icmp eq i24 %18, 68, !dbg !5263
  br i1 %19, label %20, label %22, !dbg !5263

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5264
  store i24 %21, i24* %3, align 4, !dbg !5264
  br label %22, !dbg !5266

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5267
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #12 !dbg !5268 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5270, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i8* %1, metadata !5271, metadata !DIExpression()), !dbg !5274
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5275
  %5 = load i24, i24* %4, align 4, !dbg !5276
  %6 = or i24 %5, 128, !dbg !5276
  store i24 %6, i24* %4, align 4, !dbg !5276
  call void @llvm.dbg.value(metadata i8* %1, metadata !5271, metadata !DIExpression()), !dbg !5274
  %7 = load i8, i8* %1, align 1, !dbg !5277
  %8 = icmp eq i8 %7, 42, !dbg !5279
  br i1 %8, label %9, label %12, !dbg !5280

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5281
  store i24 %10, i24* %4, align 4, !dbg !5281
  call void @llvm.dbg.value(metadata i8* %1, metadata !5271, metadata !DIExpression()), !dbg !5274
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5283
  call void @llvm.dbg.value(metadata i8* %11, metadata !5271, metadata !DIExpression()), !dbg !5274
  store i8* %11, i8** %3, align 4, !dbg !5283
  br label %29, !dbg !5284

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5272, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i8** %3, metadata !5271, metadata !DIExpression(DW_OP_deref)), !dbg !5274
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5285
  call void @llvm.dbg.value(metadata i32 %13, metadata !5273, metadata !DIExpression()), !dbg !5274
  %14 = load i8*, i8** %3, align 4, !dbg !5286
  call void @llvm.dbg.value(metadata i8* %14, metadata !5271, metadata !DIExpression()), !dbg !5274
  %15 = icmp eq i8* %14, %1, !dbg !5288
  br i1 %15, label %29, label %16, !dbg !5289

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5290
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5292
  store i32 %13, i32* %18, align 4, !dbg !5293
  %19 = lshr i32 %13, 31, !dbg !5294
  %20 = lshr i24 %17, 1, !dbg !5295
  %21 = and i24 %20, 1, !dbg !5295
  %22 = zext i24 %21 to i32, !dbg !5295
  %23 = or i32 %19, %22, !dbg !5295
  %24 = trunc i32 %23 to i24, !dbg !5295
  %25 = shl nuw nsw i24 %24, 1, !dbg !5295
  %26 = and i24 %17, -131, !dbg !5295
  %27 = or i24 %26, 128, !dbg !5295
  %28 = or i24 %25, %27, !dbg !5295
  store i24 %28, i24* %4, align 4, !dbg !5295
  br label %29, !dbg !5296

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5274
  ret i8* %30, !dbg !5297
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #12 !dbg !5298 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5300, metadata !DIExpression()), !dbg !5303
  call void @llvm.dbg.value(metadata i8* %1, metadata !5301, metadata !DIExpression()), !dbg !5303
  %4 = load i8, i8* %1, align 1, !dbg !5304
  %5 = icmp eq i8 %4, 46, !dbg !5305
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5306
  %7 = load i24, i24* %6, align 4, !dbg !5307
  %8 = select i1 %5, i24 512, i24 0, !dbg !5307
  %9 = and i24 %7, -513, !dbg !5307
  %10 = or i24 %9, %8, !dbg !5307
  store i24 %10, i24* %6, align 4, !dbg !5307
  br i1 %5, label %11, label %32, !dbg !5308

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5301, metadata !DIExpression()), !dbg !5303
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5309
  call void @llvm.dbg.value(metadata i8* %12, metadata !5301, metadata !DIExpression()), !dbg !5303
  store i8* %12, i8** %3, align 4, !dbg !5309
  %13 = load i8, i8* %12, align 1, !dbg !5310
  %14 = icmp eq i8 %13, 42, !dbg !5312
  br i1 %14, label %15, label %18, !dbg !5313

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5314
  store i24 %16, i24* %6, align 4, !dbg !5314
  call void @llvm.dbg.value(metadata i8* %12, metadata !5301, metadata !DIExpression()), !dbg !5303
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5316
  call void @llvm.dbg.value(metadata i8* %17, metadata !5301, metadata !DIExpression()), !dbg !5303
  store i8* %17, i8** %3, align 4, !dbg !5316
  br label %32, !dbg !5317

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5301, metadata !DIExpression(DW_OP_deref)), !dbg !5303
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5318
  call void @llvm.dbg.value(metadata i32 %19, metadata !5302, metadata !DIExpression()), !dbg !5303
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5319
  store i32 %19, i32* %20, align 4, !dbg !5320
  %21 = lshr i32 %19, 31, !dbg !5321
  %22 = load i24, i24* %6, align 4, !dbg !5322
  %23 = lshr i24 %22, 1, !dbg !5322
  %24 = and i24 %23, 1, !dbg !5322
  %25 = zext i24 %24 to i32, !dbg !5322
  %26 = or i32 %21, %25, !dbg !5322
  %27 = trunc i32 %26 to i24, !dbg !5322
  %28 = shl nuw nsw i24 %27, 1, !dbg !5322
  %29 = and i24 %22, -3, !dbg !5322
  %30 = or i24 %28, %29, !dbg !5322
  store i24 %30, i24* %6, align 4, !dbg !5322
  %31 = load i8*, i8** %3, align 4, !dbg !5323
  call void @llvm.dbg.value(metadata i8* %31, metadata !5301, metadata !DIExpression()), !dbg !5303
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5303
  ret i8* %33, !dbg !5324
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #10 !dbg !5325 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5327, metadata !DIExpression()), !dbg !5329
  call void @llvm.dbg.value(metadata i8* %1, metadata !5328, metadata !DIExpression()), !dbg !5329
  %3 = load i8, i8* %1, align 1, !dbg !5330
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5331

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5332
  call void @llvm.dbg.value(metadata i8* %5, metadata !5328, metadata !DIExpression()), !dbg !5329
  %6 = load i8, i8* %5, align 1, !dbg !5335
  %7 = icmp eq i8 %6, 104, !dbg !5336
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5337
  %9 = load i24, i24* %8, align 4, !dbg !5337
  %10 = and i24 %9, -30721, !dbg !5337
  br i1 %7, label %11, label %14, !dbg !5338

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5339
  store i24 %12, i24* %8, align 4, !dbg !5339
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5341
  call void @llvm.dbg.value(metadata i8* %13, metadata !5328, metadata !DIExpression()), !dbg !5329
  br label %56, !dbg !5342

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5343
  store i24 %15, i24* %8, align 4, !dbg !5343
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5345
  call void @llvm.dbg.value(metadata i8* %17, metadata !5328, metadata !DIExpression()), !dbg !5329
  %18 = load i8, i8* %17, align 1, !dbg !5347
  %19 = icmp eq i8 %18, 108, !dbg !5348
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5349
  %21 = load i24, i24* %20, align 4, !dbg !5349
  %22 = and i24 %21, -30721, !dbg !5349
  br i1 %19, label %23, label %26, !dbg !5350

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5351
  store i24 %24, i24* %20, align 4, !dbg !5351
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5353
  call void @llvm.dbg.value(metadata i8* %25, metadata !5328, metadata !DIExpression()), !dbg !5329
  br label %56, !dbg !5354

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5355
  store i24 %27, i24* %20, align 4, !dbg !5355
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5357
  %30 = load i24, i24* %29, align 4, !dbg !5358
  %31 = and i24 %30, -30721, !dbg !5358
  %32 = or i24 %31, 10240, !dbg !5358
  store i24 %32, i24* %29, align 4, !dbg !5358
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5359
  call void @llvm.dbg.value(metadata i8* %33, metadata !5328, metadata !DIExpression()), !dbg !5329
  br label %56, !dbg !5360

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5361
  %36 = load i24, i24* %35, align 4, !dbg !5362
  %37 = and i24 %36, -30721, !dbg !5362
  %38 = or i24 %37, 12288, !dbg !5362
  store i24 %38, i24* %35, align 4, !dbg !5362
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5363
  call void @llvm.dbg.value(metadata i8* %39, metadata !5328, metadata !DIExpression()), !dbg !5329
  br label %56, !dbg !5364

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5365
  %42 = load i24, i24* %41, align 4, !dbg !5366
  %43 = and i24 %42, -30721, !dbg !5366
  %44 = or i24 %43, 14336, !dbg !5366
  store i24 %44, i24* %41, align 4, !dbg !5366
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5367
  call void @llvm.dbg.value(metadata i8* %45, metadata !5328, metadata !DIExpression()), !dbg !5329
  br label %56, !dbg !5368

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5369
  %48 = load i24, i24* %47, align 4, !dbg !5370
  %49 = and i24 %48, -30723, !dbg !5370
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5371
  call void @llvm.dbg.value(metadata i8* %50, metadata !5328, metadata !DIExpression()), !dbg !5329
  %51 = or i24 %49, 16386, !dbg !5372
  store i24 %51, i24* %47, align 4, !dbg !5372
  br label %56, !dbg !5373

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5374
  %54 = load i24, i24* %53, align 4, !dbg !5375
  %55 = and i24 %54, -30721, !dbg !5375
  store i24 %55, i24* %53, align 4, !dbg !5375
  br label %56, !dbg !5376

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5328, metadata !DIExpression()), !dbg !5329
  ret i8* %57, !dbg !5377
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #10 !dbg !5378 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5380, metadata !DIExpression()), !dbg !5385
  call void @llvm.dbg.value(metadata i8* %1, metadata !5381, metadata !DIExpression()), !dbg !5385
  call void @llvm.dbg.value(metadata i8 0, metadata !5382, metadata !DIExpression()), !dbg !5385
  call void @llvm.dbg.value(metadata i8* %1, metadata !5381, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5385
  %3 = load i8, i8* %1, align 1, !dbg !5386
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5387
  store i8 %3, i8* %4, align 1, !dbg !5388
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5389

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5390

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5391
  %9 = load i24, i24* %8, align 4, !dbg !5391
  %10 = and i24 %9, -458753, !dbg !5391
  %11 = or i24 %10, %7, !dbg !5391
  call void @llvm.dbg.label(metadata !5383), !dbg !5392
  %12 = and i24 %9, 30720, !dbg !5393
  %13 = icmp eq i24 %12, 16384, !dbg !5393
  %14 = zext i1 %13 to i24, !dbg !5395
  %15 = or i24 %11, %14, !dbg !5395
  %16 = icmp eq i8 %3, 99, !dbg !5396
  br i1 %16, label %17, label %43, !dbg !5398

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5399
  %19 = icmp ne i24 %18, 0, !dbg !5399
  call void @llvm.dbg.value(metadata i1 %19, metadata !5382, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5385
  br label %43, !dbg !5401

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5402
  %22 = load i24, i24* %21, align 4, !dbg !5403
  %23 = and i24 %22, -458753, !dbg !5403
  %24 = or i24 %23, 262144, !dbg !5403
  call void @llvm.dbg.value(metadata i8 1, metadata !5382, metadata !DIExpression()), !dbg !5385
  br label %43, !dbg !5404

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5407
  %27 = load i24, i24* %26, align 4, !dbg !5408
  %28 = and i24 %27, -458753, !dbg !5408
  %29 = or i24 %28, 196608, !dbg !5408
  %30 = and i24 %27, 30720, !dbg !5409
  %31 = icmp eq i24 %30, 16384, !dbg !5409
  br label %43, !dbg !5411

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5412
  %34 = load i24, i24* %33, align 4, !dbg !5413
  %35 = and i24 %34, -458753, !dbg !5413
  %36 = or i24 %35, 196608, !dbg !5413
  %37 = and i24 %34, 30720, !dbg !5414
  %38 = icmp ne i24 %37, 0, !dbg !5414
  br label %43, !dbg !5416

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5417
  %41 = load i24, i24* %40, align 4, !dbg !5418
  %42 = or i24 %41, 1, !dbg !5418
  br label %43, !dbg !5419

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5420
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5421
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5422
  call void @llvm.dbg.value(metadata i8* %48, metadata !5381, metadata !DIExpression()), !dbg !5385
  call void @llvm.dbg.value(metadata i8 poison, metadata !5382, metadata !DIExpression()), !dbg !5385
  %49 = lshr i24 %44, 1, !dbg !5420
  %50 = and i24 %49, 1, !dbg !5420
  %51 = zext i24 %50 to i32, !dbg !5420
  %52 = or i32 %51, %47, !dbg !5420
  %53 = trunc i32 %52 to i24, !dbg !5420
  %54 = shl nuw nsw i24 %53, 1, !dbg !5420
  %55 = and i24 %44, -3, !dbg !5420
  %56 = or i24 %54, %55, !dbg !5420
  store i24 %56, i24* %46, align 4, !dbg !5420
  ret i8* %48, !dbg !5423
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #12 !dbg !5424 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5429, metadata !DIExpression()), !dbg !5432
  %2 = load i8*, i8** %0, align 4, !dbg !5433
  call void @llvm.dbg.value(metadata i8* %2, metadata !5430, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i32 0, metadata !5431, metadata !DIExpression()), !dbg !5432
  %3 = load i8, i8* %2, align 1, !dbg !5434
  %4 = zext i8 %3 to i32, !dbg !5435
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5436
  %6 = icmp eq i32 %5, 0, !dbg !5437
  br i1 %6, label %19, label %7, !dbg !5437

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5431, metadata !DIExpression()), !dbg !5432
  call void @llvm.dbg.value(metadata i8* %10, metadata !5430, metadata !DIExpression()), !dbg !5432
  %11 = mul i32 %9, 10, !dbg !5438
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5440
  call void @llvm.dbg.value(metadata i8* %12, metadata !5430, metadata !DIExpression()), !dbg !5432
  %13 = add i32 %11, -48, !dbg !5441
  %14 = add i32 %13, %8, !dbg !5442
  call void @llvm.dbg.value(metadata i32 %14, metadata !5431, metadata !DIExpression()), !dbg !5432
  %15 = load i8, i8* %12, align 1, !dbg !5434
  %16 = zext i8 %15 to i32, !dbg !5435
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5436
  %18 = icmp eq i32 %17, 0, !dbg !5437
  br i1 %18, label %19, label %7, !dbg !5437, !llvm.loop !5443

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5432
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5432
  store i8* %20, i8** %0, align 4, !dbg !5445
  ret i32 %21, !dbg !5446
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #4 !dbg !5447 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5449, metadata !DIExpression()), !dbg !5450
  %2 = add i32 %0, -48, !dbg !5451
  %3 = icmp ult i32 %2, 10, !dbg !5452
  %4 = zext i1 %3 to i32, !dbg !5452
  ret i32 %4, !dbg !5453
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5454 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5459, metadata !DIExpression()), !dbg !5461
  call void @llvm.dbg.value(metadata i32 %1, metadata !5460, metadata !DIExpression()), !dbg !5461
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5462, !srcloc !5464
  ret void, !dbg !5465
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5466 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5468, metadata !DIExpression()), !dbg !5476
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5477
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5477
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5469, metadata !DIExpression()), !dbg !5478
  call void @llvm.va_start(i8* nonnull %3), !dbg !5479
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5480
  %5 = load i32, i32* %4, align 4, !dbg !5480
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5480
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !5480
  call void @llvm.va_end(i8* nonnull %3), !dbg !5481
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5482
  ret void, !dbg !5482
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5483 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #23, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #23, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #23, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #23, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #23, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #23, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #23, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #23, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #23, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,29\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,40\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_SCALABLE\0A\09.equ\09CONFIG_SCHED_SCALABLE,1\0A\09.type\09CONFIG_SCHED_SCALABLE,%object", ""() #23, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MONITOR\0A\09.equ\09CONFIG_THREAD_MONITOR,1\0A\09.type\09CONFIG_THREAD_MONITOR,%object", ""() #23, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5901, !srcloc !5902
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5903, !srcloc !5904
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5905, !srcloc !5906
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5907, !srcloc !5908
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5909, !srcloc !5910
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5911, !srcloc !5912
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5913, !srcloc !5914
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5915, !srcloc !5916
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5917, !srcloc !5918
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5919, !srcloc !5920
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5921, !srcloc !5922
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5923, !srcloc !5924
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5925, !srcloc !5926
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5927, !srcloc !5928
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5929, !srcloc !5930
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5931, !srcloc !5932
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5933, !srcloc !5934
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5935, !srcloc !5936
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5937, !srcloc !5938
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5939, !srcloc !5940
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5941, !srcloc !5942
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5943, !srcloc !5944
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5945, !srcloc !5946
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5947, !srcloc !5948
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5949, !srcloc !5950
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5951, !srcloc !5952
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5953, !srcloc !5954
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5955, !srcloc !5956
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5957, !srcloc !5958
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5959, !srcloc !5960
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5961, !srcloc !5962
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5963, !srcloc !5964
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5965, !srcloc !5966
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5967, !srcloc !5968
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5969, !srcloc !5970
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5971, !srcloc !5972
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5973, !srcloc !5974
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5975, !srcloc !5976
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5977, !srcloc !5978
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5979, !srcloc !5980
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5981, !srcloc !5982
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5983, !srcloc !5984
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5985, !srcloc !5986
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5987, !srcloc !5988
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !5989, !srcloc !5990
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !5991, !srcloc !5992
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !5993, !srcloc !5994
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !5995, !srcloc !5996
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !5997, !srcloc !5998
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !5999, !srcloc !6000
  tail call void asm sideeffect ".globl\09CONFIG_DEBUG_THREAD_INFO\0A\09.equ\09CONFIG_DEBUG_THREAD_INFO,1\0A\09.type\09CONFIG_DEBUG_THREAD_INFO,%object", ""() #23, !dbg !6001, !srcloc !6002
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !6003, !srcloc !6004
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !6005, !srcloc !6006
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6007, !srcloc !6008
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !6009, !srcloc !6010
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6011, !srcloc !6012
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6013, !srcloc !6014
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6015, !srcloc !6016
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6017, !srcloc !6018
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6019, !srcloc !6020
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6021, !srcloc !6022
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6023, !srcloc !6024
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6025, !srcloc !6026
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6027, !srcloc !6028
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6029, !srcloc !6030
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6031, !srcloc !6032
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6033, !srcloc !6034
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6035, !srcloc !6036
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6037, !srcloc !6038
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6039, !srcloc !6040
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6041, !srcloc !6042
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6043, !srcloc !6044
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6045, !srcloc !6046
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6047, !srcloc !6048
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6049, !srcloc !6050
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6051, !srcloc !6052
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6053, !srcloc !6054
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6055, !srcloc !6056
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6057, !srcloc !6058
  ret void, !dbg !6059
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6060 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6062, metadata !DIExpression()), !dbg !6064
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !6065
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !6066
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6067, !srcloc !6076
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6067
  call void @llvm.dbg.value(metadata i32 %3, metadata !6073, metadata !DIExpression()) #23, !dbg !6077
  call void @llvm.dbg.value(metadata i32 undef, metadata !6074, metadata !DIExpression()) #23, !dbg !6077
  call void @llvm.dbg.value(metadata i32 %3, metadata !6063, metadata !DIExpression()), !dbg !6064
  call void @llvm.dbg.value(metadata i32 %3, metadata !6078, metadata !DIExpression()) #23, !dbg !6083
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6085, !srcloc !6086
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6087
  ret i32 0, !dbg !6088
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !6089 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6091
  %2 = or i32 %1, 512, !dbg !6091
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6091
  ret void, !dbg !6092
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !6093 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6094
  %2 = or i32 %1, 1024, !dbg !6094
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6094
  ret void, !dbg !6095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #4 !dbg !6096 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6098, metadata !DIExpression()), !dbg !6099
  ret i32 0, !dbg !6100
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6101 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6150, metadata !DIExpression()), !dbg !6152
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6151, metadata !DIExpression()), !dbg !6152
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #26, !dbg !6153
  ret void, !dbg !6154
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6155 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6172, metadata !DIExpression()), !dbg !6175
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6173, metadata !DIExpression()), !dbg !6175
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6176
  %4 = load i32, i32* %3, align 4, !dbg !6176
  call void @llvm.dbg.value(metadata i32 %4, metadata !6174, metadata !DIExpression()), !dbg !6175
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6177
  ret void, !dbg !6178
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #2 !dbg !6179 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6183, metadata !DIExpression()), !dbg !6186
  call void @llvm.dbg.value(metadata i8* %0, metadata !6184, metadata !DIExpression()), !dbg !6186
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6187
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6187
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6185, metadata !DIExpression()), !dbg !6188
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6188
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6189
  %5 = bitcast i8* %4 to i32*, !dbg !6189
  %6 = load i32, i32* %5, align 4, !dbg !6189
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6190
  store i32 %6, i32* %7, align 4, !dbg !6191
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6192
  unreachable, !dbg !6193
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6194 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6197, metadata !DIExpression()), !dbg !6198
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6199
  ret void, !dbg !6200
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6201 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6205, metadata !DIExpression()), !dbg !6206
  %2 = icmp sgt i32 %0, -1, !dbg !6207
  br i1 %2, label %3, label %8, !dbg !6209

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6210, !srcloc !6212
  %4 = and i32 %0, 31, !dbg !6213
  %5 = shl nuw i32 1, %4, !dbg !6214
  %6 = lshr i32 %0, 5, !dbg !6215
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6216
  store volatile i32 %5, i32* %7, align 4, !dbg !6217
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6218, !srcloc !6219
  br label %8, !dbg !6220

8:                                                ; preds = %3, %1
  ret void, !dbg !6221
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6222 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6224, metadata !DIExpression()), !dbg !6225
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6226
  ret void, !dbg !6227
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6228 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6230, metadata !DIExpression()), !dbg !6231
  %2 = icmp sgt i32 %0, -1, !dbg !6232
  br i1 %2, label %3, label %8, !dbg !6234

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6235
  %5 = shl nuw i32 1, %4, !dbg !6237
  %6 = lshr i32 %0, 5, !dbg !6238
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6239
  store volatile i32 %5, i32* %7, align 4, !dbg !6240
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6241, !srcloc !6245
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6246, !srcloc !6249
  br label %8, !dbg !6250

8:                                                ; preds = %3, %1
  ret void, !dbg !6251
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6252 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6256, metadata !DIExpression()), !dbg !6257
  %2 = lshr i32 %0, 5, !dbg !6258
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6259
  %4 = load volatile i32, i32* %3, align 4, !dbg !6259
  %5 = and i32 %0, 31, !dbg !6260
  %6 = shl nuw i32 1, %5, !dbg !6260
  %7 = and i32 %4, %6, !dbg !6261
  ret i32 %7, !dbg !6262
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6263 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6267, metadata !DIExpression()), !dbg !6270
  call void @llvm.dbg.value(metadata i32 %1, metadata !6268, metadata !DIExpression()), !dbg !6270
  call void @llvm.dbg.value(metadata i32 %2, metadata !6269, metadata !DIExpression()), !dbg !6270
  %4 = add i32 %1, 1, !dbg !6271
  call void @llvm.dbg.value(metadata i32 %4, metadata !6268, metadata !DIExpression()), !dbg !6270
  %5 = icmp ult i32 %4, 16, !dbg !6274
  br i1 %5, label %7, label %6, !dbg !6277

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.32, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.33, i32 0, i32 0), i32 noundef 94) #26, !dbg !6278
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.34, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #26, !dbg !6278
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.33, i32 0, i32 0), i32 noundef 94) #26, !dbg !6278
  unreachable, !dbg !6278

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6280
  ret void, !dbg !6281
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6282 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6286, metadata !DIExpression()), !dbg !6288
  call void @llvm.dbg.value(metadata i32 %1, metadata !6287, metadata !DIExpression()), !dbg !6288
  %3 = trunc i32 %1 to i8, !dbg !6289
  %4 = shl i8 %3, 4, !dbg !6289
  %5 = and i32 %0, 15, !dbg !6291
  %6 = add nsw i32 %5, -4, !dbg !6291
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6291
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6291
  %9 = icmp slt i32 %0, 0, !dbg !6291
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6291
  store volatile i8 %4, i8* %10, align 1, !dbg !6289
  ret void, !dbg !6292
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6293 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6295, metadata !DIExpression()), !dbg !6296
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #26, !dbg !6297
  ret void, !dbg !6298
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6299 {
  tail call void @z_SysNmiOnReset() #26, !dbg !6301
  tail call void @z_arm_int_exit() #26, !dbg !6302
  ret void, !dbg !6303
}

; Function Attrs: optsize
declare !dbg !6304 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6305 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #2 !dbg !6307 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6309
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6310
  tail call void @z_bss_zero() #26, !dbg !6311
  tail call void @z_data_copy() #26, !dbg !6312
  tail call void @z_arm_interrupt_init() #26, !dbg !6313
  tail call void @z_cstart() #27, !dbg !6314
  unreachable, !dbg !6314
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6315 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6316
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6317, !srcloc !6320
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6321, !srcloc !6324
  ret void, !dbg !6325
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6326 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6327
  %2 = and i32 %1, -15728641, !dbg !6327
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6327
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6328, !srcloc !6333
  call void @llvm.dbg.value(metadata i32 %3, metadata !6331, metadata !DIExpression()) #23, !dbg !6334
  %4 = and i32 %3, -5, !dbg !6335
  call void @llvm.dbg.value(metadata i32 %4, metadata !6336, metadata !DIExpression()) #23, !dbg !6341
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6343, !srcloc !6344
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6345, !srcloc !6324
  ret void, !dbg !6347
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6348 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6351, metadata !DIExpression()), !dbg !6352
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6353
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 10, i32 0, !dbg !6354
  store i32 %0, i32* %3, align 8, !dbg !6355
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6356
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 10, i32 1, !dbg !6357
  store i32 %4, i32* %5, align 4, !dbg !6358
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6359
  %7 = or i32 %6, 268435456, !dbg !6359
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6359
  call void @llvm.dbg.value(metadata i32 0, metadata !6360, metadata !DIExpression()) #23, !dbg !6363
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6365, !srcloc !6366
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6367
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 10, i32 1, !dbg !6368
  %10 = load i32, i32* %9, align 4, !dbg !6368
  ret i32 %10, !dbg !6369
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6370 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6491, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6492, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata i8* %2, metadata !6493, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6494, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata i8* %4, metadata !6495, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata i8* %5, metadata !6496, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.value(metadata i8* %6, metadata !6497, metadata !DIExpression()), !dbg !6499
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6500
  call void @llvm.dbg.value(metadata i8* %8, metadata !6498, metadata !DIExpression()), !dbg !6499
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6501
  %10 = bitcast i8* %9 to i32*, !dbg !6501
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6502
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6503
  %12 = bitcast i8* %8 to i32*, !dbg !6504
  store i32 %11, i32* %12, align 4, !dbg !6505
  %13 = ptrtoint i8* %4 to i32, !dbg !6506
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6507
  %15 = bitcast i8* %14 to i32*, !dbg !6507
  store i32 %13, i32* %15, align 4, !dbg !6508
  %16 = ptrtoint i8* %5 to i32, !dbg !6509
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6510
  %18 = bitcast i8* %17 to i32*, !dbg !6510
  store i32 %16, i32* %18, align 4, !dbg !6511
  %19 = ptrtoint i8* %6 to i32, !dbg !6512
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6513
  %21 = bitcast i8* %20 to i32*, !dbg !6513
  store i32 %19, i32* %21, align 4, !dbg !6514
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6515
  %23 = bitcast i8* %22 to i32*, !dbg !6515
  store i32 16777216, i32* %23, align 4, !dbg !6516
  %24 = ptrtoint i8* %8 to i32, !dbg !6517
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6518
  store i32 %24, i32* %25, align 8, !dbg !6519
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 10, i32 0, !dbg !6520
  store i32 0, i32* %26, align 8, !dbg !6521
  ret void, !dbg !6522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6528, metadata !DIExpression()), !dbg !6534
  call void @llvm.dbg.value(metadata i32 %1, metadata !6529, metadata !DIExpression()), !dbg !6534
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6535
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6530, metadata !DIExpression()), !dbg !6534
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6536
  br i1 %4, label %19, label %5, !dbg !6538

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6533, metadata !DIExpression()), !dbg !6534
  %6 = icmp eq i32 %0, -22, !dbg !6539
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 8, i32 0, !dbg !6539
  %8 = load i32, i32* %7, align 8, !dbg !6539
  br i1 %6, label %16, label %9, !dbg !6541

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6539
  %11 = icmp ule i32 %10, %0, !dbg !6539
  %12 = icmp ugt i32 %8, %0, !dbg !6539
  %13 = and i1 %12, %11, !dbg !6539
  %14 = icmp ugt i32 %8, %1, !dbg !6539
  %15 = and i1 %14, %13, !dbg !6539
  br i1 %15, label %18, label %19, !dbg !6539

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6539
  br i1 %17, label %18, label %19, !dbg !6541

18:                                               ; preds = %9, %16
  br label %19, !dbg !6542

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6534
  ret i32 %20, !dbg !6544
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #2 !dbg !6545 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6549, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata i8* %1, metadata !6550, metadata !DIExpression()), !dbg !6552
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6551, metadata !DIExpression()), !dbg !6552
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6553
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #26, !dbg !6554
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6555, !srcloc !6556
  unreachable, !dbg !6557
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6558 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6576, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata i32 %1, metadata !6577, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata i32 %2, metadata !6578, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6579, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata i32 0, metadata !6580, metadata !DIExpression()), !dbg !6586
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6587
  call void @llvm.dbg.value(metadata i32 %8, metadata !6581, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6586
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6588
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6588
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6589
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6589
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6585, metadata !DIExpression()), !dbg !6590
  call void @llvm.dbg.value(metadata i32 0, metadata !6591, metadata !DIExpression()) #23, !dbg !6594
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6596, !srcloc !6597
  call void @llvm.dbg.value(metadata i8* %6, metadata !6583, metadata !DIExpression(DW_OP_deref)), !dbg !6586
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6598
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6584, metadata !DIExpression()), !dbg !6586
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6599
  br i1 %11, label %12, label %13, !dbg !6602

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 1057) #26, !dbg !6603
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.40, i32 0, i32 0)) #26, !dbg !6603
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 1057) #26, !dbg !6603
  unreachable, !dbg !6603

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6605
  call void @llvm.dbg.value(metadata i32 %14, metadata !6581, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata i8* %5, metadata !6582, metadata !DIExpression(DW_OP_deref)), !dbg !6586
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6606
  call void @llvm.dbg.value(metadata i32 %15, metadata !6580, metadata !DIExpression()), !dbg !6586
  %16 = load i8, i8* %5, align 1, !dbg !6607, !range !4091
  call void @llvm.dbg.value(metadata i8 %16, metadata !6582, metadata !DIExpression()), !dbg !6586
  %17 = icmp eq i8 %16, 0, !dbg !6607
  br i1 %17, label %18, label %35, !dbg !6609

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6610
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #26, !dbg !6611
  %21 = load i8, i8* %6, align 1, !dbg !6612, !range !4091
  call void @llvm.dbg.value(metadata i8 %21, metadata !6583, metadata !DIExpression()), !dbg !6586
  %22 = icmp eq i8 %21, 0, !dbg !6612
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6614
  %24 = load i32, i32* %23, align 4, !dbg !6614
  br i1 %22, label %30, label %25, !dbg !6615

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6616
  %27 = icmp eq i32 %26, 0, !dbg !6619
  br i1 %27, label %28, label %34, !dbg !6620

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6621
  br label %32, !dbg !6623

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6624
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6614
  br label %34, !dbg !6626

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #26, !dbg !6626
  br label %35, !dbg !6627

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6627
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6627
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6627
  ret void, !dbg !6627
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #7 !dbg !6628 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6633, metadata !DIExpression()), !dbg !6639
  call void @llvm.dbg.value(metadata i32 %1, metadata !6634, metadata !DIExpression()), !dbg !6639
  call void @llvm.dbg.value(metadata i32 %2, metadata !6635, metadata !DIExpression()), !dbg !6639
  call void @llvm.dbg.value(metadata i8* %3, metadata !6636, metadata !DIExpression()), !dbg !6639
  call void @llvm.dbg.value(metadata i8 0, metadata !6637, metadata !DIExpression()), !dbg !6639
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6638, metadata !DIExpression()), !dbg !6639
  store i8 0, i8* %3, align 1, !dbg !6640
  %5 = icmp ult i32 %2, -16777216, !dbg !6641
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6643
  br i1 %8, label %16, label %9, !dbg !6643

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6644
  %11 = icmp eq i32 %10, 0, !dbg !6644
  br i1 %11, label %12, label %13, !dbg !6646

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6638, metadata !DIExpression()), !dbg !6639
  store i8 1, i8* %3, align 1, !dbg !6649
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6639
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6638, metadata !DIExpression()), !dbg !6639
  br label %16, !dbg !6652

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6639
  ret %struct.__esf* %17, !dbg !6653
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6654 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6658, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.value(metadata i32 %1, metadata !6659, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.value(metadata i8* %2, metadata !6660, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.value(metadata i32 0, metadata !6661, metadata !DIExpression()), !dbg !6662
  store i8 0, i8* %2, align 1, !dbg !6663
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6664

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6665
  call void @llvm.dbg.value(metadata i32 %5, metadata !6661, metadata !DIExpression()), !dbg !6662
  br label %11, !dbg !6667

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6668
  call void @llvm.dbg.value(metadata i32 %7, metadata !6661, metadata !DIExpression()), !dbg !6662
  br label %11, !dbg !6669

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6670
  call void @llvm.dbg.value(metadata i32 0, metadata !6661, metadata !DIExpression()), !dbg !6662
  br label %11, !dbg !6671

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6672
  call void @llvm.dbg.value(metadata i32 0, metadata !6661, metadata !DIExpression()), !dbg !6662
  br label %11, !dbg !6673

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6674
  br label %11, !dbg !6675

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6676
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6677 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6681, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i8* %1, metadata !6682, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i32 0, metadata !6683, metadata !DIExpression()), !dbg !6684
  store i8 0, i8* %1, align 1, !dbg !6685
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6686
  %4 = and i32 %3, 2, !dbg !6688
  %5 = icmp eq i32 %4, 0, !dbg !6689
  br i1 %5, label %6, label %35, !dbg !6690

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6691
  %8 = icmp sgt i32 %7, -1, !dbg !6693
  br i1 %8, label %9, label %35, !dbg !6694

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6695
  %11 = and i32 %10, 1073741824, !dbg !6697
  %12 = icmp eq i32 %11, 0, !dbg !6698
  br i1 %12, label %34, label %13, !dbg !6699

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6700
  br i1 %14, label %15, label %18, !dbg !6703

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6704
  %17 = load i32, i32* %16, align 4, !dbg !6704
  call void @llvm.dbg.value(metadata i32 %17, metadata !6683, metadata !DIExpression()), !dbg !6684
  br label %35, !dbg !6706

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6707
  %20 = and i32 %19, 255, !dbg !6709
  %21 = icmp eq i32 %20, 0, !dbg !6710
  br i1 %21, label %24, label %22, !dbg !6711

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6712
  call void @llvm.dbg.value(metadata i32 %23, metadata !6683, metadata !DIExpression()), !dbg !6684
  br label %35, !dbg !6714

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6715
  %26 = and i32 %25, 65280, !dbg !6717
  %27 = icmp eq i32 %26, 0, !dbg !6718
  br i1 %27, label %29, label %28, !dbg !6719

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6720
  call void @llvm.dbg.value(metadata i32 0, metadata !6683, metadata !DIExpression()), !dbg !6684
  br label %35, !dbg !6722

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6723
  %31 = icmp ult i32 %30, 65536, !dbg !6725
  br i1 %31, label %33, label %32, !dbg !6726

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #24, !dbg !6727
  call void @llvm.dbg.value(metadata i32 0, metadata !6683, metadata !DIExpression()), !dbg !6684
  br label %35

33:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 755) #26, !dbg !6729
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5.44, i32 0, i32 0)) #26, !dbg !6729
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 755) #26, !dbg !6729
  unreachable, !dbg !6729

34:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 760) #26, !dbg !6734
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.6.45, i32 0, i32 0)) #26, !dbg !6734
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 760) #26, !dbg !6734
  unreachable, !dbg !6734

35:                                               ; preds = %6, %15, %28, %32, %22, %2
  %36 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], !dbg !6684
  call void @llvm.dbg.value(metadata i32 %36, metadata !6683, metadata !DIExpression()), !dbg !6684
  ret i32 %36, !dbg !6739
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6740 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6742, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i32 %1, metadata !6743, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i8* %2, metadata !6744, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i32 0, metadata !6745, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.value(metadata i32 -22, metadata !6746, metadata !DIExpression()), !dbg !6755
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6756
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6758
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6760
  %7 = and i32 %6, 2, !dbg !6761
  %8 = icmp eq i32 %7, 0, !dbg !6762
  br i1 %8, label %19, label %9, !dbg !6763

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6764
  call void @llvm.dbg.value(metadata i32 %10, metadata !6747, metadata !DIExpression()), !dbg !6765
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6766
  %12 = and i32 %11, 128, !dbg !6768
  %13 = icmp eq i32 %12, 0, !dbg !6769
  br i1 %13, label %19, label %14, !dbg !6770

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6746, metadata !DIExpression()), !dbg !6755
  %15 = icmp eq i32 %1, 0, !dbg !6771
  br i1 %15, label %19, label %16, !dbg !6774

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6775
  %18 = and i32 %17, -129, !dbg !6775
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6775
  br label %19, !dbg !6777

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6755
  call void @llvm.dbg.value(metadata i32 %20, metadata !6746, metadata !DIExpression()), !dbg !6755
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6778
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6780
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6782
  %24 = and i32 %23, 16, !dbg !6783
  %25 = icmp eq i32 %24, 0, !dbg !6783
  br i1 %25, label %26, label %30, !dbg !6784

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6785
  %28 = and i32 %27, 2, !dbg !6786
  %29 = icmp eq i32 %28, 0, !dbg !6786
  br i1 %29, label %44, label %30, !dbg !6787

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6788
  %32 = and i32 %31, 2048, !dbg !6789
  %33 = icmp eq i32 %32, 0, !dbg !6789
  br i1 %33, label %44, label %34, !dbg !6790

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6791
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #26, !dbg !6792
  call void @llvm.dbg.value(metadata i32 %36, metadata !6750, metadata !DIExpression()), !dbg !6793
  %37 = icmp eq i32 %36, 0, !dbg !6794
  br i1 %37, label %39, label %38, !dbg !6796

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6797, metadata !DIExpression()) #23, !dbg !6800
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #23, !dbg !6803, !srcloc !6804
  call void @llvm.dbg.value(metadata i32 2, metadata !6745, metadata !DIExpression()), !dbg !6755
  br label %44, !dbg !6805

39:                                               ; preds = %34
  %40 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6806
  %41 = and i32 %40, 16, !dbg !6806
  %42 = icmp eq i32 %41, 0, !dbg !6806
  br i1 %42, label %44, label %43, !dbg !6810

43:                                               ; preds = %39
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7.41, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 343) #26, !dbg !6811
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8.42, i32 0, i32 0)) #26, !dbg !6811
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.39, i32 0, i32 0), i32 noundef 343) #26, !dbg !6811
  unreachable, !dbg !6811

44:                                               ; preds = %38, %39, %30, %26
  %45 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %39 ], !dbg !6755
  call void @llvm.dbg.value(metadata i32 %45, metadata !6745, metadata !DIExpression()), !dbg !6755
  %46 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6813
  %47 = and i32 %46, 32, !dbg !6815
  %48 = icmp eq i32 %47, 0, !dbg !6816
  br i1 %48, label %52, label %49, !dbg !6817

49:                                               ; preds = %44
  %50 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6818
  %51 = and i32 %50, -8193, !dbg !6818
  store volatile i32 %51, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6818
  br label %52, !dbg !6820

52:                                               ; preds = %49, %44
  %53 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6821
  %54 = or i32 %53, 255, !dbg !6821
  store volatile i32 %54, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6821
  store i8 0, i8* %2, align 1, !dbg !6822
  ret i32 %45, !dbg !6823
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !6824 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6828, metadata !DIExpression()), !dbg !6835
  call void @llvm.dbg.value(metadata i32 %0, metadata !6829, metadata !DIExpression()), !dbg !6835
  call void @llvm.dbg.value(metadata i8* %1, metadata !6830, metadata !DIExpression()), !dbg !6835
  call void @llvm.dbg.value(metadata i32 0, metadata !6831, metadata !DIExpression()), !dbg !6835
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6836
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6838
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6840
  %6 = and i32 %5, 512, !dbg !6841
  %7 = icmp eq i32 %6, 0, !dbg !6841
  br i1 %7, label %18, label %8, !dbg !6842

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6843
  call void @llvm.dbg.value(metadata i32 %9, metadata !6832, metadata !DIExpression()), !dbg !6844
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6845
  %11 = and i32 %10, 32768, !dbg !6847
  %12 = icmp ne i32 %11, 0, !dbg !6848
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6849
  br i1 %14, label %15, label %18, !dbg !6849

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6850
  %17 = and i32 %16, -32769, !dbg !6850
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6850
  br label %18, !dbg !6854

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6855
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6857
  %21 = and i32 %20, 256, !dbg !6859
  %22 = icmp eq i32 %21, 0, !dbg !6860
  br i1 %22, label %23, label %25, !dbg !6861

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6862
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6864
  %27 = or i32 %26, 65280, !dbg !6864
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6864
  store i8 0, i8* %1, align 1, !dbg !6865
  ret void, !dbg !6866
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #14 !dbg !6867 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6873, metadata !DIExpression()), !dbg !6875
  call void @llvm.dbg.value(metadata i32 0, metadata !6874, metadata !DIExpression()), !dbg !6875
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6876
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6878
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6880
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6882
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6884
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6886
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6888
  %8 = or i32 %7, -65536, !dbg !6888
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6888
  ret void, !dbg !6889
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !6890 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6894, metadata !DIExpression()), !dbg !6896
  call void @llvm.dbg.value(metadata i8* %0, metadata !6895, metadata !DIExpression()), !dbg !6896
  store i8 0, i8* %0, align 1, !dbg !6897
  ret void, !dbg !6898
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6899 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6903, metadata !DIExpression()), !dbg !6906
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6907
  %3 = load i32, i32* %2, align 4, !dbg !6907
  %4 = inttoptr i32 %3 to i16*, !dbg !6908
  call void @llvm.dbg.value(metadata i16* %4, metadata !6904, metadata !DIExpression()), !dbg !6906
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6909
  %6 = or i32 %5, 256, !dbg !6909
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6909
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6910, !srcloc !6913
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6914, !srcloc !6917
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6918
  %8 = load i16, i16* %7, align 2, !dbg !6919
  call void @llvm.dbg.value(metadata i16 %8, metadata !6905, metadata !DIExpression()), !dbg !6906
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6920
  %10 = and i32 %9, -257, !dbg !6920
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6920
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6921, !srcloc !6913
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6923, !srcloc !6917
  %11 = icmp eq i16 %8, -8446, !dbg !6925
  ret i1 %11, !dbg !6927
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !6928 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6929
  %2 = or i32 %1, 16, !dbg !6929
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6929
  ret void, !dbg !6930
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !6931 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6934, metadata !DIExpression()), !dbg !6935
  br label %1, !dbg !6936

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6934, metadata !DIExpression()), !dbg !6935
  tail call fastcc void @__NVIC_SetPriority.48(i32 noundef %2) #24, !dbg !6938
  %3 = add nuw nsw i32 %2, 1, !dbg !6941
  call void @llvm.dbg.value(metadata i32 %3, metadata !6934, metadata !DIExpression()), !dbg !6935
  %4 = icmp eq i32 %3, 97, !dbg !6942
  br i1 %4, label %5, label %1, !dbg !6936, !llvm.loop !6943

5:                                                ; preds = %1
  ret void, !dbg !6945
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.48(i32 noundef %0) unnamed_addr #14 !dbg !6946 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6948, metadata !DIExpression()), !dbg !6950
  call void @llvm.dbg.value(metadata i32 1, metadata !6949, metadata !DIExpression()), !dbg !6950
  %2 = and i32 %0, 15, !dbg !6951
  %3 = add nsw i32 %2, -4, !dbg !6951
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6951
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6951
  %6 = icmp slt i32 %0, 0, !dbg !6951
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6951
  store volatile i8 16, i8* %7, align 1, !dbg !6952
  ret void, !dbg !6954
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6955 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7072, metadata !DIExpression()), !dbg !7073
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7074
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7076
  br i1 %3, label %4, label %12, !dbg !7077

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7078, !srcloc !7090
  call void @llvm.dbg.value(metadata i32 %5, metadata !7081, metadata !DIExpression()) #23, !dbg !7091
  %6 = icmp eq i32 %5, 0, !dbg !7092
  br i1 %6, label %12, label %7, !dbg !7093

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7094
  %9 = or i32 %8, 268435456, !dbg !7094
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7094
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7096
  %11 = and i32 %10, -32769, !dbg !7096
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7096
  br label %12, !dbg !7097

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !7098
  ret void, !dbg !7099
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7100 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #26, !dbg !7101
  ret void, !dbg !7102
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !393 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !509, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.value(metadata i8 0, metadata !510, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.value(metadata i32 64, metadata !512, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.value(metadata i32 undef, metadata !511, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7103
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !7104
  %3 = load i32, i32* %2, align 8, !dbg !7104
  call void @llvm.dbg.value(metadata i32 %3, metadata !511, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7103
  %4 = add i32 %3, -64, !dbg !7106
  call void @llvm.dbg.value(metadata i32 %4, metadata !511, metadata !DIExpression()), !dbg !7103
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7107
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7108
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7109
  call void @llvm.dbg.value(metadata i8 1, metadata !510, metadata !DIExpression()), !dbg !7103
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #26, !dbg !7110
  ret void, !dbg !7111
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7112 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7113
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7114, !srcloc !7117
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7118, !srcloc !7121
  ret void, !dbg !7122
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7123 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7124, !srcloc !7127
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7128
  ret void, !dbg !7129
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7130 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7145, metadata !DIExpression()), !dbg !7149
  call void @llvm.dbg.value(metadata i8 %1, metadata !7146, metadata !DIExpression()), !dbg !7149
  call void @llvm.dbg.value(metadata i32 %2, metadata !7147, metadata !DIExpression()), !dbg !7149
  call void @llvm.dbg.value(metadata i32 %3, metadata !7148, metadata !DIExpression()), !dbg !7149
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7150
  %6 = icmp eq i32 %5, -22, !dbg !7152
  br i1 %6, label %7, label %9, !dbg !7153

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 283) #26, !dbg !7154
  %8 = zext i8 %1 to i32, !dbg !7154
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.58, i32 0, i32 0), i32 noundef %8) #26, !dbg !7154
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 283) #26, !dbg !7154
  unreachable, !dbg !7154

9:                                                ; preds = %4
  ret void, !dbg !7159
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !7160 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7165, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata i8 %1, metadata !7166, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata i32 undef, metadata !7167, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.value(metadata i32 undef, metadata !7168, metadata !DIExpression()), !dbg !7170
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7171
  call void @llvm.dbg.value(metadata i8 %3, metadata !7169, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7170
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7172
  call void @llvm.dbg.value(metadata i32 %4, metadata !7169, metadata !DIExpression()), !dbg !7170
  %5 = trunc i32 %4 to i8, !dbg !7173
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7174
  ret i32 %4, !dbg !7175
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #16 !dbg !7176 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7180, metadata !DIExpression()), !dbg !7186
  call void @llvm.dbg.value(metadata i8 %1, metadata !7181, metadata !DIExpression()), !dbg !7186
  call void @llvm.dbg.value(metadata i8 %2, metadata !7182, metadata !DIExpression()), !dbg !7186
  call void @llvm.dbg.value(metadata i1 %3, metadata !7183, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7186
  %5 = zext i8 %2 to i32, !dbg !7187
  call void @llvm.dbg.value(metadata i32 %5, metadata !7185, metadata !DIExpression()), !dbg !7186
  call void @llvm.dbg.value(metadata i32 0, metadata !7184, metadata !DIExpression()), !dbg !7186
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7185, metadata !DIExpression()), !dbg !7186
  call void @llvm.dbg.value(metadata i32 0, metadata !7184, metadata !DIExpression()), !dbg !7186
  %7 = icmp eq i8 %1, 0, !dbg !7188
  br i1 %7, label %29, label %8, !dbg !7191

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7185, metadata !DIExpression()), !dbg !7186
  call void @llvm.dbg.value(metadata i32 %10, metadata !7184, metadata !DIExpression()), !dbg !7186
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7192
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7195
  %13 = load i32, i32* %12, align 4, !dbg !7195
  %14 = icmp eq i32 %13, 0, !dbg !7196
  br i1 %14, label %25, label %15, !dbg !7197

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7198

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7200
  %18 = icmp eq i32 %17, 0, !dbg !7200
  br i1 %18, label %29, label %19, !dbg !7201

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7202
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7203
  call void @llvm.dbg.value(metadata i32 %21, metadata !7185, metadata !DIExpression()), !dbg !7186
  %22 = icmp eq i32 %21, -22, !dbg !7204
  br i1 %22, label %29, label %23, !dbg !7206

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7207
  call void @llvm.dbg.value(metadata i32 %24, metadata !7185, metadata !DIExpression()), !dbg !7186
  br label %25, !dbg !7208

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7186
  call void @llvm.dbg.value(metadata i32 %26, metadata !7185, metadata !DIExpression()), !dbg !7186
  %27 = add nuw nsw i32 %10, 1, !dbg !7209
  call void @llvm.dbg.value(metadata i32 %27, metadata !7184, metadata !DIExpression()), !dbg !7186
  %28 = icmp eq i32 %27, %6, !dbg !7188
  br i1 %28, label %29, label %8, !dbg !7191, !llvm.loop !7210

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7186
  ret i32 %30, !dbg !7212
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #17 !dbg !7213 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7217, metadata !DIExpression()), !dbg !7219
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7220
  %3 = load i32, i32* %2, align 4, !dbg !7220
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7221, !range !7222
  %5 = icmp ult i32 %4, 2, !dbg !7221
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7223
  br i1 %7, label %8, label %15, !dbg !7223

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7224
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7225
  %11 = load i32, i32* %10, align 4, !dbg !7225
  %12 = and i32 %11, %9, !dbg !7226
  %13 = icmp eq i32 %12, 0, !dbg !7227
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7218, metadata !DIExpression()), !dbg !7219
  ret i32 %16, !dbg !7228
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #16 !dbg !7229 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7233, metadata !DIExpression()), !dbg !7236
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7234, metadata !DIExpression()), !dbg !7236
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7237
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7237
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7235, metadata !DIExpression()), !dbg !7238
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7239
  %6 = load i32, i32* %5, align 4, !dbg !7239
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7240
  store i32 %6, i32* %7, align 4, !dbg !7241
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7242
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7243
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7244
  %11 = load i32, i32* %10, align 4, !dbg !7244
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7245
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7246
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7247
  ret i32 %12, !dbg !7248
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #18 !dbg !7249 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7256, metadata !DIExpression()), !dbg !7260
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7257, metadata !DIExpression()), !dbg !7260
  call void @llvm.dbg.value(metadata i32 undef, metadata !7258, metadata !DIExpression()), !dbg !7260
  call void @llvm.dbg.value(metadata i32 %2, metadata !7259, metadata !DIExpression()), !dbg !7260
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7261
  %5 = load i32, i32* %4, align 4, !dbg !7261
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7262
  %7 = or i32 %6, %5, !dbg !7263
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7264
  store i32 %7, i32* %8, align 4, !dbg !7265
  ret void, !dbg !7266
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7267 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7271, metadata !DIExpression()), !dbg !7273
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7272, metadata !DIExpression()), !dbg !7273
  %3 = zext i8 %0 to i32, !dbg !7274
  %4 = icmp ugt i8 %0, 7, !dbg !7276
  br i1 %4, label %6, label %5, !dbg !7277

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7278
  br label %6, !dbg !7279

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7273
  ret i32 %7, !dbg !7280
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7281 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7285, metadata !DIExpression()), !dbg !7287
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7286, metadata !DIExpression()), !dbg !7287
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7288
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7289
  %4 = load i32, i32* %3, align 4, !dbg !7289
  %5 = and i32 %4, -32, !dbg !7290
  %6 = or i32 %5, %0, !dbg !7291
  %7 = or i32 %6, 16, !dbg !7291
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7292
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7293
  %9 = load i32, i32* %8, align 4, !dbg !7293
  %10 = or i32 %9, 1, !dbg !7294
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7295
  ret void, !dbg !7296
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7300, metadata !DIExpression()), !dbg !7301
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7302
  ret void, !dbg !7303
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #5 !dbg !7304 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7308, metadata !DIExpression()), !dbg !7309
  %2 = icmp ult i32 %0, 33, !dbg !7310
  br i1 %2, label %11, label %3, !dbg !7312

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7313
  br i1 %4, label %11, label %5, !dbg !7315

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7316
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7317, !range !7222
  %8 = mul nsw i32 %7, -2, !dbg !7318
  %9 = add nsw i32 %8, 62, !dbg !7318
  %10 = and i32 %9, 62, !dbg !7319
  br label %11, !dbg !7320

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7309
  ret i32 %12, !dbg !7321
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #3

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7322 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7326, metadata !DIExpression()), !dbg !7328
  call void @llvm.dbg.value(metadata i8 %1, metadata !7327, metadata !DIExpression()), !dbg !7328
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7329
  %4 = icmp eq i32 %3, -22, !dbg !7331
  br i1 %4, label %5, label %7, !dbg !7332

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 314) #26, !dbg !7333
  %6 = zext i8 %1 to i32, !dbg !7333
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.61, i32 0, i32 0), i32 noundef %6) #26, !dbg !7333
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 314) #26, !dbg !7333
  unreachable, !dbg !7333

7:                                                ; preds = %2
  ret void, !dbg !7338
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #16 !dbg !7339 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7343, metadata !DIExpression()), !dbg !7350
  call void @llvm.dbg.value(metadata i8 %1, metadata !7344, metadata !DIExpression()), !dbg !7350
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7351
  call void @llvm.dbg.value(metadata i8 %3, metadata !7345, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7350
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7352
  call void @llvm.dbg.value(metadata i32 %4, metadata !7345, metadata !DIExpression()), !dbg !7350
  %5 = icmp ne i32 %4, -22, !dbg !7353
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7354
  call void @llvm.dbg.value(metadata i32 %4, metadata !7346, metadata !DIExpression()), !dbg !7355
  br i1 %7, label %8, label %12, !dbg !7354

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7346, metadata !DIExpression()), !dbg !7355
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7356
  %10 = add i32 %9, 1, !dbg !7359
  call void @llvm.dbg.value(metadata i32 %10, metadata !7346, metadata !DIExpression()), !dbg !7355
  %11 = icmp eq i32 %10, 8, !dbg !7360
  br i1 %11, label %12, label %8, !dbg !7361, !llvm.loop !7362

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7364
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7368, metadata !DIExpression()), !dbg !7369
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7370
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7371
  ret void, !dbg !7372
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7373 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7378
  %2 = icmp ugt i32 %1, 8, !dbg !7380
  br i1 %2, label %3, label %4, !dbg !7381

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.56, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 341) #26, !dbg !7382
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.62, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #26, !dbg !7382
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 341) #26, !dbg !7382
  unreachable, !dbg !7382

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7387
  call void @llvm.dbg.value(metadata i32 0, metadata !7377, metadata !DIExpression()), !dbg !7388
  %5 = icmp eq i32 %1, 0, !dbg !7389
  br i1 %5, label %13, label %6, !dbg !7392

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7392

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7377, metadata !DIExpression()), !dbg !7388
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7393
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7395
  %11 = add nuw i32 %9, 1, !dbg !7396
  call void @llvm.dbg.value(metadata i32 %11, metadata !7377, metadata !DIExpression()), !dbg !7388
  %12 = icmp eq i32 %11, %1, !dbg !7389
  br i1 %12, label %13, label %8, !dbg !7392, !llvm.loop !7397

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7399
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7400
  tail call void @arm_core_mpu_enable() #24, !dbg !7401
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7402
  %16 = and i32 %15, 65280, !dbg !7402
  %17 = icmp eq i32 %16, 2048, !dbg !7402
  br i1 %17, label %19, label %18, !dbg !7405

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.63, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 435) #26, !dbg !7406
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.64, i32 0, i32 0)) #26, !dbg !7406
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.57, i32 0, i32 0), i32 noundef 435) #26, !dbg !7406
  unreachable, !dbg !7406

19:                                               ; preds = %13
  ret i32 0, !dbg !7408
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !7409 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7416, metadata !DIExpression()), !dbg !7419
  call void @llvm.dbg.value(metadata i8* %1, metadata !7417, metadata !DIExpression()), !dbg !7419
  call void @llvm.dbg.value(metadata i8* %0, metadata !7418, metadata !DIExpression()), !dbg !7419
  %3 = load i8, i8* %1, align 1, !dbg !7420
  %4 = icmp eq i8 %3, 0, !dbg !7421
  br i1 %4, label %13, label %5, !dbg !7422

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7416, metadata !DIExpression()), !dbg !7419
  call void @llvm.dbg.value(metadata i8* %8, metadata !7417, metadata !DIExpression()), !dbg !7419
  store i8 %6, i8* %7, align 1, !dbg !7423
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7425
  call void @llvm.dbg.value(metadata i8* %9, metadata !7416, metadata !DIExpression()), !dbg !7419
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7426
  call void @llvm.dbg.value(metadata i8* %10, metadata !7417, metadata !DIExpression()), !dbg !7419
  %11 = load i8, i8* %10, align 1, !dbg !7420
  %12 = icmp eq i8 %11, 0, !dbg !7421
  br i1 %12, label %13, label %5, !dbg !7422, !llvm.loop !7427

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7429
  ret i8* %0, !dbg !7430
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !7431 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7435, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.value(metadata i8* %1, metadata !7436, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.value(metadata i32 %2, metadata !7437, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.value(metadata i8* %0, metadata !7438, metadata !DIExpression()), !dbg !7439
  %4 = icmp eq i32 %2, 0, !dbg !7440
  br i1 %4, label %22, label %5, !dbg !7441

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7435, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.value(metadata i32 %7, metadata !7437, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.value(metadata i8* %8, metadata !7436, metadata !DIExpression()), !dbg !7439
  %9 = load i8, i8* %8, align 1, !dbg !7442
  %10 = icmp eq i8 %9, 0, !dbg !7443
  br i1 %10, label %16, label %11, !dbg !7444

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7445
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7447
  call void @llvm.dbg.value(metadata i8* %12, metadata !7436, metadata !DIExpression()), !dbg !7439
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7448
  call void @llvm.dbg.value(metadata i8* %13, metadata !7435, metadata !DIExpression()), !dbg !7439
  %14 = add i32 %7, -1, !dbg !7449
  call void @llvm.dbg.value(metadata i32 %14, metadata !7437, metadata !DIExpression()), !dbg !7439
  %15 = icmp eq i32 %14, 0, !dbg !7440
  br i1 %15, label %22, label %5, !dbg !7441, !llvm.loop !7450

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7435, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.value(metadata i32 %18, metadata !7437, metadata !DIExpression()), !dbg !7439
  store i8 0, i8* %17, align 1, !dbg !7452
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7454
  call void @llvm.dbg.value(metadata i8* %19, metadata !7435, metadata !DIExpression()), !dbg !7439
  %20 = add i32 %18, -1, !dbg !7455
  call void @llvm.dbg.value(metadata i32 %20, metadata !7437, metadata !DIExpression()), !dbg !7439
  %21 = icmp eq i32 %20, 0, !dbg !7456
  br i1 %21, label %22, label %16, !dbg !7457, !llvm.loop !7458

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7460
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !7461 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7465, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.value(metadata i32 %1, metadata !7466, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.value(metadata i32 %1, metadata !7467, metadata !DIExpression()), !dbg !7468
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7469

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7465, metadata !DIExpression()), !dbg !7468
  %6 = load i8, i8* %5, align 1, !dbg !7470
  %7 = icmp eq i8 %6, %3, !dbg !7471
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7472
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7473
  call void @llvm.dbg.value(metadata i8* %10, metadata !7465, metadata !DIExpression()), !dbg !7468
  br i1 %9, label %11, label %4, !dbg !7472, !llvm.loop !7475

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7477
  ret i8* %12, !dbg !7478
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !7479 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7481, metadata !DIExpression()), !dbg !7484
  call void @llvm.dbg.value(metadata i32 %1, metadata !7482, metadata !DIExpression()), !dbg !7484
  call void @llvm.dbg.value(metadata i8* null, metadata !7483, metadata !DIExpression()), !dbg !7484
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7485

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7484
  call void @llvm.dbg.value(metadata i8* %6, metadata !7483, metadata !DIExpression()), !dbg !7484
  call void @llvm.dbg.value(metadata i8* %5, metadata !7481, metadata !DIExpression()), !dbg !7484
  %7 = load i8, i8* %5, align 1, !dbg !7486
  %8 = icmp eq i8 %7, %3, !dbg !7489
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7490
  call void @llvm.dbg.value(metadata i8* %9, metadata !7483, metadata !DIExpression()), !dbg !7484
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7491
  call void @llvm.dbg.value(metadata i8* %10, metadata !7481, metadata !DIExpression()), !dbg !7484
  %11 = icmp eq i8 %7, 0, !dbg !7492
  br i1 %11, label %12, label %4, !dbg !7492, !llvm.loop !7493

12:                                               ; preds = %4
  ret i8* %9, !dbg !7495
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !7496 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7500, metadata !DIExpression()), !dbg !7502
  call void @llvm.dbg.value(metadata i32 0, metadata !7501, metadata !DIExpression()), !dbg !7502
  %2 = load i8, i8* %0, align 1, !dbg !7503
  %3 = icmp eq i8 %2, 0, !dbg !7504
  br i1 %3, label %11, label %4, !dbg !7505

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7501, metadata !DIExpression()), !dbg !7502
  call void @llvm.dbg.value(metadata i8* %6, metadata !7500, metadata !DIExpression()), !dbg !7502
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7506
  call void @llvm.dbg.value(metadata i8* %7, metadata !7500, metadata !DIExpression()), !dbg !7502
  %8 = add i32 %5, 1, !dbg !7508
  call void @llvm.dbg.value(metadata i32 %8, metadata !7501, metadata !DIExpression()), !dbg !7502
  %9 = load i8, i8* %7, align 1, !dbg !7503
  %10 = icmp eq i8 %9, 0, !dbg !7504
  br i1 %10, label %11, label %4, !dbg !7505, !llvm.loop !7509

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7502
  ret i32 %12, !dbg !7511
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 !dbg !7512 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7516, metadata !DIExpression()), !dbg !7519
  call void @llvm.dbg.value(metadata i32 %1, metadata !7517, metadata !DIExpression()), !dbg !7519
  call void @llvm.dbg.value(metadata i32 0, metadata !7518, metadata !DIExpression()), !dbg !7519
  %3 = load i8, i8* %0, align 1, !dbg !7520
  %4 = icmp ne i8 %3, 0, !dbg !7521
  %5 = icmp ne i32 %1, 0, !dbg !7522
  %6 = and i1 %4, %5, !dbg !7522
  br i1 %6, label %7, label %16, !dbg !7523

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7518, metadata !DIExpression()), !dbg !7519
  call void @llvm.dbg.value(metadata i8* %9, metadata !7516, metadata !DIExpression()), !dbg !7519
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7524
  call void @llvm.dbg.value(metadata i8* %10, metadata !7516, metadata !DIExpression()), !dbg !7519
  %11 = add nuw i32 %8, 1, !dbg !7526
  call void @llvm.dbg.value(metadata i32 %11, metadata !7518, metadata !DIExpression()), !dbg !7519
  %12 = load i8, i8* %10, align 1, !dbg !7520
  %13 = icmp ne i8 %12, 0, !dbg !7521
  %14 = icmp ult i32 %11, %1, !dbg !7522
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7522
  br i1 %15, label %7, label %16, !dbg !7523, !llvm.loop !7527

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7519
  ret i32 %17, !dbg !7529
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !7530 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7534, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.value(metadata i8* %1, metadata !7535, metadata !DIExpression()), !dbg !7536
  %3 = load i8, i8* %0, align 1, !dbg !7537
  %4 = load i8, i8* %1, align 1, !dbg !7538
  %5 = icmp ne i8 %3, %4, !dbg !7539
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7540
  br i1 %7, label %18, label %8, !dbg !7540

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7535, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.value(metadata i8* %10, metadata !7534, metadata !DIExpression()), !dbg !7536
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7541
  call void @llvm.dbg.value(metadata i8* %11, metadata !7534, metadata !DIExpression()), !dbg !7536
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7543
  call void @llvm.dbg.value(metadata i8* %12, metadata !7535, metadata !DIExpression()), !dbg !7536
  %13 = load i8, i8* %11, align 1, !dbg !7537
  %14 = load i8, i8* %12, align 1, !dbg !7538
  %15 = icmp ne i8 %13, %14, !dbg !7539
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7540
  br i1 %17, label %18, label %8, !dbg !7540, !llvm.loop !7544

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7537
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7538
  %21 = zext i8 %19 to i32, !dbg !7547
  %22 = zext i8 %20 to i32, !dbg !7548
  %23 = sub nsw i32 %21, %22, !dbg !7549
  ret i32 %23, !dbg !7550
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !7551 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7555, metadata !DIExpression()), !dbg !7558
  call void @llvm.dbg.value(metadata i8* %1, metadata !7556, metadata !DIExpression()), !dbg !7558
  call void @llvm.dbg.value(metadata i32 %2, metadata !7557, metadata !DIExpression()), !dbg !7558
  %4 = icmp eq i32 %2, 0, !dbg !7559
  br i1 %4, label %23, label %5, !dbg !7559

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7557, metadata !DIExpression()), !dbg !7558
  call void @llvm.dbg.value(metadata i8* %7, metadata !7556, metadata !DIExpression()), !dbg !7558
  call void @llvm.dbg.value(metadata i8* %8, metadata !7555, metadata !DIExpression()), !dbg !7558
  %9 = load i8, i8* %8, align 1, !dbg !7560
  %10 = load i8, i8* %7, align 1, !dbg !7561
  %11 = icmp ne i8 %9, %10, !dbg !7562
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7563
  br i1 %13, label %19, label %14, !dbg !7563

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7564
  call void @llvm.dbg.value(metadata i8* %15, metadata !7555, metadata !DIExpression()), !dbg !7558
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7566
  call void @llvm.dbg.value(metadata i8* %16, metadata !7556, metadata !DIExpression()), !dbg !7558
  %17 = add i32 %6, -1, !dbg !7567
  call void @llvm.dbg.value(metadata i32 %17, metadata !7557, metadata !DIExpression()), !dbg !7558
  %18 = icmp eq i32 %17, 0, !dbg !7559
  br i1 %18, label %23, label %5, !dbg !7559, !llvm.loop !7568

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7571
  %21 = zext i8 %10 to i32, !dbg !7572
  %22 = sub nsw i32 %20, %21, !dbg !7573
  br label %23, !dbg !7574

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7574
  ret i32 %24, !dbg !7575
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #12 !dbg !7576 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7581, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.value(metadata i8* %1, metadata !7582, metadata !DIExpression()), !dbg !7586
  call void @llvm.dbg.value(metadata i8** %2, metadata !7583, metadata !DIExpression()), !dbg !7586
  %4 = icmp eq i8* %0, null, !dbg !7587
  br i1 %4, label %5, label %7, !dbg !7587

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7588
  br label %7, !dbg !7587

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7587
  call void @llvm.dbg.value(metadata i8* %8, metadata !7584, metadata !DIExpression()), !dbg !7586
  %9 = load i8, i8* %8, align 1, !dbg !7589
  %10 = icmp eq i8 %9, 0, !dbg !7589
  br i1 %10, label %33, label %11, !dbg !7590

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7584, metadata !DIExpression()), !dbg !7586
  %14 = zext i8 %12 to i32, !dbg !7589
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7591
  %16 = icmp eq i8* %15, null, !dbg !7590
  br i1 %16, label %21, label %17, !dbg !7592

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7593
  call void @llvm.dbg.value(metadata i8* %18, metadata !7584, metadata !DIExpression()), !dbg !7586
  %19 = load i8, i8* %18, align 1, !dbg !7589
  %20 = icmp eq i8 %19, 0, !dbg !7589
  br i1 %20, label %33, label %11, !dbg !7590, !llvm.loop !7595

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7585, metadata !DIExpression()), !dbg !7586
  %24 = zext i8 %22 to i32, !dbg !7597
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !7598
  %26 = icmp eq i8* %25, null, !dbg !7599
  br i1 %26, label %27, label %31, !dbg !7600

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7601
  call void @llvm.dbg.value(metadata i8* %28, metadata !7585, metadata !DIExpression()), !dbg !7586
  %29 = load i8, i8* %28, align 1, !dbg !7597
  %30 = icmp eq i8 %29, 0, !dbg !7597
  br i1 %30, label %33, label %21, !dbg !7603, !llvm.loop !7604

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7606
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7609
  br label %33, !dbg !7610

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7586
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7586
  store i8* %34, i8** %2, align 4, !dbg !7586
  ret i8* %35, !dbg !7611
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !7612 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7614, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata i8* %1, metadata !7615, metadata !DIExpression()), !dbg !7616
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7617
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7618
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !7619
  ret i8* %0, !dbg !7620
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !7621 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7623, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata i8* %1, metadata !7624, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata i32 %2, metadata !7625, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata i8* %0, metadata !7626, metadata !DIExpression()), !dbg !7628
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !7629
  call void @llvm.dbg.value(metadata i32 %4, metadata !7627, metadata !DIExpression()), !dbg !7628
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7630
  call void @llvm.dbg.value(metadata i8* %5, metadata !7623, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata i8* %1, metadata !7624, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata i32 %2, metadata !7625, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata i32 %2, metadata !7625, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7628
  %6 = icmp eq i32 %2, 0, !dbg !7631
  br i1 %6, label %18, label %7, !dbg !7632

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7633
  call void @llvm.dbg.value(metadata i8* %9, metadata !7623, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata i8* %10, metadata !7624, metadata !DIExpression()), !dbg !7628
  %12 = load i8, i8* %10, align 1, !dbg !7634
  %13 = icmp eq i8 %12, 0, !dbg !7635
  br i1 %13, label %18, label %14, !dbg !7636

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7637
  call void @llvm.dbg.value(metadata i8* %15, metadata !7624, metadata !DIExpression()), !dbg !7628
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7639
  call void @llvm.dbg.value(metadata i8* %16, metadata !7623, metadata !DIExpression()), !dbg !7628
  store i8 %12, i8* %9, align 1, !dbg !7640
  call void @llvm.dbg.value(metadata i32 %11, metadata !7625, metadata !DIExpression()), !dbg !7628
  call void @llvm.dbg.value(metadata i32 %11, metadata !7625, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7628
  %17 = icmp eq i32 %11, 0, !dbg !7631
  br i1 %17, label %18, label %7, !dbg !7632, !llvm.loop !7641

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7628
  store i8 0, i8* %19, align 1, !dbg !7643
  ret i8* %0, !dbg !7644
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #11 !dbg !7645 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7649, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata i8* %1, metadata !7650, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata i32 %2, metadata !7651, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata i8* %0, metadata !7652, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata i8* %1, metadata !7653, metadata !DIExpression()), !dbg !7654
  %4 = icmp eq i32 %2, 0, !dbg !7655
  br i1 %4, label %31, label %5, !dbg !7657

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7653, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata i8* %0, metadata !7652, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata i32 %2, metadata !7651, metadata !DIExpression()), !dbg !7654
  %6 = add i32 %2, -1, !dbg !7658
  call void @llvm.dbg.value(metadata i32 %6, metadata !7651, metadata !DIExpression()), !dbg !7654
  %7 = icmp eq i32 %6, 0, !dbg !7659
  br i1 %7, label %23, label %8, !dbg !7660

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7661
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7661
  br label %11, !dbg !7661

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7653, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata i8* %14, metadata !7652, metadata !DIExpression()), !dbg !7654
  %15 = load i8, i8* %14, align 1, !dbg !7662
  %16 = load i8, i8* %13, align 1, !dbg !7663
  %17 = icmp eq i8 %15, %16, !dbg !7664
  br i1 %17, label %18, label %23, !dbg !7661

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7665
  call void @llvm.dbg.value(metadata i8* %19, metadata !7652, metadata !DIExpression()), !dbg !7654
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7667
  call void @llvm.dbg.value(metadata i8* %20, metadata !7653, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.value(metadata i32 %12, metadata !7651, metadata !DIExpression()), !dbg !7654
  %21 = add i32 %12, -1, !dbg !7658
  call void @llvm.dbg.value(metadata i32 %21, metadata !7651, metadata !DIExpression()), !dbg !7654
  %22 = icmp eq i32 %21, 0, !dbg !7659
  br i1 %22, label %23, label %11, !dbg !7660, !llvm.loop !7668

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7654
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7654
  %26 = load i8, i8* %24, align 1, !dbg !7670
  %27 = zext i8 %26 to i32, !dbg !7670
  %28 = load i8, i8* %25, align 1, !dbg !7671
  %29 = zext i8 %28 to i32, !dbg !7671
  %30 = sub nsw i32 %27, %29, !dbg !7672
  br label %31, !dbg !7673

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7654
  ret i32 %32, !dbg !7674
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !7675 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7679, metadata !DIExpression()), !dbg !7684
  call void @llvm.dbg.value(metadata i8* %1, metadata !7680, metadata !DIExpression()), !dbg !7684
  call void @llvm.dbg.value(metadata i32 %2, metadata !7681, metadata !DIExpression()), !dbg !7684
  call void @llvm.dbg.value(metadata i8* %0, metadata !7682, metadata !DIExpression()), !dbg !7684
  call void @llvm.dbg.value(metadata i8* %1, metadata !7683, metadata !DIExpression()), !dbg !7684
  %4 = ptrtoint i8* %0 to i32, !dbg !7685
  %5 = ptrtoint i8* %1 to i32, !dbg !7685
  %6 = sub i32 %4, %5, !dbg !7685
  %7 = icmp ult i32 %6, %2, !dbg !7687
  br i1 %7, label %10, label %8, !dbg !7688

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7683, metadata !DIExpression()), !dbg !7684
  call void @llvm.dbg.value(metadata i8* %0, metadata !7682, metadata !DIExpression()), !dbg !7684
  call void @llvm.dbg.value(metadata i32 %2, metadata !7681, metadata !DIExpression()), !dbg !7684
  %9 = icmp eq i32 %2, 0, !dbg !7689
  br i1 %9, label %26, label %17, !dbg !7691

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7681, metadata !DIExpression()), !dbg !7684
  %12 = add i32 %11, -1, !dbg !7692
  call void @llvm.dbg.value(metadata i32 %12, metadata !7681, metadata !DIExpression()), !dbg !7684
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7695
  %14 = load i8, i8* %13, align 1, !dbg !7695
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7696
  store i8 %14, i8* %15, align 1, !dbg !7697
  %16 = icmp eq i32 %12, 0, !dbg !7698
  br i1 %16, label %26, label %10, !dbg !7699, !llvm.loop !7700

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7683, metadata !DIExpression()), !dbg !7684
  call void @llvm.dbg.value(metadata i8* %19, metadata !7682, metadata !DIExpression()), !dbg !7684
  call void @llvm.dbg.value(metadata i32 %20, metadata !7681, metadata !DIExpression()), !dbg !7684
  %21 = load i8, i8* %18, align 1, !dbg !7702
  store i8 %21, i8* %19, align 1, !dbg !7704
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7705
  call void @llvm.dbg.value(metadata i8* %22, metadata !7682, metadata !DIExpression()), !dbg !7684
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7706
  call void @llvm.dbg.value(metadata i8* %23, metadata !7683, metadata !DIExpression()), !dbg !7684
  %24 = add i32 %20, -1, !dbg !7707
  call void @llvm.dbg.value(metadata i32 %24, metadata !7681, metadata !DIExpression()), !dbg !7684
  %25 = icmp eq i32 %24, 0, !dbg !7689
  br i1 %25, label %26, label %17, !dbg !7691, !llvm.loop !7708

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7710
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !7711 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7717, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i8* %1, metadata !7718, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i32 %2, metadata !7719, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i8* %0, metadata !7720, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i8* %1, metadata !7721, metadata !DIExpression()), !dbg !7722
  %4 = icmp eq i32 %2, 0, !dbg !7723
  br i1 %4, label %14, label %5, !dbg !7724

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7721, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i8* %7, metadata !7720, metadata !DIExpression()), !dbg !7722
  call void @llvm.dbg.value(metadata i32 %8, metadata !7719, metadata !DIExpression()), !dbg !7722
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7725
  call void @llvm.dbg.value(metadata i8* %9, metadata !7721, metadata !DIExpression()), !dbg !7722
  %10 = load i8, i8* %6, align 1, !dbg !7727
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7728
  call void @llvm.dbg.value(metadata i8* %11, metadata !7720, metadata !DIExpression()), !dbg !7722
  store i8 %10, i8* %7, align 1, !dbg !7729
  %12 = add i32 %8, -1, !dbg !7730
  call void @llvm.dbg.value(metadata i32 %12, metadata !7719, metadata !DIExpression()), !dbg !7722
  %13 = icmp eq i32 %12, 0, !dbg !7723
  br i1 %13, label %14, label %5, !dbg !7724, !llvm.loop !7731

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7733
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7734 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7738, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i32 %1, metadata !7739, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i32 %2, metadata !7740, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i8* %0, metadata !7741, metadata !DIExpression()), !dbg !7743
  %4 = trunc i32 %1 to i8, !dbg !7744
  call void @llvm.dbg.value(metadata i8 %4, metadata !7742, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i32 %2, metadata !7740, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i8* %0, metadata !7741, metadata !DIExpression()), !dbg !7743
  %5 = icmp eq i32 %2, 0, !dbg !7745
  br i1 %5, label %12, label %6, !dbg !7746

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7740, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.value(metadata i8* %8, metadata !7741, metadata !DIExpression()), !dbg !7743
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7747
  call void @llvm.dbg.value(metadata i8* %9, metadata !7741, metadata !DIExpression()), !dbg !7743
  store i8 %4, i8* %8, align 1, !dbg !7749
  %10 = add i32 %7, -1, !dbg !7750
  call void @llvm.dbg.value(metadata i32 %10, metadata !7740, metadata !DIExpression()), !dbg !7743
  %11 = icmp eq i32 %10, 0, !dbg !7745
  br i1 %11, label %12, label %6, !dbg !7746, !llvm.loop !7751

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7753
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #11 !dbg !7754 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7758, metadata !DIExpression()), !dbg !7764
  call void @llvm.dbg.value(metadata i32 %1, metadata !7759, metadata !DIExpression()), !dbg !7764
  call void @llvm.dbg.value(metadata i32 %2, metadata !7760, metadata !DIExpression()), !dbg !7764
  %4 = icmp eq i32 %2, 0, !dbg !7765
  br i1 %4, label %17, label %5, !dbg !7766

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7767

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7768
  call void @llvm.dbg.value(metadata i8* %9, metadata !7761, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata i32 %8, metadata !7760, metadata !DIExpression()), !dbg !7764
  call void @llvm.dbg.value(metadata i8* %9, metadata !7761, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7768
  %10 = load i8, i8* %9, align 1, !dbg !7769
  %11 = icmp eq i8 %10, %6, !dbg !7772
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7773
  call void @llvm.dbg.value(metadata i8* %12, metadata !7761, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.value(metadata i32 %13, metadata !7760, metadata !DIExpression()), !dbg !7764
  br i1 %15, label %16, label %7, !dbg !7773, !llvm.loop !7774

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7776

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7764
  ret i8* %19, !dbg !7777
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7778 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7780, metadata !DIExpression()), !dbg !7781
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !7782
  ret void, !dbg !7783
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7788, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata i32 %1, metadata !7789, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7790, metadata !DIExpression()), !dbg !7794
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7795
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7795
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7795
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7791, metadata !DIExpression()), !dbg !7794
  call void @llvm.dbg.value(metadata i32 %0, metadata !7793, metadata !DIExpression()), !dbg !7794
  %7 = icmp slt i32 %0, %1, !dbg !7796
  br i1 %7, label %8, label %22, !dbg !7799

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7793, metadata !DIExpression()), !dbg !7794
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !7800
  %11 = icmp eq i32 %10, 0, !dbg !7800
  br i1 %11, label %19, label %12, !dbg !7803

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !7804
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7806
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7806
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7808
  br i1 %15, label %19, label %16, !dbg !7809

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7810
  %18 = load i8*, i8** %17, align 4, !dbg !7810
  tail call void %14(i32 noundef %9, i8* noundef %18) #26, !dbg !7811
  br label %19, !dbg !7812

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7813
  call void @llvm.dbg.value(metadata i32 %20, metadata !7793, metadata !DIExpression()), !dbg !7794
  %21 = icmp eq i32 %20, %1, !dbg !7796
  br i1 %21, label %22, label %8, !dbg !7799, !llvm.loop !7814

22:                                               ; preds = %19, %3
  ret void, !dbg !7816
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !7817 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7819, metadata !DIExpression()), !dbg !7820
  %2 = shl nuw i32 1, %0, !dbg !7821
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !7824
  ret i32 %3, !dbg !7825
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !7826 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7828, metadata !DIExpression()), !dbg !7829
  %2 = shl nuw i32 1, %0, !dbg !7830
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !7833
  ret void, !dbg !7834
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7838, metadata !DIExpression()), !dbg !7839
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7840
  ret void, !dbg !7841
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7842 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7844, metadata !DIExpression()), !dbg !7845
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7846
  %3 = and i32 %2, %0, !dbg !7846
  %4 = icmp eq i32 %3, %0, !dbg !7847
  %5 = zext i1 %4 to i32, !dbg !7847
  ret i32 %5, !dbg !7848
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7849 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7851, metadata !DIExpression()), !dbg !7852
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !7853
  ret void, !dbg !7854
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7855 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7857, metadata !DIExpression()), !dbg !7858
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !7859
  ret void, !dbg !7860
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7861 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7863, metadata !DIExpression()), !dbg !7864
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !7865
  ret void, !dbg !7866
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !7867 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7869, metadata !DIExpression()), !dbg !7870
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !7871
  ret void, !dbg !7872
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !7873 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7875, metadata !DIExpression()), !dbg !7876
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !7877
  ret void, !dbg !7878
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7879 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7881, metadata !DIExpression()), !dbg !7882
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !7883
  ret void, !dbg !7884
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !7885 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7887, metadata !DIExpression()), !dbg !7888
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !7889
  ret void, !dbg !7890
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !7891 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7893, metadata !DIExpression()), !dbg !7894
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !7895
  ret void, !dbg !7896
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7897 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7899, metadata !DIExpression()), !dbg !7900
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !7901
  ret void, !dbg !7902
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7903 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7905, metadata !DIExpression()), !dbg !7906
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !7907
  ret void, !dbg !7908
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7909 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7911, metadata !DIExpression()), !dbg !7912
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !7913
  ret i32 0, !dbg !7914
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !757 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !761, metadata !DIExpression()), !dbg !7915
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #26, !dbg !7916
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #26, !dbg !7918
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #26, !dbg !7920
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #26, !dbg !7922
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #26, !dbg !7924
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #26, !dbg !7926
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #26, !dbg !7928
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #26, !dbg !7930
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #26, !dbg !7932
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #26, !dbg !7934
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #26, !dbg !7936
  ret void, !dbg !7938
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7939 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7941, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.value(metadata i32 0, metadata !7942, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.value(metadata i32 undef, metadata !7942, metadata !DIExpression()), !dbg !7943
  %2 = lshr i32 6684671, %0, !dbg !7944
  %3 = and i32 %2, 1, !dbg !7944
  %4 = or i32 %3, %0, !dbg !7946
  %5 = icmp eq i32 %4, 0, !dbg !7946
  br i1 %5, label %6, label %7, !dbg !7946

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.77, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.78, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.79, i32 0, i32 0), i32 noundef 123) #26, !dbg !7947
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.79, i32 0, i32 0), i32 noundef 123) #26, !dbg !7947
  unreachable, !dbg !7947

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !7952
  %9 = load i32, i32* %8, align 4, !dbg !7952
  call void @llvm.dbg.value(metadata i32 %9, metadata !7942, metadata !DIExpression()), !dbg !7943
  %10 = shl nuw i32 1, %0, !dbg !7953
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !7954
  tail call void @arch_irq_enable(i32 noundef %9) #26, !dbg !7955
  ret void, !dbg !7956
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7959, metadata !DIExpression()), !dbg !7960
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7961
  %3 = or i32 %2, %0, !dbg !7961
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7961
  ret void, !dbg !7962
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !7963 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7965, metadata !DIExpression()), !dbg !7966
  %2 = icmp slt i32 %0, 32, !dbg !7967
  br i1 %2, label %3, label %5, !dbg !7969

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !7970
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !7972
  br label %5, !dbg !7973

5:                                                ; preds = %1, %3
  ret void, !dbg !7974
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !7975 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7977, metadata !DIExpression()), !dbg !7978
  %2 = xor i32 %0, -1, !dbg !7979
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7979
  %4 = and i32 %3, %2, !dbg !7979
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7979
  ret void, !dbg !7980
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !7981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7985, metadata !DIExpression()), !dbg !7987
  call void @llvm.dbg.value(metadata i32 %1, metadata !7986, metadata !DIExpression()), !dbg !7987
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !7988

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !7989
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !7991
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !7992
  br label %11, !dbg !7993

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !7994
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !7995
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !7996
  br label %11, !dbg !7997

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !7998
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !7999
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !8000
  br label %11, !dbg !8001

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8002
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !8003
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !8004
  br label %11, !dbg !8005

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8006
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8007 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8009, metadata !DIExpression()), !dbg !8010
  %2 = xor i32 %0, -1, !dbg !8011
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8011
  %4 = and i32 %3, %2, !dbg !8011
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8011
  ret void, !dbg !8012
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8013 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8015, metadata !DIExpression()), !dbg !8016
  %2 = xor i32 %0, -1, !dbg !8017
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8017
  %4 = and i32 %3, %2, !dbg !8017
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8017
  ret void, !dbg !8018
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8019 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8021, metadata !DIExpression()), !dbg !8022
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8023
  %3 = or i32 %2, %0, !dbg !8023
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8023
  ret void, !dbg !8024
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8025 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8027, metadata !DIExpression()), !dbg !8028
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8029
  %3 = or i32 %2, %0, !dbg !8029
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8029
  ret void, !dbg !8030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #10 !dbg !8031 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8035, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8036, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.value(metadata i8* %2, metadata !8037, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !8038, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8040, metadata !DIExpression()), !dbg !8041
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8042
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8042
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8044
  br i1 %6, label %7, label %9, !dbg !8045

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8046
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8047
  store i8* %2, i8** %8, align 4, !dbg !8048
  br label %9, !dbg !8049

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8041
  ret i32 %10, !dbg !8050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !8051 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8053, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !8054, metadata !DIExpression()), !dbg !8056
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8055, metadata !DIExpression()), !dbg !8056
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8057
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8058
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8059
  store i8* null, i8** %3, align 4, !dbg !8060
  ret void, !dbg !8061
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !8062 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8064, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata i8* %1, metadata !8065, metadata !DIExpression()), !dbg !8069
  call void @llvm.dbg.value(metadata i8* %1, metadata !8066, metadata !DIExpression()), !dbg !8069
  %3 = bitcast i8* %1 to i32*, !dbg !8070
  %4 = load i32, i32* %3, align 4, !dbg !8070
  %5 = add i32 %4, -169, !dbg !8070
  %6 = icmp ult i32 %5, -121, !dbg !8070
  br i1 %6, label %15, label %7, !dbg !8072

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8073
  %9 = inttoptr i32 %8 to i32*, !dbg !8074
  call void @llvm.dbg.value(metadata i32* %9, metadata !8067, metadata !DIExpression()), !dbg !8069
  %10 = load volatile i32, i32* %9, align 4, !dbg !8075
  call void @llvm.dbg.value(metadata i32 %10, metadata !8068, metadata !DIExpression()), !dbg !8069
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8076
  %12 = bitcast i8* %11 to i32*, !dbg !8076
  %13 = load i32, i32* %12, align 4, !dbg !8076
  %14 = or i32 %13, %10, !dbg !8077
  call void @llvm.dbg.value(metadata i32 %14, metadata !8068, metadata !DIExpression()), !dbg !8069
  store volatile i32 %14, i32* %9, align 4, !dbg !8078
  br label %15, !dbg !8079

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8069
  ret i32 %16, !dbg !8080
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !8081 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8083, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.value(metadata i8* %1, metadata !8084, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.value(metadata i8* %1, metadata !8085, metadata !DIExpression()), !dbg !8088
  %3 = bitcast i8* %1 to i32*, !dbg !8089
  %4 = load i32, i32* %3, align 4, !dbg !8089
  %5 = add i32 %4, -169, !dbg !8089
  %6 = icmp ult i32 %5, -121, !dbg !8089
  br i1 %6, label %16, label %7, !dbg !8091

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8092
  %9 = inttoptr i32 %8 to i32*, !dbg !8093
  call void @llvm.dbg.value(metadata i32* %9, metadata !8086, metadata !DIExpression()), !dbg !8088
  %10 = load volatile i32, i32* %9, align 4, !dbg !8094
  call void @llvm.dbg.value(metadata i32 %10, metadata !8087, metadata !DIExpression()), !dbg !8088
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8095
  %12 = bitcast i8* %11 to i32*, !dbg !8095
  %13 = load i32, i32* %12, align 4, !dbg !8095
  %14 = xor i32 %13, -1, !dbg !8096
  %15 = and i32 %10, %14, !dbg !8097
  call void @llvm.dbg.value(metadata i32 %15, metadata !8087, metadata !DIExpression()), !dbg !8088
  store volatile i32 %15, i32* %9, align 4, !dbg !8098
  br label %16, !dbg !8099

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8088
  ret i32 %17, !dbg !8100
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8101 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8103, metadata !DIExpression()), !dbg !8111
  call void @llvm.dbg.value(metadata i8* %1, metadata !8104, metadata !DIExpression()), !dbg !8111
  call void @llvm.dbg.value(metadata i32* %2, metadata !8105, metadata !DIExpression()), !dbg !8111
  call void @llvm.dbg.value(metadata i8* %1, metadata !8106, metadata !DIExpression()), !dbg !8111
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8112
  call void @llvm.dbg.value(metadata i32 %4, metadata !8107, metadata !DIExpression()), !dbg !8111
  call void @llvm.dbg.value(metadata i32 undef, metadata !8108, metadata !DIExpression()), !dbg !8111
  call void @llvm.dbg.value(metadata i32 undef, metadata !8109, metadata !DIExpression()), !dbg !8111
  call void @llvm.dbg.value(metadata i32 %4, metadata !8110, metadata !DIExpression()), !dbg !8111
  %5 = bitcast i8* %1 to i32*, !dbg !8113
  %6 = load i32, i32* %5, align 4, !dbg !8113
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8114

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #24, !dbg !8115
  call void @llvm.dbg.value(metadata i32 %8, metadata !8108, metadata !DIExpression()), !dbg !8111
  br label %19, !dbg !8116

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #24, !dbg !8118
  call void @llvm.dbg.value(metadata i32 %10, metadata !8109, metadata !DIExpression()), !dbg !8111
  br label %19, !dbg !8119

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #26, !dbg !8120
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #24, !dbg !8121
  br label %19, !dbg !8122

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #26, !dbg !8123
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #24, !dbg !8124
  br label %19, !dbg !8125

17:                                               ; preds = %3
  br label %19, !dbg !8126

18:                                               ; preds = %3
  br label %19, !dbg !8127

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8128
  br label %21, !dbg !8129

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8111
  ret i32 %22, !dbg !8129
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !8130 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8132, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i8* %1, metadata !8133, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i8* %2, metadata !8134, metadata !DIExpression()), !dbg !8140
  call void @llvm.dbg.value(metadata i8* %1, metadata !8135, metadata !DIExpression()), !dbg !8140
  %4 = bitcast i8* %1 to i32*, !dbg !8141
  %5 = load i32, i32* %4, align 4, !dbg !8141
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !8142
  call void @llvm.dbg.value(metadata i32 %6, metadata !8139, metadata !DIExpression()), !dbg !8140
  %7 = icmp slt i32 %6, 0, !dbg !8143
  br i1 %7, label %22, label %8, !dbg !8145

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8135, metadata !DIExpression()), !dbg !8140
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8146
  %10 = bitcast i8* %9 to i32*, !dbg !8146
  %11 = load i32, i32* %10, align 4, !dbg !8146
  %12 = lshr i32 %11, 16, !dbg !8146
  %13 = and i32 %12, 7, !dbg !8146
  %14 = lshr i32 %11, 8, !dbg !8147
  %15 = and i32 %14, 31, !dbg !8147
  %16 = shl i32 %13, %15, !dbg !8148
  call void @llvm.dbg.value(metadata i32 %16, metadata !8138, metadata !DIExpression()), !dbg !8140
  %17 = and i32 %11, 255, !dbg !8149
  %18 = or i32 %17, 1073887232, !dbg !8150
  %19 = inttoptr i32 %18 to i32*, !dbg !8151
  call void @llvm.dbg.value(metadata i32* %19, metadata !8136, metadata !DIExpression()), !dbg !8140
  %20 = load volatile i32, i32* %19, align 4, !dbg !8152
  call void @llvm.dbg.value(metadata i32 %20, metadata !8137, metadata !DIExpression()), !dbg !8140
  %21 = or i32 %16, %20, !dbg !8153
  call void @llvm.dbg.value(metadata i32 %21, metadata !8137, metadata !DIExpression()), !dbg !8140
  store volatile i32 %21, i32* %19, align 4, !dbg !8154
  br label %22, !dbg !8155

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8140
  ret i32 %23, !dbg !8156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #4 !dbg !8157 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8161, metadata !DIExpression()), !dbg !8163
  call void @llvm.dbg.value(metadata i32 0, metadata !8162, metadata !DIExpression()), !dbg !8163
  %2 = add i32 %0, -1, !dbg !8164
  %3 = icmp ult i32 %2, 6, !dbg !8164
  br i1 %3, label %4, label %7, !dbg !8164

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8164
  %6 = load i32, i32* %5, align 4, !dbg !8164
  call void @llvm.dbg.value(metadata i32 %6, metadata !8162, metadata !DIExpression()), !dbg !8163
  br label %7, !dbg !8165

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8163
  ret i32 %8, !dbg !8166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !8167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8171, metadata !DIExpression()), !dbg !8173
  call void @llvm.dbg.value(metadata i32 %1, metadata !8172, metadata !DIExpression()), !dbg !8173
  %3 = udiv i32 %0, %1, !dbg !8174
  ret i32 %3, !dbg !8175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !8176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8180, metadata !DIExpression()), !dbg !8184
  call void @llvm.dbg.value(metadata i32 8, metadata !8181, metadata !DIExpression()), !dbg !8184
  call void @llvm.dbg.value(metadata i32 84, metadata !8182, metadata !DIExpression()), !dbg !8184
  call void @llvm.dbg.value(metadata i32 %1, metadata !8183, metadata !DIExpression()), !dbg !8184
  %3 = mul i32 %0, 84, !dbg !8185
  %4 = shl nsw i32 %1, 3, !dbg !8186
  %5 = udiv i32 %3, %4, !dbg !8187
  ret i32 %5, !dbg !8188
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8189 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8191, metadata !DIExpression()), !dbg !8194
  tail call void @config_enable_default_clocks() #26, !dbg !8195
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !8196
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !8196
  %4 = lshr i32 %3, 4, !dbg !8196
  %5 = and i32 %4, 15, !dbg !8196
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8196
  %7 = load i8, i8* %6, align 1, !dbg !8196
  %8 = zext i8 %7 to i32, !dbg !8196
  %9 = lshr i32 %2, %8, !dbg !8196
  call void @llvm.dbg.value(metadata i32 %9, metadata !8192, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8193, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8194
  %10 = icmp ult i32 %9, 84000000, !dbg !8197
  br i1 %10, label %11, label %13, !dbg !8199

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #26, !dbg !8200
  br label %13, !dbg !8202

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !8203
  tail call fastcc void @set_up_plls() #24, !dbg !8204
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8205
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !8208
  br label %14, !dbg !8209

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8210
  %16 = icmp eq i32 %15, 8, !dbg !8211
  br i1 %16, label %17, label %14, !dbg !8209, !llvm.loop !8212

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8214
  br i1 %18, label %19, label %21, !dbg !8216

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #26, !dbg !8217
  br label %21, !dbg !8219

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8220
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !8221
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !8222
  ret i32 0, !dbg !8223
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !8224 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8226
  %2 = and i32 %1, 240, !dbg !8226
  ret i32 %2, !dbg !8227
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !8228 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !8229
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !8234
  br label %1, !dbg !8235

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !8236
  %3 = icmp eq i32 %2, 1, !dbg !8237
  br i1 %3, label %4, label %1, !dbg !8235, !llvm.loop !8238

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !8240
  br label %5, !dbg !8243

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !8244
  %7 = icmp eq i32 %6, 1, !dbg !8245
  br i1 %7, label %8, label %5, !dbg !8243, !llvm.loop !8246

8:                                                ; preds = %5
  ret void, !dbg !8248
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8249 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8250
  %2 = icmp eq i32 %1, 8, !dbg !8252
  br i1 %2, label %3, label %4, !dbg !8253

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8254
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !8256
  br label %4, !dbg !8257

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !8258
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8259
  %6 = and i32 %5, -196609, !dbg !8259
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8259
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8260
  %8 = and i32 %7, -251658241, !dbg !8260
  %9 = or i32 %8, 134217728, !dbg !8260
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8260
  tail call void @config_pll_sysclock() #26, !dbg !8261
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !8262
  br label %10, !dbg !8263

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !8264
  %12 = icmp eq i32 %11, 1, !dbg !8265
  br i1 %12, label %13, label %10, !dbg !8263, !llvm.loop !8266

13:                                               ; preds = %10
  ret void, !dbg !8268
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !8269 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8271, metadata !DIExpression()), !dbg !8272
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8273
  %2 = and i32 %1, -241, !dbg !8273
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8273
  ret void, !dbg !8274
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !8275 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8277, metadata !DIExpression()), !dbg !8278
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8279
  %3 = and i32 %2, -4, !dbg !8279
  %4 = or i32 %3, %0, !dbg !8279
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8279
  ret void, !dbg !8280
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !8281 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8282
  %2 = and i32 %1, 12, !dbg !8282
  ret i32 %2, !dbg !8283
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !8284 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8286, metadata !DIExpression()), !dbg !8287
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8288
  %2 = and i32 %1, -7169, !dbg !8288
  %3 = or i32 %2, 4096, !dbg !8288
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8288
  ret void, !dbg !8289
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !8290 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8292, metadata !DIExpression()), !dbg !8293
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8294
  %2 = and i32 %1, -57345, !dbg !8294
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8294
  ret void, !dbg !8295
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !8296 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8297
  %2 = icmp eq i32 %1, 1, !dbg !8299
  br i1 %2, label %7, label %3, !dbg !8300

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !8301
  br label %4, !dbg !8303

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8304
  %6 = icmp eq i32 %5, 1, !dbg !8305
  br i1 %6, label %7, label %4, !dbg !8303, !llvm.loop !8306

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !8308
  br label %8, !dbg !8309

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8310
  %10 = icmp eq i32 %9, 0, !dbg !8311
  br i1 %10, label %11, label %8, !dbg !8309, !llvm.loop !8312

11:                                               ; preds = %8
  ret void, !dbg !8314
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !8315 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8316
  %2 = and i32 %1, -16777217, !dbg !8316
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8316
  ret void, !dbg !8317
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !8318 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8319
  %2 = or i32 %1, 16777216, !dbg !8319
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8319
  ret void, !dbg !8320
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !8321 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8322
  %2 = lshr i32 %1, 25, !dbg !8323
  %3 = and i32 %2, 1, !dbg !8323
  ret i32 %3, !dbg !8324
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !8325 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8326
  %2 = lshr i32 %1, 1, !dbg !8327
  %3 = and i32 %2, 1, !dbg !8327
  ret i32 %3, !dbg !8328
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !8329 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8330
  %2 = or i32 %1, 1, !dbg !8330
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8330
  ret void, !dbg !8331
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !8332 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8333
  %2 = and i32 %1, -262145, !dbg !8333
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8333
  ret void, !dbg !8334
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !8335 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8336
  %2 = or i32 %1, 65536, !dbg !8336
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8336
  ret void, !dbg !8337
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !8338 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8339
  %2 = lshr i32 %1, 17, !dbg !8340
  %3 = and i32 %2, 1, !dbg !8340
  ret i32 %3, !dbg !8341
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !8342 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8343
  %2 = or i32 %1, 1, !dbg !8343
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8343
  ret void, !dbg !8344
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !8345 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8346
  %2 = lshr i32 %1, 1, !dbg !8347
  %3 = and i32 %2, 1, !dbg !8347
  ret i32 %3, !dbg !8348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #4 !dbg !8349 {
  ret i32 16000000, !dbg !8351
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !8355 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !8356
  ret void, !dbg !8357
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !8358 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8362, metadata !DIExpression()), !dbg !8366
  call void @llvm.dbg.value(metadata i32 8, metadata !8363, metadata !DIExpression()), !dbg !8366
  call void @llvm.dbg.value(metadata i32 84, metadata !8364, metadata !DIExpression()), !dbg !8366
  call void @llvm.dbg.value(metadata i32 0, metadata !8365, metadata !DIExpression()), !dbg !8366
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8367
  %2 = and i32 %1, -4227072, !dbg !8367
  %3 = or i32 %2, 4199688, !dbg !8367
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8367
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8368
  %5 = and i32 %4, -196609, !dbg !8368
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8368
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8369
  %7 = and i32 %6, -1879048193, !dbg !8369
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8369
  ret void, !dbg !8370
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #16 !dbg !8371 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !8372
  ret void, !dbg !8373
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #16 !dbg !8374 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8377, metadata !DIExpression()), !dbg !8379
  %2 = bitcast i32* %1 to i8*, !dbg !8380
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8380
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8378, metadata !DIExpression()), !dbg !8381
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8382
  %4 = or i32 %3, 268435456, !dbg !8382
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8382
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8383
  %6 = and i32 %5, 268435456, !dbg !8383
  store volatile i32 %6, i32* %1, align 4, !dbg !8384
  %7 = load volatile i32, i32* %1, align 4, !dbg !8385
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8386
  ret void, !dbg !8386
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8387 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8389, metadata !DIExpression()), !dbg !8390
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !8391
  br i1 %2, label %3, label %4, !dbg !8393

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !8394
  br label %4, !dbg !8395

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8390
  ret i32 %5, !dbg !8396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8397 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8402, metadata !DIExpression()), !dbg !8403
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8404, !srcloc !8406
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !8407
  ret i1 %1, !dbg !8408
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8409 {
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #26, !dbg !8410
  ret void, !dbg !8411
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8412 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8414, metadata !DIExpression()), !dbg !8415
  %2 = icmp eq i32 %0, 10, !dbg !8416
  br i1 %2, label %3, label %4, !dbg !8418

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !8419
  br label %4, !dbg !8421

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8422
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !8423
  ret i32 %0, !dbg !8424
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8425 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8428, metadata !DIExpression()), !dbg !8430
  call void @llvm.dbg.value(metadata i8 %0, metadata !8429, metadata !DIExpression()), !dbg !8430
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8431, !srcloc !8433
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !8434
  ret void, !dbg !8435
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8436 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8438, metadata !DIExpression()), !dbg !8441
  call void @llvm.dbg.value(metadata i8 %0, metadata !8439, metadata !DIExpression()), !dbg !8441
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8442
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8440, metadata !DIExpression()), !dbg !8441
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8443
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8443
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #26, !dbg !8444
  ret void, !dbg !8445
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8446 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8448, metadata !DIExpression()), !dbg !8449
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #26, !dbg !8450
  ret i1 %1, !dbg !8451
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #4 !dbg !8452 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8501, metadata !DIExpression()), !dbg !8504
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8502, metadata !DIExpression()), !dbg !8504
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8503, metadata !DIExpression()), !dbg !8504
  ret void, !dbg !8505
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8506 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8508, metadata !DIExpression()), !dbg !8513
  call void @llvm.dbg.value(metadata i8 %1, metadata !8509, metadata !DIExpression()), !dbg !8513
  call void @llvm.dbg.value(metadata i32 %2, metadata !8510, metadata !DIExpression()), !dbg !8513
  %5 = bitcast i32* %4 to i8*, !dbg !8514
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8514
  call void @llvm.dbg.value(metadata i32* %4, metadata !8512, metadata !DIExpression(DW_OP_deref)), !dbg !8513
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !8515
  call void @llvm.dbg.value(metadata i32 %6, metadata !8511, metadata !DIExpression()), !dbg !8513
  %7 = icmp eq i32 %6, 0, !dbg !8516
  br i1 %7, label %8, label %31, !dbg !8518

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8511, metadata !DIExpression()), !dbg !8513
  %9 = and i32 %2, 131072, !dbg !8519
  %10 = icmp eq i32 %9, 0, !dbg !8521
  br i1 %10, label %28, label %11, !dbg !8522

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8523
  %13 = icmp eq i32 %12, 0, !dbg !8526
  br i1 %13, label %18, label %14, !dbg !8527

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8528
  %16 = shl nuw i32 1, %15, !dbg !8528
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !8530
  br label %25, !dbg !8531

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8532
  %20 = icmp eq i32 %19, 0, !dbg !8534
  %21 = zext i8 %1 to i32, !dbg !8513
  br i1 %20, label %25, label %22, !dbg !8535

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8536
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !8538
  br label %25, !dbg !8539

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8540
  %27 = load i32, i32* %4, align 4, !dbg !8541
  call void @llvm.dbg.value(metadata i32 %30, metadata !8512, metadata !DIExpression()), !dbg !8513
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !8542
  br label %31, !dbg !8543

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8540
  %30 = load i32, i32* %4, align 4, !dbg !8541
  call void @llvm.dbg.value(metadata i32 %30, metadata !8512, metadata !DIExpression()), !dbg !8513
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !8542
  call void @llvm.dbg.value(metadata i32 0, metadata !8511, metadata !DIExpression()), !dbg !8513
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8544
  ret i32 %6, !dbg !8544
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !8545 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8549, metadata !DIExpression()), !dbg !8554
  call void @llvm.dbg.value(metadata i32* %1, metadata !8550, metadata !DIExpression()), !dbg !8554
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8555
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8555
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8555
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8551, metadata !DIExpression()), !dbg !8554
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8556
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8556
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8556
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8553, metadata !DIExpression()), !dbg !8554
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !8557
  store i32 %9, i32* %1, align 4, !dbg !8558
  ret i32 0, !dbg !8559
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !8560 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8562, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i32 %1, metadata !8563, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i32 %2, metadata !8564, metadata !DIExpression()), !dbg !8568
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8569
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8569
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8569
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8565, metadata !DIExpression()), !dbg !8568
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8570
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8570
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8570
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8566, metadata !DIExpression()), !dbg !8568
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !8571
  call void @llvm.dbg.value(metadata i32 %10, metadata !8567, metadata !DIExpression()), !dbg !8568
  %11 = xor i32 %1, -1, !dbg !8572
  %12 = and i32 %10, %11, !dbg !8573
  %13 = and i32 %2, %1, !dbg !8574
  %14 = or i32 %12, %13, !dbg !8575
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !8576
  ret i32 0, !dbg !8577
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !8578 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8580, metadata !DIExpression()), !dbg !8584
  call void @llvm.dbg.value(metadata i32 %1, metadata !8581, metadata !DIExpression()), !dbg !8584
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8585
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8585
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8585
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8582, metadata !DIExpression()), !dbg !8584
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8586
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8586
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8586
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8583, metadata !DIExpression()), !dbg !8584
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8587
  store volatile i32 %1, i32* %9, align 4, !dbg !8587
  ret i32 0, !dbg !8588
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !8589 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8591, metadata !DIExpression()), !dbg !8595
  call void @llvm.dbg.value(metadata i32 %1, metadata !8592, metadata !DIExpression()), !dbg !8595
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8596
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8596
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8596
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8593, metadata !DIExpression()), !dbg !8595
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8597
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8597
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8597
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8594, metadata !DIExpression()), !dbg !8595
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !8598
  ret i32 0, !dbg !8599
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !8600 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8602, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i32 %1, metadata !8603, metadata !DIExpression()), !dbg !8606
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8607
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8607
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8607
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8604, metadata !DIExpression()), !dbg !8606
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8608
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8608
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8608
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8605, metadata !DIExpression()), !dbg !8606
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8609
  %10 = load volatile i32, i32* %9, align 4, !dbg !8609
  %11 = xor i32 %10, %1, !dbg !8609
  store volatile i32 %11, i32* %9, align 4, !dbg !8609
  ret i32 0, !dbg !8610
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8611 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8613, metadata !DIExpression()), !dbg !8623
  call void @llvm.dbg.value(metadata i8 %1, metadata !8614, metadata !DIExpression()), !dbg !8623
  call void @llvm.dbg.value(metadata i32 %2, metadata !8615, metadata !DIExpression()), !dbg !8623
  call void @llvm.dbg.value(metadata i32 %3, metadata !8616, metadata !DIExpression()), !dbg !8623
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8624
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8624
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8624
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8617, metadata !DIExpression()), !dbg !8623
  call void @llvm.dbg.value(metadata i8* undef, metadata !8618, metadata !DIExpression()), !dbg !8623
  call void @llvm.dbg.value(metadata i32 0, metadata !8620, metadata !DIExpression()), !dbg !8623
  call void @llvm.dbg.value(metadata i32 0, metadata !8621, metadata !DIExpression()), !dbg !8623
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8625

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8626
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !8630
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8631
  %12 = load i32, i32* %11, align 4, !dbg !8631
  %13 = icmp eq i32 %10, %12, !dbg !8632
  br i1 %13, label %14, label %29, !dbg !8633

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #26, !dbg !8634
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #26, !dbg !8636
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #26, !dbg !8637
  br label %29, !dbg !8638

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8639
  %17 = load i8*, i8** %16, align 4, !dbg !8639
  call void @llvm.dbg.value(metadata i8* %17, metadata !8618, metadata !DIExpression()), !dbg !8623
  %18 = zext i8 %1 to i32, !dbg !8640
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #26, !dbg !8642
  %20 = icmp eq i32 %19, 0, !dbg !8643
  br i1 %20, label %21, label %29, !dbg !8644

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8645
  %23 = load i32, i32* %22, align 4, !dbg !8645
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !8646
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8647

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8620, metadata !DIExpression()), !dbg !8623
  br label %27, !dbg !8648

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8620, metadata !DIExpression()), !dbg !8623
  br label %27, !dbg !8650

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8620, metadata !DIExpression()), !dbg !8623
  br label %27, !dbg !8651

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8623
  call void @llvm.dbg.value(metadata i32 %28, metadata !8620, metadata !DIExpression()), !dbg !8623
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #26, !dbg !8652
  tail call void @stm32_exti_enable(i32 noundef %18) #26, !dbg !8653
  br label %29, !dbg !8653

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8623
  call void @llvm.dbg.value(metadata i32 %30, metadata !8621, metadata !DIExpression()), !dbg !8623
  call void @llvm.dbg.label(metadata !8622), !dbg !8654
  ret i32 %30, !dbg !8655
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !8656 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8658, metadata !DIExpression()), !dbg !8662
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8659, metadata !DIExpression()), !dbg !8662
  call void @llvm.dbg.value(metadata i1 %2, metadata !8660, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8662
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8663
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8663
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8663
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8661, metadata !DIExpression()), !dbg !8662
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8664
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !8665
  ret i32 %8, !dbg !8666
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !8667 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8673, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8674, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i1 %2, metadata !8675, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8676
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !8677
  br i1 %4, label %5, label %6, !dbg !8680

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 42) #26, !dbg !8681
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0)) #26, !dbg !8681
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 42) #26, !dbg !8681
  unreachable, !dbg !8681

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !8683
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !8683
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !8683
  br i1 %9, label %10, label %11, !dbg !8686

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 43) #26, !dbg !8687
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i32 0, i32 0)) #26, !dbg !8687
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 43) #26, !dbg !8687
  unreachable, !dbg !8687

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !8689
  br i1 %12, label %18, label %13, !dbg !8691

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8692
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !8695
  %16 = or i1 %15, %2, !dbg !8696
  %17 = select i1 %16, i32 0, i32 -22, !dbg !8696
  br i1 %2, label %19, label %21, !dbg !8696

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !8697

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8698
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !8701
  br label %21, !dbg !8702

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !8676
  ret i32 %22, !dbg !8703
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8704 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8708, metadata !DIExpression()), !dbg !8709
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8710
  %3 = icmp eq %struct._snode* %2, null, !dbg !8710
  ret i1 %3, !dbg !8710
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #12 !dbg !8711 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8715, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8716, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8717, metadata !DIExpression()), !dbg !8719
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8720
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8718, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8717, metadata !DIExpression()), !dbg !8719
  %4 = icmp eq %struct._snode* %3, null, !dbg !8722
  br i1 %4, label %15, label %5, !dbg !8720

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8718, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8717, metadata !DIExpression()), !dbg !8719
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8724
  br i1 %6, label %9, label %11, !dbg !8727

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8718, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8717, metadata !DIExpression()), !dbg !8719
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8724
  br i1 %8, label %9, label %11, !dbg !8727, !llvm.loop !8728

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !8729
  br label %15, !dbg !8729

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8718, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8717, metadata !DIExpression()), !dbg !8719
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !8722
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8718, metadata !DIExpression()), !dbg !8719
  %14 = icmp eq %struct._snode* %13, null, !dbg !8722
  br i1 %14, label %15, label %7, !dbg !8720, !llvm.loop !8728

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #10 !dbg !8732 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8736, metadata !DIExpression()), !dbg !8738
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8737, metadata !DIExpression()), !dbg !8738
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8739
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !8739
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !8739
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !8740
  %5 = icmp eq %struct._snode* %4, null, !dbg !8740
  br i1 %5, label %6, label %8, !dbg !8739

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8742
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !8742
  br label %8, !dbg !8742

8:                                                ; preds = %6, %2
  ret void, !dbg !8739
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8744 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8748, metadata !DIExpression()), !dbg !8749
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8750
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8750
  ret %struct._snode* %3, !dbg !8751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8752 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8756, metadata !DIExpression()), !dbg !8758
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8757, metadata !DIExpression()), !dbg !8758
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8759
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8760
  ret void, !dbg !8761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8762 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8764, metadata !DIExpression()), !dbg !8766
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8765, metadata !DIExpression()), !dbg !8766
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8767
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8768
  ret void, !dbg !8769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8770 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8772, metadata !DIExpression()), !dbg !8773
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8774
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8774
  ret %struct._snode* %3, !dbg !8775
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8776 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8778, metadata !DIExpression()), !dbg !8780
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8779, metadata !DIExpression()), !dbg !8780
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8781
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8782
  ret void, !dbg !8783
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #10 !dbg !8784 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8788, metadata !DIExpression()), !dbg !8791
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8789, metadata !DIExpression()), !dbg !8791
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8790, metadata !DIExpression()), !dbg !8791
  %4 = icmp eq %struct._snode* %1, null, !dbg !8792
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !8794
  br i1 %4, label %6, label %11, !dbg !8795

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !8796
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !8798
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8798
  br i1 %8, label %9, label %15, !dbg !8796

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8800
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !8800
  br label %15, !dbg !8800

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !8802
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !8804
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8804
  br i1 %13, label %14, label %15, !dbg !8802

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !8806
  br label %15, !dbg !8806

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !8795
  ret void, !dbg !8795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !8808 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8812, metadata !DIExpression()), !dbg !8813
  %2 = icmp eq %struct._snode* %0, null, !dbg !8814
  br i1 %2, label %5, label %3, !dbg !8814

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !8814
  br label %5, !dbg !8814

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8814
  ret %struct._snode* %6, !dbg !8814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8815 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8817, metadata !DIExpression()), !dbg !8818
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !8819
  ret %struct._snode* %2, !dbg !8819
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !8820 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8822, metadata !DIExpression()), !dbg !8823
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8824
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8824
  ret %struct._snode* %3, !dbg !8825
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !8826 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8828, metadata !DIExpression()), !dbg !8831
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !8832, !range !8833
  call void @llvm.dbg.value(metadata i32 %2, metadata !8829, metadata !DIExpression()), !dbg !8831
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !8834
  call void @llvm.dbg.value(metadata i32 %3, metadata !8830, metadata !DIExpression()), !dbg !8831
  ret i32 %3, !dbg !8835
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !8836 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8838, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i8* %1, metadata !8839, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.value(metadata i8* %1, metadata !8840, metadata !DIExpression()), !dbg !8841
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !8842
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !8842
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8843
  %6 = bitcast i8* %5 to %struct.device**, !dbg !8843
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !8843
  %8 = shl nuw i32 1, %0, !dbg !8844
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !8845
  ret void, !dbg !8846
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8847 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !8851, metadata !DIExpression()), !dbg !8857
  call void @llvm.dbg.value(metadata i32 %1, metadata !8852, metadata !DIExpression()), !dbg !8857
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8853, metadata !DIExpression()), !dbg !8857
  %4 = bitcast i64* %3 to i8*, !dbg !8858
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !8858
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !8855, metadata !DIExpression()), !dbg !8857
  store i64 70368744177732, i64* %3, align 8, !dbg !8859
  call void @llvm.dbg.value(metadata i64* %3, metadata !8855, metadata !DIExpression(DW_OP_deref)), !dbg !8857
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !8860
  call void @llvm.dbg.value(metadata i32 %5, metadata !8856, metadata !DIExpression()), !dbg !8857
  %6 = icmp eq i32 %5, 0, !dbg !8861
  br i1 %6, label %7, label %8, !dbg !8863

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !8864
  br label %8, !dbg !8865

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !8866
  ret void, !dbg !8866
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !8867 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8869, metadata !DIExpression()), !dbg !8872
  call void @llvm.dbg.value(metadata i8* %0, metadata !8870, metadata !DIExpression()), !dbg !8872
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !8873
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !8871, metadata !DIExpression()), !dbg !8872
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !8874
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !8874
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #26, !dbg !8875
  ret i32 %5, !dbg !8876
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8877 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8879, metadata !DIExpression()), !dbg !8882
  call void @llvm.dbg.value(metadata i32 %1, metadata !8880, metadata !DIExpression()), !dbg !8882
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !8883
  call void @llvm.dbg.value(metadata i32 %3, metadata !8881, metadata !DIExpression()), !dbg !8882
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !8884
  ret void, !dbg !8885
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #4 !dbg !8886 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8890, metadata !DIExpression()), !dbg !8891
  %2 = sdiv i32 %0, 4, !dbg !8892
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !8893
  %6 = add nsw i32 %5, 16, !dbg !8894
  %7 = shl i32 15, %6, !dbg !8895
  %8 = or i32 %7, %2, !dbg !8896
  ret i32 %8, !dbg !8897
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8898 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8902, metadata !DIExpression()), !dbg !8904
  call void @llvm.dbg.value(metadata i32 %1, metadata !8903, metadata !DIExpression()), !dbg !8904
  %3 = and i32 %1, 255, !dbg !8905
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !8905
  %5 = load volatile i32, i32* %4, align 4, !dbg !8905
  %6 = lshr i32 %1, 16, !dbg !8905
  %7 = xor i32 %6, -1, !dbg !8905
  %8 = and i32 %5, %7, !dbg !8905
  call void @llvm.dbg.value(metadata i32 %6, metadata !8906, metadata !DIExpression()) #23, !dbg !8910
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !8912, !srcloc !8913
  call void @llvm.dbg.value(metadata i32 %9, metadata !8909, metadata !DIExpression()) #23, !dbg !8910
  call void @llvm.dbg.value(metadata i32 %9, metadata !8914, metadata !DIExpression()) #23, !dbg !8919
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !8921, !range !7222
  %11 = shl i32 %0, %10, !dbg !8905
  %12 = or i32 %11, %8, !dbg !8905
  store volatile i32 %12, i32* %4, align 4, !dbg !8905
  ret void, !dbg !8922
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8923 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8927, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !8928, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata i32 %2, metadata !8929, metadata !DIExpression()), !dbg !8932
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !8933
  %5 = icmp eq %struct._snode* %4, null, !dbg !8933
  br i1 %5, label %24, label %6, !dbg !8933

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !8935
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8931, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !8930, metadata !DIExpression()), !dbg !8932
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !8936
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !8936
  %12 = load i32, i32* %11, align 4, !dbg !8936
  %13 = and i32 %12, %2, !dbg !8940
  %14 = icmp eq i32 %13, 0, !dbg !8940
  br i1 %14, label %22, label %15, !dbg !8941

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !8942
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !8942
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !8942
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !8942
  br i1 %19, label %20, label %21, !dbg !8946

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.90, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.91, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 77) #26, !dbg !8947
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i32 0, i32 0)) #26, !dbg !8947
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i32 0, i32 0), i32 noundef 77) #26, !dbg !8947
  unreachable, !dbg !8947

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #26, !dbg !8949
  br label %22, !dbg !8950

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8930, metadata !DIExpression()), !dbg !8932
  %23 = icmp eq %struct._snode* %8, null, !dbg !8951
  br i1 %23, label %24, label %6, !dbg !8951

24:                                               ; preds = %22, %3
  ret void, !dbg !8952
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !8953 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8955, metadata !DIExpression()), !dbg !8956
  %2 = and i32 %0, 255, !dbg !8957
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !8957
  %4 = load volatile i32, i32* %3, align 4, !dbg !8957
  %5 = lshr i32 %0, 16, !dbg !8957
  %6 = and i32 %4, %5, !dbg !8957
  call void @llvm.dbg.value(metadata i32 %5, metadata !8906, metadata !DIExpression()) #23, !dbg !8958
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !8960, !srcloc !8913
  call void @llvm.dbg.value(metadata i32 %7, metadata !8909, metadata !DIExpression()) #23, !dbg !8958
  call void @llvm.dbg.value(metadata i32 %7, metadata !8914, metadata !DIExpression()) #23, !dbg !8961
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !8963, !range !7222
  %9 = lshr i32 %6, %8, !dbg !8964
  ret i32 %9, !dbg !8965
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !8966 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8971, metadata !DIExpression()), !dbg !8973
  call void @llvm.dbg.value(metadata i32 %1, metadata !8972, metadata !DIExpression()), !dbg !8973
  %3 = shl i32 %1, 16, !dbg !8974
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !8974
  store volatile i32 %3, i32* %4, align 4, !dbg !8974
  ret void, !dbg !8975
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !8976 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8980, metadata !DIExpression()), !dbg !8981
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8982
  %3 = load volatile i32, i32* %2, align 4, !dbg !8982
  ret i32 %3, !dbg !8983
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !8984 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8986, metadata !DIExpression()), !dbg !8988
  call void @llvm.dbg.value(metadata i32 %1, metadata !8987, metadata !DIExpression()), !dbg !8988
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8989
  store volatile i32 %1, i32* %3, align 4, !dbg !8989
  ret void, !dbg !8990
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !8991 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8993, metadata !DIExpression()), !dbg !8994
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !8995
  %3 = load volatile i32, i32* %2, align 4, !dbg !8995
  ret i32 %3, !dbg !8996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #10 !dbg !8997 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9001, metadata !DIExpression()), !dbg !9003
  call void @llvm.dbg.value(metadata i32* %1, metadata !9002, metadata !DIExpression()), !dbg !9003
  %3 = and i32 %0, 131072, !dbg !9004
  %4 = icmp eq i32 %3, 0, !dbg !9006
  br i1 %4, label %22, label %5, !dbg !9007

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9008
  %6 = and i32 %0, 2, !dbg !9010
  %7 = icmp eq i32 %6, 0, !dbg !9012
  br i1 %7, label %11, label %8, !dbg !9013

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9014
  %10 = icmp eq i32 %9, 0, !dbg !9014
  br i1 %10, label %33, label %11, !dbg !9017

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9018
  store i32 %12, i32* %1, align 4, !dbg !9018
  %13 = and i32 %0, 16, !dbg !9019
  %14 = icmp eq i32 %13, 0, !dbg !9021
  br i1 %14, label %17, label %15, !dbg !9022

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9023
  br label %31, !dbg !9025

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9026
  %19 = icmp eq i32 %18, 0, !dbg !9028
  br i1 %19, label %33, label %20, !dbg !9029

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9030
  br label %31, !dbg !9032

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9033
  %24 = icmp eq i32 %23, 0, !dbg !9035
  br i1 %24, label %31, label %25, !dbg !9036

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9037
  %27 = icmp eq i32 %26, 0, !dbg !9040
  br i1 %27, label %28, label %31, !dbg !9041

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9042
  br label %33, !dbg !9043

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9003
  ret i32 %34, !dbg !9043
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9044 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9048, metadata !DIExpression()), !dbg !9059
  call void @llvm.dbg.value(metadata i32 %1, metadata !9049, metadata !DIExpression()), !dbg !9059
  call void @llvm.dbg.value(metadata i32 %2, metadata !9050, metadata !DIExpression()), !dbg !9059
  call void @llvm.dbg.value(metadata i32 %3, metadata !9051, metadata !DIExpression()), !dbg !9059
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9060
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9060
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9060
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9052, metadata !DIExpression()), !dbg !9059
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9061
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9061
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9061
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9053, metadata !DIExpression()), !dbg !9059
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !9062
  call void @llvm.dbg.value(metadata i32 %11, metadata !9054, metadata !DIExpression()), !dbg !9059
  %12 = and i32 %2, 48, !dbg !9063
  call void @llvm.dbg.value(metadata i32 %12, metadata !9055, metadata !DIExpression()), !dbg !9059
  call void @llvm.dbg.value(metadata i32 %2, metadata !9056, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9059
  call void @llvm.dbg.value(metadata i32 %2, metadata !9057, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9059
  call void @llvm.dbg.value(metadata i32 %2, metadata !9058, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9059
  %13 = lshr i32 %2, 6, !dbg !9064
  %14 = and i32 %13, 1, !dbg !9064
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !9065
  %15 = lshr i32 %2, 7, !dbg !9066
  %16 = and i32 %15, 3, !dbg !9066
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !9067
  %17 = lshr i32 %2, 9, !dbg !9068
  %18 = and i32 %17, 3, !dbg !9068
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !9069
  %19 = icmp eq i32 %12, 32, !dbg !9070
  br i1 %19, label %20, label %24, !dbg !9072

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9073
  br i1 %21, label %22, label %23, !dbg !9076

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9077
  br label %24, !dbg !9079

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9080
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9082
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !9083
  ret void, !dbg !9084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #4 !dbg !9085 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9087, metadata !DIExpression()), !dbg !9089
  %2 = shl nuw i32 1, %0, !dbg !9090
  call void @llvm.dbg.value(metadata i32 %2, metadata !9088, metadata !DIExpression()), !dbg !9089
  ret i32 %2, !dbg !9091
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !9092 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9096, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i32 %1, metadata !9097, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.value(metadata i32 %2, metadata !9098, metadata !DIExpression()), !dbg !9099
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9100
  %5 = load volatile i32, i32* %4, align 4, !dbg !9100
  %6 = xor i32 %1, -1, !dbg !9100
  %7 = and i32 %5, %6, !dbg !9100
  %8 = mul i32 %2, %1, !dbg !9100
  %9 = or i32 %7, %8, !dbg !9100
  store volatile i32 %9, i32* %4, align 4, !dbg !9100
  ret void, !dbg !9101
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9102 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9104, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.value(metadata i32 %1, metadata !9105, metadata !DIExpression()), !dbg !9107
  call void @llvm.dbg.value(metadata i32 %2, metadata !9106, metadata !DIExpression()), !dbg !9107
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9108
  %5 = load volatile i32, i32* %4, align 4, !dbg !9108
  call void @llvm.dbg.value(metadata i32 %1, metadata !8906, metadata !DIExpression()) #23, !dbg !9109
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9111, !srcloc !8913
  call void @llvm.dbg.value(metadata i32 %6, metadata !8909, metadata !DIExpression()) #23, !dbg !9109
  call void @llvm.dbg.value(metadata i32 %6, metadata !8914, metadata !DIExpression()) #23, !dbg !9112
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9114, !range !7222
  %8 = shl nuw nsw i32 %7, 1, !dbg !9108
  %9 = shl i32 3, %8, !dbg !9108
  %10 = xor i32 %9, -1, !dbg !9108
  %11 = and i32 %5, %10, !dbg !9108
  call void @llvm.dbg.value(metadata i32 %1, metadata !8906, metadata !DIExpression()) #23, !dbg !9115
  call void @llvm.dbg.value(metadata i32 %6, metadata !8909, metadata !DIExpression()) #23, !dbg !9115
  call void @llvm.dbg.value(metadata i32 %6, metadata !8914, metadata !DIExpression()) #23, !dbg !9117
  %12 = shl i32 %2, %8, !dbg !9108
  %13 = or i32 %11, %12, !dbg !9108
  store volatile i32 %13, i32* %4, align 4, !dbg !9108
  ret void, !dbg !9119
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9120 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9122, metadata !DIExpression()), !dbg !9125
  call void @llvm.dbg.value(metadata i32 %1, metadata !9123, metadata !DIExpression()), !dbg !9125
  call void @llvm.dbg.value(metadata i32 %2, metadata !9124, metadata !DIExpression()), !dbg !9125
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9126
  %5 = load volatile i32, i32* %4, align 4, !dbg !9126
  call void @llvm.dbg.value(metadata i32 %1, metadata !8906, metadata !DIExpression()) #23, !dbg !9127
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9129, !srcloc !8913
  call void @llvm.dbg.value(metadata i32 %6, metadata !8909, metadata !DIExpression()) #23, !dbg !9127
  call void @llvm.dbg.value(metadata i32 %6, metadata !8914, metadata !DIExpression()) #23, !dbg !9130
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9132, !range !7222
  %8 = shl nuw nsw i32 %7, 1, !dbg !9126
  %9 = shl i32 3, %8, !dbg !9126
  %10 = xor i32 %9, -1, !dbg !9126
  %11 = and i32 %5, %10, !dbg !9126
  call void @llvm.dbg.value(metadata i32 %1, metadata !8906, metadata !DIExpression()) #23, !dbg !9133
  call void @llvm.dbg.value(metadata i32 %6, metadata !8909, metadata !DIExpression()) #23, !dbg !9133
  call void @llvm.dbg.value(metadata i32 %6, metadata !8914, metadata !DIExpression()) #23, !dbg !9135
  %12 = shl i32 %2, %8, !dbg !9126
  %13 = or i32 %11, %12, !dbg !9126
  store volatile i32 %13, i32* %4, align 4, !dbg !9126
  ret void, !dbg !9137
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9138 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9140, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.value(metadata i32 %1, metadata !9141, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.value(metadata i32 %2, metadata !9142, metadata !DIExpression()), !dbg !9143
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9144
  %5 = load volatile i32, i32* %4, align 4, !dbg !9144
  call void @llvm.dbg.value(metadata i32 %1, metadata !8906, metadata !DIExpression()) #23, !dbg !9145
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9147, !srcloc !8913
  call void @llvm.dbg.value(metadata i32 %6, metadata !8909, metadata !DIExpression()) #23, !dbg !9145
  call void @llvm.dbg.value(metadata i32 %6, metadata !8914, metadata !DIExpression()) #23, !dbg !9148
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9150, !range !7222
  %8 = shl nuw nsw i32 %7, 2, !dbg !9144
  %9 = shl i32 15, %8, !dbg !9144
  %10 = xor i32 %9, -1, !dbg !9144
  %11 = and i32 %5, %10, !dbg !9144
  call void @llvm.dbg.value(metadata i32 %1, metadata !8906, metadata !DIExpression()) #23, !dbg !9151
  call void @llvm.dbg.value(metadata i32 %6, metadata !8909, metadata !DIExpression()) #23, !dbg !9151
  call void @llvm.dbg.value(metadata i32 %6, metadata !8914, metadata !DIExpression()) #23, !dbg !9153
  %12 = shl i32 %2, %8, !dbg !9144
  %13 = or i32 %11, %12, !dbg !9144
  store volatile i32 %13, i32* %4, align 4, !dbg !9144
  ret void, !dbg !9155
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9156 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9158, metadata !DIExpression()), !dbg !9161
  call void @llvm.dbg.value(metadata i32 %1, metadata !9159, metadata !DIExpression()), !dbg !9161
  call void @llvm.dbg.value(metadata i32 %2, metadata !9160, metadata !DIExpression()), !dbg !9161
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9162
  %5 = load volatile i32, i32* %4, align 4, !dbg !9162
  %6 = lshr i32 %1, 8, !dbg !9162
  call void @llvm.dbg.value(metadata i32 %6, metadata !8906, metadata !DIExpression()) #23, !dbg !9163
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9165, !srcloc !8913
  call void @llvm.dbg.value(metadata i32 %7, metadata !8909, metadata !DIExpression()) #23, !dbg !9163
  call void @llvm.dbg.value(metadata i32 %7, metadata !8914, metadata !DIExpression()) #23, !dbg !9166
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9168, !range !7222
  %9 = shl nuw nsw i32 %8, 2, !dbg !9162
  %10 = shl i32 15, %9, !dbg !9162
  %11 = xor i32 %10, -1, !dbg !9162
  %12 = and i32 %5, %11, !dbg !9162
  call void @llvm.dbg.value(metadata i32 %6, metadata !8906, metadata !DIExpression()) #23, !dbg !9169
  call void @llvm.dbg.value(metadata i32 %7, metadata !8909, metadata !DIExpression()) #23, !dbg !9169
  call void @llvm.dbg.value(metadata i32 %7, metadata !8914, metadata !DIExpression()) #23, !dbg !9171
  %13 = shl i32 %2, %9, !dbg !9162
  %14 = or i32 %12, %13, !dbg !9162
  store volatile i32 %14, i32* %4, align 4, !dbg !9162
  ret void, !dbg !9173
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9174 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9176, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata i32 %1, metadata !9177, metadata !DIExpression()), !dbg !9179
  call void @llvm.dbg.value(metadata i32 %2, metadata !9178, metadata !DIExpression()), !dbg !9179
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9180
  %5 = load volatile i32, i32* %4, align 4, !dbg !9180
  call void @llvm.dbg.value(metadata i32 %1, metadata !8906, metadata !DIExpression()) #23, !dbg !9181
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9183, !srcloc !8913
  call void @llvm.dbg.value(metadata i32 %6, metadata !8909, metadata !DIExpression()) #23, !dbg !9181
  call void @llvm.dbg.value(metadata i32 %6, metadata !8914, metadata !DIExpression()) #23, !dbg !9184
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9186, !range !7222
  %8 = shl nuw nsw i32 %7, 1, !dbg !9180
  %9 = shl i32 3, %8, !dbg !9180
  %10 = xor i32 %9, -1, !dbg !9180
  %11 = and i32 %5, %10, !dbg !9180
  call void @llvm.dbg.value(metadata i32 %1, metadata !8906, metadata !DIExpression()) #23, !dbg !9187
  call void @llvm.dbg.value(metadata i32 %6, metadata !8909, metadata !DIExpression()) #23, !dbg !9187
  call void @llvm.dbg.value(metadata i32 %6, metadata !8914, metadata !DIExpression()) #23, !dbg !9189
  %12 = shl i32 %2, %8, !dbg !9180
  %13 = or i32 %11, %12, !dbg !9180
  store volatile i32 %13, i32* %4, align 4, !dbg !9180
  ret void, !dbg !9191
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9192 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9194, metadata !DIExpression()), !dbg !9197
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9198
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9198
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9198
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9195, metadata !DIExpression()), !dbg !9197
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9199
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9200
  %6 = tail call fastcc zeroext i1 @device_is_ready.100() #24, !dbg !9201
  br i1 %6, label %7, label %11, !dbg !9203

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !9204
  call void @llvm.dbg.value(metadata i32 %8, metadata !9196, metadata !DIExpression()), !dbg !9197
  %9 = icmp slt i32 %8, 0, !dbg !9205
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9207
  br label %11, !dbg !9207

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9197
  ret i32 %12, !dbg !9208
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.100() unnamed_addr #1 !dbg !9209 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9213, metadata !DIExpression()), !dbg !9214
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9215, !srcloc !9217
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.101() #24, !dbg !9218
  ret i1 %1, !dbg !9219
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9220 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9224, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata i8 1, metadata !9225, metadata !DIExpression()), !dbg !9229
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9230
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9230
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9230
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9226, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata i32 0, metadata !9227, metadata !DIExpression()), !dbg !9229
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9228, metadata !DIExpression()), !dbg !9229
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9231
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9234
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !9235
  call void @llvm.dbg.value(metadata i32 %7, metadata !9227, metadata !DIExpression()), !dbg !9229
  ret i32 %7, !dbg !9236
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.101() unnamed_addr #1 !dbg !9237 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9239, metadata !DIExpression()), !dbg !9240
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #26, !dbg !9241
  ret i1 %1, !dbg !9242
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9243 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9247, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata i32 %1, metadata !9248, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata i32 %2, metadata !9249, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata i32 %3, metadata !9250, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata i32 0, metadata !9251, metadata !DIExpression()), !dbg !9255
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !9256
  %5 = icmp eq i32 %3, 17, !dbg !9257
  br i1 %5, label %6, label %14, !dbg !9258

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9259
  call void @llvm.dbg.value(metadata i32 %7, metadata !9252, metadata !DIExpression()), !dbg !9260
  %8 = icmp eq i32 %7, 0, !dbg !9261
  %9 = shl nuw i32 1, %1, !dbg !9263
  br i1 %8, label %12, label %10, !dbg !9264

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9265
  br label %14, !dbg !9267

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9268
  br label %14, !dbg !9271

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9272
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #16 !dbg !9273 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9275, metadata !DIExpression()), !dbg !9279
  call void @llvm.dbg.value(metadata i8* %1, metadata !9276, metadata !DIExpression()), !dbg !9279
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9280
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9280
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9280
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9277, metadata !DIExpression()), !dbg !9279
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9281
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9281
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !9283
  %9 = icmp eq i32 %8, 0, !dbg !9283
  br i1 %9, label %12, label %10, !dbg !9284

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9285
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !9287
  br label %12, !dbg !9288

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9289
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9291
  %15 = icmp eq i32 %14, 0, !dbg !9291
  br i1 %15, label %19, label %16, !dbg !9292

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9293
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !9294
  store i8 %18, i8* %1, align 1, !dbg !9295
  br label %19, !dbg !9296

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9279
  ret i32 %20, !dbg !9297
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9298 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9300, metadata !DIExpression()), !dbg !9304
  call void @llvm.dbg.value(metadata i8 %1, metadata !9301, metadata !DIExpression()), !dbg !9304
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9305
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9305
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9305
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9302, metadata !DIExpression()), !dbg !9304
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9306

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9307
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !9310
  %10 = icmp eq i32 %9, 0, !dbg !9310
  br i1 %10, label %18, label %11, !dbg !9311

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9312, !srcloc !9319
  call void @llvm.dbg.value(metadata i32 undef, metadata !9315, metadata !DIExpression()) #23, !dbg !9320
  call void @llvm.dbg.value(metadata i32 undef, metadata !9316, metadata !DIExpression()) #23, !dbg !9320
  call void @llvm.dbg.value(metadata i32 undef, metadata !9303, metadata !DIExpression()), !dbg !9304
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9321
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9323
  %15 = icmp eq i32 %14, 0, !dbg !9323
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9312
  br i1 %15, label %17, label %19, !dbg !9324

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9315, metadata !DIExpression()) #23, !dbg !9320
  call void @llvm.dbg.value(metadata i32 %16, metadata !9303, metadata !DIExpression()), !dbg !9304
  call void @llvm.dbg.value(metadata i32 undef, metadata !9325, metadata !DIExpression()) #23, !dbg !9328
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !9330, !srcloc !9331
  br label %18, !dbg !9332

18:                                               ; preds = %17, %7
  br label %7, !dbg !9307, !llvm.loop !9333

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9312
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9335
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !9336
  call void @llvm.dbg.value(metadata i32 %20, metadata !9325, metadata !DIExpression()) #23, !dbg !9337
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !9339, !srcloc !9331
  ret void, !dbg !9340
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #16 !dbg !9341 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9343, metadata !DIExpression()), !dbg !9346
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9347
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9347
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9347
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9344, metadata !DIExpression()), !dbg !9346
  call void @llvm.dbg.value(metadata i32 0, metadata !9345, metadata !DIExpression()), !dbg !9346
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9348
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9348
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !9350
  %8 = icmp ne i32 %7, 0, !dbg !9350
  %9 = zext i1 %8 to i32, !dbg !9351
  call void @llvm.dbg.value(metadata i32 %9, metadata !9345, metadata !DIExpression()), !dbg !9346
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9352
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !9354
  %12 = icmp eq i32 %11, 0, !dbg !9354
  %13 = or i32 %9, 2, !dbg !9355
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9355
  call void @llvm.dbg.value(metadata i32 %14, metadata !9345, metadata !DIExpression()), !dbg !9346
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9356
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !9358
  %17 = icmp eq i32 %16, 0, !dbg !9358
  %18 = or i32 %14, 4, !dbg !9359
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9359
  call void @llvm.dbg.value(metadata i32 %19, metadata !9345, metadata !DIExpression()), !dbg !9346
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9360
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !9362
  %22 = icmp eq i32 %21, 0, !dbg !9362
  %23 = or i32 %19, 8, !dbg !9363
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9363
  call void @llvm.dbg.value(metadata i32 %24, metadata !9345, metadata !DIExpression()), !dbg !9346
  %25 = and i32 %24, 8, !dbg !9364
  %26 = icmp eq i32 %25, 0, !dbg !9364
  br i1 %26, label %29, label %27, !dbg !9366

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9367
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !9369
  br label %29, !dbg !9370

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9371
  %31 = icmp eq i32 %30, 0, !dbg !9371
  br i1 %31, label %34, label %32, !dbg !9373

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9374
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !9376
  br label %34, !dbg !9377

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9378
  %36 = icmp eq i32 %35, 0, !dbg !9378
  br i1 %36, label %39, label %37, !dbg !9380

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9381
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !9383
  br label %39, !dbg !9384

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9385
  %41 = icmp eq i32 %40, 0, !dbg !9385
  br i1 %41, label %44, label %42, !dbg !9387

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9388
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !9390
  br label %44, !dbg !9391

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9392
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !9393
  ret i32 %24, !dbg !9394
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9395 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9397, metadata !DIExpression()), !dbg !9406
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9398, metadata !DIExpression()), !dbg !9406
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9407
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9407
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9407
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9399, metadata !DIExpression()), !dbg !9406
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9408
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9408
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9408
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9400, metadata !DIExpression()), !dbg !9406
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9409
  %10 = load i8, i8* %9, align 4, !dbg !9409
  %11 = zext i8 %10 to i32, !dbg !9410
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !9411
  call void @llvm.dbg.value(metadata i32 %12, metadata !9402, metadata !DIExpression()), !dbg !9406
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9412
  %14 = load i8, i8* %13, align 1, !dbg !9412
  %15 = zext i8 %14 to i32, !dbg !9413
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !9414
  call void @llvm.dbg.value(metadata i32 %16, metadata !9403, metadata !DIExpression()), !dbg !9406
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9415
  %18 = load i8, i8* %17, align 2, !dbg !9415
  %19 = zext i8 %18 to i32, !dbg !9416
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !9417
  call void @llvm.dbg.value(metadata i32 %20, metadata !9404, metadata !DIExpression()), !dbg !9406
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9418
  %22 = load i8, i8* %21, align 1, !dbg !9418
  %23 = zext i8 %22 to i32, !dbg !9419
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !9420
  call void @llvm.dbg.value(metadata i32 %24, metadata !9405, metadata !DIExpression()), !dbg !9406
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9421

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9423
  br i1 %26, label %69, label %27, !dbg !9425

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9426

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9427
  br i1 %29, label %65, label %30, !dbg !9427

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9429
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9406
  br i1 %31, label %38, label %34, !dbg !9431

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9432
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !9432

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9435
  br i1 %37, label %38, label %69, !dbg !9436

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9437
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !9438
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !9439
  %41 = icmp eq i32 %12, %40, !dbg !9441
  br i1 %41, label %43, label %42, !dbg !9442

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !9443
  br label %43, !dbg !9445

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !9446
  %45 = icmp eq i32 %16, %44, !dbg !9448
  br i1 %45, label %47, label %46, !dbg !9449

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !9450
  br label %47, !dbg !9452

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !9453
  %49 = icmp eq i32 %20, %48, !dbg !9455
  br i1 %49, label %51, label %50, !dbg !9456

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !9457
  br label %51, !dbg !9459

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !9460
  %53 = icmp eq i32 %24, %52, !dbg !9462
  br i1 %53, label %55, label %54, !dbg !9463

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !9464
  br label %55, !dbg !9466

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9467
  %57 = load i32, i32* %56, align 4, !dbg !9467
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9469
  %59 = load i32, i32* %58, align 4, !dbg !9469
  %60 = icmp eq i32 %57, %59, !dbg !9470
  br i1 %60, label %63, label %61, !dbg !9471

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !9472
  %62 = load i32, i32* %56, align 4, !dbg !9474
  store i32 %62, i32* %58, align 4, !dbg !9475
  br label %63, !dbg !9476

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9477
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !9478
  br label %69, !dbg !9479

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9427
  %67 = and i8 %66, 1, !dbg !9427
  %68 = icmp eq i8 %67, 0, !dbg !9427
  br i1 %68, label %30, label %69, !dbg !9427

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9406
  ret i32 %70, !dbg !9480
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !9481 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9483, metadata !DIExpression()), !dbg !9486
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9484, metadata !DIExpression()), !dbg !9486
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9487
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9487
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9487
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9485, metadata !DIExpression()), !dbg !9486
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9488
  %7 = load i32, i32* %6, align 4, !dbg !9488
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9489
  store i32 %7, i32* %8, align 4, !dbg !9490
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !9491, !range !9492
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !9493
  %11 = trunc i32 %10 to i8, !dbg !9493
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9494
  store i8 %11, i8* %12, align 4, !dbg !9495
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !9496, !range !9497
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !9498
  %15 = trunc i32 %14 to i8, !dbg !9498
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9499
  store i8 %15, i8* %16, align 1, !dbg !9500
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !9501
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !9502, !range !9492
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !9503
  %20 = trunc i32 %19 to i8, !dbg !9503
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9504
  store i8 %20, i8* %21, align 2, !dbg !9505
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !9506, !range !9507
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !9508
  %24 = trunc i32 %23 to i8, !dbg !9508
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9509
  store i8 %24, i8* %25, align 1, !dbg !9510
  ret i32 0, !dbg !9511
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !9512 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9516, metadata !DIExpression()), !dbg !9518
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9519
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9519
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9519
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9517, metadata !DIExpression()), !dbg !9518
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9520
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9520
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !9521
  ret i32 %7, !dbg !9522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #4 !dbg !9523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9527, metadata !DIExpression()), !dbg !9528
  %2 = icmp eq i32 %0, 1024, !dbg !9529
  %3 = select i1 %2, i32 2, i32 0, !dbg !9529
  %4 = icmp eq i32 %0, 1536, !dbg !9529
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9529
  ret i32 %5, !dbg !9530
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !9531 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9533, metadata !DIExpression()), !dbg !9535
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9536
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9536
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9536
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9534, metadata !DIExpression()), !dbg !9535
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9537
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9537
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !9538
  ret i32 %7, !dbg !9539
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #5 !dbg !9540 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9544, metadata !DIExpression()), !dbg !9545
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !9546
  %3 = icmp ult i32 %2, 4, !dbg !9546
  br i1 %3, label %4, label %7, !dbg !9546

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !9546
  %6 = load i32, i32* %5, align 4, !dbg !9546
  br label %7, !dbg !9546

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !9547
  ret i32 %8, !dbg !9549
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !9550 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9552, metadata !DIExpression()), !dbg !9554
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9555
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9555
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9555
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9553, metadata !DIExpression()), !dbg !9554
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9556
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9556
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !9557
  ret i32 %7, !dbg !9558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9559 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9563, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.value(metadata i32 %1, metadata !9564, metadata !DIExpression()), !dbg !9565
  %3 = icmp eq i32 %0, 4096, !dbg !9566
  %4 = icmp eq i32 %1, 0, !dbg !9566
  %5 = select i1 %4, i32 4, i32 3, !dbg !9566
  %6 = select i1 %4, i32 3, i32 2, !dbg !9566
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !9566
  ret i32 %7, !dbg !9567
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !9568 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9570, metadata !DIExpression()), !dbg !9572
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9573
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9573
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9573
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9571, metadata !DIExpression()), !dbg !9572
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9574
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9574
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !9575
  ret i32 %7, !dbg !9576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !9577 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9581, metadata !DIExpression()), !dbg !9582
  %2 = icmp eq i32 %0, 768, !dbg !9583
  %3 = zext i1 %2 to i32, !dbg !9582
  ret i32 %3, !dbg !9585
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9586 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9591, metadata !DIExpression()), !dbg !9592
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9593
  %3 = load volatile i32, i32* %2, align 4, !dbg !9593
  %4 = and i32 %3, 768, !dbg !9593
  ret i32 %4, !dbg !9594
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9595 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9597, metadata !DIExpression()), !dbg !9598
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9599
  %3 = load volatile i32, i32* %2, align 4, !dbg !9599
  %4 = and i32 %3, 4096, !dbg !9599
  ret i32 %4, !dbg !9600
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #3

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9601 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9603, metadata !DIExpression()), !dbg !9604
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9605
  %3 = load volatile i32, i32* %2, align 4, !dbg !9605
  %4 = and i32 %3, 12288, !dbg !9605
  ret i32 %4, !dbg !9606
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9607 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9609, metadata !DIExpression()), !dbg !9610
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9611
  %3 = load volatile i32, i32* %2, align 4, !dbg !9611
  %4 = and i32 %3, 1536, !dbg !9611
  ret i32 %4, !dbg !9612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #4 !dbg !9613 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9617, metadata !DIExpression()), !dbg !9618
  %2 = icmp eq i32 %0, 2, !dbg !9619
  %3 = select i1 %2, i32 1024, i32 0, !dbg !9619
  %4 = icmp eq i32 %0, 1, !dbg !9619
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !9619
  ret i32 %5, !dbg !9620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #4 !dbg !9621 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9625, metadata !DIExpression()), !dbg !9626
  %2 = icmp ult i32 %0, 3, !dbg !9627
  br i1 %2, label %3, label %6, !dbg !9627

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !9627
  %5 = load i32, i32* %4, align 4, !dbg !9627
  br label %6, !dbg !9627

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !9628
  ret i32 %7, !dbg !9630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !9631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9635, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.value(metadata i32 %1, metadata !9636, metadata !DIExpression()), !dbg !9637
  %3 = icmp eq i32 %0, 4, !dbg !9638
  %4 = icmp eq i32 %1, 0, !dbg !9638
  %5 = select i1 %4, i32 0, i32 4096, !dbg !9638
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !9638
  ret i32 %6, !dbg !9639
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #4 !dbg !9640 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9644, metadata !DIExpression()), !dbg !9645
  %2 = icmp eq i32 %0, 1, !dbg !9646
  %3 = select i1 %2, i32 768, i32 0, !dbg !9645
  ret i32 %3, !dbg !9648
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9649 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9653, metadata !DIExpression()), !dbg !9654
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9655
  %3 = load volatile i32, i32* %2, align 4, !dbg !9655
  %4 = and i32 %3, -8193, !dbg !9655
  store volatile i32 %4, i32* %2, align 4, !dbg !9655
  ret void, !dbg !9656
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !9657 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9661, metadata !DIExpression()), !dbg !9664
  call void @llvm.dbg.value(metadata i32 %1, metadata !9662, metadata !DIExpression()), !dbg !9664
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9665
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9665
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9665
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9663, metadata !DIExpression()), !dbg !9664
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9666
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9666
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !9667
  ret void, !dbg !9668
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !9669 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9671, metadata !DIExpression()), !dbg !9674
  call void @llvm.dbg.value(metadata i32 %1, metadata !9672, metadata !DIExpression()), !dbg !9674
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9675
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9675
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9675
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9673, metadata !DIExpression()), !dbg !9674
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9676
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9676
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !9677
  ret void, !dbg !9678
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !9679 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9681, metadata !DIExpression()), !dbg !9684
  call void @llvm.dbg.value(metadata i32 %1, metadata !9682, metadata !DIExpression()), !dbg !9684
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9685
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9685
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9685
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9683, metadata !DIExpression()), !dbg !9684
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9686
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9686
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !9687
  ret void, !dbg !9688
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !9689 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9691, metadata !DIExpression()), !dbg !9694
  call void @llvm.dbg.value(metadata i32 %1, metadata !9692, metadata !DIExpression()), !dbg !9694
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9695
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9695
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9695
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9693, metadata !DIExpression()), !dbg !9694
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9696
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9696
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !9697
  ret void, !dbg !9698
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !9699 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9701, metadata !DIExpression()), !dbg !9706
  call void @llvm.dbg.value(metadata i32 %1, metadata !9702, metadata !DIExpression()), !dbg !9706
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9707
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9707
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9707
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9703, metadata !DIExpression()), !dbg !9706
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9708
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !9708
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !9708
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !9704, metadata !DIExpression()), !dbg !9706
  %10 = bitcast i32* %3 to i8*, !dbg !9709
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !9709
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !9710
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !9710
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !9714
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9714
  %15 = load i8*, i8** %14, align 4, !dbg !9714
  call void @llvm.dbg.value(metadata i32* %3, metadata !9705, metadata !DIExpression(DW_OP_deref)), !dbg !9706
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !9715
  %17 = icmp slt i32 %16, 0, !dbg !9716
  br i1 %17, label %28, label %18, !dbg !9717

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9718
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9718
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #24, !dbg !9719
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9720
  %22 = load i32, i32* %3, align 4, !dbg !9721
  call void @llvm.dbg.value(metadata i32 %22, metadata !9705, metadata !DIExpression()), !dbg !9706
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #24, !dbg !9722
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !9723
  %24 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %23, i32 0, i32 2, !dbg !9723
  %25 = load volatile i32, i32* %24, align 4, !dbg !9723
  %26 = icmp ugt i32 %25, 16, !dbg !9723
  br i1 %26, label %28, label %27, !dbg !9726

27:                                               ; preds = %18
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.103, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.104, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.105, i32 0, i32 0), i32 noundef 190) #26, !dbg !9727
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7.106, i32 0, i32 0)) #26, !dbg !9727
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.105, i32 0, i32 0), i32 noundef 190) #26, !dbg !9727
  unreachable, !dbg !9727

28:                                               ; preds = %18, %2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !9729
  ret void, !dbg !9729
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9730 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9732, metadata !DIExpression()), !dbg !9733
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9734
  %3 = load volatile i32, i32* %2, align 4, !dbg !9734
  %4 = or i32 %3, 8192, !dbg !9734
  store volatile i32 %4, i32* %2, align 4, !dbg !9734
  ret void, !dbg !9735
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !9736 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9738, metadata !DIExpression()), !dbg !9742
  call void @llvm.dbg.value(metadata i8* %1, metadata !9739, metadata !DIExpression()), !dbg !9742
  call void @llvm.dbg.value(metadata i32* %2, metadata !9740, metadata !DIExpression()), !dbg !9742
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !9743
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !9743
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !9743
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !9741, metadata !DIExpression()), !dbg !9742
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !9744
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !9744
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !9746
  br i1 %9, label %12, label %10, !dbg !9747

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #26, !dbg !9748
  br label %12, !dbg !9749

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !9742
  ret i32 %13, !dbg !9750
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9751 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9755, metadata !DIExpression()), !dbg !9757
  call void @llvm.dbg.value(metadata i32 0, metadata !9756, metadata !DIExpression()), !dbg !9757
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9758
  %3 = load volatile i32, i32* %2, align 4, !dbg !9758
  %4 = and i32 %3, -32769, !dbg !9758
  store volatile i32 %4, i32* %2, align 4, !dbg !9758
  ret void, !dbg !9759
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !9760 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9764, metadata !DIExpression()), !dbg !9768
  call void @llvm.dbg.value(metadata i32 %1, metadata !9765, metadata !DIExpression()), !dbg !9768
  call void @llvm.dbg.value(metadata i32 0, metadata !9766, metadata !DIExpression()), !dbg !9768
  call void @llvm.dbg.value(metadata i32 %2, metadata !9767, metadata !DIExpression()), !dbg !9768
  %4 = zext i32 %1 to i64, !dbg !9769
  %5 = mul nuw nsw i64 %4, 25, !dbg !9769
  %6 = zext i32 %2 to i64, !dbg !9769
  %7 = shl nuw nsw i64 %6, 2, !dbg !9769
  %8 = udiv i64 %5, %7, !dbg !9769
  %9 = trunc i64 %8 to i32, !dbg !9769
  %10 = udiv i32 %9, 100, !dbg !9769
  %11 = shl nuw nsw i32 %10, 4, !dbg !9769
  %12 = mul i32 %10, -100, !dbg !9769
  %13 = add i32 %12, %9, !dbg !9769
  %14 = shl i32 %13, 4, !dbg !9769
  %15 = add i32 %14, 50, !dbg !9769
  %16 = udiv i32 %15, 100, !dbg !9769
  %17 = and i32 %16, 240, !dbg !9769
  %18 = add nuw nsw i32 %17, %11, !dbg !9769
  %19 = and i32 %16, 15, !dbg !9769
  %20 = and i32 %18, 65520, !dbg !9772
  %21 = or i32 %20, %19, !dbg !9772
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !9773
  store volatile i32 %21, i32* %22, align 4, !dbg !9774
  ret void, !dbg !9775
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9776 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9778, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.value(metadata i32 %1, metadata !9779, metadata !DIExpression()), !dbg !9780
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9781
  %4 = load volatile i32, i32* %3, align 4, !dbg !9781
  %5 = and i32 %4, -769, !dbg !9781
  %6 = or i32 %5, %1, !dbg !9781
  store volatile i32 %6, i32* %3, align 4, !dbg !9781
  ret void, !dbg !9782
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9783 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9785, metadata !DIExpression()), !dbg !9787
  call void @llvm.dbg.value(metadata i32 %1, metadata !9786, metadata !DIExpression()), !dbg !9787
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9788
  %4 = load volatile i32, i32* %3, align 4, !dbg !9788
  %5 = and i32 %4, -4097, !dbg !9788
  %6 = or i32 %5, %1, !dbg !9788
  store volatile i32 %6, i32* %3, align 4, !dbg !9788
  ret void, !dbg !9789
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9790 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9792, metadata !DIExpression()), !dbg !9794
  call void @llvm.dbg.value(metadata i32 %1, metadata !9793, metadata !DIExpression()), !dbg !9794
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9795
  %4 = load volatile i32, i32* %3, align 4, !dbg !9795
  %5 = and i32 %4, -12289, !dbg !9795
  %6 = or i32 %5, %1, !dbg !9795
  store volatile i32 %6, i32* %3, align 4, !dbg !9795
  ret void, !dbg !9796
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9797 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9799, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i32 %1, metadata !9800, metadata !DIExpression()), !dbg !9801
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9802
  %4 = load volatile i32, i32* %3, align 4, !dbg !9802
  %5 = and i32 %4, -1537, !dbg !9802
  %6 = or i32 %5, %1, !dbg !9802
  store volatile i32 %6, i32* %3, align 4, !dbg !9802
  ret void, !dbg !9803
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9804 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9806, metadata !DIExpression()), !dbg !9807
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9808
  %3 = load volatile i32, i32* %2, align 4, !dbg !9808
  %4 = lshr i32 %3, 3, !dbg !9809
  %5 = and i32 %4, 1, !dbg !9809
  ret i32 %5, !dbg !9810
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9811 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9813, metadata !DIExpression()), !dbg !9814
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9815
  %3 = load volatile i32, i32* %2, align 4, !dbg !9815
  %4 = and i32 %3, 1, !dbg !9815
  ret i32 %4, !dbg !9816
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9817 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9819, metadata !DIExpression()), !dbg !9820
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9821
  %3 = load volatile i32, i32* %2, align 4, !dbg !9821
  %4 = lshr i32 %3, 1, !dbg !9822
  %5 = and i32 %4, 1, !dbg !9822
  ret i32 %5, !dbg !9823
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9824 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9826, metadata !DIExpression()), !dbg !9827
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9828
  %3 = load volatile i32, i32* %2, align 4, !dbg !9828
  %4 = lshr i32 %3, 8, !dbg !9829
  %5 = and i32 %4, 1, !dbg !9829
  ret i32 %5, !dbg !9830
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !9831 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9833, metadata !DIExpression()), !dbg !9834
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9835
  store volatile i32 -257, i32* %2, align 4, !dbg !9835
  ret void, !dbg !9836
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9837 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9839, metadata !DIExpression()), !dbg !9841
  %3 = bitcast i32* %2 to i8*, !dbg !9842
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9842
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9840, metadata !DIExpression()), !dbg !9843
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9844
  %5 = load volatile i32, i32* %4, align 4, !dbg !9844
  store volatile i32 %5, i32* %2, align 4, !dbg !9845
  %6 = load volatile i32, i32* %2, align 4, !dbg !9846
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9847
  %8 = load volatile i32, i32* %7, align 4, !dbg !9847
  store volatile i32 %8, i32* %2, align 4, !dbg !9848
  %9 = load volatile i32, i32* %2, align 4, !dbg !9849
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9850
  ret void, !dbg !9850
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9851 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9853, metadata !DIExpression()), !dbg !9855
  %3 = bitcast i32* %2 to i8*, !dbg !9856
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9856
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9854, metadata !DIExpression()), !dbg !9857
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9858
  %5 = load volatile i32, i32* %4, align 4, !dbg !9858
  store volatile i32 %5, i32* %2, align 4, !dbg !9859
  %6 = load volatile i32, i32* %2, align 4, !dbg !9860
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9861
  %8 = load volatile i32, i32* %7, align 4, !dbg !9861
  store volatile i32 %8, i32* %2, align 4, !dbg !9862
  %9 = load volatile i32, i32* %2, align 4, !dbg !9863
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9864
  ret void, !dbg !9864
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9865 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9867, metadata !DIExpression()), !dbg !9869
  %3 = bitcast i32* %2 to i8*, !dbg !9870
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9870
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9868, metadata !DIExpression()), !dbg !9871
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9872
  %5 = load volatile i32, i32* %4, align 4, !dbg !9872
  store volatile i32 %5, i32* %2, align 4, !dbg !9873
  %6 = load volatile i32, i32* %2, align 4, !dbg !9874
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9875
  %8 = load volatile i32, i32* %7, align 4, !dbg !9875
  store volatile i32 %8, i32* %2, align 4, !dbg !9876
  %9 = load volatile i32, i32* %2, align 4, !dbg !9877
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9878
  ret void, !dbg !9878
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9879 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9881, metadata !DIExpression()), !dbg !9883
  %3 = bitcast i32* %2 to i8*, !dbg !9884
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9884
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9882, metadata !DIExpression()), !dbg !9885
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9886
  %5 = load volatile i32, i32* %4, align 4, !dbg !9886
  store volatile i32 %5, i32* %2, align 4, !dbg !9887
  %6 = load volatile i32, i32* %2, align 4, !dbg !9888
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9889
  %8 = load volatile i32, i32* %7, align 4, !dbg !9889
  store volatile i32 %8, i32* %2, align 4, !dbg !9890
  %9 = load volatile i32, i32* %2, align 4, !dbg !9891
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9892
  ret void, !dbg !9892
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9893 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9895, metadata !DIExpression()), !dbg !9896
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9897
  %3 = load volatile i32, i32* %2, align 4, !dbg !9897
  %4 = lshr i32 %3, 7, !dbg !9898
  %5 = and i32 %4, 1, !dbg !9898
  ret i32 %5, !dbg !9899
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !9900 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9904, metadata !DIExpression()), !dbg !9906
  call void @llvm.dbg.value(metadata i8 %1, metadata !9905, metadata !DIExpression()), !dbg !9906
  %3 = zext i8 %1 to i32, !dbg !9907
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9908
  store volatile i32 %3, i32* %4, align 4, !dbg !9909
  ret void, !dbg !9910
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9911 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9913, metadata !DIExpression()), !dbg !9914
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9915
  %3 = load volatile i32, i32* %2, align 4, !dbg !9915
  %4 = lshr i32 %3, 5, !dbg !9916
  %5 = and i32 %4, 1, !dbg !9916
  ret i32 %5, !dbg !9917
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9918 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9922, metadata !DIExpression()), !dbg !9923
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9924
  %3 = load volatile i32, i32* %2, align 4, !dbg !9924
  %4 = trunc i32 %3 to i8, !dbg !9925
  ret i8 %4, !dbg !9926
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !9927 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9929, metadata !DIExpression()), !dbg !9935
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9936
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9936
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9936
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9930, metadata !DIExpression()), !dbg !9935
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9937
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !9937
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !9937
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !9931, metadata !DIExpression()), !dbg !9935
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !9938
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !9939
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !9939
  %10 = tail call fastcc zeroext i1 @device_is_ready.113(%struct.device* noundef %9) #24, !dbg !9941
  br i1 %10, label %11, label %49, !dbg !9942

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !9943
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !9944
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !9944
  %15 = load i8*, i8** %14, align 4, !dbg !9944
  %16 = tail call fastcc i32 @clock_control_on.114(%struct.device* noundef %12, i8* noundef %15) #24, !dbg !9945
  call void @llvm.dbg.value(metadata i32 %16, metadata !9934, metadata !DIExpression()), !dbg !9935
  %17 = icmp eq i32 %16, 0, !dbg !9946
  br i1 %17, label %18, label %49, !dbg !9948

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !9949
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !9949
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #24, !dbg !9950
  call void @llvm.dbg.value(metadata i32 %21, metadata !9934, metadata !DIExpression()), !dbg !9935
  %22 = icmp slt i32 %21, 0, !dbg !9951
  br i1 %22, label %49, label %23, !dbg !9953

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9954
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9954
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #24, !dbg !9955
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9956
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #24, !dbg !9957
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !9958
  %28 = load i32, i32* %27, align 4, !dbg !9958
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !9960

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !9932, metadata !DIExpression()), !dbg !9935
  call void @llvm.dbg.value(metadata i32 4096, metadata !9933, metadata !DIExpression()), !dbg !9935
  br label %31, !dbg !9961

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !9932, metadata !DIExpression()), !dbg !9935
  call void @llvm.dbg.value(metadata i32 0, metadata !9933, metadata !DIExpression()), !dbg !9935
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !9964
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !9964
  call void @llvm.dbg.value(metadata i32 %33, metadata !9933, metadata !DIExpression()), !dbg !9935
  call void @llvm.dbg.value(metadata i32 %32, metadata !9932, metadata !DIExpression()), !dbg !9935
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9965
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #24, !dbg !9966
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !9967
  %36 = load i8, i8* %35, align 4, !dbg !9967, !range !4091
  %37 = icmp eq i8 %36, 0, !dbg !9967
  br i1 %37, label %39, label %38, !dbg !9969

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !9970
  br label %39, !dbg !9972

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !9973
  %41 = load i32, i32* %40, align 4, !dbg !9973
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #24, !dbg !9974
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !9975
  %43 = load i8, i8* %42, align 4, !dbg !9975, !range !4091
  %44 = icmp eq i8 %43, 0, !dbg !9975
  br i1 %44, label %47, label %45, !dbg !9977

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9978
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #24, !dbg !9980
  br label %47, !dbg !9981

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !9982
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #24, !dbg !9983
  br label %49, !dbg !9984

49:                                               ; preds = %18, %11, %1, %47
  %50 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !9935
  ret i32 %50, !dbg !9985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #10 !dbg !9986 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9990, metadata !DIExpression()), !dbg !9994
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9995
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !9995
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !9995
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !9991, metadata !DIExpression()), !dbg !9994
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9992, metadata !DIExpression()), !dbg !9994
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !9996
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !9997
  ret void, !dbg !9998
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.113(%struct.device* noundef %0) unnamed_addr #1 !dbg !9999 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10003, metadata !DIExpression()), !dbg !10004
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10005, !srcloc !10007
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.115(%struct.device* noundef %0) #24, !dbg !10008
  ret i1 %2, !dbg !10009
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.114(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10010 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10012, metadata !DIExpression()), !dbg !10015
  call void @llvm.dbg.value(metadata i8* %1, metadata !10013, metadata !DIExpression()), !dbg !10015
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10016
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10016
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10016
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10014, metadata !DIExpression()), !dbg !10015
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10017
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10017
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #26, !dbg !10018
  ret i32 %8, !dbg !10019
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10020 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10024, metadata !DIExpression()), !dbg !10028
  call void @llvm.dbg.value(metadata i8 0, metadata !10025, metadata !DIExpression()), !dbg !10028
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10029
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10029
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10027, metadata !DIExpression(DW_OP_deref)), !dbg !10028
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #26, !dbg !10030
  call void @llvm.dbg.value(metadata i32 %4, metadata !10026, metadata !DIExpression()), !dbg !10028
  %5 = icmp slt i32 %4, 0, !dbg !10031
  br i1 %5, label %9, label %6, !dbg !10033

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10034
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10027, metadata !DIExpression()), !dbg !10028
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !10035
  br label %9, !dbg !10036

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10028
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10037
  ret i32 %10, !dbg !10037
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10038 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10040, metadata !DIExpression()), !dbg !10044
  call void @llvm.dbg.value(metadata i32 12, metadata !10041, metadata !DIExpression()), !dbg !10044
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10045

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10046, metadata !DIExpression()) #23, !dbg !10052
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !10055, !srcloc !10056
  call void @llvm.dbg.value(metadata i32 %4, metadata !10051, metadata !DIExpression()) #23, !dbg !10052
  %5 = or i32 %4, 12, !dbg !10057
  call void @llvm.dbg.value(metadata i32 %5, metadata !10042, metadata !DIExpression()), !dbg !10058
  call void @llvm.dbg.value(metadata i32 %5, metadata !10059, metadata !DIExpression()) #23, !dbg !10066
  call void @llvm.dbg.value(metadata i32* %2, metadata !10064, metadata !DIExpression()) #23, !dbg !10066
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !10068, !srcloc !10069
  call void @llvm.dbg.value(metadata i32 %6, metadata !10065, metadata !DIExpression()) #23, !dbg !10066
  %7 = icmp eq i32 %6, 0, !dbg !10045
  br i1 %7, label %8, label %3, !dbg !10057, !llvm.loop !10070

8:                                                ; preds = %3
  ret void, !dbg !10071
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10072 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10074, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata i32 %1, metadata !10075, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata i32 %2, metadata !10076, metadata !DIExpression()), !dbg !10078
  call void @llvm.dbg.value(metadata i32 0, metadata !10077, metadata !DIExpression()), !dbg !10078
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10079
  %5 = load volatile i32, i32* %4, align 4, !dbg !10079
  %6 = and i32 %5, -5633, !dbg !10079
  %7 = or i32 %2, %1, !dbg !10079
  %8 = or i32 %7, %6, !dbg !10079
  store volatile i32 %8, i32* %4, align 4, !dbg !10079
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10080
  %10 = load volatile i32, i32* %9, align 4, !dbg !10080
  %11 = and i32 %10, -12289, !dbg !10080
  store volatile i32 %11, i32* %9, align 4, !dbg !10080
  ret void, !dbg !10081
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10082 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10084, metadata !DIExpression()), !dbg !10085
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10086
  %3 = load volatile i32, i32* %2, align 4, !dbg !10086
  %4 = or i32 %3, 8, !dbg !10086
  store volatile i32 %4, i32* %2, align 4, !dbg !10086
  ret void, !dbg !10087
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10088 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10092, metadata !DIExpression()), !dbg !10095
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10093, metadata !DIExpression()), !dbg !10095
  call void @llvm.dbg.value(metadata i32 0, metadata !10094, metadata !DIExpression()), !dbg !10095
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10096
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10096
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10097
  %5 = load i8, i8* %4, align 4, !dbg !10097
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #26, !dbg !10098
  ret i32 %6, !dbg !10099
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.115(%struct.device* noundef %0) unnamed_addr #1 !dbg !10100 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10102, metadata !DIExpression()), !dbg !10103
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !10104
  ret i1 %2, !dbg !10105
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !10106 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10108, metadata !DIExpression()), !dbg !10109
  tail call fastcc void @__NVIC_SetPriority.117() #24, !dbg !10110
  store i32 8399, i32* @last_load, align 4, !dbg !10111
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10112
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10113
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10114
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10115
  %3 = or i32 %2, 7, !dbg !10115
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10115
  ret i32 0, !dbg !10116
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.117() unnamed_addr #14 !dbg !10117 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10119, metadata !DIExpression()), !dbg !10121
  call void @llvm.dbg.value(metadata i32 1, metadata !10120, metadata !DIExpression()), !dbg !10121
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10122
  ret void, !dbg !10125
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10126 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10128, metadata !DIExpression()), !dbg !10130
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !10131
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10132
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10133
  %5 = add i32 %4, %3, !dbg !10133
  store i32 %5, i32* @cycle_count, align 4, !dbg !10133
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10134
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10135
  %7 = sub i32 %5, %6, !dbg !10138
  %8 = udiv i32 %7, 8400, !dbg !10139
  call void @llvm.dbg.value(metadata i32 %8, metadata !10129, metadata !DIExpression()), !dbg !10130
  %9 = mul nuw i32 %8, 8400, !dbg !10140
  %10 = add i32 %9, %6, !dbg !10141
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10141
  tail call void @sys_clock_announce(i32 noundef %8) #26, !dbg !10142
  tail call void @z_arm_int_exit() #26, !dbg !10143
  ret void, !dbg !10144
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !10145 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10150
  call void @llvm.dbg.value(metadata i32 %1, metadata !10147, metadata !DIExpression()), !dbg !10151
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10152
  call void @llvm.dbg.value(metadata i32 %2, metadata !10148, metadata !DIExpression()), !dbg !10151
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10153
  call void @llvm.dbg.value(metadata i32 %3, metadata !10149, metadata !DIExpression()), !dbg !10151
  %4 = and i32 %2, 65536, !dbg !10154
  %5 = icmp ne i32 %4, 0, !dbg !10154
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10156
  %8 = load i32, i32* @last_load, align 4, !dbg !10151
  br i1 %7, label %9, label %13, !dbg !10156

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10157
  %11 = add i32 %10, %8, !dbg !10157
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10157
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10159
  br label %13, !dbg !10160

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10161
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10162
  %16 = add i32 %14, %15, !dbg !10163
  ret i32 %16, !dbg !10164
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10169, metadata !DIExpression()), !dbg !10182
  call void @llvm.dbg.value(metadata i1 %1, metadata !10170, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10182
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10183
  br i1 %4, label %5, label %8, !dbg !10183

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10185
  %7 = and i32 %6, -2, !dbg !10185
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10185
  store i32 -16777216, i32* @last_load, align 4, !dbg !10187
  br label %60, !dbg !10188

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10189
  call void @llvm.dbg.value(metadata i32 %9, metadata !10174, metadata !DIExpression()), !dbg !10182
  br i1 %3, label %18, label %10, !dbg !10190

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10190
  call void @llvm.dbg.value(metadata i32 undef, metadata !10169, metadata !DIExpression()), !dbg !10182
  %12 = icmp slt i32 %11, 1, !dbg !10191
  br i1 %12, label %18, label %13, !dbg !10191

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10191
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10191
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10191
  %17 = add nuw nsw i32 %16, 8399, !dbg !10191
  br label %18, !dbg !10191

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10169, metadata !DIExpression()), !dbg !10182
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10192, metadata !DIExpression()) #23, !dbg !10199
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10201, !srcloc !10207
  call void @llvm.dbg.value(metadata i32 undef, metadata !10204, metadata !DIExpression()) #23, !dbg !10208
  call void @llvm.dbg.value(metadata i32 undef, metadata !10205, metadata !DIExpression()) #23, !dbg !10208
  call void @llvm.dbg.value(metadata i32 undef, metadata !10198, metadata !DIExpression()) #23, !dbg !10199
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10209
  br i1 %21, label %23, label %22, !dbg !10212

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.120, i32 0, i32 0), i32 noundef 148) #26, !dbg !10213
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.121, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10213
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.120, i32 0, i32 0), i32 noundef 148) #26, !dbg !10213
  unreachable, !dbg !10213

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10201
  call void @llvm.dbg.value(metadata i32 %24, metadata !10204, metadata !DIExpression()) #23, !dbg !10208
  call void @llvm.dbg.value(metadata i32 %24, metadata !10198, metadata !DIExpression()) #23, !dbg !10199
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10215
  call void @llvm.dbg.value(metadata i32 %24, metadata !10175, metadata !DIExpression()), !dbg !10182
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !10216
  call void @llvm.dbg.value(metadata i32 %25, metadata !10180, metadata !DIExpression()), !dbg !10182
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10217
  call void @llvm.dbg.value(metadata i32 %26, metadata !10172, metadata !DIExpression()), !dbg !10182
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10218
  %28 = add i32 %27, %25, !dbg !10218
  store i32 %28, i32* @cycle_count, align 4, !dbg !10218
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10219
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10220
  %30 = sub i32 %28, %29, !dbg !10221
  call void @llvm.dbg.value(metadata i32 %30, metadata !10181, metadata !DIExpression()), !dbg !10182
  %31 = icmp slt i32 %30, 0, !dbg !10222
  br i1 %31, label %41, label %32, !dbg !10224

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10171, metadata !DIExpression()), !dbg !10182
  call void @llvm.dbg.value(metadata i32 undef, metadata !10171, metadata !DIExpression()), !dbg !10182
  %33 = add nuw i32 %19, %30, !dbg !10225
  %34 = urem i32 %33, 8400, !dbg !10227
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10171, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10182
  %35 = sub nuw nsw i32 %19, %34, !dbg !10228
  call void @llvm.dbg.value(metadata i32 %35, metadata !10171, metadata !DIExpression()), !dbg !10182
  %36 = icmp ugt i32 %35, 1024, !dbg !10229
  br i1 %36, label %37, label %39, !dbg !10229

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10171, metadata !DIExpression()), !dbg !10182
  %38 = icmp ugt i32 %35, 16766400, !dbg !10230
  br i1 %38, label %41, label %39, !dbg !10232

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10233
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10234
  call void @llvm.dbg.value(metadata i32 %43, metadata !10173, metadata !DIExpression()), !dbg !10182
  %44 = add nsw i32 %42, -1, !dbg !10235
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10236
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10237
  %45 = icmp ult i32 %26, %43, !dbg !10238
  br i1 %45, label %46, label %51, !dbg !10240

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10241
  %48 = add i32 %26, %9, !dbg !10243
  %49 = sub i32 %48, %43, !dbg !10244
  %50 = add i32 %49, %47, !dbg !10241
  br label %55, !dbg !10245

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10246
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10248
  %54 = add i32 %52, %53, !dbg !10248
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10249
  store i32 %56, i32* @cycle_count, align 4, !dbg !10249
  call void @llvm.dbg.value(metadata i32 undef, metadata !10250, metadata !DIExpression()) #23, !dbg !10256
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10255, metadata !DIExpression()) #23, !dbg !10256
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10258
  br i1 %57, label %59, label %58, !dbg !10261

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.122, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.120, i32 0, i32 0), i32 noundef 194) #26, !dbg !10262
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.123, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10262
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.120, i32 0, i32 0), i32 noundef 194) #26, !dbg !10262
  unreachable, !dbg !10262

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10250, metadata !DIExpression()) #23, !dbg !10256
  call void @llvm.dbg.value(metadata i32 %24, metadata !10264, metadata !DIExpression()) #23, !dbg !10267
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10269, !srcloc !10270
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10271
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10272 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10192, metadata !DIExpression()) #23, !dbg !10276
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10278, !srcloc !10207
  call void @llvm.dbg.value(metadata i32 undef, metadata !10204, metadata !DIExpression()) #23, !dbg !10280
  call void @llvm.dbg.value(metadata i32 undef, metadata !10205, metadata !DIExpression()) #23, !dbg !10280
  call void @llvm.dbg.value(metadata i32 undef, metadata !10198, metadata !DIExpression()) #23, !dbg !10276
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10281
  br i1 %2, label %4, label %3, !dbg !10282

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.120, i32 0, i32 0), i32 noundef 148) #26, !dbg !10283
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.121, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10283
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.120, i32 0, i32 0), i32 noundef 148) #26, !dbg !10283
  unreachable, !dbg !10283

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10204, metadata !DIExpression()) #23, !dbg !10280
  call void @llvm.dbg.value(metadata i32 undef, metadata !10198, metadata !DIExpression()) #23, !dbg !10276
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10284
  call void @llvm.dbg.value(metadata i32 undef, metadata !10274, metadata !DIExpression()), !dbg !10285
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10286
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10287
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10288
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10275, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10285
  call void @llvm.dbg.value(metadata i32 undef, metadata !10250, metadata !DIExpression()) #23, !dbg !10289
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10255, metadata !DIExpression()) #23, !dbg !10289
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10291
  br i1 %8, label %10, label %9, !dbg !10292

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.122, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.120, i32 0, i32 0), i32 noundef 194) #26, !dbg !10293
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.123, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10293
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.120, i32 0, i32 0), i32 noundef 194) #26, !dbg !10293
  unreachable, !dbg !10293

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10294
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10275, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10285
  %12 = sub i32 %11, %7, !dbg !10295
  call void @llvm.dbg.value(metadata i32 %12, metadata !10275, metadata !DIExpression()), !dbg !10285
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10278
  call void @llvm.dbg.value(metadata i32 %13, metadata !10204, metadata !DIExpression()) #23, !dbg !10280
  call void @llvm.dbg.value(metadata i32 %13, metadata !10198, metadata !DIExpression()) #23, !dbg !10276
  call void @llvm.dbg.value(metadata i32 %13, metadata !10274, metadata !DIExpression()), !dbg !10285
  call void @llvm.dbg.value(metadata i32 undef, metadata !10250, metadata !DIExpression()) #23, !dbg !10289
  call void @llvm.dbg.value(metadata i32 undef, metadata !10264, metadata !DIExpression()) #23, !dbg !10296
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10298, !srcloc !10270
  %14 = udiv i32 %12, 8400, !dbg !10299
  ret i32 %14, !dbg !10300
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10301 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10192, metadata !DIExpression()) #23, !dbg !10305
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10307, !srcloc !10207
  call void @llvm.dbg.value(metadata i32 undef, metadata !10204, metadata !DIExpression()) #23, !dbg !10309
  call void @llvm.dbg.value(metadata i32 undef, metadata !10205, metadata !DIExpression()) #23, !dbg !10309
  call void @llvm.dbg.value(metadata i32 undef, metadata !10198, metadata !DIExpression()) #23, !dbg !10305
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10310
  br i1 %2, label %4, label %3, !dbg !10311

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.119, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.120, i32 0, i32 0), i32 noundef 148) #26, !dbg !10312
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.121, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10312
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.120, i32 0, i32 0), i32 noundef 148) #26, !dbg !10312
  unreachable, !dbg !10312

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10204, metadata !DIExpression()) #23, !dbg !10309
  call void @llvm.dbg.value(metadata i32 undef, metadata !10198, metadata !DIExpression()) #23, !dbg !10305
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10313
  call void @llvm.dbg.value(metadata i32 undef, metadata !10303, metadata !DIExpression()), !dbg !10314
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10315
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10316
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10304, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10314
  call void @llvm.dbg.value(metadata i32 undef, metadata !10250, metadata !DIExpression()) #23, !dbg !10317
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10255, metadata !DIExpression()) #23, !dbg !10317
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10319
  br i1 %7, label %9, label %8, !dbg !10320

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.118, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.122, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.120, i32 0, i32 0), i32 noundef 194) #26, !dbg !10321
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.123, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #26, !dbg !10321
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.120, i32 0, i32 0), i32 noundef 194) #26, !dbg !10321
  unreachable, !dbg !10321

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10322
  call void @llvm.dbg.value(metadata i32 %10, metadata !10304, metadata !DIExpression()), !dbg !10314
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10307
  call void @llvm.dbg.value(metadata i32 %11, metadata !10204, metadata !DIExpression()) #23, !dbg !10309
  call void @llvm.dbg.value(metadata i32 %11, metadata !10198, metadata !DIExpression()) #23, !dbg !10305
  call void @llvm.dbg.value(metadata i32 %11, metadata !10303, metadata !DIExpression()), !dbg !10314
  call void @llvm.dbg.value(metadata i32 undef, metadata !10250, metadata !DIExpression()) #23, !dbg !10317
  call void @llvm.dbg.value(metadata i32 undef, metadata !10264, metadata !DIExpression()) #23, !dbg !10323
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10325, !srcloc !10270
  ret i32 %10, !dbg !10326
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !10327 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10328
  %2 = icmp eq i32 %1, -16777216, !dbg !10330
  br i1 %2, label %3, label %6, !dbg !10331

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10332
  %5 = or i32 %4, 1, !dbg !10332
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10332
  br label %6, !dbg !10334

6:                                                ; preds = %3, %0
  ret void, !dbg !10335
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !10336 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10337
  %2 = and i32 %1, -2, !dbg !10337
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10337
  ret void, !dbg !10338
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #12 !dbg !10339 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10365, metadata !DIExpression()), !dbg !10368
  call void @llvm.dbg.value(metadata i8 %1, metadata !10366, metadata !DIExpression()), !dbg !10368
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10367, metadata !DIExpression()), !dbg !10368
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10369
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10369
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10368
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10370
  %8 = load i8, i8* %6, align 4, !dbg !10371
  %9 = zext i8 %8 to i32, !dbg !10372
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10372
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10373
  br i1 %11, label %18, label %24, !dbg !10374

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10368
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10370
  %14 = load i8, i8* %6, align 4, !dbg !10371
  %15 = zext i8 %14 to i32, !dbg !10372
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10372
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10373
  br i1 %17, label %18, label %24, !dbg !10374, !llvm.loop !10375

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10377
  %21 = load i8, i8* %20, align 1, !dbg !10377
  %22 = icmp eq i8 %21, %1, !dbg !10380
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10381
  br i1 %22, label %24, label %12, !dbg !10382

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10368
  ret i32 %25, !dbg !10383
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10384 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10395, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.value(metadata i8 %1, metadata !10396, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.value(metadata i32 %2, metadata !10397, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.value(metadata i32 0, metadata !10400, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.value(metadata i32 0, metadata !10401, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.value(metadata i8 0, metadata !10402, metadata !DIExpression()), !dbg !10412
  %4 = icmp eq i8 %1, 0, !dbg !10413
  br i1 %4, label %35, label %5, !dbg !10414

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10413
  br label %9, !dbg !10414

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10402, metadata !DIExpression()), !dbg !10412
  call void @llvm.dbg.value(metadata i32 %29, metadata !10400, metadata !DIExpression()), !dbg !10411
  %8 = icmp eq i32 %34, %6, !dbg !10413
  br i1 %8, label %35, label %9, !dbg !10414, !llvm.loop !10415

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10402, metadata !DIExpression()), !dbg !10412
  call void @llvm.dbg.value(metadata i32 %11, metadata !10400, metadata !DIExpression()), !dbg !10411
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10417
  %13 = load i32, i32* %12, align 4, !dbg !10417
  call void @llvm.dbg.value(metadata i32 %13, metadata !10399, metadata !DIExpression()), !dbg !10411
  %14 = and i32 %13, 31, !dbg !10418
  %15 = icmp ult i32 %14, 16, !dbg !10419
  br i1 %15, label %16, label %20, !dbg !10420

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10421
  %18 = load i32, i32* %17, align 4, !dbg !10421
  %19 = or i32 %18, 32, !dbg !10423
  call void @llvm.dbg.value(metadata i32 %19, metadata !10400, metadata !DIExpression()), !dbg !10411
  br label %28, !dbg !10424

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10425

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10426
  %23 = load i32, i32* %22, align 4, !dbg !10426
  call void @llvm.dbg.value(metadata i32 %23, metadata !10404, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10427
  %24 = lshr i32 %23, 7, !dbg !10428
  %25 = and i32 %24, 16, !dbg !10428
  %26 = or i32 %25, %23, !dbg !10428
  call void @llvm.dbg.value(metadata i32 %26, metadata !10400, metadata !DIExpression()), !dbg !10411
  br label %28, !dbg !10429

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !10411
  call void @llvm.dbg.value(metadata i32 %29, metadata !10400, metadata !DIExpression()), !dbg !10411
  %30 = lshr i32 %13, 5, !dbg !10430
  %31 = and i32 %30, 255, !dbg !10430
  call void @llvm.dbg.value(metadata i32 %31, metadata !10398, metadata !DIExpression()), !dbg !10411
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !10431
  call void @llvm.dbg.value(metadata i32 %32, metadata !10401, metadata !DIExpression()), !dbg !10411
  %33 = icmp slt i32 %32, 0, !dbg !10432
  %34 = add nuw nsw i32 %10, 1, !dbg !10434
  call void @llvm.dbg.value(metadata i32 %34, metadata !10402, metadata !DIExpression()), !dbg !10412
  br i1 %33, label %35, label %7, !dbg !10435

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10436
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10437 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10441, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata i32 %1, metadata !10442, metadata !DIExpression()), !dbg !10445
  call void @llvm.dbg.value(metadata i32 %2, metadata !10443, metadata !DIExpression()), !dbg !10445
  %4 = icmp ugt i32 %0, 175, !dbg !10446
  br i1 %4, label %16, label %5, !dbg !10448

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10449
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10450
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10450
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10444, metadata !DIExpression()), !dbg !10445
  %9 = add nsw i32 %6, -8, !dbg !10451
  %10 = icmp ult i32 %9, 3, !dbg !10451
  br i1 %10, label %16, label %11, !dbg !10453

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.128(%struct.device* noundef %8) #24, !dbg !10454
  br i1 %12, label %13, label %16, !dbg !10455

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !10456
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #26, !dbg !10457
  br label %16, !dbg !10458

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !10445
  ret i32 %17, !dbg !10459
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.128(%struct.device* noundef %0) unnamed_addr #1 !dbg !10460 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10464, metadata !DIExpression()), !dbg !10465
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10466, !srcloc !10468
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.129(%struct.device* noundef %0) #24, !dbg !10469
  ret i1 %2, !dbg !10470
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.129(%struct.device* noundef %0) unnamed_addr #1 !dbg !10471 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10473, metadata !DIExpression()), !dbg !10474
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #26, !dbg !10475
  ret i1 %2, !dbg !10476
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #4 !dbg !10477 {
  ret void, !dbg !10478
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !10479 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10481, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.value(metadata i32 0, metadata !10482, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.value(metadata i32 2, metadata !10483, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.value(metadata i32 0, metadata !10484, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.value(metadata i32 2, metadata !10485, metadata !DIExpression()), !dbg !10486
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10487
  %2 = and i32 %1, 12, !dbg !10488
  call void @llvm.dbg.value(metadata i32 %2, metadata !10481, metadata !DIExpression()), !dbg !10486
  %3 = icmp eq i32 %2, 8, !dbg !10489
  br i1 %3, label %4, label %18, !dbg !10489

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10490
  call void @llvm.dbg.value(metadata i32 %5, metadata !10484, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !10486
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10492
  %7 = and i32 %6, 63, !dbg !10493
  call void @llvm.dbg.value(metadata i32 %7, metadata !10485, metadata !DIExpression()), !dbg !10486
  %8 = udiv i32 16000000, %7, !dbg !10494
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10494
  %10 = lshr i32 %9, 6, !dbg !10494
  %11 = and i32 %10, 511, !dbg !10494
  %12 = mul i32 %11, %8, !dbg !10494
  call void @llvm.dbg.value(metadata i32 %12, metadata !10482, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.value(metadata i32 %12, metadata !10482, metadata !DIExpression()), !dbg !10486
  call void @llvm.dbg.value(metadata i32 %12, metadata !10482, metadata !DIExpression()), !dbg !10486
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10496
  %14 = lshr i32 %13, 15, !dbg !10497
  %15 = and i32 %14, 6, !dbg !10497
  %16 = add nuw nsw i32 %15, 2, !dbg !10497
  call void @llvm.dbg.value(metadata i32 %16, metadata !10483, metadata !DIExpression()), !dbg !10486
  %17 = udiv i32 %12, %16, !dbg !10498
  br label %18, !dbg !10499

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !10500
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10501
  %21 = lshr i32 %20, 4, !dbg !10502
  %22 = and i32 %21, 15, !dbg !10502
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !10503
  %24 = load i8, i8* %23, align 1, !dbg !10503
  %25 = zext i8 %24 to i32, !dbg !10503
  call void @llvm.dbg.value(metadata i32 %25, metadata !10481, metadata !DIExpression()), !dbg !10486
  %26 = lshr i32 %19, %25, !dbg !10504
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !10504
  ret void, !dbg !10505
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !10506 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !10548, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata i32 0, metadata !10549, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata i32 0, metadata !10550, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata i32 0, metadata !10551, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata i32 0, metadata !10552, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata i32 0, metadata !10553, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata i32 0, metadata !10554, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata i32 0, metadata !10555, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata i32 0, metadata !10556, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata i32 0, metadata !10557, metadata !DIExpression()), !dbg !10562
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !10563
  %4 = load i32, i32* %3, align 4, !dbg !10563
  %5 = and i32 %4, 1, !dbg !10565
  %6 = icmp eq i32 %5, 0, !dbg !10566
  br i1 %6, label %17, label %7, !dbg !10567

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10568
  %9 = and i32 %8, -100663297, !dbg !10568
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !10568
  %11 = load i32, i32* %10, align 4, !dbg !10568
  %12 = or i32 %9, %11, !dbg !10568
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10568
  %13 = load i32, i32* %10, align 4, !dbg !10570
  %14 = icmp eq i32 %13, 0, !dbg !10572
  %15 = zext i1 %14 to i32, !dbg !10573
  %16 = load i32, i32* %3, align 4, !dbg !10574
  br label %17, !dbg !10573

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !10574
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !10562
  call void @llvm.dbg.value(metadata i32 %19, metadata !10556, metadata !DIExpression()), !dbg !10562
  %20 = and i32 %18, 2, !dbg !10576
  %21 = icmp eq i32 %20, 0, !dbg !10577
  br i1 %21, label %32, label %22, !dbg !10578

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10579
  %24 = and i32 %23, -402653185, !dbg !10579
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !10579
  %26 = load i32, i32* %25, align 4, !dbg !10579
  %27 = or i32 %24, %26, !dbg !10579
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10579
  %28 = load i32, i32* %25, align 4, !dbg !10581
  %29 = icmp eq i32 %28, 0, !dbg !10583
  %30 = select i1 %29, i32 1, i32 %19, !dbg !10584
  %31 = load i32, i32* %3, align 4, !dbg !10585
  br label %32, !dbg !10584

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !10585
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !10562
  call void @llvm.dbg.value(metadata i32 %34, metadata !10556, metadata !DIExpression()), !dbg !10562
  %35 = and i32 %33, 4, !dbg !10587
  %36 = icmp eq i32 %35, 0, !dbg !10588
  br i1 %36, label %49, label %37, !dbg !10589

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10590
  %39 = and i32 %38, -3145729, !dbg !10590
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !10590
  %41 = load i32, i32* %40, align 4, !dbg !10590
  %42 = or i32 %39, %41, !dbg !10590
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10590
  %43 = load i32, i32* %40, align 4, !dbg !10592
  %44 = icmp eq i32 %43, 1048576, !dbg !10594
  %45 = select i1 %44, i32 1, i32 %34, !dbg !10595
  call void @llvm.dbg.value(metadata i32 %45, metadata !10556, metadata !DIExpression()), !dbg !10562
  %46 = icmp eq i32 %43, 0, !dbg !10596
  %47 = zext i1 %46 to i32, !dbg !10598
  %48 = load i32, i32* %3, align 4, !dbg !10599
  br label %49, !dbg !10598

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !10599
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !10562
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !10562
  call void @llvm.dbg.value(metadata i32 %52, metadata !10557, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata i32 %51, metadata !10556, metadata !DIExpression()), !dbg !10562
  %53 = and i32 %50, 8, !dbg !10601
  %54 = icmp eq i32 %53, 0, !dbg !10602
  br i1 %54, label %67, label %55, !dbg !10603

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10604
  %57 = and i32 %56, -12582913, !dbg !10604
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !10604
  %59 = load i32, i32* %58, align 4, !dbg !10604
  %60 = or i32 %57, %59, !dbg !10604
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10604
  %61 = load i32, i32* %58, align 4, !dbg !10606
  %62 = icmp eq i32 %61, 4194304, !dbg !10608
  %63 = select i1 %62, i32 1, i32 %51, !dbg !10609
  call void @llvm.dbg.value(metadata i32 %63, metadata !10556, metadata !DIExpression()), !dbg !10562
  %64 = icmp eq i32 %61, 0, !dbg !10610
  %65 = select i1 %64, i32 1, i32 %52, !dbg !10612
  %66 = load i32, i32* %3, align 4, !dbg !10613
  br label %67, !dbg !10612

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !10613
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !10562
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !10562
  call void @llvm.dbg.value(metadata i32 %70, metadata !10557, metadata !DIExpression()), !dbg !10562
  call void @llvm.dbg.value(metadata i32 %69, metadata !10556, metadata !DIExpression()), !dbg !10562
  %71 = and i32 %68, 32, !dbg !10614
  %72 = icmp eq i32 %71, 0, !dbg !10615
  br i1 %72, label %131, label %73, !dbg !10616

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !10617
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !10617
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10558, metadata !DIExpression()), !dbg !10617
  store volatile i32 0, i32* %2, align 4, !dbg !10617
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10617
  %76 = or i32 %75, 268435456, !dbg !10617
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10617
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10617
  %78 = and i32 %77, 268435456, !dbg !10617
  store volatile i32 %78, i32* %2, align 4, !dbg !10617
  %79 = load volatile i32, i32* %2, align 4, !dbg !10617
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !10618
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10619
  %81 = or i32 %80, 256, !dbg !10619
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10619
  %82 = tail call i32 @HAL_GetTick() #26, !dbg !10620
  call void @llvm.dbg.value(metadata i32 %82, metadata !10549, metadata !DIExpression()), !dbg !10562
  br label %83, !dbg !10621

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10622
  %85 = and i32 %84, 256, !dbg !10623
  %86 = icmp eq i32 %85, 0, !dbg !10624
  br i1 %86, label %87, label %91, !dbg !10621

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #26, !dbg !10625
  %89 = sub i32 %88, %82, !dbg !10628
  %90 = icmp ugt i32 %89, 2, !dbg !10629
  br i1 %90, label %439, label %83, !dbg !10630, !llvm.loop !10631

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10633
  %93 = and i32 %92, 768, !dbg !10634
  call void @llvm.dbg.value(metadata i32 %93, metadata !10550, metadata !DIExpression()), !dbg !10562
  %94 = icmp eq i32 %93, 0, !dbg !10635
  br i1 %94, label %116, label %95, !dbg !10637

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !10638
  %97 = load i32, i32* %96, align 4, !dbg !10638
  %98 = and i32 %97, 768, !dbg !10639
  %99 = icmp eq i32 %93, %98, !dbg !10640
  br i1 %99, label %116, label %100, !dbg !10641

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10642
  %102 = and i32 %101, -769, !dbg !10644
  call void @llvm.dbg.value(metadata i32 %102, metadata !10550, metadata !DIExpression()), !dbg !10562
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !10645
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !10646
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10647
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10648
  %104 = and i32 %103, 1, !dbg !10648
  %105 = icmp eq i32 %104, 0, !dbg !10648
  br i1 %105, label %116, label %106, !dbg !10650

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #26, !dbg !10651
  call void @llvm.dbg.value(metadata i32 %107, metadata !10549, metadata !DIExpression()), !dbg !10562
  br label %108, !dbg !10653

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10654
  %110 = and i32 %109, 2, !dbg !10655
  %111 = icmp eq i32 %110, 0, !dbg !10655
  br i1 %111, label %112, label %116, !dbg !10653

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #26, !dbg !10656
  %114 = sub i32 %113, %107, !dbg !10659
  %115 = icmp ugt i32 %114, 5000, !dbg !10660
  br i1 %115, label %439, label %108, !dbg !10661, !llvm.loop !10662

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !10664
  %118 = load i32, i32* %117, align 4, !dbg !10664
  %119 = and i32 %118, 768, !dbg !10664
  %120 = icmp eq i32 %119, 768, !dbg !10664
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10664
  %122 = and i32 %121, -2031617, !dbg !10664
  %123 = and i32 %118, 268434687, !dbg !10664
  %124 = select i1 %120, i32 %123, i32 0, !dbg !10664
  %125 = or i32 %122, %124, !dbg !10664
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10664
  %126 = load i32, i32* %117, align 4, !dbg !10664
  %127 = and i32 %126, 4095, !dbg !10664
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10664
  %129 = or i32 %128, %127, !dbg !10664
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10664
  %130 = load i32, i32* %3, align 4, !dbg !10666
  br label %131, !dbg !10668

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !10666
  %133 = and i32 %132, 16, !dbg !10669
  %134 = icmp eq i32 %133, 0, !dbg !10670
  br i1 %134, label %140, label %135, !dbg !10671

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !10672
  %137 = load i8, i8* %136, align 4, !dbg !10672
  %138 = zext i8 %137 to i32, !dbg !10672
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !10672
  %139 = load i32, i32* %3, align 4, !dbg !10674
  br label %140, !dbg !10676

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !10674
  %142 = and i32 %141, 128, !dbg !10677
  %143 = icmp eq i32 %142, 0, !dbg !10678
  br i1 %143, label %151, label %144, !dbg !10679

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10680
  %146 = and i32 %145, -12582913, !dbg !10680
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !10680
  %148 = load i32, i32* %147, align 4, !dbg !10680
  %149 = or i32 %146, %148, !dbg !10680
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10680
  %150 = load i32, i32* %3, align 4, !dbg !10682
  br label %151, !dbg !10684

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !10682
  %153 = and i32 %152, 64, !dbg !10685
  %154 = icmp eq i32 %153, 0, !dbg !10686
  br i1 %154, label %162, label %155, !dbg !10687

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10688
  %157 = and i32 %156, -67108865, !dbg !10688
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !10688
  %159 = load i32, i32* %158, align 4, !dbg !10688
  %160 = or i32 %157, %159, !dbg !10688
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10688
  %161 = load i32, i32* %3, align 4, !dbg !10690
  br label %162, !dbg !10692

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !10690
  %164 = and i32 %163, 256, !dbg !10693
  %165 = icmp eq i32 %164, 0, !dbg !10694
  br i1 %165, label %176, label %166, !dbg !10695

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10696
  %168 = and i32 %167, -134217729, !dbg !10696
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !10696
  %170 = load i32, i32* %169, align 4, !dbg !10696
  %171 = or i32 %168, %170, !dbg !10696
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10696
  %172 = load i32, i32* %169, align 4, !dbg !10698
  %173 = icmp eq i32 %172, 134217728, !dbg !10700
  %174 = select i1 %173, i32 1, i32 %70, !dbg !10701
  %175 = load i32, i32* %3, align 4, !dbg !10702
  br label %176, !dbg !10701

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !10702
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !10562
  call void @llvm.dbg.value(metadata i32 %178, metadata !10557, metadata !DIExpression()), !dbg !10562
  %179 = and i32 %177, 512, !dbg !10704
  %180 = icmp eq i32 %179, 0, !dbg !10705
  br i1 %180, label %188, label %181, !dbg !10706

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10707
  %183 = and i32 %182, -268435457, !dbg !10707
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !10707
  %185 = load i32, i32* %184, align 4, !dbg !10707
  %186 = or i32 %183, %185, !dbg !10707
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10707
  %187 = load i32, i32* %3, align 4, !dbg !10709
  br label %188, !dbg !10711

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !10709
  %190 = and i32 %189, 1024, !dbg !10712
  %191 = icmp eq i32 %190, 0, !dbg !10713
  br i1 %191, label %204, label %192, !dbg !10714

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10715
  %194 = and i32 %193, -536870913, !dbg !10715
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !10715
  %196 = load i32, i32* %195, align 4, !dbg !10715
  %197 = or i32 %194, %196, !dbg !10715
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10715
  %198 = load i32, i32* %195, align 4, !dbg !10717
  %199 = icmp eq i32 %198, 536870912, !dbg !10719
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !10720
  call void @llvm.dbg.value(metadata i32 %69, metadata !10556, metadata !DIExpression()), !dbg !10562
  br i1 %201, label %209, label %202, !dbg !10720

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !10721
  br label %206, !dbg !10720

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !10556, metadata !DIExpression()), !dbg !10562
  %205 = icmp eq i32 %69, 1, !dbg !10723
  br i1 %205, label %209, label %206, !dbg !10724

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !10721
  %208 = icmp eq i32 %207, 2048, !dbg !10725
  br i1 %208, label %209, label %356, !dbg !10726

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !10727
  %210 = tail call i32 @HAL_GetTick() #26, !dbg !10729
  call void @llvm.dbg.value(metadata i32 %210, metadata !10549, metadata !DIExpression()), !dbg !10562
  br label %211, !dbg !10730

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10731
  %213 = and i32 %212, 134217728, !dbg !10731
  %214 = icmp eq i32 %213, 0, !dbg !10731
  br i1 %214, label %219, label %215, !dbg !10730

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #26, !dbg !10732
  %217 = sub i32 %216, %210, !dbg !10735
  %218 = icmp ugt i32 %217, 2, !dbg !10736
  br i1 %218, label %439, label %211, !dbg !10737, !llvm.loop !10738

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !10740
  %221 = and i32 %220, 1, !dbg !10742
  %222 = icmp eq i32 %221, 0, !dbg !10743
  br i1 %222, label %227, label %223, !dbg !10744

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !10745
  %225 = load i32, i32* %224, align 4, !dbg !10745
  %226 = icmp eq i32 %225, 0, !dbg !10746
  br i1 %226, label %234, label %227, !dbg !10747

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !10748
  %229 = icmp eq i32 %228, 0, !dbg !10749
  br i1 %229, label %252, label %230, !dbg !10750

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !10751
  %232 = load i32, i32* %231, align 4, !dbg !10751
  %233 = icmp eq i32 %232, 0, !dbg !10752
  br i1 %233, label %234, label %252, !dbg !10753

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10754
  %236 = and i32 %235, 196608, !dbg !10756
  call void @llvm.dbg.value(metadata i32 %236, metadata !10551, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !10562
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10757
  %238 = and i32 %237, 251658240, !dbg !10758
  call void @llvm.dbg.value(metadata i32 %238, metadata !10552, metadata !DIExpression()), !dbg !10562
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !10759
  %240 = load i32, i32* %239, align 4, !dbg !10759
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !10759
  %242 = load i32, i32* %241, align 4, !dbg !10759
  %243 = shl i32 %242, 6, !dbg !10759
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !10759
  %245 = load i32, i32* %244, align 4, !dbg !10759
  %246 = shl i32 %245, 28, !dbg !10759
  %247 = or i32 %240, %236, !dbg !10759
  %248 = or i32 %247, %238, !dbg !10759
  %249 = or i32 %248, %243, !dbg !10759
  %250 = or i32 %249, %246, !dbg !10759
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10759
  %251 = load i32, i32* %3, align 4, !dbg !10760
  br label %252, !dbg !10762

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !10760
  %254 = and i32 %253, 4, !dbg !10763
  %255 = icmp eq i32 %254, 0, !dbg !10764
  br i1 %255, label %260, label %256, !dbg !10765

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !10766
  %258 = load i32, i32* %257, align 4, !dbg !10766
  %259 = icmp eq i32 %258, 1048576, !dbg !10767
  br i1 %259, label %267, label %260, !dbg !10768

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !10769
  %262 = icmp eq i32 %261, 0, !dbg !10770
  br i1 %262, label %291, label %263, !dbg !10771

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !10772
  %265 = load i32, i32* %264, align 4, !dbg !10772
  %266 = icmp eq i32 %265, 4194304, !dbg !10773
  br i1 %266, label %267, label %291, !dbg !10774

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10775
  %269 = and i32 %268, 196608, !dbg !10777
  call void @llvm.dbg.value(metadata i32 %269, metadata !10551, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !10562
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10778
  %271 = and i32 %270, 1879048192, !dbg !10779
  call void @llvm.dbg.value(metadata i32 %271, metadata !10553, metadata !DIExpression()), !dbg !10562
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !10780
  %273 = load i32, i32* %272, align 4, !dbg !10780
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !10780
  %275 = load i32, i32* %274, align 4, !dbg !10780
  %276 = shl i32 %275, 6, !dbg !10780
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !10780
  %278 = load i32, i32* %277, align 4, !dbg !10780
  %279 = shl i32 %278, 24, !dbg !10780
  %280 = or i32 %273, %269, !dbg !10780
  %281 = or i32 %280, %271, !dbg !10780
  %282 = or i32 %281, %276, !dbg !10780
  %283 = or i32 %282, %279, !dbg !10780
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10780
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10781
  %285 = and i32 %284, -32, !dbg !10781
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !10781
  %287 = load i32, i32* %286, align 4, !dbg !10781
  %288 = add i32 %287, -1, !dbg !10781
  %289 = or i32 %288, %285, !dbg !10781
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10781
  %290 = load i32, i32* %3, align 4, !dbg !10782
  br label %291, !dbg !10784

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !10782
  %293 = and i32 %292, 1024, !dbg !10785
  %294 = icmp eq i32 %293, 0, !dbg !10786
  br i1 %294, label %321, label %295, !dbg !10787

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !10788
  %297 = load i32, i32* %296, align 4, !dbg !10788
  %298 = icmp eq i32 %297, 536870912, !dbg !10789
  br i1 %298, label %299, label %321, !dbg !10790

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10791
  call void @llvm.dbg.value(metadata i32 %300, metadata !10552, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !10562
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10793
  %302 = and i32 %301, 1879048192, !dbg !10794
  call void @llvm.dbg.value(metadata i32 %302, metadata !10553, metadata !DIExpression()), !dbg !10562
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !10795
  %304 = load i32, i32* %303, align 4, !dbg !10795
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !10795
  %306 = load i32, i32* %305, align 4, !dbg !10795
  %307 = shl i32 %306, 6, !dbg !10795
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !10795
  %309 = load i32, i32* %308, align 4, !dbg !10795
  %310 = shl i32 %309, 15, !dbg !10795
  %311 = add i32 %310, -65536, !dbg !10795
  %312 = and i32 %311, -65536, !dbg !10795
  %313 = shl i32 %300, 9, !dbg !10795
  %314 = and i32 %313, 100663296, !dbg !10795
  %315 = add nuw nsw i32 %314, 33554432, !dbg !10795
  %316 = or i32 %302, %304, !dbg !10795
  %317 = or i32 %316, %315, !dbg !10795
  %318 = or i32 %317, %307, !dbg !10795
  %319 = or i32 %318, %312, !dbg !10795
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10795
  %320 = load i32, i32* %3, align 4, !dbg !10796
  br label %321, !dbg !10798

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !10796
  %323 = and i32 %322, 2048, !dbg !10799
  %324 = icmp eq i32 %323, 0, !dbg !10800
  br i1 %324, label %346, label %325, !dbg !10801

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !10802
  %327 = load i32, i32* %326, align 4, !dbg !10802
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !10802
  %329 = load i32, i32* %328, align 4, !dbg !10802
  %330 = shl i32 %329, 6, !dbg !10802
  %331 = or i32 %330, %327, !dbg !10802
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !10802
  %333 = load i32, i32* %332, align 4, !dbg !10802
  %334 = shl i32 %333, 15, !dbg !10802
  %335 = add i32 %334, -65536, !dbg !10802
  %336 = and i32 %335, -65536, !dbg !10802
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !10802
  %338 = load i32, i32* %337, align 4, !dbg !10802
  %339 = shl i32 %338, 24, !dbg !10802
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !10802
  %341 = load i32, i32* %340, align 4, !dbg !10802
  %342 = shl i32 %341, 28, !dbg !10802
  %343 = or i32 %331, %339, !dbg !10802
  %344 = or i32 %343, %336, !dbg !10802
  %345 = or i32 %344, %342, !dbg !10802
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10802
  br label %346, !dbg !10804

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !10805
  %347 = tail call i32 @HAL_GetTick() #26, !dbg !10806
  call void @llvm.dbg.value(metadata i32 %347, metadata !10549, metadata !DIExpression()), !dbg !10562
  br label %348, !dbg !10807

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10808
  %350 = and i32 %349, 134217728, !dbg !10809
  %351 = icmp eq i32 %350, 0, !dbg !10809
  br i1 %351, label %352, label %356, !dbg !10807

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #26, !dbg !10810
  %354 = sub i32 %353, %347, !dbg !10813
  %355 = icmp ugt i32 %354, 2, !dbg !10814
  br i1 %355, label %439, label %348, !dbg !10815, !llvm.loop !10816

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !10818
  br i1 %357, label %358, label %439, !dbg !10820

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !10821
  %359 = tail call i32 @HAL_GetTick() #26, !dbg !10823
  call void @llvm.dbg.value(metadata i32 %359, metadata !10549, metadata !DIExpression()), !dbg !10562
  br label %360, !dbg !10824

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10825
  %362 = and i32 %361, 536870912, !dbg !10825
  %363 = icmp eq i32 %362, 0, !dbg !10825
  br i1 %363, label %368, label %364, !dbg !10824

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #26, !dbg !10826
  %366 = sub i32 %365, %359, !dbg !10829
  %367 = icmp ugt i32 %366, 2, !dbg !10830
  br i1 %367, label %439, label %360, !dbg !10831, !llvm.loop !10832

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !10834
  %370 = and i32 %369, 4, !dbg !10836
  %371 = icmp eq i32 %370, 0, !dbg !10837
  br i1 %371, label %376, label %372, !dbg !10838

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !10839
  %374 = load i32, i32* %373, align 4, !dbg !10839
  %375 = icmp eq i32 %374, 0, !dbg !10840
  br i1 %375, label %383, label %376, !dbg !10841

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !10842
  %378 = icmp eq i32 %377, 0, !dbg !10843
  br i1 %378, label %405, label %379, !dbg !10844

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !10845
  %381 = load i32, i32* %380, align 4, !dbg !10845
  %382 = icmp eq i32 %381, 0, !dbg !10846
  br i1 %382, label %383, label %405, !dbg !10847

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !10848
  %385 = and i32 %384, 196608, !dbg !10850
  call void @llvm.dbg.value(metadata i32 %385, metadata !10554, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !10562
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !10851
  %387 = load i32, i32* %386, align 4, !dbg !10851
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !10851
  %389 = load i32, i32* %388, align 4, !dbg !10851
  %390 = shl i32 %389, 6, !dbg !10851
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !10851
  %392 = load i32, i32* %391, align 4, !dbg !10851
  %393 = shl i32 %392, 24, !dbg !10851
  %394 = or i32 %385, %387, !dbg !10851
  %395 = or i32 %394, %390, !dbg !10851
  %396 = or i32 %395, %393, !dbg !10851
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !10851
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10852
  %398 = and i32 %397, -7937, !dbg !10852
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !10852
  %400 = load i32, i32* %399, align 4, !dbg !10852
  %401 = shl i32 %400, 8, !dbg !10852
  %402 = add i32 %401, -256, !dbg !10852
  %403 = or i32 %402, %398, !dbg !10852
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10852
  %404 = load i32, i32* %3, align 4, !dbg !10853
  br label %405, !dbg !10855

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !10853
  %407 = and i32 %406, 256, !dbg !10856
  %408 = icmp eq i32 %407, 0, !dbg !10857
  br i1 %408, label %429, label %409, !dbg !10858

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !10859
  %411 = load i32, i32* %410, align 4, !dbg !10859
  %412 = icmp eq i32 %411, 134217728, !dbg !10860
  br i1 %412, label %413, label %429, !dbg !10861

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !10862
  %415 = and i32 %414, 251658240, !dbg !10864
  call void @llvm.dbg.value(metadata i32 %415, metadata !10555, metadata !DIExpression()), !dbg !10562
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !10865
  %417 = load i32, i32* %416, align 4, !dbg !10865
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !10865
  %419 = load i32, i32* %418, align 4, !dbg !10865
  %420 = shl i32 %419, 6, !dbg !10865
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !10865
  %422 = load i32, i32* %421, align 4, !dbg !10865
  %423 = shl i32 %422, 15, !dbg !10865
  %424 = add i32 %423, -65536, !dbg !10865
  %425 = and i32 %424, -65536, !dbg !10865
  %426 = or i32 %415, %417, !dbg !10865
  %427 = or i32 %426, %420, !dbg !10865
  %428 = or i32 %427, %425, !dbg !10865
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !10865
  br label %429, !dbg !10866

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !10867
  %430 = tail call i32 @HAL_GetTick() #26, !dbg !10868
  call void @llvm.dbg.value(metadata i32 %430, metadata !10549, metadata !DIExpression()), !dbg !10562
  br label %431, !dbg !10869

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10870
  %433 = and i32 %432, 536870912, !dbg !10871
  %434 = icmp eq i32 %433, 0, !dbg !10871
  br i1 %434, label %435, label %439, !dbg !10869

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #26, !dbg !10872
  %437 = sub i32 %436, %430, !dbg !10875
  %438 = icmp ugt i32 %437, 2, !dbg !10876
  br i1 %438, label %439, label %431, !dbg !10877, !llvm.loop !10878

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !10562
  ret i32 %440, !dbg !10880
}

; Function Attrs: optsize
declare !dbg !10881 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #15 !dbg !10883 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !10887, metadata !DIExpression()), !dbg !10889
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !10890
  store i32 2047, i32* %2, align 4, !dbg !10891
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10892
  %4 = and i32 %3, 63, !dbg !10893
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !10894
  store i32 %4, i32* %5, align 4, !dbg !10895
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10896
  %7 = lshr i32 %6, 6, !dbg !10897
  %8 = and i32 %7, 511, !dbg !10897
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !10898
  store i32 %8, i32* %9, align 4, !dbg !10899
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10900
  %11 = lshr i32 %10, 15, !dbg !10901
  %12 = and i32 %11, 6, !dbg !10901
  %13 = add nuw nsw i32 %12, 2, !dbg !10901
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !10902
  store i32 %13, i32* %14, align 4, !dbg !10903
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10904
  %16 = lshr i32 %15, 24, !dbg !10905
  %17 = and i32 %16, 15, !dbg !10905
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !10906
  store i32 %17, i32* %18, align 4, !dbg !10907
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !10908
  %20 = lshr i32 %19, 28, !dbg !10909
  %21 = and i32 %20, 7, !dbg !10909
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !10910
  store i32 %21, i32* %22, align 4, !dbg !10911
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !10912
  %24 = and i32 %23, 63, !dbg !10913
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !10914
  store i32 %24, i32* %25, align 4, !dbg !10915
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !10916
  %27 = lshr i32 %26, 6, !dbg !10917
  %28 = and i32 %27, 511, !dbg !10917
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !10918
  store i32 %28, i32* %29, align 4, !dbg !10919
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !10920
  %31 = lshr i32 %30, 15, !dbg !10921
  %32 = and i32 %31, 6, !dbg !10921
  %33 = add nuw nsw i32 %32, 2, !dbg !10921
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !10922
  store i32 %33, i32* %34, align 4, !dbg !10923
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !10924
  %36 = lshr i32 %35, 24, !dbg !10925
  %37 = and i32 %36, 15, !dbg !10925
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !10926
  store i32 %37, i32* %38, align 4, !dbg !10927
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10928
  %40 = and i32 %39, 31, !dbg !10929
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !10930
  store i32 %40, i32* %41, align 4, !dbg !10931
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10932
  %43 = lshr i32 %42, 8, !dbg !10933
  %44 = and i32 %43, 31, !dbg !10933
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !10934
  store i32 %44, i32* %45, align 4, !dbg !10935
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10936
  %47 = and i32 %46, 3145728, !dbg !10936
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !10937
  store i32 %47, i32* %48, align 4, !dbg !10938
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10939
  %50 = and i32 %49, 12582912, !dbg !10939
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !10940
  store i32 %50, i32* %51, align 4, !dbg !10941
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10942
  %53 = and i32 %52, 100663296, !dbg !10942
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !10943
  store i32 %53, i32* %54, align 4, !dbg !10944
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10945
  %56 = and i32 %55, 402653184, !dbg !10945
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !10946
  store i32 %56, i32* %57, align 4, !dbg !10947
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10948
  %59 = and i32 %58, 2031616, !dbg !10949
  call void @llvm.dbg.value(metadata i32 %59, metadata !10888, metadata !DIExpression()), !dbg !10889
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10950
  %61 = and i32 %60, 768, !dbg !10951
  %62 = or i32 %61, %59, !dbg !10952
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !10953
  store i32 %62, i32* %63, align 4, !dbg !10954
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10955
  %65 = and i32 %64, 67108864, !dbg !10955
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !10956
  store i32 %65, i32* %66, align 4, !dbg !10957
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10958
  %68 = and i32 %67, 12582912, !dbg !10958
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !10959
  store i32 %68, i32* %69, align 4, !dbg !10960
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10961
  %71 = and i32 %70, 134217728, !dbg !10961
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !10962
  store i32 %71, i32* %72, align 4, !dbg !10963
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10964
  %74 = and i32 %73, 268435456, !dbg !10964
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !10965
  store i32 %74, i32* %75, align 4, !dbg !10966
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !10967
  %77 = and i32 %76, 536870912, !dbg !10967
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !10968
  store i32 %77, i32* %78, align 4, !dbg !10969
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10970
  %80 = lshr i32 %79, 24, !dbg !10972
  %81 = trunc i32 %80 to i8, !dbg !10972
  %82 = and i8 %81, 1, !dbg !10972
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !10973
  store i8 %82, i8* %83, align 4, !dbg !10975
  ret void, !dbg !10976
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #15 !dbg !10977 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10979, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 0, metadata !10980, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 0, metadata !10981, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 0, metadata !10982, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 0, metadata !10983, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 0, metadata !10984, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 0, metadata !10985, metadata !DIExpression()), !dbg !10986
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !10987

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10988
  call void @llvm.dbg.value(metadata i32 %3, metadata !10983, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 %3, metadata !10983, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !10986
  %4 = lshr i32 %3, 20, !dbg !10991
  %5 = and i32 %4, 15, !dbg !10991
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !10991

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10992
  call void @llvm.dbg.value(metadata i32 undef, metadata !10982, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 undef, metadata !10982, metadata !DIExpression()), !dbg !10986
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !10996
  %9 = and i32 %8, 63, !dbg !10996
  %10 = udiv i32 16000000, %9, !dbg !10996
  call void @llvm.dbg.value(metadata i32 %10, metadata !10982, metadata !DIExpression()), !dbg !10986
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !10997
  %12 = lshr i32 %11, 24, !dbg !10998
  %13 = and i32 %12, 15, !dbg !10998
  call void @llvm.dbg.value(metadata i32 %13, metadata !10980, metadata !DIExpression()), !dbg !10986
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !10999
  %15 = lshr i32 %14, 6, !dbg !11000
  %16 = and i32 %15, 511, !dbg !11000
  %17 = mul i32 %16, %10, !dbg !11001
  %18 = udiv i32 %17, %13, !dbg !11002
  call void @llvm.dbg.value(metadata i32 %18, metadata !10981, metadata !DIExpression()), !dbg !10986
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11003
  %20 = lshr i32 %19, 8, !dbg !11004
  %21 = and i32 %20, 31, !dbg !11004
  %22 = add nuw nsw i32 %21, 1, !dbg !11005
  call void @llvm.dbg.value(metadata i32 %22, metadata !10980, metadata !DIExpression()), !dbg !10986
  %23 = udiv i32 %18, %22, !dbg !11006
  call void @llvm.dbg.value(metadata i32 %23, metadata !10981, metadata !DIExpression()), !dbg !10986
  br label %123, !dbg !11007

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11008
  call void @llvm.dbg.value(metadata i32 undef, metadata !10982, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 undef, metadata !10982, metadata !DIExpression()), !dbg !10986
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11011
  %27 = and i32 %26, 63, !dbg !11011
  %28 = udiv i32 16000000, %27, !dbg !11011
  call void @llvm.dbg.value(metadata i32 %28, metadata !10982, metadata !DIExpression()), !dbg !10986
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11012
  %30 = lshr i32 %29, 24, !dbg !11013
  %31 = and i32 %30, 15, !dbg !11013
  call void @llvm.dbg.value(metadata i32 %31, metadata !10980, metadata !DIExpression()), !dbg !10986
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11014
  %33 = lshr i32 %32, 6, !dbg !11015
  %34 = and i32 %33, 511, !dbg !11015
  %35 = mul i32 %34, %28, !dbg !11016
  %36 = udiv i32 %35, %31, !dbg !11017
  call void @llvm.dbg.value(metadata i32 %36, metadata !10981, metadata !DIExpression()), !dbg !10986
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11018
  %38 = and i32 %37, 31, !dbg !11019
  %39 = add nuw nsw i32 %38, 1, !dbg !11020
  call void @llvm.dbg.value(metadata i32 %39, metadata !10980, metadata !DIExpression()), !dbg !10986
  %40 = udiv i32 %36, %39, !dbg !11021
  call void @llvm.dbg.value(metadata i32 %40, metadata !10981, metadata !DIExpression()), !dbg !10986
  br label %123, !dbg !11022

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11023
  call void @llvm.dbg.value(metadata i32 undef, metadata !10982, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 undef, metadata !10982, metadata !DIExpression()), !dbg !10986
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11026
  %44 = and i32 %43, 63, !dbg !11026
  %45 = udiv i32 16000000, %44, !dbg !11026
  call void @llvm.dbg.value(metadata i32 %45, metadata !10982, metadata !DIExpression()), !dbg !10986
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11027
  %47 = lshr i32 %46, 28, !dbg !11028
  %48 = and i32 %47, 7, !dbg !11028
  call void @llvm.dbg.value(metadata i32 %48, metadata !10980, metadata !DIExpression()), !dbg !10986
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11029
  %50 = lshr i32 %49, 6, !dbg !11030
  %51 = and i32 %50, 511, !dbg !11030
  %52 = mul i32 %51, %45, !dbg !11031
  %53 = udiv i32 %52, %48, !dbg !11032
  call void @llvm.dbg.value(metadata i32 %53, metadata !10981, metadata !DIExpression()), !dbg !10986
  br label %123, !dbg !11033

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !10981, metadata !DIExpression()), !dbg !10986
  br label %123, !dbg !11034

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11036
  call void @llvm.dbg.value(metadata i32 16000000, metadata !10981, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 16000000, metadata !10981, metadata !DIExpression()), !dbg !10986
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11039
  call void @llvm.dbg.value(metadata i32 %58, metadata !10984, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !10986
  %59 = lshr i32 %58, 25, !dbg !11041
  %60 = and i32 %59, 3, !dbg !11041
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !11041

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11042
  call void @llvm.dbg.value(metadata i32 undef, metadata !10982, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 undef, metadata !10982, metadata !DIExpression()), !dbg !10986
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11046
  %64 = and i32 %63, 63, !dbg !11046
  %65 = udiv i32 16000000, %64, !dbg !11046
  call void @llvm.dbg.value(metadata i32 %65, metadata !10982, metadata !DIExpression()), !dbg !10986
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11047
  %67 = lshr i32 %66, 6, !dbg !11048
  %68 = and i32 %67, 511, !dbg !11048
  %69 = mul i32 %68, %65, !dbg !11049
  call void @llvm.dbg.value(metadata i32 %69, metadata !10985, metadata !DIExpression()), !dbg !10986
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11050
  %71 = lshr i32 %70, 28, !dbg !11051
  %72 = and i32 %71, 7, !dbg !11051
  %73 = udiv i32 %69, %72, !dbg !11052
  call void @llvm.dbg.value(metadata i32 %73, metadata !10981, metadata !DIExpression()), !dbg !10986
  br label %123, !dbg !11053

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11054
  call void @llvm.dbg.value(metadata i32 undef, metadata !10982, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 undef, metadata !10982, metadata !DIExpression()), !dbg !10986
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11057
  %77 = and i32 %76, 63, !dbg !11057
  %78 = udiv i32 16000000, %77, !dbg !11057
  call void @llvm.dbg.value(metadata i32 %78, metadata !10982, metadata !DIExpression()), !dbg !10986
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11058
  %80 = lshr i32 %79, 6, !dbg !11059
  %81 = and i32 %80, 511, !dbg !11059
  %82 = mul i32 %81, %78, !dbg !11060
  call void @llvm.dbg.value(metadata i32 %82, metadata !10985, metadata !DIExpression()), !dbg !10986
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11061
  %84 = lshr i32 %83, 28, !dbg !11062
  %85 = and i32 %84, 7, !dbg !11062
  %86 = udiv i32 %82, %85, !dbg !11063
  call void @llvm.dbg.value(metadata i32 %86, metadata !10981, metadata !DIExpression()), !dbg !10986
  br label %123, !dbg !11064

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11065
  call void @llvm.dbg.value(metadata i32 16000000, metadata !10981, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 16000000, metadata !10981, metadata !DIExpression()), !dbg !10986
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11068
  call void @llvm.dbg.value(metadata i32 %91, metadata !10984, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !10986
  %92 = lshr i32 %91, 27, !dbg !11070
  %93 = and i32 %92, 3, !dbg !11070
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !11070

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11071
  call void @llvm.dbg.value(metadata i32 undef, metadata !10982, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 undef, metadata !10982, metadata !DIExpression()), !dbg !10986
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11075
  %97 = and i32 %96, 63, !dbg !11075
  %98 = udiv i32 16000000, %97, !dbg !11075
  call void @llvm.dbg.value(metadata i32 %98, metadata !10982, metadata !DIExpression()), !dbg !10986
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11076
  %100 = lshr i32 %99, 6, !dbg !11077
  %101 = and i32 %100, 511, !dbg !11077
  %102 = mul i32 %101, %98, !dbg !11078
  call void @llvm.dbg.value(metadata i32 %102, metadata !10985, metadata !DIExpression()), !dbg !10986
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11079
  %104 = lshr i32 %103, 28, !dbg !11080
  %105 = and i32 %104, 7, !dbg !11080
  %106 = udiv i32 %102, %105, !dbg !11081
  call void @llvm.dbg.value(metadata i32 %106, metadata !10981, metadata !DIExpression()), !dbg !10986
  br label %123, !dbg !11082

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11083
  call void @llvm.dbg.value(metadata i32 undef, metadata !10982, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 undef, metadata !10982, metadata !DIExpression()), !dbg !10986
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11086
  %110 = and i32 %109, 63, !dbg !11086
  %111 = udiv i32 16000000, %110, !dbg !11086
  call void @llvm.dbg.value(metadata i32 %111, metadata !10982, metadata !DIExpression()), !dbg !10986
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11087
  %113 = lshr i32 %112, 6, !dbg !11088
  %114 = and i32 %113, 511, !dbg !11088
  %115 = mul i32 %114, %111, !dbg !11089
  call void @llvm.dbg.value(metadata i32 %115, metadata !10985, metadata !DIExpression()), !dbg !10986
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11090
  %117 = lshr i32 %116, 28, !dbg !11091
  %118 = and i32 %117, 7, !dbg !11091
  %119 = udiv i32 %115, %118, !dbg !11092
  call void @llvm.dbg.value(metadata i32 %119, metadata !10981, metadata !DIExpression()), !dbg !10986
  br label %123, !dbg !11093

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11094
  call void @llvm.dbg.value(metadata i32 16000000, metadata !10981, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.value(metadata i32 16000000, metadata !10981, metadata !DIExpression()), !dbg !10986
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !10986
  call void @llvm.dbg.value(metadata i32 %124, metadata !10981, metadata !DIExpression()), !dbg !10986
  ret i32 %124, !dbg !11097
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #14 !dbg !11098 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !11102, metadata !DIExpression()), !dbg !11103
  %2 = icmp eq i8 %0, 1, !dbg !11104
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11106
  %4 = and i32 %3, -9, !dbg !11107
  %5 = select i1 %2, i32 8, i32 0, !dbg !11107
  %6 = or i32 %4, %5, !dbg !11107
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11106
  ret void, !dbg !11108
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11109 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !11114, metadata !DIExpression()), !dbg !11116
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11117
  %2 = tail call i32 @HAL_GetTick() #26, !dbg !11118
  call void @llvm.dbg.value(metadata i32 %2, metadata !11115, metadata !DIExpression()), !dbg !11116
  br label %3, !dbg !11119

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11120
  %5 = and i32 %4, 134217728, !dbg !11120
  %6 = icmp eq i32 %5, 0, !dbg !11120
  br i1 %6, label %11, label %7, !dbg !11119

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #26, !dbg !11121
  %9 = sub i32 %8, %2, !dbg !11124
  %10 = icmp ugt i32 %9, 2, !dbg !11125
  br i1 %10, label %41, label %3, !dbg !11126, !llvm.loop !11127

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !11129
  %13 = load i32, i32* %12, align 4, !dbg !11129
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !11129
  %15 = load i32, i32* %14, align 4, !dbg !11129
  %16 = shl i32 %15, 6, !dbg !11129
  %17 = or i32 %16, %13, !dbg !11129
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !11129
  %19 = load i32, i32* %18, align 4, !dbg !11129
  %20 = shl i32 %19, 15, !dbg !11129
  %21 = add i32 %20, -65536, !dbg !11129
  %22 = and i32 %21, -65536, !dbg !11129
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !11129
  %24 = load i32, i32* %23, align 4, !dbg !11129
  %25 = shl i32 %24, 24, !dbg !11129
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !11129
  %27 = load i32, i32* %26, align 4, !dbg !11129
  %28 = shl i32 %27, 28, !dbg !11129
  %29 = or i32 %17, %25, !dbg !11129
  %30 = or i32 %29, %22, !dbg !11129
  %31 = or i32 %30, %28, !dbg !11129
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11129
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11130
  %32 = tail call i32 @HAL_GetTick() #26, !dbg !11131
  call void @llvm.dbg.value(metadata i32 %32, metadata !11115, metadata !DIExpression()), !dbg !11116
  br label %33, !dbg !11132

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11133
  %35 = and i32 %34, 134217728, !dbg !11134
  %36 = icmp eq i32 %35, 0, !dbg !11134
  br i1 %36, label %37, label %41, !dbg !11132

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #26, !dbg !11135
  %39 = sub i32 %38, %32, !dbg !11138
  %40 = icmp ugt i32 %39, 2, !dbg !11139
  br i1 %40, label %41, label %33, !dbg !11140, !llvm.loop !11141

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !11116
  ret i32 %42, !dbg !11143
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !11144 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11149
  %1 = tail call i32 @HAL_GetTick() #26, !dbg !11150
  call void @llvm.dbg.value(metadata i32 %1, metadata !11148, metadata !DIExpression()), !dbg !11151
  br label %2, !dbg !11152

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11153
  %4 = and i32 %3, 134217728, !dbg !11153
  %5 = icmp eq i32 %4, 0, !dbg !11154
  br i1 %5, label %10, label %6, !dbg !11152

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #26, !dbg !11155
  %8 = sub i32 %7, %1, !dbg !11158
  %9 = icmp ugt i32 %8, 2, !dbg !11159
  br i1 %9, label %10, label %2, !dbg !11160, !llvm.loop !11161

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !11151
  ret i32 %11, !dbg !11163
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11164 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !11169, metadata !DIExpression()), !dbg !11171
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11172
  %2 = tail call i32 @HAL_GetTick() #26, !dbg !11173
  call void @llvm.dbg.value(metadata i32 %2, metadata !11170, metadata !DIExpression()), !dbg !11171
  br label %3, !dbg !11174

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11175
  %5 = and i32 %4, 536870912, !dbg !11175
  %6 = icmp eq i32 %5, 0, !dbg !11175
  br i1 %6, label %11, label %7, !dbg !11174

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #26, !dbg !11176
  %9 = sub i32 %8, %2, !dbg !11179
  %10 = icmp ugt i32 %9, 2, !dbg !11180
  br i1 %10, label %37, label %3, !dbg !11181, !llvm.loop !11182

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !11184
  %13 = load i32, i32* %12, align 4, !dbg !11184
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !11184
  %15 = load i32, i32* %14, align 4, !dbg !11184
  %16 = shl i32 %15, 6, !dbg !11184
  %17 = or i32 %16, %13, !dbg !11184
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !11184
  %19 = load i32, i32* %18, align 4, !dbg !11184
  %20 = shl i32 %19, 15, !dbg !11184
  %21 = add i32 %20, -65536, !dbg !11184
  %22 = and i32 %21, -65536, !dbg !11184
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !11184
  %24 = load i32, i32* %23, align 4, !dbg !11184
  %25 = shl i32 %24, 24, !dbg !11184
  %26 = or i32 %17, %25, !dbg !11184
  %27 = or i32 %26, %22, !dbg !11184
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11184
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11185
  %28 = tail call i32 @HAL_GetTick() #26, !dbg !11186
  call void @llvm.dbg.value(metadata i32 %28, metadata !11170, metadata !DIExpression()), !dbg !11171
  br label %29, !dbg !11187

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11188
  %31 = and i32 %30, 536870912, !dbg !11189
  %32 = icmp eq i32 %31, 0, !dbg !11189
  br i1 %32, label %33, label %37, !dbg !11187

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #26, !dbg !11190
  %35 = sub i32 %34, %28, !dbg !11193
  %36 = icmp ugt i32 %35, 2, !dbg !11194
  br i1 %36, label %37, label %29, !dbg !11195, !llvm.loop !11196

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !11171
  ret i32 %38, !dbg !11198
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !11199 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11202
  %1 = tail call i32 @HAL_GetTick() #26, !dbg !11203
  call void @llvm.dbg.value(metadata i32 %1, metadata !11201, metadata !DIExpression()), !dbg !11204
  br label %2, !dbg !11205

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11206
  %4 = and i32 %3, 536870912, !dbg !11206
  %5 = icmp eq i32 %4, 0, !dbg !11206
  br i1 %5, label %10, label %6, !dbg !11205

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #26, !dbg !11207
  %8 = sub i32 %7, %1, !dbg !11210
  %9 = icmp ugt i32 %8, 2, !dbg !11211
  br i1 %9, label %10, label %2, !dbg !11212, !llvm.loop !11213

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !11204
  ret i32 %11, !dbg !11215
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #15 !dbg !11216 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11218, metadata !DIExpression()), !dbg !11223
  call void @llvm.dbg.value(metadata i32 0, metadata !11219, metadata !DIExpression()), !dbg !11223
  call void @llvm.dbg.value(metadata i32 0, metadata !11220, metadata !DIExpression()), !dbg !11223
  call void @llvm.dbg.value(metadata i32 0, metadata !11221, metadata !DIExpression()), !dbg !11223
  call void @llvm.dbg.value(metadata i32 0, metadata !11222, metadata !DIExpression()), !dbg !11223
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11224
  %2 = lshr i32 %1, 2, !dbg !11225
  %3 = and i32 %2, 3, !dbg !11225
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !11225

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11226
  %6 = and i32 %5, 63, !dbg !11229
  call void @llvm.dbg.value(metadata i32 %6, metadata !11218, metadata !DIExpression()), !dbg !11223
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11230
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11232
  %9 = lshr i32 %8, 6, !dbg !11232
  %10 = and i32 %9, 511, !dbg !11232
  %11 = zext i32 %10 to i64, !dbg !11232
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11232
  %13 = zext i32 %6 to i64, !dbg !11232
  %14 = udiv i64 %12, %13, !dbg !11232
  %15 = trunc i64 %14 to i32, !dbg !11232
  call void @llvm.dbg.value(metadata i32 %15, metadata !11219, metadata !DIExpression()), !dbg !11223
  call void @llvm.dbg.value(metadata i32 %15, metadata !11219, metadata !DIExpression()), !dbg !11223
  call void @llvm.dbg.value(metadata i32 %15, metadata !11219, metadata !DIExpression()), !dbg !11223
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11233
  %17 = lshr i32 %16, 15, !dbg !11234
  %18 = and i32 %17, 6, !dbg !11234
  %19 = add nuw nsw i32 %18, 2, !dbg !11234
  call void @llvm.dbg.value(metadata i32 %19, metadata !11220, metadata !DIExpression()), !dbg !11223
  %20 = udiv i32 %15, %19, !dbg !11235
  call void @llvm.dbg.value(metadata i32 %20, metadata !11222, metadata !DIExpression()), !dbg !11223
  br label %38, !dbg !11236

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11237
  %23 = and i32 %22, 63, !dbg !11239
  call void @llvm.dbg.value(metadata i32 %23, metadata !11218, metadata !DIExpression()), !dbg !11223
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11240
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11242
  %26 = lshr i32 %25, 6, !dbg !11242
  %27 = and i32 %26, 511, !dbg !11242
  %28 = zext i32 %27 to i64, !dbg !11242
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !11242
  %30 = zext i32 %23 to i64, !dbg !11242
  %31 = udiv i64 %29, %30, !dbg !11242
  %32 = trunc i64 %31 to i32, !dbg !11242
  call void @llvm.dbg.value(metadata i32 %32, metadata !11219, metadata !DIExpression()), !dbg !11223
  call void @llvm.dbg.value(metadata i32 %32, metadata !11219, metadata !DIExpression()), !dbg !11223
  call void @llvm.dbg.value(metadata i32 %32, metadata !11219, metadata !DIExpression()), !dbg !11223
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11243
  %34 = lshr i32 %33, 28, !dbg !11244
  %35 = and i32 %34, 7, !dbg !11244
  call void @llvm.dbg.value(metadata i32 %35, metadata !11221, metadata !DIExpression()), !dbg !11223
  %36 = udiv i32 %32, %35, !dbg !11245
  call void @llvm.dbg.value(metadata i32 %36, metadata !11222, metadata !DIExpression()), !dbg !11223
  br label %38, !dbg !11246

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !11247
  call void @llvm.dbg.value(metadata i32 %39, metadata !11222, metadata !DIExpression()), !dbg !11223
  ret i32 %39, !dbg !11248
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11249 {
  %1 = tail call i32 @HAL_GetTick() #26, !dbg !11252
  call void @llvm.dbg.value(metadata i32 %1, metadata !11251, metadata !DIExpression()), !dbg !11253
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11254
  %3 = or i32 %2, 1, !dbg !11254
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11254
  br label %4, !dbg !11255

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11256
  %6 = and i32 %5, 2, !dbg !11256
  %7 = icmp eq i32 %6, 0, !dbg !11257
  br i1 %7, label %8, label %12, !dbg !11255

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #26, !dbg !11258
  %10 = sub i32 %9, %1, !dbg !11261
  %11 = icmp ugt i32 %10, 2, !dbg !11262
  br i1 %11, label %89, label %4, !dbg !11263, !llvm.loop !11264

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11266
  %14 = or i32 %13, 128, !dbg !11266
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11266
  %15 = tail call i32 @HAL_GetTick() #26, !dbg !11267
  call void @llvm.dbg.value(metadata i32 %15, metadata !11251, metadata !DIExpression()), !dbg !11253
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11268
  br label %16, !dbg !11269

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11270
  %18 = and i32 %17, 12, !dbg !11270
  %19 = icmp eq i32 %18, 0, !dbg !11271
  %20 = tail call i32 @HAL_GetTick() #26, !dbg !11253
  br i1 %19, label %24, label %21, !dbg !11269

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !11272
  %23 = icmp ugt i32 %22, 5000, !dbg !11275
  br i1 %23, label %89, label %16, !dbg !11276, !llvm.loop !11277

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !11251, metadata !DIExpression()), !dbg !11253
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11279
  %26 = and i32 %25, -851969, !dbg !11279
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11279
  br label %27, !dbg !11280

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11281
  %29 = and i32 %28, 131072, !dbg !11281
  %30 = icmp eq i32 %29, 0, !dbg !11282
  %31 = tail call i32 @HAL_GetTick() #26, !dbg !11253
  br i1 %30, label %35, label %32, !dbg !11280

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !11283
  %34 = icmp ugt i32 %33, 100, !dbg !11286
  br i1 %34, label %89, label %27, !dbg !11287, !llvm.loop !11288

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !11251, metadata !DIExpression()), !dbg !11253
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11290
  %37 = and i32 %36, -16777217, !dbg !11290
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11290
  br label %38, !dbg !11291

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11292
  %40 = and i32 %39, 33554432, !dbg !11292
  %41 = icmp eq i32 %40, 0, !dbg !11293
  %42 = tail call i32 @HAL_GetTick() #26, !dbg !11253
  br i1 %41, label %46, label %43, !dbg !11291

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !11294
  %45 = icmp ugt i32 %44, 2, !dbg !11297
  br i1 %45, label %89, label %38, !dbg !11298, !llvm.loop !11299

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !11251, metadata !DIExpression()), !dbg !11253
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11301
  %48 = and i32 %47, -67108865, !dbg !11301
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11301
  br label %49, !dbg !11302

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11303
  %51 = and i32 %50, 134217728, !dbg !11303
  %52 = icmp eq i32 %51, 0, !dbg !11304
  %53 = tail call i32 @HAL_GetTick() #26, !dbg !11253
  br i1 %52, label %57, label %54, !dbg !11302

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !11305
  %56 = icmp ugt i32 %55, 2, !dbg !11308
  br i1 %56, label %89, label %49, !dbg !11309, !llvm.loop !11310

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !11251, metadata !DIExpression()), !dbg !11253
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11312
  %59 = and i32 %58, -268435457, !dbg !11312
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11312
  br label %60, !dbg !11313

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11314
  %62 = and i32 %61, 536870912, !dbg !11314
  %63 = icmp eq i32 %62, 0, !dbg !11315
  br i1 %63, label %68, label %64, !dbg !11313

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #26, !dbg !11316
  %66 = sub i32 %65, %53, !dbg !11319
  %67 = icmp ugt i32 %66, 2, !dbg !11320
  br i1 %67, label %89, label %60, !dbg !11321, !llvm.loop !11322

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11324
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11325
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11326
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11327
  %70 = and i32 %69, -7937, !dbg !11327
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11327
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11328
  %72 = and i32 %71, -8193, !dbg !11328
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11328
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11329
  %74 = and i32 %73, -16385, !dbg !11329
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11329
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11330
  %76 = or i32 %75, 10420224, !dbg !11330
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11330
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11331
  %78 = or i32 %77, 2097152, !dbg !11331
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11331
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11332
  %80 = or i32 %79, 4194304, !dbg !11332
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11332
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11333
  %82 = and i32 %81, -2, !dbg !11333
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11333
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11334
  %84 = or i32 %83, 16777216, !dbg !11334
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11334
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !11335
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !11336
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #26, !dbg !11338
  %87 = icmp ne i32 %86, 0, !dbg !11339
  %88 = zext i1 %87 to i32, !dbg !11340
  br label %89, !dbg !11340

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !11253
  ret i32 %90, !dbg !11341
}

; Function Attrs: optsize
declare !dbg !11342 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !11345 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11371, metadata !DIExpression()), !dbg !11382
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11383
  br i1 %3, label %337, label %4, !dbg !11385

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11386
  %6 = load i32, i32* %5, align 4, !dbg !11386
  %7 = and i32 %6, 1, !dbg !11388
  %8 = icmp eq i32 %7, 0, !dbg !11389
  br i1 %8, label %74, label %9, !dbg !11390

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11391
  %11 = and i32 %10, 12, !dbg !11391
  %12 = icmp eq i32 %11, 4, !dbg !11394
  br i1 %12, label %29, label %13, !dbg !11395

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11396
  %15 = and i32 %14, 12, !dbg !11396
  %16 = icmp eq i32 %15, 8, !dbg !11397
  br i1 %16, label %17, label %21, !dbg !11398

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11399
  %19 = and i32 %18, 4194304, !dbg !11400
  %20 = icmp eq i32 %19, 0, !dbg !11401
  br i1 %20, label %21, label %29, !dbg !11402

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11403
  %23 = and i32 %22, 12, !dbg !11403
  %24 = icmp eq i32 %23, 12, !dbg !11404
  br i1 %24, label %25, label %37, !dbg !11405

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11406
  %27 = and i32 %26, 4194304, !dbg !11407
  %28 = icmp eq i32 %27, 0, !dbg !11408
  br i1 %28, label %37, label %29, !dbg !11409

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11410
  %31 = and i32 %30, 131072, !dbg !11410
  %32 = icmp eq i32 %31, 0, !dbg !11410
  br i1 %32, label %74, label %33, !dbg !11413

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11414
  %35 = load i32, i32* %34, align 4, !dbg !11414
  %36 = icmp eq i32 %35, 0, !dbg !11415
  br i1 %36, label %337, label %74, !dbg !11416

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11417
  %39 = load i32, i32* %38, align 4, !dbg !11417
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !11421

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11422
  %42 = or i32 %41, 65536, !dbg !11422
  br label %53, !dbg !11422

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11424
  %45 = or i32 %44, 262144, !dbg !11424
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11424
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11424
  %47 = or i32 %46, 65536, !dbg !11424
  br label %53, !dbg !11424

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11427
  %50 = and i32 %49, -65537, !dbg !11427
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11427
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11427
  %52 = and i32 %51, -262145, !dbg !11427
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11429
  %55 = load i32, i32* %38, align 4, !dbg !11430
  %56 = icmp eq i32 %55, 0, !dbg !11432
  %57 = tail call i32 @HAL_GetTick() #26, !dbg !11433
  call void @llvm.dbg.value(metadata i32 %57, metadata !11372, metadata !DIExpression()), !dbg !11382
  call void @llvm.dbg.value(metadata i32 %57, metadata !11372, metadata !DIExpression()), !dbg !11382
  br i1 %56, label %66, label %58, !dbg !11434

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11435
  %60 = and i32 %59, 131072, !dbg !11437
  %61 = icmp eq i32 %60, 0, !dbg !11437
  br i1 %61, label %62, label %74, !dbg !11438

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #26, !dbg !11439
  %64 = sub i32 %63, %57, !dbg !11442
  %65 = icmp ugt i32 %64, 100, !dbg !11443
  br i1 %65, label %337, label %58, !dbg !11444, !llvm.loop !11445

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11447
  %68 = and i32 %67, 131072, !dbg !11447
  %69 = icmp eq i32 %68, 0, !dbg !11447
  br i1 %69, label %74, label %70, !dbg !11449

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #26, !dbg !11450
  %72 = sub i32 %71, %57, !dbg !11453
  %73 = icmp ugt i32 %72, 100, !dbg !11454
  br i1 %73, label %337, label %66, !dbg !11455, !llvm.loop !11456

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !11458
  %76 = and i32 %75, 2, !dbg !11460
  %77 = icmp eq i32 %76, 0, !dbg !11461
  br i1 %77, label %137, label %78, !dbg !11462

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11463
  %80 = and i32 %79, 12, !dbg !11463
  %81 = icmp eq i32 %80, 0, !dbg !11466
  br i1 %81, label %98, label %82, !dbg !11467

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11468
  %84 = and i32 %83, 12, !dbg !11468
  %85 = icmp eq i32 %84, 8, !dbg !11469
  br i1 %85, label %86, label %90, !dbg !11470

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11471
  %88 = and i32 %87, 4194304, !dbg !11472
  %89 = icmp eq i32 %88, 0, !dbg !11473
  br i1 %89, label %98, label %90, !dbg !11474

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11475
  %92 = and i32 %91, 12, !dbg !11475
  %93 = icmp eq i32 %92, 12, !dbg !11476
  br i1 %93, label %94, label %106, !dbg !11477

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11478
  %96 = and i32 %95, 4194304, !dbg !11479
  %97 = icmp eq i32 %96, 0, !dbg !11480
  br i1 %97, label %98, label %106, !dbg !11481

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11482
  %100 = and i32 %99, 2, !dbg !11482
  %101 = icmp eq i32 %100, 0, !dbg !11482
  br i1 %101, label %130, label %102, !dbg !11485

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11486
  %104 = load i32, i32* %103, align 4, !dbg !11486
  %105 = icmp eq i32 %104, 1, !dbg !11487
  br i1 %105, label %130, label %337, !dbg !11488

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11489
  %108 = load i32, i32* %107, align 4, !dbg !11489
  %109 = icmp eq i32 %108, 0, !dbg !11492
  br i1 %109, label %120, label %110, !dbg !11493

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11494
  %111 = tail call i32 @HAL_GetTick() #26, !dbg !11496
  call void @llvm.dbg.value(metadata i32 %111, metadata !11372, metadata !DIExpression()), !dbg !11382
  br label %112, !dbg !11497

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11498
  %114 = and i32 %113, 2, !dbg !11499
  %115 = icmp eq i32 %114, 0, !dbg !11499
  br i1 %115, label %116, label %130, !dbg !11497

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #26, !dbg !11500
  %118 = sub i32 %117, %111, !dbg !11503
  %119 = icmp ugt i32 %118, 2, !dbg !11504
  br i1 %119, label %337, label %112, !dbg !11505, !llvm.loop !11506

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11508
  %121 = tail call i32 @HAL_GetTick() #26, !dbg !11510
  call void @llvm.dbg.value(metadata i32 %121, metadata !11372, metadata !DIExpression()), !dbg !11382
  br label %122, !dbg !11511

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11512
  %124 = and i32 %123, 2, !dbg !11512
  %125 = icmp eq i32 %124, 0, !dbg !11512
  br i1 %125, label %137, label %126, !dbg !11511

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #26, !dbg !11513
  %128 = sub i32 %127, %121, !dbg !11516
  %129 = icmp ugt i32 %128, 2, !dbg !11517
  br i1 %129, label %337, label %122, !dbg !11518, !llvm.loop !11519

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11521
  %132 = and i32 %131, -249, !dbg !11521
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11521
  %134 = load i32, i32* %133, align 4, !dbg !11521
  %135 = shl i32 %134, 3, !dbg !11521
  %136 = or i32 %135, %132, !dbg !11521
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11521
  br label %137, !dbg !11522

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !11522
  %139 = and i32 %138, 8, !dbg !11524
  %140 = icmp eq i32 %139, 0, !dbg !11525
  br i1 %140, label %165, label %141, !dbg !11526

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11527
  %143 = load i32, i32* %142, align 4, !dbg !11527
  %144 = icmp eq i32 %143, 0, !dbg !11530
  br i1 %144, label %155, label %145, !dbg !11531

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11532
  %146 = tail call i32 @HAL_GetTick() #26, !dbg !11534
  call void @llvm.dbg.value(metadata i32 %146, metadata !11372, metadata !DIExpression()), !dbg !11382
  br label %147, !dbg !11535

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11536
  %149 = and i32 %148, 2, !dbg !11537
  %150 = icmp eq i32 %149, 0, !dbg !11537
  br i1 %150, label %151, label %165, !dbg !11535

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #26, !dbg !11538
  %153 = sub i32 %152, %146, !dbg !11541
  %154 = icmp ugt i32 %153, 2, !dbg !11542
  br i1 %154, label %337, label %147, !dbg !11543, !llvm.loop !11544

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11546
  %156 = tail call i32 @HAL_GetTick() #26, !dbg !11548
  call void @llvm.dbg.value(metadata i32 %156, metadata !11372, metadata !DIExpression()), !dbg !11382
  br label %157, !dbg !11549

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11550
  %159 = and i32 %158, 2, !dbg !11550
  %160 = icmp eq i32 %159, 0, !dbg !11550
  br i1 %160, label %165, label %161, !dbg !11549

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #26, !dbg !11551
  %163 = sub i32 %162, %156, !dbg !11554
  %164 = icmp ugt i32 %163, 2, !dbg !11555
  br i1 %164, label %337, label %157, !dbg !11556, !llvm.loop !11557

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !11559
  %167 = and i32 %166, 4, !dbg !11560
  %168 = icmp eq i32 %167, 0, !dbg !11561
  br i1 %168, label %237, label %169, !dbg !11562

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !11374, metadata !DIExpression()), !dbg !11563
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11564
  %171 = and i32 %170, 268435456, !dbg !11564
  %172 = icmp eq i32 %171, 0, !dbg !11564
  br i1 %172, label %173, label %180, !dbg !11565

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !11566
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !11566
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11378, metadata !DIExpression()), !dbg !11566
  store volatile i32 0, i32* %2, align 4, !dbg !11566
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11566
  %176 = or i32 %175, 268435456, !dbg !11566
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11566
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11566
  %178 = and i32 %177, 268435456, !dbg !11566
  store volatile i32 %178, i32* %2, align 4, !dbg !11566
  %179 = load volatile i32, i32* %2, align 4, !dbg !11566
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !11567
  call void @llvm.dbg.value(metadata i32 1, metadata !11374, metadata !DIExpression()), !dbg !11563
  br label %180, !dbg !11568

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !11374, metadata !DIExpression()), !dbg !11563
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11569
  %182 = and i32 %181, 256, !dbg !11569
  %183 = icmp eq i32 %182, 0, !dbg !11569
  br i1 %183, label %184, label %196, !dbg !11571

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11572
  %186 = or i32 %185, 256, !dbg !11572
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11572
  %187 = tail call i32 @HAL_GetTick() #26, !dbg !11574
  call void @llvm.dbg.value(metadata i32 %187, metadata !11372, metadata !DIExpression()), !dbg !11382
  br label %188, !dbg !11575

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11576
  %190 = and i32 %189, 256, !dbg !11576
  %191 = icmp eq i32 %190, 0, !dbg !11576
  br i1 %191, label %192, label %196, !dbg !11575

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #26, !dbg !11577
  %194 = sub i32 %193, %187, !dbg !11580
  %195 = icmp ugt i32 %194, 2, !dbg !11581
  br i1 %195, label %337, label %188, !dbg !11582, !llvm.loop !11583

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11585
  %198 = load i32, i32* %197, align 4, !dbg !11585
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !11588

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11589
  %201 = or i32 %200, 1, !dbg !11589
  br label %212, !dbg !11589

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11591
  %204 = or i32 %203, 4, !dbg !11591
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11591
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11591
  %206 = or i32 %205, 1, !dbg !11591
  br label %212, !dbg !11591

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11594
  %209 = and i32 %208, -2, !dbg !11594
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11594
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11594
  %211 = and i32 %210, -5, !dbg !11594
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11596
  %214 = load i32, i32* %197, align 4, !dbg !11597
  %215 = icmp eq i32 %214, 0, !dbg !11599
  %216 = tail call i32 @HAL_GetTick() #26, !dbg !11600
  call void @llvm.dbg.value(metadata i32 %216, metadata !11372, metadata !DIExpression()), !dbg !11382
  call void @llvm.dbg.value(metadata i32 %216, metadata !11372, metadata !DIExpression()), !dbg !11382
  br i1 %215, label %225, label %217, !dbg !11601

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11602
  %219 = and i32 %218, 2, !dbg !11604
  %220 = icmp eq i32 %219, 0, !dbg !11604
  br i1 %220, label %221, label %233, !dbg !11605

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #26, !dbg !11606
  %223 = sub i32 %222, %216, !dbg !11609
  %224 = icmp ugt i32 %223, 5000, !dbg !11610
  br i1 %224, label %337, label %217, !dbg !11611, !llvm.loop !11612

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11614
  %227 = and i32 %226, 2, !dbg !11614
  %228 = icmp eq i32 %227, 0, !dbg !11614
  br i1 %228, label %233, label %229, !dbg !11616

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #26, !dbg !11617
  %231 = sub i32 %230, %216, !dbg !11620
  %232 = icmp ugt i32 %231, 5000, !dbg !11621
  br i1 %232, label %337, label %225, !dbg !11622, !llvm.loop !11623

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !11625

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11626
  %236 = and i32 %235, -268435457, !dbg !11626
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11626
  br label %237, !dbg !11629

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11630
  %239 = load i32, i32* %238, align 4, !dbg !11630
  %240 = icmp eq i32 %239, 0, !dbg !11632
  br i1 %240, label %336, label %241, !dbg !11633

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11634
  %243 = and i32 %242, 12, !dbg !11634
  %244 = icmp eq i32 %243, 8, !dbg !11637
  br i1 %244, label %297, label %245, !dbg !11638

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !11639
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11642
  %247 = tail call i32 @HAL_GetTick() #26, !dbg !11642
  call void @llvm.dbg.value(metadata i32 %247, metadata !11372, metadata !DIExpression()), !dbg !11382
  call void @llvm.dbg.value(metadata i32 %247, metadata !11372, metadata !DIExpression()), !dbg !11382
  br i1 %246, label %248, label %289, !dbg !11643

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11644
  %250 = and i32 %249, 33554432, !dbg !11644
  %251 = icmp eq i32 %250, 0, !dbg !11644
  br i1 %251, label %256, label %252, !dbg !11646

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #26, !dbg !11647
  %254 = sub i32 %253, %247, !dbg !11650
  %255 = icmp ugt i32 %254, 2, !dbg !11651
  br i1 %255, label %337, label %248, !dbg !11652, !llvm.loop !11653

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11655
  %258 = load i32, i32* %257, align 4, !dbg !11655
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11655
  %260 = load i32, i32* %259, align 4, !dbg !11655
  %261 = or i32 %260, %258, !dbg !11655
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11655
  %263 = load i32, i32* %262, align 4, !dbg !11655
  %264 = shl i32 %263, 6, !dbg !11655
  %265 = or i32 %261, %264, !dbg !11655
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11655
  %267 = load i32, i32* %266, align 4, !dbg !11655
  %268 = shl i32 %267, 15, !dbg !11655
  %269 = add i32 %268, -65536, !dbg !11655
  %270 = and i32 %269, -65536, !dbg !11655
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11655
  %272 = load i32, i32* %271, align 4, !dbg !11655
  %273 = shl i32 %272, 24, !dbg !11655
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !11655
  %275 = load i32, i32* %274, align 4, !dbg !11655
  %276 = shl i32 %275, 28, !dbg !11655
  %277 = or i32 %265, %273, !dbg !11655
  %278 = or i32 %277, %270, !dbg !11655
  %279 = or i32 %278, %276, !dbg !11655
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11655
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11656
  %280 = tail call i32 @HAL_GetTick() #26, !dbg !11657
  call void @llvm.dbg.value(metadata i32 %280, metadata !11372, metadata !DIExpression()), !dbg !11382
  br label %281, !dbg !11658

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11659
  %283 = and i32 %282, 33554432, !dbg !11660
  %284 = icmp eq i32 %283, 0, !dbg !11660
  br i1 %284, label %285, label %336, !dbg !11658

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #26, !dbg !11661
  %287 = sub i32 %286, %280, !dbg !11664
  %288 = icmp ugt i32 %287, 2, !dbg !11665
  br i1 %288, label %337, label %281, !dbg !11666, !llvm.loop !11667

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11669
  %291 = and i32 %290, 33554432, !dbg !11669
  %292 = icmp eq i32 %291, 0, !dbg !11669
  br i1 %292, label %336, label %293, !dbg !11671

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #26, !dbg !11672
  %295 = sub i32 %294, %247, !dbg !11675
  %296 = icmp ugt i32 %295, 2, !dbg !11676
  br i1 %296, label %337, label %289, !dbg !11677, !llvm.loop !11678

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !11680
  br i1 %298, label %337, label %299, !dbg !11683

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11684
  call void @llvm.dbg.value(metadata i32 %300, metadata !11373, metadata !DIExpression()), !dbg !11382
  %301 = and i32 %300, 4194304, !dbg !11686
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11688
  %303 = load i32, i32* %302, align 4, !dbg !11688
  %304 = icmp eq i32 %301, %303, !dbg !11689
  br i1 %304, label %305, label %337, !dbg !11690

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !11691
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11692
  %308 = load i32, i32* %307, align 4, !dbg !11692
  %309 = icmp eq i32 %306, %308, !dbg !11693
  br i1 %309, label %310, label %337, !dbg !11694

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !11695
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11696
  %313 = load i32, i32* %312, align 4, !dbg !11696
  %314 = shl i32 %313, 6, !dbg !11697
  %315 = icmp eq i32 %311, %314, !dbg !11698
  br i1 %315, label %316, label %337, !dbg !11699

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !11700
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11701
  %319 = load i32, i32* %318, align 4, !dbg !11701
  %320 = shl i32 %319, 15, !dbg !11702
  %321 = add i32 %320, -65536, !dbg !11702
  %322 = and i32 %321, -65536, !dbg !11702
  %323 = icmp eq i32 %317, %322, !dbg !11703
  br i1 %323, label %324, label %337, !dbg !11704

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !11705
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11706
  %327 = load i32, i32* %326, align 4, !dbg !11706
  %328 = shl i32 %327, 24, !dbg !11707
  %329 = icmp eq i32 %325, %328, !dbg !11708
  br i1 %329, label %330, label %337, !dbg !11709

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !11710
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !11711
  %333 = load i32, i32* %332, align 4, !dbg !11711
  %334 = shl i32 %333, 28, !dbg !11712
  %335 = icmp eq i32 %331, %334, !dbg !11713
  br i1 %335, label %336, label %337, !dbg !11714

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !11715

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !11382
  ret i32 %338, !dbg !11716
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #15 !dbg !11717 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11721, metadata !DIExpression()), !dbg !11722
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11723
  store i32 15, i32* %2, align 4, !dbg !11724
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11725
  %4 = and i32 %3, 262144, !dbg !11727
  %5 = icmp eq i32 %4, 0, !dbg !11728
  br i1 %5, label %8, label %6, !dbg !11729

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11730
  store i32 327680, i32* %7, align 4, !dbg !11732
  br label %15, !dbg !11733

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11734
  %10 = and i32 %9, 65536, !dbg !11736
  %11 = icmp eq i32 %10, 0, !dbg !11737
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11738
  br i1 %11, label %14, label %13, !dbg !11739

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11740
  br label %15, !dbg !11742

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11743
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11745
  %17 = and i32 %16, 1, !dbg !11747
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11748
  store i32 %17, i32* %18, align 4, !dbg !11750
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11751
  %20 = lshr i32 %19, 3, !dbg !11752
  %21 = and i32 %20, 31, !dbg !11752
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11753
  store i32 %21, i32* %22, align 4, !dbg !11754
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11755
  %24 = and i32 %23, 4, !dbg !11757
  %25 = icmp eq i32 %24, 0, !dbg !11758
  br i1 %25, label %28, label %26, !dbg !11759

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11760
  store i32 5, i32* %27, align 4, !dbg !11762
  br label %35, !dbg !11763

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11764
  %30 = and i32 %29, 1, !dbg !11766
  %31 = icmp eq i32 %30, 0, !dbg !11767
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11768
  br i1 %31, label %34, label %33, !dbg !11769

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11770
  br label %35, !dbg !11772

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11773
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11775
  %37 = and i32 %36, 1, !dbg !11777
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11778
  store i32 %37, i32* %38, align 4, !dbg !11780
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11781
  %40 = and i32 %39, 16777216, !dbg !11783
  %41 = icmp eq i32 %40, 0, !dbg !11784
  %42 = select i1 %41, i32 1, i32 2, !dbg !11785
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11786
  store i32 %42, i32* %43, align 4, !dbg !11788
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11789
  %45 = and i32 %44, 4194304, !dbg !11790
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11791
  store i32 %45, i32* %46, align 4, !dbg !11792
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11793
  %48 = and i32 %47, 63, !dbg !11794
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11795
  store i32 %48, i32* %49, align 4, !dbg !11796
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11797
  %51 = lshr i32 %50, 6, !dbg !11798
  %52 = and i32 %51, 511, !dbg !11798
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11799
  store i32 %52, i32* %53, align 4, !dbg !11800
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11801
  %55 = shl i32 %54, 1, !dbg !11802
  %56 = and i32 %55, 393216, !dbg !11802
  %57 = add nuw nsw i32 %56, 131072, !dbg !11802
  %58 = lshr exact i32 %57, 16, !dbg !11803
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11804
  store i32 %58, i32* %59, align 4, !dbg !11805
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11806
  %61 = lshr i32 %60, 24, !dbg !11807
  %62 = and i32 %61, 15, !dbg !11807
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11808
  store i32 %62, i32* %63, align 4, !dbg !11809
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11810
  %65 = lshr i32 %64, 28, !dbg !11811
  %66 = and i32 %65, 7, !dbg !11811
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !11812
  store i32 %66, i32* %67, align 4, !dbg !11813
  ret void, !dbg !11814
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !11815 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11818, metadata !DIExpression()), !dbg !11819
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !11820
  ret void, !dbg !11821
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !11822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11825, metadata !DIExpression()), !dbg !11827
  call void @llvm.dbg.value(metadata i32 1000, metadata !11826, metadata !DIExpression()), !dbg !11827
  %2 = udiv i32 %0, 1000, !dbg !11828
  %3 = add nsw i32 %2, -1, !dbg !11829
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11830
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11831
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11832
  ret void, !dbg !11833
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #16 !dbg !11834 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11836, metadata !DIExpression()), !dbg !11838
  %3 = bitcast i32* %2 to i8*, !dbg !11839
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11839
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11837, metadata !DIExpression()), !dbg !11840
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11841
  store volatile i32 %4, i32* %2, align 4, !dbg !11840
  %5 = load volatile i32, i32* %2, align 4, !dbg !11842
  %6 = icmp eq i32 %0, -1, !dbg !11843
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11836, metadata !DIExpression()), !dbg !11838
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11838
  call void @llvm.dbg.value(metadata i32 %8, metadata !11836, metadata !DIExpression()), !dbg !11838
  br label %9, !dbg !11845

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11836, metadata !DIExpression()), !dbg !11838
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11846
  call void @llvm.dbg.value(metadata i32 undef, metadata !11836, metadata !DIExpression()), !dbg !11838
  %12 = shl i32 %11, 15, !dbg !11838
  %13 = ashr i32 %12, 31, !dbg !11838
  %14 = add i32 %13, %10, !dbg !11838
  call void @llvm.dbg.value(metadata i32 %14, metadata !11836, metadata !DIExpression()), !dbg !11838
  %15 = icmp eq i32 %14, 0, !dbg !11845
  br i1 %15, label %16, label %9, !dbg !11845

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11849
  ret void, !dbg !11849
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !11850 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11852, metadata !DIExpression()), !dbg !11853
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11854
  ret void, !dbg !11855
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !11856 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11861, metadata !DIExpression()), !dbg !11866
  call void @llvm.dbg.value(metadata i32 0, metadata !11864, metadata !DIExpression()), !dbg !11866
  call void @llvm.dbg.value(metadata i32 0, metadata !11865, metadata !DIExpression()), !dbg !11866
  %2 = icmp eq i32 %0, 0, !dbg !11867
  br i1 %2, label %72, label %3, !dbg !11869

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11870
  %5 = icmp eq i32 %4, 49152, !dbg !11873
  br i1 %5, label %6, label %21, !dbg !11874

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !11875
  %8 = select i1 %7, i32 0, i32 5, !dbg !11878
  call void @llvm.dbg.value(metadata i32 %8, metadata !11864, metadata !DIExpression()), !dbg !11866
  %9 = add i32 %0, -120000001, !dbg !11879
  %10 = icmp ult i32 %9, 30000000, !dbg !11879
  %11 = select i1 %10, i32 4, i32 %8, !dbg !11879
  call void @llvm.dbg.value(metadata i32 %11, metadata !11864, metadata !DIExpression()), !dbg !11866
  %12 = icmp ult i32 %9, -30000000, !dbg !11881
  %13 = select i1 %12, i32 %11, i32 3, !dbg !11881
  call void @llvm.dbg.value(metadata i32 %13, metadata !11864, metadata !DIExpression()), !dbg !11866
  %14 = icmp ugt i32 %0, 60000000, !dbg !11883
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !11885
  br i1 %16, label %21, label %17, !dbg !11885

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !11886
  %19 = and i1 %18, %15, !dbg !11889
  %20 = select i1 %19, i32 1, i32 %13, !dbg !11889
  br label %21, !dbg !11889

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !11866
  call void @llvm.dbg.value(metadata i32 %22, metadata !11864, metadata !DIExpression()), !dbg !11866
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11890
  %24 = icmp eq i32 %23, 32768, !dbg !11892
  br i1 %24, label %25, label %45, !dbg !11893

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !11894
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !11897
  %29 = select i1 %28, i32 5, i32 %22, !dbg !11897
  call void @llvm.dbg.value(metadata i32 %29, metadata !11864, metadata !DIExpression()), !dbg !11866
  %30 = icmp ugt i32 %0, 12000000, !dbg !11898
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !11900
  %33 = select i1 %32, i32 4, i32 %29, !dbg !11900
  call void @llvm.dbg.value(metadata i32 %33, metadata !11864, metadata !DIExpression()), !dbg !11866
  %34 = icmp ugt i32 %0, 90000000, !dbg !11901
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !11903
  %37 = select i1 %36, i32 3, i32 %33, !dbg !11903
  call void @llvm.dbg.value(metadata i32 %37, metadata !11864, metadata !DIExpression()), !dbg !11866
  %38 = icmp ugt i32 %0, 60000000, !dbg !11904
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !11906
  br i1 %40, label %45, label %41, !dbg !11906

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !11907
  %43 = select i1 %42, i1 %39, i1 false, !dbg !11910
  %44 = select i1 %43, i32 1, i32 %37, !dbg !11910
  br label %45, !dbg !11910

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !11911
  call void @llvm.dbg.value(metadata i32 %46, metadata !11864, metadata !DIExpression()), !dbg !11866
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11912
  %48 = icmp eq i32 %47, 16384, !dbg !11914
  br i1 %48, label %49, label %61, !dbg !11915

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !11916
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !11919
  %53 = select i1 %52, i32 3, i32 %46, !dbg !11919
  call void @llvm.dbg.value(metadata i32 %53, metadata !11864, metadata !DIExpression()), !dbg !11866
  %54 = icmp ugt i32 %0, 60000000, !dbg !11920
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !11922
  br i1 %56, label %61, label %57, !dbg !11922

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !11923
  %59 = select i1 %58, i1 %55, i1 false, !dbg !11926
  %60 = select i1 %59, i32 1, i32 %53, !dbg !11926
  br label %61, !dbg !11926

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !11911
  call void @llvm.dbg.value(metadata i32 %62, metadata !11864, metadata !DIExpression()), !dbg !11866
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #24, !dbg !11927
  call void @llvm.dbg.value(metadata i32 2, metadata !11862, metadata !DIExpression()), !dbg !11866
  br label %63, !dbg !11928

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !11911
  call void @llvm.dbg.value(metadata i32 %64, metadata !11862, metadata !DIExpression()), !dbg !11866
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !11929
  call void @llvm.dbg.value(metadata i32 %65, metadata !11863, metadata !DIExpression()), !dbg !11866
  %66 = add nsw i32 %64, -1, !dbg !11931
  call void @llvm.dbg.value(metadata i32 %66, metadata !11862, metadata !DIExpression()), !dbg !11866
  %67 = icmp ne i32 %65, %62, !dbg !11932
  %68 = icmp ne i32 %66, 0, !dbg !11933
  %69 = select i1 %67, i1 %68, i1 false, !dbg !11933
  br i1 %69, label %63, label %70, !dbg !11934, !llvm.loop !11935

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !11937
  call void @llvm.dbg.value(metadata i32 %73, metadata !11865, metadata !DIExpression()), !dbg !11866
  ret i32 %73, !dbg !11938
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !11939 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11941
  %2 = and i32 %1, 49152, !dbg !11941
  ret i32 %2, !dbg !11942
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !11943 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11945, metadata !DIExpression()), !dbg !11946
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11947
  %3 = and i32 %2, -16, !dbg !11947
  %4 = or i32 %3, %0, !dbg !11947
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11947
  ret void, !dbg !11948
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !11949 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11950
  %2 = and i32 %1, 15, !dbg !11950
  ret i32 %2, !dbg !11951
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !11952 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11970, metadata !DIExpression()), !dbg !11974
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11971, metadata !DIExpression()), !dbg !11974
  call void @llvm.dbg.value(metadata i32 0, metadata !11972, metadata !DIExpression()), !dbg !11974
  call void @llvm.dbg.value(metadata i32 0, metadata !11973, metadata !DIExpression()), !dbg !11974
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !11975
  %4 = icmp eq i32 %3, 0, !dbg !11977
  br i1 %4, label %5, label %21, !dbg !11978

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !11979
  call void @llvm.dbg.value(metadata i32 %6, metadata !11973, metadata !DIExpression()), !dbg !11974
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.138() #24, !dbg !11981
  %8 = icmp eq i32 %7, 1, !dbg !11983
  br i1 %8, label %13, label %9, !dbg !11984

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.139() #24, !dbg !11985
  br label %10, !dbg !11987

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.138() #24, !dbg !11988
  %12 = icmp eq i32 %11, 1, !dbg !11989
  br i1 %12, label %13, label %10, !dbg !11987, !llvm.loop !11990

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !11992
  %15 = load i32, i32* %14, align 4, !dbg !11992
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11993
  %17 = load i32, i32* %16, align 4, !dbg !11993
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11994
  %19 = load i32, i32* %18, align 4, !dbg !11994
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.140(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !11995
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !11996
  call void @llvm.dbg.value(metadata i32 %20, metadata !11972, metadata !DIExpression()), !dbg !11974
  br label %21, !dbg !11997

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11998
  call void @llvm.dbg.value(metadata i32 %22, metadata !11972, metadata !DIExpression()), !dbg !11974
  ret i32 %22, !dbg !11999
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !12000 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12004, metadata !DIExpression()), !dbg !12005
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.142() #24, !dbg !12006
  %2 = icmp ne i32 %1, 0, !dbg !12008
  call void @llvm.dbg.value(metadata i1 %2, metadata !12004, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12005
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #24, !dbg !12009
  %4 = icmp ne i32 %3, 0, !dbg !12011
  call void @llvm.dbg.value(metadata i1 undef, metadata !12004, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12005
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !12012
  %6 = icmp ne i32 %5, 0, !dbg !12014
  %7 = select i1 %6, i1 true, i1 %4, !dbg !12015
  %8 = select i1 %7, i1 true, i1 %2, !dbg !12015
  %9 = zext i1 %8 to i32, !dbg !12015
  call void @llvm.dbg.value(metadata i32 %9, metadata !12004, metadata !DIExpression()), !dbg !12005
  ret i32 %9, !dbg !12016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #8 !dbg !12017 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12021, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12022, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i32 0, metadata !12023, metadata !DIExpression()), !dbg !12024
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12025
  %4 = load i32, i32* %3, align 4, !dbg !12025
  %5 = and i32 %4, 63, !dbg !12026
  %6 = udiv i32 %0, %5, !dbg !12027
  call void @llvm.dbg.value(metadata i32 %6, metadata !12023, metadata !DIExpression()), !dbg !12024
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12028
  %8 = load i32, i32* %7, align 4, !dbg !12028
  %9 = and i32 %8, 511, !dbg !12029
  %10 = mul i32 %9, %6, !dbg !12030
  call void @llvm.dbg.value(metadata i32 %10, metadata !12023, metadata !DIExpression()), !dbg !12024
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12031
  %12 = load i32, i32* %11, align 4, !dbg !12031
  %13 = lshr i32 %12, 15, !dbg !12032
  %14 = and i32 %13, 131070, !dbg !12032
  %15 = add nuw nsw i32 %14, 2, !dbg !12032
  %16 = udiv i32 %10, %15, !dbg !12033
  call void @llvm.dbg.value(metadata i32 %16, metadata !12023, metadata !DIExpression()), !dbg !12024
  ret i32 %16, !dbg !12034
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.138() unnamed_addr #15 !dbg !12035 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12036
  %2 = lshr i32 %1, 1, !dbg !12037
  %3 = and i32 %2, 1, !dbg !12037
  ret i32 %3, !dbg !12038
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.139() unnamed_addr #14 !dbg !12039 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12040
  %2 = or i32 %1, 1, !dbg !12040
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12040
  ret void, !dbg !12041
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.140(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !12042 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12044, metadata !DIExpression()), !dbg !12048
  call void @llvm.dbg.value(metadata i32 %1, metadata !12045, metadata !DIExpression()), !dbg !12048
  call void @llvm.dbg.value(metadata i32 %2, metadata !12046, metadata !DIExpression()), !dbg !12048
  call void @llvm.dbg.value(metadata i32 %3, metadata !12047, metadata !DIExpression()), !dbg !12048
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12049
  %6 = and i32 %5, -4227072, !dbg !12049
  %7 = or i32 %1, %0, !dbg !12049
  %8 = shl i32 %2, 6, !dbg !12049
  %9 = or i32 %7, %8, !dbg !12049
  %10 = or i32 %9, %6, !dbg !12049
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12049
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12050
  %12 = and i32 %11, -196609, !dbg !12050
  %13 = or i32 %12, %3, !dbg !12050
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12050
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12051
  %15 = and i32 %14, -1879048193, !dbg !12051
  %16 = or i32 %15, %3, !dbg !12051
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12051
  ret void, !dbg !12052
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #14 !dbg !12053 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12057, metadata !DIExpression()), !dbg !12061
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12058, metadata !DIExpression()), !dbg !12061
  call void @llvm.dbg.value(metadata i32 0, metadata !12059, metadata !DIExpression()), !dbg !12061
  call void @llvm.dbg.value(metadata i32 0, metadata !12060, metadata !DIExpression()), !dbg !12061
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12062
  %4 = load i32, i32* %3, align 4, !dbg !12062
  %5 = lshr i32 %4, 4, !dbg !12062
  %6 = and i32 %5, 15, !dbg !12062
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12062
  %8 = load i8, i8* %7, align 1, !dbg !12062
  %9 = zext i8 %8 to i32, !dbg !12062
  %10 = lshr i32 %0, %9, !dbg !12062
  call void @llvm.dbg.value(metadata i32 %10, metadata !12060, metadata !DIExpression()), !dbg !12061
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12063
  %12 = icmp ult i32 %11, %10, !dbg !12065
  br i1 %12, label %13, label %16, !dbg !12066

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12067
  call void @llvm.dbg.value(metadata i32 %14, metadata !12059, metadata !DIExpression()), !dbg !12061
  %15 = icmp eq i32 %14, 0, !dbg !12069
  br i1 %15, label %16, label %30, !dbg !12071

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.141() #24, !dbg !12072
  br label %17, !dbg !12074

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.142() #24, !dbg !12075
  %19 = icmp eq i32 %18, 1, !dbg !12076
  br i1 %19, label %20, label %17, !dbg !12074, !llvm.loop !12077

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12079
  tail call fastcc void @LL_RCC_SetAHBPrescaler.143(i32 noundef %21) #24, !dbg !12080
  tail call fastcc void @LL_RCC_SetSysClkSource.144() #24, !dbg !12081
  br label %22, !dbg !12082

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.145() #24, !dbg !12083
  %24 = icmp eq i32 %23, 8, !dbg !12084
  br i1 %24, label %25, label %22, !dbg !12082, !llvm.loop !12085

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12087
  %27 = load i32, i32* %26, align 4, !dbg !12087
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.146(i32 noundef %27) #24, !dbg !12088
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12089
  %29 = load i32, i32* %28, align 4, !dbg !12089
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.147(i32 noundef %29) #24, !dbg !12090
  br label %30, !dbg !12091

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12092
  %33 = icmp ugt i32 %32, %10, !dbg !12094
  br i1 %33, label %34, label %36, !dbg !12095

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12096
  call void @llvm.dbg.value(metadata i32 %35, metadata !12059, metadata !DIExpression()), !dbg !12061
  br label %36, !dbg !12098

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12061
  call void @llvm.dbg.value(metadata i32 %37, metadata !12059, metadata !DIExpression()), !dbg !12061
  %38 = icmp eq i32 %37, 0, !dbg !12099
  br i1 %38, label %39, label %40, !dbg !12101

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !12102
  br label %40, !dbg !12104

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12105
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.141() unnamed_addr #14 !dbg !12106 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12107
  %2 = or i32 %1, 16777216, !dbg !12107
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12107
  ret void, !dbg !12108
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.142() unnamed_addr #15 !dbg !12109 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12110
  %2 = lshr i32 %1, 25, !dbg !12111
  %3 = and i32 %2, 1, !dbg !12111
  ret i32 %3, !dbg !12112
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.143(i32 noundef %0) unnamed_addr #14 !dbg !12113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12115, metadata !DIExpression()), !dbg !12116
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12117
  %3 = and i32 %2, -241, !dbg !12117
  %4 = or i32 %3, %0, !dbg !12117
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12117
  ret void, !dbg !12118
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.144() unnamed_addr #14 !dbg !12119 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12121, metadata !DIExpression()), !dbg !12122
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12123
  %2 = and i32 %1, -4, !dbg !12123
  %3 = or i32 %2, 2, !dbg !12123
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12123
  ret void, !dbg !12124
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.145() unnamed_addr #15 !dbg !12125 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12126
  %2 = and i32 %1, 12, !dbg !12126
  ret i32 %2, !dbg !12127
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.146(i32 noundef %0) unnamed_addr #14 !dbg !12128 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12130, metadata !DIExpression()), !dbg !12131
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12132
  %3 = and i32 %2, -7169, !dbg !12132
  %4 = or i32 %3, %0, !dbg !12132
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12132
  ret void, !dbg !12133
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.147(i32 noundef %0) unnamed_addr #14 !dbg !12134 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12136, metadata !DIExpression()), !dbg !12137
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12138
  %3 = and i32 %2, -57345, !dbg !12138
  %4 = or i32 %3, %0, !dbg !12138
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12138
  ret void, !dbg !12139
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #15 !dbg !12140 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12141
  %2 = lshr i32 %1, 29, !dbg !12142
  %3 = and i32 %2, 1, !dbg !12142
  ret i32 %3, !dbg !12143
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !12144 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12145
  %2 = lshr i32 %1, 27, !dbg !12146
  %3 = and i32 %2, 1, !dbg !12146
  ret i32 %3, !dbg !12147
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !12148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12152, metadata !DIExpression()), !dbg !12158
  call void @llvm.dbg.value(metadata i32 %1, metadata !12153, metadata !DIExpression()), !dbg !12158
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12154, metadata !DIExpression()), !dbg !12158
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12155, metadata !DIExpression()), !dbg !12158
  call void @llvm.dbg.value(metadata i32 0, metadata !12156, metadata !DIExpression()), !dbg !12158
  call void @llvm.dbg.value(metadata i32 0, metadata !12157, metadata !DIExpression()), !dbg !12158
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12159
  %6 = icmp eq i32 %5, 0, !dbg !12161
  br i1 %6, label %7, label %27, !dbg !12162

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !12163
  call void @llvm.dbg.value(metadata i32 %8, metadata !12157, metadata !DIExpression()), !dbg !12158
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.148() #24, !dbg !12165
  %10 = icmp eq i32 %9, 1, !dbg !12167
  br i1 %10, label %19, label %11, !dbg !12168

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12169
  br i1 %12, label %13, label %14, !dbg !12172

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !12173
  br label %15, !dbg !12175

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.149() #24, !dbg !12176
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.150() #24, !dbg !12178
  br label %16, !dbg !12179

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.148() #24, !dbg !12180
  %18 = icmp eq i32 %17, 1, !dbg !12181
  br i1 %18, label %19, label %16, !dbg !12179, !llvm.loop !12182

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12184
  %21 = load i32, i32* %20, align 4, !dbg !12184
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12185
  %23 = load i32, i32* %22, align 4, !dbg !12185
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12186
  %25 = load i32, i32* %24, align 4, !dbg !12186
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.140(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !12187
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !12188
  call void @llvm.dbg.value(metadata i32 %26, metadata !12156, metadata !DIExpression()), !dbg !12158
  br label %27, !dbg !12189

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12190
  call void @llvm.dbg.value(metadata i32 %28, metadata !12156, metadata !DIExpression()), !dbg !12158
  ret i32 %28, !dbg !12191
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.148() unnamed_addr #15 !dbg !12192 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12193
  %2 = lshr i32 %1, 17, !dbg !12194
  %3 = and i32 %2, 1, !dbg !12194
  ret i32 %3, !dbg !12195
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !12196 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12197
  %2 = or i32 %1, 262144, !dbg !12197
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12197
  ret void, !dbg !12198
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.149() unnamed_addr #14 !dbg !12199 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12200
  %2 = and i32 %1, -262145, !dbg !12200
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12200
  ret void, !dbg !12201
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.150() unnamed_addr #14 !dbg !12202 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12203
  %2 = or i32 %1, 65536, !dbg !12203
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12203
  ret void, !dbg !12204
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12205 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12208, metadata !DIExpression()), !dbg !12224
  call void @llvm.dbg.value(metadata i32 undef, metadata !12208, metadata !DIExpression()), !dbg !12224
  call void @llvm.dbg.value(metadata i32 undef, metadata !12208, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12224
  ret void, !dbg !12225
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12226 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12230, metadata !DIExpression()), !dbg !12232
  %2 = icmp eq i8* %0, null, !dbg !12233
  br i1 %2, label %29, label %3, !dbg !12235

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12236
  %5 = icmp eq i8 %4, 0, !dbg !12237
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12238
  br i1 %6, label %29, label %8, !dbg !12238

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12231, metadata !DIExpression()), !dbg !12232
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12239

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12231, metadata !DIExpression()), !dbg !12232
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !12241
  br i1 %10, label %11, label %15, !dbg !12246

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12247
  %13 = load i8*, i8** %12, align 4, !dbg !12247
  %14 = icmp eq i8* %13, %0, !dbg !12248
  br i1 %14, label %29, label %15, !dbg !12249

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12250
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12231, metadata !DIExpression()), !dbg !12232
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12251
  br i1 %17, label %7, label %8, !dbg !12252, !llvm.loop !12253

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12231, metadata !DIExpression()), !dbg !12232
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !12255
  br i1 %20, label %21, label %26, !dbg !12259

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12260
  %23 = load i8*, i8** %22, align 4, !dbg !12260
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #26, !dbg !12261
  %25 = icmp eq i32 %24, 0, !dbg !12262
  br i1 %25, label %29, label %26, !dbg !12263

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12264
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12231, metadata !DIExpression()), !dbg !12232
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12265
  br i1 %28, label %29, label %18, !dbg !12239, !llvm.loop !12266

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12232
  ret %struct.device* %30, !dbg !12268
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !12269 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12273, metadata !DIExpression()), !dbg !12274
  %2 = icmp eq %struct.device* %0, null, !dbg !12275
  br i1 %2, label %14, label %3, !dbg !12277

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12278
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12278
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12279
  %7 = load i8, i8* %6, align 1, !dbg !12279
  %8 = and i8 %7, 1, !dbg !12279
  %9 = icmp eq i8 %8, 0, !dbg !12279
  br i1 %9, label %14, label %10, !dbg !12280

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12281
  %12 = load i8, i8* %11, align 1, !dbg !12281
  %13 = icmp eq i8 %12, 0, !dbg !12282
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12274
  ret i1 %15, !dbg !12283
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !12284 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12289, metadata !DIExpression()), !dbg !12290
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12291
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12292
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12293 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12301, metadata !DIExpression()), !dbg !12306
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12302, metadata !DIExpression()), !dbg !12306
  call void @llvm.dbg.value(metadata i8* %2, metadata !12303, metadata !DIExpression()), !dbg !12306
  %5 = bitcast i32* %4 to i8*, !dbg !12307
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12307
  call void @llvm.dbg.value(metadata i32 0, metadata !12304, metadata !DIExpression()), !dbg !12306
  store i32 0, i32* %4, align 4, !dbg !12308
  call void @llvm.dbg.value(metadata i32* %4, metadata !12304, metadata !DIExpression(DW_OP_deref)), !dbg !12306
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12309
  call void @llvm.dbg.value(metadata i16* %6, metadata !12305, metadata !DIExpression()), !dbg !12306
  %7 = load i32, i32* %4, align 4, !dbg !12310
  call void @llvm.dbg.value(metadata i32 %7, metadata !12304, metadata !DIExpression()), !dbg !12306
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12311
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12312
  ret i32 %8, !dbg !12313
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #12 !dbg !12314 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12318, metadata !DIExpression()), !dbg !12324
  call void @llvm.dbg.value(metadata i32* %1, metadata !12319, metadata !DIExpression()), !dbg !12324
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12325
  %4 = load i16*, i16** %3, align 4, !dbg !12325
  call void @llvm.dbg.value(metadata i16* %4, metadata !12320, metadata !DIExpression()), !dbg !12324
  %5 = icmp eq i16* %4, null, !dbg !12326
  br i1 %5, label %14, label %6, !dbg !12327

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12328
  call void @llvm.dbg.value(metadata i32 %7, metadata !12321, metadata !DIExpression()), !dbg !12328
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12329
  %9 = load i16, i16* %8, align 2, !dbg !12329
  %10 = add i16 %9, -32767, !dbg !12330
  %11 = icmp ult i16 %10, 2, !dbg !12330
  %12 = add i32 %7, 1, !dbg !12331
  call void @llvm.dbg.value(metadata i32 %12, metadata !12321, metadata !DIExpression()), !dbg !12328
  br i1 %11, label %13, label %6, !dbg !12330, !llvm.loop !12333

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12336
  br label %14, !dbg !12337

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12338
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12339 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12343, metadata !DIExpression()), !dbg !12354
  call void @llvm.dbg.value(metadata i32 %1, metadata !12344, metadata !DIExpression()), !dbg !12354
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12345, metadata !DIExpression()), !dbg !12354
  call void @llvm.dbg.value(metadata i8* %3, metadata !12346, metadata !DIExpression()), !dbg !12354
  call void @llvm.dbg.value(metadata i32 0, metadata !12347, metadata !DIExpression()), !dbg !12355
  %5 = icmp eq i32 %1, 0, !dbg !12356
  br i1 %5, label %16, label %8, !dbg !12357

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12347, metadata !DIExpression()), !dbg !12355
  %7 = icmp eq i32 %15, %1, !dbg !12356
  br i1 %7, label %16, label %8, !dbg !12357, !llvm.loop !12358

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12347, metadata !DIExpression()), !dbg !12355
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12360
  %11 = load i16, i16* %10, align 2, !dbg !12360
  call void @llvm.dbg.value(metadata i16 %11, metadata !12349, metadata !DIExpression()), !dbg !12361
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !12362
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12352, metadata !DIExpression()), !dbg !12361
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #26, !dbg !12363
  call void @llvm.dbg.value(metadata i32 %13, metadata !12353, metadata !DIExpression()), !dbg !12361
  %14 = icmp slt i32 %13, 0, !dbg !12364
  %15 = add nuw i32 %9, 1, !dbg !12366
  call void @llvm.dbg.value(metadata i32 %15, metadata !12347, metadata !DIExpression()), !dbg !12355
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12367
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #4 !dbg !12368 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12372, metadata !DIExpression()), !dbg !12375
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12373, metadata !DIExpression()), !dbg !12375
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12374, metadata !DIExpression()), !dbg !12375
  %2 = sext i16 %0 to i32, !dbg !12376
  %3 = icmp slt i16 %0, 1, !dbg !12378
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12379
  %6 = add nsw i32 %2, -1, !dbg !12379
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12379
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12379
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12373, metadata !DIExpression()), !dbg !12375
  ret %struct.device* %8, !dbg !12380
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12381 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12383, metadata !DIExpression()), !dbg !12388
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12384, metadata !DIExpression()), !dbg !12388
  call void @llvm.dbg.value(metadata i8* %2, metadata !12385, metadata !DIExpression()), !dbg !12388
  %5 = bitcast i32* %4 to i8*, !dbg !12389
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12389
  call void @llvm.dbg.value(metadata i32 0, metadata !12386, metadata !DIExpression()), !dbg !12388
  store i32 0, i32* %4, align 4, !dbg !12390
  call void @llvm.dbg.value(metadata i32* %4, metadata !12386, metadata !DIExpression(DW_OP_deref)), !dbg !12388
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12391
  call void @llvm.dbg.value(metadata i16* %6, metadata !12387, metadata !DIExpression()), !dbg !12388
  %7 = load i32, i32* %4, align 4, !dbg !12392
  call void @llvm.dbg.value(metadata i32 %7, metadata !12386, metadata !DIExpression()), !dbg !12388
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12393
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12394
  ret i32 %8, !dbg !12395
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #12 !dbg !12396 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12398, metadata !DIExpression()), !dbg !12403
  call void @llvm.dbg.value(metadata i32* %1, metadata !12399, metadata !DIExpression()), !dbg !12403
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12404
  %4 = load i16*, i16** %3, align 4, !dbg !12404
  call void @llvm.dbg.value(metadata i16* %4, metadata !12400, metadata !DIExpression()), !dbg !12403
  call void @llvm.dbg.value(metadata i32 0, metadata !12401, metadata !DIExpression()), !dbg !12403
  call void @llvm.dbg.value(metadata i32 0, metadata !12402, metadata !DIExpression()), !dbg !12403
  %5 = icmp eq i16* %4, null, !dbg !12405
  br i1 %5, label %22, label %6, !dbg !12407

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12401, metadata !DIExpression()), !dbg !12403
  call void @llvm.dbg.value(metadata i16* %8, metadata !12400, metadata !DIExpression()), !dbg !12403
  %9 = load i16, i16* %8, align 2, !dbg !12408
  %10 = icmp eq i16 %9, -32768, !dbg !12412
  call void @llvm.dbg.value(metadata i32 undef, metadata !12401, metadata !DIExpression()), !dbg !12403
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12413
  call void @llvm.dbg.value(metadata i16* %11, metadata !12400, metadata !DIExpression()), !dbg !12403
  %12 = zext i1 %10 to i32, !dbg !12414
  %13 = add i32 %7, %12, !dbg !12414
  call void @llvm.dbg.value(metadata i32 %13, metadata !12401, metadata !DIExpression()), !dbg !12403
  %14 = icmp eq i32 %13, 2, !dbg !12415
  br i1 %14, label %15, label %6, !dbg !12416

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12403
  call void @llvm.dbg.value(metadata i32 %16, metadata !12402, metadata !DIExpression()), !dbg !12403
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12417
  %18 = load i16, i16* %17, align 2, !dbg !12417
  %19 = icmp eq i16 %18, 32767, !dbg !12418
  %20 = add i32 %16, 1, !dbg !12419
  call void @llvm.dbg.value(metadata i32 %20, metadata !12402, metadata !DIExpression()), !dbg !12403
  br i1 %19, label %21, label %15, !dbg !12421, !llvm.loop !12422

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12424
  br label %22, !dbg !12425

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12426
  call void @llvm.dbg.value(metadata i16* %23, metadata !12400, metadata !DIExpression()), !dbg !12403
  ret i16* %23, !dbg !12427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !12428 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12431
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 7, !dbg !12432
  ret i32* %2, !dbg !12433
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #4 !dbg !12434 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12593, metadata !DIExpression()), !dbg !12596
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12594, metadata !DIExpression()), !dbg !12596
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12595, metadata !DIExpression()), !dbg !12596
  ret void, !dbg !12597
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12598 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12602, metadata !DIExpression()), !dbg !12604
  call void @llvm.dbg.value(metadata i32 %1, metadata !12603, metadata !DIExpression()), !dbg !12604
  ret void, !dbg !12605
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #4 !dbg !12606 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12610, metadata !DIExpression()), !dbg !12612
  call void @llvm.dbg.value(metadata i32 %1, metadata !12611, metadata !DIExpression()), !dbg !12612
  ret void, !dbg !12613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12618, metadata !DIExpression()), !dbg !12620
  call void @llvm.dbg.value(metadata i8* %1, metadata !12619, metadata !DIExpression()), !dbg !12620
  ret i32 -134, !dbg !12621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #4 !dbg !12622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12626, metadata !DIExpression()), !dbg !12628
  call void @llvm.dbg.value(metadata i8* %1, metadata !12627, metadata !DIExpression()), !dbg !12628
  ret i32 -134, !dbg !12629
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !12630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12633, metadata !DIExpression()), !dbg !12634
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12635, !srcloc !12641
  call void @llvm.dbg.value(metadata i32 undef, metadata !12638, metadata !DIExpression()) #23, !dbg !12642
  call void @llvm.dbg.value(metadata i32 undef, metadata !12639, metadata !DIExpression()) #23, !dbg !12642
  br label %3, !dbg !12643

3:                                                ; preds = %3, %1
  br label %3, !dbg !12644, !llvm.loop !12647
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12650 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12654, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12655, metadata !DIExpression()), !dbg !12656
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12657
  unreachable, !dbg !12657
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #2 !dbg !12658 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12660, metadata !DIExpression()), !dbg !12661
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12662
  unreachable, !dbg !12662
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12663 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12665, metadata !DIExpression()), !dbg !12669
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12666, metadata !DIExpression()), !dbg !12669
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12670, !srcloc !12641
  call void @llvm.dbg.value(metadata i32 undef, metadata !12638, metadata !DIExpression()) #23, !dbg !12672
  call void @llvm.dbg.value(metadata i32 undef, metadata !12639, metadata !DIExpression()) #23, !dbg !12672
  call void @llvm.dbg.value(metadata i32 undef, metadata !12667, metadata !DIExpression()), !dbg !12669
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12668, metadata !DIExpression()), !dbg !12669
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) #24, !dbg !12673
  %4 = icmp eq i32 %0, 4, !dbg !12674
  br i1 %4, label %5, label %6, !dbg !12679

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.157, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.158, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.159, i32 0, i32 0), i32 noundef 148) #26, !dbg !12680
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3.160, i32 0, i32 0)) #26, !dbg !12680
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.159, i32 0, i32 0), i32 noundef 148) #26, !dbg !12680
  unreachable, !dbg !12680

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !12670
  call void @llvm.dbg.value(metadata i32 %7, metadata !12638, metadata !DIExpression()) #23, !dbg !12672
  call void @llvm.dbg.value(metadata i32 %7, metadata !12667, metadata !DIExpression()), !dbg !12669
  %8 = tail call fastcc %struct.k_thread* @k_current_get.161() #25, !dbg !12682
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !12668, metadata !DIExpression()), !dbg !12669
  call void @llvm.dbg.value(metadata i32 undef, metadata !12683, metadata !DIExpression()) #23, !dbg !12686
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !12688, !srcloc !12689
  tail call fastcc void @k_thread_abort.162(%struct.k_thread* noundef %8) #24, !dbg !12690
  ret void, !dbg !12693
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.161() unnamed_addr #5 !dbg !12694 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.163() #25, !dbg !12698
  ret %struct.k_thread* %1, !dbg !12699
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.162(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12700 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12704, metadata !DIExpression()), !dbg !12705
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12706, !srcloc !12708
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #26, !dbg !12709
  ret void, !dbg !12710
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.163() unnamed_addr #5 !dbg !12711 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12712, !srcloc !12714
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #26, !dbg !12715
  ret %struct.k_thread* %1, !dbg !12716
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12717 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12721, metadata !DIExpression()), !dbg !12724
  call void @llvm.dbg.value(metadata i32 %1, metadata !12722, metadata !DIExpression()), !dbg !12724
  call void @llvm.dbg.value(metadata i32 %2, metadata !12723, metadata !DIExpression()), !dbg !12724
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #26, !dbg !12725
  ret void, !dbg !12726
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12727 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12731, metadata !DIExpression()), !dbg !12734
  call void @llvm.dbg.value(metadata i8* %1, metadata !12732, metadata !DIExpression()), !dbg !12734
  call void @llvm.dbg.value(metadata i32 %2, metadata !12733, metadata !DIExpression()), !dbg !12734
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #26, !dbg !12735
  ret void, !dbg !12736
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12737 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !12738
  ret void, !dbg !12739
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12742, metadata !DIExpression()), !dbg !12743
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !12744
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12745
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12746
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12747
  %4 = trunc i32 %0 to i8, !dbg !12748
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12749
  store i8 %4, i8* %5, align 4, !dbg !12750
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12751
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !12752
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12753
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12754
  store i8* %8, i8** %9, align 4, !dbg !12755
  ret void, !dbg !12756
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12757 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12759, metadata !DIExpression()), !dbg !12765
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12766
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12760, metadata !DIExpression()), !dbg !12765
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12767
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12761, metadata !DIExpression()), !dbg !12765
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.168, i32 0, i32 0), metadata !12764, metadata !DIExpression()), !dbg !12765
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12768
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12769
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 40, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.168, i32 0, i32 0)) #26, !dbg !12770
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !12771
  ret void, !dbg !12772
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !12773 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12777, metadata !DIExpression()), !dbg !12778
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12779
  ret i8* %2, !dbg !12780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !12781 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12786, metadata !DIExpression()), !dbg !12787
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12788
  %3 = load i8, i8* %2, align 1, !dbg !12789
  %4 = and i8 %3, -5, !dbg !12789
  store i8 %4, i8* %2, align 1, !dbg !12789
  ret void, !dbg !12790
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #2 !dbg !12791 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !12794
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #26, !dbg !12795
  %3 = ptrtoint i8* %2 to i32, !dbg !12804
  %4 = add i32 %3, 2048, !dbg !12805
  call void @llvm.dbg.value(metadata i32 %4, metadata !12799, metadata !DIExpression()) #23, !dbg !12806
  call void @llvm.dbg.value(metadata i32 %4, metadata !12807, metadata !DIExpression()) #23, !dbg !12810
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !12812, !srcloc !12813
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12814
  %6 = or i32 %5, 512, !dbg !12814
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12814
  tail call fastcc void @__NVIC_SetPriority.171(i32 noundef -2, i32 noundef 255) #26, !dbg !12815
  tail call fastcc void @__NVIC_SetPriority.171(i32 noundef -5, i32 noundef 0) #26, !dbg !12818
  tail call fastcc void @__NVIC_SetPriority.171(i32 noundef -12, i32 noundef 0) #26, !dbg !12819
  tail call fastcc void @__NVIC_SetPriority.171(i32 noundef -11, i32 noundef 0) #26, !dbg !12820
  tail call fastcc void @__NVIC_SetPriority.171(i32 noundef -10, i32 noundef 0) #26, !dbg !12821
  tail call fastcc void @__NVIC_SetPriority.171(i32 noundef -4, i32 noundef 0) #26, !dbg !12822
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12823
  %8 = or i32 %7, 458752, !dbg !12823
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12823
  tail call void @z_arm_fault_init() #26, !dbg !12824
  tail call void @z_arm_cpu_idle_init() #26, !dbg !12825
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12826
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12829
  %9 = tail call i32 @z_arm_mpu_init() #26, !dbg !12830
  tail call void @z_arm_configure_static_mpu_regions() #26, !dbg !12831
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12832
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %10) #23, !dbg !12832
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12793, metadata !DIExpression()), !dbg !12833
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !12834
  call void @z_device_state_init() #26, !dbg !12835
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !12836
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !12837
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !12838
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !12839
  unreachable, !dbg !12839
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2143 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2147, metadata !DIExpression()), !dbg !12840
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12841
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12841
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2148, metadata !DIExpression()), !dbg !12840
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2148, metadata !DIExpression()), !dbg !12840
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12842
  br i1 %7, label %8, label %35, !dbg !12843

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2148, metadata !DIExpression()), !dbg !12840
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12844
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12844
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2158, metadata !DIExpression()), !dbg !12845
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12846
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12846
  %14 = tail call i32 %13(%struct.device* noundef %11) #26, !dbg !12847
  call void @llvm.dbg.value(metadata i32 %14, metadata !2162, metadata !DIExpression()), !dbg !12845
  %15 = icmp eq %struct.device* %11, null, !dbg !12848
  br i1 %15, label %32, label %16, !dbg !12850

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12851
  br i1 %17, label %26, label %18, !dbg !12854

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12855
  call void @llvm.dbg.value(metadata i32 %19, metadata !2162, metadata !DIExpression()), !dbg !12845
  %20 = icmp ult i32 %19, 255, !dbg !12857
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12857
  call void @llvm.dbg.value(metadata i32 %21, metadata !2162, metadata !DIExpression()), !dbg !12845
  %22 = trunc i32 %21 to i8, !dbg !12858
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12859
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12859
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12860
  store i8 %22, i8* %25, align 1, !dbg !12861
  br label %26, !dbg !12862

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12863
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12863
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12864
  %30 = load i8, i8* %29, align 1, !dbg !12865
  %31 = or i8 %30, 1, !dbg !12865
  store i8 %31, i8* %29, align 1, !dbg !12865
  br label %32, !dbg !12866

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12867
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2148, metadata !DIExpression()), !dbg !12840
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12842
  br i1 %34, label %8, label %35, !dbg !12843, !llvm.loop !12868

35:                                               ; preds = %32, %1
  ret void, !dbg !12870
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.171(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !12871 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12873, metadata !DIExpression()), !dbg !12875
  call void @llvm.dbg.value(metadata i32 %1, metadata !12874, metadata !DIExpression()), !dbg !12875
  %3 = trunc i32 %1 to i8, !dbg !12876
  %4 = shl i8 %3, 4, !dbg !12876
  %5 = and i32 %0, 15, !dbg !12879
  %6 = add nsw i32 %5, -4, !dbg !12880
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12881
  store volatile i8 %4, i8* %7, align 1, !dbg !12882
  ret void, !dbg !12883
}

; Function Attrs: optsize
declare !dbg !12884 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !12885 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12888, metadata !DIExpression()), !dbg !12889
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12890
  store i8 1, i8* %2, align 1, !dbg !12891
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12892
  store i8 1, i8* %3, align 4, !dbg !12893
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !12894
  store i32 0, i32* %4, align 8, !dbg !12895
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 1, !dbg !12896
  store i32 0, i32* %5, align 4, !dbg !12897
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 9, !dbg !12898
  store %struct.k_heap* null, %struct.k_heap** %6, align 4, !dbg !12899
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12900
  ret void, !dbg !12901
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12902 {
  tail call void @z_sched_init() #26, !dbg !12907
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12908
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.172, i32 0, i32 0)) #26, !dbg !12909
  call void @llvm.dbg.value(metadata i8* %1, metadata !12906, metadata !DIExpression()), !dbg !12910
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !12911
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12912
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !12913
  ret i8* %1, !dbg !12914
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #2 !dbg !12915 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12919, metadata !DIExpression()), !dbg !12920
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #26, !dbg !12921
  unreachable, !dbg !12922
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12923 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12925, metadata !DIExpression()), !dbg !12928
  call void @llvm.dbg.value(metadata i8* %1, metadata !12926, metadata !DIExpression()), !dbg !12928
  call void @llvm.dbg.value(metadata i8* %2, metadata !12927, metadata !DIExpression()), !dbg !12928
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12929
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !12930
  tail call void @boot_banner() #26, !dbg !12931
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !12932
  tail call void @z_init_static_threads() #26, !dbg !12933
  tail call void @main() #26, !dbg !12934
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12935
  %5 = and i8 %4, -2, !dbg !12935
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12935
  ret void, !dbg !12936
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !12937 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12947, metadata !DIExpression()), !dbg !12955
  call void @llvm.dbg.value(metadata i8* %1, metadata !12948, metadata !DIExpression()), !dbg !12955
  %3 = icmp eq void (%struct.k_thread*, i8*)* %0, null, !dbg !12956
  br i1 %3, label %4, label %5, !dbg !12959

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.174, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.175, i32 0, i32 0), i32 noundef 51) #26, !dbg !12960
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.176, i32 0, i32 0)) #26, !dbg !12960
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.175, i32 0, i32 0), i32 noundef 51) #26, !dbg !12960
  unreachable, !dbg !12960

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12962, metadata !DIExpression()) #23, !dbg !12969
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12971, !srcloc !12977
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #23, !dbg !12978
  call void @llvm.dbg.value(metadata i32 undef, metadata !12975, metadata !DIExpression()) #23, !dbg !12978
  call void @llvm.dbg.value(metadata i32 undef, metadata !12968, metadata !DIExpression()) #23, !dbg !12969
  %7 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12979
  br i1 %7, label %9, label %8, !dbg !12982

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12983
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12983
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !12983
  unreachable, !dbg !12983

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #23, !dbg !12978
  call void @llvm.dbg.value(metadata i32 undef, metadata !12968, metadata !DIExpression()) #23, !dbg !12969
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !12985
  call void @llvm.dbg.value(metadata i32 undef, metadata !12950, metadata !DIExpression()), !dbg !12955
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12949, metadata !DIExpression()), !dbg !12955
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !12986
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !12949, metadata !DIExpression()), !dbg !12955
  %11 = icmp eq %struct.k_thread* %10, null, !dbg !12988
  br i1 %11, label %17, label %12, !dbg !12988

12:                                               ; preds = %9, %12
  %13 = phi %struct.k_thread* [ %15, %12 ], [ %10, %9 ]
  tail call void %0(%struct.k_thread* noundef nonnull %13, i8* noundef %1) #26, !dbg !12989
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 5, !dbg !12992
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12949, metadata !DIExpression()), !dbg !12955
  %15 = load %struct.k_thread*, %struct.k_thread** %14, align 4, !dbg !12986
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !12949, metadata !DIExpression()), !dbg !12955
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !12988
  br i1 %16, label %17, label %12, !dbg !12988, !llvm.loop !12993

17:                                               ; preds = %12, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !12995, metadata !DIExpression()) #23, !dbg !13001
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !13000, metadata !DIExpression()) #23, !dbg !13001
  %18 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13003
  br i1 %18, label %20, label %19, !dbg !13006

19:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !13007
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13007
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !13007
  unreachable, !dbg !13007

20:                                               ; preds = %17
  %21 = extractvalue { i32, i32 } %6, 0, !dbg !12971
  call void @llvm.dbg.value(metadata i32 %21, metadata !12974, metadata !DIExpression()) #23, !dbg !12978
  call void @llvm.dbg.value(metadata i32 %21, metadata !12968, metadata !DIExpression()) #23, !dbg !12969
  call void @llvm.dbg.value(metadata i32 %21, metadata !12950, metadata !DIExpression()), !dbg !12955
  call void @llvm.dbg.value(metadata i32 undef, metadata !12995, metadata !DIExpression()) #23, !dbg !13001
  call void @llvm.dbg.value(metadata i32 undef, metadata !13009, metadata !DIExpression()) #23, !dbg !13012
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #23, !dbg !13014, !srcloc !13015
  ret void, !dbg !13016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !13017 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13021, metadata !DIExpression()), !dbg !13023
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13024
  %3 = load i32, i32* %2, align 4, !dbg !13024
  call void @llvm.dbg.value(metadata i32 %3, metadata !13022, metadata !DIExpression()), !dbg !13023
  %4 = icmp eq i32 %3, 0, !dbg !13025
  br i1 %4, label %10, label %5, !dbg !13027

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !13028
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13031
  %8 = zext i8 %7 to i32, !dbg !13032
  %9 = icmp eq i32 %6, %8, !dbg !13033
  br i1 %9, label %11, label %10, !dbg !13034

10:                                               ; preds = %5, %1
  br label %11, !dbg !13035

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !13023
  ret i1 %12, !dbg !13036
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #10 !dbg !13037 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13041, metadata !DIExpression()), !dbg !13042
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13043
  %3 = zext i8 %2 to i32, !dbg !13044
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13045
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !13046
  %6 = or i32 %5, %3, !dbg !13047
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13048
  store i32 %6, i32* %7, align 4, !dbg !13049
  ret void, !dbg !13050
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #10 !dbg !13051 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13053, metadata !DIExpression()), !dbg !13054
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13055
  %3 = load i32, i32* %2, align 4, !dbg !13055
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13057
  %5 = zext i8 %4 to i32, !dbg !13058
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13059
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !13060
  %8 = or i32 %7, %5, !dbg !13061
  %9 = icmp eq i32 %3, %8, !dbg !13062
  br i1 %9, label %10, label %11, !dbg !13063

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !13064
  br label %11, !dbg !13065

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !13066
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13067 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13069, metadata !DIExpression()), !dbg !13073
  call void @llvm.dbg.value(metadata i8* %1, metadata !13070, metadata !DIExpression()), !dbg !13073
  %3 = icmp eq void (%struct.k_thread*, i8*)* %0, null, !dbg !13074
  br i1 %3, label %4, label %5, !dbg !13077

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1.174, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.175, i32 0, i32 0), i32 noundef 79) #26, !dbg !13078
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3.176, i32 0, i32 0)) #26, !dbg !13078
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.175, i32 0, i32 0), i32 noundef 79) #26, !dbg !13078
  unreachable, !dbg !13078

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12962, metadata !DIExpression()) #23, !dbg !13080
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13082, !srcloc !12977
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #23, !dbg !13084
  call void @llvm.dbg.value(metadata i32 undef, metadata !12975, metadata !DIExpression()) #23, !dbg !13084
  call void @llvm.dbg.value(metadata i32 undef, metadata !12968, metadata !DIExpression()) #23, !dbg !13080
  %7 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13085
  br i1 %7, label %9, label %8, !dbg !13086

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !13087
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13087
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !13087
  unreachable, !dbg !13087

9:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #23, !dbg !13084
  call void @llvm.dbg.value(metadata i32 undef, metadata !12968, metadata !DIExpression()) #23, !dbg !13080
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13088
  call void @llvm.dbg.value(metadata i32 undef, metadata !13072, metadata !DIExpression()), !dbg !13073
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13071, metadata !DIExpression()), !dbg !13073
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !13089
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !13071, metadata !DIExpression()), !dbg !13073
  call void @llvm.dbg.value(metadata i32 undef, metadata !13072, metadata !DIExpression()), !dbg !13073
  %11 = icmp eq %struct.k_thread* %10, null, !dbg !13091
  br i1 %11, label %26, label %12, !dbg !13091

12:                                               ; preds = %9, %22
  %13 = phi %struct.k_thread* [ %24, %22 ], [ %10, %9 ]
  %14 = phi { i32, i32 } [ %19, %22 ], [ %6, %9 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12995, metadata !DIExpression()) #23, !dbg !13092
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !13000, metadata !DIExpression()) #23, !dbg !13092
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13096
  br i1 %15, label %17, label %16, !dbg !13097

16:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !13098
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13098
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !13098
  unreachable, !dbg !13098

17:                                               ; preds = %12
  %18 = extractvalue { i32, i32 } %14, 0, !dbg !13073
  call void @llvm.dbg.value(metadata i32 %18, metadata !12995, metadata !DIExpression()) #23, !dbg !13092
  call void @llvm.dbg.value(metadata i32 %18, metadata !13009, metadata !DIExpression()) #23, !dbg !13099
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !13101, !srcloc !13015
  tail call void %0(%struct.k_thread* noundef nonnull %13, i8* noundef %1) #26, !dbg !13102
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12962, metadata !DIExpression()) #23, !dbg !13103
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13105, !srcloc !12977
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #23, !dbg !13107
  call void @llvm.dbg.value(metadata i32 undef, metadata !12975, metadata !DIExpression()) #23, !dbg !13107
  call void @llvm.dbg.value(metadata i32 undef, metadata !12968, metadata !DIExpression()) #23, !dbg !13103
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13108
  br i1 %20, label %22, label %21, !dbg !13109

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !13110
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13110
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !13110
  unreachable, !dbg !13110

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #23, !dbg !13107
  call void @llvm.dbg.value(metadata i32 undef, metadata !12968, metadata !DIExpression()) #23, !dbg !13103
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13111
  call void @llvm.dbg.value(metadata i32 undef, metadata !13072, metadata !DIExpression()), !dbg !13073
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 5, !dbg !13112
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13071, metadata !DIExpression()), !dbg !13073
  %24 = load %struct.k_thread*, %struct.k_thread** %23, align 4, !dbg !13089
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !13071, metadata !DIExpression()), !dbg !13073
  call void @llvm.dbg.value(metadata i32 undef, metadata !13072, metadata !DIExpression()), !dbg !13073
  %25 = icmp eq %struct.k_thread* %24, null, !dbg !13091
  br i1 %25, label %26, label %12, !dbg !13091, !llvm.loop !13113

26:                                               ; preds = %22, %9
  %27 = phi { i32, i32 } [ %6, %9 ], [ %19, %22 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12995, metadata !DIExpression()) #23, !dbg !13115
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !13000, metadata !DIExpression()) #23, !dbg !13115
  %28 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13117
  br i1 %28, label %30, label %29, !dbg !13118

29:                                               ; preds = %26
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !13119
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13119
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !13119
  unreachable, !dbg !13119

30:                                               ; preds = %26
  %31 = extractvalue { i32, i32 } %27, 0, !dbg !13073
  call void @llvm.dbg.value(metadata i32 %31, metadata !12995, metadata !DIExpression()) #23, !dbg !13115
  call void @llvm.dbg.value(metadata i32 %31, metadata !13009, metadata !DIExpression()) #23, !dbg !13120
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %31) #23, !dbg !13122, !srcloc !13015
  ret void, !dbg !13123
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13124 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13125, !srcloc !13132
  call void @llvm.dbg.value(metadata i32 %1, metadata !13128, metadata !DIExpression()) #23, !dbg !13133
  %2 = icmp ne i32 %1, 0, !dbg !13134
  ret i1 %2, !dbg !13135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #10 !dbg !13136 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13137
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13138
  %3 = load i8, i8* %2, align 4, !dbg !13139
  %4 = or i8 %3, 1, !dbg !13139
  store i8 %4, i8* %2, align 4, !dbg !13139
  ret void, !dbg !13140
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #10 !dbg !13141 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13142
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13143
  %3 = load i8, i8* %2, align 4, !dbg !13144
  %4 = and i8 %3, -2, !dbg !13144
  store i8 %4, i8* %2, align 4, !dbg !13144
  ret void, !dbg !13145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !13146 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13147
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13148
  %3 = load i8, i8* %2, align 4, !dbg !13148
  %4 = and i8 %3, 1, !dbg !13149
  %5 = icmp ne i8 %4, 0, !dbg !13150
  ret i1 %5, !dbg !13151
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_monitor_exit(%struct.k_thread* noundef readonly %0) local_unnamed_addr #1 !dbg !13152 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13156, metadata !DIExpression()), !dbg !13161
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12962, metadata !DIExpression()) #23, !dbg !13162
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13164, !srcloc !12977
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #23, !dbg !13166
  call void @llvm.dbg.value(metadata i32 undef, metadata !12975, metadata !DIExpression()) #23, !dbg !13166
  call void @llvm.dbg.value(metadata i32 undef, metadata !12968, metadata !DIExpression()) #23, !dbg !13162
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13167
  br i1 %3, label %5, label %4, !dbg !13168

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !13169
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13169
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !13169
  unreachable, !dbg !13169

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #23, !dbg !13166
  call void @llvm.dbg.value(metadata i32 undef, metadata !12968, metadata !DIExpression()) #23, !dbg !13162
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13170
  call void @llvm.dbg.value(metadata i32 undef, metadata !13157, metadata !DIExpression()), !dbg !13161
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !13171
  %7 = icmp eq %struct.k_thread* %6, %0, !dbg !13172
  br i1 %7, label %8, label %11, !dbg !13173

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !13174
  %10 = load %struct.k_thread*, %struct.k_thread** %9, align 8, !dbg !13174
  store %struct.k_thread* %10, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !13176
  br label %22, !dbg !13177

11:                                               ; preds = %5, %14
  %12 = phi %struct.k_thread* [ %16, %14 ], [ %6, %5 ], !dbg !13178
  call void @llvm.dbg.value(metadata %struct.k_thread* %12, metadata !13158, metadata !DIExpression()), !dbg !13178
  %13 = icmp eq %struct.k_thread* %12, null, !dbg !13179
  br i1 %13, label %22, label %14, !dbg !13180

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 5, !dbg !13181
  %16 = load %struct.k_thread*, %struct.k_thread** %15, align 8, !dbg !13181
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !13182
  br i1 %17, label %18, label %11, !dbg !13183, !llvm.loop !13184

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %12, i32 0, i32 5, !dbg !13181
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !13186
  %21 = load %struct.k_thread*, %struct.k_thread** %20, align 8, !dbg !13186
  store %struct.k_thread* %21, %struct.k_thread** %19, align 8, !dbg !13189
  br label %22, !dbg !13190

22:                                               ; preds = %11, %18, %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !12995, metadata !DIExpression()) #23, !dbg !13191
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !13000, metadata !DIExpression()) #23, !dbg !13191
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13193
  br i1 %23, label %25, label %24, !dbg !13194

24:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !13195
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13195
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !13195
  unreachable, !dbg !13195

25:                                               ; preds = %22
  %26 = extractvalue { i32, i32 } %2, 0, !dbg !13164
  call void @llvm.dbg.value(metadata i32 %26, metadata !12974, metadata !DIExpression()) #23, !dbg !13166
  call void @llvm.dbg.value(metadata i32 %26, metadata !12968, metadata !DIExpression()) #23, !dbg !13162
  call void @llvm.dbg.value(metadata i32 %26, metadata !13157, metadata !DIExpression()), !dbg !13161
  call void @llvm.dbg.value(metadata i32 undef, metadata !12995, metadata !DIExpression()) #23, !dbg !13191
  call void @llvm.dbg.value(metadata i32 undef, metadata !13009, metadata !DIExpression()) #23, !dbg !13196
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !13198, !srcloc !13015
  ret void, !dbg !13199
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13200 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13204, metadata !DIExpression()), !dbg !13206
  call void @llvm.dbg.value(metadata i8* %1, metadata !13205, metadata !DIExpression()), !dbg !13206
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13207
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13209
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13204, metadata !DIExpression()), !dbg !13206
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, i32 0, !dbg !13210
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #26, !dbg !13211
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 6, i32 31, !dbg !13212
  store i8 0, i8* %8, align 1, !dbg !13213
  ret i32 0, !dbg !13214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #4 !dbg !13215 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13219, metadata !DIExpression()), !dbg !13220
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13221
  ret i8* %2, !dbg !13222
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13223 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13227, metadata !DIExpression()), !dbg !13230
  call void @llvm.dbg.value(metadata i8* %1, metadata !13228, metadata !DIExpression()), !dbg !13230
  call void @llvm.dbg.value(metadata i32 %2, metadata !13229, metadata !DIExpression()), !dbg !13230
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13231
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #26, !dbg !13232
  ret i32 0, !dbg !13233
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2189 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2292, metadata !DIExpression()), !dbg !13234
  call void @llvm.dbg.value(metadata i8* %1, metadata !2293, metadata !DIExpression()), !dbg !13234
  call void @llvm.dbg.value(metadata i32 %2, metadata !2294, metadata !DIExpression()), !dbg !13234
  call void @llvm.dbg.value(metadata i32 0, metadata !2295, metadata !DIExpression()), !dbg !13234
  call void @llvm.dbg.value(metadata i8 undef, metadata !2297, metadata !DIExpression()), !dbg !13234
  %4 = icmp eq i8* %1, null, !dbg !13235
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13237
  br i1 %6, label %46, label %7, !dbg !13237

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13238
  %9 = load i8, i8* %8, align 1, !dbg !13238
  call void @llvm.dbg.value(metadata i8 %9, metadata !2297, metadata !DIExpression()), !dbg !13234
  %10 = add i32 %2, -1, !dbg !13239
  call void @llvm.dbg.value(metadata i32 %10, metadata !2294, metadata !DIExpression()), !dbg !13234
  call void @llvm.dbg.value(metadata i8 0, metadata !2298, metadata !DIExpression()), !dbg !13240
  call void @llvm.dbg.value(metadata i8 %9, metadata !2297, metadata !DIExpression()), !dbg !13234
  call void @llvm.dbg.value(metadata i32 0, metadata !2295, metadata !DIExpression()), !dbg !13234
  %11 = icmp eq i8 %9, 0, !dbg !13241
  br i1 %11, label %12, label %15, !dbg !13243

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13244
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13245
  store i8 0, i8* %14, align 1, !dbg !13246
  br label %46, !dbg !13247

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2298, metadata !DIExpression()), !dbg !13240
  call void @llvm.dbg.value(metadata i8 %17, metadata !2297, metadata !DIExpression()), !dbg !13234
  call void @llvm.dbg.value(metadata i32 %18, metadata !2295, metadata !DIExpression()), !dbg !13234
  %19 = zext i8 %17 to i32, !dbg !13248
  %20 = zext i8 %16 to i32, !dbg !13249
  %21 = shl nuw i32 1, %20, !dbg !13249
  call void @llvm.dbg.value(metadata i32 %21, metadata !2296, metadata !DIExpression()), !dbg !13234
  %22 = and i32 %21, %19, !dbg !13251
  %23 = icmp eq i32 %22, 0, !dbg !13253
  br i1 %23, label %42, label %24, !dbg !13254

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13255
  %26 = sub i32 %10, %18, !dbg !13256
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13257
  %28 = load i8*, i8** %27, align 4, !dbg !13257
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13258
  %30 = load i32, i32* %29, align 4, !dbg !13258
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !13259
  %32 = add i32 %31, %18, !dbg !13260
  call void @llvm.dbg.value(metadata i32 %32, metadata !2295, metadata !DIExpression()), !dbg !13234
  %33 = trunc i32 %21 to i8, !dbg !13261
  %34 = xor i8 %33, -1, !dbg !13261
  %35 = and i8 %17, %34, !dbg !13261
  call void @llvm.dbg.value(metadata i8 %35, metadata !2297, metadata !DIExpression()), !dbg !13234
  %36 = icmp eq i8 %35, 0, !dbg !13262
  br i1 %36, label %12, label %37, !dbg !13264

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13265
  %39 = sub i32 %10, %32, !dbg !13267
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.185, i32 0, i32 0), i32 noundef 1) #24, !dbg !13268
  %41 = add i32 %40, %32, !dbg !13269
  call void @llvm.dbg.value(metadata i32 %41, metadata !2295, metadata !DIExpression()), !dbg !13234
  br label %42, !dbg !13270

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13234
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13234
  call void @llvm.dbg.value(metadata i8 %44, metadata !2297, metadata !DIExpression()), !dbg !13234
  call void @llvm.dbg.value(metadata i32 %43, metadata !2295, metadata !DIExpression()), !dbg !13234
  %45 = add i8 %16, 1, !dbg !13271
  call void @llvm.dbg.value(metadata i8 %45, metadata !2298, metadata !DIExpression()), !dbg !13240
  br label %15, !dbg !13243

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10.186, i32 0, i32 0), %3 ], !dbg !13234
  ret i8* %47, !dbg !13272
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13273 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13277, metadata !DIExpression()), !dbg !13282
  call void @llvm.dbg.value(metadata i32 %1, metadata !13278, metadata !DIExpression()), !dbg !13282
  call void @llvm.dbg.value(metadata i8* %2, metadata !13279, metadata !DIExpression()), !dbg !13282
  call void @llvm.dbg.value(metadata i32 %3, metadata !13280, metadata !DIExpression()), !dbg !13282
  %5 = icmp ult i32 %1, %3, !dbg !13283
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13283
  call void @llvm.dbg.value(metadata i32 %6, metadata !13281, metadata !DIExpression()), !dbg !13282
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #26, !dbg !13284
  ret i32 %6, !dbg !13285
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13286 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13288, metadata !DIExpression()), !dbg !13289
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #26, !dbg !13290
  ret void, !dbg !13291
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13292 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13301, metadata !DIExpression()), !dbg !13313
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13302, metadata !DIExpression()), !dbg !13313
  call void @llvm.dbg.value(metadata i32 %2, metadata !13303, metadata !DIExpression()), !dbg !13313
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13304, metadata !DIExpression()), !dbg !13313
  call void @llvm.dbg.value(metadata i8* %4, metadata !13305, metadata !DIExpression()), !dbg !13313
  call void @llvm.dbg.value(metadata i8* %5, metadata !13306, metadata !DIExpression()), !dbg !13313
  call void @llvm.dbg.value(metadata i8* %6, metadata !13307, metadata !DIExpression()), !dbg !13313
  call void @llvm.dbg.value(metadata i32 %7, metadata !13308, metadata !DIExpression()), !dbg !13313
  call void @llvm.dbg.value(metadata i32 %8, metadata !13309, metadata !DIExpression()), !dbg !13313
  call void @llvm.dbg.value(metadata i8* %9, metadata !13310, metadata !DIExpression()), !dbg !13313
  %11 = icmp eq i32 %7, 40, !dbg !13314
  br i1 %11, label %12, label %15, !dbg !13314

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13314
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !13314
  br i1 %14, label %19, label %18, !dbg !13314

15:                                               ; preds = %10
  %16 = add i32 %7, 29, !dbg !13314
  %17 = icmp ult i32 %16, 69, !dbg !13314
  br i1 %17, label %19, label %18, !dbg !13314

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.13.198, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.175, i32 0, i32 0), i32 noundef 536) #26, !dbg !13318
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14.199, i32 0, i32 0), i32 noundef %7, i32 noundef 39, i32 noundef -29) #26, !dbg !13318
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.175, i32 0, i32 0), i32 noundef 536) #26, !dbg !13318
  unreachable, !dbg !13318

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13320
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #24, !dbg !13321
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13322
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !13323
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !13324
  call void @llvm.dbg.value(metadata i8* %22, metadata !13311, metadata !DIExpression()), !dbg !13313
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #26, !dbg !13325
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13326
  store i8* null, i8** %23, align 4, !dbg !13327
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13328
  store void (i8*, i8*, i8*)* %3, void (i8*, i8*, i8*)** %24, align 8, !dbg !13329
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 1, !dbg !13330
  store i8* %4, i8** %25, align 4, !dbg !13331
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 2, !dbg !13332
  store i8* %5, i8** %26, align 8, !dbg !13333
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 3, !dbg !13334
  store i8* %6, i8** %27, align 4, !dbg !13335
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !12962, metadata !DIExpression()) #23, !dbg !13336
  %28 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13338, !srcloc !12977
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #23, !dbg !13340
  call void @llvm.dbg.value(metadata i32 undef, metadata !12975, metadata !DIExpression()) #23, !dbg !13340
  call void @llvm.dbg.value(metadata i32 undef, metadata !12968, metadata !DIExpression()) #23, !dbg !13336
  %29 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13341
  br i1 %29, label %31, label %30, !dbg !13342

30:                                               ; preds = %19
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !13343
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13343
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 148) #26, !dbg !13343
  unreachable, !dbg !13343

31:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 undef, metadata !12974, metadata !DIExpression()) #23, !dbg !13340
  call void @llvm.dbg.value(metadata i32 undef, metadata !12968, metadata !DIExpression()) #23, !dbg !13336
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13344
  call void @llvm.dbg.value(metadata i32 undef, metadata !13312, metadata !DIExpression()), !dbg !13313
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !13345
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, !dbg !13346
  store %struct.k_thread* %32, %struct.k_thread** %33, align 8, !dbg !13347
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 2), align 4, !dbg !13348
  call void @llvm.dbg.value(metadata i32 undef, metadata !12995, metadata !DIExpression()) #23, !dbg !13349
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @z_thread_monitor_lock, metadata !13000, metadata !DIExpression()) #23, !dbg !13349
  %34 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13351
  br i1 %34, label %36, label %35, !dbg !13352

35:                                               ; preds = %31
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !13353
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @z_thread_monitor_lock) #26, !dbg !13353
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i32 0, i32 0), i32 noundef 194) #26, !dbg !13353
  unreachable, !dbg !13353

36:                                               ; preds = %31
  %37 = extractvalue { i32, i32 } %28, 0, !dbg !13338
  call void @llvm.dbg.value(metadata i32 %37, metadata !12974, metadata !DIExpression()) #23, !dbg !13340
  call void @llvm.dbg.value(metadata i32 %37, metadata !12968, metadata !DIExpression()) #23, !dbg !13336
  call void @llvm.dbg.value(metadata i32 %37, metadata !13312, metadata !DIExpression()), !dbg !13313
  call void @llvm.dbg.value(metadata i32 undef, metadata !12995, metadata !DIExpression()) #23, !dbg !13349
  call void @llvm.dbg.value(metadata i32 undef, metadata !13009, metadata !DIExpression()) #23, !dbg !13354
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %37) #23, !dbg !13356, !srcloc !13015
  %38 = icmp eq i8* %9, null, !dbg !13357
  %39 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13359
  br i1 %38, label %43, label %40, !dbg !13360

40:                                               ; preds = %36
  %41 = tail call i8* @strncpy(i8* noundef nonnull %39, i8* noundef nonnull %9, i32 noundef 31) #26, !dbg !13361
  %42 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 31, !dbg !13363
  store i8 0, i8* %42, align 1, !dbg !13364
  br label %44, !dbg !13365

43:                                               ; preds = %36
  store i8 0, i8* %39, align 4, !dbg !13366
  br label %44

44:                                               ; preds = %43, %40
  %45 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13368
  %46 = icmp eq %struct.k_thread* %45, null, !dbg !13368
  br i1 %46, label %50, label %47, !dbg !13370

47:                                               ; preds = %44
  %48 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %45, i32 0, i32 9, !dbg !13371
  %49 = load %struct.k_heap*, %struct.k_heap** %48, align 4, !dbg !13371
  br label %50, !dbg !13372

50:                                               ; preds = %44, %47
  %51 = phi %struct.k_heap* [ %49, %47 ], [ null, %44 ], !dbg !13313
  %52 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 9, !dbg !13373
  store %struct.k_heap* %51, %struct.k_heap** %52, align 4, !dbg !13375
  ret i8* %22, !dbg !13376
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #4 !dbg !13377 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13381, metadata !DIExpression()), !dbg !13382
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13383
  ret i1 %2, !dbg !13384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13385 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13390, metadata !DIExpression()), !dbg !13391
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13392
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !13393
  ret void, !dbg !13394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !13395 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13400, metadata !DIExpression()), !dbg !13404
  call void @llvm.dbg.value(metadata i32 %1, metadata !13401, metadata !DIExpression()), !dbg !13404
  call void @llvm.dbg.value(metadata i32 %2, metadata !13402, metadata !DIExpression()), !dbg !13404
  call void @llvm.dbg.value(metadata i32 %3, metadata !13403, metadata !DIExpression()), !dbg !13404
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13405
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !13406
  %6 = trunc i32 %3 to i8, !dbg !13407
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13408
  store i8 %6, i8* %7, align 4, !dbg !13409
  %8 = trunc i32 %2 to i8, !dbg !13410
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13411
  store i8 %8, i8* %9, align 1, !dbg !13412
  %10 = trunc i32 %1 to i8, !dbg !13413
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13414
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13414
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13414
  store i8 %10, i8* %13, align 2, !dbg !13415
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13416
  store i8 0, i8* %14, align 1, !dbg !13417
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !13418
  ret void, !dbg !13419
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !13420 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13424, metadata !DIExpression()), !dbg !13432
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13425, metadata !DIExpression()), !dbg !13432
  call void @llvm.dbg.value(metadata i32 %2, metadata !13426, metadata !DIExpression()), !dbg !13432
  call void @llvm.dbg.value(metadata i32 0, metadata !13431, metadata !DIExpression()), !dbg !13432
  %4 = add i32 %2, 7, !dbg !13433
  %5 = and i32 %4, -8, !dbg !13433
  %6 = add i32 %5, 64, !dbg !13433
  call void @llvm.dbg.value(metadata i32 %6, metadata !13427, metadata !DIExpression()), !dbg !13432
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.200(%struct.z_thread_stack_element* noundef %1) #24, !dbg !13435
  call void @llvm.dbg.value(metadata i8* %7, metadata !13430, metadata !DIExpression()), !dbg !13432
  call void @llvm.dbg.value(metadata i32 %5, metadata !13428, metadata !DIExpression()), !dbg !13432
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13436
  call void @llvm.dbg.value(metadata i8* %8, metadata !13429, metadata !DIExpression()), !dbg !13432
  call void @llvm.dbg.value(metadata i32 0, metadata !13431, metadata !DIExpression()), !dbg !13432
  %9 = ptrtoint i8* %7 to i32, !dbg !13437
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !13438
  store i32 %9, i32* %10, align 8, !dbg !13439
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 1, !dbg !13440
  store i32 %5, i32* %11, align 4, !dbg !13441
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 2, !dbg !13442
  store i32 0, i32* %12, align 8, !dbg !13443
  call void @llvm.dbg.value(metadata i8* %8, metadata !13429, metadata !DIExpression()), !dbg !13432
  ret i8* %8, !dbg !13444
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.200(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #4 !dbg !13445 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13449, metadata !DIExpression()), !dbg !13450
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13451
  ret i8* %2, !dbg !13452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13453 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13458, metadata !DIExpression()), !dbg !13459
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13460
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !13461
  ret void, !dbg !13462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13463 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13465, metadata !DIExpression()), !dbg !13466
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13467
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !13468
  ret void, !dbg !13469
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13470 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13474, metadata !DIExpression()), !dbg !13475
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13476
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13477
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13478
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13479
  ret void, !dbg !13480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13481 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13486, metadata !DIExpression()), !dbg !13487
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13488
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13489
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13490
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13491
  ret void, !dbg !13492
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13493 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13510, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13501, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13502, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.value(metadata i32 %2, metadata !13503, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13504, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.value(metadata i8* %4, metadata !13505, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.value(metadata i8* %5, metadata !13506, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.value(metadata i8* %6, metadata !13507, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.value(metadata i32 %7, metadata !13508, metadata !DIExpression()), !dbg !13511
  call void @llvm.dbg.value(metadata i32 %8, metadata !13509, metadata !DIExpression()), !dbg !13511
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13512, !srcloc !13132
  call void @llvm.dbg.value(metadata i32 %11, metadata !13128, metadata !DIExpression()) #23, !dbg !13517
  %12 = icmp eq i32 %11, 0, !dbg !13518
  br i1 %12, label %14, label %13, !dbg !13519

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15.203, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.175, i32 0, i32 0), i32 noundef 647) #26, !dbg !13520
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16.204, i32 0, i32 0)) #26, !dbg !13520
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.175, i32 0, i32 0), i32 noundef 647) #26, !dbg !13520
  unreachable, !dbg !13520

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !13510, metadata !DIExpression()), !dbg !13511
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !13522
  %17 = icmp eq i64 %15, -1, !dbg !13523
  br i1 %17, label %19, label %18, !dbg !13525

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !13526
  br label %19, !dbg !13528

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !13529
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13530 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13535, metadata !DIExpression()), !dbg !13536
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13534, metadata !DIExpression()), !dbg !13536
  %4 = icmp eq i64 %3, 0, !dbg !13537
  br i1 %4, label %5, label %6, !dbg !13539

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start.205(%struct.k_thread* noundef %0) #24, !dbg !13540
  br label %7, !dbg !13542

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !13543
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start.205(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13546 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13550, metadata !DIExpression()), !dbg !13551
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13552, !srcloc !13554
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13555
  ret void, !dbg !13556
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13557 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13560, metadata !DIExpression()), !dbg !13561
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13559, metadata !DIExpression()), !dbg !13561
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13562
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !13563
  ret void, !dbg !13564
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13565 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13567, metadata !DIExpression()), !dbg !13587
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !13588

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.175, i32 0, i32 0), i32 noundef 750) #26, !dbg !13592
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0)) #26, !dbg !13592
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.175, i32 0, i32 0), i32 noundef 750) #26, !dbg !13592
  unreachable, !dbg !13592

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13567, metadata !DIExpression()), !dbg !13587
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13595
  br i1 %4, label %6, label %5, !dbg !13596

5:                                                ; preds = %2
  tail call void @k_sched_lock() #26, !dbg !13597
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13585, metadata !DIExpression()), !dbg !13598
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !13599

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13603
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13603
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13605
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !13605
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13606
  %12 = load i32, i32* %11, align 4, !dbg !13606
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13607
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !13607
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13608
  %16 = load i8*, i8** %15, align 4, !dbg !13608
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13609
  %18 = load i8*, i8** %17, align 4, !dbg !13609
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13610
  %20 = load i8*, i8** %19, align 4, !dbg !13610
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13611
  %22 = load i32, i32* %21, align 4, !dbg !13611
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13612
  %24 = load i32, i32* %23, align 4, !dbg !13612
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !13613
  %26 = load i8*, i8** %25, align 4, !dbg !13613
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !13614
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13615
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !13616
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !13617
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !13617
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13618
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13567, metadata !DIExpression()), !dbg !13587
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13619
  br i1 %32, label %1, label %2, !dbg !13588, !llvm.loop !13620

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.173, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.17, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.175, i32 0, i32 0), i32 noundef 781) #26, !dbg !13622
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0)) #26, !dbg !13622
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.175, i32 0, i32 0), i32 noundef 781) #26, !dbg !13622
  unreachable, !dbg !13622

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !13585, metadata !DIExpression()), !dbg !13598
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13625
  br i1 %36, label %38, label %37, !dbg !13626

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #26, !dbg !13627
  ret void, !dbg !13628

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !13629
  %40 = load i32, i32* %39, align 4, !dbg !13629
  %41 = icmp eq i32 %40, -1, !dbg !13632
  br i1 %41, label %50, label %42, !dbg !13633

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !13634
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !13634
  %45 = icmp sgt i32 %40, 0, !dbg !13636
  %46 = select i1 %45, i32 %40, i32 0, !dbg !13636
  %47 = zext i32 %46 to i64, !dbg !13636
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64.208(i64 noundef %47) #24, !dbg !13636
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !13637
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !13637
  br label %50, !dbg !13638

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !13639
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !13585, metadata !DIExpression()), !dbg !13598
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13640
  br i1 %52, label %33, label %34, !dbg !13599, !llvm.loop !13641
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.208(i64 noundef %0) unnamed_addr #4 !dbg !13643 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13645, metadata !DIExpression()), !dbg !13646
  call void @llvm.dbg.value(metadata i64 %0, metadata !13647, metadata !DIExpression()), !dbg !13662
  call void @llvm.dbg.value(metadata i32 1000, metadata !13650, metadata !DIExpression()), !dbg !13662
  call void @llvm.dbg.value(metadata i32 10000, metadata !13651, metadata !DIExpression()), !dbg !13662
  call void @llvm.dbg.value(metadata i8 1, metadata !13652, metadata !DIExpression()), !dbg !13662
  call void @llvm.dbg.value(metadata i8 0, metadata !13653, metadata !DIExpression()), !dbg !13662
  call void @llvm.dbg.value(metadata i8 1, metadata !13654, metadata !DIExpression()), !dbg !13662
  call void @llvm.dbg.value(metadata i8 0, metadata !13655, metadata !DIExpression()), !dbg !13662
  call void @llvm.dbg.value(metadata i8 1, metadata !13656, metadata !DIExpression()), !dbg !13662
  call void @llvm.dbg.value(metadata i8 0, metadata !13657, metadata !DIExpression()), !dbg !13662
  call void @llvm.dbg.value(metadata i64 0, metadata !13658, metadata !DIExpression()), !dbg !13662
  call void @llvm.dbg.value(metadata i64 0, metadata !13658, metadata !DIExpression()), !dbg !13662
  %2 = mul i64 %0, 10, !dbg !13664
  ret i64 %2, !dbg !13670
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #2 !dbg !13671 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13673, metadata !DIExpression()), !dbg !13677
  call void @llvm.dbg.value(metadata i8* %1, metadata !13674, metadata !DIExpression()), !dbg !13677
  call void @llvm.dbg.value(metadata i8* %2, metadata !13675, metadata !DIExpression()), !dbg !13677
  call void @llvm.dbg.value(metadata i8* %3, metadata !13676, metadata !DIExpression()), !dbg !13677
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13678
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13679
  %7 = load i8, i8* %6, align 4, !dbg !13680
  %8 = or i8 %7, 4, !dbg !13680
  store i8 %8, i8* %6, align 4, !dbg !13680
  tail call void @z_thread_essential_clear() #24, !dbg !13681
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13682
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 4, i32 0, !dbg !13683
  store void (i8*, i8*, i8*)* %0, void (i8*, i8*, i8*)** %10, align 8, !dbg !13684
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 4, i32 1, !dbg !13685
  store i8* %1, i8** %11, align 4, !dbg !13686
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 4, i32 2, !dbg !13687
  store i8* %2, i8** %12, align 8, !dbg !13688
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 4, i32 3, !dbg !13689
  store i8* %3, i8** %13, align 4, !dbg !13690
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !13691
  unreachable, !dbg !13691
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #4 !dbg !13692 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13696, metadata !DIExpression()), !dbg !13697
  ret i32 -134, !dbg !13698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #4 !dbg !13699 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13703, metadata !DIExpression()), !dbg !13705
  call void @llvm.dbg.value(metadata i32 %1, metadata !13704, metadata !DIExpression()), !dbg !13705
  ret i32 -134, !dbg !13706
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #4 !dbg !13707 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13714, metadata !DIExpression()), !dbg !13716
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13715, metadata !DIExpression()), !dbg !13716
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13717
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13719
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13716
  ret i32 %6, !dbg !13720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #4 !dbg !13721 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13725, metadata !DIExpression()), !dbg !13726
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13727
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13726
  ret i32 %3, !dbg !13729
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13730 {
  tail call void @sys_clock_idle_exit() #26, !dbg !13732
  ret void, !dbg !13733
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #2 !dbg !13734 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13736, metadata !DIExpression()), !dbg !13739
  call void @llvm.dbg.value(metadata i8* %1, metadata !13737, metadata !DIExpression()), !dbg !13739
  call void @llvm.dbg.value(metadata i8* %2, metadata !13738, metadata !DIExpression()), !dbg !13739
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13740
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13740
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13740
  %7 = load i8, i8* %6, align 2, !dbg !13740
  %8 = icmp sgt i8 %7, -1, !dbg !13740
  br i1 %8, label %10, label %9, !dbg !13743

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.211, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.212, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.213, i32 0, i32 0), i32 noundef 39) #26, !dbg !13744
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.213, i32 0, i32 0), i32 noundef 39) #26, !dbg !13744
  unreachable, !dbg !13744

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13746, !srcloc !13753
  call void @llvm.dbg.value(metadata i32 undef, metadata !13749, metadata !DIExpression()) #23, !dbg !13754
  call void @llvm.dbg.value(metadata i32 undef, metadata !13750, metadata !DIExpression()) #23, !dbg !13754
  tail call fastcc void @k_cpu_idle() #24, !dbg !13755
  br label %10, !dbg !13756, !llvm.loop !13757
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13759 {
  tail call void @arch_cpu_idle() #26, !dbg !13760
  ret void, !dbg !13761
}

; Function Attrs: optsize
declare !dbg !13762 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #7 !dbg !13763 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13774, metadata !DIExpression()), !dbg !13775
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13776
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !13777
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13778
  store i32 0, i32* %3, align 4, !dbg !13779
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13780
  tail call fastcc void @z_waitq_init.216(%struct._wait_q_t* noundef %4) #24, !dbg !13781
  ret i32 0, !dbg !13782
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.216(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13783 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13787, metadata !DIExpression()), !dbg !13788
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13789
  tail call fastcc void @sys_dlist_init.217(%struct._dnode* noundef %2) #24, !dbg !13790
  ret void, !dbg !13791
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.217(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13792 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13797, metadata !DIExpression()), !dbg !13798
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13799
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13800
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13801
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13802
  ret void, !dbg !13803
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13804 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13813, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13812, metadata !DIExpression()), !dbg !13825
  call void @llvm.dbg.value(metadata i8 0, metadata !13820, metadata !DIExpression()), !dbg !13825
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13826, !srcloc !13835
  call void @llvm.dbg.value(metadata i32 %4, metadata !13829, metadata !DIExpression()) #23, !dbg !13836
  %5 = icmp eq i32 %4, 0, !dbg !13837
  br i1 %5, label %7, label %6, !dbg !13838

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.221, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.222, i32 0, i32 0), i32 noundef 101) #26, !dbg !13839
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.223, i32 0, i32 0)) #26, !dbg !13839
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.222, i32 0, i32 0), i32 noundef 101) #26, !dbg !13839
  unreachable, !dbg !13839

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.224, metadata !13841, metadata !DIExpression()) #23, !dbg !13848
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13850, !srcloc !13856
  call void @llvm.dbg.value(metadata i32 undef, metadata !13853, metadata !DIExpression()) #23, !dbg !13857
  call void @llvm.dbg.value(metadata i32 undef, metadata !13854, metadata !DIExpression()) #23, !dbg !13857
  call void @llvm.dbg.value(metadata i32 undef, metadata !13847, metadata !DIExpression()) #23, !dbg !13848
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.224) #26, !dbg !13858
  br i1 %9, label %11, label %10, !dbg !13861

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.226, i32 0, i32 0), i32 noundef 148) #26, !dbg !13862
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.227, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.224) #26, !dbg !13862
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.226, i32 0, i32 0), i32 noundef 148) #26, !dbg !13862
  unreachable, !dbg !13862

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !13850
  call void @llvm.dbg.value(metadata i32 %12, metadata !13853, metadata !DIExpression()) #23, !dbg !13857
  call void @llvm.dbg.value(metadata i32 %12, metadata !13847, metadata !DIExpression()) #23, !dbg !13848
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.224) #26, !dbg !13864
  call void @llvm.dbg.value(metadata i32 %12, metadata !13815, metadata !DIExpression()), !dbg !13825
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13865
  %14 = load i32, i32* %13, align 4, !dbg !13865
  %15 = icmp eq i32 %14, 0, !dbg !13865
  br i1 %15, label %21, label %16, !dbg !13865

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13865
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13865
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13865
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !13865
  br i1 %20, label %27, label %39, !dbg !13867, !prof !13868

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13869
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !13871
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !13871
  %25 = load i8, i8* %24, align 2, !dbg !13871
  %26 = sext i8 %25 to i32, !dbg !13869
  br label %30, !dbg !13872

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13873
  %29 = load i32, i32* %28, align 4, !dbg !13873
  br label %30, !dbg !13872

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !13874
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !13872
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13875
  store i32 %32, i32* %33, align 4, !dbg !13876
  %34 = add i32 %14, 1, !dbg !13877
  store i32 %34, i32* %13, align 4, !dbg !13877
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13878
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !13879
  call void @llvm.dbg.value(metadata i32 undef, metadata !13880, metadata !DIExpression()) #23, !dbg !13886
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.224, metadata !13885, metadata !DIExpression()) #23, !dbg !13886
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.224) #26, !dbg !13888
  br i1 %36, label %38, label %37, !dbg !13891

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.228, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.226, i32 0, i32 0), i32 noundef 194) #26, !dbg !13892
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.229, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.224) #26, !dbg !13892
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.226, i32 0, i32 0), i32 noundef 194) #26, !dbg !13892
  unreachable, !dbg !13892

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !13880, metadata !DIExpression()) #23, !dbg !13886
  call void @llvm.dbg.value(metadata i32 %12, metadata !13894, metadata !DIExpression()) #23, !dbg !13897
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13899, !srcloc !13900
  br label %97, !dbg !13901

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !13902
  br i1 %40, label %41, label %45, !dbg !13904, !prof !13905

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !13880, metadata !DIExpression()) #23, !dbg !13906
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.224, metadata !13885, metadata !DIExpression()) #23, !dbg !13906
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.224) #26, !dbg !13909
  br i1 %42, label %44, label %43, !dbg !13910

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.228, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.226, i32 0, i32 0), i32 noundef 194) #26, !dbg !13911
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.229, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.224) #26, !dbg !13911
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.226, i32 0, i32 0), i32 noundef 194) #26, !dbg !13911
  unreachable, !dbg !13911

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !13880, metadata !DIExpression()) #23, !dbg !13906
  call void @llvm.dbg.value(metadata i32 %12, metadata !13894, metadata !DIExpression()) #23, !dbg !13912
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13914, !srcloc !13900
  br label %97, !dbg !13915

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !13916
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !13916
  %48 = load i8, i8* %47, align 2, !dbg !13916
  %49 = sext i8 %48 to i32, !dbg !13917
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !13918
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !13918
  %52 = load i8, i8* %51, align 2, !dbg !13918
  %53 = sext i8 %52 to i32, !dbg !13919
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #24, !dbg !13920
  call void @llvm.dbg.value(metadata i32 %54, metadata !13814, metadata !DIExpression()), !dbg !13825
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #24, !dbg !13921
  br i1 %55, label %56, label %58, !dbg !13923

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #24, !dbg !13924
  call void @llvm.dbg.value(metadata i1 %57, metadata !13820, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13825
  br label %58, !dbg !13926

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !13820, metadata !DIExpression()), !dbg !13825
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13927
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13928
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.224, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #26, !dbg !13928
  call void @llvm.dbg.value(metadata i32 %62, metadata !13821, metadata !DIExpression()), !dbg !13825
  %63 = icmp eq i32 %62, 0, !dbg !13929
  br i1 %63, label %97, label %64, !dbg !13931

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.224, metadata !13841, metadata !DIExpression()) #23, !dbg !13932
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13934, !srcloc !13856
  call void @llvm.dbg.value(metadata i32 undef, metadata !13853, metadata !DIExpression()) #23, !dbg !13936
  call void @llvm.dbg.value(metadata i32 undef, metadata !13854, metadata !DIExpression()) #23, !dbg !13936
  call void @llvm.dbg.value(metadata i32 undef, metadata !13847, metadata !DIExpression()) #23, !dbg !13932
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.224) #26, !dbg !13937
  br i1 %66, label %68, label %67, !dbg !13938

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.226, i32 0, i32 0), i32 noundef 148) #26, !dbg !13939
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.227, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.224) #26, !dbg !13939
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.226, i32 0, i32 0), i32 noundef 148) #26, !dbg !13939
  unreachable, !dbg !13939

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !13934
  call void @llvm.dbg.value(metadata i32 %69, metadata !13853, metadata !DIExpression()) #23, !dbg !13936
  call void @llvm.dbg.value(metadata i32 %69, metadata !13847, metadata !DIExpression()) #23, !dbg !13932
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.224) #26, !dbg !13940
  call void @llvm.dbg.value(metadata i32 %69, metadata !13815, metadata !DIExpression()), !dbg !13825
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13941
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !13941
  br i1 %71, label %90, label %72, !dbg !13942, !prof !13905

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef nonnull %60) #24, !dbg !13943
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !13822, metadata !DIExpression()), !dbg !13944
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !13945
  br i1 %74, label %83, label %75, !dbg !13946

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !13947
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !13947
  %78 = load i8, i8* %77, align 2, !dbg !13947
  %79 = sext i8 %78 to i32, !dbg !13948
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13949
  %81 = load i32, i32* %80, align 4, !dbg !13949
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #24, !dbg !13950
  br label %86, !dbg !13946

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13951
  %85 = load i32, i32* %84, align 4, !dbg !13951
  br label %86, !dbg !13946

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !13946
  call void @llvm.dbg.value(metadata i32 %87, metadata !13814, metadata !DIExpression()), !dbg !13825
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #24, !dbg !13952
  %89 = select i1 %88, i1 true, i1 %59, !dbg !13953
  call void @llvm.dbg.value(metadata i1 %89, metadata !13820, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13825
  call void @llvm.dbg.value(metadata i8 poison, metadata !13820, metadata !DIExpression()), !dbg !13825
  br i1 %89, label %91, label %93, !dbg !13954

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !13820, metadata !DIExpression()), !dbg !13825
  br i1 %59, label %91, label %93, !dbg !13954

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !13955
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.224, [1 x i32] %92) #26, !dbg !13955
  br label %97, !dbg !13958

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !13880, metadata !DIExpression()) #23, !dbg !13959
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.224, metadata !13885, metadata !DIExpression()) #23, !dbg !13959
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.224) #26, !dbg !13962
  br i1 %94, label %96, label %95, !dbg !13963

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.228, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.226, i32 0, i32 0), i32 noundef 194) #26, !dbg !13964
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.229, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.224) #26, !dbg !13964
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.226, i32 0, i32 0), i32 noundef 194) #26, !dbg !13964
  unreachable, !dbg !13964

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !13880, metadata !DIExpression()) #23, !dbg !13959
  call void @llvm.dbg.value(metadata i32 %69, metadata !13894, metadata !DIExpression()) #23, !dbg !13965
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #23, !dbg !13967, !srcloc !13900
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !13825
  ret i32 %98, !dbg !13968
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13973, metadata !DIExpression()), !dbg !13976
  call void @llvm.dbg.value(metadata i32 %1, metadata !13974, metadata !DIExpression()), !dbg !13976
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #24, !dbg !13977
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !13977
  call void @llvm.dbg.value(metadata i32 %4, metadata !13975, metadata !DIExpression()), !dbg !13976
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #24, !dbg !13978
  call void @llvm.dbg.value(metadata i32 %5, metadata !13975, metadata !DIExpression()), !dbg !13976
  ret i32 %5, !dbg !13979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !13980 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13984, metadata !DIExpression()), !dbg !13986
  call void @llvm.dbg.value(metadata i32 %1, metadata !13985, metadata !DIExpression()), !dbg !13986
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !13987
  ret i1 %3, !dbg !13988
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !13989 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13993, metadata !DIExpression()), !dbg !13995
  call void @llvm.dbg.value(metadata i32 %1, metadata !13994, metadata !DIExpression()), !dbg !13995
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13996
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !13996
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13998
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13998
  %7 = load i8, i8* %6, align 2, !dbg !13998
  %8 = sext i8 %7 to i32, !dbg !13999
  %9 = icmp eq i32 %8, %1, !dbg !14000
  br i1 %9, label %12, label %10, !dbg !14001

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #26, !dbg !14002
  br label %12, !dbg !14004

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !13995
  ret i1 %13, !dbg !14005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !14006 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14010, metadata !DIExpression()), !dbg !14011
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !14012
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !14013
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !14014
  ret %struct.k_thread* %4, !dbg !14015
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14016 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14020, metadata !DIExpression()), !dbg !14021
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !14022
  br i1 %2, label %6, label %3, !dbg !14022

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14023
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14023
  br label %6, !dbg !14022

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14022
  ret %struct._dnode* %7, !dbg !14024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14025 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14029, metadata !DIExpression()), !dbg !14030
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14031
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14031
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14032
  ret i1 %4, !dbg !14033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14034 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14036, metadata !DIExpression()), !dbg !14038
  call void @llvm.dbg.value(metadata i32 %1, metadata !14037, metadata !DIExpression()), !dbg !14038
  %3 = icmp slt i32 %0, %1, !dbg !14039
  ret i1 %3, !dbg !14040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !14041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14043, metadata !DIExpression()), !dbg !14044
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #24, !dbg !14045
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !14045
  ret i32 %3, !dbg !14046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #4 !dbg !14047 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14051, metadata !DIExpression()), !dbg !14052
  %2 = icmp sgt i32 %0, -128, !dbg !14053
  ret i1 %2, !dbg !14054
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !14055 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !14057, metadata !DIExpression()), !dbg !14061
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14062, !srcloc !13835
  call void @llvm.dbg.value(metadata i32 %2, metadata !13829, metadata !DIExpression()) #23, !dbg !14067
  %3 = icmp eq i32 %2, 0, !dbg !14068
  br i1 %3, label %5, label %4, !dbg !14069

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.221, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.222, i32 0, i32 0), i32 noundef 205) #26, !dbg !14070
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.223, i32 0, i32 0)) #26, !dbg !14070
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.222, i32 0, i32 0), i32 noundef 205) #26, !dbg !14070
  unreachable, !dbg !14070

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !14072
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !14072
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !14072
  br i1 %8, label %41, label %9, !dbg !14074

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14075
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !14075
  br i1 %11, label %12, label %41, !dbg !14077

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !14078
  %14 = load i32, i32* %13, align 4, !dbg !14078
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !14081

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.232, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.222, i32 0, i32 0), i32 noundef 229) #26, !dbg !14082
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.222, i32 0, i32 0), i32 noundef 229) #26, !dbg !14082
  unreachable, !dbg !14082

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !14084
  store i32 %17, i32* %13, align 4, !dbg !14084
  br label %41, !dbg !14087

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.224, metadata !13841, metadata !DIExpression()) #23, !dbg !14088
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14090, !srcloc !13856
  call void @llvm.dbg.value(metadata i32 undef, metadata !13853, metadata !DIExpression()) #23, !dbg !14092
  call void @llvm.dbg.value(metadata i32 undef, metadata !13854, metadata !DIExpression()) #23, !dbg !14092
  call void @llvm.dbg.value(metadata i32 undef, metadata !13847, metadata !DIExpression()) #23, !dbg !14088
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.224) #26, !dbg !14093
  br i1 %20, label %22, label %21, !dbg !14094

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.225, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.226, i32 0, i32 0), i32 noundef 148) #26, !dbg !14095
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.227, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.224) #26, !dbg !14095
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.226, i32 0, i32 0), i32 noundef 148) #26, !dbg !14095
  unreachable, !dbg !14095

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !14090
  call void @llvm.dbg.value(metadata i32 %23, metadata !13853, metadata !DIExpression()) #23, !dbg !14092
  call void @llvm.dbg.value(metadata i32 %23, metadata !13847, metadata !DIExpression()) #23, !dbg !14088
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.224) #26, !dbg !14096
  call void @llvm.dbg.value(metadata i32 %23, metadata !14059, metadata !DIExpression()), !dbg !14061
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !14097
  %25 = load i32, i32* %24, align 4, !dbg !14097
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #24, !dbg !14098
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !14099
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #26, !dbg !14100
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !14058, metadata !DIExpression()), !dbg !14061
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !14101
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !14102
  br i1 %29, label %37, label %30, !dbg !14104

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !14105
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !14105
  %33 = load i8, i8* %32, align 2, !dbg !14105
  %34 = sext i8 %33 to i32, !dbg !14107
  store i32 %34, i32* %24, align 4, !dbg !14108
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !14109, metadata !DIExpression()), !dbg !14115
  call void @llvm.dbg.value(metadata i32 0, metadata !14114, metadata !DIExpression()), !dbg !14115
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 10, i32 1, !dbg !14117
  store i32 0, i32* %35, align 4, !dbg !14118
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #26, !dbg !14119
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !14120
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.224, [1 x i32] %36) #26, !dbg !14120
  br label %41, !dbg !14121

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !14122
  call void @llvm.dbg.value(metadata i32 undef, metadata !13880, metadata !DIExpression()) #23, !dbg !14124
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.224, metadata !13885, metadata !DIExpression()) #23, !dbg !14124
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.224) #26, !dbg !14126
  br i1 %38, label %40, label %39, !dbg !14127

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.228, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.226, i32 0, i32 0), i32 noundef 194) #26, !dbg !14128
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.229, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.224) #26, !dbg !14128
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.226, i32 0, i32 0), i32 noundef 194) #26, !dbg !14128
  unreachable, !dbg !14128

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !13880, metadata !DIExpression()) #23, !dbg !14124
  call void @llvm.dbg.value(metadata i32 %23, metadata !13894, metadata !DIExpression()) #23, !dbg !14129
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !14131, !srcloc !13900
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !14061
  ret i32 %42, !dbg !14132
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !14133 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14137, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14138, metadata !DIExpression()), !dbg !14141
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14142
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14142
  %5 = load i8, i8* %4, align 2, !dbg !14142
  call void @llvm.dbg.value(metadata i8 %5, metadata !14139, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14141
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14143
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14143
  %8 = load i8, i8* %7, align 2, !dbg !14143
  call void @llvm.dbg.value(metadata i8 %8, metadata !14140, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14141
  %9 = icmp eq i8 %8, %5, !dbg !14144
  %10 = sext i8 %5 to i32, !dbg !14146
  %11 = sext i8 %8 to i32, !dbg !14146
  %12 = sub nsw i32 %11, %10, !dbg !14146
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14146
  ret i32 %13, !dbg !14147
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14148 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14152, metadata !DIExpression()), !dbg !14153
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !14154
  %3 = icmp eq i32 %2, 0, !dbg !14156
  br i1 %3, label %8, label %4, !dbg !14157

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #26, !dbg !14158
  %6 = add i32 %5, %2, !dbg !14160
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14161
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !14162
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #26, !dbg !14163
  br label %8, !dbg !14164

8:                                                ; preds = %4, %1
  ret void, !dbg !14165
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !14166 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14170, metadata !DIExpression()), !dbg !14172
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14173
  call void @llvm.dbg.value(metadata i32 %1, metadata !14171, metadata !DIExpression()), !dbg !14172
  ret i32 %1, !dbg !14174
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14175 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14179, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata i32 %1, metadata !14180, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.value(metadata i32 0, metadata !14181, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !14197
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14199, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !14206
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !14206
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !14197
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14207
  br i1 %4, label %6, label %5, !dbg !14210

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !14211
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14211
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !14211
  unreachable, !dbg !14211

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !14206
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !14197
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14213
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14181, metadata !DIExpression()), !dbg !14189
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14214
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14217
  %8 = icmp sgt i32 %0, 0, !dbg !14218
  %9 = icmp sgt i32 %7, 2, !dbg !14220
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14220
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14220
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14221
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14222
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14223
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !14230
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !14230
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14232
  br i1 %12, label %14, label %13, !dbg !14235

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !14236
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14236
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !14236
  unreachable, !dbg !14236

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14199
  call void @llvm.dbg.value(metadata i32 %15, metadata !14202, metadata !DIExpression()) #23, !dbg !14206
  call void @llvm.dbg.value(metadata i32 %15, metadata !14196, metadata !DIExpression()) #23, !dbg !14197
  call void @llvm.dbg.value(metadata i32 %15, metadata !14187, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !14230
  call void @llvm.dbg.value(metadata i32 undef, metadata !14238, metadata !DIExpression()) #23, !dbg !14241
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14243, !srcloc !14244
  call void @llvm.dbg.value(metadata i32 1, metadata !14181, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata i32 undef, metadata !14181, metadata !DIExpression()), !dbg !14189
  ret void, !dbg !14245
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #4 !dbg !14246 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14248, metadata !DIExpression()), !dbg !14249
  call void @llvm.dbg.value(metadata i32 %0, metadata !14250, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14265
  call void @llvm.dbg.value(metadata i32 1000, metadata !14253, metadata !DIExpression()), !dbg !14265
  call void @llvm.dbg.value(metadata i32 10000, metadata !14254, metadata !DIExpression()), !dbg !14265
  call void @llvm.dbg.value(metadata i8 1, metadata !14255, metadata !DIExpression()), !dbg !14265
  call void @llvm.dbg.value(metadata i1 true, metadata !14256, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14265
  call void @llvm.dbg.value(metadata i1 true, metadata !14257, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14265
  call void @llvm.dbg.value(metadata i8 0, metadata !14258, metadata !DIExpression()), !dbg !14265
  call void @llvm.dbg.value(metadata i1 true, metadata !14259, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14265
  call void @llvm.dbg.value(metadata i1 false, metadata !14260, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14265
  call void @llvm.dbg.value(metadata i64 0, metadata !14261, metadata !DIExpression()), !dbg !14265
  call void @llvm.dbg.value(metadata i64 0, metadata !14261, metadata !DIExpression()), !dbg !14265
  %2 = mul i32 %0, 10, !dbg !14267
  ret i32 %2, !dbg !14273
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14274 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14276, metadata !DIExpression()), !dbg !14278
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !14279
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14281, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !14283
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !14283
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !14279
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14284
  br i1 %3, label %5, label %4, !dbg !14285

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !14286
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14286
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !14286
  unreachable, !dbg !14286

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14281
  call void @llvm.dbg.value(metadata i32 %6, metadata !14202, metadata !DIExpression()) #23, !dbg !14283
  call void @llvm.dbg.value(metadata i32 %6, metadata !14196, metadata !DIExpression()) #23, !dbg !14279
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14287
  call void @llvm.dbg.value(metadata i32 %6, metadata !14277, metadata !DIExpression()), !dbg !14278
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14288
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14290
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14291
  br i1 %9, label %10, label %14, !dbg !14292

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14293
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !14295
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !14295
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14297
  br i1 %11, label %13, label %12, !dbg !14298

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !14299
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14299
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !14299
  unreachable, !dbg !14299

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14224, metadata !DIExpression()) #23, !dbg !14295
  call void @llvm.dbg.value(metadata i32 %6, metadata !14238, metadata !DIExpression()) #23, !dbg !14300
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14302, !srcloc !14244
  br label %33, !dbg !14303

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14304
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14305
  %16 = icmp eq i32 %15, 0, !dbg !14305
  br i1 %16, label %27, label %17, !dbg !14307

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14308
  br i1 %18, label %19, label %27, !dbg !14309

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14310
  %21 = icmp sgt i32 %20, %0, !dbg !14313
  br i1 %21, label %25, label %22, !dbg !14314

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14315
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14315
  call void @llvm.dbg.value(metadata i32 %24, metadata !14277, metadata !DIExpression()), !dbg !14278
  br label %28, !dbg !14317

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14318
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14318
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14320
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14278
  call void @llvm.dbg.value(metadata i32 %29, metadata !14277, metadata !DIExpression()), !dbg !14278
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !14322
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !14322
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14324
  br i1 %30, label %32, label %31, !dbg !14325

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !14326
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14326
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !14326
  unreachable, !dbg !14326

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14224, metadata !DIExpression()) #23, !dbg !14322
  call void @llvm.dbg.value(metadata i32 %29, metadata !14238, metadata !DIExpression()) #23, !dbg !14327
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14329, !srcloc !14244
  br label %33, !dbg !14330

33:                                               ; preds = %32, %13
  ret void, !dbg !14330
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14331 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14335, metadata !DIExpression()), !dbg !14337
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14338
  %3 = icmp eq i32 %2, 0, !dbg !14338
  br i1 %3, label %16, label %4, !dbg !14339

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14340
  br i1 %5, label %16, label %6, !dbg !14341

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14342
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14342
  %9 = load i8, i8* %8, align 2, !dbg !14342
  %10 = sext i8 %9 to i32, !dbg !14343
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14344
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.245(i32 noundef %10, i32 noundef %11) #24, !dbg !14345
  br i1 %12, label %16, label %13, !dbg !14346

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14347
  %15 = xor i1 %14, true, !dbg !14348
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14337
  call void @llvm.dbg.value(metadata i1 %17, metadata !14336, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14337
  ret i1 %17, !dbg !14349
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14350 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14354, metadata !DIExpression()), !dbg !14356
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14357
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14355, metadata !DIExpression()), !dbg !14356
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14358
  br i1 %3, label %5, label %4, !dbg !14360

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14361
  br label %5, !dbg !14363

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14354, metadata !DIExpression()), !dbg !14356
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14364
  ret i32 %6, !dbg !14365
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14366 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14368, metadata !DIExpression()), !dbg !14370
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14371
  %3 = load i8, i8* %2, align 1, !dbg !14371
  call void @llvm.dbg.value(metadata i8 %3, metadata !14369, metadata !DIExpression()), !dbg !14370
  %4 = and i8 %3, 31, !dbg !14372
  %5 = icmp ne i8 %4, 0, !dbg !14373
  ret i1 %5, !dbg !14374
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14375 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14377, metadata !DIExpression()), !dbg !14378
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14379
  br i1 %2, label %3, label %7, !dbg !14381

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14382, metadata !DIExpression()) #23, !dbg !14385
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14388
  %5 = load i8, i8* %4, align 1, !dbg !14389
  %6 = and i8 %5, 127, !dbg !14389
  store i8 %6, i8* %4, align 1, !dbg !14389
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14390, metadata !DIExpression()) #23, !dbg !14393
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !14397
  br label %7, !dbg !14398

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14399, metadata !DIExpression()) #23, !dbg !14402
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14404
  %9 = load i8, i8* %8, align 1, !dbg !14405
  %10 = or i8 %9, -128, !dbg !14405
  store i8 %10, i8* %8, align 1, !dbg !14405
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14406, metadata !DIExpression()) #23, !dbg !14409
  tail call void @z_priq_rb_add(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !14413
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14414
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !14415
  %13 = zext i1 %12 to i32, !dbg !14415
  tail call fastcc void @update_cache(i32 noundef %13) #24, !dbg !14416
  ret void, !dbg !14417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14418 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14420, metadata !DIExpression()), !dbg !14421
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14422
  ret i1 %2, !dbg !14423
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14424 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14442, metadata !DIExpression()), !dbg !14444
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14443, metadata !DIExpression()), !dbg !14444
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14445
  br i1 %3, label %4, label %5, !dbg !14448

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1200) #26, !dbg !14449
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1200) #26, !dbg !14449
  unreachable, !dbg !14449

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14451
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14452
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #26, !dbg !14453
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !14454
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !14454
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !14456
  br i1 %10, label %11, label %13, !dbg !14457

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14458
  store i32 0, i32* %12, align 4, !dbg !14460
  br label %13, !dbg !14461

13:                                               ; preds = %11, %5
  ret void, !dbg !14462
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14463 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14465, metadata !DIExpression()), !dbg !14480
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14466, metadata !DIExpression()), !dbg !14480
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14481
  br i1 %4, label %5, label %6, !dbg !14484

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1179) #26, !dbg !14485
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1179) #26, !dbg !14485
  unreachable, !dbg !14485

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14487
  %8 = load i32, i32* %7, align 4, !dbg !14488
  %9 = add nsw i32 %8, 1, !dbg !14488
  store i32 %9, i32* %7, align 4, !dbg !14488
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !14489
  store i32 %8, i32* %10, align 8, !dbg !14490
  %11 = load i32, i32* %7, align 4, !dbg !14491
  %12 = icmp eq i32 %11, 0, !dbg !14492
  br i1 %12, label %13, label %35, !dbg !14493

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !14494
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !14494
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !14468, metadata !DIExpression()), !dbg !14494
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14494
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !14494
  %17 = load i32, i32* %16, align 4, !dbg !14494
  %18 = shl i32 %17, 2, !dbg !14494
  %19 = alloca i8, i32 %18, align 8, !dbg !14494
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !14494
  store i8* %19, i8** %20, align 4, !dbg !14494
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !14494
  %22 = alloca i8, i32 %17, align 8, !dbg !14494
  store i8* %22, i8** %21, align 4, !dbg !14494
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !14494
  store i32 -1, i32* %23, align 4, !dbg !14494
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !14495
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !14477, metadata !DIExpression()), !dbg !14496
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !14467, metadata !DIExpression()), !dbg !14480
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !14497
  br i1 %25, label %26, label %27, !dbg !14494

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !14497
  br label %35, !dbg !14498

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !14467, metadata !DIExpression()), !dbg !14480
  %29 = load i32, i32* %7, align 4, !dbg !14499
  %30 = add nsw i32 %29, 1, !dbg !14499
  store i32 %30, i32* %7, align 4, !dbg !14499
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !14501
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !14501
  store i32 %29, i32* %32, align 8, !dbg !14502
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #26, !dbg !14495
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !14477, metadata !DIExpression()), !dbg !14496
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !14467, metadata !DIExpression()), !dbg !14480
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !14497
  br i1 %34, label %26, label %27, !dbg !14494, !llvm.loop !14503

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14505
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14506
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #26, !dbg !14507
  ret void, !dbg !14508
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14509 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14511, metadata !DIExpression()), !dbg !14513
  %2 = tail call %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #26, !dbg !14514
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14521, metadata !DIExpression()) #23, !dbg !14523
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14524
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14525
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14525
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14512, metadata !DIExpression()), !dbg !14513
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14526, metadata !DIExpression()) #23, !dbg !14532
  call void @llvm.dbg.value(metadata i32 %0, metadata !14531, metadata !DIExpression()) #23, !dbg !14532
  %6 = icmp eq i32 %0, 0, !dbg !14535
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14537
  br i1 %6, label %8, label %18, !dbg !14538

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14539
  br i1 %9, label %10, label %11, !dbg !14542

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.241, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 137) #26, !dbg !14543
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.243, i32 0, i32 0)) #26, !dbg !14543
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 137) #26, !dbg !14543
  unreachable, !dbg !14543

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #26, !dbg !14545
  br i1 %12, label %18, label %13, !dbg !14547

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #26, !dbg !14548
  br i1 %14, label %18, label %15, !dbg !14550

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #26, !dbg !14551
  %17 = icmp eq i32 %16, 0, !dbg !14551
  br i1 %17, label %21, label %18, !dbg !14553

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14554
  br i1 %19, label %21, label %20, !dbg !14557

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14558
  br label %21, !dbg !14560

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14537
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14537
  ret void, !dbg !14561
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !14562 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14566, metadata !DIExpression()), !dbg !14569
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14567, metadata !DIExpression()), !dbg !14569
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14570
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !14571
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !14568, metadata !DIExpression()), !dbg !14569
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14567, metadata !DIExpression()), !dbg !14569
  ret %struct.k_thread* %4, !dbg !14572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14573 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14575, metadata !DIExpression()), !dbg !14576
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14577
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14578
  %4 = xor i1 %3, true, !dbg !14579
  ret i1 %4, !dbg !14580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14581 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14583, metadata !DIExpression()), !dbg !14584
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14585
  %3 = load i16, i16* %2, align 2, !dbg !14585
  %4 = icmp ult i16 %3, 128, !dbg !14586
  %5 = zext i1 %4 to i32, !dbg !14586
  ret i32 %5, !dbg !14587
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14588 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14594, metadata !DIExpression()), !dbg !14595
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14596
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !14597
  %4 = xor i1 %3, true, !dbg !14598
  ret i1 %4, !dbg !14599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14600 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14606, metadata !DIExpression()), !dbg !14607
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14608
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14608
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14609
  ret i1 %4, !dbg !14610
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !14611 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !14616, metadata !DIExpression()), !dbg !14617
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #26, !dbg !14618
  ret %struct.rbnode* %2, !dbg !14619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #4 !dbg !14620 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14622, metadata !DIExpression()), !dbg !14623
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14624
  ret i1 %2, !dbg !14625
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !14626 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14630, metadata !DIExpression()), !dbg !14632
  call void @llvm.dbg.value(metadata i32 %1, metadata !14631, metadata !DIExpression()), !dbg !14632
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14633
  %4 = load i8, i8* %3, align 1, !dbg !14633
  %5 = zext i8 %4 to i32, !dbg !14634
  %6 = and i32 %5, %1, !dbg !14635
  %7 = icmp ne i32 %6, 0, !dbg !14636
  ret i1 %7, !dbg !14637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.245(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14638 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14640, metadata !DIExpression()), !dbg !14642
  call void @llvm.dbg.value(metadata i32 %1, metadata !14641, metadata !DIExpression()), !dbg !14642
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.246(i32 noundef %0, i32 noundef %1) #24, !dbg !14643
  ret i1 %3, !dbg !14644
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.246(i32 noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !14645 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14647, metadata !DIExpression()), !dbg !14649
  call void @llvm.dbg.value(metadata i32 %1, metadata !14648, metadata !DIExpression()), !dbg !14649
  %3 = icmp slt i32 %0, %1, !dbg !14650
  ret i1 %3, !dbg !14651
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14652 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14654, metadata !DIExpression()), !dbg !14658
  call void @llvm.dbg.value(metadata i32 0, metadata !14655, metadata !DIExpression()), !dbg !14659
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !14660
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14662, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !14664
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !14664
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !14660
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14665
  br i1 %3, label %5, label %4, !dbg !14666

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !14667
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14667
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !14667
  unreachable, !dbg !14667

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !14664
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !14660
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14668
  call void @llvm.dbg.value(metadata i32 undef, metadata !14657, metadata !DIExpression()), !dbg !14659
  call void @llvm.dbg.value(metadata i32 undef, metadata !14655, metadata !DIExpression()), !dbg !14659
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14669
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !14674
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !14674
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14676
  br i1 %6, label %8, label %7, !dbg !14677

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !14678
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14678
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !14678
  unreachable, !dbg !14678

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14662
  call void @llvm.dbg.value(metadata i32 %9, metadata !14202, metadata !DIExpression()) #23, !dbg !14664
  call void @llvm.dbg.value(metadata i32 %9, metadata !14196, metadata !DIExpression()) #23, !dbg !14660
  call void @llvm.dbg.value(metadata i32 %9, metadata !14657, metadata !DIExpression()), !dbg !14659
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !14674
  call void @llvm.dbg.value(metadata i32 undef, metadata !14238, metadata !DIExpression()) #23, !dbg !14679
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14681, !srcloc !14244
  call void @llvm.dbg.value(metadata i32 1, metadata !14655, metadata !DIExpression()), !dbg !14659
  call void @llvm.dbg.value(metadata i32 undef, metadata !14655, metadata !DIExpression()), !dbg !14659
  ret void, !dbg !14682
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14683 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14685, metadata !DIExpression()), !dbg !14686
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14687
  br i1 %2, label %9, label %3, !dbg !14689

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !14690
  br i1 %4, label %5, label %9, !dbg !14691

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14399, metadata !DIExpression()) #23, !dbg !14692
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14695
  %7 = load i8, i8* %6, align 1, !dbg !14696
  %8 = or i8 %7, -128, !dbg !14696
  store i8 %8, i8* %6, align 1, !dbg !14696
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14406, metadata !DIExpression()) #23, !dbg !14697
  tail call void @z_priq_rb_add(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !14699
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !14700
  br label %9, !dbg !14701

9:                                                ; preds = %5, %3, %1
  ret void, !dbg !14702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14703 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14705, metadata !DIExpression()), !dbg !14706
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14707
  br i1 %2, label %6, label %3, !dbg !14708

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !14709
  %5 = xor i1 %4, true, !dbg !14708
  br label %6, !dbg !14708

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14710
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14711 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14713, metadata !DIExpression()), !dbg !14717
  call void @llvm.dbg.value(metadata i32 0, metadata !14714, metadata !DIExpression()), !dbg !14718
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !14719
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14721, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !14723
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !14723
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !14719
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14724
  br i1 %3, label %5, label %4, !dbg !14725

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !14726
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14726
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !14726
  unreachable, !dbg !14726

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !14723
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !14719
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14727
  call void @llvm.dbg.value(metadata i32 undef, metadata !14716, metadata !DIExpression()), !dbg !14718
  call void @llvm.dbg.value(metadata i32 undef, metadata !14714, metadata !DIExpression()), !dbg !14718
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !14728
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !14731
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !14731
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14733
  br i1 %6, label %8, label %7, !dbg !14734

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !14735
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14735
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !14735
  unreachable, !dbg !14735

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14721
  call void @llvm.dbg.value(metadata i32 %9, metadata !14202, metadata !DIExpression()) #23, !dbg !14723
  call void @llvm.dbg.value(metadata i32 %9, metadata !14196, metadata !DIExpression()) #23, !dbg !14719
  call void @llvm.dbg.value(metadata i32 %9, metadata !14716, metadata !DIExpression()), !dbg !14718
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !14731
  call void @llvm.dbg.value(metadata i32 undef, metadata !14238, metadata !DIExpression()) #23, !dbg !14736
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14738, !srcloc !14244
  call void @llvm.dbg.value(metadata i32 1, metadata !14714, metadata !DIExpression()), !dbg !14718
  call void @llvm.dbg.value(metadata i32 undef, metadata !14714, metadata !DIExpression()), !dbg !14718
  ret void, !dbg !14739
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14740 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14742, metadata !DIExpression()), !dbg !14744
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !14745
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14747, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !14749
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !14749
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !14745
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14750
  br i1 %3, label %5, label %4, !dbg !14751

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !14752
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14752
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !14752
  unreachable, !dbg !14752

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14747
  call void @llvm.dbg.value(metadata i32 %6, metadata !14202, metadata !DIExpression()) #23, !dbg !14749
  call void @llvm.dbg.value(metadata i32 %6, metadata !14196, metadata !DIExpression()) #23, !dbg !14745
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14753
  call void @llvm.dbg.value(metadata i32 %6, metadata !14743, metadata !DIExpression()), !dbg !14744
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !14754
  br i1 %7, label %8, label %12, !dbg !14756

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !14757
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !14757
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14760
  br i1 %9, label %11, label %10, !dbg !14761

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !14762
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14762
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !14762
  unreachable, !dbg !14762

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14224, metadata !DIExpression()) #23, !dbg !14757
  call void @llvm.dbg.value(metadata i32 %6, metadata !14238, metadata !DIExpression()) #23, !dbg !14763
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14765, !srcloc !14244
  br label %14, !dbg !14766

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.251(%struct.k_thread* noundef %0) #24, !dbg !14767
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14768
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14769
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14769
  br label %14, !dbg !14770

14:                                               ; preds = %12, %11
  ret void, !dbg !14770
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14771 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14773, metadata !DIExpression()), !dbg !14774
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14775
  %3 = load i8, i8* %2, align 1, !dbg !14775
  %4 = and i8 %3, 4, !dbg !14776
  %5 = icmp eq i8 %4, 0, !dbg !14777
  ret i1 %5, !dbg !14778
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.251(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14779 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14781, metadata !DIExpression()), !dbg !14782
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14783
  %3 = load i8, i8* %2, align 1, !dbg !14784
  %4 = and i8 %3, -5, !dbg !14784
  store i8 %4, i8* %2, align 1, !dbg !14784
  ret void, !dbg !14785
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14786 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14789, metadata !DIExpression()), !dbg !14790
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14788, metadata !DIExpression()), !dbg !14790
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !14791
  br i1 %4, label %5, label %12, !dbg !14793

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !14794
  br i1 %6, label %7, label %12, !dbg !14795

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14796, metadata !DIExpression()) #23, !dbg !14802
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14801, metadata !DIExpression()) #23, !dbg !14802
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14805, metadata !DIExpression()) #23, !dbg !14810
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !14812
  br i1 %8, label %10, label %9, !dbg !14815

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 225) #26, !dbg !14816
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !14816
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 225) #26, !dbg !14816
  unreachable, !dbg !14816

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14796, metadata !DIExpression()) #23, !dbg !14802
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #26, !dbg !14818
  br label %16, !dbg !14819

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !14820
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14229, metadata !DIExpression()) #23, !dbg !14820
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !14823
  br i1 %13, label %15, label %14, !dbg !14824

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !14825
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !14825
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !14825
  unreachable, !dbg !14825

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14224, metadata !DIExpression()) #23, !dbg !14820
  call void @llvm.dbg.value(metadata i32 %3, metadata !14238, metadata !DIExpression()) #23, !dbg !14826
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14828, !srcloc !14244
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14829
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14830 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14834, metadata !DIExpression()), !dbg !14835
  call void @llvm.dbg.value(metadata i32 %0, metadata !14836, metadata !DIExpression()), !dbg !14841
  %2 = icmp eq i32 %0, 0, !dbg !14843
  br i1 %2, label %3, label %6, !dbg !14844

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14845, !srcloc !14852
  call void @llvm.dbg.value(metadata i32 %4, metadata !14848, metadata !DIExpression()) #23, !dbg !14853
  %5 = icmp eq i32 %4, 0, !dbg !14854
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14835
  ret i1 %7, !dbg !14855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !14856 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14859
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14858, metadata !DIExpression()), !dbg !14860
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14861
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14862
  ret i1 %3, !dbg !14863
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14864 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14866, metadata !DIExpression()), !dbg !14868
  %2 = tail call i32 @arch_swap(i32 noundef %0) #26, !dbg !14869
  call void @llvm.dbg.value(metadata i32 %2, metadata !14867, metadata !DIExpression()), !dbg !14868
  ret i32 %2, !dbg !14870
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14871 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14873, metadata !DIExpression()), !dbg !14877
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !14878
  call void @llvm.dbg.value(metadata i32 0, metadata !14874, metadata !DIExpression()), !dbg !14879
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !14880
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14882, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !14884
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !14884
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !14880
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14885
  br i1 %4, label %6, label %5, !dbg !14886

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !14887
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14887
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !14887
  unreachable, !dbg !14887

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14882
  call void @llvm.dbg.value(metadata i32 %7, metadata !14202, metadata !DIExpression()) #23, !dbg !14884
  call void @llvm.dbg.value(metadata i32 %7, metadata !14196, metadata !DIExpression()) #23, !dbg !14880
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14888
  call void @llvm.dbg.value(metadata i32 %7, metadata !14876, metadata !DIExpression()), !dbg !14879
  call void @llvm.dbg.value(metadata i32 undef, metadata !14874, metadata !DIExpression()), !dbg !14879
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14889
  br i1 %8, label %9, label %13, !dbg !14893

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14382, metadata !DIExpression()) #23, !dbg !14894
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14897
  %11 = load i8, i8* %10, align 1, !dbg !14898
  %12 = and i8 %11, 127, !dbg !14898
  store i8 %12, i8* %10, align 1, !dbg !14898
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14390, metadata !DIExpression()) #23, !dbg !14899
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !14901
  br label %13, !dbg !14902

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !14903
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14904
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14905
  %16 = zext i1 %15 to i32, !dbg !14905
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !14906
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !14907
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !14907
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14909
  br i1 %17, label %19, label %18, !dbg !14910

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !14911
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14911
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !14911
  unreachable, !dbg !14911

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14224, metadata !DIExpression()) #23, !dbg !14907
  call void @llvm.dbg.value(metadata i32 %7, metadata !14238, metadata !DIExpression()) #23, !dbg !14912
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !14914, !srcloc !14244
  call void @llvm.dbg.value(metadata i32 1, metadata !14874, metadata !DIExpression()), !dbg !14879
  call void @llvm.dbg.value(metadata i32 undef, metadata !14874, metadata !DIExpression()), !dbg !14879
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14915
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14917
  br i1 %21, label %22, label %23, !dbg !14918

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14919
  br label %23, !dbg !14921

23:                                               ; preds = %22, %19
  ret void, !dbg !14922
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14923 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14925, metadata !DIExpression()), !dbg !14926
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14927
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14928
  ret i32 %3, !dbg !14929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14930 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14932, metadata !DIExpression()), !dbg !14933
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14934
  %3 = load i8, i8* %2, align 1, !dbg !14935
  %4 = or i8 %3, 16, !dbg !14935
  store i8 %4, i8* %2, align 1, !dbg !14935
  ret void, !dbg !14936
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14937 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14938, !srcloc !14205
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14938
  call void @llvm.dbg.value(metadata i32 %2, metadata !14202, metadata !DIExpression()) #23, !dbg !14940
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !14940
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !14941
  ret void, !dbg !14942
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14943 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14945, metadata !DIExpression()), !dbg !14946
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !14947
  br i1 %2, label %3, label %5, !dbg !14949

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !14950
  br label %6, !dbg !14952

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14238, metadata !DIExpression()) #23, !dbg !14953
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !14956, !srcloc !14244
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14957
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14958 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14960, metadata !DIExpression()), !dbg !14962
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !14963
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14965, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !14967
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !14967
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !14963
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14968
  br i1 %3, label %5, label %4, !dbg !14969

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !14970
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14970
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !14970
  unreachable, !dbg !14970

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14965
  call void @llvm.dbg.value(metadata i32 %6, metadata !14202, metadata !DIExpression()) #23, !dbg !14967
  call void @llvm.dbg.value(metadata i32 %6, metadata !14196, metadata !DIExpression()) #23, !dbg !14963
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14971
  call void @llvm.dbg.value(metadata i32 %6, metadata !14961, metadata !DIExpression()), !dbg !14962
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !14972
  br i1 %7, label %12, label %8, !dbg !14974

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !14975
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !14975
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14978
  br i1 %9, label %11, label %10, !dbg !14979

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !14980
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !14980
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !14980
  unreachable, !dbg !14980

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14224, metadata !DIExpression()) #23, !dbg !14975
  call void @llvm.dbg.value(metadata i32 %6, metadata !14238, metadata !DIExpression()) #23, !dbg !14981
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14983, !srcloc !14244
  br label %14, !dbg !14984

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !14985
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14986
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14987
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14987
  br label %14, !dbg !14988

14:                                               ; preds = %12, %11
  ret void, !dbg !14988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14989 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14991, metadata !DIExpression()), !dbg !14992
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14993
  %3 = load i8, i8* %2, align 1, !dbg !14993
  %4 = and i8 %3, 16, !dbg !14994
  %5 = icmp ne i8 %4, 0, !dbg !14995
  ret i1 %5, !dbg !14996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !14997 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14999, metadata !DIExpression()), !dbg !15000
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15001
  %3 = load i8, i8* %2, align 1, !dbg !15002
  %4 = and i8 %3, -17, !dbg !15002
  store i8 %4, i8* %2, align 1, !dbg !15002
  ret void, !dbg !15003
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15004 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15014, metadata !DIExpression()), !dbg !15018
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15012, metadata !DIExpression()), !dbg !15018
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15013, metadata !DIExpression()), !dbg !15018
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15019
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !15019
  br i1 %5, label %9, label %6, !dbg !15019

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !15019
  br i1 %7, label %9, label %8, !dbg !15022

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 773) #26, !dbg !15023
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 773) #26, !dbg !15023
  unreachable, !dbg !15023

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !15015, metadata !DIExpression()), !dbg !15025
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !15026
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15028, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15030
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !15030
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15026
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15031
  br i1 %11, label %13, label %12, !dbg !15032

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15033
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15033
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15033
  unreachable, !dbg !15033

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15030
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15026
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15034
  call void @llvm.dbg.value(metadata i32 undef, metadata !15017, metadata !DIExpression()), !dbg !15025
  call void @llvm.dbg.value(metadata i32 undef, metadata !15015, metadata !DIExpression()), !dbg !15025
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15035
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !15038
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !15038
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15040
  br i1 %14, label %16, label %15, !dbg !15041

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !15042
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15042
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !15042
  unreachable, !dbg !15042

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !15028
  call void @llvm.dbg.value(metadata i32 %17, metadata !14202, metadata !DIExpression()) #23, !dbg !15030
  call void @llvm.dbg.value(metadata i32 %17, metadata !14196, metadata !DIExpression()) #23, !dbg !15026
  call void @llvm.dbg.value(metadata i32 %17, metadata !15017, metadata !DIExpression()), !dbg !15025
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !15038
  call void @llvm.dbg.value(metadata i32 undef, metadata !14238, metadata !DIExpression()) #23, !dbg !15043
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !15045, !srcloc !14244
  call void @llvm.dbg.value(metadata i32 1, metadata !15015, metadata !DIExpression()), !dbg !15025
  call void @llvm.dbg.value(metadata i32 undef, metadata !15015, metadata !DIExpression()), !dbg !15025
  ret void, !dbg !15046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !15047 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15049, metadata !DIExpression()), !dbg !15050
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15051
  %3 = load i8, i8* %2, align 1, !dbg !15051
  %4 = and i8 %3, 1, !dbg !15052
  %5 = icmp ne i8 %4, 0, !dbg !15053
  ret i1 %5, !dbg !15054
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15055 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15059, metadata !DIExpression()), !dbg !15060
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15057, metadata !DIExpression()), !dbg !15060
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15058, metadata !DIExpression()), !dbg !15060
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !15061
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !15062
  ret void, !dbg !15063
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !15064 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15068, metadata !DIExpression()), !dbg !15070
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15069, metadata !DIExpression()), !dbg !15070
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !15071
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !15072
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !15073
  br i1 %3, label %24, label %4, !dbg !15075

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15076
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !15078
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !15079
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !15080, metadata !DIExpression()) #23, !dbg !15088
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15086, metadata !DIExpression()) #23, !dbg !15088
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #26, !dbg !15090
  br i1 %7, label %8, label %9, !dbg !15093

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 186) #26, !dbg !15094
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 186) #26, !dbg !15094
  unreachable, !dbg !15094

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.260(%struct._dnode* noundef nonnull %6) #26, !dbg !15096
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15087, metadata !DIExpression()) #23, !dbg !15088
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15098
  br i1 %11, label %22, label %12, !dbg !15096

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !15087, metadata !DIExpression()) #23, !dbg !15088
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15100
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15087, metadata !DIExpression()) #23, !dbg !15088
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #26, !dbg !15101
  %16 = icmp sgt i32 %15, 0, !dbg !15104
  br i1 %16, label %17, label %19, !dbg !15105

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15106
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #26, !dbg !15108
  br label %24, !dbg !15109

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #26, !dbg !15098
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15087, metadata !DIExpression()) #23, !dbg !15088
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15098
  br i1 %21, label %22, label %12, !dbg !15096, !llvm.loop !15110

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15112
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #26, !dbg !15113
  br label %24, !dbg !15114

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !15115
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15116 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15121, metadata !DIExpression()), !dbg !15122
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15120, metadata !DIExpression()), !dbg !15122
  %4 = icmp eq i64 %3, -1, !dbg !15123
  br i1 %4, label %6, label %5, !dbg !15125

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.255(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15126
  br label %6, !dbg !15128

6:                                                ; preds = %5, %2
  ret void, !dbg !15129
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.255(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15130 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15133, metadata !DIExpression()), !dbg !15134
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15132, metadata !DIExpression()), !dbg !15134
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15135
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #26, !dbg !15136
  ret void, !dbg !15137
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15138 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15140, metadata !DIExpression()), !dbg !15148
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15149
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15149
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15141, metadata !DIExpression()), !dbg !15148
  call void @llvm.dbg.value(metadata i32 0, metadata !15142, metadata !DIExpression()), !dbg !15150
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !15151
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15153, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15155
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !15155
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15151
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15156
  br i1 %5, label %7, label %6, !dbg !15157

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15158
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15158
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15158
  unreachable, !dbg !15158

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15155
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15151
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15159
  call void @llvm.dbg.value(metadata i32 undef, metadata !15144, metadata !DIExpression()), !dbg !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15142, metadata !DIExpression()), !dbg !15150
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15160
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15161
  %10 = load i8, i8* %9, align 1, !dbg !15161
  %11 = and i8 %10, 40, !dbg !15162
  %12 = icmp eq i8 %11, 0, !dbg !15162
  call void @llvm.dbg.value(metadata i1 %12, metadata !15145, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15163
  br i1 %12, label %13, label %20, !dbg !15164

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15165
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !15165
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !15165
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !15169
  br i1 %17, label %19, label %18, !dbg !15170

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15171
  br label %19, !dbg !15173

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.251(%struct.k_thread* noundef nonnull %3) #24, !dbg !15174
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15175
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15176
  br label %20, !dbg !15177

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !15178
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !15178
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15180
  br i1 %21, label %23, label %22, !dbg !15181

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !15182
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15182
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !15182
  unreachable, !dbg !15182

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15153
  call void @llvm.dbg.value(metadata i32 %24, metadata !14202, metadata !DIExpression()) #23, !dbg !15155
  call void @llvm.dbg.value(metadata i32 %24, metadata !14196, metadata !DIExpression()) #23, !dbg !15151
  call void @llvm.dbg.value(metadata i32 %24, metadata !15144, metadata !DIExpression()), !dbg !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !15178
  call void @llvm.dbg.value(metadata i32 undef, metadata !14238, metadata !DIExpression()) #23, !dbg !15183
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15185, !srcloc !14244
  call void @llvm.dbg.value(metadata i32 1, metadata !15142, metadata !DIExpression()), !dbg !15150
  call void @llvm.dbg.value(metadata i32 undef, metadata !15142, metadata !DIExpression()), !dbg !15150
  ret void, !dbg !15186
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15187 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15189, metadata !DIExpression()), !dbg !15190
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15191
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15192
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15193
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15194
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !15195
  ret void, !dbg !15196
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15197 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15201, metadata !DIExpression()), !dbg !15202
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15203
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !15203
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !15203
  br i1 %4, label %5, label %6, !dbg !15206

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.259, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 726) #26, !dbg !15207
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 726) #26, !dbg !15207
  unreachable, !dbg !15207

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !15209
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15210 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15212, metadata !DIExpression()), !dbg !15214
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15213, metadata !DIExpression()), !dbg !15214
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !15215
  br i1 %3, label %4, label %5, !dbg !15218

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.244, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1139) #26, !dbg !15219
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1139) #26, !dbg !15219
  unreachable, !dbg !15219

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15221
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !15222
  ret void, !dbg !15223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !15224 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15226, metadata !DIExpression()), !dbg !15227
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15228
  %3 = load i8, i8* %2, align 1, !dbg !15229
  %4 = and i8 %3, -3, !dbg !15229
  store i8 %4, i8* %2, align 1, !dbg !15229
  ret void, !dbg !15230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #10 !dbg !15231 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15236, metadata !DIExpression()), !dbg !15240
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15241
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15241
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15237, metadata !DIExpression()), !dbg !15240
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15242
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15242
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15239, metadata !DIExpression()), !dbg !15240
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15243
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15244
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15245
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15246
  tail call fastcc void @sys_dnode_init.258(%struct._dnode* noundef %0) #24, !dbg !15247
  ret void, !dbg !15248
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.258(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !15249 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15251, metadata !DIExpression()), !dbg !15252
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15253
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15254
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15255
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15256
  ret void, !dbg !15257
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15258 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15260, metadata !DIExpression()), !dbg !15261
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15262
  br i1 %2, label %3, label %7, !dbg !15264

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14382, metadata !DIExpression()) #23, !dbg !15265
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15268
  %5 = load i8, i8* %4, align 1, !dbg !15269
  %6 = and i8 %5, 127, !dbg !15269
  store i8 %6, i8* %4, align 1, !dbg !15269
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14390, metadata !DIExpression()) #23, !dbg !15270
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !15272
  br label %7, !dbg !15273

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15274
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15275
  %10 = zext i1 %9 to i32, !dbg !15275
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15276
  ret void, !dbg !15277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #10 !dbg !15278 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15280, metadata !DIExpression()), !dbg !15281
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15282
  %3 = load i8, i8* %2, align 1, !dbg !15283
  %4 = or i8 %3, 2, !dbg !15283
  store i8 %4, i8* %2, align 1, !dbg !15283
  ret void, !dbg !15284
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.260(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !15285 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15289, metadata !DIExpression()), !dbg !15290
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.261(%struct._dnode* noundef %0) #24, !dbg !15291
  br i1 %2, label %6, label %3, !dbg !15291

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15292
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15292
  br label %6, !dbg !15291

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15291
  ret %struct._dnode* %7, !dbg !15293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !15294 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15298, metadata !DIExpression()), !dbg !15301
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15299, metadata !DIExpression()), !dbg !15301
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15302
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15302
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15300, metadata !DIExpression()), !dbg !15301
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15303
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15304
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15305
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15306
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15307
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15308
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15309
  ret void, !dbg !15310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !15311 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15315, metadata !DIExpression()), !dbg !15317
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15316, metadata !DIExpression()), !dbg !15317
  %3 = icmp eq %struct._dnode* %1, null, !dbg !15318
  br i1 %3, label %6, label %4, !dbg !15319

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !15320
  br label %6, !dbg !15319

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !15319
  ret %struct._dnode* %7, !dbg !15321
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !15322 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15326, metadata !DIExpression()), !dbg !15329
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15327, metadata !DIExpression()), !dbg !15329
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15330
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15330
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15328, metadata !DIExpression()), !dbg !15329
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15331
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15332
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15333
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !15334
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15335
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15336
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15337
  ret void, !dbg !15338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !15339 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15341, metadata !DIExpression()), !dbg !15343
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15342, metadata !DIExpression()), !dbg !15343
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15344
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15344
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !15345
  br i1 %5, label %9, label %6, !dbg !15346

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15347
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !15347
  br label %9, !dbg !15346

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !15346
  ret %struct._dnode* %10, !dbg !15348
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.261(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !15349 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15353, metadata !DIExpression()), !dbg !15354
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15355
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15355
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !15356
  ret i1 %4, !dbg !15357
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15358 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15360, metadata !DIExpression()), !dbg !15364
  call void @llvm.dbg.value(metadata i32 0, metadata !15361, metadata !DIExpression()), !dbg !15365
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !15366
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15368, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15370
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !15370
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15366
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15371
  br i1 %3, label %5, label %4, !dbg !15372

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15373
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15373
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15373
  unreachable, !dbg !15373

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15370
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15366
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15374
  call void @llvm.dbg.value(metadata i32 undef, metadata !15363, metadata !DIExpression()), !dbg !15365
  call void @llvm.dbg.value(metadata i32 undef, metadata !15361, metadata !DIExpression()), !dbg !15365
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15375
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !15378
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !15378
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15380
  br i1 %6, label %8, label %7, !dbg !15381

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !15382
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15382
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !15382
  unreachable, !dbg !15382

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15368
  call void @llvm.dbg.value(metadata i32 %9, metadata !14202, metadata !DIExpression()) #23, !dbg !15370
  call void @llvm.dbg.value(metadata i32 %9, metadata !14196, metadata !DIExpression()) #23, !dbg !15366
  call void @llvm.dbg.value(metadata i32 %9, metadata !15363, metadata !DIExpression()), !dbg !15365
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !15378
  call void @llvm.dbg.value(metadata i32 undef, metadata !14238, metadata !DIExpression()) #23, !dbg !15383
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15385, !srcloc !14244
  call void @llvm.dbg.value(metadata i32 1, metadata !15361, metadata !DIExpression()), !dbg !15365
  call void @llvm.dbg.value(metadata i32 undef, metadata !15361, metadata !DIExpression()), !dbg !15365
  ret void, !dbg !15386
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15387 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15393, metadata !DIExpression()), !dbg !15398
  call void @llvm.dbg.value(metadata i32 %0, metadata !15391, metadata !DIExpression()), !dbg !15398
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15392, metadata !DIExpression()), !dbg !15398
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15399
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15400
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15401
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15402
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15403
  call void @llvm.dbg.value(metadata i32 %6, metadata !15394, metadata !DIExpression()), !dbg !15398
  call void @llvm.dbg.value(metadata i32 0, metadata !15395, metadata !DIExpression()), !dbg !15404
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !15405
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15407, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15409
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !15409
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15405
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15410
  br i1 %8, label %10, label %9, !dbg !15411

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15412
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15412
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15412
  unreachable, !dbg !15412

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15409
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15405
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15413
  call void @llvm.dbg.value(metadata i32 undef, metadata !15397, metadata !DIExpression()), !dbg !15404
  call void @llvm.dbg.value(metadata i32 undef, metadata !15395, metadata !DIExpression()), !dbg !15404
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15414
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15418
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15419
  br i1 %13, label %14, label %15, !dbg !15420

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15421
  br label %15, !dbg !15423

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !15424
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !15424
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15426
  br i1 %16, label %18, label %17, !dbg !15427

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !15428
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15428
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !15428
  unreachable, !dbg !15428

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15407
  call void @llvm.dbg.value(metadata i32 %19, metadata !14202, metadata !DIExpression()) #23, !dbg !15409
  call void @llvm.dbg.value(metadata i32 %19, metadata !14196, metadata !DIExpression()) #23, !dbg !15405
  call void @llvm.dbg.value(metadata i32 %19, metadata !15397, metadata !DIExpression()), !dbg !15404
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !15424
  call void @llvm.dbg.value(metadata i32 undef, metadata !14238, metadata !DIExpression()) #23, !dbg !15429
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15431, !srcloc !14244
  call void @llvm.dbg.value(metadata i32 1, metadata !15395, metadata !DIExpression()), !dbg !15404
  call void @llvm.dbg.value(metadata i32 undef, metadata !15395, metadata !DIExpression()), !dbg !15404
  ret i32 %6, !dbg !15432
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15433 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15438, metadata !DIExpression()), !dbg !15441
  call void @llvm.dbg.value(metadata i64 undef, metadata !15440, metadata !DIExpression()), !dbg !15441
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15437, metadata !DIExpression()), !dbg !15441
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15439, metadata !DIExpression()), !dbg !15441
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15442
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15443
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15444
  br i1 %6, label %7, label %8, !dbg !15447

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.264, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 846) #26, !dbg !15448
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 846) #26, !dbg !15448
  unreachable, !dbg !15448

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !15450
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15452, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !15454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15450
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15455
  br i1 %10, label %12, label %11, !dbg !15456

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15457
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15457
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15457
  unreachable, !dbg !15457

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15454
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15450
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15458
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15459
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15460
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14805, metadata !DIExpression()) #23, !dbg !15461
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #26, !dbg !15463
  br i1 %14, label %16, label %15, !dbg !15464

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 225) #26, !dbg !15465
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef %0) #26, !dbg !15465
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 225) #26, !dbg !15465
  unreachable, !dbg !15465

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14796, metadata !DIExpression()) #23, !dbg !15466
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14801, metadata !DIExpression()) #23, !dbg !15466
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14805, metadata !DIExpression()) #23, !dbg !15468
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15470
  br i1 %17, label %19, label %18, !dbg !15471

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 225) #26, !dbg !15472
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15472
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 225) #26, !dbg !15472
  unreachable, !dbg !15472

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14796, metadata !DIExpression()) #23, !dbg !15466
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #26, !dbg !15473
  ret i32 %21, !dbg !15474
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15475 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15479, metadata !DIExpression()), !dbg !15484
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15480, metadata !DIExpression()), !dbg !15484
  call void @llvm.dbg.value(metadata i32 0, metadata !15481, metadata !DIExpression()), !dbg !15485
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !15486
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15488, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15490
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !15490
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15486
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15491
  br i1 %3, label %5, label %4, !dbg !15492

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15493
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15493
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15493
  unreachable, !dbg !15493

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15490
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15486
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15494
  call void @llvm.dbg.value(metadata i32 undef, metadata !15483, metadata !DIExpression()), !dbg !15485
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15480, metadata !DIExpression()), !dbg !15484
  call void @llvm.dbg.value(metadata i32 undef, metadata !15481, metadata !DIExpression()), !dbg !15485
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15495
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15480, metadata !DIExpression()), !dbg !15484
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15498
  br i1 %8, label %10, label %9, !dbg !15500

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15501
  br label %10, !dbg !15503

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !15504
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !15504
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15506
  br i1 %11, label %13, label %12, !dbg !15507

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !15508
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15508
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !15508
  unreachable, !dbg !15508

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15488
  call void @llvm.dbg.value(metadata i32 %14, metadata !14202, metadata !DIExpression()) #23, !dbg !15490
  call void @llvm.dbg.value(metadata i32 %14, metadata !14196, metadata !DIExpression()) #23, !dbg !15486
  call void @llvm.dbg.value(metadata i32 %14, metadata !15483, metadata !DIExpression()), !dbg !15485
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !15504
  call void @llvm.dbg.value(metadata i32 undef, metadata !14238, metadata !DIExpression()) #23, !dbg !15509
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15511, !srcloc !14244
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15480, metadata !DIExpression()), !dbg !15484
  call void @llvm.dbg.value(metadata i32 undef, metadata !15481, metadata !DIExpression()), !dbg !15485
  ret %struct.k_thread* %7, !dbg !15512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !15513 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15517, metadata !DIExpression()), !dbg !15520
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15518, metadata !DIExpression()), !dbg !15520
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.260(%struct._dnode* noundef %0) #24, !dbg !15521
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15519, metadata !DIExpression()), !dbg !15520
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15518, metadata !DIExpression()), !dbg !15520
  ret %struct.k_thread* %3, !dbg !15522
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15523 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15525, metadata !DIExpression()), !dbg !15530
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15526, metadata !DIExpression()), !dbg !15530
  call void @llvm.dbg.value(metadata i32 0, metadata !15527, metadata !DIExpression()), !dbg !15531
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !15532
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15534, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15536
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !15536
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15532
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15537
  br i1 %3, label %5, label %4, !dbg !15538

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15539
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15539
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15539
  unreachable, !dbg !15539

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15536
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15532
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15540
  call void @llvm.dbg.value(metadata i32 undef, metadata !15529, metadata !DIExpression()), !dbg !15531
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15526, metadata !DIExpression()), !dbg !15530
  call void @llvm.dbg.value(metadata i32 undef, metadata !15527, metadata !DIExpression()), !dbg !15531
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15541
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15526, metadata !DIExpression()), !dbg !15530
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15544
  br i1 %8, label %11, label %9, !dbg !15546

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15547
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15549
  br label %11, !dbg !15550

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !15551
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !15551
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15553
  br i1 %12, label %14, label %13, !dbg !15554

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !15555
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15555
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !15555
  unreachable, !dbg !15555

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15534
  call void @llvm.dbg.value(metadata i32 %15, metadata !14202, metadata !DIExpression()) #23, !dbg !15536
  call void @llvm.dbg.value(metadata i32 %15, metadata !14196, metadata !DIExpression()) #23, !dbg !15532
  call void @llvm.dbg.value(metadata i32 %15, metadata !15529, metadata !DIExpression()), !dbg !15531
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !15551
  call void @llvm.dbg.value(metadata i32 undef, metadata !14238, metadata !DIExpression()) #23, !dbg !15556
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15558, !srcloc !14244
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15526, metadata !DIExpression()), !dbg !15530
  call void @llvm.dbg.value(metadata i32 undef, metadata !15527, metadata !DIExpression()), !dbg !15531
  ret %struct.k_thread* %7, !dbg !15559
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15560 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15562, metadata !DIExpression()), !dbg !15563
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15360, metadata !DIExpression()) #23, !dbg !15564
  call void @llvm.dbg.value(metadata i32 0, metadata !15361, metadata !DIExpression()) #23, !dbg !15566
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !15567
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15569, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15571
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !15571
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15567
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15572
  br i1 %3, label %5, label %4, !dbg !15573

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15574
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15574
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15574
  unreachable, !dbg !15574

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15571
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15567
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15575
  call void @llvm.dbg.value(metadata i32 undef, metadata !15363, metadata !DIExpression()) #23, !dbg !15566
  call void @llvm.dbg.value(metadata i32 undef, metadata !15361, metadata !DIExpression()) #23, !dbg !15566
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15576
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !15577
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !15577
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15579
  br i1 %6, label %8, label %7, !dbg !15580

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !15581
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15581
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !15581
  unreachable, !dbg !15581

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15569
  call void @llvm.dbg.value(metadata i32 %9, metadata !14202, metadata !DIExpression()) #23, !dbg !15571
  call void @llvm.dbg.value(metadata i32 %9, metadata !14196, metadata !DIExpression()) #23, !dbg !15567
  call void @llvm.dbg.value(metadata i32 %9, metadata !15363, metadata !DIExpression()) #23, !dbg !15566
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !15577
  call void @llvm.dbg.value(metadata i32 undef, metadata !14238, metadata !DIExpression()) #23, !dbg !15582
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15584, !srcloc !14244
  call void @llvm.dbg.value(metadata i32 1, metadata !15361, metadata !DIExpression()) #23, !dbg !15566
  call void @llvm.dbg.value(metadata i32 undef, metadata !15361, metadata !DIExpression()) #23, !dbg !15566
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15585
  ret void, !dbg !15586
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15587 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15589, metadata !DIExpression()), !dbg !15595
  call void @llvm.dbg.value(metadata i32 %1, metadata !15590, metadata !DIExpression()), !dbg !15595
  call void @llvm.dbg.value(metadata i8 0, metadata !15591, metadata !DIExpression()), !dbg !15595
  call void @llvm.dbg.value(metadata i32 0, metadata !15592, metadata !DIExpression()), !dbg !15596
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !15597
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15599, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15601
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !15601
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15597
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15602
  br i1 %4, label %6, label %5, !dbg !15603

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15604
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15604
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15604
  unreachable, !dbg !15604

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15601
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15597
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15605
  call void @llvm.dbg.value(metadata i32 undef, metadata !15594, metadata !DIExpression()), !dbg !15596
  call void @llvm.dbg.value(metadata i8 poison, metadata !15591, metadata !DIExpression()), !dbg !15595
  call void @llvm.dbg.value(metadata i32 undef, metadata !15592, metadata !DIExpression()), !dbg !15596
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15606
  call void @llvm.dbg.value(metadata i1 %8, metadata !15591, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15595
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %10 = bitcast %union.anon.2* %9 to i8*
  %11 = trunc i32 %1 to i8
  br i1 %8, label %12, label %17, !dbg !15609

12:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14382, metadata !DIExpression()) #23, !dbg !15610
  %13 = load i8, i8* %7, align 1, !dbg !15616
  %14 = and i8 %13, 127, !dbg !15616
  store i8 %14, i8* %7, align 1, !dbg !15616
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14390, metadata !DIExpression()) #23, !dbg !15617
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !15619
  store i8 %11, i8* %10, align 2, !dbg !15620
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14399, metadata !DIExpression()) #23, !dbg !15621
  %15 = load i8, i8* %7, align 1, !dbg !15623
  %16 = or i8 %15, -128, !dbg !15623
  store i8 %16, i8* %7, align 1, !dbg !15623
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14406, metadata !DIExpression()) #23, !dbg !15624
  tail call void @z_priq_rb_add(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %0) #26, !dbg !15626
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15627
  br label %18, !dbg !15628

17:                                               ; preds = %6
  store i8 %11, i8* %10, align 2, !dbg !15629
  br label %18

18:                                               ; preds = %12, %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !15631
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !15631
  %19 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15633
  br i1 %19, label %21, label %20, !dbg !15634

20:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !15635
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15635
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !15635
  unreachable, !dbg !15635

21:                                               ; preds = %18
  %22 = extractvalue { i32, i32 } %3, 0, !dbg !15599
  call void @llvm.dbg.value(metadata i32 %22, metadata !14202, metadata !DIExpression()) #23, !dbg !15601
  call void @llvm.dbg.value(metadata i32 %22, metadata !14196, metadata !DIExpression()) #23, !dbg !15597
  call void @llvm.dbg.value(metadata i32 %22, metadata !15594, metadata !DIExpression()), !dbg !15596
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !15631
  call void @llvm.dbg.value(metadata i32 undef, metadata !14238, metadata !DIExpression()) #23, !dbg !15636
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %22) #23, !dbg !15638, !srcloc !14244
  call void @llvm.dbg.value(metadata i8 poison, metadata !15591, metadata !DIExpression()), !dbg !15595
  call void @llvm.dbg.value(metadata i32 undef, metadata !15592, metadata !DIExpression()), !dbg !15596
  ret i1 %8, !dbg !15639
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15640 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15644, metadata !DIExpression()), !dbg !15647
  call void @llvm.dbg.value(metadata i32 %1, metadata !15645, metadata !DIExpression()), !dbg !15647
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15648
  call void @llvm.dbg.value(metadata i1 %3, metadata !15646, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15647
  br i1 %3, label %4, label %12, !dbg !15649

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15651
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15652
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15652
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15652
  %9 = load i8, i8* %8, align 1, !dbg !15652
  %10 = icmp eq i8 %9, 0, !dbg !15653
  br i1 %10, label %11, label %12, !dbg !15654

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15655
  br label %12, !dbg !15657

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15658
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15659 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15661, metadata !DIExpression()), !dbg !15664
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !15665
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15667, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15669
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !15669
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15665
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15670
  br i1 %2, label %4, label %3, !dbg !15671

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15672
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15672
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15672
  unreachable, !dbg !15672

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15669
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15665
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15673
  call void @llvm.dbg.value(metadata i32 undef, metadata !15663, metadata !DIExpression()), !dbg !15664
  call void @llvm.dbg.value(metadata i32 undef, metadata !15661, metadata !DIExpression()), !dbg !15664
  tail call fastcc void @z_sched_lock() #24, !dbg !15674
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !15677
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !15677
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15679
  br i1 %5, label %7, label %6, !dbg !15680

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !15681
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15681
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !15681
  unreachable, !dbg !15681

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15667
  call void @llvm.dbg.value(metadata i32 %8, metadata !14202, metadata !DIExpression()) #23, !dbg !15669
  call void @llvm.dbg.value(metadata i32 %8, metadata !14196, metadata !DIExpression()) #23, !dbg !15665
  call void @llvm.dbg.value(metadata i32 %8, metadata !15663, metadata !DIExpression()), !dbg !15664
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !15677
  call void @llvm.dbg.value(metadata i32 undef, metadata !14238, metadata !DIExpression()) #23, !dbg !15682
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15684, !srcloc !14244
  call void @llvm.dbg.value(metadata i32 1, metadata !15661, metadata !DIExpression()), !dbg !15664
  call void @llvm.dbg.value(metadata i32 undef, metadata !15661, metadata !DIExpression()), !dbg !15664
  ret void, !dbg !15685
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15686 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15687, !srcloc !14852
  call void @llvm.dbg.value(metadata i32 %1, metadata !14848, metadata !DIExpression()) #23, !dbg !15692
  %2 = icmp eq i32 %1, 0, !dbg !15693
  br i1 %2, label %4, label %3, !dbg !15694

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.272, i32 0, i32 0), i32 noundef 253) #26, !dbg !15695
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.243, i32 0, i32 0)) #26, !dbg !15695
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.272, i32 0, i32 0), i32 noundef 253) #26, !dbg !15695
  unreachable, !dbg !15695

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15697
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15697
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15697
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15697
  %9 = load i8, i8* %8, align 1, !dbg !15697
  %10 = icmp eq i8 %9, 1, !dbg !15697
  br i1 %10, label %11, label %12, !dbg !15700

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.273, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.272, i32 0, i32 0), i32 noundef 254) #26, !dbg !15701
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.243, i32 0, i32 0)) #26, !dbg !15701
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.272, i32 0, i32 0), i32 noundef 254) #26, !dbg !15701
  unreachable, !dbg !15701

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15703
  store i8 %13, i8* %8, align 1, !dbg !15703
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15704, !srcloc !15706
  ret void, !dbg !15707
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15708 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15710, metadata !DIExpression()), !dbg !15713
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !15714
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15716, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15718
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !15718
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15714
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15719
  br i1 %2, label %4, label %3, !dbg !15720

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15721
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15721
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15721
  unreachable, !dbg !15721

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15718
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15714
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15722
  call void @llvm.dbg.value(metadata i32 undef, metadata !15712, metadata !DIExpression()), !dbg !15713
  call void @llvm.dbg.value(metadata i32 undef, metadata !15710, metadata !DIExpression()), !dbg !15713
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15723
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15723
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15723
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15723
  %9 = load i8, i8* %8, align 1, !dbg !15723
  %10 = icmp eq i8 %9, 0, !dbg !15723
  br i1 %10, label %11, label %12, !dbg !15728

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.276, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 999) #26, !dbg !15729
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.243, i32 0, i32 0)) #26, !dbg !15729
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 999) #26, !dbg !15729
  unreachable, !dbg !15729

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15731, !srcloc !14852
  call void @llvm.dbg.value(metadata i32 %13, metadata !14848, metadata !DIExpression()) #23, !dbg !15736
  %14 = icmp eq i32 %13, 0, !dbg !15737
  br i1 %14, label %16, label %15, !dbg !15738

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1000) #26, !dbg !15739
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.243, i32 0, i32 0)) #26, !dbg !15739
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1000) #26, !dbg !15739
  unreachable, !dbg !15739

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15741
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15742
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15742
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15742
  %21 = load i8, i8* %20, align 1, !dbg !15743
  %22 = add i8 %21, 1, !dbg !15743
  store i8 %22, i8* %20, align 1, !dbg !15743
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15744
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !15745
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !15745
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15747
  br i1 %23, label %25, label %24, !dbg !15748

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !15749
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15749
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !15749
  unreachable, !dbg !15749

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15716
  call void @llvm.dbg.value(metadata i32 %26, metadata !14202, metadata !DIExpression()) #23, !dbg !15718
  call void @llvm.dbg.value(metadata i32 %26, metadata !14196, metadata !DIExpression()) #23, !dbg !15714
  call void @llvm.dbg.value(metadata i32 %26, metadata !15712, metadata !DIExpression()), !dbg !15713
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !15745
  call void @llvm.dbg.value(metadata i32 undef, metadata !14238, metadata !DIExpression()) #23, !dbg !15750
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15752, !srcloc !14244
  call void @llvm.dbg.value(metadata i32 1, metadata !15710, metadata !DIExpression()), !dbg !15713
  call void @llvm.dbg.value(metadata i32 undef, metadata !15710, metadata !DIExpression()), !dbg !15713
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15753
  ret void, !dbg !15754
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15755 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15756
  ret %struct.k_thread* %1, !dbg !15757
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) #8 !dbg !15758 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15760, metadata !DIExpression()), !dbg !15765
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15761, metadata !DIExpression()), !dbg !15765
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15766
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15762, metadata !DIExpression()), !dbg !15765
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15767
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15763, metadata !DIExpression()), !dbg !15765
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !15768
  call void @llvm.dbg.value(metadata i32 %5, metadata !15764, metadata !DIExpression()), !dbg !15765
  %6 = icmp sgt i32 %5, 0, !dbg !15769
  br i1 %6, label %17, label %7, !dbg !15771

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15772
  br i1 %8, label %17, label %9, !dbg !15774

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15775
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15775
  %12 = load i32, i32* %11, align 8, !dbg !15775
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15777
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15777
  %15 = load i32, i32* %14, align 8, !dbg !15777
  %16 = icmp ult i32 %12, %15, !dbg !15778
  br label %17, !dbg !15779

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15780
  ret i1 %18, !dbg !15781
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #17 !dbg !15782 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15792, metadata !DIExpression()), !dbg !15796
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15797
  %3 = load i32, i32* %2, align 4, !dbg !15797
  %4 = icmp eq i32 %3, 0, !dbg !15799
  br i1 %4, label %10, label %5, !dbg !15800

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15793, metadata !DIExpression()), !dbg !15796
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15801, !range !7222
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15802
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15794, metadata !DIExpression()), !dbg !15796
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.260(%struct._dnode* noundef %7) #24, !dbg !15803
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15795, metadata !DIExpression()), !dbg !15796
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15793, metadata !DIExpression()), !dbg !15796
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15796
  ret %struct.k_thread* %11, !dbg !15804
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15805 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15809, metadata !DIExpression()), !dbg !15812
  call void @llvm.dbg.value(metadata i32 0, metadata !15810, metadata !DIExpression()), !dbg !15812
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.277(%struct._wait_q_t* noundef %0) #24, !dbg !15813
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15811, metadata !DIExpression()), !dbg !15812
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15814
  br i1 %3, label %8, label %4, !dbg !15815

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15816
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15818
  call void @llvm.dbg.value(metadata i32 1, metadata !15810, metadata !DIExpression()), !dbg !15812
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.277(%struct._wait_q_t* noundef %0) #24, !dbg !15813
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15811, metadata !DIExpression()), !dbg !15812
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15814
  br i1 %7, label %8, label %4, !dbg !15815, !llvm.loop !15819

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15812
  ret i32 %9, !dbg !15821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.277(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !15822 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15824, metadata !DIExpression()), !dbg !15825
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15826
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.260(%struct._dnode* noundef %2) #24, !dbg !15827
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15828
  ret %struct.k_thread* %4, !dbg !15829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !15830 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15839, metadata !DIExpression()), !dbg !15840
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, i32 0, i32 0, !dbg !15841
  store %struct.rbnode* null, %struct.rbnode** %2, align 4, !dbg !15841
  %3 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, i32 0, i32 1, !dbg !15841
  store i1 (%struct.rbnode*, %struct.rbnode*)* @z_priq_rb_lessthan, i1 (%struct.rbnode*, %struct.rbnode*)** %3, align 4, !dbg !15841
  %4 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, i32 0, i32 2, !dbg !15841
  store i32 0, i32* %4, align 4, !dbg !15841
  %5 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, i32 1, !dbg !15841
  store i32 0, i32* %5, align 4, !dbg !15841
  ret void, !dbg !15842
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15843 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !15844
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !15845
  ret void, !dbg !15846
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !15847 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15852, metadata !DIExpression()), !dbg !15853
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15854
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15854
  %4 = load i8, i8* %3, align 2, !dbg !15854
  %5 = sext i8 %4 to i32, !dbg !15855
  ret i32 %5, !dbg !15856
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15857 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15861, metadata !DIExpression()), !dbg !15864
  call void @llvm.dbg.value(metadata i32 %1, metadata !15862, metadata !DIExpression()), !dbg !15864
  %3 = add i32 %1, 29, !dbg !15865
  %4 = icmp ult i32 %3, 69, !dbg !15865
  br i1 %4, label %6, label %5, !dbg !15865

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.282, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1331) #26, !dbg !15869
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.283, i32 0, i32 0), i32 noundef %1, i32 noundef 39, i32 noundef -29) #26, !dbg !15869
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1331) #26, !dbg !15869
  unreachable, !dbg !15869

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15871, !srcloc !14852
  call void @llvm.dbg.value(metadata i32 %7, metadata !14848, metadata !DIExpression()) #23, !dbg !15876
  %8 = icmp eq i32 %7, 0, !dbg !15877
  br i1 %8, label %10, label %9, !dbg !15878

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1332) #26, !dbg !15879
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.243, i32 0, i32 0)) #26, !dbg !15879
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1332) #26, !dbg !15879
  unreachable, !dbg !15879

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15863, metadata !DIExpression()), !dbg !15864
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15881
  ret void, !dbg !15882
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15883 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !15884
  br i1 %1, label %8, label %2, !dbg !15885

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #26, !dbg !15886
  br i1 %3, label %8, label %4, !dbg !15887

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15888
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !15889
  %7 = xor i1 %6, true, !dbg !15887
  br label %8, !dbg !15887

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15890
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !15891 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15892, !range !4091
  %2 = icmp eq i8 %1, 0, !dbg !15892
  ret i1 %2, !dbg !15893
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15894 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15897, !srcloc !14852
  call void @llvm.dbg.value(metadata i32 %1, metadata !14848, metadata !DIExpression()) #23, !dbg !15902
  %2 = icmp eq i32 %1, 0, !dbg !15903
  br i1 %2, label %4, label %3, !dbg !15904

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1392) #26, !dbg !15905
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.243, i32 0, i32 0)) #26, !dbg !15905
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1392) #26, !dbg !15905
  unreachable, !dbg !15905

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !15907
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15909, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15911
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !15911
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15907
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15912
  br i1 %6, label %8, label %7, !dbg !15913

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15914
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15914
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !15914
  unreachable, !dbg !15914

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !15911
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !15907
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15915
  call void @llvm.dbg.value(metadata i32 undef, metadata !15896, metadata !DIExpression()), !dbg !15916
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15917
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14382, metadata !DIExpression()) #23, !dbg !15920
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15922
  %11 = load i8, i8* %10, align 1, !dbg !15923
  %12 = and i8 %11, 127, !dbg !15923
  store i8 %12, i8* %10, align 1, !dbg !15923
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14390, metadata !DIExpression()) #23, !dbg !15924
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %9) #26, !dbg !15926
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15927
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14399, metadata !DIExpression()) #23, !dbg !15928
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15930
  %15 = load i8, i8* %14, align 1, !dbg !15931
  %16 = or i8 %15, -128, !dbg !15931
  store i8 %16, i8* %14, align 1, !dbg !15931
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14406, metadata !DIExpression()) #23, !dbg !15932
  tail call void @z_priq_rb_add(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef %13) #26, !dbg !15934
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15935
  call void @llvm.dbg.value(metadata i32 undef, metadata !14796, metadata !DIExpression()) #23, !dbg !15936
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14801, metadata !DIExpression()) #23, !dbg !15936
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14805, metadata !DIExpression()) #23, !dbg !15938
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15940
  br i1 %17, label %19, label %18, !dbg !15941

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 225) #26, !dbg !15942
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !15942
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 225) #26, !dbg !15942
  unreachable, !dbg !15942

19:                                               ; preds = %8
  %20 = extractvalue { i32, i32 } %5, 0, !dbg !15909
  call void @llvm.dbg.value(metadata i32 %20, metadata !14202, metadata !DIExpression()) #23, !dbg !15911
  call void @llvm.dbg.value(metadata i32 %20, metadata !14196, metadata !DIExpression()) #23, !dbg !15907
  call void @llvm.dbg.value(metadata i32 %20, metadata !15896, metadata !DIExpression()), !dbg !15916
  call void @llvm.dbg.value(metadata i32 undef, metadata !14796, metadata !DIExpression()) #23, !dbg !15936
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #26, !dbg !15943
  ret void, !dbg !15944
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15945 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15949, metadata !DIExpression()), !dbg !15952
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15953, !srcloc !14852
  call void @llvm.dbg.value(metadata i32 %3, metadata !14848, metadata !DIExpression()) #23, !dbg !15958
  %4 = icmp eq i32 %3, 0, !dbg !15959
  br i1 %4, label %6, label %5, !dbg !15960

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1463) #26, !dbg !15961
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.243, i32 0, i32 0)) #26, !dbg !15961
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1463) #26, !dbg !15961
  unreachable, !dbg !15961

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !15963
  br i1 %7, label %8, label %10, !dbg !15965

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15966
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !15968
  br label %15, !dbg !15969

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !15950, metadata !DIExpression()), !dbg !15952
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !15970
  %12 = sext i32 %11 to i64, !dbg !15970
  call void @llvm.dbg.value(metadata i64 %12, metadata !15950, metadata !DIExpression()), !dbg !15952
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64.286(i64 noundef %12) #24, !dbg !15971
  %14 = trunc i64 %13 to i32, !dbg !15971
  call void @llvm.dbg.value(metadata i32 %14, metadata !15951, metadata !DIExpression()), !dbg !15952
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !15952
  ret i32 %16, !dbg !15972
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15973 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15977, metadata !DIExpression()), !dbg !15978
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15979, !srcloc !15981
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !15982
  ret void, !dbg !15983
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15984 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15988, metadata !DIExpression()), !dbg !15992
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15993, !srcloc !14852
  call void @llvm.dbg.value(metadata i32 %2, metadata !14848, metadata !DIExpression()) #23, !dbg !15998
  %3 = icmp eq i32 %2, 0, !dbg !15999
  br i1 %3, label %5, label %4, !dbg !16000

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1420) #26, !dbg !16001
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.243, i32 0, i32 0)) #26, !dbg !16001
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1420) #26, !dbg !16001
  unreachable, !dbg !16001

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !16003
  br i1 %6, label %7, label %8, !dbg !16005

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !16006
  br label %43, !dbg !16008

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !15990, metadata !DIExpression()), !dbg !15992
  %9 = icmp sgt i64 %0, -3, !dbg !16009
  br i1 %9, label %10, label %14, !dbg !16011

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !16012
  %12 = trunc i64 %0 to i32, !dbg !16014
  %13 = add i32 %11, %12, !dbg !16014
  call void @llvm.dbg.value(metadata i32 %13, metadata !15989, metadata !DIExpression()), !dbg !15992
  br label %17, !dbg !16015

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !16016
  %16 = sub i32 -2, %15, !dbg !16016
  call void @llvm.dbg.value(metadata i32 %16, metadata !15989, metadata !DIExpression()), !dbg !15992
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !16018
  call void @llvm.dbg.value(metadata i32 %18, metadata !15989, metadata !DIExpression()), !dbg !15992
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !16019
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16021, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !16023
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !16023
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !16019
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16024
  br i1 %20, label %22, label %21, !dbg !16025

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !16026
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16026
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !16026
  unreachable, !dbg !16026

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !16023
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !16019
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16027
  call void @llvm.dbg.value(metadata i32 undef, metadata !15991, metadata !DIExpression()), !dbg !15992
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16028
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !16029
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !16030
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16031
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !16032
  tail call fastcc void @z_add_thread_timeout.255(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !16032
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16033
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !16034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14796, metadata !DIExpression()) #23, !dbg !16035
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14801, metadata !DIExpression()) #23, !dbg !16035
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14805, metadata !DIExpression()) #23, !dbg !16037
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16039
  br i1 %27, label %29, label %28, !dbg !16040

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 225) #26, !dbg !16041
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16041
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 225) #26, !dbg !16041
  unreachable, !dbg !16041

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !16021
  call void @llvm.dbg.value(metadata i32 %30, metadata !14202, metadata !DIExpression()) #23, !dbg !16023
  call void @llvm.dbg.value(metadata i32 %30, metadata !14196, metadata !DIExpression()) #23, !dbg !16019
  call void @llvm.dbg.value(metadata i32 %30, metadata !15991, metadata !DIExpression()), !dbg !15992
  call void @llvm.dbg.value(metadata i32 undef, metadata !14796, metadata !DIExpression()) #23, !dbg !16035
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #26, !dbg !16042
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16043
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !16043
  br i1 %33, label %34, label %35, !dbg !16046

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.287, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1448) #26, !dbg !16047
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.243, i32 0, i32 0)) #26, !dbg !16047
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1448) #26, !dbg !16047
  unreachable, !dbg !16047

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !16049
  %37 = tail call i32 @sys_clock_tick_get_32() #26, !dbg !16050
  %38 = zext i32 %37 to i64, !dbg !16050
  %39 = sub nsw i64 %36, %38, !dbg !16051
  call void @llvm.dbg.value(metadata i64 %39, metadata !15988, metadata !DIExpression()), !dbg !15992
  %40 = icmp sgt i64 %39, 0, !dbg !16052
  %41 = select i1 %40, i64 %39, i64 0, !dbg !16052
  %42 = trunc i64 %41 to i32, !dbg !16052
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !15992
  ret i32 %44, !dbg !16053
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64.286(i64 noundef %0) unnamed_addr #4 !dbg !16054 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16056, metadata !DIExpression()), !dbg !16057
  call void @llvm.dbg.value(metadata i64 %0, metadata !14250, metadata !DIExpression()), !dbg !16058
  call void @llvm.dbg.value(metadata i32 10000, metadata !14253, metadata !DIExpression()), !dbg !16058
  call void @llvm.dbg.value(metadata i32 1000, metadata !14254, metadata !DIExpression()), !dbg !16058
  call void @llvm.dbg.value(metadata i8 1, metadata !14255, metadata !DIExpression()), !dbg !16058
  call void @llvm.dbg.value(metadata i1 false, metadata !14256, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16058
  call void @llvm.dbg.value(metadata i1 false, metadata !14257, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16058
  call void @llvm.dbg.value(metadata i8 0, metadata !14258, metadata !DIExpression()), !dbg !16058
  call void @llvm.dbg.value(metadata i1 false, metadata !14259, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16058
  call void @llvm.dbg.value(metadata i1 true, metadata !14260, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16058
  call void @llvm.dbg.value(metadata i64 0, metadata !14261, metadata !DIExpression()), !dbg !16058
  call void @llvm.dbg.value(metadata i64 0, metadata !14261, metadata !DIExpression()), !dbg !16058
  call void @llvm.dbg.value(metadata i64 %0, metadata !14250, metadata !DIExpression()), !dbg !16058
  %2 = udiv i64 %0, 10, !dbg !16060
  ret i64 %2, !dbg !16064
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !16065 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16066, !srcloc !16068
  tail call void @z_impl_k_yield() #24, !dbg !16069
  ret void, !dbg !16070
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !16071 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16075, metadata !DIExpression()), !dbg !16077
  %2 = sext i32 %0 to i64, !dbg !16078
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16079
  call void @llvm.dbg.value(metadata i64 %3, metadata !16076, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16077
  %4 = shl i64 %3, 32, !dbg !16080
  %5 = ashr exact i64 %4, 32, !dbg !16080
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16081
  call void @llvm.dbg.value(metadata i32 %6, metadata !16076, metadata !DIExpression()), !dbg !16077
  %7 = sext i32 %6 to i64, !dbg !16082
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16083
  %9 = trunc i64 %8 to i32, !dbg !16083
  ret i32 %9, !dbg !16084
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #4 !dbg !16085 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16087, metadata !DIExpression()), !dbg !16088
  call void @llvm.dbg.value(metadata i64 %0, metadata !14250, metadata !DIExpression()), !dbg !16089
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14253, metadata !DIExpression()), !dbg !16089
  call void @llvm.dbg.value(metadata i32 10000, metadata !14254, metadata !DIExpression()), !dbg !16089
  call void @llvm.dbg.value(metadata i8 1, metadata !14255, metadata !DIExpression()), !dbg !16089
  call void @llvm.dbg.value(metadata i1 false, metadata !14256, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16089
  call void @llvm.dbg.value(metadata i1 true, metadata !14257, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16089
  call void @llvm.dbg.value(metadata i8 0, metadata !14258, metadata !DIExpression()), !dbg !16089
  call void @llvm.dbg.value(metadata i1 false, metadata !14259, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16089
  call void @llvm.dbg.value(metadata i1 true, metadata !14260, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16089
  call void @llvm.dbg.value(metadata i64 0, metadata !14261, metadata !DIExpression()), !dbg !16089
  call void @llvm.dbg.value(metadata i64 0, metadata !14261, metadata !DIExpression()), !dbg !16089
  %2 = add i64 %0, 99, !dbg !16091
  call void @llvm.dbg.value(metadata i64 %2, metadata !14250, metadata !DIExpression()), !dbg !16089
  %3 = udiv i64 %2, 100, !dbg !16092
  ret i64 %3, !dbg !16093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #4 !dbg !16094 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16096, metadata !DIExpression()), !dbg !16097
  call void @llvm.dbg.value(metadata i64 %0, metadata !14250, metadata !DIExpression()), !dbg !16098
  call void @llvm.dbg.value(metadata i32 10000, metadata !14253, metadata !DIExpression()), !dbg !16098
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14254, metadata !DIExpression()), !dbg !16098
  call void @llvm.dbg.value(metadata i8 1, metadata !14255, metadata !DIExpression()), !dbg !16098
  call void @llvm.dbg.value(metadata i1 false, metadata !14256, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16098
  call void @llvm.dbg.value(metadata i1 false, metadata !14257, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16098
  call void @llvm.dbg.value(metadata i8 0, metadata !14258, metadata !DIExpression()), !dbg !16098
  call void @llvm.dbg.value(metadata i1 true, metadata !14259, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16098
  call void @llvm.dbg.value(metadata i1 false, metadata !14260, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16098
  call void @llvm.dbg.value(metadata i64 0, metadata !14261, metadata !DIExpression()), !dbg !16098
  call void @llvm.dbg.value(metadata i64 0, metadata !14261, metadata !DIExpression()), !dbg !16098
  %2 = mul i64 %0, 100, !dbg !16100
  ret i64 %2, !dbg !16102
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16103 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16105, metadata !DIExpression()), !dbg !16106
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16107
  br i1 %2, label %14, label %3, !dbg !16109

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16110
  %5 = icmp slt i32 %4, 0, !dbg !16112
  br i1 %5, label %6, label %10, !dbg !16113

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16114
  %8 = load i8, i8* %7, align 1, !dbg !16114
  %9 = icmp eq i8 %8, 16, !dbg !16117
  br i1 %9, label %10, label %14, !dbg !16118

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16119
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16120
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16121, !srcloc !14852
  call void @llvm.dbg.value(metadata i32 %11, metadata !14848, metadata !DIExpression()) #23, !dbg !16125
  %12 = icmp eq i32 %11, 0, !dbg !16126
  br i1 %12, label %13, label %14, !dbg !16127

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16128
  br label %14, !dbg !16130

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16131
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16132 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16134, metadata !DIExpression()), !dbg !16135
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16136
  %3 = load i8, i8* %2, align 1, !dbg !16136
  %4 = and i8 %3, 2, !dbg !16137
  %5 = icmp ne i8 %4, 0, !dbg !16138
  ret i1 %5, !dbg !16139
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16140 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16145
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16144, metadata !DIExpression()), !dbg !16146
  ret %struct.k_thread* %1, !dbg !16147
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16148 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16149, !srcloc !14852
  call void @llvm.dbg.value(metadata i32 %1, metadata !14848, metadata !DIExpression()) #23, !dbg !16152
  %2 = icmp eq i32 %1, 0, !dbg !16153
  br i1 %2, label %3, label %8, !dbg !16154

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16155
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16156
  %6 = icmp ne i32 %5, 0, !dbg !16154
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16157
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16158 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16160, metadata !DIExpression()), !dbg !16162
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !16163
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16165, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !16167
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !16167
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !16163
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16168
  br i1 %3, label %5, label %4, !dbg !16169

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !16170
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16170
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !16170
  unreachable, !dbg !16170

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16165
  call void @llvm.dbg.value(metadata i32 %6, metadata !14202, metadata !DIExpression()) #23, !dbg !16167
  call void @llvm.dbg.value(metadata i32 %6, metadata !14196, metadata !DIExpression()) #23, !dbg !16163
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16171
  call void @llvm.dbg.value(metadata i32 %6, metadata !16161, metadata !DIExpression()), !dbg !16162
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16172
  %8 = load i8, i8* %7, align 4, !dbg !16172
  %9 = and i8 %8, 1, !dbg !16174
  %10 = icmp eq i8 %9, 0, !dbg !16175
  br i1 %10, label %15, label %11, !dbg !16176

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !16177
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !16177
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16180
  br i1 %12, label %14, label %13, !dbg !16181

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !16182
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16182
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !16182
  unreachable, !dbg !16182

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14224, metadata !DIExpression()) #23, !dbg !16177
  call void @llvm.dbg.value(metadata i32 %6, metadata !14238, metadata !DIExpression()) #23, !dbg !16183
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16185, !srcloc !14244
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1731) #26, !dbg !16186
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.293, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #26, !dbg !16186
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1731) #26, !dbg !16186
  unreachable, !dbg !16186

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16190
  %17 = load i8, i8* %16, align 1, !dbg !16190
  %18 = and i8 %17, 8, !dbg !16192
  %19 = icmp eq i8 %18, 0, !dbg !16193
  br i1 %19, label %24, label %20, !dbg !16194

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !16195
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !16195
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16198
  br i1 %21, label %23, label %22, !dbg !16199

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !16200
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16200
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !16200
  unreachable, !dbg !16200

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14224, metadata !DIExpression()) #23, !dbg !16195
  call void @llvm.dbg.value(metadata i32 %6, metadata !14238, metadata !DIExpression()) #23, !dbg !16201
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16203, !srcloc !14244
  br label %39, !dbg !16204

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16205
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16206
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16208
  br i1 %26, label %27, label %35, !dbg !16209

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16210, !srcloc !14852
  call void @llvm.dbg.value(metadata i32 %28, metadata !14848, metadata !DIExpression()) #23, !dbg !16213
  %29 = icmp eq i32 %28, 0, !dbg !16214
  br i1 %29, label %30, label %35, !dbg !16215

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14796, metadata !DIExpression()) #23, !dbg !16216
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14801, metadata !DIExpression()) #23, !dbg !16216
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14805, metadata !DIExpression()) #23, !dbg !16219
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16221
  br i1 %31, label %33, label %32, !dbg !16222

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 225) #26, !dbg !16223
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16223
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 225) #26, !dbg !16223
  unreachable, !dbg !16223

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14796, metadata !DIExpression()) #23, !dbg !16216
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #26, !dbg !16224
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.292, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1778) #26, !dbg !16225
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.294, i32 0, i32 0)) #26, !dbg !16225
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1778) #26, !dbg !16225
  unreachable, !dbg !16225

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !16229
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !16229
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16231
  br i1 %36, label %38, label %37, !dbg !16232

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !16233
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16233
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !16233
  unreachable, !dbg !16233

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14224, metadata !DIExpression()) #23, !dbg !16229
  call void @llvm.dbg.value(metadata i32 %6, metadata !14238, metadata !DIExpression()) #23, !dbg !16234
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16236, !srcloc !14244
  br label %39, !dbg !16237

39:                                               ; preds = %38, %23
  ret void, !dbg !16237
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16238 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16240, metadata !DIExpression()), !dbg !16241
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16242
  %3 = load i8, i8* %2, align 1, !dbg !16242
  %4 = and i8 %3, 8, !dbg !16244
  %5 = icmp eq i8 %4, 0, !dbg !16245
  br i1 %5, label %6, label %20, !dbg !16246

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16247
  %8 = or i8 %7, 8, !dbg !16247
  store i8 %8, i8* %2, align 1, !dbg !16247
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16249
  br i1 %9, label %10, label %12, !dbg !16251

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14382, metadata !DIExpression()) #23, !dbg !16252
  %11 = and i8 %8, 95, !dbg !16255
  store i8 %11, i8* %2, align 1, !dbg !16255
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14390, metadata !DIExpression()) #23, !dbg !16256
  tail call void @z_priq_rb_remove(%struct._priq_rb* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct.k_thread* noundef nonnull %0) #26, !dbg !16258
  br label %12, !dbg !16259

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16260
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16260
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16262
  br i1 %15, label %17, label %16, !dbg !16263

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16264
  br label %17, !dbg !16266

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16267
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16268
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !16269
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16270
  tail call void @z_thread_monitor_exit(%struct.k_thread* noundef nonnull %0) #26, !dbg !16271
  br label %20, !dbg !16272

20:                                               ; preds = %17, %1
  ret void, !dbg !16273
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16274 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16278, metadata !DIExpression()), !dbg !16280
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.277(%struct._wait_q_t* noundef %0) #24, !dbg !16281
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16279, metadata !DIExpression()), !dbg !16280
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16282
  br i1 %3, label %10, label %4, !dbg !16283

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16284
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16286
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16287, metadata !DIExpression()), !dbg !16293
  call void @llvm.dbg.value(metadata i32 0, metadata !16292, metadata !DIExpression()), !dbg !16293
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 10, i32 1, !dbg !16295
  store i32 0, i32* %7, align 4, !dbg !16296
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16297
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.277(%struct._wait_q_t* noundef %0) #24, !dbg !16281
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16279, metadata !DIExpression()), !dbg !16280
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16282
  br i1 %9, label %10, label %4, !dbg !16283, !llvm.loop !16298

10:                                               ; preds = %4, %1
  ret void, !dbg !16300
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16301 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16306, metadata !DIExpression()), !dbg !16309
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16305, metadata !DIExpression()), !dbg !16309
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !16310
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16312, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !16314
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !16314
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !16310
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16315
  br i1 %4, label %6, label %5, !dbg !16316

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !16317
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16317
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !16317
  unreachable, !dbg !16317

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16312
  call void @llvm.dbg.value(metadata i32 %7, metadata !14202, metadata !DIExpression()) #23, !dbg !16314
  call void @llvm.dbg.value(metadata i32 %7, metadata !14196, metadata !DIExpression()) #23, !dbg !16310
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16318
  call void @llvm.dbg.value(metadata i32 %7, metadata !16307, metadata !DIExpression()), !dbg !16309
  call void @llvm.dbg.value(metadata i32 0, metadata !16308, metadata !DIExpression()), !dbg !16309
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16319
  %9 = load i8, i8* %8, align 1, !dbg !16319
  %10 = and i8 %9, 8, !dbg !16321
  %11 = icmp eq i8 %10, 0, !dbg !16322
  br i1 %11, label %12, label %35, !dbg !16323

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16306, metadata !DIExpression()), !dbg !16309
  %14 = icmp eq i64 %13, 0, !dbg !16324
  br i1 %14, label %35, label %15, !dbg !16326

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16327
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16329
  br i1 %17, label %35, label %18, !dbg !16330

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16331
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !16331
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16332
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !16333
  br i1 %22, label %35, label %23, !dbg !16334

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16335, !srcloc !14852
  call void @llvm.dbg.value(metadata i32 %24, metadata !14848, metadata !DIExpression()) #23, !dbg !16341
  %25 = icmp eq i32 %24, 0, !dbg !16342
  br i1 %25, label %27, label %26, !dbg !16343

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1809) #26, !dbg !16344
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.295, i32 0, i32 0)) #26, !dbg !16344
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.242, i32 0, i32 0), i32 noundef 1809) #26, !dbg !16344
  unreachable, !dbg !16344

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16346
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16347
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #24, !dbg !16348
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16349
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16350
  call void @llvm.dbg.value(metadata i32 undef, metadata !14796, metadata !DIExpression()) #23, !dbg !16351
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14801, metadata !DIExpression()) #23, !dbg !16351
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14805, metadata !DIExpression()) #23, !dbg !16353
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16355
  br i1 %31, label %33, label %32, !dbg !16356

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 225) #26, !dbg !16357
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16357
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 225) #26, !dbg !16357
  unreachable, !dbg !16357

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14796, metadata !DIExpression()) #23, !dbg !16351
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #26, !dbg !16358
  call void @llvm.dbg.value(metadata i32 %34, metadata !16308, metadata !DIExpression()), !dbg !16309
  br label %40, !dbg !16359

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16360
  call void @llvm.dbg.value(metadata i32 %36, metadata !16308, metadata !DIExpression()), !dbg !16309
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !16361
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !16361
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16363
  br i1 %37, label %39, label %38, !dbg !16364

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !16365
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16365
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !16365
  unreachable, !dbg !16365

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14224, metadata !DIExpression()) #23, !dbg !16361
  call void @llvm.dbg.value(metadata i32 %7, metadata !14238, metadata !DIExpression()) #23, !dbg !16366
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16368, !srcloc !14244
  br label %40, !dbg !16369

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16309
  ret i32 %41, !dbg !16370
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16371 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16375, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.value(metadata i32 %1, metadata !16376, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.value(metadata i8* %2, metadata !16377, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.value(metadata i8 0, metadata !16379, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.value(metadata i32 0, metadata !16380, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14190, metadata !DIExpression()) #23, !dbg !16385
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16387, !srcloc !14205
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !16389
  call void @llvm.dbg.value(metadata i32 undef, metadata !14203, metadata !DIExpression()) #23, !dbg !16389
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !16385
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16390
  br i1 %5, label %7, label %6, !dbg !16391

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.236, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !16392
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.238, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16392
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 148) #26, !dbg !16392
  unreachable, !dbg !16392

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14202, metadata !DIExpression()) #23, !dbg !16389
  call void @llvm.dbg.value(metadata i32 undef, metadata !14196, metadata !DIExpression()) #23, !dbg !16385
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16393
  call void @llvm.dbg.value(metadata i32 undef, metadata !16382, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.value(metadata i8 poison, metadata !16379, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.value(metadata i32 undef, metadata !16380, metadata !DIExpression()), !dbg !16384
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16394
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16378, metadata !DIExpression()), !dbg !16383
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16397
  br i1 %10, label %15, label %11, !dbg !16399

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16400, metadata !DIExpression()), !dbg !16408
  call void @llvm.dbg.value(metadata i32 %1, metadata !16406, metadata !DIExpression()), !dbg !16408
  call void @llvm.dbg.value(metadata i8* %2, metadata !16407, metadata !DIExpression()), !dbg !16408
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16287, metadata !DIExpression()), !dbg !16411
  call void @llvm.dbg.value(metadata i32 %1, metadata !16292, metadata !DIExpression()), !dbg !16411
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 10, i32 1, !dbg !16413
  store i32 %1, i32* %12, align 4, !dbg !16414
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16415
  store i8* %2, i8** %13, align 4, !dbg !16416
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16417
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16418
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !16419
  call void @llvm.dbg.value(metadata i8 1, metadata !16379, metadata !DIExpression()), !dbg !16383
  br label %15, !dbg !16420

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16379, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !16421
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14229, metadata !DIExpression()) #23, !dbg !16421
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16423
  br i1 %16, label %18, label %17, !dbg !16424

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.235, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.239, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !16425
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.240, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #26, !dbg !16425
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.237, i32 0, i32 0), i32 noundef 194) #26, !dbg !16425
  unreachable, !dbg !16425

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16383
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16387
  call void @llvm.dbg.value(metadata i32 %20, metadata !14202, metadata !DIExpression()) #23, !dbg !16389
  call void @llvm.dbg.value(metadata i32 %20, metadata !14196, metadata !DIExpression()) #23, !dbg !16385
  call void @llvm.dbg.value(metadata i32 %20, metadata !16382, metadata !DIExpression()), !dbg !16384
  call void @llvm.dbg.value(metadata i32 undef, metadata !14224, metadata !DIExpression()) #23, !dbg !16421
  call void @llvm.dbg.value(metadata i32 undef, metadata !14238, metadata !DIExpression()) #23, !dbg !16426
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16428, !srcloc !14244
  call void @llvm.dbg.value(metadata i8 poison, metadata !16379, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.value(metadata i32 undef, metadata !16380, metadata !DIExpression()), !dbg !16384
  ret i1 %19, !dbg !16429
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16430 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16436, metadata !DIExpression()), !dbg !16441
  call void @llvm.dbg.value(metadata i64 undef, metadata !16438, metadata !DIExpression()), !dbg !16441
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16435, metadata !DIExpression()), !dbg !16441
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16437, metadata !DIExpression()), !dbg !16441
  call void @llvm.dbg.value(metadata i8** %4, metadata !16439, metadata !DIExpression()), !dbg !16441
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !16442
  call void @llvm.dbg.value(metadata i32 %6, metadata !16440, metadata !DIExpression()), !dbg !16441
  %7 = icmp eq i8** %4, null, !dbg !16443
  br i1 %7, label %12, label %8, !dbg !16445

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16446
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16448
  %11 = load i8*, i8** %10, align 4, !dbg !16448
  store i8* %11, i8** %4, align 4, !dbg !16449
  br label %12, !dbg !16450

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16451
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16452 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #26, !dbg !16454
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #26, !dbg !16455
  ret void, !dbg !16456
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16457 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16467, metadata !DIExpression()), !dbg !16484
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16465, metadata !DIExpression()), !dbg !16484
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16466, metadata !DIExpression()), !dbg !16484
  %5 = icmp eq i64 %4, -1, !dbg !16485
  br i1 %5, label %63, label %6, !dbg !16487

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16488
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.300(%struct._dnode* noundef %7) #24, !dbg !16488
  br i1 %8, label %9, label %10, !dbg !16491

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.302, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.303, i32 0, i32 0), i32 noundef 99) #26, !dbg !16492
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.304, i32 0, i32 0)) #26, !dbg !16492
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.303, i32 0, i32 0), i32 noundef 99) #26, !dbg !16492
  unreachable, !dbg !16492

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16494
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16495
  call void @llvm.dbg.value(metadata i32 0, metadata !16468, metadata !DIExpression()), !dbg !16496
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16497, metadata !DIExpression()) #23, !dbg !16504
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16506, !srcloc !16512
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #23, !dbg !16513
  call void @llvm.dbg.value(metadata i32 undef, metadata !16510, metadata !DIExpression()) #23, !dbg !16513
  call void @llvm.dbg.value(metadata i32 undef, metadata !16503, metadata !DIExpression()) #23, !dbg !16504
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16514
  br i1 %13, label %15, label %14, !dbg !16517

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #26, !dbg !16518
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16518
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #26, !dbg !16518
  unreachable, !dbg !16518

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16506
  call void @llvm.dbg.value(metadata i32 %16, metadata !16509, metadata !DIExpression()) #23, !dbg !16513
  call void @llvm.dbg.value(metadata i32 %16, metadata !16503, metadata !DIExpression()) #23, !dbg !16504
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16520
  call void @llvm.dbg.value(metadata i32 %16, metadata !16474, metadata !DIExpression()), !dbg !16496
  call void @llvm.dbg.value(metadata i32 undef, metadata !16468, metadata !DIExpression()), !dbg !16496
  %17 = icmp slt i64 %4, -1, !dbg !16521
  br i1 %17, label %18, label %24, !dbg !16522

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16523
  %20 = add i64 %4, %19, !dbg !16524
  %21 = sub i64 -2, %20, !dbg !16524
  call void @llvm.dbg.value(metadata i64 %21, metadata !16478, metadata !DIExpression()), !dbg !16525
  %22 = icmp sgt i64 %21, 1, !dbg !16526
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16526
  br label %29, !dbg !16527

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16528
  %26 = tail call fastcc i32 @elapsed.308() #24, !dbg !16530
  %27 = sext i32 %26 to i64, !dbg !16530
  %28 = add nsw i64 %25, %27, !dbg !16531
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16532
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16533
  store i64 %30, i64* %31, align 8, !dbg !16534
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !16535
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16475, metadata !DIExpression()), !dbg !16537
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16538
  br i1 %33, label %48, label %34, !dbg !16538

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16539
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16475, metadata !DIExpression()), !dbg !16537
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16543
  %38 = load i64, i64* %37, align 8, !dbg !16543
  %39 = icmp slt i64 %35, %38, !dbg !16544
  br i1 %39, label %40, label %44, !dbg !16545

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16543
  %42 = sub nsw i64 %38, %35, !dbg !16546
  store i64 %42, i64* %41, align 8, !dbg !16546
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16548
  tail call fastcc void @sys_dlist_insert.309(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !16549
  br label %49, !dbg !16550

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16551
  store i64 %45, i64* %31, align 8, !dbg !16551
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !16552
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16475, metadata !DIExpression()), !dbg !16537
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16538
  br i1 %47, label %48, label %34, !dbg !16538, !llvm.loop !16553

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.310(%struct._dnode* noundef nonnull %7) #24, !dbg !16555
  br label %49, !dbg !16558

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !16559
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16560
  br i1 %51, label %52, label %59, !dbg !16561

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !16562
  call void @llvm.dbg.value(metadata i32 %53, metadata !16481, metadata !DIExpression()), !dbg !16563
  %54 = icmp ne i32 %53, 0, !dbg !16564
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16566
  br i1 %57, label %59, label %58, !dbg !16566

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #26, !dbg !16567
  br label %59, !dbg !16569

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16570, metadata !DIExpression()) #23, !dbg !16576
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16575, metadata !DIExpression()) #23, !dbg !16576
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16578
  br i1 %60, label %62, label %61, !dbg !16581

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #26, !dbg !16582
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.312, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16582
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #26, !dbg !16582
  unreachable, !dbg !16582

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16570, metadata !DIExpression()) #23, !dbg !16576
  call void @llvm.dbg.value(metadata i32 %16, metadata !16584, metadata !DIExpression()) #23, !dbg !16587
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16589, !srcloc !16590
  call void @llvm.dbg.value(metadata i32 undef, metadata !16468, metadata !DIExpression()), !dbg !16496
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.300(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16592 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16598, metadata !DIExpression()), !dbg !16599
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16600
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16600
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16601
  ret i1 %4, !dbg !16602
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.308() unnamed_addr #1 !dbg !16603 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16606
  %2 = icmp eq i32 %1, 0, !dbg !16607
  br i1 %2, label %3, label %5, !dbg !16606

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #26, !dbg !16608
  br label %5, !dbg !16606

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16606
  ret i32 %6, !dbg !16609
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !16610 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.315() #24, !dbg !16616
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16614, metadata !DIExpression()), !dbg !16617
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16618
  ret %struct._timeout* %2, !dbg !16619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.309(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #10 !dbg !16620 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16624, metadata !DIExpression()), !dbg !16628
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16625, metadata !DIExpression()), !dbg !16628
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16629
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16629
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16626, metadata !DIExpression()), !dbg !16628
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16630
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16631
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16632
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16633
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16634
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16635
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16636
  ret void, !dbg !16637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !16638 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16642, metadata !DIExpression()), !dbg !16644
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16645
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.313(%struct._dnode* noundef %2) #24, !dbg !16646
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16643, metadata !DIExpression()), !dbg !16644
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16647
  ret %struct._timeout* %4, !dbg !16648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.310(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !16649 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16654, metadata !DIExpression()), !dbg !16657
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16655, metadata !DIExpression()), !dbg !16657
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16658
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16656, metadata !DIExpression()), !dbg !16657
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16659
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16660
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16661
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16662
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16663
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16664
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16665
  ret void, !dbg !16666
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16667 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !16672
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16669, metadata !DIExpression()), !dbg !16673
  %2 = tail call fastcc i32 @elapsed.308() #24, !dbg !16674
  call void @llvm.dbg.value(metadata i32 %2, metadata !16670, metadata !DIExpression()), !dbg !16673
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16675
  br i1 %3, label %14, label %4, !dbg !16677

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16678
  %6 = load i64, i64* %5, align 8, !dbg !16678
  %7 = sext i32 %2 to i64, !dbg !16679
  %8 = sub nsw i64 %6, %7, !dbg !16680
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16681
  br i1 %9, label %14, label %10, !dbg !16682

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16683
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16683
  %13 = trunc i64 %12 to i32, !dbg !16683
  call void @llvm.dbg.value(metadata i32 %13, metadata !16671, metadata !DIExpression()), !dbg !16673
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16685
  call void @llvm.dbg.value(metadata i32 %15, metadata !16671, metadata !DIExpression()), !dbg !16673
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16686
  %17 = icmp ne i32 %16, 0, !dbg !16688
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16689
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16689
  call void @llvm.dbg.value(metadata i32 %20, metadata !16671, metadata !DIExpression()), !dbg !16673
  ret i32 %20, !dbg !16690
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.313(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16691 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16695, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16696, metadata !DIExpression()), !dbg !16697
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16698
  br i1 %2, label %5, label %3, !dbg !16699

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.314(%struct._dnode* noundef nonnull %0) #24, !dbg !16700
  br label %5, !dbg !16699

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16699
  ret %struct._dnode* %6, !dbg !16701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.314(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16702 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16704, metadata !DIExpression()), !dbg !16706
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16705, metadata !DIExpression()), !dbg !16706
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16707
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16708
  br i1 %3, label %7, label %4, !dbg !16709

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16710
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16710
  br label %7, !dbg !16709

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16709
  ret %struct._dnode* %8, !dbg !16711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.315() unnamed_addr #8 !dbg !16712 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16716, metadata !DIExpression()), !dbg !16717
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.316() #24, !dbg !16718
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16718
  ret %struct._dnode* %3, !dbg !16719
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.316() unnamed_addr #8 !dbg !16720 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16724, metadata !DIExpression()), !dbg !16725
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16726
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16727
  ret i1 %2, !dbg !16728
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16729 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16733, metadata !DIExpression()), !dbg !16738
  call void @llvm.dbg.value(metadata i32 -22, metadata !16734, metadata !DIExpression()), !dbg !16738
  call void @llvm.dbg.value(metadata i32 0, metadata !16735, metadata !DIExpression()), !dbg !16739
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16497, metadata !DIExpression()) #23, !dbg !16740
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16742, !srcloc !16512
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #23, !dbg !16744
  call void @llvm.dbg.value(metadata i32 undef, metadata !16510, metadata !DIExpression()) #23, !dbg !16744
  call void @llvm.dbg.value(metadata i32 undef, metadata !16503, metadata !DIExpression()) #23, !dbg !16740
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16745
  br i1 %3, label %5, label %4, !dbg !16746

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #26, !dbg !16747
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16747
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #26, !dbg !16747
  unreachable, !dbg !16747

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #23, !dbg !16744
  call void @llvm.dbg.value(metadata i32 undef, metadata !16503, metadata !DIExpression()) #23, !dbg !16740
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16748
  call void @llvm.dbg.value(metadata i32 undef, metadata !16737, metadata !DIExpression()), !dbg !16739
  call void @llvm.dbg.value(metadata i32 -22, metadata !16734, metadata !DIExpression()), !dbg !16738
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()), !dbg !16739
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16734, metadata !DIExpression()), !dbg !16738
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.300(%struct._dnode* noundef %6) #24, !dbg !16749
  br i1 %7, label %8, label %9, !dbg !16753

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !16754
  call void @llvm.dbg.value(metadata i32 0, metadata !16734, metadata !DIExpression()), !dbg !16738
  br label %9, !dbg !16756

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !16738
  call void @llvm.dbg.value(metadata i32 %10, metadata !16734, metadata !DIExpression()), !dbg !16738
  call void @llvm.dbg.value(metadata i32 undef, metadata !16570, metadata !DIExpression()) #23, !dbg !16757
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16575, metadata !DIExpression()) #23, !dbg !16757
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16759
  br i1 %11, label %13, label %12, !dbg !16760

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #26, !dbg !16761
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.312, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16761
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #26, !dbg !16761
  unreachable, !dbg !16761

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16742
  call void @llvm.dbg.value(metadata i32 %14, metadata !16509, metadata !DIExpression()) #23, !dbg !16744
  call void @llvm.dbg.value(metadata i32 %14, metadata !16503, metadata !DIExpression()) #23, !dbg !16740
  call void @llvm.dbg.value(metadata i32 %14, metadata !16737, metadata !DIExpression()), !dbg !16739
  call void @llvm.dbg.value(metadata i32 undef, metadata !16570, metadata !DIExpression()) #23, !dbg !16757
  call void @llvm.dbg.value(metadata i32 undef, metadata !16584, metadata !DIExpression()) #23, !dbg !16762
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16764, !srcloc !16590
  call void @llvm.dbg.value(metadata i32 %10, metadata !16734, metadata !DIExpression()), !dbg !16738
  call void @llvm.dbg.value(metadata i32 undef, metadata !16735, metadata !DIExpression()), !dbg !16739
  ret i32 %10, !dbg !16765
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #10 !dbg !16766 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16768, metadata !DIExpression()), !dbg !16769
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !16770
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16772
  br i1 %3, label %10, label %4, !dbg !16773

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16774
  %6 = load i64, i64* %5, align 8, !dbg !16774
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16776
  %8 = load i64, i64* %7, align 8, !dbg !16777
  %9 = add nsw i64 %8, %6, !dbg !16777
  store i64 %9, i64* %7, align 8, !dbg !16777
  br label %10, !dbg !16778

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16779
  tail call fastcc void @sys_dlist_remove.319(%struct._dnode* noundef %11) #24, !dbg !16780
  ret void, !dbg !16781
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.319(%struct._dnode* nocapture noundef %0) unnamed_addr #10 !dbg !16782 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16786, metadata !DIExpression()), !dbg !16789
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16790
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16790
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16787, metadata !DIExpression()), !dbg !16789
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16791
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16791
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16788, metadata !DIExpression()), !dbg !16789
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16792
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16793
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16794
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16795
  tail call fastcc void @sys_dnode_init.320(%struct._dnode* noundef %0) #24, !dbg !16796
  ret void, !dbg !16797
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.320(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !16798 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16800, metadata !DIExpression()), !dbg !16801
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16802
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16803
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16804
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16805
  ret void, !dbg !16806
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16807 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16813, metadata !DIExpression()), !dbg !16818
  call void @llvm.dbg.value(metadata i64 0, metadata !16814, metadata !DIExpression()), !dbg !16818
  call void @llvm.dbg.value(metadata i32 0, metadata !16815, metadata !DIExpression()), !dbg !16819
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16497, metadata !DIExpression()) #23, !dbg !16820
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16822, !srcloc !16512
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #23, !dbg !16824
  call void @llvm.dbg.value(metadata i32 undef, metadata !16510, metadata !DIExpression()) #23, !dbg !16824
  call void @llvm.dbg.value(metadata i32 undef, metadata !16503, metadata !DIExpression()) #23, !dbg !16820
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16825
  br i1 %3, label %5, label %4, !dbg !16826

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #26, !dbg !16827
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16827
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #26, !dbg !16827
  unreachable, !dbg !16827

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #23, !dbg !16824
  call void @llvm.dbg.value(metadata i32 undef, metadata !16503, metadata !DIExpression()) #23, !dbg !16820
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16828
  call void @llvm.dbg.value(metadata i32 undef, metadata !16817, metadata !DIExpression()), !dbg !16819
  call void @llvm.dbg.value(metadata i64 0, metadata !16814, metadata !DIExpression()), !dbg !16818
  call void @llvm.dbg.value(metadata i32 undef, metadata !16815, metadata !DIExpression()), !dbg !16819
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !16829
  call void @llvm.dbg.value(metadata i64 %6, metadata !16814, metadata !DIExpression()), !dbg !16818
  call void @llvm.dbg.value(metadata i32 undef, metadata !16570, metadata !DIExpression()) #23, !dbg !16832
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16575, metadata !DIExpression()) #23, !dbg !16832
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16834
  br i1 %7, label %9, label %8, !dbg !16835

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #26, !dbg !16836
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.312, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16836
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #26, !dbg !16836
  unreachable, !dbg !16836

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !16822
  call void @llvm.dbg.value(metadata i32 %10, metadata !16509, metadata !DIExpression()) #23, !dbg !16824
  call void @llvm.dbg.value(metadata i32 %10, metadata !16503, metadata !DIExpression()) #23, !dbg !16820
  call void @llvm.dbg.value(metadata i32 %10, metadata !16817, metadata !DIExpression()), !dbg !16819
  call void @llvm.dbg.value(metadata i32 undef, metadata !16570, metadata !DIExpression()) #23, !dbg !16832
  call void @llvm.dbg.value(metadata i32 undef, metadata !16584, metadata !DIExpression()) #23, !dbg !16837
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !16839, !srcloc !16590
  call void @llvm.dbg.value(metadata i64 %6, metadata !16814, metadata !DIExpression()), !dbg !16818
  call void @llvm.dbg.value(metadata i32 undef, metadata !16815, metadata !DIExpression()), !dbg !16819
  ret i64 %6, !dbg !16840
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16841 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16843, metadata !DIExpression()), !dbg !16847
  call void @llvm.dbg.value(metadata i64 0, metadata !16844, metadata !DIExpression()), !dbg !16847
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.321(%struct._timeout* noundef %0) #24, !dbg !16848
  br i1 %2, label %21, label %3, !dbg !16850

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !16851
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16845, metadata !DIExpression()), !dbg !16852
  call void @llvm.dbg.value(metadata i64 0, metadata !16844, metadata !DIExpression()), !dbg !16847
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16853
  br i1 %5, label %16, label %6, !dbg !16855

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16845, metadata !DIExpression()), !dbg !16852
  call void @llvm.dbg.value(metadata i64 %8, metadata !16844, metadata !DIExpression()), !dbg !16847
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16856
  %10 = load i64, i64* %9, align 8, !dbg !16856
  %11 = add nsw i64 %10, %8, !dbg !16858
  call void @llvm.dbg.value(metadata i64 %11, metadata !16844, metadata !DIExpression()), !dbg !16847
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16859
  br i1 %12, label %16, label %13, !dbg !16861

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !16862
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16845, metadata !DIExpression()), !dbg !16852
  call void @llvm.dbg.value(metadata i64 %11, metadata !16844, metadata !DIExpression()), !dbg !16847
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16853
  br i1 %15, label %16, label %6, !dbg !16855, !llvm.loop !16863

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16847
  call void @llvm.dbg.value(metadata i64 %17, metadata !16844, metadata !DIExpression()), !dbg !16847
  %18 = tail call fastcc i32 @elapsed.308() #24, !dbg !16865
  %19 = sext i32 %18 to i64, !dbg !16865
  %20 = sub nsw i64 %17, %19, !dbg !16866
  br label %21, !dbg !16867

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16847
  ret i64 %22, !dbg !16868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.321(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16869 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16873, metadata !DIExpression()), !dbg !16874
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16875
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.300(%struct._dnode* noundef %2) #24, !dbg !16876
  %4 = xor i1 %3, true, !dbg !16877
  ret i1 %4, !dbg !16878
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16879 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16881, metadata !DIExpression()), !dbg !16886
  call void @llvm.dbg.value(metadata i64 0, metadata !16882, metadata !DIExpression()), !dbg !16886
  call void @llvm.dbg.value(metadata i32 0, metadata !16883, metadata !DIExpression()), !dbg !16887
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16497, metadata !DIExpression()) #23, !dbg !16888
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16890, !srcloc !16512
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #23, !dbg !16892
  call void @llvm.dbg.value(metadata i32 undef, metadata !16510, metadata !DIExpression()) #23, !dbg !16892
  call void @llvm.dbg.value(metadata i32 undef, metadata !16503, metadata !DIExpression()) #23, !dbg !16888
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16893
  br i1 %3, label %5, label %4, !dbg !16894

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #26, !dbg !16895
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16895
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #26, !dbg !16895
  unreachable, !dbg !16895

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #23, !dbg !16892
  call void @llvm.dbg.value(metadata i32 undef, metadata !16503, metadata !DIExpression()) #23, !dbg !16888
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16896
  call void @llvm.dbg.value(metadata i32 undef, metadata !16885, metadata !DIExpression()), !dbg !16887
  call void @llvm.dbg.value(metadata i64 0, metadata !16882, metadata !DIExpression()), !dbg !16886
  call void @llvm.dbg.value(metadata i32 undef, metadata !16883, metadata !DIExpression()), !dbg !16887
  %6 = load i64, i64* @curr_tick, align 8, !dbg !16897
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !16900
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !16882, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16886
  call void @llvm.dbg.value(metadata i32 undef, metadata !16570, metadata !DIExpression()) #23, !dbg !16901
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16575, metadata !DIExpression()) #23, !dbg !16901
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16903
  br i1 %8, label %10, label %9, !dbg !16904

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #26, !dbg !16905
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.312, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16905
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #26, !dbg !16905
  unreachable, !dbg !16905

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !16890
  call void @llvm.dbg.value(metadata i32 %11, metadata !16509, metadata !DIExpression()) #23, !dbg !16892
  call void @llvm.dbg.value(metadata i32 %11, metadata !16503, metadata !DIExpression()) #23, !dbg !16888
  call void @llvm.dbg.value(metadata i32 %11, metadata !16885, metadata !DIExpression()), !dbg !16887
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !16882, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16886
  call void @llvm.dbg.value(metadata i32 undef, metadata !16570, metadata !DIExpression()) #23, !dbg !16901
  call void @llvm.dbg.value(metadata i32 undef, metadata !16584, metadata !DIExpression()) #23, !dbg !16906
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !16908, !srcloc !16590
  call void @llvm.dbg.value(metadata i32 undef, metadata !16883, metadata !DIExpression()), !dbg !16887
  %12 = add i64 %7, %6, !dbg !16909
  ret i64 %12, !dbg !16910
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16911 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16913, metadata !DIExpression()), !dbg !16917
  call void @llvm.dbg.value(metadata i32 0, metadata !16914, metadata !DIExpression()), !dbg !16918
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16497, metadata !DIExpression()) #23, !dbg !16919
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16921, !srcloc !16512
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #23, !dbg !16923
  call void @llvm.dbg.value(metadata i32 undef, metadata !16510, metadata !DIExpression()) #23, !dbg !16923
  call void @llvm.dbg.value(metadata i32 undef, metadata !16503, metadata !DIExpression()) #23, !dbg !16919
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16924
  br i1 %2, label %4, label %3, !dbg !16925

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #26, !dbg !16926
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16926
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #26, !dbg !16926
  unreachable, !dbg !16926

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #23, !dbg !16923
  call void @llvm.dbg.value(metadata i32 undef, metadata !16503, metadata !DIExpression()) #23, !dbg !16919
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16927
  call void @llvm.dbg.value(metadata i32 undef, metadata !16916, metadata !DIExpression()), !dbg !16918
  call void @llvm.dbg.value(metadata i32 -1, metadata !16913, metadata !DIExpression()), !dbg !16917
  call void @llvm.dbg.value(metadata i32 undef, metadata !16914, metadata !DIExpression()), !dbg !16918
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !16928
  call void @llvm.dbg.value(metadata i32 %5, metadata !16913, metadata !DIExpression()), !dbg !16917
  call void @llvm.dbg.value(metadata i32 undef, metadata !16570, metadata !DIExpression()) #23, !dbg !16931
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16575, metadata !DIExpression()) #23, !dbg !16931
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16933
  br i1 %6, label %8, label %7, !dbg !16934

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #26, !dbg !16935
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.312, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16935
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #26, !dbg !16935
  unreachable, !dbg !16935

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !16921
  call void @llvm.dbg.value(metadata i32 %9, metadata !16509, metadata !DIExpression()) #23, !dbg !16923
  call void @llvm.dbg.value(metadata i32 %9, metadata !16503, metadata !DIExpression()) #23, !dbg !16919
  call void @llvm.dbg.value(metadata i32 %9, metadata !16916, metadata !DIExpression()), !dbg !16918
  call void @llvm.dbg.value(metadata i32 undef, metadata !16570, metadata !DIExpression()) #23, !dbg !16931
  call void @llvm.dbg.value(metadata i32 undef, metadata !16584, metadata !DIExpression()) #23, !dbg !16936
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !16938, !srcloc !16590
  call void @llvm.dbg.value(metadata i32 %5, metadata !16913, metadata !DIExpression()), !dbg !16917
  call void @llvm.dbg.value(metadata i32 undef, metadata !16914, metadata !DIExpression()), !dbg !16918
  ret i32 %5, !dbg !16939
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16940 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16942, metadata !DIExpression()), !dbg !16952
  call void @llvm.dbg.value(metadata i1 %1, metadata !16943, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16952
  call void @llvm.dbg.value(metadata i32 0, metadata !16944, metadata !DIExpression()), !dbg !16953
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16497, metadata !DIExpression()) #23, !dbg !16954
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16956, !srcloc !16512
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #23, !dbg !16958
  call void @llvm.dbg.value(metadata i32 undef, metadata !16510, metadata !DIExpression()) #23, !dbg !16958
  call void @llvm.dbg.value(metadata i32 undef, metadata !16503, metadata !DIExpression()) #23, !dbg !16954
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16959
  br i1 %4, label %6, label %5, !dbg !16960

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #26, !dbg !16961
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16961
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #26, !dbg !16961
  unreachable, !dbg !16961

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #23, !dbg !16958
  call void @llvm.dbg.value(metadata i32 undef, metadata !16503, metadata !DIExpression()) #23, !dbg !16954
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16962
  call void @llvm.dbg.value(metadata i32 undef, metadata !16946, metadata !DIExpression()), !dbg !16953
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()), !dbg !16953
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !16963
  call void @llvm.dbg.value(metadata i32 %7, metadata !16947, metadata !DIExpression()), !dbg !16964
  call void @llvm.dbg.value(metadata i1 undef, metadata !16950, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16964
  %8 = icmp slt i32 %7, 2, !dbg !16965
  call void @llvm.dbg.value(metadata i1 %8, metadata !16951, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16964
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !16966
  call void @llvm.dbg.value(metadata i1 %9, metadata !16950, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16964
  br i1 %10, label %14, label %11, !dbg !16966

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !16968
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !16968
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #26, !dbg !16970
  br label %14, !dbg !16971

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16570, metadata !DIExpression()) #23, !dbg !16972
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16575, metadata !DIExpression()) #23, !dbg !16972
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16974
  br i1 %15, label %17, label %16, !dbg !16975

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #26, !dbg !16976
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.312, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16976
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #26, !dbg !16976
  unreachable, !dbg !16976

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !16956
  call void @llvm.dbg.value(metadata i32 %18, metadata !16509, metadata !DIExpression()) #23, !dbg !16958
  call void @llvm.dbg.value(metadata i32 %18, metadata !16503, metadata !DIExpression()) #23, !dbg !16954
  call void @llvm.dbg.value(metadata i32 %18, metadata !16946, metadata !DIExpression()), !dbg !16953
  call void @llvm.dbg.value(metadata i32 undef, metadata !16570, metadata !DIExpression()) #23, !dbg !16972
  call void @llvm.dbg.value(metadata i32 undef, metadata !16584, metadata !DIExpression()) #23, !dbg !16977
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !16979, !srcloc !16590
  call void @llvm.dbg.value(metadata i32 1, metadata !16944, metadata !DIExpression()), !dbg !16953
  call void @llvm.dbg.value(metadata i32 undef, metadata !16944, metadata !DIExpression()), !dbg !16953
  ret void, !dbg !16980
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16985, metadata !DIExpression()), !dbg !16990
  tail call void @z_time_slice(i32 noundef %0) #26, !dbg !16991
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16497, metadata !DIExpression()) #23, !dbg !16992
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16994, !srcloc !16512
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #23, !dbg !16996
  call void @llvm.dbg.value(metadata i32 undef, metadata !16510, metadata !DIExpression()) #23, !dbg !16996
  call void @llvm.dbg.value(metadata i32 undef, metadata !16503, metadata !DIExpression()) #23, !dbg !16992
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16997
  br i1 %3, label %5, label %4, !dbg !16998

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #26, !dbg !16999
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !16999
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #26, !dbg !16999
  unreachable, !dbg !16999

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #23, !dbg !16996
  call void @llvm.dbg.value(metadata i32 undef, metadata !16503, metadata !DIExpression()) #23, !dbg !16992
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !17000
  call void @llvm.dbg.value(metadata i32 undef, metadata !16986, metadata !DIExpression()), !dbg !16990
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16990
  call void @llvm.dbg.value(metadata i32 undef, metadata !16986, metadata !DIExpression()), !dbg !16990
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17001
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17002
  br i1 %7, label %37, label %8, !dbg !17003

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !16990
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17004
  %14 = load i64, i64* %13, align 8, !dbg !17004
  %15 = sext i32 %11 to i64, !dbg !17005
  %16 = icmp sgt i64 %14, %15, !dbg !17006
  br i1 %16, label %35, label %17, !dbg !17007

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !16987, metadata !DIExpression()), !dbg !17008
  %18 = trunc i64 %14 to i32, !dbg !17009
  call void @llvm.dbg.value(metadata i32 %18, metadata !16989, metadata !DIExpression()), !dbg !17008
  %19 = sext i32 %18 to i64, !dbg !17010
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17011
  %21 = add i64 %20, %19, !dbg !17011
  store i64 %21, i64* @curr_tick, align 8, !dbg !17011
  store i64 0, i64* %13, align 8, !dbg !17012
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17013
  call void @llvm.dbg.value(metadata i32 undef, metadata !16570, metadata !DIExpression()) #23, !dbg !17014
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16575, metadata !DIExpression()) #23, !dbg !17014
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !17016
  br i1 %22, label %24, label %23, !dbg !17017

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #26, !dbg !17018
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.312, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !17018
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #26, !dbg !17018
  unreachable, !dbg !17018

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16570, metadata !DIExpression()) #23, !dbg !17014
  call void @llvm.dbg.value(metadata i32 %12, metadata !16584, metadata !DIExpression()) #23, !dbg !17019
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17021, !srcloc !16590
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17022
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17022
  tail call void %26(%struct._timeout* noundef nonnull %9) #26, !dbg !17023
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16497, metadata !DIExpression()) #23, !dbg !17024
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17026, !srcloc !16512
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #23, !dbg !17028
  call void @llvm.dbg.value(metadata i32 undef, metadata !16510, metadata !DIExpression()) #23, !dbg !17028
  call void @llvm.dbg.value(metadata i32 undef, metadata !16503, metadata !DIExpression()) #23, !dbg !17024
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !17029
  br i1 %28, label %30, label %29, !dbg !17030

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #26, !dbg !17031
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !17031
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #26, !dbg !17031
  unreachable, !dbg !17031

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #23, !dbg !17028
  call void @llvm.dbg.value(metadata i32 undef, metadata !16503, metadata !DIExpression()) #23, !dbg !17024
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !17032
  call void @llvm.dbg.value(metadata i32 undef, metadata !16986, metadata !DIExpression()), !dbg !16990
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17033
  %32 = sub nsw i32 %31, %18, !dbg !17033
  store i32 %32, i32* @announce_remaining, align 4, !dbg !16990
  call void @llvm.dbg.value(metadata i32 undef, metadata !16986, metadata !DIExpression()), !dbg !16990
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17001
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17002
  br i1 %34, label %37, label %8, !dbg !17003, !llvm.loop !17034

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17036
  store i64 %36, i64* %13, align 8, !dbg !17036
  br label %41, !dbg !17039

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !16990
  %40 = sext i32 %39 to i64, !dbg !17040
  br label %41, !dbg !17040

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17040
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17041
  %45 = add i64 %44, %42, !dbg !17041
  store i64 %45, i64* @curr_tick, align 8, !dbg !17041
  store i32 0, i32* @announce_remaining, align 4, !dbg !17042
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17043
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #26, !dbg !17044
  call void @llvm.dbg.value(metadata i32 undef, metadata !16570, metadata !DIExpression()) #23, !dbg !17045
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16575, metadata !DIExpression()) #23, !dbg !17045
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !17047
  br i1 %47, label %49, label %48, !dbg !17048

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #26, !dbg !17049
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.312, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !17049
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #26, !dbg !17049
  unreachable, !dbg !17049

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !16990
  call void @llvm.dbg.value(metadata i32 %50, metadata !16570, metadata !DIExpression()) #23, !dbg !17045
  call void @llvm.dbg.value(metadata i32 %50, metadata !16584, metadata !DIExpression()) #23, !dbg !17050
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17052, !srcloc !16590
  ret void, !dbg !17053
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17054 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17056, metadata !DIExpression()), !dbg !17060
  call void @llvm.dbg.value(metadata i32 0, metadata !17057, metadata !DIExpression()), !dbg !17061
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16497, metadata !DIExpression()) #23, !dbg !17062
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17064, !srcloc !16512
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #23, !dbg !17066
  call void @llvm.dbg.value(metadata i32 undef, metadata !16510, metadata !DIExpression()) #23, !dbg !17066
  call void @llvm.dbg.value(metadata i32 undef, metadata !16503, metadata !DIExpression()) #23, !dbg !17062
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !17067
  br i1 %2, label %4, label %3, !dbg !17068

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.305, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #26, !dbg !17069
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.307, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !17069
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 148) #26, !dbg !17069
  unreachable, !dbg !17069

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16509, metadata !DIExpression()) #23, !dbg !17066
  call void @llvm.dbg.value(metadata i32 undef, metadata !16503, metadata !DIExpression()) #23, !dbg !17062
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !17070
  call void @llvm.dbg.value(metadata i32 undef, metadata !17059, metadata !DIExpression()), !dbg !17061
  call void @llvm.dbg.value(metadata i64 0, metadata !17056, metadata !DIExpression()), !dbg !17060
  call void @llvm.dbg.value(metadata i32 undef, metadata !17057, metadata !DIExpression()), !dbg !17061
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17071
  %6 = tail call fastcc i32 @elapsed.308() #24, !dbg !17074
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17056, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17060
  call void @llvm.dbg.value(metadata i32 undef, metadata !16570, metadata !DIExpression()) #23, !dbg !17075
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16575, metadata !DIExpression()) #23, !dbg !17075
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !17077
  br i1 %7, label %9, label %8, !dbg !17078

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.301, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.311, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #26, !dbg !17079
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.312, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #26, !dbg !17079
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.306, i32 0, i32 0), i32 noundef 194) #26, !dbg !17079
  unreachable, !dbg !17079

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17064
  call void @llvm.dbg.value(metadata i32 %10, metadata !16509, metadata !DIExpression()) #23, !dbg !17066
  call void @llvm.dbg.value(metadata i32 %10, metadata !16503, metadata !DIExpression()) #23, !dbg !17062
  call void @llvm.dbg.value(metadata i32 %10, metadata !17059, metadata !DIExpression()), !dbg !17061
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17056, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17060
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17056, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17060
  call void @llvm.dbg.value(metadata i32 undef, metadata !16570, metadata !DIExpression()) #23, !dbg !17075
  call void @llvm.dbg.value(metadata i32 undef, metadata !16584, metadata !DIExpression()) #23, !dbg !17080
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17082, !srcloc !16590
  call void @llvm.dbg.value(metadata i32 undef, metadata !17057, metadata !DIExpression()), !dbg !17061
  %11 = sext i32 %6 to i64, !dbg !17074
  %12 = add i64 %5, %11, !dbg !17083
  ret i64 %12, !dbg !17084
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17085 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17086
  %2 = trunc i64 %1 to i32, !dbg !17087
  ret i32 %2, !dbg !17088
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17089 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17090
  ret i64 %1, !dbg !17091
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17092 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17094, metadata !DIExpression()), !dbg !17101
  %2 = icmp eq i32 %0, 0, !dbg !17102
  br i1 %2, label %10, label %3, !dbg !17104

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17105
  call void @llvm.dbg.value(metadata i32 %4, metadata !17095, metadata !DIExpression()), !dbg !17101
  %5 = mul i32 %0, 84, !dbg !17106
  call void @llvm.dbg.value(metadata i32 %5, metadata !17096, metadata !DIExpression()), !dbg !17101
  br label %6, !dbg !17107

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17108
  call void @llvm.dbg.value(metadata i32 %7, metadata !17097, metadata !DIExpression()), !dbg !17109
  %8 = sub i32 %7, %4, !dbg !17110
  %9 = icmp ult i32 %8, %5, !dbg !17112
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17113
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17114 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !17115
  ret i32 %1, !dbg !17116
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17117 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #26, !dbg !17119
  ret i32 %1, !dbg !17120
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17121 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17125, metadata !DIExpression()), !dbg !17127
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17128

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17129
  br label %14, !dbg !17133

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17126, metadata !DIExpression()), !dbg !17127
  %6 = icmp slt i64 %2, -1, !dbg !17134
  br i1 %6, label %7, label %9, !dbg !17137

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17138
  br label %14, !dbg !17139

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17141
  %11 = icmp ugt i64 %2, 1, !dbg !17142
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17142
  %13 = add nsw i64 %10, %12, !dbg !17143
  br label %14, !dbg !17144

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17145
  ret i64 %15, !dbg !17146
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17147 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.332, i32 0, i32 0)) #26, !dbg !17149
  ret void, !dbg !17150
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nofree nosync nounwind willreturn }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!794, !2, !2589, !27, !282, !2591, !2605, !2607, !2644, !2646, !292, !345, !374, !2648, !2659, !2705, !2707, !2735, !2763, !2806, !2878, !2923, !387, !531, !2951, !567, !592, !832, !2956, !971, !1037, !1343, !1620, !2997, !1735, !1825, !2999, !3062, !3129, !1879, !3132, !1886, !2168, !3150, !2306, !2425, !3152, !2550, !3155}
!llvm.ident = !{!3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157, !3157}
!llvm.module.flags = !{!3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "forks", scope: !27, file: !116, line: 149, type: !278, isLocal: true, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !113, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/philosophers/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !104, !108, !109, !110, !111}
!102 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !103)
!103 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !105, line: 46, baseType: !106)
!105 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !107)
!107 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!109 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !112)
!112 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!113 = !{!114, !25, !266, !269}
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "fork_objs", scope: !27, file: !116, line: 146, type: !117, isLocal: false, isDefinition: true)
!116 = !DIFile(filename: "zephyr/samples/philosophers/src/phil_obj_abstract.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !118, size: 960, elements: !264)
!118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !119, line: 2720, size: 160, elements: !120)
!119 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!120 = !{!121, !142, !262, !263}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !118, file: !119, line: 2722, baseType: !122, size: 64)
!122 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !124)
!123 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !125)
!125 = !{!126}
!126 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !124, file: !123, line: 232, baseType: !127, size: 64)
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !130)
!130 = !{!131, !137}
!131 = !DIDerivedType(tag: DW_TAG_member, scope: !129, file: !128, line: 38, baseType: !132, size: 32)
!132 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !129, file: !128, line: 38, size: 32, elements: !133)
!133 = !{!134, !136}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !132, file: !128, line: 39, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !132, file: !128, line: 40, baseType: !135, size: 32)
!137 = !DIDerivedType(tag: DW_TAG_member, scope: !129, file: !128, line: 42, baseType: !138, size: 32, offset: 32)
!138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !129, file: !128, line: 42, size: 32, elements: !139)
!139 = !{!140, !141}
!140 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !138, file: !128, line: 43, baseType: !135, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !138, file: !128, line: 44, baseType: !135, size: 32)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !118, file: !119, line: 2724, baseType: !143, size: 32, offset: 64)
!143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !144, size: 32)
!144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !146)
!145 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!146 = !{!147, !196, !209, !210, !211, !223, !224, !229, !230, !238, !257}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !144, file: !145, line: 247, baseType: !148, size: 384)
!148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !149)
!149 = !{!150, !164, !166, !169, !170, !183, !184, !185}
!150 = !DIDerivedType(tag: DW_TAG_member, scope: !148, file: !145, line: 60, baseType: !151, size: 64)
!151 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !148, file: !145, line: 60, size: 64, elements: !152)
!152 = !{!153, !155}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !151, file: !145, line: 61, baseType: !154, size: 64)
!154 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !129)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !151, file: !145, line: 62, baseType: !156, size: 64)
!156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !158)
!157 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!158 = !{!159}
!159 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !156, file: !157, line: 50, baseType: !160, size: 64)
!160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 64, elements: !162)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 32)
!162 = !{!163}
!163 = !DISubrange(count: 2)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !148, file: !145, line: 68, baseType: !165, size: 32, offset: 64)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 32)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !148, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!167 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !168)
!168 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !148, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!170 = !DIDerivedType(tag: DW_TAG_member, scope: !148, file: !145, line: 90, baseType: !171, size: 16, offset: 112)
!171 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !148, file: !145, line: 90, size: 16, elements: !172)
!172 = !{!173, !180}
!173 = !DIDerivedType(tag: DW_TAG_member, scope: !171, file: !145, line: 91, baseType: !174, size: 16)
!174 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !171, file: !145, line: 91, size: 16, elements: !175)
!175 = !{!176, !179}
!176 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !174, file: !145, line: 96, baseType: !177, size: 8)
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !178)
!178 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !174, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !171, file: !145, line: 100, baseType: !181, size: 16)
!181 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !182)
!182 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !148, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !148, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !148, file: !145, line: 131, baseType: !186, size: 192, offset: 192)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !187)
!187 = !{!188, !189, !195}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !186, file: !123, line: 245, baseType: !154, size: 64)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !186, file: !123, line: 246, baseType: !190, size: 32, offset: 64)
!190 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !191)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 32)
!192 = !DISubroutineType(types: !193)
!193 = !{null, !194}
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !186, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !144, file: !145, line: 250, baseType: !197, size: 288, offset: 384)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !199)
!198 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!199 = !{!200, !201, !202, !203, !204, !205, !206, !207, !208}
!200 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !197, file: !198, line: 26, baseType: !110, size: 32)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !197, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !197, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !197, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !197, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !197, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !197, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !197, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !197, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !144, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !144, file: !145, line: 256, baseType: !122, size: 64, offset: 704)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !144, file: !145, line: 271, baseType: !212, size: 128, offset: 768)
!212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !213)
!213 = !{!214, !220, !221, !222}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !212, file: !145, line: 35, baseType: !215, size: 32)
!215 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !216, line: 46, baseType: !217)
!216 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 32)
!218 = !DISubroutineType(types: !219)
!219 = !{null, !108, !108, !108}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !212, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !212, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !212, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !144, file: !145, line: 274, baseType: !143, size: 32, offset: 896)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !144, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 256, elements: !227)
!226 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!227 = !{!228}
!228 = !DISubrange(count: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !144, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !144, file: !145, line: 300, baseType: !231, size: 96, offset: 1216)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !232)
!232 = !{!233, !234, !237}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !231, file: !145, line: 153, baseType: !22, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !231, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!235 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !236, line: 214, baseType: !32)
!236 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!237 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !231, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !144, file: !145, line: 325, baseType: !239, size: 32, offset: 1312)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 32)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !241)
!241 = !{!242, !251, !252}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !240, file: !119, line: 5074, baseType: !243, size: 96)
!243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !245)
!244 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!245 = !{!246, !249, !250}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !243, file: !244, line: 57, baseType: !247, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 32)
!248 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !244, line: 57, flags: DIFlagFwdDecl)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !243, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !243, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !240, file: !119, line: 5075, baseType: !122, size: 64, offset: 96)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !240, file: !119, line: 5076, baseType: !253, size: 32, offset: 160)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !255)
!254 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!255 = !{!256}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !253, file: !254, line: 52, baseType: !22, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !144, file: !145, line: 343, baseType: !258, size: 64, offset: 1344)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !259)
!259 = !{!260, !261}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !258, file: !198, line: 63, baseType: !110, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !258, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !118, file: !119, line: 2727, baseType: !110, size: 32, offset: 96)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !118, file: !119, line: 2730, baseType: !109, size: 32, offset: 128)
!264 = !{!265}
!265 = !DISubrange(count: 6)
!266 = !DIGlobalVariableExpression(var: !267, expr: !DIExpression())
!267 = distinct !DIGlobalVariable(name: "threads", scope: !27, file: !116, line: 160, type: !268, isLocal: true, isDefinition: true)
!268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 8448, elements: !264)
!269 = !DIGlobalVariableExpression(var: !270, expr: !DIExpression())
!270 = distinct !DIGlobalVariable(name: "stacks", scope: !27, file: !116, line: 159, type: !271, isLocal: true, isDefinition: true, align: 512)
!271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 101376, elements: !276)
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !273, line: 47, size: 8, elements: !274)
!273 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!274 = !{!275}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !272, file: !273, line: 48, baseType: !226, size: 8)
!276 = !{!265, !277}
!277 = !DISubrange(count: 2112)
!278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 192, elements: !264)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!280 = !DIGlobalVariableExpression(var: !281, expr: !DIExpression())
!281 = distinct !DIGlobalVariable(name: "_char_out", scope: !282, file: !286, line: 54, type: !287, isLocal: false, isDefinition: true)
!282 = distinct !DICompileUnit(language: DW_LANG_C99, file: !283, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, globals: !285, splitDebugInlining: false, nameTableKind: None)
!283 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!284 = !{!108, !109}
!285 = !{!280}
!286 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DISubroutineType(types: !289)
!289 = !{!109, !109}
!290 = !DIGlobalVariableExpression(var: !291, expr: !DIExpression())
!291 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !292, file: !309, line: 56, type: !310, isLocal: true, isDefinition: true, align: 32)
!292 = distinct !DICompileUnit(language: DW_LANG_C99, file: !293, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !294, globals: !308, splitDebugInlining: false, nameTableKind: None)
!293 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!294 = !{!295}
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 32)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !297, line: 407, baseType: !298)
!297 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 398, size: 224, elements: !299)
!299 = !{!300, !302, !303, !304, !305, !306, !307}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !298, file: !297, line: 400, baseType: !301, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !110)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !298, file: !297, line: 401, baseType: !301, size: 32, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !298, file: !297, line: 402, baseType: !301, size: 32, offset: 64)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !298, file: !297, line: 403, baseType: !301, size: 32, offset: 96)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !298, file: !297, line: 404, baseType: !301, size: 32, offset: 128)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !298, file: !297, line: 405, baseType: !301, size: 32, offset: 160)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !298, file: !297, line: 406, baseType: !301, size: 32, offset: 192)
!308 = !{!290}
!309 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!310 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !311)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !313)
!312 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!313 = !{!314, !342}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !311, file: !312, line: 60, baseType: !315, size: 32)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!316 = !DISubroutineType(types: !317)
!317 = !{!109, !318}
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 32)
!319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !320)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !322)
!321 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!322 = !{!323, !326, !327, !328, !335, !336}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !320, file: !321, line: 380, baseType: !324, size: 32)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 32)
!325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !226)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !320, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !320, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !320, file: !321, line: 386, baseType: !329, size: 32, offset: 96)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 32)
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !331)
!331 = !{!332, !333}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !330, file: !321, line: 359, baseType: !167, size: 8)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !330, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!334 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !320, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !320, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !339)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !321, line: 43, baseType: !340)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !341)
!341 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !311, file: !312, line: 65, baseType: !318, size: 32, offset: 32)
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !345, file: !348, line: 71, type: !349, isLocal: true, isDefinition: true, align: 32)
!345 = distinct !DICompileUnit(language: DW_LANG_C99, file: !346, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !347, splitDebugInlining: false, nameTableKind: None)
!346 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!347 = !{!343}
!348 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !351)
!351 = !{!352, !371}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !350, file: !312, line: 60, baseType: !353, size: 32)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!354 = !DISubroutineType(types: !355)
!355 = !{!109, !356}
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 32)
!357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !358)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !359)
!359 = !{!360, !361, !362, !363, !369, !370}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !358, file: !321, line: 380, baseType: !324, size: 32)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !358, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !358, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !358, file: !321, line: 386, baseType: !364, size: 32, offset: 96)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !366)
!366 = !{!367, !368}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !365, file: !321, line: 359, baseType: !167, size: 8)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !365, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !358, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !358, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !350, file: !312, line: 65, baseType: !356, size: 32, offset: 32)
!372 = !DIGlobalVariableExpression(var: !373, expr: !DIExpression())
!373 = distinct !DIGlobalVariable(name: "_kernel_thread_info_offsets", scope: !374, file: !379, line: 41, type: !382, isLocal: false, isDefinition: true)
!374 = distinct !DICompileUnit(language: DW_LANG_C99, file: !375, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, globals: !376, splitDebugInlining: false, nameTableKind: None)
!375 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/debug/thread_info.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!376 = !{!372, !377, !380}
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "_kernel_thread_info_num_offsets", scope: !374, file: !379, line: 140, type: !235, isLocal: false, isDefinition: true)
!379 = !DIFile(filename: "zephyr/subsys/debug/thread_info.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!380 = !DIGlobalVariableExpression(var: !381, expr: !DIExpression())
!381 = distinct !DIGlobalVariable(name: "_kernel_thread_info_size_t_size", scope: !374, file: !379, line: 145, type: !167, isLocal: false, isDefinition: true)
!382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 448, elements: !383)
!383 = !{!384}
!384 = !DISubrange(count: 14)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "static_regions", scope: !387, file: !394, line: 62, type: !527, isLocal: true, isDefinition: true)
!387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !389, globals: !390, splitDebugInlining: false, nameTableKind: None)
!388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!389 = !{!235, !109, !110, !108}
!390 = !{!391, !385}
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !393, file: !394, line: 198, type: !513, isLocal: true, isDefinition: true)
!393 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !394, file: !394, line: 175, type: !395, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !508)
!394 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DISubroutineType(types: !396)
!396 = !{null, !397}
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !399)
!399 = !{!400, !458, !470, !471, !472, !479, !480, !481, !482, !488, !503}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !398, file: !145, line: 247, baseType: !401, size: 384)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !402)
!402 = !{!403, !427, !434, !435, !436, !445, !446, !447}
!403 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !145, line: 60, baseType: !404, size: 64)
!404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !145, line: 60, size: 64, elements: !405)
!405 = !{!406, !421}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !404, file: !145, line: 61, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !408)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !409)
!409 = !{!410, !416}
!410 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !128, line: 38, baseType: !411, size: 32)
!411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !128, line: 38, size: 32, elements: !412)
!412 = !{!413, !415}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !411, file: !128, line: 39, baseType: !414, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !411, file: !128, line: 40, baseType: !414, size: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !128, line: 42, baseType: !417, size: 32, offset: 32)
!417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !128, line: 42, size: 32, elements: !418)
!418 = !{!419, !420}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !417, file: !128, line: 43, baseType: !414, size: 32)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !417, file: !128, line: 44, baseType: !414, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !404, file: !145, line: 62, baseType: !422, size: 64)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !423)
!423 = !{!424}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !422, file: !157, line: 50, baseType: !425, size: 64)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 64, elements: !162)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !401, file: !145, line: 68, baseType: !428, size: 32, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !430)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !431)
!431 = !{!432}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !430, file: !123, line: 232, baseType: !433, size: 64)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !408)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !401, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !401, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!436 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !145, line: 90, baseType: !437, size: 16, offset: 112)
!437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !145, line: 90, size: 16, elements: !438)
!438 = !{!439, !444}
!439 = !DIDerivedType(tag: DW_TAG_member, scope: !437, file: !145, line: 91, baseType: !440, size: 16)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !437, file: !145, line: 91, size: 16, elements: !441)
!441 = !{!442, !443}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !440, file: !145, line: 96, baseType: !177, size: 8)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !440, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !437, file: !145, line: 100, baseType: !181, size: 16)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !401, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !401, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !401, file: !145, line: 131, baseType: !448, size: 192, offset: 192)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !449)
!449 = !{!450, !451, !457}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !448, file: !123, line: 245, baseType: !407, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !448, file: !123, line: 246, baseType: !452, size: 32, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !453)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 32)
!454 = !DISubroutineType(types: !455)
!455 = !{null, !456}
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !448, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !398, file: !145, line: 250, baseType: !459, size: 288, offset: 384)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !460)
!460 = !{!461, !462, !463, !464, !465, !466, !467, !468, !469}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !459, file: !198, line: 26, baseType: !110, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !459, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !459, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !459, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !459, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !459, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !459, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !459, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !459, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !398, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !398, file: !145, line: 256, baseType: !429, size: 64, offset: 704)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !398, file: !145, line: 271, baseType: !473, size: 128, offset: 768)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !474)
!474 = !{!475, !476, !477, !478}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !473, file: !145, line: 35, baseType: !215, size: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !473, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !473, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !473, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !398, file: !145, line: 274, baseType: !397, size: 32, offset: 896)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !398, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !398, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !398, file: !145, line: 300, baseType: !483, size: 96, offset: 1216)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !484)
!484 = !{!485, !486, !487}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !483, file: !145, line: 153, baseType: !22, size: 32)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !483, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !483, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !398, file: !145, line: 325, baseType: !489, size: 32, offset: 1312)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 32)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !491)
!491 = !{!492, !498, !499}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !490, file: !119, line: 5074, baseType: !493, size: 96)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !494)
!494 = !{!495, !496, !497}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !493, file: !244, line: 57, baseType: !247, size: 32)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !493, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !493, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !490, file: !119, line: 5075, baseType: !429, size: 64, offset: 96)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !490, file: !119, line: 5076, baseType: !500, size: 32, offset: 160)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !501)
!501 = !{!502}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !500, file: !254, line: 52, baseType: !22, size: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !398, file: !145, line: 343, baseType: !504, size: 64, offset: 1344)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !505)
!505 = !{!506, !507}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !504, file: !198, line: 63, baseType: !110, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !504, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!508 = !{!509, !510, !511, !512}
!509 = !DILocalVariable(name: "thread", arg: 1, scope: !393, file: !394, line: 175, type: !397)
!510 = !DILocalVariable(name: "region_num", scope: !393, file: !394, line: 200, type: !167)
!511 = !DILocalVariable(name: "guard_start", scope: !393, file: !394, line: 265, type: !22)
!512 = !DILocalVariable(name: "guard_size", scope: !393, file: !394, line: 266, type: !235)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 96, elements: !525)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !515, line: 52, size: 96, elements: !516)
!515 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!516 = !{!517, !518, !519}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !514, file: !515, line: 53, baseType: !22, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !514, file: !515, line: 54, baseType: !235, size: 32, offset: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !514, file: !515, line: 55, baseType: !520, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !521, line: 151, baseType: !522)
!521 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !521, line: 149, size: 32, elements: !523)
!523 = !{!524}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !522, file: !521, line: 150, baseType: !110, size: 32)
!525 = !{!526}
!526 = !DISubrange(count: 1)
!527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !528, size: 96, elements: !525)
!528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !514)
!529 = !DIGlobalVariableExpression(var: !530, expr: !DIExpression())
!530 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !531, file: !564, line: 39, type: !167, isLocal: true, isDefinition: true)
!531 = distinct !DICompileUnit(language: DW_LANG_C99, file: !532, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !533, globals: !563, splitDebugInlining: false, nameTableKind: None)
!532 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!533 = !{!534, !108, !109, !551, !167}
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 32)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !536, line: 1226, baseType: !537)
!536 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 1213, size: 352, elements: !538)
!538 = !{!539, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !537, file: !536, line: 1215, baseType: !540, size: 32)
!540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !301)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !537, file: !536, line: 1216, baseType: !301, size: 32, offset: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !537, file: !536, line: 1217, baseType: !301, size: 32, offset: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !537, file: !536, line: 1218, baseType: !301, size: 32, offset: 96)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !537, file: !536, line: 1219, baseType: !301, size: 32, offset: 128)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !537, file: !536, line: 1220, baseType: !301, size: 32, offset: 160)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !537, file: !536, line: 1221, baseType: !301, size: 32, offset: 192)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !537, file: !536, line: 1222, baseType: !301, size: 32, offset: 224)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !537, file: !536, line: 1223, baseType: !301, size: 32, offset: 256)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !537, file: !536, line: 1224, baseType: !301, size: 32, offset: 288)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !537, file: !536, line: 1225, baseType: !301, size: 32, offset: 320)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 32)
!552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !553)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !554, line: 27, size: 96, elements: !555)
!554 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!555 = !{!556, !557, !558}
!556 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !553, file: !554, line: 29, baseType: !110, size: 32)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !553, file: !554, line: 31, baseType: !324, size: 32, offset: 32)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !553, file: !554, line: 37, baseType: !559, size: 32, offset: 64)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !521, line: 146, baseType: !560)
!560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !521, line: 141, size: 32, elements: !561)
!561 = !{!562}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !560, file: !521, line: 143, baseType: !110, size: 32)
!563 = !{!529}
!564 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!565 = !DIGlobalVariableExpression(var: !566, expr: !DIExpression())
!566 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !567, file: !572, line: 13, type: !589, isLocal: true, isDefinition: true)
!567 = distinct !DICompileUnit(language: DW_LANG_C99, file: !568, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !569, splitDebugInlining: false, nameTableKind: None)
!568 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!569 = !{!570, !565}
!570 = !DIGlobalVariableExpression(var: !571, expr: !DIExpression())
!571 = distinct !DIGlobalVariable(name: "mpu_config", scope: !567, file: !572, line: 37, type: !573, isLocal: false, isDefinition: true)
!572 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !574)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !554, line: 41, size: 64, elements: !575)
!575 = !{!576, !577}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !574, file: !554, line: 43, baseType: !110, size: 32)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !574, file: !554, line: 45, baseType: !578, size: 32, offset: 32)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 32)
!579 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !580)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !554, line: 27, size: 96, elements: !581)
!581 = !{!582, !583, !584}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !580, file: !554, line: 29, baseType: !110, size: 32)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !580, file: !554, line: 31, baseType: !324, size: 32, offset: 32)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !580, file: !554, line: 37, baseType: !585, size: 32, offset: 64)
!585 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !521, line: 146, baseType: !586)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !521, line: 141, size: 32, elements: !587)
!587 = !{!588}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !586, file: !521, line: 143, baseType: !110, size: 32)
!589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !579, size: 192, elements: !162)
!590 = !DIGlobalVariableExpression(var: !591, expr: !DIExpression())
!591 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !592, file: !705, line: 72, type: !789, isLocal: true, isDefinition: true)
!592 = distinct !DICompileUnit(language: DW_LANG_C99, file: !593, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !594, retainedTypes: !691, globals: !702, splitDebugInlining: false, nameTableKind: None)
!593 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!594 = !{!30, !595}
!595 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !297, line: 65, baseType: !109, size: 32, elements: !596)
!596 = !{!597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690}
!597 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!598 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!599 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!600 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!601 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!602 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!603 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!604 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!605 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!606 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!607 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!608 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!609 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!610 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!611 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!612 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!613 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!614 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!615 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!616 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!617 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!618 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!619 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!620 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!621 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!622 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!623 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!624 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!625 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!626 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!627 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!628 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!629 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!630 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!631 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!632 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!633 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!634 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!635 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!636 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!637 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!638 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!639 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!640 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!641 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!642 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!643 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!644 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!645 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!646 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!647 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!648 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!649 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!650 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!651 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!652 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!653 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!654 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!655 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!656 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!657 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!658 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!659 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!660 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!661 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!662 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!663 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!664 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!665 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!666 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!667 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!668 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!669 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!670 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!671 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!672 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!673 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!674 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!675 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!676 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!677 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!678 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!679 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!680 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!681 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!682 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!683 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!684 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!685 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!686 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!687 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!688 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!689 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!690 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!691 = !{!235, !109, !108, !692}
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 32)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !297, line: 392, baseType: !694)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 384, size: 192, elements: !695)
!695 = !{!696, !697, !698, !699, !700, !701}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !694, file: !297, line: 386, baseType: !301, size: 32)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !694, file: !297, line: 387, baseType: !301, size: 32, offset: 32)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !694, file: !297, line: 388, baseType: !301, size: 32, offset: 64)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !694, file: !297, line: 389, baseType: !301, size: 32, offset: 96)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !694, file: !297, line: 390, baseType: !301, size: 32, offset: 128)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !694, file: !297, line: 391, baseType: !301, size: 32, offset: 160)
!702 = !{!703, !709, !725, !736, !753, !590, !755, !769, !771, !773, !775, !777, !779, !781, !783, !785, !787}
!703 = !DIGlobalVariableExpression(var: !704, expr: !DIExpression())
!704 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !592, file: !705, line: 424, type: !706, isLocal: false, isDefinition: true, align: 16)
!705 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 64, elements: !707)
!707 = !{!708}
!708 = !DISubrange(count: 4)
!709 = !DIGlobalVariableExpression(var: !710, expr: !DIExpression())
!710 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !592, file: !705, line: 424, type: !711, isLocal: false, isDefinition: true, align: 32)
!711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !712)
!712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !713)
!713 = !{!714, !715, !716, !717, !723, !724}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !712, file: !321, line: 380, baseType: !324, size: 32)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !712, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !712, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !712, file: !321, line: 386, baseType: !718, size: 32, offset: 96)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 32)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !720)
!720 = !{!721, !722}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !719, file: !321, line: 359, baseType: !167, size: 8)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !719, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !712, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !712, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!725 = !DIGlobalVariableExpression(var: !726, expr: !DIExpression())
!726 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !592, file: !705, line: 424, type: !727, isLocal: true, isDefinition: true, align: 32)
!727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !728)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !729)
!729 = !{!730, !735}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !728, file: !312, line: 60, baseType: !731, size: 32)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 32)
!732 = !DISubroutineType(types: !733)
!733 = !{!109, !734}
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 32)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !728, file: !312, line: 65, baseType: !734, size: 32, offset: 32)
!736 = !DIGlobalVariableExpression(var: !737, expr: !DIExpression())
!737 = distinct !DIGlobalVariable(name: "exti_data", scope: !592, file: !705, line: 423, type: !738, isLocal: true, isDefinition: true)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !705, line: 107, size: 1472, elements: !739)
!739 = !{!740}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !738, file: !705, line: 109, baseType: !741, size: 1472)
!741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !742, size: 1472, elements: !751)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !705, line: 101, size: 64, elements: !743)
!743 = !{!744, !750}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !742, file: !705, line: 102, baseType: !745, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !746, line: 63, baseType: !747)
!746 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 32)
!748 = !DISubroutineType(types: !749)
!749 = !{null, !109, !108}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !742, file: !705, line: 103, baseType: !108, size: 32, offset: 32)
!751 = !{!752}
!752 = !DISubrange(count: 23)
!753 = !DIGlobalVariableExpression(var: !754, expr: !DIExpression())
!754 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !592, file: !705, line: 424, type: !719, isLocal: true, isDefinition: true, align: 8)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !757, file: !705, line: 493, type: !762, isLocal: true, isDefinition: true, align: 32)
!757 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !705, file: !705, line: 460, type: !758, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !760)
!758 = !DISubroutineType(types: !759)
!759 = !{null, !734}
!760 = !{!761}
!761 = !DILocalVariable(name: "dev", arg: 1, scope: !757, file: !705, line: 460, type: !734)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !763)
!763 = !{!764, !766, !767, !768}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !762, file: !10, line: 55, baseType: !765, size: 32)
!765 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !109)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !762, file: !10, line: 57, baseType: !765, size: 32, offset: 32)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !762, file: !10, line: 59, baseType: !108, size: 32, offset: 64)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !762, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !757, file: !705, line: 497, type: !762, isLocal: true, isDefinition: true, align: 32)
!771 = !DIGlobalVariableExpression(var: !772, expr: !DIExpression())
!772 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !757, file: !705, line: 507, type: !762, isLocal: true, isDefinition: true, align: 32)
!773 = !DIGlobalVariableExpression(var: !774, expr: !DIExpression())
!774 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !757, file: !705, line: 512, type: !762, isLocal: true, isDefinition: true, align: 32)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !757, file: !705, line: 516, type: !762, isLocal: true, isDefinition: true, align: 32)
!777 = !DIGlobalVariableExpression(var: !778, expr: !DIExpression())
!778 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !757, file: !705, line: 523, type: !762, isLocal: true, isDefinition: true, align: 32)
!779 = !DIGlobalVariableExpression(var: !780, expr: !DIExpression())
!780 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !757, file: !705, line: 527, type: !762, isLocal: true, isDefinition: true, align: 32)
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !757, file: !705, line: 581, type: !762, isLocal: true, isDefinition: true, align: 32)
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !757, file: !705, line: 586, type: !762, isLocal: true, isDefinition: true, align: 32)
!785 = !DIGlobalVariableExpression(var: !786, expr: !DIExpression())
!786 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !757, file: !705, line: 591, type: !762, isLocal: true, isDefinition: true, align: 32)
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !757, file: !705, line: 595, type: !762, isLocal: true, isDefinition: true, align: 32)
!789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !790, size: 736, elements: !751)
!790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !791)
!791 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !297, line: 163, baseType: !595)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !794, file: !799, line: 25, type: !827, isLocal: false, isDefinition: true, align: 16)
!794 = distinct !DICompileUnit(language: DW_LANG_C99, file: !795, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !796, splitDebugInlining: false, nameTableKind: None)
!795 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!796 = !{!797, !792, !803, !805, !807, !809, !811, !813, !815, !817, !819, !821, !823, !825}
!797 = !DIGlobalVariableExpression(var: !798, expr: !DIExpression())
!798 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !794, file: !799, line: 20, type: !800, isLocal: false, isDefinition: true, align: 16)
!799 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 240, elements: !801)
!801 = !{!802}
!802 = !DISubrange(count: 15)
!803 = !DIGlobalVariableExpression(var: !804, expr: !DIExpression())
!804 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !794, file: !799, line: 32, type: !706, isLocal: false, isDefinition: true, align: 16)
!805 = !DIGlobalVariableExpression(var: !806, expr: !DIExpression())
!806 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !794, file: !799, line: 39, type: !706, isLocal: false, isDefinition: true, align: 16)
!807 = !DIGlobalVariableExpression(var: !808, expr: !DIExpression())
!808 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !794, file: !799, line: 46, type: !706, isLocal: false, isDefinition: true, align: 16)
!809 = !DIGlobalVariableExpression(var: !810, expr: !DIExpression())
!810 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !794, file: !799, line: 53, type: !706, isLocal: false, isDefinition: true, align: 16)
!811 = !DIGlobalVariableExpression(var: !812, expr: !DIExpression())
!812 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !794, file: !799, line: 60, type: !706, isLocal: false, isDefinition: true, align: 16)
!813 = !DIGlobalVariableExpression(var: !814, expr: !DIExpression())
!814 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !794, file: !799, line: 67, type: !706, isLocal: false, isDefinition: true, align: 16)
!815 = !DIGlobalVariableExpression(var: !816, expr: !DIExpression())
!816 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !794, file: !799, line: 74, type: !706, isLocal: false, isDefinition: true, align: 16)
!817 = !DIGlobalVariableExpression(var: !818, expr: !DIExpression())
!818 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !794, file: !799, line: 81, type: !706, isLocal: false, isDefinition: true, align: 16)
!819 = !DIGlobalVariableExpression(var: !820, expr: !DIExpression())
!820 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !794, file: !799, line: 88, type: !706, isLocal: false, isDefinition: true, align: 16)
!821 = !DIGlobalVariableExpression(var: !822, expr: !DIExpression())
!822 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !794, file: !799, line: 95, type: !706, isLocal: false, isDefinition: true, align: 16)
!823 = !DIGlobalVariableExpression(var: !824, expr: !DIExpression())
!824 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !794, file: !799, line: 102, type: !706, isLocal: false, isDefinition: true, align: 16)
!825 = !DIGlobalVariableExpression(var: !826, expr: !DIExpression())
!826 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !794, file: !799, line: 109, type: !706, isLocal: false, isDefinition: true, align: 16)
!827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 48, elements: !828)
!828 = !{!829}
!829 = !DISubrange(count: 3)
!830 = !DIGlobalVariableExpression(var: !831, expr: !DIExpression())
!831 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !832, file: !897, line: 398, type: !930, isLocal: true, isDefinition: true)
!832 = distinct !DICompileUnit(language: DW_LANG_C99, file: !833, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !834, retainedTypes: !847, globals: !894, splitDebugInlining: false, nameTableKind: None)
!833 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!834 = !{!835, !30, !840}
!835 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !836, line: 197, baseType: !32, size: 32, elements: !837)
!836 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!837 = !{!838, !839}
!838 = !DIEnumerator(name: "SUCCESS", value: 0)
!839 = !DIEnumerator(name: "ERROR", value: 1)
!840 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !841, line: 44, baseType: !32, size: 32, elements: !842)
!841 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!842 = !{!843, !844, !845, !846}
!843 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!844 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!845 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!846 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!847 = !{!108, !109, !110, !848, !887, !893}
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 32)
!849 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !297, line: 586, baseType: !850)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 550, size: 1216, elements: !851)
!851 = !{!852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !850, file: !297, line: 552, baseType: !301, size: 32)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !850, file: !297, line: 553, baseType: !301, size: 32, offset: 32)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !850, file: !297, line: 554, baseType: !301, size: 32, offset: 64)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !850, file: !297, line: 555, baseType: !301, size: 32, offset: 96)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !850, file: !297, line: 556, baseType: !301, size: 32, offset: 128)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !850, file: !297, line: 557, baseType: !301, size: 32, offset: 160)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !850, file: !297, line: 558, baseType: !301, size: 32, offset: 192)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !850, file: !297, line: 559, baseType: !110, size: 32, offset: 224)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !850, file: !297, line: 560, baseType: !301, size: 32, offset: 256)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !850, file: !297, line: 561, baseType: !301, size: 32, offset: 288)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !850, file: !297, line: 562, baseType: !863, size: 64, offset: 320)
!863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 64, elements: !162)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !850, file: !297, line: 563, baseType: !301, size: 32, offset: 384)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !850, file: !297, line: 564, baseType: !301, size: 32, offset: 416)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !850, file: !297, line: 565, baseType: !301, size: 32, offset: 448)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !850, file: !297, line: 566, baseType: !110, size: 32, offset: 480)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !850, file: !297, line: 567, baseType: !301, size: 32, offset: 512)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !850, file: !297, line: 568, baseType: !301, size: 32, offset: 544)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !850, file: !297, line: 569, baseType: !863, size: 64, offset: 576)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !850, file: !297, line: 570, baseType: !301, size: 32, offset: 640)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !850, file: !297, line: 571, baseType: !301, size: 32, offset: 672)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !850, file: !297, line: 572, baseType: !301, size: 32, offset: 704)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !850, file: !297, line: 573, baseType: !110, size: 32, offset: 736)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !850, file: !297, line: 574, baseType: !301, size: 32, offset: 768)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !850, file: !297, line: 575, baseType: !301, size: 32, offset: 800)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !850, file: !297, line: 576, baseType: !863, size: 64, offset: 832)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !850, file: !297, line: 577, baseType: !301, size: 32, offset: 896)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !850, file: !297, line: 578, baseType: !301, size: 32, offset: 928)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !850, file: !297, line: 579, baseType: !863, size: 64, offset: 960)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !850, file: !297, line: 580, baseType: !301, size: 32, offset: 1024)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !850, file: !297, line: 581, baseType: !301, size: 32, offset: 1056)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !850, file: !297, line: 582, baseType: !301, size: 32, offset: 1088)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !850, file: !297, line: 583, baseType: !301, size: 32, offset: 1120)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !850, file: !297, line: 584, baseType: !301, size: 32, offset: 1152)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !850, file: !297, line: 585, baseType: !301, size: 32, offset: 1184)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 32)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !889, line: 343, size: 64, elements: !890)
!889 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!890 = !{!891, !892}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !888, file: !889, line: 344, baseType: !110, size: 32)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !888, file: !889, line: 345, baseType: !110, size: 32, offset: 32)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!894 = !{!895, !901, !917, !928, !830}
!895 = !DIGlobalVariableExpression(var: !896, expr: !DIExpression())
!896 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !832, file: !897, line: 752, type: !898, isLocal: false, isDefinition: true, align: 16)
!897 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 800, elements: !899)
!899 = !{!900}
!900 = !DISubrange(count: 50)
!901 = !DIGlobalVariableExpression(var: !902, expr: !DIExpression())
!902 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !832, file: !897, line: 752, type: !903, isLocal: false, isDefinition: true, align: 32)
!903 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !904)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !905)
!905 = !{!906, !907, !908, !909, !915, !916}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !904, file: !321, line: 380, baseType: !324, size: 32)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !904, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !904, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !904, file: !321, line: 386, baseType: !910, size: 32, offset: 96)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 32)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !912)
!912 = !{!913, !914}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !911, file: !321, line: 359, baseType: !167, size: 8)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !911, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !904, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !904, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!917 = !DIGlobalVariableExpression(var: !918, expr: !DIExpression())
!918 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !832, file: !897, line: 752, type: !919, isLocal: true, isDefinition: true, align: 32)
!919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !920)
!920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !921)
!921 = !{!922, !927}
!922 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !920, file: !312, line: 60, baseType: !923, size: 32)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 32)
!924 = !DISubroutineType(types: !925)
!925 = !{!109, !926}
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 32)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !920, file: !312, line: 65, baseType: !926, size: 32, offset: 32)
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !832, file: !897, line: 752, type: !911, isLocal: true, isDefinition: true, align: 8)
!930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !841, line: 100, size: 224, elements: !931)
!931 = !{!932, !938, !939, !948, !953, !958, !964}
!932 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !930, file: !841, line: 101, baseType: !933, size: 32)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !841, line: 76, baseType: !934)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 32)
!935 = !DISubroutineType(types: !936)
!936 = !{!109, !926, !937}
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !841, line: 56, baseType: !108)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !930, file: !841, line: 102, baseType: !933, size: 32, offset: 32)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !930, file: !841, line: 103, baseType: !940, size: 32, offset: 64)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !841, line: 83, baseType: !941)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!942 = !DISubroutineType(types: !943)
!943 = !{!109, !926, !937, !944, !108}
!944 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !841, line: 72, baseType: !945)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 32)
!946 = !DISubroutineType(types: !947)
!947 = !{null, !926, !937, !108}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !930, file: !841, line: 104, baseType: !949, size: 32, offset: 96)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !841, line: 79, baseType: !950)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 32)
!951 = !DISubroutineType(types: !952)
!952 = !{!109, !926, !937, !893}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !930, file: !841, line: 105, baseType: !954, size: 32, offset: 128)
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !841, line: 88, baseType: !955)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DISubroutineType(types: !957)
!957 = !{!840, !926, !937}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !930, file: !841, line: 106, baseType: !959, size: 32, offset: 160)
!959 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !841, line: 92, baseType: !960)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 32)
!961 = !DISubroutineType(types: !962)
!962 = !{!109, !926, !937, !963}
!963 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !841, line: 64, baseType: !108)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !930, file: !841, line: 107, baseType: !965, size: 32, offset: 192)
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !841, line: 96, baseType: !966)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 32)
!967 = !DISubroutineType(types: !968)
!968 = !{!109, !926, !937, !108}
!969 = !DIGlobalVariableExpression(var: !970, expr: !DIExpression())
!970 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !971, file: !1028, line: 603, type: !1030, isLocal: true, isDefinition: true, align: 32)
!971 = distinct !DICompileUnit(language: DW_LANG_C99, file: !972, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !973, globals: !1025, splitDebugInlining: false, nameTableKind: None)
!972 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!973 = !{!108, !109, !974}
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 32)
!975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !977, line: 336, size: 160, elements: !978)
!977 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!978 = !{!979, !999, !1003, !1007, !1020}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !976, file: !977, line: 365, baseType: !980, size: 32)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!981 = !DISubroutineType(types: !982)
!982 = !{!109, !983, !998}
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 32)
!984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !985)
!985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !986)
!986 = !{!987, !988, !989, !990, !996, !997}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !985, file: !321, line: 380, baseType: !324, size: 32)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !985, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !985, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !985, file: !321, line: 386, baseType: !991, size: 32, offset: 96)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 32)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !993)
!993 = !{!994, !995}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !992, file: !321, line: 359, baseType: !167, size: 8)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !992, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !985, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !985, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 32)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !976, file: !977, line: 366, baseType: !1000, size: 32, offset: 32)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 32)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{null, !983, !168}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !976, file: !977, line: 374, baseType: !1004, size: 32, offset: 64)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 32)
!1005 = !DISubroutineType(types: !1006)
!1006 = !{!109, !983}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !976, file: !977, line: 377, baseType: !1008, size: 32, offset: 96)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 32)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{!109, !983, !1011}
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 32)
!1012 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1013)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !977, line: 122, size: 64, elements: !1014)
!1014 = !{!1015, !1016, !1017, !1018, !1019}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1013, file: !977, line: 123, baseType: !110, size: 32)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1013, file: !977, line: 124, baseType: !167, size: 8, offset: 32)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1013, file: !977, line: 125, baseType: !167, size: 8, offset: 40)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1013, file: !977, line: 126, baseType: !167, size: 8, offset: 48)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1013, file: !977, line: 127, baseType: !167, size: 8, offset: 56)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !976, file: !977, line: 379, baseType: !1021, size: 32, offset: 128)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1022 = !DISubroutineType(types: !1023)
!1023 = !{!109, !983, !1024}
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 32)
!1025 = !{!969, !1026}
!1026 = !DIGlobalVariableExpression(var: !1027, expr: !DIExpression())
!1027 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !971, file: !1028, line: 38, type: !1029, isLocal: true, isDefinition: true)
!1028 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !983)
!1030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1031)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !1032)
!1032 = !{!1033, !1034}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1031, file: !312, line: 60, baseType: !1004, size: 32)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1031, file: !312, line: 65, baseType: !983, size: 32, offset: 32)
!1035 = !DIGlobalVariableExpression(var: !1036, expr: !DIExpression())
!1036 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1037, file: !1209, line: 762, type: !1318, isLocal: true, isDefinition: true)
!1037 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1038, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1039, retainedTypes: !1057, globals: !1206, splitDebugInlining: false, nameTableKind: None)
!1038 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!1039 = !{!30, !1040, !1046, !1051, !840}
!1040 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1041, line: 506, baseType: !32, size: 32, elements: !1042)
!1041 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1042 = !{!1043, !1044, !1045}
!1043 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1044 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1045 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1046 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1041, line: 512, baseType: !32, size: 32, elements: !1047)
!1047 = !{!1048, !1049, !1050}
!1048 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1049 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1050 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1051 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !746, line: 43, baseType: !32, size: 32, elements: !1052)
!1052 = !{!1053, !1054, !1055, !1056}
!1053 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1054 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1055 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1056 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1057 = !{!108, !109, !1058, !1128, !1133, !1093, !1046, !1040, !1138, !1139, !110, !1153, !1108, !1165, !1166, !1167}
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 32)
!1059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1060)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1041, line: 523, size: 288, elements: !1061)
!1061 = !{!1062, !1083, !1089, !1094, !1098, !1099, !1100, !1104, !1124}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1060, file: !1041, line: 524, baseType: !1063, size: 32)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 32)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!109, !1066, !1081, !1082}
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 32)
!1067 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1068)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !1069)
!1069 = !{!1070, !1071, !1072, !1073, !1079, !1080}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1068, file: !321, line: 380, baseType: !324, size: 32)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1068, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1068, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1068, file: !321, line: 386, baseType: !1074, size: 32, offset: 96)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 32)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !1076)
!1076 = !{!1077, !1078}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1075, file: !321, line: 359, baseType: !167, size: 8)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1075, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1068, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1068, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1041, line: 237, baseType: !167)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1041, line: 257, baseType: !110)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1060, file: !1041, line: 530, baseType: !1084, size: 32, offset: 32)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{!109, !1066, !1087}
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 32)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1041, line: 229, baseType: !110)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1060, file: !1041, line: 532, baseType: !1090, size: 32, offset: 64)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 32)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!109, !1066, !1093, !1088}
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1041, line: 216, baseType: !110)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1060, file: !1041, line: 535, baseType: !1095, size: 32, offset: 96)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!109, !1066, !1093}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1060, file: !1041, line: 537, baseType: !1095, size: 32, offset: 128)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1060, file: !1041, line: 539, baseType: !1095, size: 32, offset: 160)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1060, file: !1041, line: 541, baseType: !1101, size: 32, offset: 192)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 32)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!109, !1066, !1081, !1040, !1046}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1060, file: !1041, line: 544, baseType: !1105, size: 32, offset: 224)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 32)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{!109, !1066, !1108, !334}
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 32)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1041, line: 478, size: 96, elements: !1110)
!1110 = !{!1111, !1118, !1123}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1109, file: !1041, line: 482, baseType: !1112, size: 32)
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1113, line: 33, baseType: !1114)
!1113 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1113, line: 29, size: 32, elements: !1115)
!1115 = !{!1116}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1114, file: !1113, line: 30, baseType: !1117, size: 32)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1109, file: !1041, line: 485, baseType: !1119, size: 32, offset: 32)
!1119 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1041, line: 464, baseType: !1120)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 32)
!1121 = !DISubroutineType(types: !1122)
!1122 = !{null, !1066, !1108, !1093}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1109, file: !1041, line: 493, baseType: !1093, size: 32, offset: 64)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1060, file: !1041, line: 547, baseType: !1125, size: 32, offset: 256)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!110, !1066}
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1130)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1041, line: 428, size: 32, elements: !1131)
!1131 = !{!1132}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1130, file: !1041, line: 434, baseType: !1093, size: 32)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1135)
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1041, line: 441, size: 32, elements: !1136)
!1136 = !{!1137}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1135, file: !1041, line: 447, baseType: !1093, size: 32)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 32)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 32)
!1140 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !297, line: 469, baseType: !1141)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 458, size: 320, elements: !1142)
!1142 = !{!1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1141, file: !297, line: 460, baseType: !301, size: 32)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1141, file: !297, line: 461, baseType: !301, size: 32, offset: 32)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1141, file: !297, line: 462, baseType: !301, size: 32, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1141, file: !297, line: 463, baseType: !301, size: 32, offset: 96)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1141, file: !297, line: 464, baseType: !301, size: 32, offset: 128)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1141, file: !297, line: 465, baseType: !301, size: 32, offset: 160)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1141, file: !297, line: 466, baseType: !301, size: 32, offset: 192)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1141, file: !297, line: 467, baseType: !301, size: 32, offset: 224)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1141, file: !297, line: 468, baseType: !1152, size: 64, offset: 256)
!1152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 64, elements: !162)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 32)
!1154 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !297, line: 484, baseType: !1155)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 475, size: 384, elements: !1156)
!1156 = !{!1157, !1158, !1159, !1161, !1162, !1163, !1164}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1155, file: !297, line: 477, baseType: !301, size: 32)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1155, file: !297, line: 478, baseType: !301, size: 32, offset: 32)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1155, file: !297, line: 479, baseType: !1160, size: 128, offset: 64)
!1160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 128, elements: !707)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1155, file: !297, line: 480, baseType: !863, size: 64, offset: 192)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1155, file: !297, line: 481, baseType: !301, size: 32, offset: 256)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1155, file: !297, line: 482, baseType: !863, size: 64, offset: 288)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1155, file: !297, line: 483, baseType: !301, size: 32, offset: 352)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 32)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 32)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 32)
!1168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1169)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !841, line: 100, size: 224, elements: !1170)
!1170 = !{!1171, !1176, !1177, !1186, !1191, !1196, !1201}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1169, file: !841, line: 101, baseType: !1172, size: 32)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !841, line: 76, baseType: !1173)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 32)
!1174 = !DISubroutineType(types: !1175)
!1175 = !{!109, !1066, !937}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1169, file: !841, line: 102, baseType: !1172, size: 32, offset: 32)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1169, file: !841, line: 103, baseType: !1178, size: 32, offset: 64)
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !841, line: 83, baseType: !1179)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 32)
!1180 = !DISubroutineType(types: !1181)
!1181 = !{!109, !1066, !937, !1182, !108}
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !841, line: 72, baseType: !1183)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 32)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{null, !1066, !937, !108}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1169, file: !841, line: 104, baseType: !1187, size: 32, offset: 96)
!1187 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !841, line: 79, baseType: !1188)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 32)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!109, !1066, !937, !893}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1169, file: !841, line: 105, baseType: !1192, size: 32, offset: 128)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !841, line: 88, baseType: !1193)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!840, !1066, !937}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1169, file: !841, line: 106, baseType: !1197, size: 32, offset: 160)
!1197 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !841, line: 92, baseType: !1198)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 32)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!109, !1066, !937, !963}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1169, file: !841, line: 107, baseType: !1202, size: 32, offset: 192)
!1202 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !841, line: 96, baseType: !1203)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 32)
!1204 = !DISubroutineType(types: !1205)
!1205 = !{!109, !1066, !937, !108}
!1206 = !{!1207, !1213, !1215, !1225, !1227, !1229, !1231, !1233, !1235, !1237, !1242, !1244, !1246, !1248, !1250, !1252, !1254, !1256, !1258, !1260, !1262, !1264, !1266, !1268, !1270, !1284, !1286, !1288, !1290, !1292, !1294, !1296, !1298, !1300, !1302, !1304, !1306, !1308, !1310, !1312, !1035, !1314, !1316, !1329, !1331, !1333, !1335, !1337, !1339}
!1207 = !DIGlobalVariableExpression(var: !1208, expr: !DIExpression())
!1208 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !1037, file: !1209, line: 762, type: !1210, isLocal: false, isDefinition: true, align: 16)
!1209 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 80, elements: !1211)
!1211 = !{!1212}
!1212 = !DISubrange(count: 5)
!1213 = !DIGlobalVariableExpression(var: !1214, expr: !DIExpression())
!1214 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !1037, file: !1209, line: 762, type: !1067, isLocal: false, isDefinition: true, align: 32)
!1215 = !DIGlobalVariableExpression(var: !1216, expr: !DIExpression())
!1216 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !1037, file: !1209, line: 762, type: !1217, isLocal: true, isDefinition: true, align: 32)
!1217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1218)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !1219)
!1219 = !{!1220, !1224}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1218, file: !312, line: 60, baseType: !1221, size: 32)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 32)
!1222 = !DISubroutineType(types: !1223)
!1223 = !{!109, !1066}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1218, file: !312, line: 65, baseType: !1066, size: 32, offset: 32)
!1225 = !DIGlobalVariableExpression(var: !1226, expr: !DIExpression())
!1226 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !1037, file: !1209, line: 766, type: !1210, isLocal: false, isDefinition: true, align: 16)
!1227 = !DIGlobalVariableExpression(var: !1228, expr: !DIExpression())
!1228 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !1037, file: !1209, line: 766, type: !1067, isLocal: false, isDefinition: true, align: 32)
!1229 = !DIGlobalVariableExpression(var: !1230, expr: !DIExpression())
!1230 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !1037, file: !1209, line: 766, type: !1217, isLocal: true, isDefinition: true, align: 32)
!1231 = !DIGlobalVariableExpression(var: !1232, expr: !DIExpression())
!1232 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !1037, file: !1209, line: 770, type: !1210, isLocal: false, isDefinition: true, align: 16)
!1233 = !DIGlobalVariableExpression(var: !1234, expr: !DIExpression())
!1234 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !1037, file: !1209, line: 770, type: !1067, isLocal: false, isDefinition: true, align: 32)
!1235 = !DIGlobalVariableExpression(var: !1236, expr: !DIExpression())
!1236 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !1037, file: !1209, line: 770, type: !1217, isLocal: true, isDefinition: true, align: 32)
!1237 = !DIGlobalVariableExpression(var: !1238, expr: !DIExpression())
!1238 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1037, file: !1209, line: 774, type: !1239, isLocal: false, isDefinition: true, align: 16)
!1239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 144, elements: !1240)
!1240 = !{!1241}
!1241 = !DISubrange(count: 9)
!1242 = !DIGlobalVariableExpression(var: !1243, expr: !DIExpression())
!1243 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1037, file: !1209, line: 774, type: !1067, isLocal: false, isDefinition: true, align: 32)
!1244 = !DIGlobalVariableExpression(var: !1245, expr: !DIExpression())
!1245 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1037, file: !1209, line: 774, type: !1217, isLocal: true, isDefinition: true, align: 32)
!1246 = !DIGlobalVariableExpression(var: !1247, expr: !DIExpression())
!1247 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1037, file: !1209, line: 778, type: !1210, isLocal: false, isDefinition: true, align: 16)
!1248 = !DIGlobalVariableExpression(var: !1249, expr: !DIExpression())
!1249 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !1037, file: !1209, line: 778, type: !1067, isLocal: false, isDefinition: true, align: 32)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !1037, file: !1209, line: 778, type: !1217, isLocal: true, isDefinition: true, align: 32)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1037, file: !1209, line: 782, type: !1210, isLocal: false, isDefinition: true, align: 16)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !1037, file: !1209, line: 782, type: !1067, isLocal: false, isDefinition: true, align: 32)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !1037, file: !1209, line: 782, type: !1217, isLocal: true, isDefinition: true, align: 32)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1037, file: !1209, line: 786, type: !1210, isLocal: false, isDefinition: true, align: 16)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !1037, file: !1209, line: 786, type: !1067, isLocal: false, isDefinition: true, align: 32)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !1037, file: !1209, line: 786, type: !1217, isLocal: true, isDefinition: true, align: 32)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1037, file: !1209, line: 790, type: !1210, isLocal: false, isDefinition: true, align: 16)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !1037, file: !1209, line: 790, type: !1067, isLocal: false, isDefinition: true, align: 32)
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !1037, file: !1209, line: 790, type: !1217, isLocal: true, isDefinition: true, align: 32)
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1037, file: !1209, line: 762, type: !1272, isLocal: true, isDefinition: true)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1273, line: 237, size: 128, elements: !1274)
!1273 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1274 = !{!1275, !1276, !1277}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1272, file: !1273, line: 239, baseType: !1135, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1272, file: !1273, line: 241, baseType: !1066, size: 32, offset: 32)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1272, file: !1273, line: 243, baseType: !1278, size: 64, offset: 64)
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1113, line: 40, baseType: !1279)
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1113, line: 35, size: 64, elements: !1280)
!1280 = !{!1281, !1283}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1279, file: !1113, line: 36, baseType: !1282, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 32)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1279, file: !1113, line: 37, baseType: !1282, size: 32, offset: 32)
!1284 = !DIGlobalVariableExpression(var: !1285, expr: !DIExpression())
!1285 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !1037, file: !1209, line: 762, type: !1075, isLocal: true, isDefinition: true, align: 8)
!1286 = !DIGlobalVariableExpression(var: !1287, expr: !DIExpression())
!1287 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1037, file: !1209, line: 766, type: !1272, isLocal: true, isDefinition: true)
!1288 = !DIGlobalVariableExpression(var: !1289, expr: !DIExpression())
!1289 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !1037, file: !1209, line: 766, type: !1075, isLocal: true, isDefinition: true, align: 8)
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1037, file: !1209, line: 770, type: !1272, isLocal: true, isDefinition: true)
!1292 = !DIGlobalVariableExpression(var: !1293, expr: !DIExpression())
!1293 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !1037, file: !1209, line: 770, type: !1075, isLocal: true, isDefinition: true, align: 8)
!1294 = !DIGlobalVariableExpression(var: !1295, expr: !DIExpression())
!1295 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1037, file: !1209, line: 774, type: !1272, isLocal: true, isDefinition: true)
!1296 = !DIGlobalVariableExpression(var: !1297, expr: !DIExpression())
!1297 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1037, file: !1209, line: 774, type: !1075, isLocal: true, isDefinition: true, align: 8)
!1298 = !DIGlobalVariableExpression(var: !1299, expr: !DIExpression())
!1299 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1037, file: !1209, line: 778, type: !1272, isLocal: true, isDefinition: true)
!1300 = !DIGlobalVariableExpression(var: !1301, expr: !DIExpression())
!1301 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !1037, file: !1209, line: 778, type: !1075, isLocal: true, isDefinition: true, align: 8)
!1302 = !DIGlobalVariableExpression(var: !1303, expr: !DIExpression())
!1303 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1037, file: !1209, line: 782, type: !1272, isLocal: true, isDefinition: true)
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !1037, file: !1209, line: 782, type: !1075, isLocal: true, isDefinition: true, align: 8)
!1306 = !DIGlobalVariableExpression(var: !1307, expr: !DIExpression())
!1307 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1037, file: !1209, line: 786, type: !1272, isLocal: true, isDefinition: true)
!1308 = !DIGlobalVariableExpression(var: !1309, expr: !DIExpression())
!1309 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !1037, file: !1209, line: 786, type: !1075, isLocal: true, isDefinition: true, align: 8)
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1037, file: !1209, line: 790, type: !1272, isLocal: true, isDefinition: true)
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !1037, file: !1209, line: 790, type: !1075, isLocal: true, isDefinition: true, align: 8)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1037, file: !1209, line: 656, type: !1059, isLocal: true, isDefinition: true)
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1037, file: !1209, line: 766, type: !1318, isLocal: true, isDefinition: true)
!1318 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1319)
!1319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1273, line: 224, size: 160, elements: !1320)
!1320 = !{!1321, !1322, !1323, !1324}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1319, file: !1273, line: 226, baseType: !1130, size: 32)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1319, file: !1273, line: 228, baseType: !893, size: 32, offset: 32)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1319, file: !1273, line: 230, baseType: !109, size: 32, offset: 64)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1319, file: !1273, line: 231, baseType: !1325, size: 64, offset: 96)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !889, line: 343, size: 64, elements: !1326)
!1326 = !{!1327, !1328}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1325, file: !889, line: 344, baseType: !110, size: 32)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1325, file: !889, line: 345, baseType: !110, size: 32, offset: 32)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1037, file: !1209, line: 770, type: !1318, isLocal: true, isDefinition: true)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1037, file: !1209, line: 774, type: !1318, isLocal: true, isDefinition: true)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1037, file: !1209, line: 778, type: !1318, isLocal: true, isDefinition: true)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1037, file: !1209, line: 782, type: !1318, isLocal: true, isDefinition: true)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1037, file: !1209, line: 786, type: !1318, isLocal: true, isDefinition: true)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1037, file: !1209, line: 790, type: !1318, isLocal: true, isDefinition: true)
!1341 = !DIGlobalVariableExpression(var: !1342, expr: !DIExpression())
!1342 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1343, file: !1482, line: 1914, type: !1569, isLocal: true, isDefinition: true)
!1343 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1344, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1345, retainedTypes: !1378, globals: !1479, splitDebugInlining: false, nameTableKind: None)
!1344 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!1345 = !{!30, !1346, !1353, !1360, !1367, !1373, !840}
!1346 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !977, line: 47, baseType: !32, size: 32, elements: !1347)
!1347 = !{!1348, !1349, !1350, !1351, !1352}
!1348 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1349 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1350 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1351 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1352 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1353 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !977, line: 75, baseType: !32, size: 32, elements: !1354)
!1354 = !{!1355, !1356, !1357, !1358, !1359}
!1355 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1356 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1357 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1358 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1359 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1360 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !977, line: 92, baseType: !32, size: 32, elements: !1361)
!1361 = !{!1362, !1363, !1364, !1365, !1366}
!1362 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1363 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1364 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1365 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1366 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1367 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !977, line: 84, baseType: !32, size: 32, elements: !1368)
!1368 = !{!1369, !1370, !1371, !1372}
!1369 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1370 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1371 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1372 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1373 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !977, line: 107, baseType: !32, size: 32, elements: !1374)
!1374 = !{!1375, !1376, !1377}
!1375 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1376 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1377 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1378 = !{!108, !109, !1379, !168, !167, !1428, !110, !937, !1439, !181, !111, !1478}
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1381)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !977, line: 336, size: 160, elements: !1382)
!1382 = !{!1383, !1402, !1406, !1410, !1423}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1381, file: !977, line: 365, baseType: !1384, size: 32)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 32)
!1385 = !DISubroutineType(types: !1386)
!1386 = !{!109, !1387, !998}
!1387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 32)
!1388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1389)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !1390)
!1390 = !{!1391, !1392, !1393, !1394, !1400, !1401}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1389, file: !321, line: 380, baseType: !324, size: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1389, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1389, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1389, file: !321, line: 386, baseType: !1395, size: 32, offset: 96)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 32)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !1397)
!1397 = !{!1398, !1399}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1396, file: !321, line: 359, baseType: !167, size: 8)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1396, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1389, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1389, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1381, file: !977, line: 366, baseType: !1403, size: 32, offset: 32)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 32)
!1404 = !DISubroutineType(types: !1405)
!1405 = !{null, !1387, !168}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1381, file: !977, line: 374, baseType: !1407, size: 32, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 32)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{!109, !1387}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1381, file: !977, line: 377, baseType: !1411, size: 32, offset: 96)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 32)
!1412 = !DISubroutineType(types: !1413)
!1413 = !{!109, !1387, !1414}
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 32)
!1415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1416)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !977, line: 122, size: 64, elements: !1417)
!1417 = !{!1418, !1419, !1420, !1421, !1422}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1416, file: !977, line: 123, baseType: !110, size: 32)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1416, file: !977, line: 124, baseType: !167, size: 8, offset: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1416, file: !977, line: 125, baseType: !167, size: 8, offset: 40)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1416, file: !977, line: 126, baseType: !167, size: 8, offset: 48)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1416, file: !977, line: 127, baseType: !167, size: 8, offset: 56)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1381, file: !977, line: 379, baseType: !1424, size: 32, offset: 128)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 32)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{!109, !1387, !1427}
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 32)
!1429 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !297, line: 783, baseType: !1430)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 774, size: 224, elements: !1431)
!1431 = !{!1432, !1433, !1434, !1435, !1436, !1437, !1438}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1430, file: !297, line: 776, baseType: !301, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1430, file: !297, line: 777, baseType: !301, size: 32, offset: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1430, file: !297, line: 778, baseType: !301, size: 32, offset: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1430, file: !297, line: 779, baseType: !301, size: 32, offset: 96)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1430, file: !297, line: 780, baseType: !301, size: 32, offset: 128)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1430, file: !297, line: 781, baseType: !301, size: 32, offset: 160)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1430, file: !297, line: 782, baseType: !301, size: 32, offset: 192)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 32)
!1440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1441)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !841, line: 100, size: 224, elements: !1442)
!1442 = !{!1443, !1448, !1449, !1458, !1463, !1468, !1473}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1441, file: !841, line: 101, baseType: !1444, size: 32)
!1444 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !841, line: 76, baseType: !1445)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 32)
!1446 = !DISubroutineType(types: !1447)
!1447 = !{!109, !1387, !937}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1441, file: !841, line: 102, baseType: !1444, size: 32, offset: 32)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1441, file: !841, line: 103, baseType: !1450, size: 32, offset: 64)
!1450 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !841, line: 83, baseType: !1451)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 32)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!109, !1387, !937, !1454, !108}
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !841, line: 72, baseType: !1455)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 32)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{null, !1387, !937, !108}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1441, file: !841, line: 104, baseType: !1459, size: 32, offset: 96)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !841, line: 79, baseType: !1460)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 32)
!1461 = !DISubroutineType(types: !1462)
!1462 = !{!109, !1387, !937, !893}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1441, file: !841, line: 105, baseType: !1464, size: 32, offset: 128)
!1464 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !841, line: 88, baseType: !1465)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 32)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!840, !1387, !937}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1441, file: !841, line: 106, baseType: !1469, size: 32, offset: 160)
!1469 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !841, line: 92, baseType: !1470)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 32)
!1471 = !DISubroutineType(types: !1472)
!1472 = !{!109, !1387, !937, !963}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1441, file: !841, line: 107, baseType: !1474, size: 32, offset: 192)
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !841, line: 96, baseType: !1475)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 32)
!1476 = !DISubroutineType(types: !1477)
!1477 = !{!109, !1387, !937, !108}
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!1479 = !{!1480, !1486, !1488, !1495, !1497, !1499, !1501, !1503, !1505, !1507, !1509, !1511, !1513, !1515, !1517, !1519, !1341, !1521, !1529, !1552, !1555, !1558, !1560, !1567, !1584, !1586, !1588, !1590, !1592, !1594, !1596, !1598, !1600, !1602, !1604, !1606, !1608, !1610, !1612, !1614, !1616}
!1480 = !DIGlobalVariableExpression(var: !1481, expr: !DIExpression())
!1481 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1343, file: !1482, line: 1914, type: !1483, isLocal: false, isDefinition: true, align: 16)
!1482 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 128, elements: !1484)
!1484 = !{!1485}
!1485 = !DISubrange(count: 8)
!1486 = !DIGlobalVariableExpression(var: !1487, expr: !DIExpression())
!1487 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1343, file: !1482, line: 1914, type: !1388, isLocal: false, isDefinition: true, align: 32)
!1488 = !DIGlobalVariableExpression(var: !1489, expr: !DIExpression())
!1489 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1343, file: !1482, line: 1914, type: !1490, isLocal: true, isDefinition: true, align: 32)
!1490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1491)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !1492)
!1492 = !{!1493, !1494}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1491, file: !312, line: 60, baseType: !1407, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1491, file: !312, line: 65, baseType: !1387, size: 32, offset: 32)
!1495 = !DIGlobalVariableExpression(var: !1496, expr: !DIExpression())
!1496 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1343, file: !1482, line: 1914, type: !1483, isLocal: false, isDefinition: true, align: 16)
!1497 = !DIGlobalVariableExpression(var: !1498, expr: !DIExpression())
!1498 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1343, file: !1482, line: 1914, type: !1388, isLocal: false, isDefinition: true, align: 32)
!1499 = !DIGlobalVariableExpression(var: !1500, expr: !DIExpression())
!1500 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1343, file: !1482, line: 1914, type: !1490, isLocal: true, isDefinition: true, align: 32)
!1501 = !DIGlobalVariableExpression(var: !1502, expr: !DIExpression())
!1502 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1343, file: !1482, line: 1914, type: !1483, isLocal: false, isDefinition: true, align: 16)
!1503 = !DIGlobalVariableExpression(var: !1504, expr: !DIExpression())
!1504 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1343, file: !1482, line: 1914, type: !1388, isLocal: false, isDefinition: true, align: 32)
!1505 = !DIGlobalVariableExpression(var: !1506, expr: !DIExpression())
!1506 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1343, file: !1482, line: 1914, type: !1490, isLocal: true, isDefinition: true, align: 32)
!1507 = !DIGlobalVariableExpression(var: !1508, expr: !DIExpression())
!1508 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1343, file: !1482, line: 1914, type: !1483, isLocal: false, isDefinition: true, align: 16)
!1509 = !DIGlobalVariableExpression(var: !1510, expr: !DIExpression())
!1510 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1343, file: !1482, line: 1914, type: !1388, isLocal: false, isDefinition: true, align: 32)
!1511 = !DIGlobalVariableExpression(var: !1512, expr: !DIExpression())
!1512 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1343, file: !1482, line: 1914, type: !1490, isLocal: true, isDefinition: true, align: 32)
!1513 = !DIGlobalVariableExpression(var: !1514, expr: !DIExpression())
!1514 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1343, file: !1482, line: 1914, type: !1396, isLocal: true, isDefinition: true, align: 8)
!1515 = !DIGlobalVariableExpression(var: !1516, expr: !DIExpression())
!1516 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1343, file: !1482, line: 1914, type: !1396, isLocal: true, isDefinition: true, align: 8)
!1517 = !DIGlobalVariableExpression(var: !1518, expr: !DIExpression())
!1518 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1343, file: !1482, line: 1914, type: !1396, isLocal: true, isDefinition: true, align: 8)
!1519 = !DIGlobalVariableExpression(var: !1520, expr: !DIExpression())
!1520 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1343, file: !1482, line: 1914, type: !1396, isLocal: true, isDefinition: true, align: 8)
!1521 = !DIGlobalVariableExpression(var: !1522, expr: !DIExpression())
!1522 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1343, file: !1482, line: 1914, type: !1523, isLocal: true, isDefinition: true)
!1523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1524, size: 64, elements: !525)
!1524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1525)
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !889, line: 343, size: 64, elements: !1526)
!1526 = !{!1527, !1528}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1525, file: !889, line: 344, baseType: !110, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1525, file: !889, line: 345, baseType: !110, size: 32, offset: 32)
!1529 = !DIGlobalVariableExpression(var: !1530, expr: !DIExpression())
!1530 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1343, file: !1482, line: 1914, type: !1531, isLocal: true, isDefinition: true)
!1531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1532)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1533, line: 60, size: 64, elements: !1534)
!1533 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1534 = !{!1535, !1551}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1532, file: !1533, line: 69, baseType: !1536, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1538)
!1538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1533, line: 50, size: 64, elements: !1539)
!1539 = !{!1540, !1549, !1550}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1538, file: !1533, line: 52, baseType: !1541, size: 32)
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1543)
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1544, line: 37, baseType: !1545)
!1544 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1544, line: 32, size: 64, elements: !1546)
!1546 = !{!1547, !1548}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1545, file: !1544, line: 34, baseType: !110, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1545, file: !1544, line: 36, baseType: !110, size: 32, offset: 32)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1538, file: !1533, line: 54, baseType: !167, size: 8, offset: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1538, file: !1533, line: 56, baseType: !167, size: 8, offset: 40)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1532, file: !1533, line: 71, baseType: !167, size: 8, offset: 32)
!1552 = !DIGlobalVariableExpression(var: !1553, expr: !DIExpression())
!1553 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1343, file: !1482, line: 1914, type: !1554, isLocal: true, isDefinition: true)
!1554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1537, size: 64, elements: !525)
!1555 = !DIGlobalVariableExpression(var: !1556, expr: !DIExpression())
!1556 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1343, file: !1482, line: 1914, type: !1557, isLocal: true, isDefinition: true)
!1557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1542, size: 128, elements: !162)
!1558 = !DIGlobalVariableExpression(var: !1559, expr: !DIExpression())
!1559 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1343, file: !1482, line: 1539, type: !1380, isLocal: true, isDefinition: true)
!1560 = !DIGlobalVariableExpression(var: !1561, expr: !DIExpression())
!1561 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1343, file: !1482, line: 1914, type: !1562, isLocal: true, isDefinition: true)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1563, line: 74, size: 64, elements: !1564)
!1563 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1564 = !{!1565, !1566}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1562, file: !1563, line: 76, baseType: !110, size: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1562, file: !1563, line: 78, baseType: !1387, size: 32, offset: 32)
!1567 = !DIGlobalVariableExpression(var: !1568, expr: !DIExpression())
!1568 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1343, file: !1482, line: 1914, type: !1569, isLocal: true, isDefinition: true)
!1569 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1570)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1563, line: 22, size: 224, elements: !1571)
!1571 = !{!1572, !1573, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1570, file: !1563, line: 24, baseType: !1428, size: 32)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1570, file: !1563, line: 26, baseType: !1574, size: 32, offset: 32)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1570, file: !1563, line: 28, baseType: !235, size: 32, offset: 64)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1570, file: !1563, line: 30, baseType: !334, size: 8, offset: 96)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1570, file: !1563, line: 32, baseType: !109, size: 32, offset: 128)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1570, file: !1563, line: 34, baseType: !334, size: 8, offset: 160)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1570, file: !1563, line: 36, baseType: !334, size: 8, offset: 168)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1570, file: !1563, line: 38, baseType: !334, size: 8, offset: 176)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1570, file: !1563, line: 40, baseType: !334, size: 8, offset: 184)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1570, file: !1563, line: 41, baseType: !1583, size: 32, offset: 192)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1531, size: 32)
!1584 = !DIGlobalVariableExpression(var: !1585, expr: !DIExpression())
!1585 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1343, file: !1482, line: 1914, type: !1523, isLocal: true, isDefinition: true)
!1586 = !DIGlobalVariableExpression(var: !1587, expr: !DIExpression())
!1587 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1343, file: !1482, line: 1914, type: !1531, isLocal: true, isDefinition: true)
!1588 = !DIGlobalVariableExpression(var: !1589, expr: !DIExpression())
!1589 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1343, file: !1482, line: 1914, type: !1554, isLocal: true, isDefinition: true)
!1590 = !DIGlobalVariableExpression(var: !1591, expr: !DIExpression())
!1591 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1343, file: !1482, line: 1914, type: !1557, isLocal: true, isDefinition: true)
!1592 = !DIGlobalVariableExpression(var: !1593, expr: !DIExpression())
!1593 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1343, file: !1482, line: 1914, type: !1562, isLocal: true, isDefinition: true)
!1594 = !DIGlobalVariableExpression(var: !1595, expr: !DIExpression())
!1595 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1343, file: !1482, line: 1914, type: !1569, isLocal: true, isDefinition: true)
!1596 = !DIGlobalVariableExpression(var: !1597, expr: !DIExpression())
!1597 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1343, file: !1482, line: 1914, type: !1523, isLocal: true, isDefinition: true)
!1598 = !DIGlobalVariableExpression(var: !1599, expr: !DIExpression())
!1599 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1343, file: !1482, line: 1914, type: !1531, isLocal: true, isDefinition: true)
!1600 = !DIGlobalVariableExpression(var: !1601, expr: !DIExpression())
!1601 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1343, file: !1482, line: 1914, type: !1554, isLocal: true, isDefinition: true)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1343, file: !1482, line: 1914, type: !1557, isLocal: true, isDefinition: true)
!1604 = !DIGlobalVariableExpression(var: !1605, expr: !DIExpression())
!1605 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1343, file: !1482, line: 1914, type: !1562, isLocal: true, isDefinition: true)
!1606 = !DIGlobalVariableExpression(var: !1607, expr: !DIExpression())
!1607 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1343, file: !1482, line: 1914, type: !1569, isLocal: true, isDefinition: true)
!1608 = !DIGlobalVariableExpression(var: !1609, expr: !DIExpression())
!1609 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1343, file: !1482, line: 1914, type: !1523, isLocal: true, isDefinition: true)
!1610 = !DIGlobalVariableExpression(var: !1611, expr: !DIExpression())
!1611 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1343, file: !1482, line: 1914, type: !1531, isLocal: true, isDefinition: true)
!1612 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression())
!1613 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1343, file: !1482, line: 1914, type: !1554, isLocal: true, isDefinition: true)
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1343, file: !1482, line: 1914, type: !1557, isLocal: true, isDefinition: true)
!1616 = !DIGlobalVariableExpression(var: !1617, expr: !DIExpression())
!1617 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1343, file: !1482, line: 1914, type: !1562, isLocal: true, isDefinition: true)
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1620, file: !1698, line: 65, type: !301, isLocal: true, isDefinition: true)
!1620 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1621, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1622, retainedTypes: !1623, globals: !1695, splitDebugInlining: false, nameTableKind: None)
!1621 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!1622 = !{!595}
!1623 = !{!104, !1624, !765, !167, !110, !1632, !1663}
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !536, line: 770, baseType: !1626)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 764, size: 128, elements: !1627)
!1627 = !{!1628, !1629, !1630, !1631}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1626, file: !536, line: 766, baseType: !301, size: 32)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1626, file: !536, line: 767, baseType: !301, size: 32, offset: 32)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1626, file: !536, line: 768, baseType: !301, size: 32, offset: 64)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1626, file: !536, line: 769, baseType: !540, size: 32, offset: 96)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 32)
!1633 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !536, line: 426, baseType: !1634)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 411, size: 28704, elements: !1635)
!1635 = !{!1636, !1638, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1653, !1658, !1662}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1634, file: !536, line: 413, baseType: !1637, size: 256)
!1637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !301, size: 256, elements: !1484)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1634, file: !536, line: 414, baseType: !1639, size: 768, offset: 256)
!1639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 768, elements: !1640)
!1640 = !{!1641}
!1641 = !DISubrange(count: 24)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1634, file: !536, line: 415, baseType: !1637, size: 256, offset: 1024)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1634, file: !536, line: 416, baseType: !1639, size: 768, offset: 1280)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1634, file: !536, line: 417, baseType: !1637, size: 256, offset: 2048)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1634, file: !536, line: 418, baseType: !1639, size: 768, offset: 2304)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1634, file: !536, line: 419, baseType: !1637, size: 256, offset: 3072)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1634, file: !536, line: 420, baseType: !1639, size: 768, offset: 3328)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1634, file: !536, line: 421, baseType: !1637, size: 256, offset: 4096)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1634, file: !536, line: 422, baseType: !1650, size: 1792, offset: 4352)
!1650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 1792, elements: !1651)
!1651 = !{!1652}
!1652 = !DISubrange(count: 56)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1634, file: !536, line: 423, baseType: !1654, size: 1920, offset: 6144)
!1654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1655, size: 1920, elements: !1656)
!1655 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !167)
!1656 = !{!1657}
!1657 = !DISubrange(count: 240)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1634, file: !536, line: 424, baseType: !1659, size: 20608, offset: 8064)
!1659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 20608, elements: !1660)
!1660 = !{!1661}
!1661 = !DISubrange(count: 644)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1634, file: !536, line: 425, baseType: !301, size: 32, offset: 28672)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !1665)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !1666)
!1666 = !{!1667, !1668, !1669, !1670, !1671, !1672, !1673, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1686, !1687, !1688, !1690, !1692, !1694}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1665, file: !536, line: 447, baseType: !540, size: 32)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1665, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1665, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1665, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1665, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1665, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1665, file: !536, line: 453, baseType: !1674, size: 96, offset: 192)
!1674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1655, size: 96, elements: !1675)
!1675 = !{!1676}
!1676 = !DISubrange(count: 12)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1665, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1665, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1665, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1665, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1665, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1665, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1665, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1665, file: !536, line: 461, baseType: !1685, size: 64, offset: 512)
!1685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !540, size: 64, elements: !162)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1665, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1665, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1665, file: !536, line: 464, baseType: !1689, size: 128, offset: 640)
!1689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !540, size: 128, elements: !707)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1665, file: !536, line: 465, baseType: !1691, size: 160, offset: 768)
!1691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !540, size: 160, elements: !1211)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1665, file: !536, line: 466, baseType: !1693, size: 160, offset: 928)
!1693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 160, elements: !1211)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1665, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!1695 = !{!1696, !1722, !1727, !1729, !1731, !1618}
!1696 = !DIGlobalVariableExpression(var: !1697, expr: !DIExpression())
!1697 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1620, file: !1698, line: 285, type: !1699, isLocal: true, isDefinition: true, align: 32)
!1698 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1700)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !1701)
!1701 = !{!1702, !1721}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1700, file: !312, line: 60, baseType: !1703, size: 32)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 32)
!1704 = !DISubroutineType(types: !1705)
!1705 = !{!109, !1706}
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 32)
!1707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1708)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !1709)
!1709 = !{!1710, !1711, !1712, !1713, !1719, !1720}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1708, file: !321, line: 380, baseType: !324, size: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1708, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1708, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1708, file: !321, line: 386, baseType: !1714, size: 32, offset: 96)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 32)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !1716)
!1716 = !{!1717, !1718}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1715, file: !321, line: 359, baseType: !167, size: 8)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1715, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1708, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1708, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1700, file: !312, line: 65, baseType: !1706, size: 32, offset: 32)
!1722 = !DIGlobalVariableExpression(var: !1723, expr: !DIExpression())
!1723 = distinct !DIGlobalVariable(name: "lock", scope: !1620, file: !1698, line: 34, type: !1724, isLocal: true, isDefinition: true)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !1725)
!1725 = !{!1726}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1724, file: !254, line: 52, baseType: !22, size: 32)
!1727 = !DIGlobalVariableExpression(var: !1728, expr: !DIExpression())
!1728 = distinct !DIGlobalVariable(name: "last_load", scope: !1620, file: !1698, line: 36, type: !110, isLocal: true, isDefinition: true)
!1729 = !DIGlobalVariableExpression(var: !1730, expr: !DIExpression())
!1730 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1620, file: !1698, line: 48, type: !110, isLocal: true, isDefinition: true)
!1731 = !DIGlobalVariableExpression(var: !1732, expr: !DIExpression())
!1732 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1620, file: !1698, line: 54, type: !110, isLocal: true, isDefinition: true)
!1733 = !DIGlobalVariableExpression(var: !1734, expr: !DIExpression())
!1734 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1735, file: !1817, line: 22, type: !1819, isLocal: true, isDefinition: true)
!1735 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1736, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1737, retainedTypes: !1738, globals: !1814, splitDebugInlining: false, nameTableKind: None)
!1736 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!1737 = !{!1040, !1046}
!1738 = !{!1739, !1803, !1808, !1093, !1046, !1040, !1813, !108}
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 32)
!1740 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1741)
!1741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1041, line: 523, size: 288, elements: !1742)
!1742 = !{!1743, !1762, !1766, !1770, !1774, !1775, !1776, !1780, !1799}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1741, file: !1041, line: 524, baseType: !1744, size: 32)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 32)
!1745 = !DISubroutineType(types: !1746)
!1746 = !{!109, !1747, !1081, !1082}
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 32)
!1748 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1749)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !1750)
!1750 = !{!1751, !1752, !1753, !1754, !1760, !1761}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1749, file: !321, line: 380, baseType: !324, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1749, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1749, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1749, file: !321, line: 386, baseType: !1755, size: 32, offset: 96)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 32)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !1757)
!1757 = !{!1758, !1759}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1756, file: !321, line: 359, baseType: !167, size: 8)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1756, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1749, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1749, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1741, file: !1041, line: 530, baseType: !1763, size: 32, offset: 32)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 32)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{!109, !1747, !1087}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1741, file: !1041, line: 532, baseType: !1767, size: 32, offset: 64)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 32)
!1768 = !DISubroutineType(types: !1769)
!1769 = !{!109, !1747, !1093, !1088}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1741, file: !1041, line: 535, baseType: !1771, size: 32, offset: 96)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 32)
!1772 = !DISubroutineType(types: !1773)
!1773 = !{!109, !1747, !1093}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1741, file: !1041, line: 537, baseType: !1771, size: 32, offset: 128)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1741, file: !1041, line: 539, baseType: !1771, size: 32, offset: 160)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1741, file: !1041, line: 541, baseType: !1777, size: 32, offset: 192)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 32)
!1778 = !DISubroutineType(types: !1779)
!1779 = !{!109, !1747, !1081, !1040, !1046}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1741, file: !1041, line: 544, baseType: !1781, size: 32, offset: 224)
!1781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 32)
!1782 = !DISubroutineType(types: !1783)
!1783 = !{!109, !1747, !1784, !334}
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 32)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1041, line: 478, size: 96, elements: !1786)
!1786 = !{!1787, !1793, !1798}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1785, file: !1041, line: 482, baseType: !1788, size: 32)
!1788 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1113, line: 33, baseType: !1789)
!1789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1113, line: 29, size: 32, elements: !1790)
!1790 = !{!1791}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1789, file: !1113, line: 30, baseType: !1792, size: 32)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 32)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1785, file: !1041, line: 485, baseType: !1794, size: 32, offset: 32)
!1794 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1041, line: 464, baseType: !1795)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 32)
!1796 = !DISubroutineType(types: !1797)
!1797 = !{null, !1747, !1784, !1093}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1785, file: !1041, line: 493, baseType: !1093, size: 32, offset: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1741, file: !1041, line: 547, baseType: !1800, size: 32, offset: 256)
!1800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1801, size: 32)
!1801 = !DISubroutineType(types: !1802)
!1802 = !{!110, !1747}
!1803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1804, size: 32)
!1804 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1805)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1041, line: 428, size: 32, elements: !1806)
!1806 = !{!1807}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1805, file: !1041, line: 434, baseType: !1093, size: 32)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1809, size: 32)
!1809 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1810)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1041, line: 441, size: 32, elements: !1811)
!1811 = !{!1812}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1810, file: !1041, line: 447, baseType: !1093, size: 32)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1810, size: 32)
!1814 = !{!1815, !1733}
!1815 = !DIGlobalVariableExpression(var: !1816, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1816 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1735, file: !1817, line: 37, type: !1818, isLocal: true, isDefinition: true)
!1817 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !235)
!1819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1820, size: 352, elements: !1821)
!1820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1747)
!1821 = !{!1822}
!1822 = !DISubrange(count: 11)
!1823 = !DIGlobalVariableExpression(var: !1824, expr: !DIExpression())
!1824 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1825, file: !1869, line: 139, type: !1876, isLocal: false, isDefinition: true)
!1825 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1826, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1827, globals: !1866, splitDebugInlining: false, nameTableKind: None)
!1826 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!1827 = !{!1828}
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 32)
!1829 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !297, line: 586, baseType: !1830)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 550, size: 1216, elements: !1831)
!1831 = !{!1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1830, file: !297, line: 552, baseType: !301, size: 32)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1830, file: !297, line: 553, baseType: !301, size: 32, offset: 32)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1830, file: !297, line: 554, baseType: !301, size: 32, offset: 64)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1830, file: !297, line: 555, baseType: !301, size: 32, offset: 96)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1830, file: !297, line: 556, baseType: !301, size: 32, offset: 128)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1830, file: !297, line: 557, baseType: !301, size: 32, offset: 160)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1830, file: !297, line: 558, baseType: !301, size: 32, offset: 192)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1830, file: !297, line: 559, baseType: !110, size: 32, offset: 224)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1830, file: !297, line: 560, baseType: !301, size: 32, offset: 256)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1830, file: !297, line: 561, baseType: !301, size: 32, offset: 288)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1830, file: !297, line: 562, baseType: !863, size: 64, offset: 320)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1830, file: !297, line: 563, baseType: !301, size: 32, offset: 384)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1830, file: !297, line: 564, baseType: !301, size: 32, offset: 416)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1830, file: !297, line: 565, baseType: !301, size: 32, offset: 448)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1830, file: !297, line: 566, baseType: !110, size: 32, offset: 480)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1830, file: !297, line: 567, baseType: !301, size: 32, offset: 512)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1830, file: !297, line: 568, baseType: !301, size: 32, offset: 544)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1830, file: !297, line: 569, baseType: !863, size: 64, offset: 576)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1830, file: !297, line: 570, baseType: !301, size: 32, offset: 640)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1830, file: !297, line: 571, baseType: !301, size: 32, offset: 672)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1830, file: !297, line: 572, baseType: !301, size: 32, offset: 704)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1830, file: !297, line: 573, baseType: !110, size: 32, offset: 736)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1830, file: !297, line: 574, baseType: !301, size: 32, offset: 768)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1830, file: !297, line: 575, baseType: !301, size: 32, offset: 800)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1830, file: !297, line: 576, baseType: !863, size: 64, offset: 832)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1830, file: !297, line: 577, baseType: !301, size: 32, offset: 896)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1830, file: !297, line: 578, baseType: !301, size: 32, offset: 928)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1830, file: !297, line: 579, baseType: !863, size: 64, offset: 960)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1830, file: !297, line: 580, baseType: !301, size: 32, offset: 1024)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1830, file: !297, line: 581, baseType: !301, size: 32, offset: 1056)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1830, file: !297, line: 582, baseType: !301, size: 32, offset: 1088)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1830, file: !297, line: 583, baseType: !301, size: 32, offset: 1120)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1830, file: !297, line: 584, baseType: !301, size: 32, offset: 1152)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1830, file: !297, line: 585, baseType: !301, size: 32, offset: 1184)
!1866 = !{!1867, !1870, !1823}
!1867 = !DIGlobalVariableExpression(var: !1868, expr: !DIExpression())
!1868 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1825, file: !1869, line: 137, type: !110, isLocal: false, isDefinition: true)
!1869 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1870 = !DIGlobalVariableExpression(var: !1871, expr: !DIExpression())
!1871 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1825, file: !1869, line: 138, type: !1872, isLocal: false, isDefinition: true)
!1872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1873, size: 128, elements: !1874)
!1873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !167)
!1874 = !{!1875}
!1875 = !DISubrange(count: 16)
!1876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1873, size: 64, elements: !1484)
!1877 = !DIGlobalVariableExpression(var: !1878, expr: !DIExpression())
!1878 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1879, file: !1882, line: 23, type: !1883, isLocal: false, isDefinition: true)
!1879 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1880, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, globals: !1881, splitDebugInlining: false, nameTableKind: None)
!1880 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!1881 = !{!1877}
!1882 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1883 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!1884 = !DIGlobalVariableExpression(var: !1885, expr: !DIExpression())
!1885 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1886, file: !1890, line: 86, type: !2164, isLocal: false, isDefinition: true, align: 512)
!1886 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1887, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1888, retainedTypes: !1897, globals: !1971, splitDebugInlining: false, nameTableKind: None)
!1887 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!1888 = !{!1889, !30, !595}
!1889 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1890, line: 63, baseType: !32, size: 32, elements: !1891)
!1890 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1891 = !{!1892, !1893, !1894, !1895, !1896}
!1892 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1893 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1894 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1895 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1896 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1897 = !{!235, !108, !109, !1898, !1165, !110, !1929, !765, !167, !1954}
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1900)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1901, line: 51, size: 64, elements: !1902)
!1901 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1902 = !{!1903, !1924}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1900, file: !1901, line: 52, baseType: !1904, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1901, line: 38, baseType: !1905)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 32)
!1906 = !DISubroutineType(types: !1907)
!1907 = !{!109, !1908, !1923, !181}
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 32)
!1909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1910)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !1911)
!1911 = !{!1912, !1913, !1914, !1915, !1921, !1922}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1910, file: !321, line: 380, baseType: !324, size: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1910, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1910, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1910, file: !321, line: 386, baseType: !1916, size: 32, offset: 96)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 32)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !1918)
!1918 = !{!1919, !1920}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1917, file: !321, line: 359, baseType: !167, size: 8)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1917, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1910, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1910, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1900, file: !1901, line: 53, baseType: !1925, size: 32, offset: 32)
!1925 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1901, line: 47, baseType: !1926)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 32)
!1927 = !DISubroutineType(types: !1928)
!1928 = !{!109, !1908, !1923, !181, !110}
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 32)
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !1931)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !1932)
!1932 = !{!1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1931, file: !536, line: 447, baseType: !540, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1931, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1931, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1931, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1931, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1931, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1931, file: !536, line: 453, baseType: !1674, size: 96, offset: 192)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1931, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1931, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1931, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1931, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1931, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1931, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1931, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1931, file: !536, line: 461, baseType: !1685, size: 64, offset: 512)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1931, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1931, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1931, file: !536, line: 464, baseType: !1689, size: 128, offset: 640)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1931, file: !536, line: 465, baseType: !1691, size: 160, offset: 768)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1931, file: !536, line: 466, baseType: !1693, size: 160, offset: 928)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1931, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 32)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !536, line: 426, baseType: !1956)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 411, size: 28704, elements: !1957)
!1957 = !{!1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1956, file: !536, line: 413, baseType: !1637, size: 256)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1956, file: !536, line: 414, baseType: !1639, size: 768, offset: 256)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1956, file: !536, line: 415, baseType: !1637, size: 256, offset: 1024)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1956, file: !536, line: 416, baseType: !1639, size: 768, offset: 1280)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1956, file: !536, line: 417, baseType: !1637, size: 256, offset: 2048)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1956, file: !536, line: 418, baseType: !1639, size: 768, offset: 2304)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1956, file: !536, line: 419, baseType: !1637, size: 256, offset: 3072)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1956, file: !536, line: 420, baseType: !1639, size: 768, offset: 3328)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1956, file: !536, line: 421, baseType: !1637, size: 256, offset: 4096)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1956, file: !536, line: 422, baseType: !1650, size: 1792, offset: 4352)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1956, file: !536, line: 423, baseType: !1654, size: 1920, offset: 6144)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1956, file: !536, line: 424, baseType: !1659, size: 20608, offset: 8064)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1956, file: !536, line: 425, baseType: !301, size: 32, offset: 28672)
!1971 = !{!1972, !2121, !2129, !2131, !1884, !2134, !2136, !2141}
!1972 = !DIGlobalVariableExpression(var: !1973, expr: !DIExpression())
!1973 = distinct !DIGlobalVariable(name: "_kernel", scope: !1886, file: !1890, line: 40, type: !1974, isLocal: false, isDefinition: true)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !123, line: 158, size: 384, elements: !1975)
!1975 = !{!1976, !2101, !2120}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1974, file: !123, line: 159, baseType: !1977, size: 192)
!1977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1978, size: 192, elements: !525)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !123, line: 100, size: 192, elements: !1979)
!1979 = !{!1980, !1981, !1982, !2094, !2095, !2096, !2097}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1978, file: !123, line: 102, baseType: !110, size: 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1978, file: !123, line: 105, baseType: !1165, size: 32, offset: 32)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1978, file: !123, line: 108, baseType: !1983, size: 32, offset: 64)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 32)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !1985)
!1985 = !{!1986, !2044, !2056, !2057, !2058, !2065, !2066, !2067, !2068, !2074, !2089}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1984, file: !145, line: 247, baseType: !1987, size: 384)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !1988)
!1988 = !{!1989, !2013, !2020, !2021, !2022, !2031, !2032, !2033}
!1989 = !DIDerivedType(tag: DW_TAG_member, scope: !1987, file: !145, line: 60, baseType: !1990, size: 64)
!1990 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1987, file: !145, line: 60, size: 64, elements: !1991)
!1991 = !{!1992, !2007}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1990, file: !145, line: 61, baseType: !1993, size: 64)
!1993 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !1994)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !1995)
!1995 = !{!1996, !2002}
!1996 = !DIDerivedType(tag: DW_TAG_member, scope: !1994, file: !128, line: 38, baseType: !1997, size: 32)
!1997 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1994, file: !128, line: 38, size: 32, elements: !1998)
!1998 = !{!1999, !2001}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1997, file: !128, line: 39, baseType: !2000, size: 32)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 32)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1997, file: !128, line: 40, baseType: !2000, size: 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, scope: !1994, file: !128, line: 42, baseType: !2003, size: 32, offset: 32)
!2003 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1994, file: !128, line: 42, size: 32, elements: !2004)
!2004 = !{!2005, !2006}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2003, file: !128, line: 43, baseType: !2000, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2003, file: !128, line: 44, baseType: !2000, size: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1990, file: !145, line: 62, baseType: !2008, size: 64)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2009)
!2009 = !{!2010}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2008, file: !157, line: 50, baseType: !2011, size: 64)
!2011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2012, size: 64, elements: !162)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 32)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1987, file: !145, line: 68, baseType: !2014, size: 32, offset: 64)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !2016)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !2017)
!2017 = !{!2018}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2016, file: !123, line: 232, baseType: !2019, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !1994)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1987, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1987, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!2022 = !DIDerivedType(tag: DW_TAG_member, scope: !1987, file: !145, line: 90, baseType: !2023, size: 16, offset: 112)
!2023 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1987, file: !145, line: 90, size: 16, elements: !2024)
!2024 = !{!2025, !2030}
!2025 = !DIDerivedType(tag: DW_TAG_member, scope: !2023, file: !145, line: 91, baseType: !2026, size: 16)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2023, file: !145, line: 91, size: 16, elements: !2027)
!2027 = !{!2028, !2029}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2026, file: !145, line: 96, baseType: !177, size: 8)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2026, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2023, file: !145, line: 100, baseType: !181, size: 16)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1987, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1987, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1987, file: !145, line: 131, baseType: !2034, size: 192, offset: 192)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !2035)
!2035 = !{!2036, !2037, !2043}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2034, file: !123, line: 245, baseType: !1993, size: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2034, file: !123, line: 246, baseType: !2038, size: 32, offset: 64)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !2039)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 32)
!2040 = !DISubroutineType(types: !2041)
!2041 = !{null, !2042}
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2034, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1984, file: !145, line: 250, baseType: !2045, size: 288, offset: 384)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !2046)
!2046 = !{!2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2045, file: !198, line: 26, baseType: !110, size: 32)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2045, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2045, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2045, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2045, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2045, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2045, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2045, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2045, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1984, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1984, file: !145, line: 256, baseType: !2015, size: 64, offset: 704)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1984, file: !145, line: 271, baseType: !2059, size: 128, offset: 768)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !2060)
!2060 = !{!2061, !2062, !2063, !2064}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !2059, file: !145, line: 35, baseType: !215, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !2059, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !2059, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !2059, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !1984, file: !145, line: 274, baseType: !1983, size: 32, offset: 896)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1984, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1984, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1984, file: !145, line: 300, baseType: !2069, size: 96, offset: 1216)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !2070)
!2070 = !{!2071, !2072, !2073}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2069, file: !145, line: 153, baseType: !22, size: 32)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2069, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2069, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1984, file: !145, line: 325, baseType: !2075, size: 32, offset: 1312)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 32)
!2076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !2077)
!2077 = !{!2078, !2084, !2085}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2076, file: !119, line: 5074, baseType: !2079, size: 96)
!2079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !2080)
!2080 = !{!2081, !2082, !2083}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2079, file: !244, line: 57, baseType: !247, size: 32)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2079, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2079, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2076, file: !119, line: 5075, baseType: !2015, size: 64, offset: 96)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2076, file: !119, line: 5076, baseType: !2086, size: 32, offset: 160)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !2087)
!2087 = !{!2088}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2086, file: !254, line: 52, baseType: !22, size: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1984, file: !145, line: 343, baseType: !2090, size: 64, offset: 1344)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !2091)
!2091 = !{!2092, !2093}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2090, file: !198, line: 63, baseType: !110, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2090, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1978, file: !123, line: 111, baseType: !1983, size: 32, offset: 96)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1978, file: !123, line: 124, baseType: !109, size: 32, offset: 128)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1978, file: !123, line: 127, baseType: !167, size: 8, offset: 160)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1978, file: !123, line: 153, baseType: !2098, offset: 168)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2099, line: 33, elements: !2100)
!2099 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2100 = !{}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1974, file: !123, line: 170, baseType: !2102, size: 160, offset: 192)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !123, line: 83, size: 160, elements: !2103)
!2103 = !{!2104, !2105}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2102, file: !123, line: 86, baseType: !1983, size: 32)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2102, file: !123, line: 92, baseType: !2106, size: 128, offset: 32)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !2107, line: 37, size: 128, elements: !2108)
!2107 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2108 = !{!2109, !2119}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !2106, file: !2107, line: 38, baseType: !2110, size: 96)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !157, line: 83, size: 96, elements: !2111)
!2111 = !{!2112, !2113, !2118}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2110, file: !157, line: 84, baseType: !2012, size: 32)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !2110, file: !157, line: 85, baseType: !2114, size: 32, offset: 32)
!2114 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !157, line: 81, baseType: !2115)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 32)
!2116 = !DISubroutineType(types: !2117)
!2117 = !{!334, !2012, !2012}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !2110, file: !157, line: 86, baseType: !109, size: 32, offset: 64)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !2106, file: !2107, line: 39, baseType: !109, size: 32, offset: 96)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1974, file: !123, line: 188, baseType: !1983, size: 32, offset: 352)
!2121 = !DIGlobalVariableExpression(var: !2122, expr: !DIExpression())
!2122 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1886, file: !1890, line: 43, type: !2123, isLocal: false, isDefinition: true, align: 512)
!2123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2124, size: 8704, elements: !2127)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !273, line: 47, size: 8, elements: !2125)
!2125 = !{!2126}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2124, file: !273, line: 48, baseType: !226, size: 8)
!2127 = !{!2128}
!2128 = !DISubrange(count: 1088)
!2129 = !DIGlobalVariableExpression(var: !2130, expr: !DIExpression())
!2130 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1886, file: !1890, line: 44, type: !1984, isLocal: false, isDefinition: true)
!2131 = !DIGlobalVariableExpression(var: !2132, expr: !DIExpression())
!2132 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1886, file: !1890, line: 48, type: !2133, isLocal: false, isDefinition: true)
!2133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1984, size: 1408, elements: !525)
!2134 = !DIGlobalVariableExpression(var: !2135, expr: !DIExpression())
!2135 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1886, file: !1890, line: 217, type: !334, isLocal: false, isDefinition: true)
!2136 = !DIGlobalVariableExpression(var: !2137, expr: !DIExpression())
!2137 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1886, file: !1890, line: 50, type: !2138, isLocal: true, isDefinition: true, align: 512)
!2138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2124, size: 3072, elements: !2139)
!2139 = !{!526, !2140}
!2140 = !DISubrange(count: 384)
!2141 = !DIGlobalVariableExpression(var: !2142, expr: !DIExpression())
!2142 = distinct !DIGlobalVariable(name: "levels", scope: !2143, file: !1890, line: 232, type: !2163, isLocal: true, isDefinition: true)
!2143 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1890, file: !1890, line: 230, type: !2144, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !2146)
!2144 = !DISubroutineType(types: !2145)
!2145 = !{null, !1889}
!2146 = !{!2147, !2148, !2158, !2162}
!2147 = !DILocalVariable(name: "level", arg: 1, scope: !2143, file: !1890, line: 230, type: !1889)
!2148 = !DILocalVariable(name: "entry", scope: !2143, file: !1890, line: 244, type: !2149)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 32)
!2150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2151)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !312, line: 51, size: 64, elements: !2152)
!2152 = !{!2153, !2157}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2151, file: !312, line: 60, baseType: !2154, size: 32)
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 32)
!2155 = !DISubroutineType(types: !2156)
!2156 = !{!109, !1908}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2151, file: !312, line: 65, baseType: !1908, size: 32, offset: 32)
!2158 = !DILocalVariable(name: "dev", scope: !2159, file: !1890, line: 247, type: !1908)
!2159 = distinct !DILexicalBlock(scope: !2160, file: !1890, line: 246, column: 64)
!2160 = distinct !DILexicalBlock(scope: !2161, file: !1890, line: 246, column: 2)
!2161 = distinct !DILexicalBlock(scope: !2143, file: !1890, line: 246, column: 2)
!2162 = !DILocalVariable(name: "rc", scope: !2159, file: !1890, line: 248, type: !109)
!2163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2149, size: 192, elements: !264)
!2164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2124, size: 16896, elements: !2165)
!2165 = !{!526, !277}
!2166 = !DIGlobalVariableExpression(var: !2167, expr: !DIExpression())
!2167 = distinct !DIGlobalVariable(name: "z_thread_monitor_lock", scope: !2168, file: !2190, line: 39, type: !2283, isLocal: true, isDefinition: true)
!2168 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2169, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2170, globals: !2186, splitDebugInlining: false, nameTableKind: None)
!2169 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2170 = !{!108, !324, !104, !167, !22, !109, !2171, !24, !235, !1165, !110, !111}
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 32)
!2172 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !2173)
!2173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !2174)
!2174 = !{!2175, !2181}
!2175 = !DIDerivedType(tag: DW_TAG_member, scope: !2173, file: !128, line: 38, baseType: !2176, size: 32)
!2176 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2173, file: !128, line: 38, size: 32, elements: !2177)
!2177 = !{!2178, !2180}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2176, file: !128, line: 39, baseType: !2179, size: 32)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2176, file: !128, line: 40, baseType: !2179, size: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, scope: !2173, file: !128, line: 42, baseType: !2182, size: 32, offset: 32)
!2182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2173, file: !128, line: 42, size: 32, elements: !2183)
!2183 = !{!2184, !2185}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2182, file: !128, line: 43, baseType: !2179, size: 32)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2182, file: !128, line: 44, baseType: !2179, size: 32)
!2186 = !{!2187, !2301, !2166}
!2187 = !DIGlobalVariableExpression(var: !2188, expr: !DIExpression())
!2188 = distinct !DIGlobalVariable(name: "states_str", scope: !2189, file: !2190, line: 276, type: !2300, isLocal: true, isDefinition: true)
!2189 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2190, file: !2190, line: 271, type: !2191, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !2291)
!2190 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2191 = !DISubroutineType(types: !2192)
!2192 = !{!324, !2193, !1165, !235}
!2193 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !2194)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 32)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !2196)
!2196 = !{!2197, !2241, !2253, !2254, !2255, !2262, !2263, !2264, !2265, !2271, !2286}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2195, file: !145, line: 247, baseType: !2198, size: 384)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !2199)
!2199 = !{!2200, !2210, !2217, !2218, !2219, !2228, !2229, !2230}
!2200 = !DIDerivedType(tag: DW_TAG_member, scope: !2198, file: !145, line: 60, baseType: !2201, size: 64)
!2201 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2198, file: !145, line: 60, size: 64, elements: !2202)
!2202 = !{!2203, !2204}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2201, file: !145, line: 61, baseType: !2172, size: 64)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2201, file: !145, line: 62, baseType: !2205, size: 64)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2206)
!2206 = !{!2207}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2205, file: !157, line: 50, baseType: !2208, size: 64)
!2208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2209, size: 64, elements: !162)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 32)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2198, file: !145, line: 68, baseType: !2211, size: 32, offset: 64)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 32)
!2212 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !2213)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !2214)
!2214 = !{!2215}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2213, file: !123, line: 232, baseType: !2216, size: 64)
!2216 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !2173)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2198, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2198, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!2219 = !DIDerivedType(tag: DW_TAG_member, scope: !2198, file: !145, line: 90, baseType: !2220, size: 16, offset: 112)
!2220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2198, file: !145, line: 90, size: 16, elements: !2221)
!2221 = !{!2222, !2227}
!2222 = !DIDerivedType(tag: DW_TAG_member, scope: !2220, file: !145, line: 91, baseType: !2223, size: 16)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2220, file: !145, line: 91, size: 16, elements: !2224)
!2224 = !{!2225, !2226}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2223, file: !145, line: 96, baseType: !177, size: 8)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2223, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2220, file: !145, line: 100, baseType: !181, size: 16)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2198, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2198, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2198, file: !145, line: 131, baseType: !2231, size: 192, offset: 192)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !2232)
!2232 = !{!2233, !2234, !2240}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2231, file: !123, line: 245, baseType: !2172, size: 64)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2231, file: !123, line: 246, baseType: !2235, size: 32, offset: 64)
!2235 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !2236)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 32)
!2237 = !DISubroutineType(types: !2238)
!2238 = !{null, !2239}
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 32)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2231, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2195, file: !145, line: 250, baseType: !2242, size: 288, offset: 384)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !2243)
!2243 = !{!2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2242, file: !198, line: 26, baseType: !110, size: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2242, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2242, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2242, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2242, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2242, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2242, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2242, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2242, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2195, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2195, file: !145, line: 256, baseType: !2212, size: 64, offset: 704)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2195, file: !145, line: 271, baseType: !2256, size: 128, offset: 768)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !2257)
!2257 = !{!2258, !2259, !2260, !2261}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !2256, file: !145, line: 35, baseType: !215, size: 32)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !2256, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !2256, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !2256, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !2195, file: !145, line: 274, baseType: !2194, size: 32, offset: 896)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2195, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2195, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2195, file: !145, line: 300, baseType: !2266, size: 96, offset: 1216)
!2266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !2267)
!2267 = !{!2268, !2269, !2270}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2266, file: !145, line: 153, baseType: !22, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2266, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2266, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2195, file: !145, line: 325, baseType: !2272, size: 32, offset: 1312)
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 32)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !2274)
!2274 = !{!2275, !2281, !2282}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2273, file: !119, line: 5074, baseType: !2276, size: 96)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !2277)
!2277 = !{!2278, !2279, !2280}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2276, file: !244, line: 57, baseType: !247, size: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2276, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2276, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2273, file: !119, line: 5075, baseType: !2212, size: 64, offset: 96)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2273, file: !119, line: 5076, baseType: !2283, size: 32, offset: 160)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !2284)
!2284 = !{!2285}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2283, file: !254, line: 52, baseType: !22, size: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2195, file: !145, line: 343, baseType: !2287, size: 64, offset: 1344)
!2287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !2288)
!2288 = !{!2289, !2290}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2287, file: !198, line: 63, baseType: !110, size: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2287, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!2291 = !{!2292, !2293, !2294, !2295, !2296, !2297, !2298}
!2292 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2189, file: !2190, line: 271, type: !2193)
!2293 = !DILocalVariable(name: "buf", arg: 2, scope: !2189, file: !2190, line: 271, type: !1165)
!2294 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2189, file: !2190, line: 271, type: !235)
!2295 = !DILocalVariable(name: "off", scope: !2189, file: !2190, line: 273, type: !235)
!2296 = !DILocalVariable(name: "bit", scope: !2189, file: !2190, line: 274, type: !167)
!2297 = !DILocalVariable(name: "thread_state", scope: !2189, file: !2190, line: 275, type: !167)
!2298 = !DILocalVariable(name: "index", scope: !2299, file: !2190, line: 293, type: !167)
!2299 = distinct !DILexicalBlock(scope: !2189, file: !2190, line: 293, column: 2)
!2300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !324, size: 256, elements: !1484)
!2301 = !DIGlobalVariableExpression(var: !2302, expr: !DIExpression())
!2302 = distinct !DIGlobalVariable(name: "states_sz", scope: !2189, file: !2190, line: 279, type: !2303, isLocal: true, isDefinition: true)
!2303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1818, size: 256, elements: !1484)
!2304 = !DIGlobalVariableExpression(var: !2305, expr: !DIExpression())
!2305 = distinct !DIGlobalVariable(name: "lock", scope: !2306, file: !2422, line: 47, type: !2413, isLocal: true, isDefinition: true)
!2306 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2307, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2308, globals: !2421, splitDebugInlining: false, nameTableKind: None)
!2307 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2308 = !{!334, !108, !109, !2309, !2324}
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 32)
!2310 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !2311)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !2312)
!2312 = !{!2313, !2319}
!2313 = !DIDerivedType(tag: DW_TAG_member, scope: !2311, file: !128, line: 38, baseType: !2314, size: 32)
!2314 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2311, file: !128, line: 38, size: 32, elements: !2315)
!2315 = !{!2316, !2318}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2314, file: !128, line: 39, baseType: !2317, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2314, file: !128, line: 40, baseType: !2317, size: 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, scope: !2311, file: !128, line: 42, baseType: !2320, size: 32, offset: 32)
!2320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2311, file: !128, line: 42, size: 32, elements: !2321)
!2321 = !{!2322, !2323}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2320, file: !128, line: 43, baseType: !2317, size: 32)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2320, file: !128, line: 44, baseType: !2317, size: 32)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 32)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !2326)
!2326 = !{!2327, !2371, !2383, !2384, !2385, !2392, !2393, !2394, !2395, !2401, !2416}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2325, file: !145, line: 247, baseType: !2328, size: 384)
!2328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !2329)
!2329 = !{!2330, !2340, !2347, !2348, !2349, !2358, !2359, !2360}
!2330 = !DIDerivedType(tag: DW_TAG_member, scope: !2328, file: !145, line: 60, baseType: !2331, size: 64)
!2331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2328, file: !145, line: 60, size: 64, elements: !2332)
!2332 = !{!2333, !2334}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2331, file: !145, line: 61, baseType: !2310, size: 64)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2331, file: !145, line: 62, baseType: !2335, size: 64)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2336)
!2336 = !{!2337}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2335, file: !157, line: 50, baseType: !2338, size: 64)
!2338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2339, size: 64, elements: !162)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 32)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2328, file: !145, line: 68, baseType: !2341, size: 32, offset: 64)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 32)
!2342 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !2343)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !2344)
!2344 = !{!2345}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2343, file: !123, line: 232, baseType: !2346, size: 64)
!2346 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !2311)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2328, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2328, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!2349 = !DIDerivedType(tag: DW_TAG_member, scope: !2328, file: !145, line: 90, baseType: !2350, size: 16, offset: 112)
!2350 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2328, file: !145, line: 90, size: 16, elements: !2351)
!2351 = !{!2352, !2357}
!2352 = !DIDerivedType(tag: DW_TAG_member, scope: !2350, file: !145, line: 91, baseType: !2353, size: 16)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2350, file: !145, line: 91, size: 16, elements: !2354)
!2354 = !{!2355, !2356}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2353, file: !145, line: 96, baseType: !177, size: 8)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2353, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2350, file: !145, line: 100, baseType: !181, size: 16)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2328, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2328, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2328, file: !145, line: 131, baseType: !2361, size: 192, offset: 192)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !2362)
!2362 = !{!2363, !2364, !2370}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2361, file: !123, line: 245, baseType: !2310, size: 64)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2361, file: !123, line: 246, baseType: !2365, size: 32, offset: 64)
!2365 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !2366)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 32)
!2367 = !DISubroutineType(types: !2368)
!2368 = !{null, !2369}
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2361, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2325, file: !145, line: 250, baseType: !2372, size: 288, offset: 384)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !2373)
!2373 = !{!2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2372, file: !198, line: 26, baseType: !110, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2372, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2372, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2372, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2372, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2372, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2372, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2372, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2372, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2325, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2325, file: !145, line: 256, baseType: !2342, size: 64, offset: 704)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2325, file: !145, line: 271, baseType: !2386, size: 128, offset: 768)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !2387)
!2387 = !{!2388, !2389, !2390, !2391}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !2386, file: !145, line: 35, baseType: !215, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !2386, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !2386, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !2386, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !2325, file: !145, line: 274, baseType: !2324, size: 32, offset: 896)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2325, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2325, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2325, file: !145, line: 300, baseType: !2396, size: 96, offset: 1216)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !2397)
!2397 = !{!2398, !2399, !2400}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2396, file: !145, line: 153, baseType: !22, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2396, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2396, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2325, file: !145, line: 325, baseType: !2402, size: 32, offset: 1312)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 32)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !2404)
!2404 = !{!2405, !2411, !2412}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2403, file: !119, line: 5074, baseType: !2406, size: 96)
!2406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !2407)
!2407 = !{!2408, !2409, !2410}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2406, file: !244, line: 57, baseType: !247, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2406, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2406, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2403, file: !119, line: 5075, baseType: !2342, size: 64, offset: 96)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2403, file: !119, line: 5076, baseType: !2413, size: 32, offset: 160)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !2414)
!2414 = !{!2415}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2413, file: !254, line: 52, baseType: !22, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2325, file: !145, line: 343, baseType: !2417, size: 64, offset: 1344)
!2417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !2418)
!2418 = !{!2419, !2420}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2417, file: !198, line: 63, baseType: !110, size: 32)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2417, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!2421 = !{!2304}
!2422 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2423 = !DIGlobalVariableExpression(var: !2424, expr: !DIExpression())
!2424 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2425, file: !2543, line: 56, type: !2531, isLocal: false, isDefinition: true)
!2425 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2426, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2427, globals: !2540, splitDebugInlining: false, nameTableKind: None)
!2426 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2427 = !{!2428, !1165, !108, !2539, !1923, !104, !765, !109, !110, !111}
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 32)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !2430)
!2430 = !{!2431, !2489, !2501, !2502, !2503, !2510, !2511, !2512, !2513, !2519, !2534}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2429, file: !145, line: 247, baseType: !2432, size: 384)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !2433)
!2433 = !{!2434, !2458, !2465, !2466, !2467, !2476, !2477, !2478}
!2434 = !DIDerivedType(tag: DW_TAG_member, scope: !2432, file: !145, line: 60, baseType: !2435, size: 64)
!2435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2432, file: !145, line: 60, size: 64, elements: !2436)
!2436 = !{!2437, !2452}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2435, file: !145, line: 61, baseType: !2438, size: 64)
!2438 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !2439)
!2439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !2440)
!2440 = !{!2441, !2447}
!2441 = !DIDerivedType(tag: DW_TAG_member, scope: !2439, file: !128, line: 38, baseType: !2442, size: 32)
!2442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2439, file: !128, line: 38, size: 32, elements: !2443)
!2443 = !{!2444, !2446}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2442, file: !128, line: 39, baseType: !2445, size: 32)
!2445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2442, file: !128, line: 40, baseType: !2445, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, scope: !2439, file: !128, line: 42, baseType: !2448, size: 32, offset: 32)
!2448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2439, file: !128, line: 42, size: 32, elements: !2449)
!2449 = !{!2450, !2451}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2448, file: !128, line: 43, baseType: !2445, size: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2448, file: !128, line: 44, baseType: !2445, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2435, file: !145, line: 62, baseType: !2453, size: 64)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2454)
!2454 = !{!2455}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2453, file: !157, line: 50, baseType: !2456, size: 64)
!2456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2457, size: 64, elements: !162)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2432, file: !145, line: 68, baseType: !2459, size: 32, offset: 64)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !2461)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !2462)
!2462 = !{!2463}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2461, file: !123, line: 232, baseType: !2464, size: 64)
!2464 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !2439)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2432, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2432, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!2467 = !DIDerivedType(tag: DW_TAG_member, scope: !2432, file: !145, line: 90, baseType: !2468, size: 16, offset: 112)
!2468 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2432, file: !145, line: 90, size: 16, elements: !2469)
!2469 = !{!2470, !2475}
!2470 = !DIDerivedType(tag: DW_TAG_member, scope: !2468, file: !145, line: 91, baseType: !2471, size: 16)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2468, file: !145, line: 91, size: 16, elements: !2472)
!2472 = !{!2473, !2474}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2471, file: !145, line: 96, baseType: !177, size: 8)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2471, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2468, file: !145, line: 100, baseType: !181, size: 16)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2432, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2432, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2432, file: !145, line: 131, baseType: !2479, size: 192, offset: 192)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !2480)
!2480 = !{!2481, !2482, !2488}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2479, file: !123, line: 245, baseType: !2438, size: 64)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2479, file: !123, line: 246, baseType: !2483, size: 32, offset: 64)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !2484)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 32)
!2485 = !DISubroutineType(types: !2486)
!2486 = !{null, !2487}
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2479, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2429, file: !145, line: 250, baseType: !2490, size: 288, offset: 384)
!2490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !2491)
!2491 = !{!2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2490, file: !198, line: 26, baseType: !110, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2490, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2490, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2490, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2490, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2490, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2490, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2490, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2490, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2429, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2429, file: !145, line: 256, baseType: !2460, size: 64, offset: 704)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2429, file: !145, line: 271, baseType: !2504, size: 128, offset: 768)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !2505)
!2505 = !{!2506, !2507, !2508, !2509}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !2504, file: !145, line: 35, baseType: !215, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !2504, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !2504, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !2504, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !2429, file: !145, line: 274, baseType: !2428, size: 32, offset: 896)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2429, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2429, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2429, file: !145, line: 300, baseType: !2514, size: 96, offset: 1216)
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !2515)
!2515 = !{!2516, !2517, !2518}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2514, file: !145, line: 153, baseType: !22, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2514, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2514, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2429, file: !145, line: 325, baseType: !2520, size: 32, offset: 1312)
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 32)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !2522)
!2522 = !{!2523, !2529, !2530}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2521, file: !119, line: 5074, baseType: !2524, size: 96)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !2525)
!2525 = !{!2526, !2527, !2528}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2524, file: !244, line: 57, baseType: !247, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2524, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2524, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2521, file: !119, line: 5075, baseType: !2460, size: 64, offset: 96)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2521, file: !119, line: 5076, baseType: !2531, size: 32, offset: 160)
!2531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !2532)
!2532 = !{!2533}
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2531, file: !254, line: 52, baseType: !22, size: 32)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2429, file: !145, line: 343, baseType: !2535, size: 64, offset: 1344)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !2536)
!2536 = !{!2537, !2538}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2535, file: !198, line: 63, baseType: !110, size: 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2535, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 32)
!2540 = !{!2423, !2541, !2544, !2546}
!2541 = !DIGlobalVariableExpression(var: !2542, expr: !DIExpression())
!2542 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2425, file: !2543, line: 404, type: !109, isLocal: true, isDefinition: true)
!2543 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2544 = !DIGlobalVariableExpression(var: !2545, expr: !DIExpression())
!2545 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2425, file: !2543, line: 405, type: !109, isLocal: true, isDefinition: true)
!2546 = !DIGlobalVariableExpression(var: !2547, expr: !DIExpression())
!2547 = distinct !DIGlobalVariable(name: "pending_current", scope: !2425, file: !2543, line: 425, type: !2428, isLocal: true, isDefinition: true)
!2548 = !DIGlobalVariableExpression(var: !2549, expr: !DIExpression())
!2549 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2550, file: !2580, line: 19, type: !2586, isLocal: true, isDefinition: true)
!2550 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2551, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2552, globals: !2577, splitDebugInlining: false, nameTableKind: None)
!2551 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2552 = !{!104, !108, !765, !110, !111, !109, !2553, !1165, !106}
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 32)
!2554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !2555)
!2555 = !{!2556, !2571, !2576}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2554, file: !123, line: 245, baseType: !2557, size: 64)
!2557 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !2558)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !2559)
!2559 = !{!2560, !2566}
!2560 = !DIDerivedType(tag: DW_TAG_member, scope: !2558, file: !128, line: 38, baseType: !2561, size: 32)
!2561 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2558, file: !128, line: 38, size: 32, elements: !2562)
!2562 = !{!2563, !2565}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2561, file: !128, line: 39, baseType: !2564, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 32)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2561, file: !128, line: 40, baseType: !2564, size: 32)
!2566 = !DIDerivedType(tag: DW_TAG_member, scope: !2558, file: !128, line: 42, baseType: !2567, size: 32, offset: 32)
!2567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2558, file: !128, line: 42, size: 32, elements: !2568)
!2568 = !{!2569, !2570}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2567, file: !128, line: 43, baseType: !2564, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2567, file: !128, line: 44, baseType: !2564, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2554, file: !123, line: 246, baseType: !2572, size: 32, offset: 64)
!2572 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !2573)
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 32)
!2574 = !DISubroutineType(types: !2575)
!2575 = !{null, !2553}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2554, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!2577 = !{!2578, !2548, !2581, !2583}
!2578 = !DIGlobalVariableExpression(var: !2579, expr: !DIExpression())
!2579 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2550, file: !2580, line: 15, type: !111, isLocal: true, isDefinition: true)
!2580 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2581 = !DIGlobalVariableExpression(var: !2582, expr: !DIExpression())
!2582 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2550, file: !2580, line: 25, type: !109, isLocal: true, isDefinition: true)
!2583 = !DIGlobalVariableExpression(var: !2584, expr: !DIExpression())
!2584 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2550, file: !2580, line: 17, type: !2585, isLocal: true, isDefinition: true)
!2585 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !2558)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !2587)
!2587 = !{!2588}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2586, file: !254, line: 52, baseType: !22, size: 32)
!2589 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2590, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!2590 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2591 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2592, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2593, retainedTypes: !2599, splitDebugInlining: false, nameTableKind: None)
!2592 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/rb.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2593 = !{!2594, !30}
!2594 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rb_color", file: !2595, line: 19, baseType: !32, size: 32, elements: !2596)
!2595 = !DIFile(filename: "zephyr/lib/os/rb.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2596 = !{!2597, !2598}
!2597 = !DIEnumerator(name: "RED", value: 0)
!2598 = !DIEnumerator(name: "BLACK", value: 1)
!2599 = !{!108, !109, !22, !2600, !167}
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2601, size: 32)
!2601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !2602)
!2602 = !{!2603}
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2601, file: !157, line: 50, baseType: !2604, size: 64)
!2604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2600, size: 64, elements: !162)
!2605 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2606, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!2606 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2607 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2608, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2609, retainedTypes: !2629, splitDebugInlining: false, nameTableKind: None)
!2608 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2609 = !{!2610, !2618}
!2610 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2611, line: 69, baseType: !32, size: 32, elements: !2612)
!2611 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2612 = !{!2613, !2614, !2615, !2616, !2617}
!2613 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2614 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2615 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2616 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2617 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2618 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2611, line: 56, baseType: !32, size: 32, elements: !2619)
!2619 = !{!2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628}
!2620 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2621 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2622 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2623 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2624 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2625 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2626 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2627 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2628 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2629 = !{!109, !2610, !2618, !2630, !178, !341, !2632, !2633, !168, !182, !324, !235, !108, !22, !32, !2635, !2636, !2637, !103, !2638, !107, !2639, !2631, !2640, !2641, !2642, !2643}
!2630 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2611, line: 31, baseType: !2631)
!2631 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !107)
!2632 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !236, line: 329, baseType: !32)
!2633 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2611, line: 32, baseType: !2634)
!2634 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !112)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!2637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 32)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !103, size: 32)
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !236, line: 145, baseType: !109)
!2643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 32)
!2644 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2645, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!2645 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2646 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2647, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2647 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2648 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2649, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2650, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!2649 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2650 = !{!2651, !30}
!2651 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2652, line: 27, baseType: !32, size: 32, elements: !2653)
!2652 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2653 = !{!2654, !2655, !2656, !2657, !2658}
!2654 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2655 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2656 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2657 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2658 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2659 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2660, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2661, retainedTypes: !2662, splitDebugInlining: false, nameTableKind: None)
!2660 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2661 = !{!595, !2651, !30}
!2662 = !{!791, !2663, !108, !109, !765, !110, !167, !2680}
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 32)
!2664 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !536, line: 426, baseType: !2665)
!2665 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 411, size: 28704, elements: !2666)
!2666 = !{!2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2665, file: !536, line: 413, baseType: !1637, size: 256)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2665, file: !536, line: 414, baseType: !1639, size: 768, offset: 256)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2665, file: !536, line: 415, baseType: !1637, size: 256, offset: 1024)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2665, file: !536, line: 416, baseType: !1639, size: 768, offset: 1280)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2665, file: !536, line: 417, baseType: !1637, size: 256, offset: 2048)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2665, file: !536, line: 418, baseType: !1639, size: 768, offset: 2304)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2665, file: !536, line: 419, baseType: !1637, size: 256, offset: 3072)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2665, file: !536, line: 420, baseType: !1639, size: 768, offset: 3328)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2665, file: !536, line: 421, baseType: !1637, size: 256, offset: 4096)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2665, file: !536, line: 422, baseType: !1650, size: 1792, offset: 4352)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2665, file: !536, line: 423, baseType: !1654, size: 1920, offset: 6144)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2665, file: !536, line: 424, baseType: !1659, size: 20608, offset: 8064)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2665, file: !536, line: 425, baseType: !301, size: 32, offset: 28672)
!2680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 32)
!2681 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !2682)
!2682 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !2683)
!2683 = !{!2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2682, file: !536, line: 447, baseType: !540, size: 32)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2682, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2682, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2682, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2682, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2682, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2682, file: !536, line: 453, baseType: !1674, size: 96, offset: 192)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2682, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2682, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2682, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2682, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2682, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2682, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2682, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2682, file: !536, line: 461, baseType: !1685, size: 64, offset: 512)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2682, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2682, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2682, file: !536, line: 464, baseType: !1689, size: 128, offset: 640)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2682, file: !536, line: 465, baseType: !1691, size: 160, offset: 768)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2682, file: !536, line: 466, baseType: !1693, size: 160, offset: 928)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2682, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!2705 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2706, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!2706 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2707 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2708, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2709, splitDebugInlining: false, nameTableKind: None)
!2708 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2709 = !{!108, !109, !22, !2710}
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 32)
!2711 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !2712)
!2712 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !2713)
!2713 = !{!2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2712, file: !536, line: 447, baseType: !540, size: 32)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2712, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2712, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2712, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2712, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2712, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2712, file: !536, line: 453, baseType: !1674, size: 96, offset: 192)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2712, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2712, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2712, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2712, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2712, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2712, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2712, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2712, file: !536, line: 461, baseType: !1685, size: 64, offset: 512)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2712, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2712, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2712, file: !536, line: 464, baseType: !1689, size: 128, offset: 640)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2712, file: !536, line: 465, baseType: !1691, size: 160, offset: 768)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2712, file: !536, line: 466, baseType: !1693, size: 160, offset: 928)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2712, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!2735 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2736, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2737, splitDebugInlining: false, nameTableKind: None)
!2736 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2737 = !{!2738, !108, !109}
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 32)
!2739 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !2740)
!2740 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !2741)
!2741 = !{!2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2740, file: !536, line: 447, baseType: !540, size: 32)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2740, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2740, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2740, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2740, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2740, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2740, file: !536, line: 453, baseType: !1674, size: 96, offset: 192)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2740, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2740, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2740, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2740, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2740, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2740, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2740, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2740, file: !536, line: 461, baseType: !1685, size: 64, offset: 512)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2740, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2740, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2740, file: !536, line: 464, baseType: !1689, size: 128, offset: 640)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2740, file: !536, line: 465, baseType: !1691, size: 160, offset: 768)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2740, file: !536, line: 466, baseType: !1693, size: 160, offset: 928)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2740, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!2763 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2764, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2765, splitDebugInlining: false, nameTableKind: None)
!2764 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2765 = !{!2766, !110, !108, !109}
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 32)
!2767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2768, line: 98, size: 256, elements: !2769)
!2768 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2769 = !{!2770, !2775, !2780, !2785, !2790, !2795, !2800, !2805}
!2770 = !DIDerivedType(tag: DW_TAG_member, scope: !2767, file: !2768, line: 99, baseType: !2771, size: 32)
!2771 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2767, file: !2768, line: 99, size: 32, elements: !2772)
!2772 = !{!2773, !2774}
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2771, file: !2768, line: 99, baseType: !110, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2771, file: !2768, line: 99, baseType: !110, size: 32)
!2775 = !DIDerivedType(tag: DW_TAG_member, scope: !2767, file: !2768, line: 100, baseType: !2776, size: 32, offset: 32)
!2776 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2767, file: !2768, line: 100, size: 32, elements: !2777)
!2777 = !{!2778, !2779}
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2776, file: !2768, line: 100, baseType: !110, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2776, file: !2768, line: 100, baseType: !110, size: 32)
!2780 = !DIDerivedType(tag: DW_TAG_member, scope: !2767, file: !2768, line: 101, baseType: !2781, size: 32, offset: 64)
!2781 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2767, file: !2768, line: 101, size: 32, elements: !2782)
!2782 = !{!2783, !2784}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2781, file: !2768, line: 101, baseType: !110, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2781, file: !2768, line: 101, baseType: !110, size: 32)
!2785 = !DIDerivedType(tag: DW_TAG_member, scope: !2767, file: !2768, line: 102, baseType: !2786, size: 32, offset: 96)
!2786 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2767, file: !2768, line: 102, size: 32, elements: !2787)
!2787 = !{!2788, !2789}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2786, file: !2768, line: 102, baseType: !110, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2786, file: !2768, line: 102, baseType: !110, size: 32)
!2790 = !DIDerivedType(tag: DW_TAG_member, scope: !2767, file: !2768, line: 103, baseType: !2791, size: 32, offset: 128)
!2791 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2767, file: !2768, line: 103, size: 32, elements: !2792)
!2792 = !{!2793, !2794}
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2791, file: !2768, line: 103, baseType: !110, size: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2791, file: !2768, line: 103, baseType: !110, size: 32)
!2795 = !DIDerivedType(tag: DW_TAG_member, scope: !2767, file: !2768, line: 104, baseType: !2796, size: 32, offset: 160)
!2796 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2767, file: !2768, line: 104, size: 32, elements: !2797)
!2797 = !{!2798, !2799}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2796, file: !2768, line: 104, baseType: !110, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2796, file: !2768, line: 104, baseType: !110, size: 32)
!2800 = !DIDerivedType(tag: DW_TAG_member, scope: !2767, file: !2768, line: 105, baseType: !2801, size: 32, offset: 192)
!2801 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2767, file: !2768, line: 105, size: 32, elements: !2802)
!2802 = !{!2803, !2804}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2801, file: !2768, line: 105, baseType: !110, size: 32)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2801, file: !2768, line: 105, baseType: !110, size: 32)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2767, file: !2768, line: 106, baseType: !110, size: 32, offset: 224)
!2806 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2807, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2650, retainedTypes: !2808, splitDebugInlining: false, nameTableKind: None)
!2807 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2808 = !{!2809, !108, !109, !2834, !2877, !110}
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 32)
!2810 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !2811)
!2811 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !2812)
!2812 = !{!2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833}
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2811, file: !536, line: 447, baseType: !540, size: 32)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2811, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2811, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2811, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2811, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2811, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2811, file: !536, line: 453, baseType: !1674, size: 96, offset: 192)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2811, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2811, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2811, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2811, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2811, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2811, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2811, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2811, file: !536, line: 461, baseType: !1685, size: 64, offset: 512)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2811, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2811, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2811, file: !536, line: 464, baseType: !1689, size: 128, offset: 640)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2811, file: !536, line: 465, baseType: !1691, size: 160, offset: 768)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2811, file: !536, line: 466, baseType: !1693, size: 160, offset: 928)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2811, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!2834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2835, size: 32)
!2835 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2768, line: 141, baseType: !2836)
!2836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2768, line: 97, size: 256, elements: !2837)
!2837 = !{!2838}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2836, file: !2768, line: 107, baseType: !2839, size: 256)
!2839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2768, line: 98, size: 256, elements: !2840)
!2840 = !{!2841, !2846, !2851, !2856, !2861, !2866, !2871, !2876}
!2841 = !DIDerivedType(tag: DW_TAG_member, scope: !2839, file: !2768, line: 99, baseType: !2842, size: 32)
!2842 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2839, file: !2768, line: 99, size: 32, elements: !2843)
!2843 = !{!2844, !2845}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2842, file: !2768, line: 99, baseType: !110, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2842, file: !2768, line: 99, baseType: !110, size: 32)
!2846 = !DIDerivedType(tag: DW_TAG_member, scope: !2839, file: !2768, line: 100, baseType: !2847, size: 32, offset: 32)
!2847 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2839, file: !2768, line: 100, size: 32, elements: !2848)
!2848 = !{!2849, !2850}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2847, file: !2768, line: 100, baseType: !110, size: 32)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2847, file: !2768, line: 100, baseType: !110, size: 32)
!2851 = !DIDerivedType(tag: DW_TAG_member, scope: !2839, file: !2768, line: 101, baseType: !2852, size: 32, offset: 64)
!2852 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2839, file: !2768, line: 101, size: 32, elements: !2853)
!2853 = !{!2854, !2855}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2852, file: !2768, line: 101, baseType: !110, size: 32)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2852, file: !2768, line: 101, baseType: !110, size: 32)
!2856 = !DIDerivedType(tag: DW_TAG_member, scope: !2839, file: !2768, line: 102, baseType: !2857, size: 32, offset: 96)
!2857 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2839, file: !2768, line: 102, size: 32, elements: !2858)
!2858 = !{!2859, !2860}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2857, file: !2768, line: 102, baseType: !110, size: 32)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2857, file: !2768, line: 102, baseType: !110, size: 32)
!2861 = !DIDerivedType(tag: DW_TAG_member, scope: !2839, file: !2768, line: 103, baseType: !2862, size: 32, offset: 128)
!2862 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2839, file: !2768, line: 103, size: 32, elements: !2863)
!2863 = !{!2864, !2865}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2862, file: !2768, line: 103, baseType: !110, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2862, file: !2768, line: 103, baseType: !110, size: 32)
!2866 = !DIDerivedType(tag: DW_TAG_member, scope: !2839, file: !2768, line: 104, baseType: !2867, size: 32, offset: 160)
!2867 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2839, file: !2768, line: 104, size: 32, elements: !2868)
!2868 = !{!2869, !2870}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2867, file: !2768, line: 104, baseType: !110, size: 32)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2867, file: !2768, line: 104, baseType: !110, size: 32)
!2871 = !DIDerivedType(tag: DW_TAG_member, scope: !2839, file: !2768, line: 105, baseType: !2872, size: 32, offset: 192)
!2872 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2839, file: !2768, line: 105, size: 32, elements: !2873)
!2873 = !{!2874, !2875}
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2872, file: !2768, line: 105, baseType: !110, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2872, file: !2768, line: 105, baseType: !110, size: 32)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2839, file: !2768, line: 106, baseType: !110, size: 32, offset: 224)
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!2878 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2879, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1622, retainedTypes: !2880, splitDebugInlining: false, nameTableKind: None)
!2879 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2880 = !{!791, !765, !167, !110, !2881, !2898}
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 32)
!2882 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !536, line: 426, baseType: !2883)
!2883 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 411, size: 28704, elements: !2884)
!2884 = !{!2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2883, file: !536, line: 413, baseType: !1637, size: 256)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2883, file: !536, line: 414, baseType: !1639, size: 768, offset: 256)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2883, file: !536, line: 415, baseType: !1637, size: 256, offset: 1024)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2883, file: !536, line: 416, baseType: !1639, size: 768, offset: 1280)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2883, file: !536, line: 417, baseType: !1637, size: 256, offset: 2048)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2883, file: !536, line: 418, baseType: !1639, size: 768, offset: 2304)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2883, file: !536, line: 419, baseType: !1637, size: 256, offset: 3072)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2883, file: !536, line: 420, baseType: !1639, size: 768, offset: 3328)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2883, file: !536, line: 421, baseType: !1637, size: 256, offset: 4096)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2883, file: !536, line: 422, baseType: !1650, size: 1792, offset: 4352)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2883, file: !536, line: 423, baseType: !1654, size: 1920, offset: 6144)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2883, file: !536, line: 424, baseType: !1659, size: 20608, offset: 8064)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2883, file: !536, line: 425, baseType: !301, size: 32, offset: 28672)
!2898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2899, size: 32)
!2899 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !2900)
!2900 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !2901)
!2901 = !{!2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2900, file: !536, line: 447, baseType: !540, size: 32)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2900, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2900, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2900, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2900, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2900, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2900, file: !536, line: 453, baseType: !1674, size: 96, offset: 192)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2900, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2900, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2900, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2900, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2900, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2900, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2900, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2900, file: !536, line: 461, baseType: !1685, size: 64, offset: 512)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2900, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2900, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2900, file: !536, line: 464, baseType: !1689, size: 128, offset: 640)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2900, file: !536, line: 465, baseType: !1691, size: 160, offset: 768)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2900, file: !536, line: 466, baseType: !1693, size: 160, offset: 928)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2900, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!2923 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2924, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2925, splitDebugInlining: false, nameTableKind: None)
!2924 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2925 = !{!2926, !108, !109}
!2926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2927, size: 32)
!2927 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !536, line: 468, baseType: !2928)
!2928 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 445, size: 1120, elements: !2929)
!2929 = !{!2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950}
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2928, file: !536, line: 447, baseType: !540, size: 32)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2928, file: !536, line: 448, baseType: !301, size: 32, offset: 32)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2928, file: !536, line: 449, baseType: !301, size: 32, offset: 64)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2928, file: !536, line: 450, baseType: !301, size: 32, offset: 96)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2928, file: !536, line: 451, baseType: !301, size: 32, offset: 128)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2928, file: !536, line: 452, baseType: !301, size: 32, offset: 160)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2928, file: !536, line: 453, baseType: !1674, size: 96, offset: 192)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2928, file: !536, line: 454, baseType: !301, size: 32, offset: 288)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2928, file: !536, line: 455, baseType: !301, size: 32, offset: 320)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2928, file: !536, line: 456, baseType: !301, size: 32, offset: 352)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2928, file: !536, line: 457, baseType: !301, size: 32, offset: 384)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2928, file: !536, line: 458, baseType: !301, size: 32, offset: 416)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2928, file: !536, line: 459, baseType: !301, size: 32, offset: 448)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2928, file: !536, line: 460, baseType: !301, size: 32, offset: 480)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2928, file: !536, line: 461, baseType: !1685, size: 64, offset: 512)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2928, file: !536, line: 462, baseType: !540, size: 32, offset: 576)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2928, file: !536, line: 463, baseType: !540, size: 32, offset: 608)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2928, file: !536, line: 464, baseType: !1689, size: 128, offset: 640)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2928, file: !536, line: 465, baseType: !1691, size: 160, offset: 768)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2928, file: !536, line: 466, baseType: !1693, size: 160, offset: 928)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2928, file: !536, line: 467, baseType: !301, size: 32, offset: 1088)
!2951 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2952, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2953, splitDebugInlining: false, nameTableKind: None)
!2952 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2953 = !{!226, !1165, !235, !998, !2954, !168, !108}
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 32)
!2955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !168)
!2956 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2957, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2958, splitDebugInlining: false, nameTableKind: None)
!2957 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2958 = !{!2959}
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 32)
!2960 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !297, line: 586, baseType: !2961)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 550, size: 1216, elements: !2962)
!2962 = !{!2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2961, file: !297, line: 552, baseType: !301, size: 32)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2961, file: !297, line: 553, baseType: !301, size: 32, offset: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2961, file: !297, line: 554, baseType: !301, size: 32, offset: 64)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2961, file: !297, line: 555, baseType: !301, size: 32, offset: 96)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2961, file: !297, line: 556, baseType: !301, size: 32, offset: 128)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2961, file: !297, line: 557, baseType: !301, size: 32, offset: 160)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2961, file: !297, line: 558, baseType: !301, size: 32, offset: 192)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2961, file: !297, line: 559, baseType: !110, size: 32, offset: 224)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2961, file: !297, line: 560, baseType: !301, size: 32, offset: 256)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2961, file: !297, line: 561, baseType: !301, size: 32, offset: 288)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2961, file: !297, line: 562, baseType: !863, size: 64, offset: 320)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2961, file: !297, line: 563, baseType: !301, size: 32, offset: 384)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2961, file: !297, line: 564, baseType: !301, size: 32, offset: 416)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2961, file: !297, line: 565, baseType: !301, size: 32, offset: 448)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2961, file: !297, line: 566, baseType: !110, size: 32, offset: 480)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2961, file: !297, line: 567, baseType: !301, size: 32, offset: 512)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2961, file: !297, line: 568, baseType: !301, size: 32, offset: 544)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2961, file: !297, line: 569, baseType: !863, size: 64, offset: 576)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2961, file: !297, line: 570, baseType: !301, size: 32, offset: 640)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2961, file: !297, line: 571, baseType: !301, size: 32, offset: 672)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2961, file: !297, line: 572, baseType: !301, size: 32, offset: 704)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2961, file: !297, line: 573, baseType: !110, size: 32, offset: 736)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2961, file: !297, line: 574, baseType: !301, size: 32, offset: 768)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2961, file: !297, line: 575, baseType: !301, size: 32, offset: 800)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2961, file: !297, line: 576, baseType: !863, size: 64, offset: 832)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2961, file: !297, line: 577, baseType: !301, size: 32, offset: 896)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2961, file: !297, line: 578, baseType: !301, size: 32, offset: 928)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2961, file: !297, line: 579, baseType: !863, size: 64, offset: 960)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2961, file: !297, line: 580, baseType: !301, size: 32, offset: 1024)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2961, file: !297, line: 581, baseType: !301, size: 32, offset: 1056)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2961, file: !297, line: 582, baseType: !301, size: 32, offset: 1088)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2961, file: !297, line: 583, baseType: !301, size: 32, offset: 1120)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2961, file: !297, line: 584, baseType: !301, size: 32, offset: 1152)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2961, file: !297, line: 585, baseType: !301, size: 32, offset: 1184)
!2997 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2998, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2998 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!2999 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3000, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3001, retainedTypes: !3017, splitDebugInlining: false, nameTableKind: None)
!3000 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!3001 = !{!3002, !3009, !3013}
!3002 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3003, line: 38, baseType: !32, size: 32, elements: !3004)
!3003 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3004 = !{!3005, !3006, !3007, !3008}
!3005 = !DIEnumerator(name: "HAL_OK", value: 0)
!3006 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3007 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3008 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3009 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !836, line: 184, baseType: !32, size: 32, elements: !3010)
!3010 = !{!3011, !3012}
!3011 = !DIEnumerator(name: "RESET", value: 0)
!3012 = !DIEnumerator(name: "SET", value: 1)
!3013 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !836, line: 190, baseType: !32, size: 32, elements: !3014)
!3014 = !{!3015, !3016}
!3015 = !DIEnumerator(name: "DISABLE", value: 0)
!3016 = !DIEnumerator(name: "ENABLE", value: 1)
!3017 = !{!3018, !110, !3056, !1478, !167, !111, !108}
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 32)
!3019 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !297, line: 586, baseType: !3020)
!3020 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 550, size: 1216, elements: !3021)
!3021 = !{!3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3020, file: !297, line: 552, baseType: !301, size: 32)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3020, file: !297, line: 553, baseType: !301, size: 32, offset: 32)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3020, file: !297, line: 554, baseType: !301, size: 32, offset: 64)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3020, file: !297, line: 555, baseType: !301, size: 32, offset: 96)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3020, file: !297, line: 556, baseType: !301, size: 32, offset: 128)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3020, file: !297, line: 557, baseType: !301, size: 32, offset: 160)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3020, file: !297, line: 558, baseType: !301, size: 32, offset: 192)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3020, file: !297, line: 559, baseType: !110, size: 32, offset: 224)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3020, file: !297, line: 560, baseType: !301, size: 32, offset: 256)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3020, file: !297, line: 561, baseType: !301, size: 32, offset: 288)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3020, file: !297, line: 562, baseType: !863, size: 64, offset: 320)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3020, file: !297, line: 563, baseType: !301, size: 32, offset: 384)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3020, file: !297, line: 564, baseType: !301, size: 32, offset: 416)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3020, file: !297, line: 565, baseType: !301, size: 32, offset: 448)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3020, file: !297, line: 566, baseType: !110, size: 32, offset: 480)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3020, file: !297, line: 567, baseType: !301, size: 32, offset: 512)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3020, file: !297, line: 568, baseType: !301, size: 32, offset: 544)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3020, file: !297, line: 569, baseType: !863, size: 64, offset: 576)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3020, file: !297, line: 570, baseType: !301, size: 32, offset: 640)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3020, file: !297, line: 571, baseType: !301, size: 32, offset: 672)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3020, file: !297, line: 572, baseType: !301, size: 32, offset: 704)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3020, file: !297, line: 573, baseType: !110, size: 32, offset: 736)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3020, file: !297, line: 574, baseType: !301, size: 32, offset: 768)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3020, file: !297, line: 575, baseType: !301, size: 32, offset: 800)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3020, file: !297, line: 576, baseType: !863, size: 64, offset: 832)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3020, file: !297, line: 577, baseType: !301, size: 32, offset: 896)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3020, file: !297, line: 578, baseType: !301, size: 32, offset: 928)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3020, file: !297, line: 579, baseType: !863, size: 64, offset: 960)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3020, file: !297, line: 580, baseType: !301, size: 32, offset: 1024)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3020, file: !297, line: 581, baseType: !301, size: 32, offset: 1056)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3020, file: !297, line: 582, baseType: !301, size: 32, offset: 1088)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3020, file: !297, line: 583, baseType: !301, size: 32, offset: 1120)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3020, file: !297, line: 584, baseType: !301, size: 32, offset: 1152)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3020, file: !297, line: 585, baseType: !301, size: 32, offset: 1184)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 32)
!3057 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !297, line: 544, baseType: !3058)
!3058 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 540, size: 64, elements: !3059)
!3059 = !{!3060, !3061}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3058, file: !297, line: 542, baseType: !301, size: 32)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3058, file: !297, line: 543, baseType: !301, size: 32, offset: 32)
!3062 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3063, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3064, retainedTypes: !3065, splitDebugInlining: false, nameTableKind: None)
!3063 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!3064 = !{!835}
!3065 = !{!3066, !110, !3074, !3080, !3091}
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 32)
!3067 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !536, line: 770, baseType: !3068)
!3068 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !536, line: 764, size: 128, elements: !3069)
!3069 = !{!3070, !3071, !3072, !3073}
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3068, file: !536, line: 766, baseType: !301, size: 32)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3068, file: !536, line: 767, baseType: !301, size: 32, offset: 32)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3068, file: !536, line: 768, baseType: !301, size: 32, offset: 64)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3068, file: !536, line: 769, baseType: !540, size: 32, offset: 96)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 32)
!3075 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !297, line: 544, baseType: !3076)
!3076 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 540, size: 64, elements: !3077)
!3077 = !{!3078, !3079}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3076, file: !297, line: 542, baseType: !301, size: 32)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3076, file: !297, line: 543, baseType: !301, size: 32, offset: 32)
!3080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3081, size: 32)
!3081 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !297, line: 407, baseType: !3082)
!3082 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 398, size: 224, elements: !3083)
!3083 = !{!3084, !3085, !3086, !3087, !3088, !3089, !3090}
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3082, file: !297, line: 400, baseType: !301, size: 32)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3082, file: !297, line: 401, baseType: !301, size: 32, offset: 32)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3082, file: !297, line: 402, baseType: !301, size: 32, offset: 64)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3082, file: !297, line: 403, baseType: !301, size: 32, offset: 96)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3082, file: !297, line: 404, baseType: !301, size: 32, offset: 128)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3082, file: !297, line: 405, baseType: !301, size: 32, offset: 160)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3082, file: !297, line: 406, baseType: !301, size: 32, offset: 192)
!3091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3092, size: 32)
!3092 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !297, line: 586, baseType: !3093)
!3093 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !297, line: 550, size: 1216, elements: !3094)
!3094 = !{!3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3128}
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3093, file: !297, line: 552, baseType: !301, size: 32)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3093, file: !297, line: 553, baseType: !301, size: 32, offset: 32)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3093, file: !297, line: 554, baseType: !301, size: 32, offset: 64)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3093, file: !297, line: 555, baseType: !301, size: 32, offset: 96)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3093, file: !297, line: 556, baseType: !301, size: 32, offset: 128)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3093, file: !297, line: 557, baseType: !301, size: 32, offset: 160)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3093, file: !297, line: 558, baseType: !301, size: 32, offset: 192)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3093, file: !297, line: 559, baseType: !110, size: 32, offset: 224)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3093, file: !297, line: 560, baseType: !301, size: 32, offset: 256)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3093, file: !297, line: 561, baseType: !301, size: 32, offset: 288)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3093, file: !297, line: 562, baseType: !863, size: 64, offset: 320)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3093, file: !297, line: 563, baseType: !301, size: 32, offset: 384)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3093, file: !297, line: 564, baseType: !301, size: 32, offset: 416)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3093, file: !297, line: 565, baseType: !301, size: 32, offset: 448)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3093, file: !297, line: 566, baseType: !110, size: 32, offset: 480)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3093, file: !297, line: 567, baseType: !301, size: 32, offset: 512)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3093, file: !297, line: 568, baseType: !301, size: 32, offset: 544)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3093, file: !297, line: 569, baseType: !863, size: 64, offset: 576)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3093, file: !297, line: 570, baseType: !301, size: 32, offset: 640)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3093, file: !297, line: 571, baseType: !301, size: 32, offset: 672)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3093, file: !297, line: 572, baseType: !301, size: 32, offset: 704)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3093, file: !297, line: 573, baseType: !110, size: 32, offset: 736)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3093, file: !297, line: 574, baseType: !301, size: 32, offset: 768)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3093, file: !297, line: 575, baseType: !301, size: 32, offset: 800)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3093, file: !297, line: 576, baseType: !863, size: 64, offset: 832)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3093, file: !297, line: 577, baseType: !301, size: 32, offset: 896)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3093, file: !297, line: 578, baseType: !301, size: 32, offset: 928)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3093, file: !297, line: 579, baseType: !863, size: 64, offset: 960)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3093, file: !297, line: 580, baseType: !301, size: 32, offset: 1024)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3093, file: !297, line: 581, baseType: !301, size: 32, offset: 1056)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3093, file: !297, line: 582, baseType: !301, size: 32, offset: 1088)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3093, file: !297, line: 583, baseType: !301, size: 32, offset: 1120)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3093, file: !297, line: 584, baseType: !301, size: 32, offset: 1152)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3093, file: !297, line: 585, baseType: !301, size: 32, offset: 1184)
!3129 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3130, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3131, splitDebugInlining: false, nameTableKind: None)
!3130 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!3131 = !{!108, !235}
!3132 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3133, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3134, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!3133 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!3134 = !{!3135, !3142, !2651, !30}
!3135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3136, line: 14, baseType: !32, size: 32, elements: !3137)
!3136 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3137 = !{!3138, !3139, !3140, !3141}
!3138 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3139 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3140 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3141 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3142 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3136, line: 42, baseType: !32, size: 32, elements: !3143)
!3143 = !{!3144, !3145, !3146, !3147, !3148, !3149}
!3144 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3145 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3146 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3147 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3148 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3149 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3150 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3151, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!3151 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!3152 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3153, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3154, splitDebugInlining: false, nameTableKind: None)
!3153 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!3154 = !{!22, !108, !109}
!3155 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3156, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !284, splitDebugInlining: false, nameTableKind: None)
!3156 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!3157 = !{!"Ubuntu clang version 14.0.6"}
!3158 = !{i32 7, !"Dwarf Version", i32 4}
!3159 = !{i32 2, !"Debug Info Version", i32 3}
!3160 = !{i32 1, !"wchar_size", i32 4}
!3161 = !{i32 1, !"min_enum_size", i32 4}
!3162 = !{i32 1, !"branch-target-enforcement", i32 0}
!3163 = !{i32 1, !"sign-return-address", i32 0}
!3164 = !{i32 1, !"sign-return-address-all", i32 0}
!3165 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3166 = !{i32 7, !"frame-pointer", i32 2}
!3167 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3168, file: !3168, line: 26, type: !3169, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2589, retainedNodes: !2100)
!3168 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3169 = !DISubroutineType(types: !3170)
!3170 = !{null}
!3171 = !DILocation(line: 28, column: 1, scope: !3167)
!3172 = !{i64 2155374628, i64 2155374648, i64 2155374711}
!3173 = !DILocation(line: 29, column: 1, scope: !3167)
!3174 = !{i64 2155375043, i64 2155375063, i64 2155375126}
!3175 = !DILocation(line: 30, column: 1, scope: !3167)
!3176 = !{i64 2155375462, i64 2155375482, i64 2155375545}
!3177 = !DILocation(line: 31, column: 1, scope: !3167)
!3178 = !{i64 2155375881, i64 2155375901, i64 2155375964}
!3179 = !DILocation(line: 33, column: 1, scope: !3167)
!3180 = !{i64 2155376173, i64 2155376193, i64 2155376256}
!3181 = !DILocation(line: 35, column: 1, scope: !3167)
!3182 = !{i64 2155376498, i64 2155376518, i64 2155376581}
!3183 = !DILocation(line: 42, column: 1, scope: !3167)
!3184 = !{i64 2155376925, i64 2155376945, i64 2155377008}
!3185 = !DILocation(line: 50, column: 1, scope: !3167)
!3186 = !{i64 2155377367, i64 2155377387, i64 2155377450}
!3187 = !DILocation(line: 54, column: 1, scope: !3167)
!3188 = !{i64 2155377806, i64 2155377826, i64 2155377889}
!3189 = !DILocation(line: 61, column: 1, scope: !3167)
!3190 = !{i64 2155378123, i64 2155378143, i64 2155378206}
!3191 = !DILocation(line: 63, column: 1, scope: !3167)
!3192 = !{i64 2155378503, i64 2155378523, i64 2155378586}
!3193 = !DILocation(line: 64, column: 1, scope: !3167)
!3194 = !{i64 2155379025, i64 2155379045, i64 2155379108}
!3195 = !DILocation(line: 65, column: 1, scope: !3167)
!3196 = !{i64 2155379523, i64 2155379543, i64 2155379606}
!3197 = !DILocation(line: 66, column: 1, scope: !3167)
!3198 = !{i64 2155380005, i64 2155380025, i64 2155380088}
!3199 = !DILocation(line: 67, column: 1, scope: !3167)
!3200 = !{i64 2155380512, i64 2155380532, i64 2155380595}
!3201 = !DILocation(line: 68, column: 1, scope: !3167)
!3202 = !{i64 2155381000, i64 2155381020, i64 2155381083}
!3203 = !DILocation(line: 70, column: 1, scope: !3167)
!3204 = !{i64 2155381468, i64 2155381488, i64 2155381551}
!3205 = !DILocation(line: 71, column: 1, scope: !3167)
!3206 = !{i64 2155381910, i64 2155381930, i64 2155381993}
!3207 = !DILocation(line: 72, column: 1, scope: !3167)
!3208 = !{i64 2155382368, i64 2155382388, i64 2155382451}
!3209 = !DILocation(line: 79, column: 1, scope: !3167)
!3210 = !{i64 2155382822, i64 2155382842, i64 2155382905}
!3211 = !DILocation(line: 80, column: 1, scope: !3167)
!3212 = !{i64 2155383333, i64 2155383353, i64 2155383416}
!3213 = !DILocation(line: 82, column: 1, scope: !3167)
!3214 = !{i64 2155387885, i64 2155387905, i64 2155387968}
!3215 = !DILocation(line: 86, column: 1, scope: !3167)
!3216 = !{i64 2155388354, i64 2155388374, i64 2155388437}
!3217 = !DILocation(line: 97, column: 1, scope: !3167)
!3218 = !{i64 2155388696, i64 2155388716, i64 2155388779}
!3219 = !DILocation(line: 99, column: 1, scope: !3167)
!3220 = !{i64 2155388914, i64 2155388934, i64 2155388997}
!3221 = !DILocation(line: 102, column: 1, scope: !3167)
!3222 = !{i64 2155389171, i64 2155389191, i64 2155389254}
!3223 = !DILocation(line: 105, column: 1, scope: !3167)
!3224 = !{i64 2155389411, i64 2155389431, i64 2155389494}
!3225 = !DILocation(line: 115, column: 1, scope: !3167)
!3226 = !{i64 2155389750, i64 2155389770, i64 2155389833}
!3227 = !DILocation(line: 118, column: 1, scope: !3167)
!3228 = !{i64 2155390094, i64 2155390114, i64 2155390177}
!3229 = !DILocation(line: 32, column: 1, scope: !3230)
!3230 = !DILexicalBlockFile(scope: !3167, file: !3231, discriminator: 0)
!3231 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3232 = !{i64 2155390450, i64 2155390470, i64 2155390533}
!3233 = !DILocation(line: 33, column: 1, scope: !3230)
!3234 = !{i64 2155390962, i64 2155390982, i64 2155391045}
!3235 = !DILocation(line: 53, column: 1, scope: !3230)
!3236 = !{i64 2155391470, i64 2155391490, i64 2155391553}
!3237 = !DILocation(line: 54, column: 1, scope: !3230)
!3238 = !{i64 2155391888, i64 2155391908, i64 2155391971}
!3239 = !DILocation(line: 55, column: 1, scope: !3230)
!3240 = !{i64 2155392306, i64 2155392326, i64 2155392389}
!3241 = !DILocation(line: 56, column: 1, scope: !3230)
!3242 = !{i64 2155392724, i64 2155392744, i64 2155392807}
!3243 = !DILocation(line: 57, column: 1, scope: !3230)
!3244 = !{i64 2155393142, i64 2155393162, i64 2155393225}
!3245 = !DILocation(line: 58, column: 1, scope: !3230)
!3246 = !{i64 2155393560, i64 2155393580, i64 2155393643}
!3247 = !DILocation(line: 59, column: 1, scope: !3230)
!3248 = !{i64 2155393978, i64 2155393998, i64 2155394061}
!3249 = !DILocation(line: 60, column: 1, scope: !3230)
!3250 = !{i64 2155394402, i64 2155394422, i64 2155394485}
!3251 = !DILocation(line: 61, column: 1, scope: !3230)
!3252 = !{i64 2155394719, i64 2155394739, i64 2155394802}
!3253 = !DILocation(line: 70, column: 1, scope: !3230)
!3254 = !{i64 2155394948, i64 2155394968, i64 2155395031}
!3255 = !DILocation(line: 72, column: 1, scope: !3230)
!3256 = !{i64 2155395280, i64 2155395300, i64 2155395363}
!3257 = !DILocation(line: 73, column: 1, scope: !3230)
!3258 = !{i64 2155395730, i64 2155395750, i64 2155395813}
!3259 = !DILocation(line: 74, column: 1, scope: !3230)
!3260 = !{i64 2155396180, i64 2155396200, i64 2155396263}
!3261 = !DILocation(line: 75, column: 1, scope: !3230)
!3262 = !{i64 2155396630, i64 2155396650, i64 2155396713}
!3263 = !DILocation(line: 76, column: 1, scope: !3230)
!3264 = !{i64 2155397080, i64 2155397100, i64 2155397163}
!3265 = !DILocation(line: 77, column: 1, scope: !3230)
!3266 = !{i64 2155397530, i64 2155397550, i64 2155397613}
!3267 = !DILocation(line: 78, column: 1, scope: !3230)
!3268 = !{i64 2155402041, i64 2155402061, i64 2155402124}
!3269 = !DILocation(line: 79, column: 1, scope: !3230)
!3270 = !{i64 2155402491, i64 2155402511, i64 2155402574}
!3271 = !DILocation(line: 80, column: 1, scope: !3230)
!3272 = !{i64 2155402944, i64 2155402964, i64 2155403027}
!3273 = !DILocation(line: 84, column: 1, scope: !3230)
!3274 = !{i64 2155403276, i64 2155403296, i64 2155403359}
!3275 = !DILocation(line: 91, column: 1, scope: !3230)
!3276 = !{i64 2155403673, i64 2155403693, i64 2155403756}
!3277 = !DILocation(line: 93, column: 1, scope: !3230)
!3278 = !{i64 2155404040, i64 2155404060, i64 2155404123}
!3279 = !DILocation(line: 106, column: 1, scope: !3230)
!3280 = !{i64 2155404310, i64 2155404330, i64 2155404393}
!3281 = !DILocation(line: 11, column: 1, scope: !3282)
!3282 = !DILexicalBlockFile(scope: !3167, file: !3283, discriminator: 0)
!3283 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3284 = distinct !DISubprogram(name: "philosopher", scope: !3285, file: !3285, line: 140, type: !218, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3286)
!3285 = !DIFile(filename: "zephyr/samples/philosophers/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3286 = !{!3287, !3288, !3289, !3290, !3291, !3292, !3293}
!3287 = !DILocalVariable(name: "id", arg: 1, scope: !3284, file: !3285, line: 140, type: !108)
!3288 = !DILocalVariable(name: "unused1", arg: 2, scope: !3284, file: !3285, line: 140, type: !108)
!3289 = !DILocalVariable(name: "unused2", arg: 3, scope: !3284, file: !3285, line: 140, type: !108)
!3290 = !DILocalVariable(name: "fork1", scope: !3284, file: !3285, line: 145, type: !279)
!3291 = !DILocalVariable(name: "fork2", scope: !3284, file: !3285, line: 146, type: !279)
!3292 = !DILocalVariable(name: "my_id", scope: !3284, file: !3285, line: 148, type: !109)
!3293 = !DILocalVariable(name: "delay", scope: !3294, file: !3285, line: 160, type: !765)
!3294 = distinct !DILexicalBlock(scope: !3284, file: !3285, line: 159, column: 12)
!3295 = !DILocation(line: 0, scope: !3284)
!3296 = !DILocation(line: 148, column: 14, scope: !3284)
!3297 = !DILocation(line: 151, column: 6, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3284, file: !3285, line: 151, column: 6)
!3299 = !DILocation(line: 151, column: 6, scope: !3284)
!3300 = !DILocation(line: 155, column: 11, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3298, file: !3285, line: 154, column: 9)
!3302 = !DILocation(line: 156, column: 11, scope: !3301)
!3303 = !DILocation(line: 0, scope: !3298)
!3304 = !DILocation(line: 159, column: 2, scope: !3284)
!3305 = !DILocation(line: 162, column: 3, scope: !3294)
!3306 = !DILocation(line: 163, column: 3, scope: !3294)
!3307 = !DILocation(line: 164, column: 3, scope: !3294)
!3308 = !DILocation(line: 165, column: 3, scope: !3294)
!3309 = !DILocation(line: 167, column: 11, scope: !3294)
!3310 = !DILocation(line: 0, scope: !3294)
!3311 = !DILocation(line: 168, column: 3, scope: !3294)
!3312 = !DILocation(line: 169, column: 3, scope: !3294)
!3313 = !DILocation(line: 171, column: 3, scope: !3294)
!3314 = !DILocation(line: 172, column: 3, scope: !3294)
!3315 = !DILocation(line: 173, column: 3, scope: !3294)
!3316 = !DILocation(line: 175, column: 11, scope: !3294)
!3317 = !DILocation(line: 176, column: 3, scope: !3294)
!3318 = !DILocation(line: 177, column: 3, scope: !3294)
!3319 = distinct !{!3319, !3304, !3320}
!3320 = !DILocation(line: 178, column: 2, scope: !3284)
!3321 = distinct !DISubprogram(name: "is_last_philosopher", scope: !3285, file: !3285, line: 135, type: !288, scopeLine: 136, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3322)
!3322 = !{!3323}
!3323 = !DILocalVariable(name: "id", arg: 1, scope: !3321, file: !3285, line: 135, type: !109)
!3324 = !DILocation(line: 0, scope: !3321)
!3325 = !DILocation(line: 137, column: 12, scope: !3321)
!3326 = !DILocation(line: 137, column: 2, scope: !3321)
!3327 = distinct !DISubprogram(name: "print_phil_state", scope: !3285, file: !3285, line: 100, type: !3328, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3330)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{null, !109, !324, !765}
!3330 = !{!3331, !3332, !3333, !3334}
!3331 = !DILocalVariable(name: "id", arg: 1, scope: !3327, file: !3285, line: 100, type: !109)
!3332 = !DILocalVariable(name: "fmt", arg: 2, scope: !3327, file: !3285, line: 100, type: !324)
!3333 = !DILocalVariable(name: "delay", arg: 3, scope: !3327, file: !3285, line: 100, type: !765)
!3334 = !DILocalVariable(name: "prio", scope: !3327, file: !3285, line: 102, type: !109)
!3335 = !DILocation(line: 0, scope: !3327)
!3336 = !DILocation(line: 102, column: 35, scope: !3327)
!3337 = !DILocation(line: 102, column: 13, scope: !3327)
!3338 = !DILocation(line: 104, column: 2, scope: !3327)
!3339 = !DILocation(line: 107, column: 18, scope: !3327)
!3340 = !DILocation(line: 107, column: 13, scope: !3327)
!3341 = !DILocation(line: 108, column: 9, scope: !3327)
!3342 = !DILocation(line: 106, column: 2, scope: !3327)
!3343 = !DILocation(line: 111, column: 6, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3327, file: !3285, line: 111, column: 6)
!3345 = !DILocation(line: 111, column: 6, scope: !3327)
!3346 = !DILocation(line: 112, column: 3, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3344, file: !3285, line: 111, column: 13)
!3348 = !DILocation(line: 113, column: 2, scope: !3347)
!3349 = !DILocation(line: 114, column: 3, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3344, file: !3285, line: 113, column: 9)
!3351 = !DILocation(line: 117, column: 2, scope: !3327)
!3352 = !DILocation(line: 118, column: 1, scope: !3327)
!3353 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3354, file: !3354, line: 927, type: !3355, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3361)
!3354 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!3355 = !DISubroutineType(types: !3356)
!3356 = !{!109, !279, !3357}
!3357 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !3358)
!3358 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !3359)
!3359 = !{!3360}
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3358, file: !105, line: 66, baseType: !104, size: 64)
!3361 = !{!3362, !3363}
!3362 = !DILocalVariable(name: "mutex", arg: 1, scope: !3353, file: !3354, line: 927, type: !279)
!3363 = !DILocalVariable(name: "timeout", arg: 2, scope: !3353, file: !3354, line: 927, type: !3357)
!3364 = !DILocation(line: 0, scope: !3353)
!3365 = !DILocation(line: 936, column: 2, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3353, file: !3354, line: 936, column: 2)
!3367 = !{i64 2155072661}
!3368 = !DILocation(line: 937, column: 9, scope: !3353)
!3369 = !DILocation(line: 937, column: 2, scope: !3353)
!3370 = distinct !DISubprogram(name: "get_random_delay", scope: !3285, file: !3285, line: 120, type: !3371, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3373)
!3371 = !DISubroutineType(types: !3372)
!3372 = !{!765, !109, !109}
!3373 = !{!3374, !3375, !3376, !3377}
!3374 = !DILocalVariable(name: "id", arg: 1, scope: !3370, file: !3285, line: 120, type: !109)
!3375 = !DILocalVariable(name: "period_in_ms", arg: 2, scope: !3370, file: !3285, line: 120, type: !109)
!3376 = !DILocalVariable(name: "delay", scope: !3370, file: !3285, line: 127, type: !765)
!3377 = !DILocalVariable(name: "ms", scope: !3370, file: !3285, line: 130, type: !765)
!3378 = !DILocation(line: 0, scope: !3370)
!3379 = !DILocation(line: 127, column: 19, scope: !3370)
!3380 = !DILocation(line: 127, column: 36, scope: !3370)
!3381 = !DILocation(line: 127, column: 47, scope: !3370)
!3382 = !DILocation(line: 127, column: 41, scope: !3370)
!3383 = !DILocation(line: 127, column: 53, scope: !3370)
!3384 = !DILocation(line: 130, column: 27, scope: !3370)
!3385 = !DILocation(line: 132, column: 2, scope: !3370)
!3386 = distinct !DISubprogram(name: "k_msleep", scope: !119, file: !119, line: 439, type: !3387, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3389)
!3387 = !DISubroutineType(types: !3388)
!3388 = !{!765, !765}
!3389 = !{!3390}
!3390 = !DILocalVariable(name: "ms", arg: 1, scope: !3386, file: !119, line: 439, type: !765)
!3391 = !DILocation(line: 0, scope: !3386)
!3392 = !DILocation(line: 441, column: 17, scope: !3386)
!3393 = !DILocation(line: 441, column: 9, scope: !3386)
!3394 = !DILocation(line: 441, column: 2, scope: !3386)
!3395 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3354, file: !3354, line: 944, type: !3396, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3398)
!3396 = !DISubroutineType(types: !3397)
!3397 = !{!109, !279}
!3398 = !{!3399}
!3399 = !DILocalVariable(name: "mutex", arg: 1, scope: !3395, file: !3354, line: 944, type: !279)
!3400 = !DILocation(line: 0, scope: !3395)
!3401 = !DILocation(line: 952, column: 2, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3395, file: !3354, line: 952, column: 2)
!3403 = !{i64 2155072729}
!3404 = !DILocation(line: 953, column: 9, scope: !3395)
!3405 = !DILocation(line: 953, column: 2, scope: !3395)
!3406 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3407, file: !3407, line: 403, type: !3408, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3410)
!3407 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3408 = !DISubroutineType(types: !3409)
!3409 = !{!111, !111}
!3410 = !{!3411}
!3411 = !DILocalVariable(name: "t", arg: 1, scope: !3406, file: !3407, line: 403, type: !111)
!3412 = !DILocation(line: 0, scope: !3406)
!3413 = !DILocalVariable(name: "t", arg: 1, scope: !3414, file: !3407, line: 102, type: !111)
!3414 = distinct !DISubprogram(name: "z_tmcvt", scope: !3407, file: !3407, line: 102, type: !3415, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3417)
!3415 = !DISubroutineType(types: !3416)
!3416 = !{!111, !111, !110, !110, !334, !334, !334, !334}
!3417 = !{!3413, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427}
!3418 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3414, file: !3407, line: 102, type: !110)
!3419 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3414, file: !3407, line: 103, type: !110)
!3420 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3414, file: !3407, line: 103, type: !334)
!3421 = !DILocalVariable(name: "result32", arg: 5, scope: !3414, file: !3407, line: 104, type: !334)
!3422 = !DILocalVariable(name: "round_up", arg: 6, scope: !3414, file: !3407, line: 104, type: !334)
!3423 = !DILocalVariable(name: "round_off", arg: 7, scope: !3414, file: !3407, line: 105, type: !334)
!3424 = !DILocalVariable(name: "mul_ratio", scope: !3414, file: !3407, line: 107, type: !334)
!3425 = !DILocalVariable(name: "div_ratio", scope: !3414, file: !3407, line: 109, type: !334)
!3426 = !DILocalVariable(name: "off", scope: !3414, file: !3407, line: 116, type: !111)
!3427 = !DILocalVariable(name: "rdivisor", scope: !3428, file: !3407, line: 119, type: !110)
!3428 = distinct !DILexicalBlock(scope: !3429, file: !3407, line: 118, column: 18)
!3429 = distinct !DILexicalBlock(scope: !3414, file: !3407, line: 118, column: 6)
!3430 = !DILocation(line: 0, scope: !3414, inlinedAt: !3431)
!3431 = distinct !DILocation(line: 406, column: 9, scope: !3406)
!3432 = !DILocation(line: 145, column: 13, scope: !3433, inlinedAt: !3431)
!3433 = distinct !DILexicalBlock(scope: !3434, file: !3407, line: 144, column: 10)
!3434 = distinct !DILexicalBlock(scope: !3435, file: !3407, line: 142, column: 7)
!3435 = distinct !DILexicalBlock(scope: !3436, file: !3407, line: 141, column: 24)
!3436 = distinct !DILexicalBlock(scope: !3437, file: !3407, line: 141, column: 13)
!3437 = distinct !DILexicalBlock(scope: !3414, file: !3407, line: 134, column: 6)
!3438 = !DILocation(line: 406, column: 2, scope: !3406)
!3439 = distinct !DISubprogram(name: "k_sleep", scope: !3354, file: !3354, line: 91, type: !3440, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3442)
!3440 = !DISubroutineType(types: !3441)
!3441 = !{!765, !3357}
!3442 = !{!3443}
!3443 = !DILocalVariable(name: "timeout", arg: 1, scope: !3439, file: !3354, line: 91, type: !3357)
!3444 = !DILocation(line: 0, scope: !3439)
!3445 = !DILocation(line: 99, column: 2, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3439, file: !3354, line: 99, column: 2)
!3447 = !{i64 2155069293}
!3448 = !DILocation(line: 100, column: 9, scope: !3439)
!3449 = !DILocation(line: 100, column: 2, scope: !3439)
!3450 = distinct !DISubprogram(name: "k_uptime_get_32", scope: !119, file: !119, line: 1640, type: !3451, scopeLine: 1641, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2100)
!3451 = !DISubroutineType(types: !3452)
!3452 = !{!110}
!3453 = !DILocation(line: 1642, column: 19, scope: !3450)
!3454 = !DILocation(line: 1642, column: 9, scope: !3450)
!3455 = !DILocation(line: 1642, column: 2, scope: !3450)
!3456 = distinct !DISubprogram(name: "k_uptime_get", scope: !119, file: !119, line: 1616, type: !3457, scopeLine: 1617, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2100)
!3457 = !DISubroutineType(types: !3458)
!3458 = !{!106}
!3459 = !DILocation(line: 1618, column: 31, scope: !3456)
!3460 = !DILocation(line: 1618, column: 9, scope: !3456)
!3461 = !DILocation(line: 1618, column: 2, scope: !3456)
!3462 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !3354, file: !3354, line: 564, type: !3457, scopeLine: 565, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2100)
!3463 = !DILocation(line: 573, column: 2, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3462, file: !3354, line: 573, column: 2)
!3465 = !{i64 2155071197}
!3466 = !DILocation(line: 574, column: 9, scope: !3462)
!3467 = !DILocation(line: 574, column: 2, scope: !3462)
!3468 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3407, file: !3407, line: 1103, type: !3408, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3469)
!3469 = !{!3470}
!3470 = !DILocalVariable(name: "t", arg: 1, scope: !3468, file: !3407, line: 1103, type: !111)
!3471 = !DILocation(line: 0, scope: !3468)
!3472 = !DILocation(line: 0, scope: !3414, inlinedAt: !3473)
!3473 = distinct !DILocation(line: 1106, column: 9, scope: !3468)
!3474 = !DILocation(line: 139, column: 13, scope: !3475, inlinedAt: !3473)
!3475 = distinct !DILexicalBlock(scope: !3476, file: !3407, line: 138, column: 10)
!3476 = distinct !DILexicalBlock(scope: !3477, file: !3407, line: 136, column: 7)
!3477 = distinct !DILexicalBlock(scope: !3437, file: !3407, line: 134, column: 17)
!3478 = !DILocation(line: 1106, column: 2, scope: !3468)
!3479 = distinct !DISubprogram(name: "k_current_get", scope: !119, file: !119, line: 530, type: !3480, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2100)
!3480 = !DISubroutineType(types: !3481)
!3481 = !{!3482}
!3482 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !143)
!3483 = !DILocation(line: 535, column: 9, scope: !3479)
!3484 = !DILocation(line: 535, column: 2, scope: !3479)
!3485 = distinct !DISubprogram(name: "k_thread_priority_get", scope: !3354, file: !3354, line: 258, type: !3486, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3488)
!3486 = !DISubroutineType(types: !3487)
!3487 = !{!109, !3482}
!3488 = !{!3489}
!3489 = !DILocalVariable(name: "thread", arg: 1, scope: !3485, file: !3354, line: 258, type: !3482)
!3490 = !DILocation(line: 0, scope: !3485)
!3491 = !DILocation(line: 266, column: 2, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3485, file: !3354, line: 266, column: 2)
!3493 = !{i64 2155069973}
!3494 = !DILocation(line: 267, column: 9, scope: !3485)
!3495 = !DILocation(line: 267, column: 2, scope: !3485)
!3496 = distinct !DISubprogram(name: "set_phil_state_pos", scope: !3285, file: !3285, line: 92, type: !3497, scopeLine: 93, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3499)
!3497 = !DISubroutineType(types: !3498)
!3498 = !{null, !109}
!3499 = !{!3500}
!3500 = !DILocalVariable(name: "id", arg: 1, scope: !3496, file: !3285, line: 92, type: !109)
!3501 = !DILocation(line: 0, scope: !3496)
!3502 = !DILocation(line: 95, column: 27, scope: !3496)
!3503 = !DILocation(line: 95, column: 2, scope: !3496)
!3504 = !DILocation(line: 97, column: 1, scope: !3496)
!3505 = distinct !DISubprogram(name: "z_current_get", scope: !3354, file: !3354, line: 173, type: !3480, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2100)
!3506 = !DILocation(line: 180, column: 2, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3505, file: !3354, line: 180, column: 2)
!3508 = !{i64 2155069633}
!3509 = !DILocation(line: 181, column: 9, scope: !3505)
!3510 = !DILocation(line: 181, column: 2, scope: !3505)
!3511 = distinct !DISubprogram(name: "main", scope: !3285, file: !3285, line: 252, type: !3169, scopeLine: 253, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2100)
!3512 = !DILocation(line: 254, column: 2, scope: !3511)
!3513 = !DILocation(line: 256, column: 2, scope: !3511)
!3514 = !DILocation(line: 259, column: 2, scope: !3511)
!3515 = !DILocation(line: 260, column: 2, scope: !3511)
!3516 = !DILocation(line: 268, column: 1, scope: !3511)
!3517 = distinct !DISubprogram(name: "display_demo_description", scope: !3285, file: !3285, line: 245, type: !3169, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !2100)
!3518 = !DILocation(line: 248, column: 2, scope: !3517)
!3519 = !DILocation(line: 250, column: 1, scope: !3517)
!3520 = distinct !DISubprogram(name: "init_objects", scope: !3285, file: !3285, line: 201, type: !3169, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3521)
!3521 = !{!3522}
!3522 = !DILocalVariable(name: "i", scope: !3523, file: !3285, line: 204, type: !109)
!3523 = distinct !DILexicalBlock(scope: !3520, file: !3285, line: 204, column: 2)
!3524 = !DILocation(line: 0, scope: !3523)
!3525 = !DILocation(line: 204, column: 2, scope: !3523)
!3526 = !DILocation(line: 208, column: 1, scope: !3520)
!3527 = !DILocation(line: 205, column: 3, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3529, file: !3285, line: 204, column: 37)
!3529 = distinct !DILexicalBlock(scope: !3523, file: !3285, line: 204, column: 2)
!3530 = !DILocation(line: 204, column: 33, scope: !3529)
!3531 = !DILocation(line: 204, column: 20, scope: !3529)
!3532 = distinct !{!3532, !3525, !3533}
!3533 = !DILocation(line: 206, column: 2, scope: !3523)
!3534 = distinct !DISubprogram(name: "start_threads", scope: !3285, file: !3285, line: 210, type: !3169, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3535)
!3535 = !{!3536, !3538, !3541}
!3536 = !DILocalVariable(name: "i", scope: !3537, file: !3285, line: 216, type: !109)
!3537 = distinct !DILexicalBlock(scope: !3534, file: !3285, line: 216, column: 2)
!3538 = !DILocalVariable(name: "prio", scope: !3539, file: !3285, line: 217, type: !109)
!3539 = distinct !DILexicalBlock(scope: !3540, file: !3285, line: 216, column: 37)
!3540 = distinct !DILexicalBlock(scope: !3537, file: !3285, line: 216, column: 2)
!3541 = !DILocalVariable(name: "tname", scope: !3539, file: !3285, line: 223, type: !225)
!3542 = !DILocation(line: 0, scope: !3537)
!3543 = !DILocation(line: 216, column: 2, scope: !3537)
!3544 = !DILocation(line: 233, column: 1, scope: !3534)
!3545 = !DILocation(line: 217, column: 14, scope: !3539)
!3546 = !{i32 -2, i32 -2147483644}
!3547 = !DILocation(line: 0, scope: !3539)
!3548 = !DILocation(line: 219, column: 20, scope: !3539)
!3549 = !DILocation(line: 219, column: 33, scope: !3539)
!3550 = !DILocation(line: 220, column: 18, scope: !3539)
!3551 = !DILocation(line: 219, column: 3, scope: !3539)
!3552 = !DILocation(line: 223, column: 3, scope: !3539)
!3553 = !DILocation(line: 223, column: 8, scope: !3539)
!3554 = !DILocation(line: 225, column: 3, scope: !3539)
!3555 = !DILocation(line: 226, column: 3, scope: !3539)
!3556 = !DILocation(line: 228, column: 3, scope: !3539)
!3557 = !DILocation(line: 229, column: 25, scope: !3539)
!3558 = !DILocation(line: 229, column: 3, scope: !3539)
!3559 = !DILocation(line: 231, column: 3, scope: !3539)
!3560 = !DILocation(line: 232, column: 2, scope: !3540)
!3561 = !DILocation(line: 216, column: 20, scope: !3540)
!3562 = distinct !{!3562, !3543, !3563}
!3563 = !DILocation(line: 232, column: 2, scope: !3537)
!3564 = distinct !DISubprogram(name: "new_prio", scope: !3285, file: !3285, line: 182, type: !288, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3565)
!3565 = !{!3566}
!3566 = !DILocalVariable(name: "phil", arg: 1, scope: !3564, file: !3285, line: 182, type: !109)
!3567 = !DILocation(line: 0, scope: !3564)
!3568 = !DILocation(line: 188, column: 9, scope: !3564)
!3569 = !DILocation(line: 188, column: 2, scope: !3564)
!3570 = distinct !DISubprogram(name: "k_thread_create", scope: !3354, file: !3354, line: 24, type: !3571, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3575)
!3571 = !DISubroutineType(types: !3572)
!3572 = !{!3482, !143, !3573, !235, !215, !108, !108, !108, !109, !110, !3357}
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 32)
!3574 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !216, line: 44, baseType: !272)
!3575 = !{!3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585}
!3576 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3570, file: !3354, line: 24, type: !143)
!3577 = !DILocalVariable(name: "stack", arg: 2, scope: !3570, file: !3354, line: 24, type: !3573)
!3578 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3570, file: !3354, line: 24, type: !235)
!3579 = !DILocalVariable(name: "entry", arg: 4, scope: !3570, file: !3354, line: 24, type: !215)
!3580 = !DILocalVariable(name: "p1", arg: 5, scope: !3570, file: !3354, line: 24, type: !108)
!3581 = !DILocalVariable(name: "p2", arg: 6, scope: !3570, file: !3354, line: 24, type: !108)
!3582 = !DILocalVariable(name: "p3", arg: 7, scope: !3570, file: !3354, line: 24, type: !108)
!3583 = !DILocalVariable(name: "prio", arg: 8, scope: !3570, file: !3354, line: 24, type: !109)
!3584 = !DILocalVariable(name: "options", arg: 9, scope: !3570, file: !3354, line: 24, type: !110)
!3585 = !DILocalVariable(name: "delay", arg: 10, scope: !3570, file: !3354, line: 24, type: !3357)
!3586 = !DILocation(line: 0, scope: !3570)
!3587 = !DILocation(line: 49, column: 2, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3570, file: !3354, line: 49, column: 2)
!3589 = !{i64 2155069089}
!3590 = !DILocation(line: 50, column: 9, scope: !3570)
!3591 = !DILocation(line: 50, column: 2, scope: !3570)
!3592 = distinct !DISubprogram(name: "k_thread_name_set", scope: !3354, file: !3354, line: 391, type: !3593, scopeLine: 392, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3595)
!3593 = !DISubroutineType(types: !3594)
!3594 = !{!109, !3482, !324}
!3595 = !{!3596, !3597}
!3596 = !DILocalVariable(name: "thread", arg: 1, scope: !3592, file: !3354, line: 391, type: !3482)
!3597 = !DILocalVariable(name: "str", arg: 2, scope: !3592, file: !3354, line: 391, type: !324)
!3598 = !DILocation(line: 0, scope: !3592)
!3599 = !DILocation(line: 400, column: 2, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3592, file: !3354, line: 400, column: 2)
!3601 = !{i64 2155070517}
!3602 = !DILocation(line: 401, column: 9, scope: !3592)
!3603 = !DILocation(line: 401, column: 2, scope: !3592)
!3604 = distinct !DISubprogram(name: "k_object_access_grant", scope: !3605, file: !3605, line: 24, type: !3606, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3608)
!3605 = !DIFile(filename: "zephyr/include/generated/syscalls/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!3606 = !DISubroutineType(types: !3607)
!3607 = !{null, !13, !143}
!3608 = !{!3609, !3610}
!3609 = !DILocalVariable(name: "object", arg: 1, scope: !3604, file: !3605, line: 24, type: !13)
!3610 = !DILocalVariable(name: "thread", arg: 2, scope: !3604, file: !3605, line: 24, type: !143)
!3611 = !DILocation(line: 0, scope: !3604)
!3612 = !DILocation(line: 34, column: 2, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3604, file: !3605, line: 34, column: 2)
!3614 = !{i64 2154585509}
!3615 = !DILocation(line: 36, column: 1, scope: !3604)
!3616 = distinct !DISubprogram(name: "k_thread_start", scope: !3354, file: !3354, line: 205, type: !3617, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3619)
!3617 = !DISubroutineType(types: !3618)
!3618 = !{null, !3482}
!3619 = !{!3620}
!3620 = !DILocalVariable(name: "thread", arg: 1, scope: !3616, file: !3354, line: 205, type: !3482)
!3621 = !DILocation(line: 0, scope: !3616)
!3622 = !DILocation(line: 214, column: 2, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3616, file: !3354, line: 214, column: 2)
!3624 = !{i64 2155069769}
!3625 = !DILocation(line: 215, column: 2, scope: !3616)
!3626 = !DILocation(line: 216, column: 1, scope: !3616)
!3627 = distinct !DISubprogram(name: "k_mutex_init", scope: !3354, file: !3354, line: 911, type: !3396, scopeLine: 912, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3628)
!3628 = !{!3629}
!3629 = !DILocalVariable(name: "mutex", arg: 1, scope: !3627, file: !3354, line: 911, type: !279)
!3630 = !DILocation(line: 0, scope: !3627)
!3631 = !DILocation(line: 919, column: 2, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3627, file: !3354, line: 919, column: 2)
!3633 = !{i64 2155072593}
!3634 = !DILocation(line: 920, column: 9, scope: !3627)
!3635 = !DILocation(line: 920, column: 2, scope: !3627)
!3636 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !286, file: !286, line: 45, type: !288, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3637)
!3637 = !{!3638}
!3638 = !DILocalVariable(name: "c", arg: 1, scope: !3636, file: !286, line: 45, type: !109)
!3639 = !DILocation(line: 0, scope: !3636)
!3640 = !DILocation(line: 50, column: 2, scope: !3636)
!3641 = distinct !DISubprogram(name: "__printk_hook_install", scope: !286, file: !286, line: 63, type: !3642, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3644)
!3642 = !DISubroutineType(types: !3643)
!3643 = !{null, !287}
!3644 = !{!3645}
!3645 = !DILocalVariable(name: "fn", arg: 1, scope: !3641, file: !286, line: 63, type: !287)
!3646 = !DILocation(line: 0, scope: !3641)
!3647 = !DILocation(line: 65, column: 12, scope: !3641)
!3648 = !DILocation(line: 66, column: 1, scope: !3641)
!3649 = distinct !DISubprogram(name: "__printk_get_hook", scope: !286, file: !286, line: 76, type: !3650, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !2100)
!3650 = !DISubroutineType(types: !3651)
!3651 = !{!108}
!3652 = !DILocation(line: 78, column: 9, scope: !3649)
!3653 = !DILocation(line: 78, column: 2, scope: !3649)
!3654 = distinct !DISubprogram(name: "vprintk", scope: !286, file: !286, line: 113, type: !3655, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3664)
!3655 = !DISubroutineType(types: !3656)
!3656 = !{null, !324, !3657}
!3657 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3658, line: 99, baseType: !3659)
!3658 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3659 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3658, line: 40, baseType: !3660)
!3660 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !286, baseType: !3661)
!3661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3662)
!3662 = !{!3663}
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3661, file: !286, line: 79, baseType: !108, size: 32)
!3664 = !{!3665, !3666, !3667}
!3665 = !DILocalVariable(name: "fmt", arg: 1, scope: !3654, file: !286, line: 113, type: !324)
!3666 = !DILocalVariable(name: "ap", arg: 2, scope: !3654, file: !286, line: 113, type: !3657)
!3667 = !DILocalVariable(name: "ctx", scope: !3668, file: !286, line: 121, type: !3670)
!3668 = distinct !DILexicalBlock(scope: !3669, file: !286, line: 120, column: 27)
!3669 = distinct !DILexicalBlock(scope: !3654, file: !286, line: 120, column: 6)
!3670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !286, line: 81, size: 32, elements: !3671)
!3671 = !{!3672, !3673}
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3670, file: !286, line: 85, baseType: !32, size: 32)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3670, file: !286, line: 86, baseType: !3674, offset: 32)
!3674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, elements: !3675)
!3675 = !{!3676}
!3676 = !DISubrange(count: 0)
!3677 = !DILocation(line: 0, scope: !3654)
!3678 = !DILocation(line: 148, column: 3, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3669, file: !286, line: 138, column: 9)
!3680 = !DILocation(line: 155, column: 1, scope: !3654)
!3681 = distinct !DISubprogram(name: "char_out", scope: !286, file: !286, line: 107, type: !3682, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3684)
!3682 = !DISubroutineType(types: !3683)
!3683 = !{!109, !109, !108}
!3684 = !{!3685, !3686}
!3685 = !DILocalVariable(name: "c", arg: 1, scope: !3681, file: !286, line: 107, type: !109)
!3686 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3681, file: !286, line: 107, type: !108)
!3687 = !DILocation(line: 0, scope: !3681)
!3688 = !DILocation(line: 110, column: 9, scope: !3681)
!3689 = !DILocation(line: 110, column: 2, scope: !3681)
!3690 = distinct !DISubprogram(name: "cbvprintf", scope: !3691, file: !3691, line: 739, type: !3692, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3698)
!3691 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3692 = !DISubroutineType(types: !3693)
!3693 = !{!109, !3694, !108, !324, !3657}
!3694 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3691, line: 297, baseType: !3695)
!3695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3696, size: 32)
!3696 = !DISubroutineType(types: !3697)
!3697 = !{!109, null}
!3698 = !{!3699, !3700, !3701, !3702}
!3699 = !DILocalVariable(name: "out", arg: 1, scope: !3690, file: !3691, line: 739, type: !3694)
!3700 = !DILocalVariable(name: "ctx", arg: 2, scope: !3690, file: !3691, line: 739, type: !108)
!3701 = !DILocalVariable(name: "format", arg: 3, scope: !3690, file: !3691, line: 739, type: !324)
!3702 = !DILocalVariable(name: "ap", arg: 4, scope: !3690, file: !3691, line: 739, type: !3657)
!3703 = !DILocation(line: 0, scope: !3690)
!3704 = !DILocation(line: 741, column: 9, scope: !3690)
!3705 = !DILocation(line: 741, column: 2, scope: !3690)
!3706 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !286, file: !286, line: 157, type: !3707, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3709)
!3707 = !DISubroutineType(types: !3708)
!3708 = !{null, !1165, !235}
!3709 = !{!3710, !3711, !3712}
!3710 = !DILocalVariable(name: "c", arg: 1, scope: !3706, file: !286, line: 157, type: !1165)
!3711 = !DILocalVariable(name: "n", arg: 2, scope: !3706, file: !286, line: 157, type: !235)
!3712 = !DILocalVariable(name: "i", scope: !3706, file: !286, line: 159, type: !235)
!3713 = !DILocation(line: 0, scope: !3706)
!3714 = !DILocation(line: 164, column: 16, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3716, file: !286, line: 164, column: 2)
!3716 = distinct !DILexicalBlock(scope: !3706, file: !286, line: 164, column: 2)
!3717 = !DILocation(line: 164, column: 2, scope: !3716)
!3718 = !DILocation(line: 165, column: 3, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3715, file: !286, line: 164, column: 26)
!3720 = !DILocation(line: 165, column: 13, scope: !3719)
!3721 = !DILocation(line: 164, column: 22, scope: !3715)
!3722 = distinct !{!3722, !3717, !3723}
!3723 = !DILocation(line: 166, column: 2, scope: !3716)
!3724 = !DILocation(line: 171, column: 1, scope: !3706)
!3725 = distinct !DISubprogram(name: "printk", scope: !286, file: !286, line: 203, type: !3726, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3728)
!3726 = !DISubroutineType(types: !3727)
!3727 = !{null, !324, null}
!3728 = !{!3729, !3730}
!3729 = !DILocalVariable(name: "fmt", arg: 1, scope: !3725, file: !286, line: 203, type: !324)
!3730 = !DILocalVariable(name: "ap", scope: !3725, file: !286, line: 205, type: !3657)
!3731 = !DILocation(line: 0, scope: !3725)
!3732 = !DILocation(line: 205, column: 2, scope: !3725)
!3733 = !DILocation(line: 205, column: 10, scope: !3725)
!3734 = !DILocation(line: 207, column: 2, scope: !3725)
!3735 = !DILocation(line: 209, column: 2, scope: !3725)
!3736 = !DILocation(line: 211, column: 2, scope: !3725)
!3737 = !DILocation(line: 212, column: 1, scope: !3725)
!3738 = distinct !DISubprogram(name: "snprintk", scope: !286, file: !286, line: 239, type: !3739, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3741)
!3739 = !DISubroutineType(types: !3740)
!3740 = !{!109, !1165, !235, !324, null}
!3741 = !{!3742, !3743, !3744, !3745, !3746}
!3742 = !DILocalVariable(name: "str", arg: 1, scope: !3738, file: !286, line: 239, type: !1165)
!3743 = !DILocalVariable(name: "size", arg: 2, scope: !3738, file: !286, line: 239, type: !235)
!3744 = !DILocalVariable(name: "fmt", arg: 3, scope: !3738, file: !286, line: 239, type: !324)
!3745 = !DILocalVariable(name: "ap", scope: !3738, file: !286, line: 241, type: !3657)
!3746 = !DILocalVariable(name: "ret", scope: !3738, file: !286, line: 242, type: !109)
!3747 = !DILocation(line: 0, scope: !3738)
!3748 = !DILocation(line: 241, column: 2, scope: !3738)
!3749 = !DILocation(line: 241, column: 10, scope: !3738)
!3750 = !DILocation(line: 244, column: 2, scope: !3738)
!3751 = !DILocation(line: 245, column: 8, scope: !3738)
!3752 = !DILocation(line: 246, column: 2, scope: !3738)
!3753 = !DILocation(line: 249, column: 1, scope: !3738)
!3754 = !DILocation(line: 248, column: 2, scope: !3738)
!3755 = distinct !DISubprogram(name: "vsnprintk", scope: !286, file: !286, line: 251, type: !3756, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3758)
!3756 = !DISubroutineType(types: !3757)
!3757 = !{!109, !1165, !235, !324, !3657}
!3758 = !{!3759, !3760, !3761, !3762, !3763}
!3759 = !DILocalVariable(name: "str", arg: 1, scope: !3755, file: !286, line: 251, type: !1165)
!3760 = !DILocalVariable(name: "size", arg: 2, scope: !3755, file: !286, line: 251, type: !235)
!3761 = !DILocalVariable(name: "fmt", arg: 3, scope: !3755, file: !286, line: 251, type: !324)
!3762 = !DILocalVariable(name: "ap", arg: 4, scope: !3755, file: !286, line: 251, type: !3657)
!3763 = !DILocalVariable(name: "ctx", scope: !3755, file: !286, line: 253, type: !3764)
!3764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !286, line: 217, size: 96, elements: !3765)
!3765 = !{!3766, !3767, !3768}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3764, file: !286, line: 218, baseType: !1165, size: 32)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3764, file: !286, line: 219, baseType: !109, size: 32, offset: 32)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3764, file: !286, line: 220, baseType: !109, size: 32, offset: 64)
!3769 = !DILocation(line: 0, scope: !3755)
!3770 = !DILocation(line: 253, column: 2, scope: !3755)
!3771 = !DILocation(line: 253, column: 21, scope: !3755)
!3772 = !DILocation(line: 253, column: 27, scope: !3755)
!3773 = !DILocation(line: 255, column: 2, scope: !3755)
!3774 = !DILocation(line: 257, column: 10, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3755, file: !286, line: 257, column: 6)
!3776 = !DILocation(line: 257, column: 22, scope: !3775)
!3777 = !DILocation(line: 257, column: 16, scope: !3775)
!3778 = !DILocation(line: 257, column: 6, scope: !3755)
!3779 = !DILocation(line: 258, column: 3, scope: !3780)
!3780 = distinct !DILexicalBlock(scope: !3775, file: !286, line: 257, column: 27)
!3781 = !DILocation(line: 258, column: 18, scope: !3780)
!3782 = !DILocation(line: 259, column: 2, scope: !3780)
!3783 = !DILocation(line: 262, column: 1, scope: !3755)
!3784 = !DILocation(line: 261, column: 2, scope: !3755)
!3785 = distinct !DISubprogram(name: "str_out", scope: !286, file: !286, line: 223, type: !3786, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !282, retainedNodes: !3789)
!3786 = !DISubroutineType(types: !3787)
!3787 = !{!109, !109, !3788}
!3788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3764, size: 32)
!3789 = !{!3790, !3791}
!3790 = !DILocalVariable(name: "c", arg: 1, scope: !3785, file: !286, line: 223, type: !109)
!3791 = !DILocalVariable(name: "ctx", arg: 2, scope: !3785, file: !286, line: 223, type: !3788)
!3792 = !DILocation(line: 0, scope: !3785)
!3793 = !DILocation(line: 225, column: 11, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3785, file: !286, line: 225, column: 6)
!3795 = !DILocation(line: 225, column: 15, scope: !3794)
!3796 = !DILocation(line: 0, scope: !3794)
!3797 = !DILocation(line: 225, column: 23, scope: !3794)
!3798 = !DILocation(line: 225, column: 45, scope: !3794)
!3799 = !DILocation(line: 225, column: 37, scope: !3794)
!3800 = !DILocation(line: 225, column: 6, scope: !3785)
!3801 = !DILocation(line: 226, column: 8, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3794, file: !286, line: 225, column: 50)
!3803 = !DILocation(line: 226, column: 13, scope: !3802)
!3804 = !DILocation(line: 227, column: 3, scope: !3802)
!3805 = !DILocation(line: 230, column: 29, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3785, file: !286, line: 230, column: 6)
!3807 = !DILocation(line: 230, column: 17, scope: !3806)
!3808 = !DILocation(line: 230, column: 6, scope: !3785)
!3809 = !DILocation(line: 231, column: 22, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3806, file: !286, line: 230, column: 34)
!3811 = !DILocation(line: 231, column: 3, scope: !3810)
!3812 = !DILocation(line: 231, column: 26, scope: !3810)
!3813 = !DILocation(line: 232, column: 2, scope: !3810)
!3814 = !DILocation(line: 233, column: 28, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3806, file: !286, line: 232, column: 9)
!3816 = !DILocation(line: 233, column: 22, scope: !3815)
!3817 = !DILocation(line: 233, column: 3, scope: !3815)
!3818 = !DILocation(line: 233, column: 26, scope: !3815)
!3819 = !DILocation(line: 237, column: 1, scope: !3785)
!3820 = distinct !DISubprogram(name: "z_rb_get_minmax", scope: !2595, file: !2595, line: 100, type: !3821, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !3833)
!3821 = !DISubroutineType(types: !3822)
!3822 = !{!2600, !3823, !167}
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3824, size: 32)
!3824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !157, line: 83, size: 96, elements: !3825)
!3825 = !{!3826, !3827, !3832}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3824, file: !157, line: 84, baseType: !2600, size: 32)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !3824, file: !157, line: 85, baseType: !3828, size: 32, offset: 32)
!3828 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !157, line: 81, baseType: !3829)
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 32)
!3830 = !DISubroutineType(types: !3831)
!3831 = !{!334, !2600, !2600}
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !3824, file: !157, line: 86, baseType: !109, size: 32, offset: 64)
!3833 = !{!3834, !3835, !3836}
!3834 = !DILocalVariable(name: "tree", arg: 1, scope: !3820, file: !2595, line: 100, type: !3823)
!3835 = !DILocalVariable(name: "side", arg: 2, scope: !3820, file: !2595, line: 100, type: !167)
!3836 = !DILocalVariable(name: "n", scope: !3820, file: !2595, line: 102, type: !2600)
!3837 = !DILocation(line: 0, scope: !3820)
!3838 = !DILocation(line: 104, column: 17, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3820, file: !2595, line: 104, column: 2)
!3840 = !DILocation(line: 104, column: 7, scope: !3839)
!3841 = !DILocation(line: 0, scope: !3839)
!3842 = !DILocation(line: 104, column: 26, scope: !3843)
!3843 = distinct !DILexicalBlock(scope: !3839, file: !2595, line: 104, column: 2)
!3844 = !DILocation(line: 104, column: 35, scope: !3843)
!3845 = !DILocation(line: 104, column: 39, scope: !3843)
!3846 = !DILocation(line: 104, column: 58, scope: !3843)
!3847 = !DILocation(line: 104, column: 2, scope: !3839)
!3848 = distinct !{!3848, !3847, !3849}
!3849 = !DILocation(line: 107, column: 2, scope: !3839)
!3850 = !DILocation(line: 108, column: 2, scope: !3820)
!3851 = distinct !DISubprogram(name: "get_child", scope: !2595, file: !2595, line: 21, type: !3852, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !3854)
!3852 = !DISubroutineType(types: !3853)
!3853 = !{!2600, !2600, !167}
!3854 = !{!3855, !3856, !3857}
!3855 = !DILocalVariable(name: "n", arg: 1, scope: !3851, file: !2595, line: 21, type: !2600)
!3856 = !DILocalVariable(name: "side", arg: 2, scope: !3851, file: !2595, line: 21, type: !167)
!3857 = !DILocalVariable(name: "l", scope: !3851, file: !2595, line: 28, type: !22)
!3858 = !DILocation(line: 0, scope: !3851)
!3859 = !DILocation(line: 24, column: 11, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3851, file: !2595, line: 24, column: 6)
!3861 = !DILocation(line: 24, column: 6, scope: !3851)
!3862 = !DILocation(line: 25, column: 10, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3860, file: !2595, line: 24, column: 18)
!3864 = !DILocation(line: 25, column: 3, scope: !3863)
!3865 = !DILocation(line: 28, column: 28, scope: !3851)
!3866 = !DILocation(line: 28, column: 16, scope: !3851)
!3867 = !DILocation(line: 30, column: 4, scope: !3851)
!3868 = !DILocation(line: 31, column: 9, scope: !3851)
!3869 = !DILocation(line: 32, column: 1, scope: !3851)
!3870 = distinct !DISubprogram(name: "rb_insert", scope: !2595, file: !2595, line: 217, type: !3871, scopeLine: 218, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !3873)
!3871 = !DISubroutineType(types: !3872)
!3872 = !{null, !3823, !2600}
!3873 = !{!3874, !3875, !3876, !3877, !3881, !3882, !3883}
!3874 = !DILocalVariable(name: "tree", arg: 1, scope: !3870, file: !2595, line: 217, type: !3823)
!3875 = !DILocalVariable(name: "node", arg: 2, scope: !3870, file: !2595, line: 217, type: !2600)
!3876 = !DILocalVariable(name: "__vla_expr0", scope: !3870, type: !32, flags: DIFlagArtificial)
!3877 = !DILocalVariable(name: "stack", scope: !3870, file: !2595, line: 232, type: !3878)
!3878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2600, elements: !3879)
!3879 = !{!3880}
!3880 = !DISubrange(count: !3876)
!3881 = !DILocalVariable(name: "stacksz", scope: !3870, file: !2595, line: 235, type: !109)
!3882 = !DILocalVariable(name: "parent", scope: !3870, file: !2595, line: 237, type: !2600)
!3883 = !DILocalVariable(name: "side", scope: !3870, file: !2595, line: 239, type: !167)
!3884 = !DILocation(line: 0, scope: !3870)
!3885 = !DILocation(line: 219, column: 2, scope: !3870)
!3886 = !DILocation(line: 220, column: 2, scope: !3870)
!3887 = !DILocation(line: 222, column: 12, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3870, file: !2595, line: 222, column: 6)
!3889 = !DILocation(line: 222, column: 17, scope: !3888)
!3890 = !DILocation(line: 222, column: 6, scope: !3870)
!3891 = !DILocation(line: 223, column: 14, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3888, file: !2595, line: 222, column: 26)
!3893 = !DILocation(line: 224, column: 9, scope: !3892)
!3894 = !DILocation(line: 224, column: 19, scope: !3892)
!3895 = !DILocation(line: 225, column: 3, scope: !3892)
!3896 = !DILocation(line: 226, column: 3, scope: !3892)
!3897 = !DILocation(line: 232, column: 29, scope: !3870)
!3898 = !DILocation(line: 232, column: 39, scope: !3870)
!3899 = !DILocation(line: 232, column: 2, scope: !3870)
!3900 = !DILocation(line: 232, column: 17, scope: !3870)
!3901 = !DILocation(line: 235, column: 16, scope: !3870)
!3902 = !DILocation(line: 237, column: 40, scope: !3870)
!3903 = !DILocation(line: 237, column: 26, scope: !3870)
!3904 = !DILocation(line: 239, column: 23, scope: !3870)
!3905 = !DILocation(line: 239, column: 17, scope: !3870)
!3906 = !DILocation(line: 241, column: 26, scope: !3870)
!3907 = !DILocation(line: 241, column: 2, scope: !3870)
!3908 = !DILocation(line: 242, column: 2, scope: !3870)
!3909 = !DILocation(line: 244, column: 15, scope: !3870)
!3910 = !DILocation(line: 244, column: 2, scope: !3870)
!3911 = !DILocation(line: 244, column: 19, scope: !3870)
!3912 = !DILocation(line: 245, column: 2, scope: !3870)
!3913 = !DILocation(line: 247, column: 22, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3870, file: !2595, line: 247, column: 6)
!3915 = !DILocation(line: 247, column: 14, scope: !3914)
!3916 = !DILocation(line: 247, column: 6, scope: !3870)
!3917 = !DILocation(line: 248, column: 19, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3914, file: !2595, line: 247, column: 33)
!3919 = !DILocation(line: 249, column: 2, scope: !3918)
!3920 = !DILocation(line: 252, column: 15, scope: !3870)
!3921 = !DILocation(line: 252, column: 13, scope: !3870)
!3922 = !DILocation(line: 254, column: 1, scope: !3870)
!3923 = distinct !DISubprogram(name: "set_child", scope: !2595, file: !2595, line: 34, type: !3924, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !3926)
!3924 = !DISubroutineType(types: !3925)
!3925 = !{null, !2600, !167, !108}
!3926 = !{!3927, !3928, !3929, !3930, !3933}
!3927 = !DILocalVariable(name: "n", arg: 1, scope: !3923, file: !2595, line: 34, type: !2600)
!3928 = !DILocalVariable(name: "side", arg: 2, scope: !3923, file: !2595, line: 34, type: !167)
!3929 = !DILocalVariable(name: "val", arg: 3, scope: !3923, file: !2595, line: 34, type: !108)
!3930 = !DILocalVariable(name: "old", scope: !3931, file: !2595, line: 40, type: !22)
!3931 = distinct !DILexicalBlock(scope: !3932, file: !2595, line: 39, column: 9)
!3932 = distinct !DILexicalBlock(scope: !3923, file: !2595, line: 37, column: 6)
!3933 = !DILocalVariable(name: "new", scope: !3931, file: !2595, line: 41, type: !22)
!3934 = !DILocation(line: 0, scope: !3923)
!3935 = !DILocation(line: 37, column: 11, scope: !3932)
!3936 = !DILocation(line: 37, column: 6, scope: !3923)
!3937 = !DILocation(line: 38, column: 3, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3932, file: !2595, line: 37, column: 18)
!3939 = !DILocation(line: 38, column: 18, scope: !3938)
!3940 = !DILocation(line: 39, column: 2, scope: !3938)
!3941 = !DILocation(line: 40, column: 31, scope: !3931)
!3942 = !DILocation(line: 40, column: 19, scope: !3931)
!3943 = !DILocation(line: 0, scope: !3931)
!3944 = !DILocation(line: 41, column: 19, scope: !3931)
!3945 = !DILocation(line: 43, column: 41, scope: !3931)
!3946 = !DILocation(line: 43, column: 34, scope: !3931)
!3947 = !DILocation(line: 43, column: 20, scope: !3931)
!3948 = !DILocation(line: 43, column: 18, scope: !3931)
!3949 = !DILocation(line: 45, column: 1, scope: !3923)
!3950 = distinct !DISubprogram(name: "set_color", scope: !2595, file: !2595, line: 63, type: !3951, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !3953)
!3951 = !DISubroutineType(types: !3952)
!3952 = !{null, !2600, !2594}
!3953 = !{!3954, !3955, !3956}
!3954 = !DILocalVariable(name: "n", arg: 1, scope: !3950, file: !2595, line: 63, type: !2600)
!3955 = !DILocalVariable(name: "color", arg: 2, scope: !3950, file: !2595, line: 63, type: !2594)
!3956 = !DILocalVariable(name: "p", scope: !3950, file: !2595, line: 67, type: !3957)
!3957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 32)
!3958 = !DILocation(line: 0, scope: !3950)
!3959 = !DILocation(line: 67, column: 17, scope: !3950)
!3960 = !DILocation(line: 69, column: 8, scope: !3950)
!3961 = !DILocation(line: 69, column: 11, scope: !3950)
!3962 = !DILocation(line: 69, column: 21, scope: !3950)
!3963 = !DILocation(line: 69, column: 19, scope: !3950)
!3964 = !DILocation(line: 69, column: 5, scope: !3950)
!3965 = !DILocation(line: 70, column: 1, scope: !3950)
!3966 = distinct !DISubprogram(name: "find_and_stack", scope: !2595, file: !2595, line: 79, type: !3967, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !3970)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{!109, !3823, !2600, !3969}
!3969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2600, size: 32)
!3970 = !{!3971, !3972, !3973, !3974, !3975, !3977}
!3971 = !DILocalVariable(name: "tree", arg: 1, scope: !3966, file: !2595, line: 79, type: !3823)
!3972 = !DILocalVariable(name: "node", arg: 2, scope: !3966, file: !2595, line: 79, type: !2600)
!3973 = !DILocalVariable(name: "stack", arg: 3, scope: !3966, file: !2595, line: 80, type: !3969)
!3974 = !DILocalVariable(name: "sz", scope: !3966, file: !2595, line: 82, type: !109)
!3975 = !DILocalVariable(name: "side", scope: !3976, file: !2595, line: 87, type: !167)
!3976 = distinct !DILexicalBlock(scope: !3966, file: !2595, line: 86, column: 32)
!3977 = !DILocalVariable(name: "ch", scope: !3976, file: !2595, line: 88, type: !2600)
!3978 = !DILocation(line: 0, scope: !3966)
!3979 = !DILocation(line: 84, column: 22, scope: !3966)
!3980 = !DILocation(line: 84, column: 14, scope: !3966)
!3981 = !DILocation(line: 87, column: 24, scope: !3976)
!3982 = !DILocation(line: 86, column: 23, scope: !3966)
!3983 = !DILocation(line: 86, column: 2, scope: !3966)
!3984 = !DILocation(line: 87, column: 18, scope: !3976)
!3985 = !DILocation(line: 0, scope: !3976)
!3986 = !DILocation(line: 88, column: 33, scope: !3976)
!3987 = !DILocation(line: 88, column: 23, scope: !3976)
!3988 = !DILocation(line: 90, column: 10, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3976, file: !2595, line: 90, column: 7)
!3990 = !DILocation(line: 90, column: 7, scope: !3976)
!3991 = !DILocation(line: 91, column: 12, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3989, file: !2595, line: 90, column: 19)
!3993 = !DILocation(line: 91, column: 4, scope: !3992)
!3994 = !DILocation(line: 91, column: 16, scope: !3992)
!3995 = !DILocation(line: 97, column: 2, scope: !3966)
!3996 = distinct !DISubprogram(name: "fix_extra_red", scope: !2595, file: !2595, line: 155, type: !3997, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !3999)
!3997 = !DISubroutineType(types: !3998)
!3998 = !{null, !3969, !109}
!3999 = !{!4000, !4001, !4002, !4004, !4005, !4006, !4007, !4008}
!4000 = !DILocalVariable(name: "stack", arg: 1, scope: !3996, file: !2595, line: 155, type: !3969)
!4001 = !DILocalVariable(name: "stacksz", arg: 2, scope: !3996, file: !2595, line: 155, type: !109)
!4002 = !DILocalVariable(name: "node", scope: !4003, file: !2595, line: 158, type: !2600)
!4003 = distinct !DILexicalBlock(scope: !3996, file: !2595, line: 157, column: 22)
!4004 = !DILocalVariable(name: "parent", scope: !4003, file: !2595, line: 159, type: !2600)
!4005 = !DILocalVariable(name: "grandparent", scope: !4003, file: !2595, line: 176, type: !2600)
!4006 = !DILocalVariable(name: "side", scope: !4003, file: !2595, line: 177, type: !167)
!4007 = !DILocalVariable(name: "aunt", scope: !4003, file: !2595, line: 178, type: !2600)
!4008 = !DILocalVariable(name: "parent_side", scope: !4003, file: !2595, line: 198, type: !167)
!4009 = !DILocation(line: 0, scope: !3996)
!4010 = !DILocation(line: 157, column: 17, scope: !3996)
!4011 = !DILocation(line: 157, column: 2, scope: !3996)
!4012 = !DILocation(line: 158, column: 39, scope: !4003)
!4013 = !DILocation(line: 158, column: 25, scope: !4003)
!4014 = !DILocation(line: 0, scope: !4003)
!4015 = !DILocation(line: 159, column: 41, scope: !4003)
!4016 = !DILocation(line: 159, column: 27, scope: !4003)
!4017 = !DILocation(line: 167, column: 7, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !4003, file: !2595, line: 167, column: 7)
!4019 = !DILocation(line: 167, column: 7, scope: !4003)
!4020 = !DILocation(line: 176, column: 46, scope: !4003)
!4021 = !DILocation(line: 176, column: 32, scope: !4003)
!4022 = !DILocation(line: 177, column: 18, scope: !4003)
!4023 = !DILocation(line: 179, column: 13, scope: !4003)
!4024 = !DILocation(line: 179, column: 7, scope: !4003)
!4025 = !DILocation(line: 178, column: 25, scope: !4003)
!4026 = !DILocation(line: 181, column: 13, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !4003, file: !2595, line: 181, column: 7)
!4028 = !DILocation(line: 181, column: 22, scope: !4027)
!4029 = !DILocation(line: 181, column: 25, scope: !4027)
!4030 = !DILocation(line: 181, column: 7, scope: !4003)
!4031 = !DILocation(line: 198, column: 25, scope: !4003)
!4032 = !DILocation(line: 200, column: 19, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4003, file: !2595, line: 200, column: 7)
!4034 = !DILocation(line: 200, column: 7, scope: !4003)
!4035 = !DILocation(line: 201, column: 4, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4033, file: !2595, line: 200, column: 28)
!4037 = !DILocation(line: 202, column: 3, scope: !4036)
!4038 = !DILocation(line: 205, column: 3, scope: !4003)
!4039 = !DILocation(line: 206, column: 13, scope: !4003)
!4040 = !DILocation(line: 206, column: 3, scope: !4003)
!4041 = !DILocation(line: 182, column: 4, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4027, file: !2595, line: 181, column: 39)
!4043 = !DILocation(line: 183, column: 4, scope: !4042)
!4044 = !DILocation(line: 184, column: 4, scope: !4042)
!4045 = !DILocation(line: 215, column: 1, scope: !3996)
!4046 = distinct !DISubprogram(name: "is_black", scope: !2595, file: !2595, line: 53, type: !4047, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !4049)
!4047 = !DISubroutineType(types: !4048)
!4048 = !{!334, !2600}
!4049 = !{!4050}
!4050 = !DILocalVariable(name: "n", arg: 1, scope: !4046, file: !2595, line: 53, type: !2600)
!4051 = !DILocation(line: 0, scope: !4046)
!4052 = !DILocation(line: 55, column: 9, scope: !4046)
!4053 = !DILocation(line: 55, column: 22, scope: !4046)
!4054 = !DILocation(line: 55, column: 2, scope: !4046)
!4055 = distinct !DISubprogram(name: "get_side", scope: !2595, file: !2595, line: 111, type: !4056, scopeLine: 112, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !4058)
!4056 = !DISubroutineType(types: !4057)
!4057 = !{!167, !2600, !2600}
!4058 = !{!4059, !4060}
!4059 = !DILocalVariable(name: "parent", arg: 1, scope: !4055, file: !2595, line: 111, type: !2600)
!4060 = !DILocalVariable(name: "child", arg: 2, scope: !4055, file: !2595, line: 111, type: !2600)
!4061 = !DILocation(line: 0, scope: !4055)
!4062 = !DILocation(line: 115, column: 10, scope: !4055)
!4063 = !DILocation(line: 115, column: 32, scope: !4055)
!4064 = !DILocation(line: 115, column: 9, scope: !4055)
!4065 = !DILocation(line: 115, column: 2, scope: !4055)
!4066 = distinct !DISubprogram(name: "is_red", scope: !2595, file: !2595, line: 58, type: !4047, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !4067)
!4067 = !{!4068}
!4068 = !DILocalVariable(name: "n", arg: 1, scope: !4066, file: !2595, line: 58, type: !2600)
!4069 = !DILocation(line: 0, scope: !4066)
!4070 = !DILocation(line: 60, column: 9, scope: !4066)
!4071 = !DILocation(line: 60, column: 22, scope: !4066)
!4072 = !DILocation(line: 60, column: 2, scope: !4066)
!4073 = distinct !DISubprogram(name: "rotate", scope: !2595, file: !2595, line: 128, type: !3997, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !4074)
!4074 = !{!4075, !4076, !4077, !4078, !4079, !4080, !4081, !4082}
!4075 = !DILocalVariable(name: "stack", arg: 1, scope: !4073, file: !2595, line: 128, type: !3969)
!4076 = !DILocalVariable(name: "stacksz", arg: 2, scope: !4073, file: !2595, line: 128, type: !109)
!4077 = !DILocalVariable(name: "parent", scope: !4073, file: !2595, line: 132, type: !2600)
!4078 = !DILocalVariable(name: "child", scope: !4073, file: !2595, line: 133, type: !2600)
!4079 = !DILocalVariable(name: "side", scope: !4073, file: !2595, line: 134, type: !167)
!4080 = !DILocalVariable(name: "a", scope: !4073, file: !2595, line: 135, type: !2600)
!4081 = !DILocalVariable(name: "b", scope: !4073, file: !2595, line: 136, type: !2600)
!4082 = !DILocalVariable(name: "grandparent", scope: !4083, file: !2595, line: 139, type: !2600)
!4083 = distinct !DILexicalBlock(scope: !4084, file: !2595, line: 138, column: 20)
!4084 = distinct !DILexicalBlock(scope: !4073, file: !2595, line: 138, column: 6)
!4085 = !DILocation(line: 0, scope: !4073)
!4086 = !DILocation(line: 132, column: 40, scope: !4073)
!4087 = !DILocation(line: 132, column: 26, scope: !4073)
!4088 = !DILocation(line: 133, column: 39, scope: !4073)
!4089 = !DILocation(line: 133, column: 25, scope: !4073)
!4090 = !DILocation(line: 134, column: 17, scope: !4073)
!4091 = !{i8 0, i8 2}
!4092 = !DILocation(line: 135, column: 21, scope: !4073)
!4093 = !DILocation(line: 136, column: 38, scope: !4073)
!4094 = !DILocation(line: 136, column: 21, scope: !4073)
!4095 = !DILocation(line: 138, column: 14, scope: !4084)
!4096 = !DILocation(line: 138, column: 6, scope: !4073)
!4097 = !DILocation(line: 139, column: 46, scope: !4083)
!4098 = !DILocation(line: 139, column: 32, scope: !4083)
!4099 = !DILocation(line: 0, scope: !4083)
!4100 = !DILocation(line: 141, column: 26, scope: !4083)
!4101 = !DILocation(line: 141, column: 57, scope: !4083)
!4102 = !DILocation(line: 141, column: 3, scope: !4083)
!4103 = !DILocation(line: 142, column: 2, scope: !4083)
!4104 = !DILocation(line: 144, column: 25, scope: !4073)
!4105 = !DILocation(line: 144, column: 2, scope: !4073)
!4106 = !DILocation(line: 145, column: 43, scope: !4073)
!4107 = !DILocation(line: 145, column: 2, scope: !4073)
!4108 = !DILocation(line: 146, column: 26, scope: !4073)
!4109 = !DILocation(line: 146, column: 2, scope: !4073)
!4110 = !DILocation(line: 147, column: 21, scope: !4073)
!4111 = !DILocation(line: 148, column: 21, scope: !4073)
!4112 = !DILocation(line: 149, column: 1, scope: !4073)
!4113 = distinct !DISubprogram(name: "get_color", scope: !2595, file: !2595, line: 47, type: !4114, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !4116)
!4114 = !DISubroutineType(types: !4115)
!4115 = !{!2594, !2600}
!4116 = !{!4117}
!4117 = !DILocalVariable(name: "n", arg: 1, scope: !4113, file: !2595, line: 47, type: !2600)
!4118 = !DILocation(line: 0, scope: !4113)
!4119 = !DILocation(line: 50, column: 21, scope: !4113)
!4120 = !DILocation(line: 50, column: 10, scope: !4113)
!4121 = !DILocation(line: 50, column: 37, scope: !4113)
!4122 = !DILocation(line: 50, column: 2, scope: !4113)
!4123 = distinct !DISubprogram(name: "rb_remove", scope: !2595, file: !2595, line: 367, type: !3871, scopeLine: 368, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !4124)
!4124 = !{!4125, !4126, !4127, !4128, !4129, !4133, !4134, !4137, !4138, !4139, !4140, !4141, !4142}
!4125 = !DILocalVariable(name: "tree", arg: 1, scope: !4123, file: !2595, line: 367, type: !3823)
!4126 = !DILocalVariable(name: "node", arg: 2, scope: !4123, file: !2595, line: 367, type: !2600)
!4127 = !DILocalVariable(name: "tmp", scope: !4123, file: !2595, line: 369, type: !2600)
!4128 = !DILocalVariable(name: "__vla_expr0", scope: !4123, type: !32, flags: DIFlagArtificial)
!4129 = !DILocalVariable(name: "stack", scope: !4123, file: !2595, line: 373, type: !4130)
!4130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2600, elements: !4131)
!4131 = !{!4132}
!4132 = !DISubrange(count: !4128)
!4133 = !DILocalVariable(name: "stacksz", scope: !4123, file: !2595, line: 376, type: !109)
!4134 = !DILocalVariable(name: "stacksz0", scope: !4135, file: !2595, line: 388, type: !109)
!4135 = distinct !DILexicalBlock(scope: !4136, file: !2595, line: 387, column: 70)
!4136 = distinct !DILexicalBlock(scope: !4123, file: !2595, line: 387, column: 6)
!4137 = !DILocalVariable(name: "hiparent", scope: !4135, file: !2595, line: 389, type: !2600)
!4138 = !DILocalVariable(name: "loparent", scope: !4135, file: !2595, line: 389, type: !2600)
!4139 = !DILocalVariable(name: "node2", scope: !4135, file: !2595, line: 390, type: !2600)
!4140 = !DILocalVariable(name: "ctmp", scope: !4135, file: !2595, line: 440, type: !2594)
!4141 = !DILocalVariable(name: "child", scope: !4123, file: !2595, line: 449, type: !2600)
!4142 = !DILocalVariable(name: "parent", scope: !4123, file: !2595, line: 466, type: !2600)
!4143 = !DILocation(line: 0, scope: !4123)
!4144 = !DILocation(line: 373, column: 29, scope: !4123)
!4145 = !DILocation(line: 373, column: 39, scope: !4123)
!4146 = !DILocation(line: 373, column: 2, scope: !4123)
!4147 = !DILocation(line: 373, column: 17, scope: !4123)
!4148 = !DILocation(line: 376, column: 16, scope: !4123)
!4149 = !DILocation(line: 378, column: 28, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4123, file: !2595, line: 378, column: 6)
!4151 = !DILocation(line: 378, column: 14, scope: !4150)
!4152 = !DILocation(line: 378, column: 11, scope: !4150)
!4153 = !DILocation(line: 378, column: 6, scope: !4123)
!4154 = !DILocation(line: 387, column: 7, scope: !4136)
!4155 = !DILocation(line: 387, column: 27, scope: !4136)
!4156 = !DILocation(line: 387, column: 36, scope: !4136)
!4157 = !DILocation(line: 387, column: 40, scope: !4136)
!4158 = !DILocation(line: 387, column: 60, scope: !4136)
!4159 = !DILocation(line: 387, column: 6, scope: !4123)
!4160 = !DILocation(line: 0, scope: !4135)
!4161 = !DILocation(line: 392, column: 23, scope: !4135)
!4162 = !DILocation(line: 392, column: 14, scope: !4135)
!4163 = !DILocation(line: 392, column: 44, scope: !4135)
!4164 = !DILocation(line: 392, column: 30, scope: !4135)
!4165 = !DILocation(line: 393, column: 3, scope: !4135)
!4166 = !DILocation(line: 393, column: 20, scope: !4135)
!4167 = !DILocation(line: 394, column: 10, scope: !4135)
!4168 = !DILocation(line: 394, column: 31, scope: !4135)
!4169 = !DILocation(line: 394, column: 3, scope: !4135)
!4170 = !DILocation(line: 396, column: 4, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4135, file: !2595, line: 394, column: 40)
!4172 = !DILocation(line: 396, column: 21, scope: !4171)
!4173 = distinct !{!4173, !4169, !4174}
!4174 = !DILocation(line: 397, column: 3, scope: !4135)
!4175 = !DILocation(line: 399, column: 28, scope: !4135)
!4176 = !DILocation(line: 399, column: 14, scope: !4135)
!4177 = !DILocation(line: 417, column: 16, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4135, file: !2595, line: 417, column: 7)
!4179 = !DILocation(line: 417, column: 7, scope: !4135)
!4180 = !DILocation(line: 418, column: 24, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4178, file: !2595, line: 417, column: 25)
!4182 = !DILocation(line: 418, column: 50, scope: !4181)
!4183 = !DILocation(line: 418, column: 4, scope: !4181)
!4184 = !DILocation(line: 419, column: 3, scope: !4181)
!4185 = !DILocation(line: 420, column: 10, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4178, file: !2595, line: 419, column: 10)
!4187 = !DILocation(line: 420, column: 15, scope: !4186)
!4188 = !DILocation(line: 423, column: 16, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4135, file: !2595, line: 423, column: 7)
!4190 = !DILocation(line: 423, column: 7, scope: !4135)
!4191 = !DILocation(line: 427, column: 24, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4189, file: !2595, line: 426, column: 10)
!4193 = !DILocation(line: 427, column: 51, scope: !4192)
!4194 = !DILocation(line: 427, column: 4, scope: !4192)
!4195 = !DILocation(line: 428, column: 10, scope: !4192)
!4196 = !DILocation(line: 0, scope: !4189)
!4197 = !DILocation(line: 433, column: 24, scope: !4135)
!4198 = !DILocation(line: 433, column: 3, scope: !4135)
!4199 = !DILocation(line: 434, column: 3, scope: !4135)
!4200 = !DILocation(line: 436, column: 9, scope: !4135)
!4201 = !DILocation(line: 437, column: 25, scope: !4135)
!4202 = !DILocation(line: 437, column: 23, scope: !4135)
!4203 = !DILocation(line: 438, column: 22, scope: !4135)
!4204 = !DILocation(line: 440, column: 24, scope: !4135)
!4205 = !DILocation(line: 442, column: 19, scope: !4135)
!4206 = !{i32 0, i32 2}
!4207 = !DILocation(line: 442, column: 3, scope: !4135)
!4208 = !DILocation(line: 443, column: 3, scope: !4135)
!4209 = !DILocation(line: 444, column: 2, scope: !4135)
!4210 = !DILocation(line: 449, column: 25, scope: !4123)
!4211 = !DILocation(line: 451, column: 12, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4123, file: !2595, line: 451, column: 6)
!4213 = !DILocation(line: 451, column: 6, scope: !4123)
!4214 = !DILocation(line: 452, column: 11, scope: !4215)
!4215 = distinct !DILexicalBlock(scope: !4212, file: !2595, line: 451, column: 21)
!4216 = !DILocation(line: 453, column: 2, scope: !4215)
!4217 = !DILocation(line: 456, column: 14, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4123, file: !2595, line: 456, column: 6)
!4219 = !DILocation(line: 456, column: 6, scope: !4123)
!4220 = !DILocation(line: 457, column: 9, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4218, file: !2595, line: 456, column: 19)
!4222 = !DILocation(line: 457, column: 14, scope: !4221)
!4223 = !DILocation(line: 458, column: 13, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4221, file: !2595, line: 458, column: 7)
!4225 = !DILocation(line: 458, column: 7, scope: !4221)
!4226 = !DILocation(line: 459, column: 4, scope: !4227)
!4227 = distinct !DILexicalBlock(scope: !4224, file: !2595, line: 458, column: 22)
!4228 = !DILocation(line: 460, column: 3, scope: !4227)
!4229 = !DILocation(line: 461, column: 20, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4224, file: !2595, line: 460, column: 10)
!4231 = !DILocation(line: 466, column: 40, scope: !4123)
!4232 = !DILocation(line: 466, column: 26, scope: !4123)
!4233 = !DILocation(line: 473, column: 12, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4123, file: !2595, line: 473, column: 6)
!4235 = !DILocation(line: 473, column: 6, scope: !4123)
!4236 = !DILocation(line: 474, column: 7, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4238, file: !2595, line: 474, column: 7)
!4238 = distinct !DILexicalBlock(scope: !4234, file: !2595, line: 473, column: 21)
!4239 = !DILocation(line: 474, column: 7, scope: !4238)
!4240 = !DILocation(line: 475, column: 4, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4237, file: !2595, line: 474, column: 23)
!4242 = !DILocation(line: 476, column: 3, scope: !4241)
!4243 = !DILocation(line: 478, column: 22, scope: !4244)
!4244 = distinct !DILexicalBlock(scope: !4237, file: !2595, line: 476, column: 10)
!4245 = !DILocation(line: 478, column: 4, scope: !4244)
!4246 = !DILocation(line: 481, column: 21, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4234, file: !2595, line: 480, column: 9)
!4248 = !DILocation(line: 481, column: 45, scope: !4247)
!4249 = !DILocation(line: 481, column: 3, scope: !4247)
!4250 = !DILocation(line: 486, column: 3, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !4252, file: !2595, line: 486, column: 3)
!4252 = distinct !DILexicalBlock(scope: !4247, file: !2595, line: 486, column: 3)
!4253 = !DILocation(line: 486, column: 3, scope: !4252)
!4254 = !DILocation(line: 486, column: 3, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4251, file: !2595, line: 486, column: 3)
!4256 = !DILocation(line: 487, column: 7, scope: !4257)
!4257 = distinct !DILexicalBlock(scope: !4247, file: !2595, line: 487, column: 7)
!4258 = !DILocation(line: 487, column: 20, scope: !4257)
!4259 = !DILocation(line: 487, column: 23, scope: !4257)
!4260 = !DILocation(line: 487, column: 7, scope: !4247)
!4261 = !DILocation(line: 488, column: 4, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4257, file: !2595, line: 487, column: 38)
!4263 = !DILocation(line: 489, column: 3, scope: !4262)
!4264 = !DILocation(line: 493, column: 15, scope: !4123)
!4265 = !DILocation(line: 493, column: 8, scope: !4123)
!4266 = !DILocation(line: 493, column: 13, scope: !4123)
!4267 = !DILocation(line: 494, column: 1, scope: !4123)
!4268 = distinct !DISubprogram(name: "fix_missing_black", scope: !2595, file: !2595, line: 266, type: !4269, scopeLine: 268, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !4271)
!4269 = !DISubroutineType(types: !4270)
!4270 = !{null, !3969, !109, !2600}
!4271 = !{!4272, !4273, !4274, !4275, !4277, !4278, !4279, !4280, !4281, !4282, !4283}
!4272 = !DILocalVariable(name: "stack", arg: 1, scope: !4268, file: !2595, line: 266, type: !3969)
!4273 = !DILocalVariable(name: "stacksz", arg: 2, scope: !4268, file: !2595, line: 266, type: !109)
!4274 = !DILocalVariable(name: "null_node", arg: 3, scope: !4268, file: !2595, line: 267, type: !2600)
!4275 = !DILocalVariable(name: "c0", scope: !4276, file: !2595, line: 271, type: !2600)
!4276 = distinct !DILexicalBlock(scope: !4268, file: !2595, line: 270, column: 22)
!4277 = !DILocalVariable(name: "c1", scope: !4276, file: !2595, line: 271, type: !2600)
!4278 = !DILocalVariable(name: "inner", scope: !4276, file: !2595, line: 271, type: !2600)
!4279 = !DILocalVariable(name: "outer", scope: !4276, file: !2595, line: 271, type: !2600)
!4280 = !DILocalVariable(name: "n", scope: !4276, file: !2595, line: 272, type: !2600)
!4281 = !DILocalVariable(name: "parent", scope: !4276, file: !2595, line: 273, type: !2600)
!4282 = !DILocalVariable(name: "n_side", scope: !4276, file: !2595, line: 274, type: !167)
!4283 = !DILocalVariable(name: "sib", scope: !4276, file: !2595, line: 275, type: !2600)
!4284 = !DILocation(line: 0, scope: !4268)
!4285 = !DILocation(line: 270, column: 17, scope: !4268)
!4286 = !DILocation(line: 270, column: 2, scope: !4268)
!4287 = !DILocation(line: 272, column: 36, scope: !4276)
!4288 = !DILocation(line: 272, column: 22, scope: !4276)
!4289 = !DILocation(line: 0, scope: !4276)
!4290 = !DILocation(line: 273, column: 41, scope: !4276)
!4291 = !DILocation(line: 273, column: 27, scope: !4276)
!4292 = !DILocation(line: 274, column: 20, scope: !4276)
!4293 = !DILocation(line: 276, column: 21, scope: !4276)
!4294 = !DILocation(line: 276, column: 13, scope: !4276)
!4295 = !DILocation(line: 275, column: 24, scope: !4276)
!4296 = !DILocation(line: 285, column: 8, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4276, file: !2595, line: 285, column: 7)
!4298 = !DILocation(line: 285, column: 7, scope: !4276)
!4299 = !DILocation(line: 286, column: 23, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4297, file: !2595, line: 285, column: 23)
!4301 = !DILocation(line: 287, column: 4, scope: !4300)
!4302 = !DILocation(line: 288, column: 4, scope: !4300)
!4303 = !DILocation(line: 289, column: 4, scope: !4300)
!4304 = !DILocation(line: 290, column: 17, scope: !4300)
!4305 = !DILocation(line: 290, column: 4, scope: !4300)
!4306 = !DILocation(line: 290, column: 21, scope: !4300)
!4307 = !DILocation(line: 292, column: 13, scope: !4300)
!4308 = !DILocation(line: 293, column: 10, scope: !4300)
!4309 = !DILocation(line: 294, column: 3, scope: !4300)
!4310 = !DILocation(line: 301, column: 8, scope: !4276)
!4311 = !DILocation(line: 302, column: 8, scope: !4276)
!4312 = !DILocation(line: 303, column: 12, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4276, file: !2595, line: 303, column: 7)
!4314 = !DILocation(line: 303, column: 21, scope: !4313)
!4315 = !DILocation(line: 303, column: 24, scope: !4313)
!4316 = !DILocation(line: 303, column: 38, scope: !4313)
!4317 = !DILocation(line: 303, column: 46, scope: !4313)
!4318 = !DILocation(line: 303, column: 55, scope: !4313)
!4319 = !DILocation(line: 304, column: 6, scope: !4313)
!4320 = !DILocation(line: 303, column: 7, scope: !4276)
!4321 = !DILocation(line: 305, column: 10, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4323, file: !2595, line: 305, column: 8)
!4323 = distinct !DILexicalBlock(scope: !4313, file: !2595, line: 304, column: 21)
!4324 = !DILocation(line: 305, column: 8, scope: !4323)
!4325 = !DILocation(line: 306, column: 5, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4322, file: !2595, line: 305, column: 24)
!4327 = !DILocation(line: 307, column: 4, scope: !4326)
!4328 = !DILocation(line: 309, column: 4, scope: !4323)
!4329 = !DILocation(line: 310, column: 8, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4323, file: !2595, line: 310, column: 8)
!4331 = !DILocation(line: 310, column: 8, scope: !4323)
!4332 = !DILocation(line: 320, column: 5, scope: !4333)
!4333 = distinct !DILexicalBlock(scope: !4330, file: !2595, line: 318, column: 11)
!4334 = !DILocation(line: 321, column: 5, scope: !4333)
!4335 = !DILocation(line: 331, column: 11, scope: !4276)
!4336 = !DILocation(line: 332, column: 16, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4276, file: !2595, line: 332, column: 7)
!4338 = !DILocation(line: 332, column: 25, scope: !4337)
!4339 = !DILocation(line: 332, column: 28, scope: !4337)
!4340 = !DILocation(line: 332, column: 7, scope: !4276)
!4341 = !DILocation(line: 358, column: 17, scope: !4276)
!4342 = !DILocation(line: 333, column: 12, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4337, file: !2595, line: 332, column: 44)
!4344 = !DILocation(line: 335, column: 18, scope: !4343)
!4345 = !DILocation(line: 335, column: 4, scope: !4343)
!4346 = !DILocation(line: 335, column: 23, scope: !4343)
!4347 = !DILocation(line: 336, column: 17, scope: !4343)
!4348 = !DILocation(line: 336, column: 4, scope: !4343)
!4349 = !DILocation(line: 336, column: 21, scope: !4343)
!4350 = !DILocation(line: 337, column: 4, scope: !4343)
!4351 = !DILocation(line: 338, column: 4, scope: !4343)
!4352 = !DILocation(line: 339, column: 4, scope: !4343)
!4353 = !DILocation(line: 344, column: 10, scope: !4343)
!4354 = !DILocation(line: 345, column: 12, scope: !4343)
!4355 = !DILocation(line: 346, column: 23, scope: !4343)
!4356 = !DILocation(line: 348, column: 3, scope: !4343)
!4357 = !DILocation(line: 355, column: 18, scope: !4276)
!4358 = !DILocation(line: 355, column: 3, scope: !4276)
!4359 = !DILocation(line: 356, column: 3, scope: !4276)
!4360 = !DILocation(line: 357, column: 3, scope: !4276)
!4361 = !DILocation(line: 358, column: 3, scope: !4276)
!4362 = !DILocation(line: 358, column: 22, scope: !4276)
!4363 = !DILocation(line: 359, column: 3, scope: !4276)
!4364 = !DILocation(line: 360, column: 9, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4276, file: !2595, line: 360, column: 7)
!4366 = !DILocation(line: 360, column: 7, scope: !4276)
!4367 = !DILocation(line: 361, column: 4, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4365, file: !2595, line: 360, column: 23)
!4369 = !DILocation(line: 362, column: 3, scope: !4368)
!4370 = !DILocation(line: 316, column: 12, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4330, file: !2595, line: 310, column: 26)
!4372 = !DILocation(line: 365, column: 1, scope: !4268)
!4373 = distinct !DISubprogram(name: "z_rb_walk", scope: !2595, file: !2595, line: 497, type: !4374, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !4380)
!4374 = !DISubroutineType(types: !4375)
!4375 = !{null, !2600, !4376, !108}
!4376 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_visit_t", file: !157, line: 93, baseType: !4377)
!4377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4378, size: 32)
!4378 = !DISubroutineType(types: !4379)
!4379 = !{null, !2600, !108}
!4380 = !{!4381, !4382, !4383}
!4381 = !DILocalVariable(name: "node", arg: 1, scope: !4373, file: !2595, line: 497, type: !2600)
!4382 = !DILocalVariable(name: "visit_fn", arg: 2, scope: !4373, file: !2595, line: 497, type: !4376)
!4383 = !DILocalVariable(name: "cookie", arg: 3, scope: !4373, file: !2595, line: 497, type: !108)
!4384 = !DILocation(line: 0, scope: !4373)
!4385 = !DILocation(line: 499, column: 11, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4373, file: !2595, line: 499, column: 6)
!4387 = !DILocation(line: 499, column: 6, scope: !4373)
!4388 = !DILocation(line: 500, column: 13, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4386, file: !2595, line: 499, column: 20)
!4390 = !DILocation(line: 500, column: 3, scope: !4389)
!4391 = !DILocation(line: 501, column: 3, scope: !4389)
!4392 = !DILocation(line: 502, column: 13, scope: !4389)
!4393 = !DILocation(line: 504, column: 1, scope: !4373)
!4394 = distinct !DISubprogram(name: "z_rb_child", scope: !2595, file: !2595, line: 507, type: !3852, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !4395)
!4395 = !{!4396, !4397}
!4396 = !DILocalVariable(name: "node", arg: 1, scope: !4394, file: !2595, line: 507, type: !2600)
!4397 = !DILocalVariable(name: "side", arg: 2, scope: !4394, file: !2595, line: 507, type: !167)
!4398 = !DILocation(line: 0, scope: !4394)
!4399 = !DILocation(line: 509, column: 9, scope: !4394)
!4400 = !DILocation(line: 509, column: 2, scope: !4394)
!4401 = distinct !DISubprogram(name: "z_rb_is_black", scope: !2595, file: !2595, line: 512, type: !4402, scopeLine: 513, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !4404)
!4402 = !DISubroutineType(types: !4403)
!4403 = !{!109, !2600}
!4404 = !{!4405}
!4405 = !DILocalVariable(name: "node", arg: 1, scope: !4401, file: !2595, line: 512, type: !2600)
!4406 = !DILocation(line: 0, scope: !4401)
!4407 = !DILocation(line: 514, column: 9, scope: !4401)
!4408 = !DILocation(line: 514, column: 2, scope: !4401)
!4409 = distinct !DISubprogram(name: "rb_contains", scope: !2595, file: !2595, line: 517, type: !4410, scopeLine: 518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !4412)
!4410 = !DISubroutineType(types: !4411)
!4411 = !{!334, !3823, !2600}
!4412 = !{!4413, !4414, !4415}
!4413 = !DILocalVariable(name: "tree", arg: 1, scope: !4409, file: !2595, line: 517, type: !3823)
!4414 = !DILocalVariable(name: "node", arg: 2, scope: !4409, file: !2595, line: 517, type: !2600)
!4415 = !DILocalVariable(name: "n", scope: !4409, file: !2595, line: 519, type: !2600)
!4416 = !DILocation(line: 0, scope: !4409)
!4417 = !DILocation(line: 519, column: 27, scope: !4409)
!4418 = !DILocation(line: 521, column: 12, scope: !4409)
!4419 = !DILocation(line: 521, column: 21, scope: !4409)
!4420 = !DILocation(line: 521, column: 2, scope: !4409)
!4421 = !DILocation(line: 522, column: 26, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4409, file: !2595, line: 521, column: 37)
!4423 = !DILocation(line: 522, column: 20, scope: !4422)
!4424 = !DILocation(line: 522, column: 7, scope: !4422)
!4425 = distinct !{!4425, !4420, !4426}
!4426 = !DILocation(line: 523, column: 2, scope: !4409)
!4427 = !DILocation(line: 525, column: 11, scope: !4409)
!4428 = !DILocation(line: 525, column: 2, scope: !4409)
!4429 = distinct !DISubprogram(name: "z_rb_foreach_next", scope: !2595, file: !2595, line: 557, type: !4430, scopeLine: 558, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !4438)
!4430 = !DISubroutineType(types: !4431)
!4431 = !{!2600, !3823, !4432}
!4432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4433, size: 32)
!4433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !157, line: 155, size: 96, elements: !4434)
!4434 = !{!4435, !4436, !4437}
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !4433, file: !157, line: 156, baseType: !3969, size: 32)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !4433, file: !157, line: 157, baseType: !1923, size: 32, offset: 32)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !4433, file: !157, line: 158, baseType: !765, size: 32, offset: 64)
!4438 = !{!4439, !4440, !4441}
!4439 = !DILocalVariable(name: "tree", arg: 1, scope: !4429, file: !2595, line: 557, type: !3823)
!4440 = !DILocalVariable(name: "f", arg: 2, scope: !4429, file: !2595, line: 557, type: !4432)
!4441 = !DILocalVariable(name: "n", scope: !4429, file: !2595, line: 559, type: !2600)
!4442 = !DILocation(line: 0, scope: !4429)
!4443 = !DILocation(line: 561, column: 12, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4429, file: !2595, line: 561, column: 6)
!4445 = !DILocation(line: 561, column: 17, scope: !4444)
!4446 = !DILocation(line: 561, column: 6, scope: !4429)
!4447 = !DILocation(line: 568, column: 9, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4429, file: !2595, line: 568, column: 6)
!4449 = !DILocation(line: 568, column: 13, scope: !4448)
!4450 = !DILocation(line: 568, column: 6, scope: !4429)
!4451 = !DILocation(line: 569, column: 10, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4448, file: !2595, line: 568, column: 20)
!4453 = !DILocation(line: 569, column: 3, scope: !4452)
!4454 = !DILocation(line: 575, column: 19, scope: !4429)
!4455 = !DILocation(line: 575, column: 16, scope: !4429)
!4456 = !DILocation(line: 575, column: 6, scope: !4429)
!4457 = !DILocation(line: 576, column: 8, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4429, file: !2595, line: 576, column: 6)
!4459 = !DILocation(line: 576, column: 6, scope: !4429)
!4460 = !DILocation(line: 577, column: 10, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4458, file: !2595, line: 576, column: 17)
!4462 = !DILocation(line: 577, column: 3, scope: !4461)
!4463 = !DILocation(line: 585, column: 9, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4429, file: !2595, line: 585, column: 6)
!4465 = !DILocation(line: 585, column: 6, scope: !4464)
!4466 = !DILocation(line: 585, column: 25, scope: !4464)
!4467 = !DILocation(line: 585, column: 6, scope: !4429)
!4468 = !DILocation(line: 586, column: 19, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4464, file: !2595, line: 585, column: 32)
!4470 = !DILocation(line: 586, column: 10, scope: !4469)
!4471 = !DILocation(line: 586, column: 3, scope: !4469)
!4472 = !DILocation(line: 593, column: 17, scope: !4429)
!4473 = !DILocation(line: 593, column: 22, scope: !4429)
!4474 = !DILocation(line: 594, column: 9, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4429, file: !2595, line: 593, column: 53)
!4476 = distinct !{!4476, !4477, !4478}
!4477 = !DILocation(line: 593, column: 2, scope: !4429)
!4478 = !DILocation(line: 595, column: 2, scope: !4429)
!4479 = !DILocation(line: 593, column: 26, scope: !4429)
!4480 = !DILocation(line: 593, column: 45, scope: !4429)
!4481 = !DILocation(line: 593, column: 13, scope: !4429)
!4482 = !DILocation(line: 597, column: 8, scope: !4429)
!4483 = !DILocation(line: 598, column: 9, scope: !4429)
!4484 = !DILocation(line: 598, column: 25, scope: !4429)
!4485 = !DILocation(line: 599, column: 1, scope: !4429)
!4486 = distinct !DISubprogram(name: "stack_left_limb", scope: !2595, file: !2595, line: 533, type: !4487, scopeLine: 535, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2591, retainedNodes: !4489)
!4487 = !DISubroutineType(types: !4488)
!4488 = !{!2600, !2600, !4432}
!4489 = !{!4490, !4491}
!4490 = !DILocalVariable(name: "n", arg: 1, scope: !4486, file: !2595, line: 533, type: !2600)
!4491 = !DILocalVariable(name: "f", arg: 2, scope: !4486, file: !2595, line: 534, type: !4432)
!4492 = !DILocation(line: 0, scope: !4486)
!4493 = !DILocation(line: 536, column: 5, scope: !4486)
!4494 = !DILocation(line: 536, column: 8, scope: !4486)
!4495 = !DILocation(line: 537, column: 5, scope: !4486)
!4496 = !DILocation(line: 537, column: 2, scope: !4486)
!4497 = !DILocation(line: 537, column: 19, scope: !4486)
!4498 = !DILocation(line: 538, column: 5, scope: !4486)
!4499 = !DILocation(line: 538, column: 16, scope: !4486)
!4500 = !DILocation(line: 538, column: 2, scope: !4486)
!4501 = !DILocation(line: 538, column: 21, scope: !4486)
!4502 = !DILocation(line: 540, column: 14, scope: !4486)
!4503 = !DILocation(line: 540, column: 32, scope: !4486)
!4504 = !DILocation(line: 540, column: 2, scope: !4486)
!4505 = !DILocation(line: 541, column: 9, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4486, file: !2595, line: 540, column: 41)
!4507 = !DILocation(line: 542, column: 6, scope: !4506)
!4508 = !DILocation(line: 542, column: 3, scope: !4506)
!4509 = !DILocation(line: 542, column: 20, scope: !4506)
!4510 = !DILocation(line: 543, column: 6, scope: !4506)
!4511 = !DILocation(line: 543, column: 17, scope: !4506)
!4512 = !DILocation(line: 543, column: 3, scope: !4506)
!4513 = !DILocation(line: 543, column: 22, scope: !4506)
!4514 = distinct !{!4514, !4504, !4515}
!4515 = !DILocation(line: 544, column: 2, scope: !4486)
!4516 = !DILocation(line: 546, column: 12, scope: !4486)
!4517 = !DILocation(line: 546, column: 21, scope: !4486)
!4518 = !DILocation(line: 546, column: 9, scope: !4486)
!4519 = !DILocation(line: 546, column: 2, scope: !4486)
!4520 = distinct !DISubprogram(name: "z_thread_entry", scope: !4521, file: !4521, line: 30, type: !4522, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !4524)
!4521 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4522 = !DISubroutineType(types: !4523)
!4523 = !{null, !215, !108, !108, !108}
!4524 = !{!4525, !4526, !4527, !4528}
!4525 = !DILocalVariable(name: "entry", arg: 1, scope: !4520, file: !4521, line: 30, type: !215)
!4526 = !DILocalVariable(name: "p1", arg: 2, scope: !4520, file: !4521, line: 31, type: !108)
!4527 = !DILocalVariable(name: "p2", arg: 3, scope: !4520, file: !4521, line: 31, type: !108)
!4528 = !DILocalVariable(name: "p3", arg: 4, scope: !4520, file: !4521, line: 31, type: !108)
!4529 = !DILocation(line: 0, scope: !4520)
!4530 = !DILocation(line: 36, column: 2, scope: !4520)
!4531 = !DILocation(line: 38, column: 17, scope: !4520)
!4532 = !DILocation(line: 38, column: 2, scope: !4520)
!4533 = !DILocation(line: 45, column: 2, scope: !4520)
!4534 = distinct !DISubprogram(name: "k_current_get", scope: !119, file: !119, line: 530, type: !4535, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !2100)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{!4537}
!4537 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !4538)
!4538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4539, size: 32)
!4539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !4540)
!4540 = !{!4541, !4599, !4611, !4612, !4613, !4620, !4621, !4622, !4623, !4629, !4644}
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4539, file: !145, line: 247, baseType: !4542, size: 384)
!4542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !4543)
!4543 = !{!4544, !4568, !4575, !4576, !4577, !4586, !4587, !4588}
!4544 = !DIDerivedType(tag: DW_TAG_member, scope: !4542, file: !145, line: 60, baseType: !4545, size: 64)
!4545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4542, file: !145, line: 60, size: 64, elements: !4546)
!4546 = !{!4547, !4562}
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4545, file: !145, line: 61, baseType: !4548, size: 64)
!4548 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !4549)
!4549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !4550)
!4550 = !{!4551, !4557}
!4551 = !DIDerivedType(tag: DW_TAG_member, scope: !4549, file: !128, line: 38, baseType: !4552, size: 32)
!4552 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4549, file: !128, line: 38, size: 32, elements: !4553)
!4553 = !{!4554, !4556}
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4552, file: !128, line: 39, baseType: !4555, size: 32)
!4555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4549, size: 32)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4552, file: !128, line: 40, baseType: !4555, size: 32)
!4557 = !DIDerivedType(tag: DW_TAG_member, scope: !4549, file: !128, line: 42, baseType: !4558, size: 32, offset: 32)
!4558 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4549, file: !128, line: 42, size: 32, elements: !4559)
!4559 = !{!4560, !4561}
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4558, file: !128, line: 43, baseType: !4555, size: 32)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4558, file: !128, line: 44, baseType: !4555, size: 32)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4545, file: !145, line: 62, baseType: !4563, size: 64)
!4563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !4564)
!4564 = !{!4565}
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4563, file: !157, line: 50, baseType: !4566, size: 64)
!4566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4567, size: 64, elements: !162)
!4567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4563, size: 32)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4542, file: !145, line: 68, baseType: !4569, size: 32, offset: 64)
!4569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4570, size: 32)
!4570 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !4571)
!4571 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !4572)
!4572 = !{!4573}
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4571, file: !123, line: 232, baseType: !4574, size: 64)
!4574 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !4549)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4542, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4542, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!4577 = !DIDerivedType(tag: DW_TAG_member, scope: !4542, file: !145, line: 90, baseType: !4578, size: 16, offset: 112)
!4578 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4542, file: !145, line: 90, size: 16, elements: !4579)
!4579 = !{!4580, !4585}
!4580 = !DIDerivedType(tag: DW_TAG_member, scope: !4578, file: !145, line: 91, baseType: !4581, size: 16)
!4581 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4578, file: !145, line: 91, size: 16, elements: !4582)
!4582 = !{!4583, !4584}
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4581, file: !145, line: 96, baseType: !177, size: 8)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4581, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4578, file: !145, line: 100, baseType: !181, size: 16)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4542, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4542, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4542, file: !145, line: 131, baseType: !4589, size: 192, offset: 192)
!4589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !4590)
!4590 = !{!4591, !4592, !4598}
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4589, file: !123, line: 245, baseType: !4548, size: 64)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4589, file: !123, line: 246, baseType: !4593, size: 32, offset: 64)
!4593 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !4594)
!4594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4595, size: 32)
!4595 = !DISubroutineType(types: !4596)
!4596 = !{null, !4597}
!4597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4589, size: 32)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4589, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4539, file: !145, line: 250, baseType: !4600, size: 288, offset: 384)
!4600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !4601)
!4601 = !{!4602, !4603, !4604, !4605, !4606, !4607, !4608, !4609, !4610}
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4600, file: !198, line: 26, baseType: !110, size: 32)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4600, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4600, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4600, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4600, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4600, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4600, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4600, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4600, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4539, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4539, file: !145, line: 256, baseType: !4570, size: 64, offset: 704)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4539, file: !145, line: 271, baseType: !4614, size: 128, offset: 768)
!4614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !4615)
!4615 = !{!4616, !4617, !4618, !4619}
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !4614, file: !145, line: 35, baseType: !215, size: 32)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !4614, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !4614, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !4614, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !4539, file: !145, line: 274, baseType: !4538, size: 32, offset: 896)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4539, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4539, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4539, file: !145, line: 300, baseType: !4624, size: 96, offset: 1216)
!4624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !4625)
!4625 = !{!4626, !4627, !4628}
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4624, file: !145, line: 153, baseType: !22, size: 32)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4624, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4624, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4539, file: !145, line: 325, baseType: !4630, size: 32, offset: 1312)
!4630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4631, size: 32)
!4631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !4632)
!4632 = !{!4633, !4639, !4640}
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4631, file: !119, line: 5074, baseType: !4634, size: 96)
!4634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !4635)
!4635 = !{!4636, !4637, !4638}
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4634, file: !244, line: 57, baseType: !247, size: 32)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4634, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4634, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4631, file: !119, line: 5075, baseType: !4570, size: 64, offset: 96)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4631, file: !119, line: 5076, baseType: !4641, size: 32, offset: 160)
!4641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !4642)
!4642 = !{!4643}
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4641, file: !254, line: 52, baseType: !22, size: 32)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4539, file: !145, line: 343, baseType: !4645, size: 64, offset: 1344)
!4645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !4646)
!4646 = !{!4647, !4648}
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4645, file: !198, line: 63, baseType: !110, size: 32)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4645, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!4649 = !DILocation(line: 535, column: 9, scope: !4534)
!4650 = !DILocation(line: 535, column: 2, scope: !4534)
!4651 = distinct !DISubprogram(name: "k_thread_abort", scope: !3354, file: !3354, line: 188, type: !4652, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !4654)
!4652 = !DISubroutineType(types: !4653)
!4653 = !{null, !4537}
!4654 = !{!4655}
!4655 = !DILocalVariable(name: "thread", arg: 1, scope: !4651, file: !3354, line: 188, type: !4537)
!4656 = !DILocation(line: 0, scope: !4651)
!4657 = !DILocation(line: 197, column: 2, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4651, file: !3354, line: 197, column: 2)
!4659 = !{i64 2155064844}
!4660 = !DILocation(line: 198, column: 2, scope: !4651)
!4661 = !DILocation(line: 199, column: 1, scope: !4651)
!4662 = distinct !DISubprogram(name: "z_current_get", scope: !3354, file: !3354, line: 173, type: !4535, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !2100)
!4663 = !DILocation(line: 180, column: 2, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4662, file: !3354, line: 180, column: 2)
!4665 = !{i64 2155064776}
!4666 = !DILocation(line: 181, column: 9, scope: !4662)
!4667 = !DILocation(line: 181, column: 2, scope: !4662)
!4668 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2611, file: !2611, line: 1338, type: !4669, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !4677)
!4669 = !DISubroutineType(types: !4670)
!4670 = !{!109, !3694, !108, !324, !4671, !110}
!4671 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3658, line: 99, baseType: !4672)
!4672 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3658, line: 40, baseType: !4673)
!4673 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2611, baseType: !4674)
!4674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4675)
!4675 = !{!4676}
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4674, file: !2611, baseType: !108, size: 32)
!4677 = !{!4678, !4679, !4680, !4681, !4682, !4683, !4687, !4688, !4689, !4691, !4696, !4741, !4744, !4747, !4748, !4749, !4750, !4751, !4752, !4753, !4756, !4757, !4758, !4762, !4765, !4767, !4770, !4771, !4772, !4777, !4783, !4786, !4790, !4796, !4800, !4803, !4805, !4808}
!4678 = !DILocalVariable(name: "out", arg: 1, scope: !4668, file: !2611, line: 1338, type: !3694)
!4679 = !DILocalVariable(name: "ctx", arg: 2, scope: !4668, file: !2611, line: 1338, type: !108)
!4680 = !DILocalVariable(name: "fp", arg: 3, scope: !4668, file: !2611, line: 1338, type: !324)
!4681 = !DILocalVariable(name: "ap", arg: 4, scope: !4668, file: !2611, line: 1339, type: !4671)
!4682 = !DILocalVariable(name: "flags", arg: 5, scope: !4668, file: !2611, line: 1339, type: !110)
!4683 = !DILocalVariable(name: "buf", scope: !4668, file: !2611, line: 1341, type: !4684)
!4684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 176, elements: !4685)
!4685 = !{!4686}
!4686 = !DISubrange(count: 22)
!4687 = !DILocalVariable(name: "count", scope: !4668, file: !2611, line: 1342, type: !235)
!4688 = !DILocalVariable(name: "sint", scope: !4668, file: !2611, line: 1343, type: !2630)
!4689 = !DILocalVariable(name: "tagged_ap", scope: !4668, file: !2611, line: 1345, type: !4690)
!4690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !334)
!4691 = !DILocalVariable(name: "rc", scope: !4692, file: !2611, line: 1377, type: !109)
!4692 = distinct !DILexicalBlock(scope: !4693, file: !2611, line: 1377, column: 4)
!4693 = distinct !DILexicalBlock(scope: !4694, file: !2611, line: 1376, column: 19)
!4694 = distinct !DILexicalBlock(scope: !4695, file: !2611, line: 1376, column: 7)
!4695 = distinct !DILexicalBlock(scope: !4668, file: !2611, line: 1375, column: 19)
!4696 = !DILocalVariable(name: "state", scope: !4695, file: !2611, line: 1395, type: !4697)
!4697 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4668, file: !2611, line: 1392, size: 192, elements: !4698)
!4698 = !{!4699, !4709}
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4697, file: !2611, line: 1393, baseType: !4700, size: 64)
!4700 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2611, line: 166, size: 64, elements: !4701)
!4701 = !{!4702, !4703, !4704, !4706, !4708}
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4700, file: !2611, line: 168, baseType: !2630, size: 64)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4700, file: !2611, line: 171, baseType: !2633, size: 64)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4700, file: !2611, line: 174, baseType: !4705, size: 64)
!4705 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4700, file: !2611, line: 177, baseType: !4707, size: 64)
!4707 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4700, file: !2611, line: 180, baseType: !108, size: 32)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4697, file: !2611, line: 1394, baseType: !4710, size: 96, offset: 64)
!4710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2611, line: 189, size: 96, elements: !4711)
!4711 = !{!4712, !4713, !4714, !4715, !4716, !4717, !4718, !4719, !4720, !4721, !4722, !4723, !4724, !4725, !4726, !4727, !4728, !4729, !4730, !4731, !4736}
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4710, file: !2611, line: 191, baseType: !334, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4710, file: !2611, line: 194, baseType: !334, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4710, file: !2611, line: 197, baseType: !334, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4710, file: !2611, line: 200, baseType: !334, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4710, file: !2611, line: 203, baseType: !334, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4710, file: !2611, line: 206, baseType: !334, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4710, file: !2611, line: 209, baseType: !334, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4710, file: !2611, line: 212, baseType: !334, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4710, file: !2611, line: 219, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4710, file: !2611, line: 222, baseType: !334, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4710, file: !2611, line: 229, baseType: !334, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4710, file: !2611, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4710, file: !2611, line: 238, baseType: !334, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4710, file: !2611, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4710, file: !2611, line: 244, baseType: !334, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4710, file: !2611, line: 247, baseType: !334, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4710, file: !2611, line: 252, baseType: !334, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4710, file: !2611, line: 257, baseType: !334, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4710, file: !2611, line: 260, baseType: !168, size: 8, offset: 24)
!4731 = !DIDerivedType(tag: DW_TAG_member, scope: !4710, file: !2611, line: 262, baseType: !4732, size: 32, offset: 32)
!4732 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4710, file: !2611, line: 262, size: 32, elements: !4733)
!4733 = !{!4734, !4735}
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4732, file: !2611, line: 267, baseType: !109, size: 32)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4732, file: !2611, line: 289, baseType: !109, size: 32)
!4736 = !DIDerivedType(tag: DW_TAG_member, scope: !4710, file: !2611, line: 292, baseType: !4737, size: 32, offset: 64)
!4737 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4710, file: !2611, line: 292, size: 32, elements: !4738)
!4738 = !{!4739, !4740}
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4737, file: !2611, line: 297, baseType: !109, size: 32)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4737, file: !2611, line: 306, baseType: !109, size: 32)
!4741 = !DILocalVariable(name: "conv", scope: !4695, file: !2611, line: 1400, type: !4742)
!4742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4743)
!4743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4710, size: 32)
!4744 = !DILocalVariable(name: "value", scope: !4695, file: !2611, line: 1401, type: !4745)
!4745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4746)
!4746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4700, size: 32)
!4747 = !DILocalVariable(name: "sp", scope: !4695, file: !2611, line: 1402, type: !324)
!4748 = !DILocalVariable(name: "width", scope: !4695, file: !2611, line: 1403, type: !109)
!4749 = !DILocalVariable(name: "precision", scope: !4695, file: !2611, line: 1404, type: !109)
!4750 = !DILocalVariable(name: "bps", scope: !4695, file: !2611, line: 1405, type: !324)
!4751 = !DILocalVariable(name: "bpe", scope: !4695, file: !2611, line: 1406, type: !324)
!4752 = !DILocalVariable(name: "sign", scope: !4695, file: !2611, line: 1407, type: !226)
!4753 = !DILocalVariable(name: "arg", scope: !4754, file: !2611, line: 1432, type: !109)
!4754 = distinct !DILexicalBlock(scope: !4755, file: !2611, line: 1431, column: 24)
!4755 = distinct !DILexicalBlock(scope: !4695, file: !2611, line: 1431, column: 7)
!4756 = !DILocalVariable(name: "specifier_cat", scope: !4695, file: !2611, line: 1468, type: !2610)
!4757 = !DILocalVariable(name: "length_mod", scope: !4695, file: !2611, line: 1470, type: !2618)
!4758 = !DILocalVariable(name: "rc", scope: !4759, file: !2611, line: 1575, type: !109)
!4759 = distinct !DILexicalBlock(scope: !4760, file: !2611, line: 1575, column: 4)
!4760 = distinct !DILexicalBlock(scope: !4761, file: !2611, line: 1574, column: 43)
!4761 = distinct !DILexicalBlock(scope: !4695, file: !2611, line: 1574, column: 7)
!4762 = !DILocalVariable(name: "rc", scope: !4763, file: !2611, line: 1584, type: !109)
!4763 = distinct !DILexicalBlock(scope: !4764, file: !2611, line: 1584, column: 4)
!4764 = distinct !DILexicalBlock(scope: !4695, file: !2611, line: 1582, column: 28)
!4765 = !DILocalVariable(name: "len", scope: !4766, file: !2611, line: 1589, type: !235)
!4766 = distinct !DILexicalBlock(scope: !4764, file: !2611, line: 1586, column: 13)
!4767 = !DILocalVariable(name: "len", scope: !4768, file: !2611, line: 1641, type: !235)
!4768 = distinct !DILexicalBlock(scope: !4769, file: !2611, line: 1640, column: 24)
!4769 = distinct !DILexicalBlock(scope: !4764, file: !2611, line: 1640, column: 8)
!4770 = !DILocalVariable(name: "nj_len", scope: !4695, file: !2611, line: 1722, type: !235)
!4771 = !DILocalVariable(name: "pad_len", scope: !4695, file: !2611, line: 1723, type: !109)
!4772 = !DILocalVariable(name: "pad", scope: !4773, file: !2611, line: 1751, type: !226)
!4773 = distinct !DILexicalBlock(scope: !4774, file: !2611, line: 1750, column: 26)
!4774 = distinct !DILexicalBlock(scope: !4775, file: !2611, line: 1750, column: 8)
!4775 = distinct !DILexicalBlock(scope: !4776, file: !2611, line: 1747, column: 18)
!4776 = distinct !DILexicalBlock(scope: !4695, file: !2611, line: 1747, column: 7)
!4777 = !DILocalVariable(name: "rc", scope: !4778, file: !2611, line: 1758, type: !109)
!4778 = distinct !DILexicalBlock(scope: !4779, file: !2611, line: 1758, column: 7)
!4779 = distinct !DILexicalBlock(scope: !4780, file: !2611, line: 1757, column: 21)
!4780 = distinct !DILexicalBlock(scope: !4781, file: !2611, line: 1757, column: 10)
!4781 = distinct !DILexicalBlock(scope: !4782, file: !2611, line: 1756, column: 26)
!4782 = distinct !DILexicalBlock(scope: !4773, file: !2611, line: 1756, column: 9)
!4783 = !DILocalVariable(name: "rc", scope: !4784, file: !2611, line: 1765, type: !109)
!4784 = distinct !DILexicalBlock(scope: !4785, file: !2611, line: 1765, column: 6)
!4785 = distinct !DILexicalBlock(scope: !4773, file: !2611, line: 1764, column: 25)
!4786 = !DILocalVariable(name: "rc", scope: !4787, file: !2611, line: 1774, type: !109)
!4787 = distinct !DILexicalBlock(scope: !4788, file: !2611, line: 1774, column: 4)
!4788 = distinct !DILexicalBlock(scope: !4789, file: !2611, line: 1773, column: 18)
!4789 = distinct !DILexicalBlock(scope: !4695, file: !2611, line: 1773, column: 7)
!4790 = !DILocalVariable(name: "rc", scope: !4791, file: !2611, line: 1819, type: !109)
!4791 = distinct !DILexicalBlock(scope: !4792, file: !2611, line: 1819, column: 5)
!4792 = distinct !DILexicalBlock(scope: !4793, file: !2611, line: 1818, column: 44)
!4793 = distinct !DILexicalBlock(scope: !4794, file: !2611, line: 1818, column: 8)
!4794 = distinct !DILexicalBlock(scope: !4795, file: !2611, line: 1817, column: 10)
!4795 = distinct !DILexicalBlock(scope: !4695, file: !2611, line: 1777, column: 7)
!4796 = !DILocalVariable(name: "rc", scope: !4797, file: !2611, line: 1823, type: !109)
!4797 = distinct !DILexicalBlock(scope: !4798, file: !2611, line: 1823, column: 5)
!4798 = distinct !DILexicalBlock(scope: !4799, file: !2611, line: 1822, column: 26)
!4799 = distinct !DILexicalBlock(scope: !4794, file: !2611, line: 1822, column: 8)
!4800 = !DILocalVariable(name: "rc", scope: !4801, file: !2611, line: 1828, type: !109)
!4801 = distinct !DILexicalBlock(scope: !4802, file: !2611, line: 1828, column: 5)
!4802 = distinct !DILexicalBlock(scope: !4794, file: !2611, line: 1827, column: 26)
!4803 = !DILocalVariable(name: "rc", scope: !4804, file: !2611, line: 1831, type: !109)
!4804 = distinct !DILexicalBlock(scope: !4794, file: !2611, line: 1831, column: 4)
!4805 = !DILocalVariable(name: "rc", scope: !4806, file: !2611, line: 1836, type: !109)
!4806 = distinct !DILexicalBlock(scope: !4807, file: !2611, line: 1836, column: 4)
!4807 = distinct !DILexicalBlock(scope: !4695, file: !2611, line: 1835, column: 21)
!4808 = !DILabel(scope: !4764, name: "prec_int_pad0", file: !2611, line: 1634)
!4809 = !DILocation(line: 0, scope: !4668)
!4810 = !DILocation(line: 1341, column: 2, scope: !4668)
!4811 = !DILocation(line: 1341, column: 7, scope: !4668)
!4812 = !DILocation(line: 1375, column: 2, scope: !4668)
!4813 = !DILocation(line: 1342, column: 9, scope: !4668)
!4814 = !DILocation(line: 1375, column: 9, scope: !4668)
!4815 = !DILocation(line: 1377, column: 4, scope: !4692)
!4816 = !DILocation(line: 0, scope: !4692)
!4817 = !DILocation(line: 1377, column: 4, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4692, file: !2611, line: 1377, column: 4)
!4819 = distinct !{!4819, !4812, !4820}
!4820 = !DILocation(line: 1839, column: 2, scope: !4668)
!4821 = !DILocation(line: 1392, column: 3, scope: !4695)
!4822 = !DILocation(line: 1395, column: 5, scope: !4695)
!4823 = !DILocation(line: 0, scope: !4695)
!4824 = !DILocation(line: 1409, column: 8, scope: !4695)
!4825 = !DILocation(line: 1414, column: 13, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4695, file: !2611, line: 1414, column: 7)
!4827 = !DILocation(line: 1414, column: 7, scope: !4695)
!4828 = !DILocation(line: 1415, column: 12, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4826, file: !2611, line: 1414, column: 25)
!4830 = !DILocation(line: 1417, column: 14, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4829, file: !2611, line: 1417, column: 8)
!4832 = !DILocation(line: 1417, column: 8, scope: !4829)
!4833 = !DILocation(line: 1418, column: 21, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4831, file: !2611, line: 1417, column: 19)
!4835 = !DILocation(line: 1419, column: 13, scope: !4834)
!4836 = !DILocation(line: 1420, column: 4, scope: !4834)
!4837 = !DILocation(line: 1421, column: 20, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4826, file: !2611, line: 1421, column: 14)
!4839 = !DILocation(line: 1421, column: 14, scope: !4826)
!4840 = !DILocation(line: 1431, column: 13, scope: !4755)
!4841 = !DILocation(line: 1431, column: 7, scope: !4695)
!4842 = !DILocation(line: 1432, column: 14, scope: !4754)
!4843 = !DILocation(line: 0, scope: !4754)
!4844 = !DILocation(line: 1434, column: 12, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4754, file: !2611, line: 1434, column: 8)
!4846 = !DILocation(line: 1434, column: 8, scope: !4754)
!4847 = !DILocation(line: 1435, column: 24, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4845, file: !2611, line: 1434, column: 17)
!4849 = !DILocation(line: 1436, column: 4, scope: !4848)
!4850 = !DILocation(line: 1439, column: 20, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4755, file: !2611, line: 1439, column: 14)
!4852 = !DILocation(line: 1439, column: 14, scope: !4755)
!4853 = !DILocation(line: 1469, column: 37, scope: !4695)
!4854 = !DILocation(line: 1448, column: 20, scope: !4695)
!4855 = !DILocation(line: 1449, column: 22, scope: !4695)
!4856 = !DILocation(line: 1471, column: 34, scope: !4695)
!4857 = !DILocation(line: 1478, column: 7, scope: !4695)
!4858 = !DILocation(line: 1479, column: 4, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4860, file: !2611, line: 1478, column: 40)
!4860 = distinct !DILexicalBlock(scope: !4695, file: !2611, line: 1478, column: 7)
!4861 = !DILocation(line: 1484, column: 19, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4859, file: !2611, line: 1479, column: 24)
!4863 = !DILocation(line: 1484, column: 17, scope: !4862)
!4864 = !DILocation(line: 1485, column: 5, scope: !4862)
!4865 = !DILocation(line: 1492, column: 20, scope: !4866)
!4866 = distinct !DILexicalBlock(scope: !4867, file: !2611, line: 1491, column: 12)
!4867 = distinct !DILexicalBlock(scope: !4862, file: !2611, line: 1487, column: 9)
!4868 = !DILocation(line: 1492, column: 18, scope: !4866)
!4869 = !DILocation(line: 1494, column: 5, scope: !4862)
!4870 = !DILocation(line: 1497, column: 23, scope: !4862)
!4871 = !DILocation(line: 1496, column: 17, scope: !4862)
!4872 = !DILocation(line: 1498, column: 5, scope: !4862)
!4873 = !DILocation(line: 1501, column: 23, scope: !4862)
!4874 = !DILocation(line: 1500, column: 17, scope: !4862)
!4875 = !DILocation(line: 1502, column: 5, scope: !4862)
!4876 = !DILocation(line: 1513, column: 23, scope: !4862)
!4877 = !DILocation(line: 1513, column: 6, scope: !4862)
!4878 = !DILocation(line: 1512, column: 17, scope: !4862)
!4879 = !DILocation(line: 1514, column: 5, scope: !4862)
!4880 = !DILocation(line: 0, scope: !4862)
!4881 = !DILocation(line: 1516, column: 8, scope: !4859)
!4882 = !DILocation(line: 1517, column: 19, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4884, file: !2611, line: 1516, column: 33)
!4884 = distinct !DILexicalBlock(scope: !4859, file: !2611, line: 1516, column: 8)
!4885 = !DILocation(line: 1517, column: 17, scope: !4883)
!4886 = !DILocation(line: 1518, column: 4, scope: !4883)
!4887 = !DILocation(line: 1519, column: 19, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4889, file: !2611, line: 1518, column: 39)
!4889 = distinct !DILexicalBlock(scope: !4884, file: !2611, line: 1518, column: 15)
!4890 = !DILocation(line: 1519, column: 17, scope: !4888)
!4891 = !DILocation(line: 1520, column: 4, scope: !4888)
!4892 = !DILocation(line: 1522, column: 4, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4894, file: !2611, line: 1521, column: 47)
!4894 = distinct !DILexicalBlock(scope: !4860, file: !2611, line: 1521, column: 14)
!4895 = !DILocation(line: 1527, column: 19, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4893, file: !2611, line: 1522, column: 24)
!4897 = !DILocation(line: 1527, column: 17, scope: !4896)
!4898 = !DILocation(line: 1528, column: 5, scope: !4896)
!4899 = !DILocation(line: 0, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4896, file: !2611, line: 1530, column: 9)
!4901 = !DILocation(line: 1540, column: 23, scope: !4896)
!4902 = !DILocation(line: 1539, column: 17, scope: !4896)
!4903 = !DILocation(line: 1542, column: 5, scope: !4896)
!4904 = !DILocation(line: 1545, column: 23, scope: !4896)
!4905 = !DILocation(line: 1544, column: 17, scope: !4896)
!4906 = !DILocation(line: 1547, column: 5, scope: !4896)
!4907 = !DILocation(line: 1551, column: 23, scope: !4896)
!4908 = !DILocation(line: 1551, column: 6, scope: !4896)
!4909 = !DILocation(line: 1550, column: 17, scope: !4896)
!4910 = !DILocation(line: 1552, column: 5, scope: !4896)
!4911 = !DILocation(line: 0, scope: !4896)
!4912 = !DILocation(line: 1554, column: 8, scope: !4893)
!4913 = !DILocation(line: 1555, column: 19, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4915, file: !2611, line: 1554, column: 33)
!4915 = distinct !DILexicalBlock(scope: !4893, file: !2611, line: 1554, column: 8)
!4916 = !DILocation(line: 1555, column: 17, scope: !4914)
!4917 = !DILocation(line: 1556, column: 4, scope: !4914)
!4918 = !DILocation(line: 1557, column: 19, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4920, file: !2611, line: 1556, column: 39)
!4920 = distinct !DILexicalBlock(scope: !4915, file: !2611, line: 1556, column: 15)
!4921 = !DILocation(line: 1557, column: 17, scope: !4919)
!4922 = !DILocation(line: 1558, column: 4, scope: !4919)
!4923 = !DILocation(line: 0, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4925, file: !2611, line: 1560, column: 8)
!4925 = distinct !DILexicalBlock(scope: !4926, file: !2611, line: 1559, column: 45)
!4926 = distinct !DILexicalBlock(scope: !4894, file: !2611, line: 1559, column: 14)
!4927 = !DILocation(line: 1566, column: 17, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4929, file: !2611, line: 1565, column: 46)
!4929 = distinct !DILexicalBlock(scope: !4926, file: !2611, line: 1565, column: 14)
!4930 = !DILocation(line: 1566, column: 15, scope: !4928)
!4931 = !DILocation(line: 1567, column: 3, scope: !4928)
!4932 = !DILocation(line: 1574, column: 21, scope: !4761)
!4933 = !DILocation(line: 1575, column: 4, scope: !4759)
!4934 = !DILocation(line: 0, scope: !4759)
!4935 = !DILocation(line: 1575, column: 4, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4759, file: !2611, line: 1575, column: 4)
!4937 = !DILocation(line: 1582, column: 17, scope: !4695)
!4938 = !DILocation(line: 1582, column: 3, scope: !4695)
!4939 = !DILocation(line: 1584, column: 4, scope: !4763)
!4940 = !DILocation(line: 0, scope: !4763)
!4941 = !DILocation(line: 1584, column: 4, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4763, file: !2611, line: 1584, column: 4)
!4943 = !DILocation(line: 1587, column: 31, scope: !4766)
!4944 = !DILocation(line: 1591, column: 18, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4766, file: !2611, line: 1591, column: 8)
!4946 = !DILocation(line: 1591, column: 8, scope: !4766)
!4947 = !DILocation(line: 1592, column: 11, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4945, file: !2611, line: 1591, column: 24)
!4949 = !DILocation(line: 0, scope: !4766)
!4950 = !DILocation(line: 1593, column: 4, scope: !4948)
!4951 = !DILocation(line: 1594, column: 11, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4945, file: !2611, line: 1593, column: 11)
!4953 = !DILocation(line: 1604, column: 51, scope: !4764)
!4954 = !DILocation(line: 1604, column: 13, scope: !4764)
!4955 = !DILocation(line: 1604, column: 11, scope: !4764)
!4956 = !DILocation(line: 1606, column: 4, scope: !4764)
!4957 = !DILocation(line: 1609, column: 14, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4764, file: !2611, line: 1609, column: 8)
!4959 = !DILocation(line: 1609, column: 8, scope: !4764)
!4960 = !DILocation(line: 1619, column: 18, scope: !4764)
!4961 = !DILocation(line: 1620, column: 13, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4764, file: !2611, line: 1620, column: 8)
!4963 = !DILocation(line: 1620, column: 8, scope: !4764)
!4964 = !DILocation(line: 1622, column: 36, scope: !4965)
!4965 = distinct !DILexicalBlock(scope: !4962, file: !2611, line: 1620, column: 18)
!4966 = !DILocation(line: 1622, column: 17, scope: !4965)
!4967 = !DILocation(line: 1623, column: 4, scope: !4965)
!4968 = !DILocation(line: 1632, column: 29, scope: !4764)
!4969 = !DILocation(line: 1632, column: 10, scope: !4764)
!4970 = !DILocation(line: 1632, column: 4, scope: !4764)
!4971 = !DILocation(line: 1407, column: 8, scope: !4695)
!4972 = !DILocation(line: 0, scope: !4764)
!4973 = !DILocation(line: 1634, column: 3, scope: !4764)
!4974 = !DILocation(line: 1640, column: 18, scope: !4769)
!4975 = !DILocation(line: 1640, column: 8, scope: !4764)
!4976 = !DILocation(line: 1729, column: 13, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4695, file: !2611, line: 1729, column: 7)
!4978 = !DILocation(line: 1641, column: 22, scope: !4768)
!4979 = !DILocation(line: 0, scope: !4768)
!4980 = !DILocation(line: 1646, column: 21, scope: !4768)
!4981 = !DILocation(line: 1649, column: 13, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4768, file: !2611, line: 1649, column: 9)
!4983 = !DILocation(line: 1649, column: 9, scope: !4768)
!4984 = !DILocation(line: 1650, column: 35, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4982, file: !2611, line: 1649, column: 34)
!4986 = !DILocation(line: 1650, column: 23, scope: !4985)
!4987 = !DILocation(line: 1651, column: 5, scope: !4985)
!4988 = !DILocation(line: 1660, column: 15, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4764, file: !2611, line: 1660, column: 8)
!4990 = !DILocation(line: 1660, column: 19, scope: !4989)
!4991 = !DILocation(line: 1660, column: 8, scope: !4764)
!4992 = !DILocation(line: 1661, column: 23, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4989, file: !2611, line: 1660, column: 28)
!4994 = !DILocation(line: 1661, column: 11, scope: !4993)
!4995 = !DILocation(line: 1665, column: 22, scope: !4993)
!4996 = !DILocation(line: 1666, column: 21, scope: !4993)
!4997 = !DILocation(line: 1668, column: 5, scope: !4993)
!4998 = !DILocation(line: 1677, column: 30, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !5000, file: !2611, line: 1676, column: 49)
!5000 = distinct !DILexicalBlock(scope: !4764, file: !2611, line: 1676, column: 8)
!5001 = !DILocation(line: 1677, column: 5, scope: !4999)
!5002 = !DILocation(line: 1680, column: 4, scope: !4764)
!5003 = !DILocation(line: 0, scope: !4945)
!5004 = !DILocation(line: 1597, column: 14, scope: !4766)
!5005 = !DILocation(line: 1699, column: 11, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4695, file: !2611, line: 1699, column: 7)
!5007 = !DILocation(line: 1699, column: 7, scope: !4695)
!5008 = !DILocation(line: 1725, column: 7, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !4695, file: !2611, line: 1725, column: 7)
!5010 = !DILocation(line: 1725, column: 12, scope: !5009)
!5011 = !DILocation(line: 1747, column: 13, scope: !4776)
!5012 = !DILocation(line: 1747, column: 7, scope: !4695)
!5013 = !DILocation(line: 1722, column: 24, scope: !4695)
!5014 = !DILocation(line: 1725, column: 7, scope: !4695)
!5015 = !DILocation(line: 1729, column: 7, scope: !4695)
!5016 = !DILocation(line: 1736, column: 13, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !4695, file: !2611, line: 1736, column: 7)
!5018 = !DILocation(line: 1735, column: 19, scope: !4695)
!5019 = !DILocation(line: 1736, column: 7, scope: !4695)
!5020 = !DILocation(line: 1748, column: 10, scope: !4775)
!5021 = !DILocation(line: 1750, column: 15, scope: !4774)
!5022 = !DILocation(line: 1750, column: 8, scope: !4775)
!5023 = !DILocation(line: 0, scope: !4773)
!5024 = !DILocation(line: 1756, column: 15, scope: !4782)
!5025 = !DILocation(line: 1756, column: 9, scope: !4773)
!5026 = !DILocation(line: 1758, column: 7, scope: !4778)
!5027 = !DILocation(line: 0, scope: !4778)
!5028 = !DILocation(line: 1758, column: 7, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !4778, file: !2611, line: 1758, column: 7)
!5030 = !DILocation(line: 1764, column: 5, scope: !4773)
!5031 = !DILocation(line: 0, scope: !4775)
!5032 = !DILocation(line: 1764, column: 20, scope: !4773)
!5033 = !DILocation(line: 1764, column: 17, scope: !4773)
!5034 = !DILocation(line: 1765, column: 6, scope: !4784)
!5035 = !DILocation(line: 0, scope: !4784)
!5036 = !DILocation(line: 1765, column: 6, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !4784, file: !2611, line: 1765, column: 6)
!5038 = distinct !{!5038, !5030, !5039}
!5039 = !DILocation(line: 1766, column: 5, scope: !4773)
!5040 = !DILocation(line: 1773, column: 12, scope: !4789)
!5041 = !DILocation(line: 1773, column: 7, scope: !4695)
!5042 = !DILocation(line: 1773, column: 7, scope: !4789)
!5043 = !DILocation(line: 1774, column: 4, scope: !4787)
!5044 = !DILocation(line: 0, scope: !4787)
!5045 = !DILocation(line: 1774, column: 4, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !4787, file: !2611, line: 1774, column: 4)
!5047 = !DILocation(line: 1818, column: 8, scope: !4793)
!5048 = !DILocation(line: 1818, column: 27, scope: !4793)
!5049 = !DILocation(line: 1818, column: 25, scope: !4793)
!5050 = !DILocation(line: 1818, column: 8, scope: !4794)
!5051 = !DILocation(line: 1819, column: 5, scope: !4791)
!5052 = !DILocation(line: 0, scope: !4791)
!5053 = !DILocation(line: 1819, column: 5, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !4791, file: !2611, line: 1819, column: 5)
!5055 = !DILocation(line: 1822, column: 14, scope: !4799)
!5056 = !DILocation(line: 1822, column: 8, scope: !4794)
!5057 = !DILocation(line: 1823, column: 5, scope: !4797)
!5058 = !DILocation(line: 0, scope: !4797)
!5059 = !DILocation(line: 1823, column: 5, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !4797, file: !2611, line: 1823, column: 5)
!5061 = !DILocation(line: 1826, column: 20, scope: !4794)
!5062 = !DILocation(line: 1827, column: 4, scope: !4794)
!5063 = !DILocation(line: 0, scope: !4794)
!5064 = !DILocation(line: 1827, column: 21, scope: !4794)
!5065 = !DILocation(line: 1827, column: 18, scope: !4794)
!5066 = !DILocation(line: 1828, column: 5, scope: !4801)
!5067 = !DILocation(line: 0, scope: !4801)
!5068 = !DILocation(line: 1828, column: 5, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !4801, file: !2611, line: 1828, column: 5)
!5070 = distinct !{!5070, !5062, !5071}
!5071 = !DILocation(line: 1829, column: 4, scope: !4794)
!5072 = !DILocation(line: 1831, column: 4, scope: !4804)
!5073 = !DILocation(line: 0, scope: !4804)
!5074 = !DILocation(line: 1831, column: 4, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !4804, file: !2611, line: 1831, column: 4)
!5076 = !DILocation(line: 1835, column: 16, scope: !4695)
!5077 = !DILocation(line: 1835, column: 3, scope: !4695)
!5078 = !DILocation(line: 1836, column: 4, scope: !4806)
!5079 = !DILocation(line: 0, scope: !4806)
!5080 = !DILocation(line: 1836, column: 4, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !4806, file: !2611, line: 1836, column: 4)
!5082 = !DILocation(line: 1837, column: 4, scope: !4807)
!5083 = distinct !{!5083, !5077, !5084}
!5084 = !DILocation(line: 1838, column: 3, scope: !4695)
!5085 = !DILocation(line: 1844, column: 1, scope: !4668)
!5086 = distinct !DISubprogram(name: "extract_conversion", scope: !2611, file: !2611, line: 642, type: !5087, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !5089)
!5087 = !DISubroutineType(types: !5088)
!5088 = !{!324, !4743, !324}
!5089 = !{!5090, !5091}
!5090 = !DILocalVariable(name: "conv", arg: 1, scope: !5086, file: !2611, line: 642, type: !4743)
!5091 = !DILocalVariable(name: "sp", arg: 2, scope: !5086, file: !2611, line: 643, type: !324)
!5092 = !DILocation(line: 0, scope: !5086)
!5093 = !DILocation(line: 645, column: 10, scope: !5086)
!5094 = !DILocation(line: 653, column: 2, scope: !5086)
!5095 = !DILocation(line: 654, column: 6, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5086, file: !2611, line: 654, column: 6)
!5097 = !DILocation(line: 654, column: 10, scope: !5096)
!5098 = !DILocation(line: 654, column: 6, scope: !5086)
!5099 = !DILocation(line: 655, column: 24, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5096, file: !2611, line: 654, column: 18)
!5101 = !DILocation(line: 655, column: 19, scope: !5100)
!5102 = !DILocation(line: 656, column: 3, scope: !5100)
!5103 = !DILocation(line: 659, column: 7, scope: !5086)
!5104 = !DILocation(line: 660, column: 7, scope: !5086)
!5105 = !DILocation(line: 661, column: 7, scope: !5086)
!5106 = !DILocation(line: 662, column: 7, scope: !5086)
!5107 = !DILocation(line: 663, column: 7, scope: !5086)
!5108 = !DILocation(line: 665, column: 2, scope: !5086)
!5109 = !DILocation(line: 666, column: 1, scope: !5086)
!5110 = distinct !DISubprogram(name: "outs", scope: !2611, file: !2611, line: 1319, type: !5111, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !5113)
!5111 = !DISubroutineType(types: !5112)
!5112 = !{!109, !3694, !108, !324, !324}
!5113 = !{!5114, !5115, !5116, !5117, !5118, !5119}
!5114 = !DILocalVariable(name: "out", arg: 1, scope: !5110, file: !2611, line: 1319, type: !3694)
!5115 = !DILocalVariable(name: "ctx", arg: 2, scope: !5110, file: !2611, line: 1320, type: !108)
!5116 = !DILocalVariable(name: "sp", arg: 3, scope: !5110, file: !2611, line: 1321, type: !324)
!5117 = !DILocalVariable(name: "ep", arg: 4, scope: !5110, file: !2611, line: 1322, type: !324)
!5118 = !DILocalVariable(name: "count", scope: !5110, file: !2611, line: 1324, type: !235)
!5119 = !DILocalVariable(name: "rc", scope: !5120, file: !2611, line: 1327, type: !109)
!5120 = distinct !DILexicalBlock(scope: !5110, file: !2611, line: 1326, column: 45)
!5121 = !DILocation(line: 0, scope: !5110)
!5122 = !DILocation(line: 1326, column: 2, scope: !5110)
!5123 = !DILocation(line: 1324, column: 9, scope: !5110)
!5124 = !DILocation(line: 1326, column: 13, scope: !5110)
!5125 = !DILocation(line: 1326, column: 19, scope: !5110)
!5126 = !DILocation(line: 1327, column: 21, scope: !5120)
!5127 = !DILocation(line: 1326, column: 36, scope: !5110)
!5128 = !DILocation(line: 1326, column: 39, scope: !5110)
!5129 = !DILocation(line: 1327, column: 24, scope: !5120)
!5130 = !DILocation(line: 1327, column: 16, scope: !5120)
!5131 = !DILocation(line: 1327, column: 12, scope: !5120)
!5132 = !DILocation(line: 0, scope: !5120)
!5133 = !DILocation(line: 1329, column: 10, scope: !5134)
!5134 = distinct !DILexicalBlock(scope: !5120, file: !2611, line: 1329, column: 7)
!5135 = !DILocation(line: 1329, column: 7, scope: !5120)
!5136 = distinct !{!5136, !5122, !5137}
!5137 = !DILocation(line: 1333, column: 2, scope: !5110)
!5138 = !DILocation(line: 1336, column: 1, scope: !5110)
!5139 = distinct !DISubprogram(name: "encode_uint", scope: !2611, file: !2611, line: 788, type: !5140, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !5142)
!5140 = !DISubroutineType(types: !5141)
!5141 = !{!1165, !2633, !4743, !1165, !324}
!5142 = !{!5143, !5144, !5145, !5146, !5147, !5148, !5150, !5151}
!5143 = !DILocalVariable(name: "value", arg: 1, scope: !5139, file: !2611, line: 788, type: !2633)
!5144 = !DILocalVariable(name: "conv", arg: 2, scope: !5139, file: !2611, line: 789, type: !4743)
!5145 = !DILocalVariable(name: "bps", arg: 3, scope: !5139, file: !2611, line: 790, type: !1165)
!5146 = !DILocalVariable(name: "bpe", arg: 4, scope: !5139, file: !2611, line: 791, type: !324)
!5147 = !DILocalVariable(name: "upcase", scope: !5139, file: !2611, line: 793, type: !334)
!5148 = !DILocalVariable(name: "radix", scope: !5139, file: !2611, line: 794, type: !5149)
!5149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5150 = !DILocalVariable(name: "bp", scope: !5139, file: !2611, line: 795, type: !1165)
!5151 = !DILocalVariable(name: "lsv", scope: !5152, file: !2611, line: 798, type: !32)
!5152 = distinct !DILexicalBlock(scope: !5139, file: !2611, line: 797, column: 5)
!5153 = !DILocation(line: 0, scope: !5139)
!5154 = !DILocation(line: 793, column: 35, scope: !5139)
!5155 = !DILocation(line: 793, column: 24, scope: !5139)
!5156 = !DILocation(line: 793, column: 16, scope: !5139)
!5157 = !DILocation(line: 794, column: 29, scope: !5139)
!5158 = !DILocation(line: 795, column: 24, scope: !5139)
!5159 = !DILocation(line: 795, column: 17, scope: !5139)
!5160 = !DILocation(line: 797, column: 2, scope: !5139)
!5161 = !DILocation(line: 802, column: 9, scope: !5152)
!5162 = !DILocation(line: 798, column: 22, scope: !5152)
!5163 = !DILocation(line: 0, scope: !5152)
!5164 = !DILocation(line: 800, column: 16, scope: !5152)
!5165 = !DILocation(line: 800, column: 11, scope: !5152)
!5166 = !DILocation(line: 800, column: 4, scope: !5152)
!5167 = !DILocation(line: 800, column: 9, scope: !5152)
!5168 = !DILocation(line: 803, column: 18, scope: !5139)
!5169 = !DILocation(line: 803, column: 24, scope: !5139)
!5170 = !DILocation(line: 803, column: 2, scope: !5152)
!5171 = distinct !{!5171, !5160, !5172}
!5172 = !DILocation(line: 803, column: 37, scope: !5139)
!5173 = !DILocation(line: 808, column: 12, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5139, file: !2611, line: 808, column: 6)
!5175 = !DILocation(line: 808, column: 6, scope: !5139)
!5176 = !DILocation(line: 809, column: 7, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5174, file: !2611, line: 808, column: 23)
!5178 = !DILocation(line: 813, column: 3, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5180, file: !2611, line: 811, column: 27)
!5180 = distinct !DILexicalBlock(scope: !5181, file: !2611, line: 811, column: 14)
!5181 = distinct !DILexicalBlock(scope: !5177, file: !2611, line: 809, column: 7)
!5182 = !DILocation(line: 0, scope: !5181)
!5183 = !DILocation(line: 818, column: 2, scope: !5139)
!5184 = distinct !DISubprogram(name: "store_count", scope: !2611, file: !2611, line: 1280, type: !5185, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !5189)
!5185 = !DISubroutineType(types: !5186)
!5186 = !{null, !5187, !108, !109}
!5187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5188, size: 32)
!5188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4710)
!5189 = !{!5190, !5191, !5192}
!5190 = !DILocalVariable(name: "conv", arg: 1, scope: !5184, file: !2611, line: 1280, type: !5187)
!5191 = !DILocalVariable(name: "dp", arg: 2, scope: !5184, file: !2611, line: 1281, type: !108)
!5192 = !DILocalVariable(name: "count", arg: 3, scope: !5184, file: !2611, line: 1282, type: !109)
!5193 = !DILocation(line: 0, scope: !5184)
!5194 = !DILocation(line: 1284, column: 38, scope: !5184)
!5195 = !DILocation(line: 1284, column: 2, scope: !5184)
!5196 = !DILocation(line: 1286, column: 4, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5184, file: !2611, line: 1284, column: 50)
!5198 = !DILocation(line: 1286, column: 14, scope: !5197)
!5199 = !DILocation(line: 1287, column: 3, scope: !5197)
!5200 = !DILocation(line: 1289, column: 24, scope: !5197)
!5201 = !DILocation(line: 1289, column: 22, scope: !5197)
!5202 = !DILocation(line: 1290, column: 3, scope: !5197)
!5203 = !DILocation(line: 1292, column: 18, scope: !5197)
!5204 = !DILocation(line: 1292, column: 4, scope: !5197)
!5205 = !DILocation(line: 1292, column: 16, scope: !5197)
!5206 = !DILocation(line: 1293, column: 3, scope: !5197)
!5207 = !DILocation(line: 1295, column: 4, scope: !5197)
!5208 = !DILocation(line: 1295, column: 15, scope: !5197)
!5209 = !DILocation(line: 1296, column: 3, scope: !5197)
!5210 = !DILocation(line: 1298, column: 22, scope: !5197)
!5211 = !DILocation(line: 1298, column: 4, scope: !5197)
!5212 = !DILocation(line: 1298, column: 20, scope: !5197)
!5213 = !DILocation(line: 1299, column: 3, scope: !5197)
!5214 = !DILocation(line: 1301, column: 21, scope: !5197)
!5215 = !DILocation(line: 1301, column: 4, scope: !5197)
!5216 = !DILocation(line: 1301, column: 19, scope: !5197)
!5217 = !DILocation(line: 1302, column: 3, scope: !5197)
!5218 = !DILocation(line: 1304, column: 4, scope: !5197)
!5219 = !DILocation(line: 1304, column: 17, scope: !5197)
!5220 = !DILocation(line: 1305, column: 3, scope: !5197)
!5221 = !DILocation(line: 1307, column: 4, scope: !5197)
!5222 = !DILocation(line: 1307, column: 20, scope: !5197)
!5223 = !DILocation(line: 1308, column: 3, scope: !5197)
!5224 = !DILocation(line: 1316, column: 1, scope: !5184)
!5225 = distinct !DISubprogram(name: "isupper", scope: !5226, file: !5226, line: 16, type: !288, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !5227)
!5226 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5227 = !{!5228}
!5228 = !DILocalVariable(name: "a", arg: 1, scope: !5225, file: !5226, line: 16, type: !109)
!5229 = !DILocation(line: 0, scope: !5225)
!5230 = !DILocation(line: 18, column: 29, scope: !5225)
!5231 = !DILocation(line: 18, column: 45, scope: !5225)
!5232 = !DILocation(line: 18, column: 2, scope: !5225)
!5233 = distinct !DISubprogram(name: "conversion_radix", scope: !2611, file: !2611, line: 761, type: !5234, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !5236)
!5234 = !DISubroutineType(types: !5235)
!5235 = !{!235, !226}
!5236 = !{!5237}
!5237 = !DILocalVariable(name: "specifier", arg: 1, scope: !5233, file: !2611, line: 761, type: !226)
!5238 = !DILocation(line: 0, scope: !5233)
!5239 = !DILocation(line: 763, column: 2, scope: !5233)
!5240 = !DILocation(line: 770, column: 3, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5233, file: !2611, line: 763, column: 21)
!5242 = !DILocation(line: 774, column: 3, scope: !5241)
!5243 = !DILocation(line: 0, scope: !5241)
!5244 = !DILocation(line: 776, column: 1, scope: !5233)
!5245 = distinct !DISubprogram(name: "extract_flags", scope: !2611, file: !2611, line: 339, type: !5087, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !5246)
!5246 = !{!5247, !5248, !5249}
!5247 = !DILocalVariable(name: "conv", arg: 1, scope: !5245, file: !2611, line: 339, type: !4743)
!5248 = !DILocalVariable(name: "sp", arg: 2, scope: !5245, file: !2611, line: 340, type: !324)
!5249 = !DILocalVariable(name: "loop", scope: !5245, file: !2611, line: 342, type: !334)
!5250 = !DILocation(line: 0, scope: !5245)
!5251 = !DILocation(line: 344, column: 2, scope: !5245)
!5252 = !DILocation(line: 345, column: 11, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5245, file: !2611, line: 344, column: 5)
!5254 = !DILocation(line: 345, column: 3, scope: !5253)
!5255 = !DILocation(line: 351, column: 4, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5253, file: !2611, line: 345, column: 16)
!5257 = !DILocation(line: 354, column: 4, scope: !5256)
!5258 = !DILocation(line: 357, column: 4, scope: !5256)
!5259 = !DILocation(line: 360, column: 4, scope: !5256)
!5260 = !DILocation(line: 0, scope: !5256)
!5261 = !DILocation(line: 370, column: 12, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5245, file: !2611, line: 370, column: 6)
!5263 = !DILocation(line: 370, column: 22, scope: !5262)
!5264 = !DILocation(line: 371, column: 19, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5262, file: !2611, line: 370, column: 42)
!5266 = !DILocation(line: 372, column: 2, scope: !5265)
!5267 = !DILocation(line: 376, column: 2, scope: !5245)
!5268 = distinct !DISubprogram(name: "extract_width", scope: !2611, file: !2611, line: 388, type: !5087, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !5269)
!5269 = !{!5270, !5271, !5272, !5273}
!5270 = !DILocalVariable(name: "conv", arg: 1, scope: !5268, file: !2611, line: 388, type: !4743)
!5271 = !DILocalVariable(name: "sp", arg: 2, scope: !5268, file: !2611, line: 389, type: !324)
!5272 = !DILocalVariable(name: "wp", scope: !5268, file: !2611, line: 398, type: !324)
!5273 = !DILocalVariable(name: "width", scope: !5268, file: !2611, line: 399, type: !235)
!5274 = !DILocation(line: 0, scope: !5268)
!5275 = !DILocation(line: 391, column: 8, scope: !5268)
!5276 = !DILocation(line: 391, column: 22, scope: !5268)
!5277 = !DILocation(line: 393, column: 6, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5268, file: !2611, line: 393, column: 6)
!5279 = !DILocation(line: 393, column: 10, scope: !5278)
!5280 = !DILocation(line: 393, column: 6, scope: !5268)
!5281 = !DILocation(line: 394, column: 20, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5278, file: !2611, line: 393, column: 18)
!5283 = !DILocation(line: 395, column: 10, scope: !5282)
!5284 = !DILocation(line: 395, column: 3, scope: !5282)
!5285 = !DILocation(line: 399, column: 17, scope: !5268)
!5286 = !DILocation(line: 401, column: 6, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5268, file: !2611, line: 401, column: 6)
!5288 = !DILocation(line: 401, column: 9, scope: !5287)
!5289 = !DILocation(line: 401, column: 6, scope: !5268)
!5290 = !DILocation(line: 402, column: 23, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5287, file: !2611, line: 401, column: 16)
!5292 = !DILocation(line: 403, column: 9, scope: !5291)
!5293 = !DILocation(line: 403, column: 21, scope: !5291)
!5294 = !DILocation(line: 405, column: 11, scope: !5291)
!5295 = !DILocation(line: 404, column: 21, scope: !5291)
!5296 = !DILocation(line: 406, column: 2, scope: !5291)
!5297 = !DILocation(line: 409, column: 1, scope: !5268)
!5298 = distinct !DISubprogram(name: "extract_prec", scope: !2611, file: !2611, line: 420, type: !5087, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !5299)
!5299 = !{!5300, !5301, !5302}
!5300 = !DILocalVariable(name: "conv", arg: 1, scope: !5298, file: !2611, line: 420, type: !4743)
!5301 = !DILocalVariable(name: "sp", arg: 2, scope: !5298, file: !2611, line: 421, type: !324)
!5302 = !DILocalVariable(name: "prec", scope: !5298, file: !2611, line: 435, type: !235)
!5303 = !DILocation(line: 0, scope: !5298)
!5304 = !DILocation(line: 423, column: 24, scope: !5298)
!5305 = !DILocation(line: 423, column: 28, scope: !5298)
!5306 = !DILocation(line: 423, column: 8, scope: !5298)
!5307 = !DILocation(line: 423, column: 21, scope: !5298)
!5308 = !DILocation(line: 425, column: 6, scope: !5298)
!5309 = !DILocation(line: 428, column: 2, scope: !5298)
!5310 = !DILocation(line: 430, column: 6, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5298, file: !2611, line: 430, column: 6)
!5312 = !DILocation(line: 430, column: 10, scope: !5311)
!5313 = !DILocation(line: 430, column: 6, scope: !5298)
!5314 = !DILocation(line: 431, column: 19, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5311, file: !2611, line: 430, column: 18)
!5316 = !DILocation(line: 432, column: 10, scope: !5315)
!5317 = !DILocation(line: 432, column: 3, scope: !5315)
!5318 = !DILocation(line: 435, column: 16, scope: !5298)
!5319 = !DILocation(line: 437, column: 8, scope: !5298)
!5320 = !DILocation(line: 437, column: 19, scope: !5298)
!5321 = !DILocation(line: 439, column: 10, scope: !5298)
!5322 = !DILocation(line: 438, column: 20, scope: !5298)
!5323 = !DILocation(line: 441, column: 9, scope: !5298)
!5324 = !DILocation(line: 442, column: 1, scope: !5298)
!5325 = distinct !DISubprogram(name: "extract_length", scope: !2611, file: !2611, line: 453, type: !5087, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !5326)
!5326 = !{!5327, !5328}
!5327 = !DILocalVariable(name: "conv", arg: 1, scope: !5325, file: !2611, line: 453, type: !4743)
!5328 = !DILocalVariable(name: "sp", arg: 2, scope: !5325, file: !2611, line: 454, type: !324)
!5329 = !DILocation(line: 0, scope: !5325)
!5330 = !DILocation(line: 456, column: 10, scope: !5325)
!5331 = !DILocation(line: 456, column: 2, scope: !5325)
!5332 = !DILocation(line: 458, column: 8, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5334, file: !2611, line: 458, column: 7)
!5334 = distinct !DILexicalBlock(scope: !5325, file: !2611, line: 456, column: 15)
!5335 = !DILocation(line: 458, column: 7, scope: !5333)
!5336 = !DILocation(line: 458, column: 13, scope: !5333)
!5337 = !DILocation(line: 0, scope: !5333)
!5338 = !DILocation(line: 458, column: 7, scope: !5334)
!5339 = !DILocation(line: 459, column: 21, scope: !5340)
!5340 = distinct !DILexicalBlock(scope: !5333, file: !2611, line: 458, column: 21)
!5341 = !DILocation(line: 460, column: 4, scope: !5340)
!5342 = !DILocation(line: 461, column: 3, scope: !5340)
!5343 = !DILocation(line: 462, column: 21, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5333, file: !2611, line: 461, column: 10)
!5345 = !DILocation(line: 466, column: 8, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5334, file: !2611, line: 466, column: 7)
!5347 = !DILocation(line: 466, column: 7, scope: !5346)
!5348 = !DILocation(line: 466, column: 13, scope: !5346)
!5349 = !DILocation(line: 0, scope: !5346)
!5350 = !DILocation(line: 466, column: 7, scope: !5334)
!5351 = !DILocation(line: 467, column: 21, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5346, file: !2611, line: 466, column: 21)
!5353 = !DILocation(line: 468, column: 4, scope: !5352)
!5354 = !DILocation(line: 469, column: 3, scope: !5352)
!5355 = !DILocation(line: 470, column: 21, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5346, file: !2611, line: 469, column: 10)
!5357 = !DILocation(line: 474, column: 9, scope: !5334)
!5358 = !DILocation(line: 474, column: 20, scope: !5334)
!5359 = !DILocation(line: 475, column: 3, scope: !5334)
!5360 = !DILocation(line: 476, column: 3, scope: !5334)
!5361 = !DILocation(line: 478, column: 9, scope: !5334)
!5362 = !DILocation(line: 478, column: 20, scope: !5334)
!5363 = !DILocation(line: 479, column: 3, scope: !5334)
!5364 = !DILocation(line: 480, column: 3, scope: !5334)
!5365 = !DILocation(line: 482, column: 9, scope: !5334)
!5366 = !DILocation(line: 482, column: 20, scope: !5334)
!5367 = !DILocation(line: 483, column: 3, scope: !5334)
!5368 = !DILocation(line: 484, column: 3, scope: !5334)
!5369 = !DILocation(line: 486, column: 9, scope: !5334)
!5370 = !DILocation(line: 486, column: 20, scope: !5334)
!5371 = !DILocation(line: 487, column: 3, scope: !5334)
!5372 = !DILocation(line: 492, column: 21, scope: !5334)
!5373 = !DILocation(line: 493, column: 3, scope: !5334)
!5374 = !DILocation(line: 495, column: 9, scope: !5334)
!5375 = !DILocation(line: 495, column: 20, scope: !5334)
!5376 = !DILocation(line: 496, column: 3, scope: !5334)
!5377 = !DILocation(line: 498, column: 2, scope: !5325)
!5378 = distinct !DISubprogram(name: "extract_specifier", scope: !2611, file: !2611, line: 513, type: !5087, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !5379)
!5379 = !{!5380, !5381, !5382, !5383}
!5380 = !DILocalVariable(name: "conv", arg: 1, scope: !5378, file: !2611, line: 513, type: !4743)
!5381 = !DILocalVariable(name: "sp", arg: 2, scope: !5378, file: !2611, line: 514, type: !324)
!5382 = !DILocalVariable(name: "unsupported", scope: !5378, file: !2611, line: 516, type: !334)
!5383 = !DILabel(scope: !5384, name: "int_conv", file: !2611, line: 526)
!5384 = distinct !DILexicalBlock(scope: !5378, file: !2611, line: 520, column: 27)
!5385 = !DILocation(line: 0, scope: !5378)
!5386 = !DILocation(line: 518, column: 20, scope: !5378)
!5387 = !DILocation(line: 518, column: 8, scope: !5378)
!5388 = !DILocation(line: 518, column: 18, scope: !5378)
!5389 = !DILocation(line: 520, column: 2, scope: !5378)
!5390 = !DILocation(line: 525, column: 3, scope: !5384)
!5391 = !DILocation(line: 0, scope: !5384)
!5392 = !DILocation(line: 526, column: 1, scope: !5384)
!5393 = !DILocation(line: 528, column: 24, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5384, file: !2611, line: 528, column: 7)
!5395 = !DILocation(line: 528, column: 7, scope: !5384)
!5396 = !DILocation(line: 535, column: 23, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5384, file: !2611, line: 535, column: 7)
!5398 = !DILocation(line: 535, column: 7, scope: !5384)
!5399 = !DILocation(line: 536, column: 36, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5397, file: !2611, line: 535, column: 31)
!5401 = !DILocation(line: 537, column: 3, scope: !5400)
!5402 = !DILocation(line: 570, column: 9, scope: !5384)
!5403 = !DILocation(line: 570, column: 23, scope: !5384)
!5404 = !DILocation(line: 575, column: 4, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5406, file: !2611, line: 573, column: 48)
!5406 = distinct !DILexicalBlock(scope: !5384, file: !2611, line: 573, column: 7)
!5407 = !DILocation(line: 603, column: 9, scope: !5384)
!5408 = !DILocation(line: 603, column: 23, scope: !5384)
!5409 = !DILocation(line: 605, column: 24, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5384, file: !2611, line: 605, column: 7)
!5411 = !DILocation(line: 605, column: 7, scope: !5384)
!5412 = !DILocation(line: 612, column: 9, scope: !5384)
!5413 = !DILocation(line: 612, column: 23, scope: !5384)
!5414 = !DILocation(line: 619, column: 24, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5384, file: !2611, line: 619, column: 7)
!5416 = !DILocation(line: 619, column: 7, scope: !5384)
!5417 = !DILocation(line: 625, column: 9, scope: !5384)
!5418 = !DILocation(line: 625, column: 17, scope: !5384)
!5419 = !DILocation(line: 626, column: 3, scope: !5384)
!5420 = !DILocation(line: 629, column: 20, scope: !5378)
!5421 = !DILocation(line: 629, column: 8, scope: !5378)
!5422 = !DILocation(line: 518, column: 23, scope: !5378)
!5423 = !DILocation(line: 631, column: 2, scope: !5378)
!5424 = distinct !DISubprogram(name: "extract_decimal", scope: !2611, file: !2611, line: 318, type: !5425, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !5428)
!5425 = !DISubroutineType(types: !5426)
!5426 = !{!235, !5427}
!5427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 32)
!5428 = !{!5429, !5430, !5431}
!5429 = !DILocalVariable(name: "str", arg: 1, scope: !5424, file: !2611, line: 318, type: !5427)
!5430 = !DILocalVariable(name: "sp", scope: !5424, file: !2611, line: 320, type: !324)
!5431 = !DILocalVariable(name: "val", scope: !5424, file: !2611, line: 321, type: !235)
!5432 = !DILocation(line: 0, scope: !5424)
!5433 = !DILocation(line: 320, column: 19, scope: !5424)
!5434 = !DILocation(line: 323, column: 37, scope: !5424)
!5435 = !DILocation(line: 323, column: 17, scope: !5424)
!5436 = !DILocation(line: 323, column: 9, scope: !5424)
!5437 = !DILocation(line: 323, column: 2, scope: !5424)
!5438 = !DILocation(line: 324, column: 13, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5424, file: !2611, line: 323, column: 43)
!5440 = !DILocation(line: 324, column: 24, scope: !5439)
!5441 = !DILocation(line: 324, column: 19, scope: !5439)
!5442 = !DILocation(line: 324, column: 27, scope: !5439)
!5443 = distinct !{!5443, !5437, !5444}
!5444 = !DILocation(line: 325, column: 2, scope: !5424)
!5445 = !DILocation(line: 326, column: 7, scope: !5424)
!5446 = !DILocation(line: 327, column: 2, scope: !5424)
!5447 = distinct !DISubprogram(name: "isdigit", scope: !5226, file: !5226, line: 43, type: !288, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !5448)
!5448 = !{!5449}
!5449 = !DILocalVariable(name: "a", arg: 1, scope: !5447, file: !5226, line: 43, type: !109)
!5450 = !DILocation(line: 0, scope: !5447)
!5451 = !DILocation(line: 45, column: 29, scope: !5447)
!5452 = !DILocation(line: 45, column: 45, scope: !5447)
!5453 = !DILocation(line: 45, column: 2, scope: !5447)
!5454 = distinct !DISubprogram(name: "assert_post_action", scope: !5455, file: !5455, line: 26, type: !5456, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !5458)
!5455 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5456 = !DISubroutineType(types: !5457)
!5457 = !{null, !324, !32}
!5458 = !{!5459, !5460}
!5459 = !DILocalVariable(name: "file", arg: 1, scope: !5454, file: !5455, line: 26, type: !324)
!5460 = !DILocalVariable(name: "line", arg: 2, scope: !5454, file: !5455, line: 26, type: !32)
!5461 = !DILocation(line: 0, scope: !5454)
!5462 = !DILocation(line: 43, column: 2, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5454, file: !5455, line: 43, column: 2)
!5464 = !{i64 2155070188, i64 2155070204, i64 2155070230, i64 2155070258, i64 2155070278}
!5465 = !DILocation(line: 44, column: 1, scope: !5454)
!5466 = distinct !DISubprogram(name: "assert_print", scope: !5455, file: !5455, line: 46, type: !3726, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !5467)
!5467 = !{!5468, !5469}
!5468 = !DILocalVariable(name: "fmt", arg: 1, scope: !5466, file: !5455, line: 46, type: !324)
!5469 = !DILocalVariable(name: "ap", scope: !5466, file: !5455, line: 48, type: !5470)
!5470 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3658, line: 99, baseType: !5471)
!5471 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3658, line: 40, baseType: !5472)
!5472 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5455, baseType: !5473)
!5473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5474)
!5474 = !{!5475}
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5473, file: !5455, line: 48, baseType: !108, size: 32)
!5476 = !DILocation(line: 0, scope: !5466)
!5477 = !DILocation(line: 48, column: 2, scope: !5466)
!5478 = !DILocation(line: 48, column: 10, scope: !5466)
!5479 = !DILocation(line: 50, column: 2, scope: !5466)
!5480 = !DILocation(line: 52, column: 2, scope: !5466)
!5481 = !DILocation(line: 54, column: 2, scope: !5466)
!5482 = !DILocation(line: 55, column: 1, scope: !5466)
!5483 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5484, file: !5484, line: 9, type: !3169, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !2100)
!5484 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!5485 = !DILocation(line: 11, column: 1, scope: !5483)
!5486 = !{i64 2147562090, i64 2147562133, i64 2147562173}
!5487 = !DILocation(line: 12, column: 1, scope: !5483)
!5488 = !{i64 2147566317, i64 2147566360, i64 2147566400}
!5489 = !DILocation(line: 13, column: 1, scope: !5483)
!5490 = !{i64 2147566526, i64 2147566569, i64 2147566609}
!5491 = !DILocation(line: 14, column: 1, scope: !5483)
!5492 = !{i64 2147566695, i64 2147566738, i64 2147566778}
!5493 = !DILocation(line: 15, column: 1, scope: !5483)
!5494 = !{i64 2147566858, i64 2147566901, i64 2147566941}
!5495 = !DILocation(line: 16, column: 1, scope: !5483)
!5496 = !{i64 2147567042, i64 2147567085, i64 2147567125}
!5497 = !DILocation(line: 17, column: 1, scope: !5483)
!5498 = !{i64 2147567221, i64 2147567264, i64 2147567304}
!5499 = !DILocation(line: 18, column: 1, scope: !5483)
!5500 = !{i64 2147567463, i64 2147567506, i64 2147567546}
!5501 = !DILocation(line: 19, column: 1, scope: !5483)
!5502 = !{i64 2147567698, i64 2147567741, i64 2147567781}
!5503 = !DILocation(line: 20, column: 1, scope: !5483)
!5504 = !{i64 2147567884, i64 2147567927, i64 2147567967}
!5505 = !DILocation(line: 21, column: 1, scope: !5483)
!5506 = !{i64 2147568100, i64 2147568143, i64 2147568183}
!5507 = !DILocation(line: 22, column: 1, scope: !5483)
!5508 = !{i64 2147568303, i64 2147568346, i64 2147568386}
!5509 = !DILocation(line: 23, column: 1, scope: !5483)
!5510 = !{i64 2147568506, i64 2147568549, i64 2147568589}
!5511 = !DILocation(line: 24, column: 1, scope: !5483)
!5512 = !{i64 2147568681, i64 2147568724, i64 2147568764}
!5513 = !DILocation(line: 25, column: 1, scope: !5483)
!5514 = !{i64 2147568889, i64 2147568932, i64 2147568972}
!5515 = !DILocation(line: 26, column: 1, scope: !5483)
!5516 = !{i64 2147569093, i64 2147569136, i64 2147569176}
!5517 = !DILocation(line: 27, column: 1, scope: !5483)
!5518 = !{i64 2147569286, i64 2147569329, i64 2147569369}
!5519 = !DILocation(line: 28, column: 1, scope: !5483)
!5520 = !{i64 2147569488, i64 2147569531, i64 2147569571}
!5521 = !DILocation(line: 29, column: 1, scope: !5483)
!5522 = !{i64 2147569715, i64 2147569758, i64 2147569798}
!5523 = !DILocation(line: 30, column: 1, scope: !5483)
!5524 = !{i64 2147569917, i64 2147569960, i64 2147570000}
!5525 = !DILocation(line: 31, column: 1, scope: !5483)
!5526 = !{i64 2147570132, i64 2147570175, i64 2147570215}
!5527 = !DILocation(line: 32, column: 1, scope: !5483)
!5528 = !{i64 2147570304, i64 2147570347, i64 2147570387}
!5529 = !DILocation(line: 33, column: 1, scope: !5483)
!5530 = !{i64 2147570506, i64 2147570549, i64 2147570589}
!5531 = !DILocation(line: 34, column: 1, scope: !5483)
!5532 = !{i64 2147570732, i64 2147570775, i64 2147570815}
!5533 = !DILocation(line: 35, column: 1, scope: !5483)
!5534 = !{i64 2147570931, i64 2147570974, i64 2147571014}
!5535 = !DILocation(line: 36, column: 1, scope: !5483)
!5536 = !{i64 2147571106, i64 2147571149, i64 2147571189}
!5537 = !DILocation(line: 37, column: 1, scope: !5483)
!5538 = !{i64 2147571359, i64 2147571402, i64 2147571442}
!5539 = !DILocation(line: 38, column: 1, scope: !5483)
!5540 = !{i64 2147571600, i64 2147571643, i64 2147571683}
!5541 = !DILocation(line: 39, column: 1, scope: !5483)
!5542 = !{i64 2147571835, i64 2147571878, i64 2147571918}
!5543 = !DILocation(line: 40, column: 1, scope: !5483)
!5544 = !{i64 2147572067, i64 2147572110, i64 2147572150}
!5545 = !DILocation(line: 41, column: 1, scope: !5483)
!5546 = !{i64 2147572293, i64 2147572336, i64 2147572376}
!5547 = !DILocation(line: 42, column: 1, scope: !5483)
!5548 = !{i64 2147572519, i64 2147572562, i64 2147572602}
!5549 = !DILocation(line: 43, column: 1, scope: !5483)
!5550 = !{i64 2147572745, i64 2147572788, i64 2147572828}
!5551 = !DILocation(line: 44, column: 1, scope: !5483)
!5552 = !{i64 2147572980, i64 2147573023, i64 2147573063}
!5553 = !DILocation(line: 45, column: 1, scope: !5483)
!5554 = !{i64 2147573224, i64 2147573267, i64 2147573307}
!5555 = !DILocation(line: 46, column: 1, scope: !5483)
!5556 = !{i64 2147573471, i64 2147573514, i64 2147573554}
!5557 = !DILocation(line: 47, column: 1, scope: !5483)
!5558 = !{i64 2147573703, i64 2147573746, i64 2147573786}
!5559 = !DILocation(line: 48, column: 1, scope: !5483)
!5560 = !{i64 2147573947, i64 2147573990, i64 2147574030}
!5561 = !DILocation(line: 49, column: 1, scope: !5483)
!5562 = !{i64 2147574185, i64 2147574228, i64 2147574268}
!5563 = !DILocation(line: 50, column: 1, scope: !5483)
!5564 = !{i64 2147574459, i64 2147574502, i64 2147574542}
!5565 = !DILocation(line: 51, column: 1, scope: !5483)
!5566 = !{i64 2147574697, i64 2147574740, i64 2147574780}
!5567 = !DILocation(line: 52, column: 1, scope: !5483)
!5568 = !{i64 2147574950, i64 2147574993, i64 2147575033}
!5569 = !DILocation(line: 53, column: 1, scope: !5483)
!5570 = !{i64 2147579255, i64 2147579298, i64 2147579338}
!5571 = !DILocation(line: 54, column: 1, scope: !5483)
!5572 = !{i64 2147579490, i64 2147579533, i64 2147579573}
!5573 = !DILocation(line: 55, column: 1, scope: !5483)
!5574 = !{i64 2147579740, i64 2147579783, i64 2147579823}
!5575 = !DILocation(line: 56, column: 1, scope: !5483)
!5576 = !{i64 2147579987, i64 2147580030, i64 2147580070}
!5577 = !DILocation(line: 57, column: 1, scope: !5483)
!5578 = !{i64 2147580222, i64 2147580265, i64 2147580305}
!5579 = !DILocation(line: 58, column: 1, scope: !5483)
!5580 = !{i64 2147580457, i64 2147580500, i64 2147580540}
!5581 = !DILocation(line: 59, column: 1, scope: !5483)
!5582 = !{i64 2147580692, i64 2147580735, i64 2147580775}
!5583 = !DILocation(line: 60, column: 1, scope: !5483)
!5584 = !{i64 2147580927, i64 2147580970, i64 2147581010}
!5585 = !DILocation(line: 61, column: 1, scope: !5483)
!5586 = !{i64 2147581171, i64 2147581214, i64 2147581254}
!5587 = !DILocation(line: 62, column: 1, scope: !5483)
!5588 = !{i64 2147581409, i64 2147581452, i64 2147581492}
!5589 = !DILocation(line: 63, column: 1, scope: !5483)
!5590 = !{i64 2147581650, i64 2147581693, i64 2147581733}
!5591 = !DILocation(line: 64, column: 1, scope: !5483)
!5592 = !{i64 2147581930, i64 2147581973, i64 2147582013}
!5593 = !DILocation(line: 65, column: 1, scope: !5483)
!5594 = !{i64 2147582189, i64 2147582232, i64 2147582272}
!5595 = !DILocation(line: 66, column: 1, scope: !5483)
!5596 = !{i64 2147582427, i64 2147582470, i64 2147582510}
!5597 = !DILocation(line: 67, column: 1, scope: !5483)
!5598 = !{i64 2147582656, i64 2147582699, i64 2147582739}
!5599 = !DILocation(line: 68, column: 1, scope: !5483)
!5600 = !{i64 2147582864, i64 2147582907, i64 2147582947}
!5601 = !DILocation(line: 69, column: 1, scope: !5483)
!5602 = !{i64 2147583075, i64 2147583118, i64 2147583158}
!5603 = !DILocation(line: 70, column: 1, scope: !5483)
!5604 = !{i64 2147583310, i64 2147583353, i64 2147583393}
!5605 = !DILocation(line: 71, column: 1, scope: !5483)
!5606 = !{i64 2147583539, i64 2147583582, i64 2147583622}
!5607 = !DILocation(line: 72, column: 1, scope: !5483)
!5608 = !{i64 2147583777, i64 2147583820, i64 2147583860}
!5609 = !DILocation(line: 73, column: 1, scope: !5483)
!5610 = !{i64 2147584009, i64 2147584052, i64 2147584092}
!5611 = !DILocation(line: 74, column: 1, scope: !5483)
!5612 = !{i64 2147584235, i64 2147584278, i64 2147584318}
!5613 = !DILocation(line: 75, column: 1, scope: !5483)
!5614 = !{i64 2147584452, i64 2147584495, i64 2147584535}
!5615 = !DILocation(line: 76, column: 1, scope: !5483)
!5616 = !{i64 2147584684, i64 2147584727, i64 2147584767}
!5617 = !DILocation(line: 77, column: 1, scope: !5483)
!5618 = !{i64 2147584910, i64 2147584953, i64 2147584993}
!5619 = !DILocation(line: 78, column: 1, scope: !5483)
!5620 = !{i64 2147585124, i64 2147585167, i64 2147585207}
!5621 = !DILocation(line: 79, column: 1, scope: !5483)
!5622 = !{i64 2147585344, i64 2147585387, i64 2147585427}
!5623 = !DILocation(line: 80, column: 1, scope: !5483)
!5624 = !{i64 2147585576, i64 2147585619, i64 2147585659}
!5625 = !DILocation(line: 81, column: 1, scope: !5483)
!5626 = !{i64 2147585784, i64 2147585827, i64 2147585867}
!5627 = !DILocation(line: 82, column: 1, scope: !5483)
!5628 = !{i64 2147585989, i64 2147586032, i64 2147586072}
!5629 = !DILocation(line: 83, column: 1, scope: !5483)
!5630 = !{i64 2147586206, i64 2147586249, i64 2147586289}
!5631 = !DILocation(line: 84, column: 1, scope: !5483)
!5632 = !{i64 2147586420, i64 2147586463, i64 2147586503}
!5633 = !DILocation(line: 85, column: 1, scope: !5483)
!5634 = !{i64 2147586646, i64 2147586689, i64 2147586729}
!5635 = !DILocation(line: 86, column: 1, scope: !5483)
!5636 = !{i64 2147586866, i64 2147586909, i64 2147586949}
!5637 = !DILocation(line: 87, column: 1, scope: !5483)
!5638 = !{i64 2147587071, i64 2147587114, i64 2147587154}
!5639 = !DILocation(line: 88, column: 1, scope: !5483)
!5640 = !{i64 2147591364, i64 2147591407, i64 2147591447}
!5641 = !DILocation(line: 89, column: 1, scope: !5483)
!5642 = !{i64 2147591599, i64 2147591642, i64 2147591682}
!5643 = !DILocation(line: 90, column: 1, scope: !5483)
!5644 = !{i64 2147591849, i64 2147591892, i64 2147591932}
!5645 = !DILocation(line: 91, column: 1, scope: !5483)
!5646 = !{i64 2147592099, i64 2147592142, i64 2147592182}
!5647 = !DILocation(line: 92, column: 1, scope: !5483)
!5648 = !{i64 2147592337, i64 2147592380, i64 2147592420}
!5649 = !DILocation(line: 93, column: 1, scope: !5483)
!5650 = !{i64 2147592548, i64 2147592591, i64 2147592631}
!5651 = !DILocation(line: 94, column: 1, scope: !5483)
!5652 = !{i64 2147592765, i64 2147592808, i64 2147592848}
!5653 = !DILocation(line: 95, column: 1, scope: !5483)
!5654 = !{i64 2147592961, i64 2147593004, i64 2147593044}
!5655 = !DILocation(line: 96, column: 1, scope: !5483)
!5656 = !{i64 2147593163, i64 2147593206, i64 2147593246}
!5657 = !DILocation(line: 97, column: 1, scope: !5483)
!5658 = !{i64 2147593356, i64 2147593399, i64 2147593439}
!5659 = !DILocation(line: 98, column: 1, scope: !5483)
!5660 = !{i64 2147593564, i64 2147593607, i64 2147593647}
!5661 = !DILocation(line: 99, column: 1, scope: !5483)
!5662 = !{i64 2147593760, i64 2147593803, i64 2147593843}
!5663 = !DILocation(line: 100, column: 1, scope: !5483)
!5664 = !{i64 2147593992, i64 2147594035, i64 2147594075}
!5665 = !DILocation(line: 101, column: 1, scope: !5483)
!5666 = !{i64 2147594203, i64 2147594246, i64 2147594286}
!5667 = !DILocation(line: 102, column: 1, scope: !5483)
!5668 = !{i64 2147594402, i64 2147594445, i64 2147594485}
!5669 = !DILocation(line: 103, column: 1, scope: !5483)
!5670 = !{i64 2147594577, i64 2147594620, i64 2147594660}
!5671 = !DILocation(line: 104, column: 1, scope: !5483)
!5672 = !{i64 2147594761, i64 2147594804, i64 2147594844}
!5673 = !DILocation(line: 105, column: 1, scope: !5483)
!5674 = !{i64 2147594963, i64 2147595006, i64 2147595046}
!5675 = !DILocation(line: 106, column: 1, scope: !5483)
!5676 = !{i64 2147595162, i64 2147595205, i64 2147595245}
!5677 = !DILocation(line: 107, column: 1, scope: !5483)
!5678 = !{i64 2147595328, i64 2147595371, i64 2147595411}
!5679 = !DILocation(line: 108, column: 1, scope: !5483)
!5680 = !{i64 2147595512, i64 2147595555, i64 2147595595}
!5681 = !DILocation(line: 109, column: 1, scope: !5483)
!5682 = !{i64 2147595702, i64 2147595745, i64 2147595785}
!5683 = !DILocation(line: 110, column: 1, scope: !5483)
!5684 = !{i64 2147595886, i64 2147595929, i64 2147595969}
!5685 = !DILocation(line: 111, column: 1, scope: !5483)
!5686 = !{i64 2147596100, i64 2147596143, i64 2147596183}
!5687 = !DILocation(line: 112, column: 1, scope: !5483)
!5688 = !{i64 2147596311, i64 2147596354, i64 2147596394}
!5689 = !DILocation(line: 113, column: 1, scope: !5483)
!5690 = !{i64 2147596534, i64 2147596577, i64 2147596617}
!5691 = !DILocation(line: 114, column: 1, scope: !5483)
!5692 = !{i64 2147596718, i64 2147596761, i64 2147596801}
!5693 = !DILocation(line: 115, column: 1, scope: !5483)
!5694 = !{i64 2147596932, i64 2147596975, i64 2147597015}
!5695 = !DILocation(line: 116, column: 1, scope: !5483)
!5696 = !{i64 2147597098, i64 2147597141, i64 2147597181}
!5697 = !DILocation(line: 117, column: 1, scope: !5483)
!5698 = !{i64 2147597279, i64 2147597322, i64 2147597362}
!5699 = !DILocation(line: 118, column: 1, scope: !5483)
!5700 = !{i64 2147597472, i64 2147597515, i64 2147597555}
!5701 = !DILocation(line: 119, column: 1, scope: !5483)
!5702 = !{i64 2147597698, i64 2147597741, i64 2147597781}
!5703 = !DILocation(line: 120, column: 1, scope: !5483)
!5704 = !{i64 2147597912, i64 2147597955, i64 2147597995}
!5705 = !DILocation(line: 121, column: 1, scope: !5483)
!5706 = !{i64 2147598138, i64 2147598181, i64 2147598221}
!5707 = !DILocation(line: 122, column: 1, scope: !5483)
!5708 = !{i64 2147598355, i64 2147598398, i64 2147598438}
!5709 = !DILocation(line: 123, column: 1, scope: !5483)
!5710 = !{i64 2147598632, i64 2147598675, i64 2147598715}
!5711 = !DILocation(line: 124, column: 1, scope: !5483)
!5712 = !{i64 2147598858, i64 2147598901, i64 2147598941}
!5713 = !DILocation(line: 125, column: 1, scope: !5483)
!5714 = !{i64 2147599066, i64 2147599109, i64 2147599149}
!5715 = !DILocation(line: 126, column: 1, scope: !5483)
!5716 = !{i64 2147599262, i64 2147599305, i64 2147599345}
!5717 = !DILocation(line: 127, column: 1, scope: !5483)
!5718 = !{i64 2147599527, i64 2147599570, i64 2147599610}
!5719 = !DILocation(line: 128, column: 1, scope: !5483)
!5720 = !{i64 2147599741, i64 2147599784, i64 2147599824}
!5721 = !DILocation(line: 129, column: 1, scope: !5483)
!5722 = !{i64 2147599916, i64 2147599959, i64 2147599999}
!5723 = !DILocation(line: 130, column: 1, scope: !5483)
!5724 = !{i64 2147600170, i64 2147600213, i64 2147600253}
!5725 = !DILocation(line: 131, column: 1, scope: !5483)
!5726 = !{i64 2147604430, i64 2147604473, i64 2147604513}
!5727 = !DILocation(line: 132, column: 1, scope: !5483)
!5728 = !{i64 2147604672, i64 2147604715, i64 2147604755}
!5729 = !DILocation(line: 133, column: 1, scope: !5483)
!5730 = !{i64 2147604835, i64 2147604878, i64 2147604918}
!5731 = !DILocation(line: 134, column: 1, scope: !5483)
!5732 = !{i64 2147605022, i64 2147605065, i64 2147605105}
!5733 = !DILocation(line: 135, column: 1, scope: !5483)
!5734 = !{i64 2147605215, i64 2147605258, i64 2147605298}
!5735 = !DILocation(line: 136, column: 1, scope: !5483)
!5736 = !{i64 2147605398, i64 2147605441, i64 2147605481}
!5737 = !DILocation(line: 137, column: 1, scope: !5483)
!5738 = !{i64 2147605612, i64 2147605655, i64 2147605695}
!5739 = !DILocation(line: 138, column: 1, scope: !5483)
!5740 = !{i64 2147605823, i64 2147605866, i64 2147605906}
!5741 = !DILocation(line: 139, column: 1, scope: !5483)
!5742 = !{i64 2147606043, i64 2147606086, i64 2147606126}
!5743 = !DILocation(line: 140, column: 1, scope: !5483)
!5744 = !{i64 2147606250, i64 2147606293, i64 2147606333}
!5745 = !DILocation(line: 141, column: 1, scope: !5483)
!5746 = !{i64 2147606523, i64 2147606566, i64 2147606606}
!5747 = !DILocation(line: 142, column: 1, scope: !5483)
!5748 = !{i64 2147606771, i64 2147606814, i64 2147606854}
!5749 = !DILocation(line: 143, column: 1, scope: !5483)
!5750 = !{i64 2147606970, i64 2147607013, i64 2147607053}
!5751 = !DILocation(line: 144, column: 1, scope: !5483)
!5752 = !{i64 2147607205, i64 2147607248, i64 2147607288}
!5753 = !DILocation(line: 145, column: 1, scope: !5483)
!5754 = !{i64 2147607455, i64 2147607498, i64 2147607538}
!5755 = !DILocation(line: 146, column: 1, scope: !5483)
!5756 = !{i64 2147607657, i64 2147607700, i64 2147607740}
!5757 = !DILocation(line: 147, column: 1, scope: !5483)
!5758 = !{i64 2147607880, i64 2147607923, i64 2147607963}
!5759 = !DILocation(line: 148, column: 1, scope: !5483)
!5760 = !{i64 2147608094, i64 2147608137, i64 2147608177}
!5761 = !DILocation(line: 149, column: 1, scope: !5483)
!5762 = !{i64 2147608338, i64 2147608381, i64 2147608421}
!5763 = !DILocation(line: 150, column: 1, scope: !5483)
!5764 = !{i64 2147608567, i64 2147608610, i64 2147608650}
!5765 = !DILocation(line: 151, column: 1, scope: !5483)
!5766 = !{i64 2147608796, i64 2147608839, i64 2147608879}
!5767 = !DILocation(line: 152, column: 1, scope: !5483)
!5768 = !{i64 2147609004, i64 2147609047, i64 2147609087}
!5769 = !DILocation(line: 153, column: 1, scope: !5483)
!5770 = !{i64 2147609242, i64 2147609285, i64 2147609325}
!5771 = !DILocation(line: 154, column: 1, scope: !5483)
!5772 = !{i64 2147609468, i64 2147609511, i64 2147609551}
!5773 = !DILocation(line: 155, column: 1, scope: !5483)
!5774 = !{i64 2147609727, i64 2147609770, i64 2147609810}
!5775 = !DILocation(line: 156, column: 1, scope: !5483)
!5776 = !{i64 2147609947, i64 2147609990, i64 2147610030}
!5777 = !DILocation(line: 157, column: 1, scope: !5483)
!5778 = !{i64 2147610179, i64 2147610222, i64 2147610262}
!5779 = !DILocation(line: 158, column: 1, scope: !5483)
!5780 = !{i64 2147610420, i64 2147610463, i64 2147610503}
!5781 = !DILocation(line: 159, column: 1, scope: !5483)
!5782 = !{i64 2147610661, i64 2147610704, i64 2147610744}
!5783 = !DILocation(line: 160, column: 1, scope: !5483)
!5784 = !{i64 2147610884, i64 2147610927, i64 2147610967}
!5785 = !DILocation(line: 161, column: 1, scope: !5483)
!5786 = !{i64 2147611101, i64 2147611144, i64 2147611184}
!5787 = !DILocation(line: 162, column: 1, scope: !5483)
!5788 = !{i64 2147611342, i64 2147611385, i64 2147611425}
!5789 = !DILocation(line: 163, column: 1, scope: !5483)
!5790 = !{i64 2147611529, i64 2147611572, i64 2147611612}
!5791 = !DILocation(line: 164, column: 1, scope: !5483)
!5792 = !{i64 2147611716, i64 2147611759, i64 2147611799}
!5793 = !DILocation(line: 165, column: 1, scope: !5483)
!5794 = !{i64 2147611879, i64 2147611922, i64 2147611962}
!5795 = !DILocation(line: 166, column: 1, scope: !5483)
!5796 = !{i64 2147612138, i64 2147612181, i64 2147612221}
!5797 = !DILocation(line: 167, column: 1, scope: !5483)
!5798 = !{i64 2147612361, i64 2147612404, i64 2147612444}
!5799 = !DILocation(line: 168, column: 1, scope: !5483)
!5800 = !{i64 2147612590, i64 2147612633, i64 2147612673}
!5801 = !DILocation(line: 169, column: 1, scope: !5483)
!5802 = !{i64 2147612786, i64 2147612829, i64 2147612869}
!5803 = !DILocation(line: 170, column: 1, scope: !5483)
!5804 = !{i64 2147617059, i64 2147617102, i64 2147617142}
!5805 = !DILocation(line: 171, column: 1, scope: !5483)
!5806 = !{i64 2147617280, i64 2147617323, i64 2147617363}
!5807 = !DILocation(line: 172, column: 1, scope: !5483)
!5808 = !{i64 2147617494, i64 2147617537, i64 2147617577}
!5809 = !DILocation(line: 173, column: 1, scope: !5483)
!5810 = !{i64 2147617684, i64 2147617727, i64 2147617767}
!5811 = !DILocation(line: 174, column: 1, scope: !5483)
!5812 = !{i64 2147617883, i64 2147617926, i64 2147617966}
!5813 = !DILocation(line: 175, column: 1, scope: !5483)
!5814 = !{i64 2147618088, i64 2147618131, i64 2147618171}
!5815 = !DILocation(line: 176, column: 1, scope: !5483)
!5816 = !{i64 2147618308, i64 2147618351, i64 2147618391}
!5817 = !DILocation(line: 177, column: 1, scope: !5483)
!5818 = !{i64 2147618509, i64 2147618552, i64 2147618592}
!5819 = !DILocation(line: 178, column: 1, scope: !5483)
!5820 = !{i64 2147618708, i64 2147618751, i64 2147618791}
!5821 = !DILocation(line: 179, column: 1, scope: !5483)
!5822 = !{i64 2147618913, i64 2147618956, i64 2147618996}
!5823 = !DILocation(line: 180, column: 1, scope: !5483)
!5824 = !{i64 2147619082, i64 2147619125, i64 2147619165}
!5825 = !DILocation(line: 181, column: 1, scope: !5483)
!5826 = !{i64 2147619278, i64 2147619321, i64 2147619361}
!5827 = !DILocation(line: 182, column: 1, scope: !5483)
!5828 = !{i64 2147619462, i64 2147619505, i64 2147619545}
!5829 = !DILocation(line: 183, column: 1, scope: !5483)
!5830 = !{i64 2147619649, i64 2147619692, i64 2147619732}
!5831 = !DILocation(line: 184, column: 1, scope: !5483)
!5832 = !{i64 2147619833, i64 2147619876, i64 2147619916}
!5833 = !DILocation(line: 185, column: 1, scope: !5483)
!5834 = !{i64 2147620029, i64 2147620072, i64 2147620112}
!5835 = !DILocation(line: 186, column: 1, scope: !5483)
!5836 = !{i64 2147620216, i64 2147620259, i64 2147620299}
!5837 = !DILocation(line: 187, column: 1, scope: !5483)
!5838 = !{i64 2147620428, i64 2147620471, i64 2147620511}
!5839 = !DILocation(line: 188, column: 1, scope: !5483)
!5840 = !{i64 2147620666, i64 2147620709, i64 2147620749}
!5841 = !DILocation(line: 189, column: 1, scope: !5483)
!5842 = !{i64 2147620896, i64 2147620939, i64 2147620979}
!5843 = !DILocation(line: 190, column: 1, scope: !5483)
!5844 = !{i64 2147621125, i64 2147621168, i64 2147621208}
!5845 = !DILocation(line: 191, column: 1, scope: !5483)
!5846 = !{i64 2147621312, i64 2147621355, i64 2147621395}
!5847 = !DILocation(line: 192, column: 1, scope: !5483)
!5848 = !{i64 2147621508, i64 2147621551, i64 2147621591}
!5849 = !DILocation(line: 193, column: 1, scope: !5483)
!5850 = !{i64 2147621716, i64 2147621759, i64 2147621799}
!5851 = !DILocation(line: 194, column: 1, scope: !5483)
!5852 = !{i64 2147621928, i64 2147621971, i64 2147622011}
!5853 = !DILocation(line: 195, column: 1, scope: !5483)
!5854 = !{i64 2147622127, i64 2147622170, i64 2147622210}
!5855 = !DILocation(line: 196, column: 1, scope: !5483)
!5856 = !{i64 2147622365, i64 2147622408, i64 2147622448}
!5857 = !DILocation(line: 197, column: 1, scope: !5483)
!5858 = !{i64 2147622561, i64 2147622604, i64 2147622644}
!5859 = !DILocation(line: 198, column: 1, scope: !5483)
!5860 = !{i64 2147622763, i64 2147622806, i64 2147622846}
!5861 = !DILocation(line: 199, column: 1, scope: !5483)
!5862 = !{i64 2147622956, i64 2147622999, i64 2147623039}
!5863 = !DILocation(line: 200, column: 1, scope: !5483)
!5864 = !{i64 2147623190, i64 2147623233, i64 2147623273}
!5865 = !DILocation(line: 201, column: 1, scope: !5483)
!5866 = !{i64 2147623353, i64 2147623396, i64 2147623436}
!5867 = !DILocation(line: 202, column: 1, scope: !5483)
!5868 = !{i64 2147623592, i64 2147623635, i64 2147623675}
!5869 = !DILocation(line: 203, column: 1, scope: !5483)
!5870 = !{i64 2147623831, i64 2147623874, i64 2147623914}
!5871 = !DILocation(line: 204, column: 1, scope: !5483)
!5872 = !{i64 2147624067, i64 2147624110, i64 2147624150}
!5873 = !DILocation(line: 205, column: 1, scope: !5483)
!5874 = !{i64 2147624297, i64 2147624340, i64 2147624380}
!5875 = !DILocation(line: 206, column: 1, scope: !5483)
!5876 = !{i64 2147624484, i64 2147624527, i64 2147624567}
!5877 = !DILocation(line: 207, column: 1, scope: !5483)
!5878 = !{i64 2147624683, i64 2147624726, i64 2147624766}
!5879 = !DILocation(line: 208, column: 1, scope: !5483)
!5880 = !{i64 2147624954, i64 2147624997, i64 2147625037}
!5881 = !DILocation(line: 209, column: 1, scope: !5483)
!5882 = !{i64 2147625129, i64 2147625172, i64 2147625212}
!5883 = !DILocation(line: 210, column: 1, scope: !5483)
!5884 = !{i64 2147625363, i64 2147625406, i64 2147625446}
!5885 = !DILocation(line: 211, column: 1, scope: !5483)
!5886 = !{i64 2147625571, i64 2147625614, i64 2147625654}
!5887 = !DILocation(line: 212, column: 1, scope: !5483)
!5888 = !{i64 2147625789, i64 2147625832, i64 2147625872}
!5889 = !DILocation(line: 213, column: 1, scope: !5483)
!5890 = !{i64 2147625979, i64 2147626022, i64 2147626062}
!5891 = !DILocation(line: 214, column: 1, scope: !5483)
!5892 = !{i64 2147630236, i64 2147630279, i64 2147630319}
!5893 = !DILocation(line: 215, column: 1, scope: !5483)
!5894 = !{i64 2147630442, i64 2147630485, i64 2147630525}
!5895 = !DILocation(line: 216, column: 1, scope: !5483)
!5896 = !{i64 2147630647, i64 2147630690, i64 2147630730}
!5897 = !DILocation(line: 217, column: 1, scope: !5483)
!5898 = !{i64 2147630861, i64 2147630904, i64 2147630944}
!5899 = !DILocation(line: 218, column: 1, scope: !5483)
!5900 = !{i64 2147631087, i64 2147631130, i64 2147631170}
!5901 = !DILocation(line: 219, column: 1, scope: !5483)
!5902 = !{i64 2147631319, i64 2147631362, i64 2147631402}
!5903 = !DILocation(line: 220, column: 1, scope: !5483)
!5904 = !{i64 2147631503, i64 2147631546, i64 2147631586}
!5905 = !DILocation(line: 221, column: 1, scope: !5483)
!5906 = !{i64 2147631712, i64 2147631755, i64 2147631795}
!5907 = !DILocation(line: 222, column: 1, scope: !5483)
!5908 = !{i64 2147631896, i64 2147631939, i64 2147631979}
!5909 = !DILocation(line: 223, column: 1, scope: !5483)
!5910 = !{i64 2147632122, i64 2147632165, i64 2147632205}
!5911 = !DILocation(line: 224, column: 1, scope: !5483)
!5912 = !{i64 2147632348, i64 2147632391, i64 2147632431}
!5913 = !DILocation(line: 225, column: 1, scope: !5483)
!5914 = !{i64 2147632574, i64 2147632617, i64 2147632657}
!5915 = !DILocation(line: 226, column: 1, scope: !5483)
!5916 = !{i64 2147632800, i64 2147632843, i64 2147632883}
!5917 = !DILocation(line: 227, column: 1, scope: !5483)
!5918 = !{i64 2147633026, i64 2147633069, i64 2147633109}
!5919 = !DILocation(line: 228, column: 1, scope: !5483)
!5920 = !{i64 2147633258, i64 2147633301, i64 2147633341}
!5921 = !DILocation(line: 229, column: 1, scope: !5483)
!5922 = !{i64 2147633496, i64 2147633539, i64 2147633579}
!5923 = !DILocation(line: 230, column: 1, scope: !5483)
!5924 = !{i64 2147633716, i64 2147633759, i64 2147633799}
!5925 = !DILocation(line: 231, column: 1, scope: !5483)
!5926 = !{i64 2147633960, i64 2147634003, i64 2147634043}
!5927 = !DILocation(line: 232, column: 1, scope: !5483)
!5928 = !{i64 2147634201, i64 2147634244, i64 2147634284}
!5929 = !DILocation(line: 233, column: 1, scope: !5483)
!5930 = !{i64 2147634436, i64 2147634479, i64 2147634519}
!5931 = !DILocation(line: 234, column: 1, scope: !5483)
!5932 = !{i64 2147634668, i64 2147634711, i64 2147634751}
!5933 = !DILocation(line: 235, column: 1, scope: !5483)
!5934 = !{i64 2147634870, i64 2147634913, i64 2147634953}
!5935 = !DILocation(line: 236, column: 1, scope: !5483)
!5936 = !{i64 2147635120, i64 2147635163, i64 2147635203}
!5937 = !DILocation(line: 237, column: 1, scope: !5483)
!5938 = !{i64 2147635358, i64 2147635401, i64 2147635441}
!5939 = !DILocation(line: 238, column: 1, scope: !5483)
!5940 = !{i64 2147635542, i64 2147635585, i64 2147635625}
!5941 = !DILocation(line: 239, column: 1, scope: !5483)
!5942 = !{i64 2147635766, i64 2147635809, i64 2147635849}
!5943 = !DILocation(line: 240, column: 1, scope: !5483)
!5944 = !{i64 2147636004, i64 2147636047, i64 2147636087}
!5945 = !DILocation(line: 241, column: 1, scope: !5483)
!5946 = !{i64 2147636242, i64 2147636285, i64 2147636325}
!5947 = !DILocation(line: 242, column: 1, scope: !5483)
!5948 = !{i64 2147636435, i64 2147636478, i64 2147636518}
!5949 = !DILocation(line: 243, column: 1, scope: !5483)
!5950 = !{i64 2147636688, i64 2147636731, i64 2147636771}
!5951 = !DILocation(line: 244, column: 1, scope: !5483)
!5952 = !{i64 2147636902, i64 2147636945, i64 2147636985}
!5953 = !DILocation(line: 245, column: 1, scope: !5483)
!5954 = !{i64 2147637110, i64 2147637153, i64 2147637193}
!5955 = !DILocation(line: 246, column: 1, scope: !5483)
!5956 = !{i64 2147637300, i64 2147637343, i64 2147637383}
!5957 = !DILocation(line: 247, column: 1, scope: !5483)
!5958 = !{i64 2147637514, i64 2147637557, i64 2147637597}
!5959 = !DILocation(line: 248, column: 1, scope: !5483)
!5960 = !{i64 2147637776, i64 2147637819, i64 2147637859}
!5961 = !DILocation(line: 249, column: 1, scope: !5483)
!5962 = !{i64 2147637987, i64 2147638030, i64 2147638070}
!5963 = !DILocation(line: 250, column: 1, scope: !5483)
!5964 = !{i64 2147638231, i64 2147638274, i64 2147638314}
!5965 = !DILocation(line: 251, column: 1, scope: !5483)
!5966 = !{i64 2147638442, i64 2147638485, i64 2147638525}
!5967 = !DILocation(line: 252, column: 1, scope: !5483)
!5968 = !{i64 2147638671, i64 2147638714, i64 2147638754}
!5969 = !DILocation(line: 253, column: 1, scope: !5483)
!5970 = !{i64 2147642997, i64 2147643040, i64 2147643080}
!5971 = !DILocation(line: 254, column: 1, scope: !5483)
!5972 = !{i64 2147643202, i64 2147643245, i64 2147643285}
!5973 = !DILocation(line: 255, column: 1, scope: !5483)
!5974 = !{i64 2147643425, i64 2147643468, i64 2147643508}
!5975 = !DILocation(line: 256, column: 1, scope: !5483)
!5976 = !{i64 2147643588, i64 2147643631, i64 2147643671}
!5977 = !DILocation(line: 257, column: 1, scope: !5483)
!5978 = !{i64 2147643793, i64 2147643836, i64 2147643876}
!5979 = !DILocation(line: 258, column: 1, scope: !5483)
!5980 = !{i64 2147644013, i64 2147644056, i64 2147644096}
!5981 = !DILocation(line: 259, column: 1, scope: !5483)
!5982 = !{i64 2147644227, i64 2147644270, i64 2147644310}
!5983 = !DILocation(line: 260, column: 1, scope: !5483)
!5984 = !{i64 2147644441, i64 2147644484, i64 2147644524}
!5985 = !DILocation(line: 261, column: 1, scope: !5483)
!5986 = !{i64 2147644652, i64 2147644695, i64 2147644735}
!5987 = !DILocation(line: 262, column: 1, scope: !5483)
!5988 = !{i64 2147644845, i64 2147644888, i64 2147644928}
!5989 = !DILocation(line: 263, column: 1, scope: !5483)
!5990 = !{i64 2147645044, i64 2147645087, i64 2147645127}
!5991 = !DILocation(line: 264, column: 1, scope: !5483)
!5992 = !{i64 2147645216, i64 2147645259, i64 2147645299}
!5993 = !DILocation(line: 265, column: 1, scope: !5483)
!5994 = !{i64 2147645409, i64 2147645452, i64 2147645492}
!5995 = !DILocation(line: 266, column: 1, scope: !5483)
!5996 = !{i64 2147645581, i64 2147645624, i64 2147645664}
!5997 = !DILocation(line: 267, column: 1, scope: !5483)
!5998 = !{i64 2147645771, i64 2147645814, i64 2147645854}
!5999 = !DILocation(line: 268, column: 1, scope: !5483)
!6000 = !{i64 2147645964, i64 2147646007, i64 2147646047}
!6001 = !DILocation(line: 269, column: 1, scope: !5483)
!6002 = !{i64 2147646160, i64 2147646203, i64 2147646243}
!6003 = !DILocation(line: 270, column: 1, scope: !5483)
!6004 = !{i64 2147646365, i64 2147646408, i64 2147646448}
!6005 = !DILocation(line: 271, column: 1, scope: !5483)
!6006 = !{i64 2147646592, i64 2147646635, i64 2147646675}
!6007 = !DILocation(line: 272, column: 1, scope: !5483)
!6008 = !{i64 2147646809, i64 2147646852, i64 2147646892}
!6009 = !DILocation(line: 273, column: 1, scope: !5483)
!6010 = !{i64 2147647101, i64 2147647144, i64 2147647184}
!6011 = !DILocation(line: 274, column: 1, scope: !5483)
!6012 = !{i64 2147647333, i64 2147647376, i64 2147647416}
!6013 = !DILocation(line: 275, column: 1, scope: !5483)
!6014 = !{i64 2147647550, i64 2147647593, i64 2147647633}
!6015 = !DILocation(line: 276, column: 1, scope: !5483)
!6016 = !{i64 2147647757, i64 2147647800, i64 2147647840}
!6017 = !DILocation(line: 277, column: 1, scope: !5483)
!6018 = !{i64 2147647958, i64 2147648001, i64 2147648041}
!6019 = !DILocation(line: 278, column: 1, scope: !5483)
!6020 = !{i64 2147648190, i64 2147648233, i64 2147648273}
!6021 = !DILocation(line: 279, column: 1, scope: !5483)
!6022 = !{i64 2147648398, i64 2147648441, i64 2147648481}
!6023 = !DILocation(line: 280, column: 1, scope: !5483)
!6024 = !{i64 2147648588, i64 2147648631, i64 2147648671}
!6025 = !DILocation(line: 281, column: 1, scope: !5483)
!6026 = !{i64 2147648814, i64 2147648857, i64 2147648897}
!6027 = !DILocation(line: 282, column: 1, scope: !5483)
!6028 = !{i64 2147649003, i64 2147649046, i64 2147649086}
!6029 = !DILocation(line: 283, column: 1, scope: !5483)
!6030 = !{i64 2147649274, i64 2147649317, i64 2147649357}
!6031 = !DILocation(line: 284, column: 1, scope: !5483)
!6032 = !{i64 2147649494, i64 2147649537, i64 2147649577}
!6033 = !DILocation(line: 285, column: 1, scope: !5483)
!6034 = !{i64 2147649747, i64 2147649790, i64 2147649830}
!6035 = !DILocation(line: 286, column: 1, scope: !5483)
!6036 = !{i64 2147649955, i64 2147649998, i64 2147650038}
!6037 = !DILocation(line: 287, column: 1, scope: !5483)
!6038 = !{i64 2147650187, i64 2147650230, i64 2147650270}
!6039 = !DILocation(line: 288, column: 1, scope: !5483)
!6040 = !{i64 2147650398, i64 2147650441, i64 2147650481}
!6041 = !DILocation(line: 289, column: 1, scope: !5483)
!6042 = !{i64 2147650588, i64 2147650631, i64 2147650671}
!6043 = !DILocation(line: 290, column: 1, scope: !5483)
!6044 = !{i64 2147650802, i64 2147650845, i64 2147650885}
!6045 = !DILocation(line: 291, column: 1, scope: !5483)
!6046 = !{i64 2147651001, i64 2147651044, i64 2147651084}
!6047 = !DILocation(line: 292, column: 1, scope: !5483)
!6048 = !{i64 2147651188, i64 2147651231, i64 2147651271}
!6049 = !DILocation(line: 293, column: 1, scope: !5483)
!6050 = !{i64 2147651396, i64 2147651439, i64 2147651479}
!6051 = !DILocation(line: 294, column: 1, scope: !5483)
!6052 = !{i64 2147651625, i64 2147651668, i64 2147651708}
!6053 = !DILocation(line: 295, column: 1, scope: !5483)
!6054 = !{i64 2147655888, i64 2147655931, i64 2147655971}
!6055 = !DILocation(line: 296, column: 1, scope: !5483)
!6056 = !{i64 2147656087, i64 2147656130, i64 2147656170}
!6057 = !DILocation(line: 297, column: 1, scope: !5483)
!6058 = !{i64 2147656304, i64 2147656347, i64 2147656387}
!6059 = !DILocation(line: 299, column: 1, scope: !5483)
!6060 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !309, file: !309, line: 30, type: !316, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !6061)
!6061 = !{!6062, !6063}
!6062 = !DILocalVariable(name: "arg", arg: 1, scope: !6060, file: !309, line: 30, type: !318)
!6063 = !DILocalVariable(name: "key", scope: !6060, file: !309, line: 32, type: !110)
!6064 = !DILocation(line: 0, scope: !6060)
!6065 = !DILocation(line: 37, column: 2, scope: !6060)
!6066 = !DILocation(line: 38, column: 2, scope: !6060)
!6067 = !DILocation(line: 55, column: 2, scope: !6068, inlinedAt: !6075)
!6068 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6069, file: !6069, line: 42, type: !6070, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !6072)
!6069 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6070 = !DISubroutineType(types: !6071)
!6071 = !{!32}
!6072 = !{!6073, !6074}
!6073 = !DILocalVariable(name: "key", scope: !6068, file: !6069, line: 44, type: !32)
!6074 = !DILocalVariable(name: "tmp", scope: !6068, file: !6069, line: 53, type: !32)
!6075 = distinct !DILocation(line: 40, column: 8, scope: !6060)
!6076 = !{i64 2187893}
!6077 = !DILocation(line: 0, scope: !6068, inlinedAt: !6075)
!6078 = !DILocalVariable(name: "key", arg: 1, scope: !6079, file: !6069, line: 84, type: !32)
!6079 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6069, file: !6069, line: 84, type: !6080, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !6082)
!6080 = !DISubroutineType(types: !6081)
!6081 = !{null, !32}
!6082 = !{!6078}
!6083 = !DILocation(line: 0, scope: !6079, inlinedAt: !6084)
!6084 = distinct !DILocation(line: 47, column: 2, scope: !6060)
!6085 = !DILocation(line: 95, column: 2, scope: !6079, inlinedAt: !6084)
!6086 = !{i64 2188710}
!6087 = !DILocation(line: 51, column: 18, scope: !6060)
!6088 = !DILocation(line: 53, column: 2, scope: !6060)
!6089 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6090, file: !6090, line: 1609, type: !3169, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !2100)
!6090 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6091 = !DILocation(line: 1611, column: 3, scope: !6089)
!6092 = !DILocation(line: 1612, column: 1, scope: !6089)
!6093 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6090, file: !6090, line: 1629, type: !3169, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !292, retainedNodes: !2100)
!6094 = !DILocation(line: 1631, column: 3, scope: !6093)
!6095 = !DILocation(line: 1632, column: 1, scope: !6093)
!6096 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !348, file: !348, line: 26, type: !354, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !6097)
!6097 = !{!6098}
!6098 = !DILocalVariable(name: "dev", arg: 1, scope: !6096, file: !348, line: 26, type: !356)
!6099 = !DILocation(line: 0, scope: !6096)
!6100 = !DILocation(line: 68, column: 2, scope: !6096)
!6101 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6102, file: !6102, line: 57, type: !6103, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !6149)
!6102 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6103 = !DISubroutineType(types: !6104)
!6104 = !{null, !32, !6105}
!6105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6106, size: 32)
!6106 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6107)
!6107 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2768, line: 141, baseType: !6108)
!6108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2768, line: 97, size: 256, elements: !6109)
!6109 = !{!6110}
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6108, file: !2768, line: 107, baseType: !6111, size: 256)
!6111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2768, line: 98, size: 256, elements: !6112)
!6112 = !{!6113, !6118, !6123, !6128, !6133, !6138, !6143, !6148}
!6113 = !DIDerivedType(tag: DW_TAG_member, scope: !6111, file: !2768, line: 99, baseType: !6114, size: 32)
!6114 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6111, file: !2768, line: 99, size: 32, elements: !6115)
!6115 = !{!6116, !6117}
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6114, file: !2768, line: 99, baseType: !110, size: 32)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6114, file: !2768, line: 99, baseType: !110, size: 32)
!6118 = !DIDerivedType(tag: DW_TAG_member, scope: !6111, file: !2768, line: 100, baseType: !6119, size: 32, offset: 32)
!6119 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6111, file: !2768, line: 100, size: 32, elements: !6120)
!6120 = !{!6121, !6122}
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6119, file: !2768, line: 100, baseType: !110, size: 32)
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6119, file: !2768, line: 100, baseType: !110, size: 32)
!6123 = !DIDerivedType(tag: DW_TAG_member, scope: !6111, file: !2768, line: 101, baseType: !6124, size: 32, offset: 64)
!6124 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6111, file: !2768, line: 101, size: 32, elements: !6125)
!6125 = !{!6126, !6127}
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6124, file: !2768, line: 101, baseType: !110, size: 32)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6124, file: !2768, line: 101, baseType: !110, size: 32)
!6128 = !DIDerivedType(tag: DW_TAG_member, scope: !6111, file: !2768, line: 102, baseType: !6129, size: 32, offset: 96)
!6129 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6111, file: !2768, line: 102, size: 32, elements: !6130)
!6130 = !{!6131, !6132}
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6129, file: !2768, line: 102, baseType: !110, size: 32)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6129, file: !2768, line: 102, baseType: !110, size: 32)
!6133 = !DIDerivedType(tag: DW_TAG_member, scope: !6111, file: !2768, line: 103, baseType: !6134, size: 32, offset: 128)
!6134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6111, file: !2768, line: 103, size: 32, elements: !6135)
!6135 = !{!6136, !6137}
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6134, file: !2768, line: 103, baseType: !110, size: 32)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6134, file: !2768, line: 103, baseType: !110, size: 32)
!6138 = !DIDerivedType(tag: DW_TAG_member, scope: !6111, file: !2768, line: 104, baseType: !6139, size: 32, offset: 160)
!6139 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6111, file: !2768, line: 104, size: 32, elements: !6140)
!6140 = !{!6141, !6142}
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6139, file: !2768, line: 104, baseType: !110, size: 32)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6139, file: !2768, line: 104, baseType: !110, size: 32)
!6143 = !DIDerivedType(tag: DW_TAG_member, scope: !6111, file: !2768, line: 105, baseType: !6144, size: 32, offset: 192)
!6144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6111, file: !2768, line: 105, size: 32, elements: !6145)
!6145 = !{!6146, !6147}
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6144, file: !2768, line: 105, baseType: !110, size: 32)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6144, file: !2768, line: 105, baseType: !110, size: 32)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6111, file: !2768, line: 106, baseType: !110, size: 32, offset: 224)
!6149 = !{!6150, !6151}
!6150 = !DILocalVariable(name: "reason", arg: 1, scope: !6101, file: !6102, line: 57, type: !32)
!6151 = !DILocalVariable(name: "esf", arg: 2, scope: !6101, file: !6102, line: 57, type: !6105)
!6152 = !DILocation(line: 0, scope: !6101)
!6153 = !DILocation(line: 63, column: 2, scope: !6101)
!6154 = !DILocation(line: 64, column: 1, scope: !6101)
!6155 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6102, file: !6102, line: 82, type: !6156, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !6171)
!6156 = !DISubroutineType(types: !6157)
!6157 = !{null, !6105, !6158}
!6158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6159, size: 32)
!6159 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !198, line: 37, baseType: !6160)
!6160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !6161)
!6161 = !{!6162, !6163, !6164, !6165, !6166, !6167, !6168, !6169, !6170}
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6160, file: !198, line: 26, baseType: !110, size: 32)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6160, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6160, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6160, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6160, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6160, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6160, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6160, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6160, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!6171 = !{!6172, !6173, !6174}
!6172 = !DILocalVariable(name: "esf", arg: 1, scope: !6155, file: !6102, line: 82, type: !6105)
!6173 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6155, file: !6102, line: 82, type: !6158)
!6174 = !DILocalVariable(name: "reason", scope: !6155, file: !6102, line: 88, type: !32)
!6175 = !DILocation(line: 0, scope: !6155)
!6176 = !DILocation(line: 88, column: 35, scope: !6155)
!6177 = !DILocation(line: 108, column: 2, scope: !6155)
!6178 = !DILocation(line: 131, column: 1, scope: !6155)
!6179 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6102, file: !6102, line: 133, type: !6180, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !6182)
!6180 = !DISubroutineType(types: !6181)
!6181 = !{null, !108}
!6182 = !{!6183, !6184, !6185}
!6183 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6179, file: !6102, line: 133, type: !108)
!6184 = !DILocalVariable(name: "ssf_contents", scope: !6179, file: !6102, line: 135, type: !893)
!6185 = !DILocalVariable(name: "oops_esf", scope: !6179, file: !6102, line: 136, type: !6107)
!6186 = !DILocation(line: 0, scope: !6179)
!6187 = !DILocation(line: 136, column: 2, scope: !6179)
!6188 = !DILocation(line: 136, column: 15, scope: !6179)
!6189 = !DILocation(line: 139, column: 22, scope: !6179)
!6190 = !DILocation(line: 139, column: 17, scope: !6179)
!6191 = !DILocation(line: 139, column: 20, scope: !6179)
!6192 = !DILocation(line: 141, column: 2, scope: !6179)
!6193 = !DILocation(line: 142, column: 2, scope: !6179)
!6194 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6195, file: !6195, line: 40, type: !6080, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2659, retainedNodes: !6196)
!6195 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6196 = !{!6197}
!6197 = !DILocalVariable(name: "irq", arg: 1, scope: !6194, file: !6195, line: 40, type: !32)
!6198 = !DILocation(line: 0, scope: !6194)
!6199 = !DILocation(line: 42, column: 2, scope: !6194)
!6200 = !DILocation(line: 43, column: 1, scope: !6194)
!6201 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !536, file: !536, line: 1684, type: !6202, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2659, retainedNodes: !6204)
!6202 = !DISubroutineType(types: !6203)
!6203 = !{null, !791}
!6204 = !{!6205}
!6205 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6201, file: !536, line: 1684, type: !791)
!6206 = !DILocation(line: 0, scope: !6201)
!6207 = !DILocation(line: 1686, column: 23, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6201, file: !536, line: 1686, column: 7)
!6209 = !DILocation(line: 1686, column: 7, scope: !6201)
!6210 = !DILocation(line: 1688, column: 5, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6208, file: !536, line: 1687, column: 3)
!6212 = !{i64 2151256669}
!6213 = !DILocation(line: 1689, column: 81, scope: !6211)
!6214 = !DILocation(line: 1689, column: 60, scope: !6211)
!6215 = !DILocation(line: 1689, column: 34, scope: !6211)
!6216 = !DILocation(line: 1689, column: 5, scope: !6211)
!6217 = !DILocation(line: 1689, column: 43, scope: !6211)
!6218 = !DILocation(line: 1690, column: 5, scope: !6211)
!6219 = !{i64 2151256783}
!6220 = !DILocation(line: 1691, column: 3, scope: !6211)
!6221 = !DILocation(line: 1692, column: 1, scope: !6201)
!6222 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6195, file: !6195, line: 45, type: !6080, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2659, retainedNodes: !6223)
!6223 = !{!6224}
!6224 = !DILocalVariable(name: "irq", arg: 1, scope: !6222, file: !6195, line: 45, type: !32)
!6225 = !DILocation(line: 0, scope: !6222)
!6226 = !DILocation(line: 47, column: 2, scope: !6222)
!6227 = !DILocation(line: 48, column: 1, scope: !6222)
!6228 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !536, file: !536, line: 1722, type: !6202, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2659, retainedNodes: !6229)
!6229 = !{!6230}
!6230 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6228, file: !536, line: 1722, type: !791)
!6231 = !DILocation(line: 0, scope: !6228)
!6232 = !DILocation(line: 1724, column: 23, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6228, file: !536, line: 1724, column: 7)
!6234 = !DILocation(line: 1724, column: 7, scope: !6228)
!6235 = !DILocation(line: 1726, column: 81, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6233, file: !536, line: 1725, column: 3)
!6237 = !DILocation(line: 1726, column: 60, scope: !6236)
!6238 = !DILocation(line: 1726, column: 34, scope: !6236)
!6239 = !DILocation(line: 1726, column: 5, scope: !6236)
!6240 = !DILocation(line: 1726, column: 43, scope: !6236)
!6241 = !DILocation(line: 271, column: 3, scope: !6242, inlinedAt: !6244)
!6242 = distinct !DISubprogram(name: "__DSB", scope: !6243, file: !6243, line: 269, type: !3169, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2659, retainedNodes: !2100)
!6243 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6244 = distinct !DILocation(line: 1727, column: 5, scope: !6236)
!6245 = !{i64 3711052}
!6246 = !DILocation(line: 260, column: 3, scope: !6247, inlinedAt: !6248)
!6247 = distinct !DISubprogram(name: "__ISB", scope: !6243, file: !6243, line: 258, type: !3169, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2659, retainedNodes: !2100)
!6248 = distinct !DILocation(line: 1728, column: 5, scope: !6236)
!6249 = !{i64 3710769}
!6250 = !DILocation(line: 1729, column: 3, scope: !6236)
!6251 = !DILocation(line: 1730, column: 1, scope: !6228)
!6252 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6195, file: !6195, line: 50, type: !6253, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2659, retainedNodes: !6255)
!6253 = !DISubroutineType(types: !6254)
!6254 = !{!109, !32}
!6255 = !{!6256}
!6256 = !DILocalVariable(name: "irq", arg: 1, scope: !6252, file: !6195, line: 50, type: !32)
!6257 = !DILocation(line: 0, scope: !6252)
!6258 = !DILocation(line: 52, column: 20, scope: !6252)
!6259 = !DILocation(line: 52, column: 9, scope: !6252)
!6260 = !DILocation(line: 52, column: 41, scope: !6252)
!6261 = !DILocation(line: 52, column: 39, scope: !6252)
!6262 = !DILocation(line: 52, column: 2, scope: !6252)
!6263 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6195, file: !6195, line: 64, type: !6264, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2659, retainedNodes: !6266)
!6264 = !DISubroutineType(types: !6265)
!6265 = !{null, !32, !32, !110}
!6266 = !{!6267, !6268, !6269}
!6267 = !DILocalVariable(name: "irq", arg: 1, scope: !6263, file: !6195, line: 64, type: !32)
!6268 = !DILocalVariable(name: "prio", arg: 2, scope: !6263, file: !6195, line: 64, type: !32)
!6269 = !DILocalVariable(name: "flags", arg: 3, scope: !6263, file: !6195, line: 64, type: !110)
!6270 = !DILocation(line: 0, scope: !6263)
!6271 = !DILocation(line: 83, column: 8, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6273, file: !6195, line: 82, column: 9)
!6273 = distinct !DILexicalBlock(scope: !6263, file: !6195, line: 76, column: 6)
!6274 = !DILocation(line: 91, column: 2, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6276, file: !6195, line: 91, column: 2)
!6276 = distinct !DILexicalBlock(scope: !6263, file: !6195, line: 91, column: 2)
!6277 = !DILocation(line: 91, column: 2, scope: !6276)
!6278 = !DILocation(line: 91, column: 2, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6275, file: !6195, line: 91, column: 2)
!6280 = !DILocation(line: 95, column: 2, scope: !6263)
!6281 = !DILocation(line: 96, column: 1, scope: !6263)
!6282 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !536, file: !536, line: 1814, type: !6283, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2659, retainedNodes: !6285)
!6283 = !DISubroutineType(types: !6284)
!6284 = !{null, !791, !110}
!6285 = !{!6286, !6287}
!6286 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6282, file: !536, line: 1814, type: !791)
!6287 = !DILocalVariable(name: "priority", arg: 2, scope: !6282, file: !536, line: 1814, type: !110)
!6288 = !DILocation(line: 0, scope: !6282)
!6289 = !DILocation(line: 0, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6282, file: !536, line: 1816, column: 7)
!6291 = !DILocation(line: 1816, column: 7, scope: !6282)
!6292 = !DILocation(line: 1824, column: 1, scope: !6282)
!6293 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6195, file: !6195, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2659, retainedNodes: !6294)
!6294 = !{!6295}
!6295 = !DILocalVariable(name: "unused", arg: 1, scope: !6293, file: !6195, line: 155, type: !13)
!6296 = !DILocation(line: 0, scope: !6293)
!6297 = !DILocation(line: 159, column: 2, scope: !6293)
!6298 = !DILocation(line: 160, column: 1, scope: !6293)
!6299 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6300, file: !6300, line: 87, type: !3169, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2705, retainedNodes: !2100)
!6300 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6301 = !DILocation(line: 89, column: 2, scope: !6299)
!6302 = !DILocation(line: 90, column: 2, scope: !6299)
!6303 = !DILocation(line: 91, column: 1, scope: !6299)
!6304 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6300, file: !6300, line: 23, type: !3169, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2100)
!6305 = !DISubprogram(name: "z_arm_int_exit", scope: !6306, file: !6306, line: 153, type: !3169, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2100)
!6306 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6307 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6308, file: !6308, line: 256, type: !3169, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !2100)
!6308 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6309 = !DILocation(line: 258, column: 2, scope: !6307)
!6310 = !DILocation(line: 260, column: 2, scope: !6307)
!6311 = !DILocation(line: 262, column: 2, scope: !6307)
!6312 = !DILocation(line: 263, column: 2, scope: !6307)
!6313 = !DILocation(line: 267, column: 2, scope: !6307)
!6314 = !DILocation(line: 268, column: 2, scope: !6307)
!6315 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6308, file: !6308, line: 53, type: !3169, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !2100)
!6316 = !DILocation(line: 55, column: 12, scope: !6315)
!6317 = !DILocation(line: 271, column: 3, scope: !6318, inlinedAt: !6319)
!6318 = distinct !DISubprogram(name: "__DSB", scope: !6243, file: !6243, line: 269, type: !3169, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !2100)
!6319 = distinct !DILocation(line: 56, column: 2, scope: !6315)
!6320 = !{i64 3709723}
!6321 = !DILocation(line: 260, column: 3, scope: !6322, inlinedAt: !6323)
!6322 = distinct !DISubprogram(name: "__ISB", scope: !6243, file: !6243, line: 258, type: !3169, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !2100)
!6323 = distinct !DILocation(line: 57, column: 2, scope: !6315)
!6324 = !{i64 3709440}
!6325 = !DILocation(line: 58, column: 1, scope: !6315)
!6326 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6308, file: !6308, line: 96, type: !3169, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !2100)
!6327 = !DILocation(line: 103, column: 13, scope: !6326)
!6328 = !DILocation(line: 975, column: 3, scope: !6329, inlinedAt: !6332)
!6329 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6243, file: !6243, line: 971, type: !3451, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !6330)
!6330 = !{!6331}
!6331 = !DILocalVariable(name: "result", scope: !6329, file: !6243, line: 973, type: !110)
!6332 = distinct !DILocation(line: 189, column: 16, scope: !6326)
!6333 = !{i64 3730553}
!6334 = !DILocation(line: 0, scope: !6329, inlinedAt: !6332)
!6335 = !DILocation(line: 189, column: 32, scope: !6326)
!6336 = !DILocalVariable(name: "control", arg: 1, scope: !6337, file: !6243, line: 1001, type: !110)
!6337 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6243, file: !6243, line: 1001, type: !6338, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2707, retainedNodes: !6340)
!6338 = !DISubroutineType(types: !6339)
!6339 = !{null, !110}
!6340 = !{!6336}
!6341 = !DILocation(line: 0, scope: !6337, inlinedAt: !6342)
!6342 = distinct !DILocation(line: 189, column: 2, scope: !6326)
!6343 = !DILocation(line: 1003, column: 3, scope: !6337, inlinedAt: !6342)
!6344 = !{i64 3731273}
!6345 = !DILocation(line: 260, column: 3, scope: !6322, inlinedAt: !6346)
!6346 = distinct !DILocation(line: 1004, column: 3, scope: !6337, inlinedAt: !6342)
!6347 = !DILocation(line: 191, column: 1, scope: !6326)
!6348 = distinct !DISubprogram(name: "arch_swap", scope: !6349, file: !6349, line: 33, type: !6253, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2735, retainedNodes: !6350)
!6349 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6350 = !{!6351}
!6351 = !DILocalVariable(name: "key", arg: 1, scope: !6348, file: !6349, line: 33, type: !32)
!6352 = !DILocation(line: 0, scope: !6348)
!6353 = !DILocation(line: 36, column: 2, scope: !6348)
!6354 = !DILocation(line: 36, column: 17, scope: !6348)
!6355 = !DILocation(line: 36, column: 25, scope: !6348)
!6356 = !DILocation(line: 37, column: 37, scope: !6348)
!6357 = !DILocation(line: 37, column: 17, scope: !6348)
!6358 = !DILocation(line: 37, column: 35, scope: !6348)
!6359 = !DILocation(line: 41, column: 12, scope: !6348)
!6360 = !DILocalVariable(name: "key", arg: 1, scope: !6361, file: !6069, line: 84, type: !32)
!6361 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6069, file: !6069, line: 84, type: !6080, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2735, retainedNodes: !6362)
!6362 = !{!6360}
!6363 = !DILocation(line: 0, scope: !6361, inlinedAt: !6364)
!6364 = distinct !DILocation(line: 44, column: 2, scope: !6348)
!6365 = !DILocation(line: 95, column: 2, scope: !6361, inlinedAt: !6364)
!6366 = !{i64 2280224}
!6367 = !DILocation(line: 53, column: 9, scope: !6348)
!6368 = !DILocation(line: 53, column: 24, scope: !6348)
!6369 = !DILocation(line: 53, column: 2, scope: !6348)
!6370 = distinct !DISubprogram(name: "arch_new_thread", scope: !6371, file: !6371, line: 56, type: !6372, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !6490)
!6371 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6372 = !DISubroutineType(types: !6373)
!6373 = !{null, !6374, !6485, !1165, !215, !108, !108, !108}
!6374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6375, size: 32)
!6375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !6376)
!6376 = !{!6377, !6435, !6447, !6448, !6449, !6456, !6457, !6458, !6459, !6465, !6480}
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6375, file: !145, line: 247, baseType: !6378, size: 384)
!6378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !6379)
!6379 = !{!6380, !6404, !6411, !6412, !6413, !6422, !6423, !6424}
!6380 = !DIDerivedType(tag: DW_TAG_member, scope: !6378, file: !145, line: 60, baseType: !6381, size: 64)
!6381 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6378, file: !145, line: 60, size: 64, elements: !6382)
!6382 = !{!6383, !6398}
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6381, file: !145, line: 61, baseType: !6384, size: 64)
!6384 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !6385)
!6385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !6386)
!6386 = !{!6387, !6393}
!6387 = !DIDerivedType(tag: DW_TAG_member, scope: !6385, file: !128, line: 38, baseType: !6388, size: 32)
!6388 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6385, file: !128, line: 38, size: 32, elements: !6389)
!6389 = !{!6390, !6392}
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6388, file: !128, line: 39, baseType: !6391, size: 32)
!6391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6385, size: 32)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6388, file: !128, line: 40, baseType: !6391, size: 32)
!6393 = !DIDerivedType(tag: DW_TAG_member, scope: !6385, file: !128, line: 42, baseType: !6394, size: 32, offset: 32)
!6394 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6385, file: !128, line: 42, size: 32, elements: !6395)
!6395 = !{!6396, !6397}
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6394, file: !128, line: 43, baseType: !6391, size: 32)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6394, file: !128, line: 44, baseType: !6391, size: 32)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6381, file: !145, line: 62, baseType: !6399, size: 64)
!6399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !6400)
!6400 = !{!6401}
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6399, file: !157, line: 50, baseType: !6402, size: 64)
!6402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6403, size: 64, elements: !162)
!6403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6399, size: 32)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6378, file: !145, line: 68, baseType: !6405, size: 32, offset: 64)
!6405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6406, size: 32)
!6406 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !6407)
!6407 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !6408)
!6408 = !{!6409}
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6407, file: !123, line: 232, baseType: !6410, size: 64)
!6410 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !6385)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6378, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6378, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!6413 = !DIDerivedType(tag: DW_TAG_member, scope: !6378, file: !145, line: 90, baseType: !6414, size: 16, offset: 112)
!6414 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6378, file: !145, line: 90, size: 16, elements: !6415)
!6415 = !{!6416, !6421}
!6416 = !DIDerivedType(tag: DW_TAG_member, scope: !6414, file: !145, line: 91, baseType: !6417, size: 16)
!6417 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6414, file: !145, line: 91, size: 16, elements: !6418)
!6418 = !{!6419, !6420}
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6417, file: !145, line: 96, baseType: !177, size: 8)
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6417, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6414, file: !145, line: 100, baseType: !181, size: 16)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6378, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6378, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6378, file: !145, line: 131, baseType: !6425, size: 192, offset: 192)
!6425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !6426)
!6426 = !{!6427, !6428, !6434}
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6425, file: !123, line: 245, baseType: !6384, size: 64)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6425, file: !123, line: 246, baseType: !6429, size: 32, offset: 64)
!6429 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !6430)
!6430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6431, size: 32)
!6431 = !DISubroutineType(types: !6432)
!6432 = !{null, !6433}
!6433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6425, size: 32)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6425, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6375, file: !145, line: 250, baseType: !6436, size: 288, offset: 384)
!6436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !6437)
!6437 = !{!6438, !6439, !6440, !6441, !6442, !6443, !6444, !6445, !6446}
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6436, file: !198, line: 26, baseType: !110, size: 32)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6436, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6436, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6436, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6436, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6436, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6436, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6436, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!6446 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6436, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6375, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6375, file: !145, line: 256, baseType: !6406, size: 64, offset: 704)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6375, file: !145, line: 271, baseType: !6450, size: 128, offset: 768)
!6450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !6451)
!6451 = !{!6452, !6453, !6454, !6455}
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !6450, file: !145, line: 35, baseType: !215, size: 32)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !6450, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !6450, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !6450, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !6375, file: !145, line: 274, baseType: !6374, size: 32, offset: 896)
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6375, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!6458 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6375, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6375, file: !145, line: 300, baseType: !6460, size: 96, offset: 1216)
!6460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !6461)
!6461 = !{!6462, !6463, !6464}
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6460, file: !145, line: 153, baseType: !22, size: 32)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6460, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6460, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6375, file: !145, line: 325, baseType: !6466, size: 32, offset: 1312)
!6466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6467, size: 32)
!6467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !6468)
!6468 = !{!6469, !6475, !6476}
!6469 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6467, file: !119, line: 5074, baseType: !6470, size: 96)
!6470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !6471)
!6471 = !{!6472, !6473, !6474}
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6470, file: !244, line: 57, baseType: !247, size: 32)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6470, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6470, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6467, file: !119, line: 5075, baseType: !6406, size: 64, offset: 96)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6467, file: !119, line: 5076, baseType: !6477, size: 32, offset: 160)
!6477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !6478)
!6478 = !{!6479}
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6477, file: !254, line: 52, baseType: !22, size: 32)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6375, file: !145, line: 343, baseType: !6481, size: 64, offset: 1344)
!6481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !6482)
!6482 = !{!6483, !6484}
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6481, file: !198, line: 63, baseType: !110, size: 32)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6481, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!6485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6486, size: 32)
!6486 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !216, line: 44, baseType: !6487)
!6487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !273, line: 47, size: 8, elements: !6488)
!6488 = !{!6489}
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6487, file: !273, line: 48, baseType: !226, size: 8)
!6490 = !{!6491, !6492, !6493, !6494, !6495, !6496, !6497, !6498}
!6491 = !DILocalVariable(name: "thread", arg: 1, scope: !6370, file: !6371, line: 56, type: !6374)
!6492 = !DILocalVariable(name: "stack", arg: 2, scope: !6370, file: !6371, line: 56, type: !6485)
!6493 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6370, file: !6371, line: 57, type: !1165)
!6494 = !DILocalVariable(name: "entry", arg: 4, scope: !6370, file: !6371, line: 57, type: !215)
!6495 = !DILocalVariable(name: "p1", arg: 5, scope: !6370, file: !6371, line: 58, type: !108)
!6496 = !DILocalVariable(name: "p2", arg: 6, scope: !6370, file: !6371, line: 58, type: !108)
!6497 = !DILocalVariable(name: "p3", arg: 7, scope: !6370, file: !6371, line: 58, type: !108)
!6498 = !DILocalVariable(name: "iframe", scope: !6370, file: !6371, line: 60, type: !2766)
!6499 = !DILocation(line: 0, scope: !6370)
!6500 = !DILocation(line: 85, column: 11, scope: !6370)
!6501 = !DILocation(line: 93, column: 10, scope: !6370)
!6502 = !DILocation(line: 98, column: 13, scope: !6370)
!6503 = !DILocation(line: 100, column: 15, scope: !6370)
!6504 = !DILocation(line: 100, column: 10, scope: !6370)
!6505 = !DILocation(line: 100, column: 13, scope: !6370)
!6506 = !DILocation(line: 101, column: 15, scope: !6370)
!6507 = !DILocation(line: 101, column: 10, scope: !6370)
!6508 = !DILocation(line: 101, column: 13, scope: !6370)
!6509 = !DILocation(line: 102, column: 15, scope: !6370)
!6510 = !DILocation(line: 102, column: 10, scope: !6370)
!6511 = !DILocation(line: 102, column: 13, scope: !6370)
!6512 = !DILocation(line: 103, column: 15, scope: !6370)
!6513 = !DILocation(line: 103, column: 10, scope: !6370)
!6514 = !DILocation(line: 103, column: 13, scope: !6370)
!6515 = !DILocation(line: 106, column: 10, scope: !6370)
!6516 = !DILocation(line: 106, column: 15, scope: !6370)
!6517 = !DILocation(line: 122, column: 29, scope: !6370)
!6518 = !DILocation(line: 122, column: 23, scope: !6370)
!6519 = !DILocation(line: 122, column: 27, scope: !6370)
!6520 = !DILocation(line: 123, column: 15, scope: !6370)
!6521 = !DILocation(line: 123, column: 23, scope: !6370)
!6522 = !DILocation(line: 143, column: 1, scope: !6370)
!6523 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6371, file: !6371, line: 385, type: !6524, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !6527)
!6524 = !DISubroutineType(types: !6525)
!6525 = !{!110, !6526, !6526}
!6526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!6527 = !{!6528, !6529, !6530, !6533}
!6528 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6523, file: !6371, line: 385, type: !6526)
!6529 = !DILocalVariable(name: "psp", arg: 2, scope: !6523, file: !6371, line: 385, type: !6526)
!6530 = !DILocalVariable(name: "thread", scope: !6523, file: !6371, line: 388, type: !6531)
!6531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6532, size: 32)
!6532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6375)
!6533 = !DILocalVariable(name: "guard_len", scope: !6523, file: !6371, line: 405, type: !110)
!6534 = !DILocation(line: 0, scope: !6523)
!6535 = !DILocation(line: 388, column: 34, scope: !6523)
!6536 = !DILocation(line: 390, column: 13, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6523, file: !6371, line: 390, column: 6)
!6538 = !DILocation(line: 390, column: 6, scope: !6523)
!6539 = !DILocation(line: 438, column: 6, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6523, file: !6371, line: 438, column: 6)
!6541 = !DILocation(line: 438, column: 6, scope: !6523)
!6542 = !DILocation(line: 442, column: 3, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6540, file: !6371, line: 440, column: 22)
!6544 = !DILocation(line: 455, column: 1, scope: !6523)
!6545 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6371, file: !6371, line: 530, type: !6546, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2763, retainedNodes: !6548)
!6546 = !DISubroutineType(types: !6547)
!6547 = !{null, !6374, !1165, !215}
!6548 = !{!6549, !6550, !6551}
!6549 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6545, file: !6371, line: 530, type: !6374)
!6550 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6545, file: !6371, line: 530, type: !1165)
!6551 = !DILocalVariable(name: "_main", arg: 3, scope: !6545, file: !6371, line: 531, type: !215)
!6552 = !DILocation(line: 0, scope: !6545)
!6553 = !DILocation(line: 535, column: 11, scope: !6545)
!6554 = !DILocation(line: 560, column: 2, scope: !6545)
!6555 = !DILocation(line: 576, column: 2, scope: !6545)
!6556 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6557 = !DILocation(line: 603, column: 2, scope: !6545)
!6558 = distinct !DISubprogram(name: "z_arm_fault", scope: !6559, file: !6559, line: 1036, type: !6560, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !6575)
!6559 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6560 = !DISubroutineType(types: !6561)
!6561 = !{null, !110, !110, !110, !6562}
!6562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6563, size: 32)
!6563 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !198, line: 37, baseType: !6564)
!6564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !6565)
!6565 = !{!6566, !6567, !6568, !6569, !6570, !6571, !6572, !6573, !6574}
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6564, file: !198, line: 26, baseType: !110, size: 32)
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6564, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6564, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6564, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6564, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6564, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!6572 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6564, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6564, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!6574 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6564, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!6575 = !{!6576, !6577, !6578, !6579, !6580, !6581, !6582, !6583, !6584, !6585}
!6576 = !DILocalVariable(name: "msp", arg: 1, scope: !6558, file: !6559, line: 1036, type: !110)
!6577 = !DILocalVariable(name: "psp", arg: 2, scope: !6558, file: !6559, line: 1036, type: !110)
!6578 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6558, file: !6559, line: 1036, type: !110)
!6579 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6558, file: !6559, line: 1037, type: !6562)
!6580 = !DILocalVariable(name: "reason", scope: !6558, file: !6559, line: 1039, type: !110)
!6581 = !DILocalVariable(name: "fault", scope: !6558, file: !6559, line: 1040, type: !109)
!6582 = !DILocalVariable(name: "recoverable", scope: !6558, file: !6559, line: 1041, type: !334)
!6583 = !DILocalVariable(name: "nested_exc", scope: !6558, file: !6559, line: 1041, type: !334)
!6584 = !DILocalVariable(name: "esf", scope: !6558, file: !6559, line: 1042, type: !2834)
!6585 = !DILocalVariable(name: "esf_copy", scope: !6558, file: !6559, line: 1047, type: !2835)
!6586 = !DILocation(line: 0, scope: !6558)
!6587 = !DILocation(line: 1040, column: 19, scope: !6558)
!6588 = !DILocation(line: 1041, column: 2, scope: !6558)
!6589 = !DILocation(line: 1047, column: 2, scope: !6558)
!6590 = !DILocation(line: 1047, column: 15, scope: !6558)
!6591 = !DILocalVariable(name: "key", arg: 1, scope: !6592, file: !6069, line: 84, type: !32)
!6592 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6069, file: !6069, line: 84, type: !6080, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !6593)
!6593 = !{!6591}
!6594 = !DILocation(line: 0, scope: !6592, inlinedAt: !6595)
!6595 = distinct !DILocation(line: 1050, column: 2, scope: !6558)
!6596 = !DILocation(line: 95, column: 2, scope: !6592, inlinedAt: !6595)
!6597 = !{i64 2313468}
!6598 = !DILocation(line: 1055, column: 9, scope: !6558)
!6599 = !DILocation(line: 1056, column: 2, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6601, file: !6559, line: 1056, column: 2)
!6601 = distinct !DILexicalBlock(scope: !6558, file: !6559, line: 1056, column: 2)
!6602 = !DILocation(line: 1056, column: 2, scope: !6601)
!6603 = !DILocation(line: 1056, column: 2, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6600, file: !6559, line: 1056, column: 2)
!6605 = !DILocation(line: 1040, column: 24, scope: !6558)
!6606 = !DILocation(line: 1063, column: 11, scope: !6558)
!6607 = !DILocation(line: 1064, column: 6, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6558, file: !6559, line: 1064, column: 6)
!6609 = !DILocation(line: 1064, column: 6, scope: !6558)
!6610 = !DILocation(line: 1070, column: 20, scope: !6558)
!6611 = !DILocation(line: 1070, column: 2, scope: !6558)
!6612 = !DILocation(line: 1089, column: 6, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6558, file: !6559, line: 1089, column: 6)
!6614 = !DILocation(line: 0, scope: !6613)
!6615 = !DILocation(line: 1089, column: 6, scope: !6558)
!6616 = !DILocation(line: 1090, column: 28, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6618, file: !6559, line: 1090, column: 7)
!6618 = distinct !DILexicalBlock(scope: !6613, file: !6559, line: 1089, column: 18)
!6619 = !DILocation(line: 1090, column: 44, scope: !6617)
!6620 = !DILocation(line: 1090, column: 7, scope: !6618)
!6621 = !DILocation(line: 1091, column: 24, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6617, file: !6559, line: 1090, column: 50)
!6623 = !DILocation(line: 1092, column: 3, scope: !6622)
!6624 = !DILocation(line: 1094, column: 23, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6613, file: !6559, line: 1093, column: 9)
!6626 = !DILocation(line: 1097, column: 2, scope: !6558)
!6627 = !DILocation(line: 1098, column: 1, scope: !6558)
!6628 = distinct !DISubprogram(name: "get_esf", scope: !6559, file: !6559, line: 894, type: !6629, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !6632)
!6629 = !DISubroutineType(types: !6630)
!6630 = !{!2834, !110, !110, !110, !6631}
!6631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!6632 = !{!6633, !6634, !6635, !6636, !6637, !6638}
!6633 = !DILocalVariable(name: "msp", arg: 1, scope: !6628, file: !6559, line: 894, type: !110)
!6634 = !DILocalVariable(name: "psp", arg: 2, scope: !6628, file: !6559, line: 894, type: !110)
!6635 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6628, file: !6559, line: 894, type: !110)
!6636 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6628, file: !6559, line: 895, type: !6631)
!6637 = !DILocalVariable(name: "alternative_state_exc", scope: !6628, file: !6559, line: 897, type: !334)
!6638 = !DILocalVariable(name: "ptr_esf", scope: !6628, file: !6559, line: 898, type: !2834)
!6639 = !DILocation(line: 0, scope: !6628)
!6640 = !DILocation(line: 900, column: 14, scope: !6628)
!6641 = !DILocation(line: 902, column: 49, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6628, file: !6559, line: 902, column: 6)
!6643 = !DILocation(line: 902, column: 6, scope: !6628)
!6644 = !DILocation(line: 983, column: 18, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6628, file: !6559, line: 983, column: 6)
!6646 = !DILocation(line: 991, column: 7, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6648, file: !6559, line: 990, column: 30)
!6648 = distinct !DILexicalBlock(scope: !6628, file: !6559, line: 990, column: 6)
!6649 = !DILocation(line: 998, column: 16, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6651, file: !6559, line: 995, column: 10)
!6651 = distinct !DILexicalBlock(scope: !6647, file: !6559, line: 991, column: 7)
!6652 = !DILocation(line: 1002, column: 2, scope: !6628)
!6653 = !DILocation(line: 1003, column: 1, scope: !6628)
!6654 = distinct !DISubprogram(name: "fault_handle", scope: !6559, file: !6559, line: 786, type: !6655, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !6657)
!6655 = !DISubroutineType(types: !6656)
!6656 = !{!110, !2834, !109, !6631}
!6657 = !{!6658, !6659, !6660, !6661}
!6658 = !DILocalVariable(name: "esf", arg: 1, scope: !6654, file: !6559, line: 786, type: !2834)
!6659 = !DILocalVariable(name: "fault", arg: 2, scope: !6654, file: !6559, line: 786, type: !109)
!6660 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6654, file: !6559, line: 786, type: !6631)
!6661 = !DILocalVariable(name: "reason", scope: !6654, file: !6559, line: 788, type: !110)
!6662 = !DILocation(line: 0, scope: !6654)
!6663 = !DILocation(line: 790, column: 15, scope: !6654)
!6664 = !DILocation(line: 792, column: 2, scope: !6654)
!6665 = !DILocation(line: 794, column: 12, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6654, file: !6559, line: 792, column: 17)
!6667 = !DILocation(line: 795, column: 3, scope: !6666)
!6668 = !DILocation(line: 800, column: 12, scope: !6666)
!6669 = !DILocation(line: 801, column: 3, scope: !6666)
!6670 = !DILocation(line: 803, column: 12, scope: !6666)
!6671 = !DILocation(line: 804, column: 3, scope: !6666)
!6672 = !DILocation(line: 806, column: 12, scope: !6666)
!6673 = !DILocation(line: 807, column: 3, scope: !6666)
!6674 = !DILocation(line: 814, column: 3, scope: !6666)
!6675 = !DILocation(line: 815, column: 3, scope: !6666)
!6676 = !DILocation(line: 829, column: 2, scope: !6654)
!6677 = distinct !DISubprogram(name: "hard_fault", scope: !6559, file: !6559, line: 709, type: !6678, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !6680)
!6678 = !DISubroutineType(types: !6679)
!6679 = !{!110, !2834, !6631}
!6680 = !{!6681, !6682, !6683}
!6681 = !DILocalVariable(name: "esf", arg: 1, scope: !6677, file: !6559, line: 709, type: !2834)
!6682 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6677, file: !6559, line: 709, type: !6631)
!6683 = !DILocalVariable(name: "reason", scope: !6677, file: !6559, line: 711, type: !110)
!6684 = !DILocation(line: 0, scope: !6677)
!6685 = !DILocation(line: 732, column: 15, scope: !6677)
!6686 = !DILocation(line: 734, column: 12, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6677, file: !6559, line: 734, column: 6)
!6688 = !DILocation(line: 734, column: 17, scope: !6687)
!6689 = !DILocation(line: 734, column: 41, scope: !6687)
!6690 = !DILocation(line: 734, column: 6, scope: !6677)
!6691 = !DILocation(line: 736, column: 19, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6687, file: !6559, line: 736, column: 13)
!6693 = !DILocation(line: 736, column: 49, scope: !6692)
!6694 = !DILocation(line: 736, column: 13, scope: !6687)
!6695 = !DILocation(line: 738, column: 19, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6692, file: !6559, line: 738, column: 13)
!6697 = !DILocation(line: 738, column: 24, scope: !6696)
!6698 = !DILocation(line: 738, column: 47, scope: !6696)
!6699 = !DILocation(line: 738, column: 13, scope: !6692)
!6700 = !DILocation(line: 740, column: 7, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6702, file: !6559, line: 740, column: 7)
!6702 = distinct !DILexicalBlock(scope: !6696, file: !6559, line: 738, column: 53)
!6703 = !DILocation(line: 740, column: 7, scope: !6702)
!6704 = !DILocation(line: 742, column: 24, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6701, file: !6559, line: 740, column: 38)
!6706 = !DILocation(line: 743, column: 3, scope: !6705)
!6707 = !DILocation(line: 743, column: 20, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6701, file: !6559, line: 743, column: 14)
!6709 = !DILocation(line: 743, column: 25, scope: !6708)
!6710 = !DILocation(line: 743, column: 52, scope: !6708)
!6711 = !DILocation(line: 743, column: 14, scope: !6701)
!6712 = !DILocation(line: 744, column: 13, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6708, file: !6559, line: 743, column: 58)
!6714 = !DILocation(line: 745, column: 3, scope: !6713)
!6715 = !DILocation(line: 745, column: 20, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6708, file: !6559, line: 745, column: 14)
!6717 = !DILocation(line: 745, column: 25, scope: !6716)
!6718 = !DILocation(line: 745, column: 52, scope: !6716)
!6719 = !DILocation(line: 745, column: 14, scope: !6708)
!6720 = !DILocation(line: 746, column: 13, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6716, file: !6559, line: 745, column: 58)
!6722 = !DILocation(line: 747, column: 3, scope: !6721)
!6723 = !DILocation(line: 747, column: 20, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6716, file: !6559, line: 747, column: 14)
!6725 = !DILocation(line: 747, column: 52, scope: !6724)
!6726 = !DILocation(line: 747, column: 14, scope: !6716)
!6727 = !DILocation(line: 748, column: 13, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6724, file: !6559, line: 747, column: 58)
!6729 = !DILocation(line: 754, column: 4, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6731, file: !6559, line: 754, column: 4)
!6731 = distinct !DILexicalBlock(scope: !6732, file: !6559, line: 754, column: 4)
!6732 = distinct !DILexicalBlock(scope: !6733, file: !6559, line: 754, column: 4)
!6733 = distinct !DILexicalBlock(scope: !6724, file: !6559, line: 753, column: 10)
!6734 = !DILocation(line: 758, column: 3, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6736, file: !6559, line: 758, column: 3)
!6736 = distinct !DILexicalBlock(scope: !6737, file: !6559, line: 758, column: 3)
!6737 = distinct !DILexicalBlock(scope: !6738, file: !6559, line: 758, column: 3)
!6738 = distinct !DILexicalBlock(scope: !6696, file: !6559, line: 757, column: 9)
!6739 = !DILocation(line: 766, column: 2, scope: !6677)
!6740 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6559, file: !6559, line: 229, type: !6655, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !6741)
!6741 = !{!6742, !6743, !6744, !6745, !6746, !6747, !6750}
!6742 = !DILocalVariable(name: "esf", arg: 1, scope: !6740, file: !6559, line: 229, type: !2834)
!6743 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6740, file: !6559, line: 229, type: !109)
!6744 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6740, file: !6559, line: 230, type: !6631)
!6745 = !DILocalVariable(name: "reason", scope: !6740, file: !6559, line: 232, type: !110)
!6746 = !DILocalVariable(name: "mmfar", scope: !6740, file: !6559, line: 233, type: !110)
!6747 = !DILocalVariable(name: "temp", scope: !6748, file: !6559, line: 254, type: !110)
!6748 = distinct !DILexicalBlock(scope: !6749, file: !6559, line: 244, column: 48)
!6749 = distinct !DILexicalBlock(scope: !6740, file: !6559, line: 244, column: 6)
!6750 = !DILocalVariable(name: "min_stack_ptr", scope: !6751, file: !6559, line: 309, type: !110)
!6751 = distinct !DILexicalBlock(scope: !6752, file: !6559, line: 308, column: 43)
!6752 = distinct !DILexicalBlock(scope: !6753, file: !6559, line: 308, column: 7)
!6753 = distinct !DILexicalBlock(scope: !6754, file: !6559, line: 289, column: 40)
!6754 = distinct !DILexicalBlock(scope: !6740, file: !6559, line: 288, column: 6)
!6755 = !DILocation(line: 0, scope: !6740)
!6756 = !DILocation(line: 237, column: 12, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6740, file: !6559, line: 237, column: 6)
!6758 = !DILocation(line: 241, column: 12, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6740, file: !6559, line: 241, column: 6)
!6760 = !DILocation(line: 244, column: 12, scope: !6749)
!6761 = !DILocation(line: 244, column: 17, scope: !6749)
!6762 = !DILocation(line: 244, column: 42, scope: !6749)
!6763 = !DILocation(line: 244, column: 6, scope: !6740)
!6764 = !DILocation(line: 254, column: 24, scope: !6748)
!6765 = !DILocation(line: 0, scope: !6748)
!6766 = !DILocation(line: 256, column: 13, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6748, file: !6559, line: 256, column: 7)
!6768 = !DILocation(line: 256, column: 18, scope: !6767)
!6769 = !DILocation(line: 256, column: 44, scope: !6767)
!6770 = !DILocation(line: 256, column: 7, scope: !6748)
!6771 = !DILocation(line: 259, column: 24, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6773, file: !6559, line: 259, column: 8)
!6773 = distinct !DILexicalBlock(scope: !6767, file: !6559, line: 256, column: 50)
!6774 = !DILocation(line: 259, column: 8, scope: !6773)
!6775 = !DILocation(line: 261, column: 15, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6772, file: !6559, line: 259, column: 30)
!6777 = !DILocation(line: 262, column: 4, scope: !6776)
!6778 = !DILocation(line: 265, column: 12, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6740, file: !6559, line: 265, column: 6)
!6780 = !DILocation(line: 269, column: 12, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6740, file: !6559, line: 269, column: 6)
!6782 = !DILocation(line: 288, column: 12, scope: !6754)
!6783 = !DILocation(line: 288, column: 17, scope: !6754)
!6784 = !DILocation(line: 288, column: 41, scope: !6754)
!6785 = !DILocation(line: 289, column: 9, scope: !6754)
!6786 = !DILocation(line: 289, column: 14, scope: !6754)
!6787 = !DILocation(line: 288, column: 6, scope: !6740)
!6788 = !DILocation(line: 308, column: 12, scope: !6752)
!6789 = !DILocation(line: 308, column: 17, scope: !6752)
!6790 = !DILocation(line: 308, column: 7, scope: !6753)
!6791 = !DILocation(line: 310, column: 6, scope: !6751)
!6792 = !DILocation(line: 309, column: 29, scope: !6751)
!6793 = !DILocation(line: 0, scope: !6751)
!6794 = !DILocation(line: 312, column: 8, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6751, file: !6559, line: 312, column: 8)
!6796 = !DILocation(line: 312, column: 8, scope: !6751)
!6797 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6798, file: !6243, line: 1099, type: !110)
!6798 = distinct !DISubprogram(name: "__set_PSP", scope: !6243, file: !6243, line: 1099, type: !6338, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !6799)
!6799 = !{!6797}
!6800 = !DILocation(line: 0, scope: !6798, inlinedAt: !6801)
!6801 = distinct !DILocation(line: 338, column: 5, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6795, file: !6559, line: 312, column: 23)
!6803 = !DILocation(line: 1101, column: 3, scope: !6798, inlinedAt: !6801)
!6804 = !{i64 3760692}
!6805 = !DILocation(line: 341, column: 4, scope: !6802)
!6806 = !DILocation(line: 342, column: 5, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6808, file: !6559, line: 342, column: 5)
!6808 = distinct !DILexicalBlock(scope: !6809, file: !6559, line: 342, column: 5)
!6809 = distinct !DILexicalBlock(scope: !6795, file: !6559, line: 341, column: 11)
!6810 = !DILocation(line: 342, column: 5, scope: !6808)
!6811 = !DILocation(line: 342, column: 5, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6807, file: !6559, line: 342, column: 5)
!6813 = !DILocation(line: 360, column: 12, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6740, file: !6559, line: 360, column: 6)
!6815 = !DILocation(line: 360, column: 17, scope: !6814)
!6816 = !DILocation(line: 360, column: 41, scope: !6814)
!6817 = !DILocation(line: 360, column: 6, scope: !6740)
!6818 = !DILocation(line: 361, column: 14, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6814, file: !6559, line: 360, column: 47)
!6820 = !DILocation(line: 362, column: 2, scope: !6819)
!6821 = !DILocation(line: 366, column: 12, scope: !6740)
!6822 = !DILocation(line: 369, column: 15, scope: !6740)
!6823 = !DILocation(line: 371, column: 2, scope: !6740)
!6824 = distinct !DISubprogram(name: "bus_fault", scope: !6559, file: !6559, line: 383, type: !6825, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !6827)
!6825 = !DISubroutineType(types: !6826)
!6826 = !{!109, !2834, !109, !6631}
!6827 = !{!6828, !6829, !6830, !6831, !6832}
!6828 = !DILocalVariable(name: "esf", arg: 1, scope: !6824, file: !6559, line: 383, type: !2834)
!6829 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6824, file: !6559, line: 383, type: !109)
!6830 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6824, file: !6559, line: 383, type: !6631)
!6831 = !DILocalVariable(name: "reason", scope: !6824, file: !6559, line: 385, type: !110)
!6832 = !DILocalVariable(name: "bfar", scope: !6833, file: !6559, line: 405, type: !110)
!6833 = distinct !DILexicalBlock(scope: !6834, file: !6559, line: 395, column: 42)
!6834 = distinct !DILexicalBlock(scope: !6824, file: !6559, line: 395, column: 6)
!6835 = !DILocation(line: 0, scope: !6824)
!6836 = !DILocation(line: 389, column: 11, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6824, file: !6559, line: 389, column: 6)
!6838 = !DILocation(line: 392, column: 11, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6824, file: !6559, line: 392, column: 6)
!6840 = !DILocation(line: 395, column: 11, scope: !6834)
!6841 = !DILocation(line: 395, column: 16, scope: !6834)
!6842 = !DILocation(line: 395, column: 6, scope: !6824)
!6843 = !DILocation(line: 405, column: 3, scope: !6833)
!6844 = !DILocation(line: 0, scope: !6833)
!6845 = !DILocation(line: 407, column: 13, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6833, file: !6559, line: 407, column: 7)
!6847 = !DILocation(line: 407, column: 18, scope: !6846)
!6848 = !DILocation(line: 407, column: 44, scope: !6846)
!6849 = !DILocation(line: 407, column: 7, scope: !6833)
!6850 = !DILocation(line: 411, column: 15, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6852, file: !6559, line: 409, column: 30)
!6852 = distinct !DILexicalBlock(scope: !6853, file: !6559, line: 409, column: 8)
!6853 = distinct !DILexicalBlock(scope: !6846, file: !6559, line: 407, column: 50)
!6854 = !DILocation(line: 412, column: 4, scope: !6851)
!6855 = !DILocation(line: 415, column: 11, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6824, file: !6559, line: 415, column: 6)
!6857 = !DILocation(line: 418, column: 12, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6824, file: !6559, line: 418, column: 6)
!6859 = !DILocation(line: 418, column: 17, scope: !6858)
!6860 = !DILocation(line: 418, column: 41, scope: !6858)
!6861 = !DILocation(line: 418, column: 6, scope: !6824)
!6862 = !DILocation(line: 423, column: 18, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6858, file: !6559, line: 423, column: 13)
!6864 = !DILocation(line: 524, column: 12, scope: !6824)
!6865 = !DILocation(line: 526, column: 15, scope: !6824)
!6866 = !DILocation(line: 528, column: 2, scope: !6824)
!6867 = distinct !DISubprogram(name: "usage_fault", scope: !6559, file: !6559, line: 539, type: !6868, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !6872)
!6868 = !DISubroutineType(types: !6869)
!6869 = !{!110, !6870}
!6870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6871, size: 32)
!6871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2835)
!6872 = !{!6873, !6874}
!6873 = !DILocalVariable(name: "esf", arg: 1, scope: !6867, file: !6559, line: 539, type: !6870)
!6874 = !DILocalVariable(name: "reason", scope: !6867, file: !6559, line: 541, type: !110)
!6875 = !DILocation(line: 0, scope: !6867)
!6876 = !DILocation(line: 546, column: 12, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6867, file: !6559, line: 546, column: 6)
!6878 = !DILocation(line: 549, column: 12, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6867, file: !6559, line: 549, column: 6)
!6880 = !DILocation(line: 567, column: 12, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6867, file: !6559, line: 567, column: 6)
!6882 = !DILocation(line: 570, column: 12, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6867, file: !6559, line: 570, column: 6)
!6884 = !DILocation(line: 573, column: 12, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6867, file: !6559, line: 573, column: 6)
!6886 = !DILocation(line: 576, column: 12, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6867, file: !6559, line: 576, column: 6)
!6888 = !DILocation(line: 581, column: 12, scope: !6867)
!6889 = !DILocation(line: 583, column: 2, scope: !6867)
!6890 = distinct !DISubprogram(name: "debug_monitor", scope: !6559, file: !6559, line: 632, type: !6891, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !6893)
!6891 = !DISubroutineType(types: !6892)
!6892 = !{null, !2834, !6631}
!6893 = !{!6894, !6895}
!6894 = !DILocalVariable(name: "esf", arg: 1, scope: !6890, file: !6559, line: 632, type: !2834)
!6895 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6890, file: !6559, line: 632, type: !6631)
!6896 = !DILocation(line: 0, scope: !6890)
!6897 = !DILocation(line: 634, column: 15, scope: !6890)
!6898 = !DILocation(line: 652, column: 1, scope: !6890)
!6899 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6559, file: !6559, line: 658, type: !6900, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !6902)
!6900 = !DISubroutineType(types: !6901)
!6901 = !{!334, !2834}
!6902 = !{!6903, !6904, !6905}
!6903 = !DILocalVariable(name: "esf", arg: 1, scope: !6899, file: !6559, line: 658, type: !2834)
!6904 = !DILocalVariable(name: "ret_addr", scope: !6899, file: !6559, line: 660, type: !2877)
!6905 = !DILocalVariable(name: "fault_insn", scope: !6899, file: !6559, line: 686, type: !181)
!6906 = !DILocation(line: 0, scope: !6899)
!6907 = !DILocation(line: 660, column: 46, scope: !6899)
!6908 = !DILocation(line: 660, column: 23, scope: !6899)
!6909 = !DILocation(line: 682, column: 11, scope: !6899)
!6910 = !DILocation(line: 271, column: 3, scope: !6911, inlinedAt: !6912)
!6911 = distinct !DISubprogram(name: "__DSB", scope: !6243, file: !6243, line: 269, type: !3169, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !2100)
!6912 = distinct !DILocation(line: 683, column: 2, scope: !6899)
!6913 = !{i64 3736827}
!6914 = !DILocation(line: 260, column: 3, scope: !6915, inlinedAt: !6916)
!6915 = distinct !DISubprogram(name: "__ISB", scope: !6243, file: !6243, line: 258, type: !3169, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !2100)
!6916 = distinct !DILocation(line: 684, column: 2, scope: !6899)
!6917 = !{i64 3736544}
!6918 = !DILocation(line: 686, column: 35, scope: !6899)
!6919 = !DILocation(line: 686, column: 24, scope: !6899)
!6920 = !DILocation(line: 688, column: 11, scope: !6899)
!6921 = !DILocation(line: 271, column: 3, scope: !6911, inlinedAt: !6922)
!6922 = distinct !DILocation(line: 689, column: 2, scope: !6899)
!6923 = !DILocation(line: 260, column: 3, scope: !6915, inlinedAt: !6924)
!6924 = distinct !DILocation(line: 690, column: 2, scope: !6899)
!6925 = !DILocation(line: 693, column: 45, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6899, file: !6559, line: 693, column: 6)
!6927 = !DILocation(line: 699, column: 1, scope: !6899)
!6928 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6559, file: !6559, line: 1107, type: !3169, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2806, retainedNodes: !2100)
!6929 = !DILocation(line: 1111, column: 11, scope: !6928)
!6930 = !DILocation(line: 1136, column: 1, scope: !6928)
!6931 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6932, file: !6932, line: 26, type: !3169, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2878, retainedNodes: !6933)
!6932 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6933 = !{!6934}
!6934 = !DILocalVariable(name: "irq", scope: !6931, file: !6932, line: 28, type: !109)
!6935 = !DILocation(line: 0, scope: !6931)
!6936 = !DILocation(line: 30, column: 2, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6931, file: !6932, line: 30, column: 2)
!6938 = !DILocation(line: 31, column: 3, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6940, file: !6932, line: 30, column: 39)
!6940 = distinct !DILexicalBlock(scope: !6937, file: !6932, line: 30, column: 2)
!6941 = !DILocation(line: 30, column: 35, scope: !6940)
!6942 = !DILocation(line: 30, column: 13, scope: !6940)
!6943 = distinct !{!6943, !6936, !6944}
!6944 = !DILocation(line: 32, column: 2, scope: !6937)
!6945 = !DILocation(line: 33, column: 1, scope: !6931)
!6946 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !536, file: !536, line: 1814, type: !6283, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2878, retainedNodes: !6947)
!6947 = !{!6948, !6949}
!6948 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6946, file: !536, line: 1814, type: !791)
!6949 = !DILocalVariable(name: "priority", arg: 2, scope: !6946, file: !536, line: 1814, type: !110)
!6950 = !DILocation(line: 0, scope: !6946)
!6951 = !DILocation(line: 1816, column: 7, scope: !6946)
!6952 = !DILocation(line: 0, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6946, file: !536, line: 1816, column: 7)
!6954 = !DILocation(line: 1824, column: 1, scope: !6946)
!6955 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6956, file: !6956, line: 27, type: !6957, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7071)
!6956 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6957 = !DISubroutineType(types: !6958)
!6958 = !{null, !6959}
!6959 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !6960)
!6960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6961, size: 32)
!6961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !6962)
!6962 = !{!6963, !7021, !7033, !7034, !7035, !7042, !7043, !7044, !7045, !7051, !7066}
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6961, file: !145, line: 247, baseType: !6964, size: 384)
!6964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !6965)
!6965 = !{!6966, !6990, !6997, !6998, !6999, !7008, !7009, !7010}
!6966 = !DIDerivedType(tag: DW_TAG_member, scope: !6964, file: !145, line: 60, baseType: !6967, size: 64)
!6967 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6964, file: !145, line: 60, size: 64, elements: !6968)
!6968 = !{!6969, !6984}
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6967, file: !145, line: 61, baseType: !6970, size: 64)
!6970 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !6971)
!6971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !6972)
!6972 = !{!6973, !6979}
!6973 = !DIDerivedType(tag: DW_TAG_member, scope: !6971, file: !128, line: 38, baseType: !6974, size: 32)
!6974 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6971, file: !128, line: 38, size: 32, elements: !6975)
!6975 = !{!6976, !6978}
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6974, file: !128, line: 39, baseType: !6977, size: 32)
!6977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6971, size: 32)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6974, file: !128, line: 40, baseType: !6977, size: 32)
!6979 = !DIDerivedType(tag: DW_TAG_member, scope: !6971, file: !128, line: 42, baseType: !6980, size: 32, offset: 32)
!6980 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6971, file: !128, line: 42, size: 32, elements: !6981)
!6981 = !{!6982, !6983}
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6980, file: !128, line: 43, baseType: !6977, size: 32)
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6980, file: !128, line: 44, baseType: !6977, size: 32)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6967, file: !145, line: 62, baseType: !6985, size: 64)
!6985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !6986)
!6986 = !{!6987}
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6985, file: !157, line: 50, baseType: !6988, size: 64)
!6988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6989, size: 64, elements: !162)
!6989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6985, size: 32)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6964, file: !145, line: 68, baseType: !6991, size: 32, offset: 64)
!6991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6992, size: 32)
!6992 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !6993)
!6993 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !6994)
!6994 = !{!6995}
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6993, file: !123, line: 232, baseType: !6996, size: 64)
!6996 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !6971)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6964, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6964, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!6999 = !DIDerivedType(tag: DW_TAG_member, scope: !6964, file: !145, line: 90, baseType: !7000, size: 16, offset: 112)
!7000 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6964, file: !145, line: 90, size: 16, elements: !7001)
!7001 = !{!7002, !7007}
!7002 = !DIDerivedType(tag: DW_TAG_member, scope: !7000, file: !145, line: 91, baseType: !7003, size: 16)
!7003 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7000, file: !145, line: 91, size: 16, elements: !7004)
!7004 = !{!7005, !7006}
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7003, file: !145, line: 96, baseType: !177, size: 8)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7003, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7000, file: !145, line: 100, baseType: !181, size: 16)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6964, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6964, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6964, file: !145, line: 131, baseType: !7011, size: 192, offset: 192)
!7011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !7012)
!7012 = !{!7013, !7014, !7020}
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7011, file: !123, line: 245, baseType: !6970, size: 64)
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7011, file: !123, line: 246, baseType: !7015, size: 32, offset: 64)
!7015 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !7016)
!7016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7017, size: 32)
!7017 = !DISubroutineType(types: !7018)
!7018 = !{null, !7019}
!7019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7011, size: 32)
!7020 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7011, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6961, file: !145, line: 250, baseType: !7022, size: 288, offset: 384)
!7022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !7023)
!7023 = !{!7024, !7025, !7026, !7027, !7028, !7029, !7030, !7031, !7032}
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7022, file: !198, line: 26, baseType: !110, size: 32)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7022, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7022, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7022, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7022, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7022, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7022, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7022, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7022, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!7033 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6961, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6961, file: !145, line: 256, baseType: !6992, size: 64, offset: 704)
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !6961, file: !145, line: 271, baseType: !7036, size: 128, offset: 768)
!7036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !7037)
!7037 = !{!7038, !7039, !7040, !7041}
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !7036, file: !145, line: 35, baseType: !215, size: 32)
!7039 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !7036, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !7036, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !7036, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !6961, file: !145, line: 274, baseType: !6960, size: 32, offset: 896)
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6961, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6961, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6961, file: !145, line: 300, baseType: !7046, size: 96, offset: 1216)
!7046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !7047)
!7047 = !{!7048, !7049, !7050}
!7048 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7046, file: !145, line: 153, baseType: !22, size: 32)
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7046, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7046, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6961, file: !145, line: 325, baseType: !7052, size: 32, offset: 1312)
!7052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7053, size: 32)
!7053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !7054)
!7054 = !{!7055, !7061, !7062}
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7053, file: !119, line: 5074, baseType: !7056, size: 96)
!7056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !7057)
!7057 = !{!7058, !7059, !7060}
!7058 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7056, file: !244, line: 57, baseType: !247, size: 32)
!7059 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7056, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7056, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7053, file: !119, line: 5075, baseType: !6992, size: 64, offset: 96)
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7053, file: !119, line: 5076, baseType: !7063, size: 32, offset: 160)
!7063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !7064)
!7064 = !{!7065}
!7065 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7063, file: !254, line: 52, baseType: !22, size: 32)
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6961, file: !145, line: 343, baseType: !7067, size: 64, offset: 1344)
!7067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !7068)
!7068 = !{!7069, !7070}
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7067, file: !198, line: 63, baseType: !110, size: 32)
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7067, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!7071 = !{!7072}
!7072 = !DILocalVariable(name: "thread", arg: 1, scope: !6955, file: !6956, line: 27, type: !6959)
!7073 = !DILocation(line: 0, scope: !6955)
!7074 = !DILocation(line: 29, column: 6, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !6955, file: !6956, line: 29, column: 6)
!7076 = !DILocation(line: 29, column: 15, scope: !7075)
!7077 = !DILocation(line: 29, column: 6, scope: !6955)
!7078 = !DILocation(line: 1031, column: 3, scope: !7079, inlinedAt: !7082)
!7079 = distinct !DISubprogram(name: "__get_IPSR", scope: !6243, file: !6243, line: 1027, type: !3451, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !7080)
!7080 = !{!7081}
!7081 = !DILocalVariable(name: "result", scope: !7079, file: !6243, line: 1029, type: !110)
!7082 = distinct !DILocation(line: 48, column: 10, scope: !7083, inlinedAt: !7087)
!7083 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7084, file: !7084, line: 46, type: !7085, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2923, retainedNodes: !2100)
!7084 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7085 = !DISubroutineType(types: !7086)
!7086 = !{!334}
!7087 = distinct !DILocation(line: 30, column: 7, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7089, file: !6956, line: 30, column: 7)
!7089 = distinct !DILexicalBlock(scope: !7075, file: !6956, line: 29, column: 26)
!7090 = !{i64 3725675}
!7091 = !DILocation(line: 0, scope: !7079, inlinedAt: !7082)
!7092 = !DILocation(line: 48, column: 9, scope: !7083, inlinedAt: !7087)
!7093 = !DILocation(line: 30, column: 7, scope: !7089)
!7094 = !DILocation(line: 42, column: 14, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7088, file: !6956, line: 30, column: 25)
!7096 = !DILocation(line: 48, column: 15, scope: !7095)
!7097 = !DILocation(line: 49, column: 3, scope: !7095)
!7098 = !DILocation(line: 52, column: 2, scope: !6955)
!7099 = !DILocation(line: 53, column: 1, scope: !6955)
!7100 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !394, file: !394, line: 127, type: !3169, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !2100)
!7101 = !DILocation(line: 134, column: 2, scope: !7100)
!7102 = !DILocation(line: 156, column: 1, scope: !7100)
!7103 = !DILocation(line: 0, scope: !393)
!7104 = !DILocation(line: 289, column: 36, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !393, file: !394, line: 285, column: 2)
!7106 = !DILocation(line: 289, column: 42, scope: !7105)
!7107 = !DILocation(line: 300, column: 36, scope: !393)
!7108 = !DILocation(line: 301, column: 35, scope: !393)
!7109 = !DILocation(line: 302, column: 37, scope: !393)
!7110 = !DILocation(line: 311, column: 2, scope: !393)
!7111 = !DILocation(line: 316, column: 1, scope: !393)
!7112 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !564, file: !564, line: 180, type: !3169, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !2100)
!7113 = !DILocation(line: 188, column: 12, scope: !7112)
!7114 = !DILocation(line: 271, column: 3, scope: !7115, inlinedAt: !7116)
!7115 = distinct !DISubprogram(name: "__DSB", scope: !6243, file: !6243, line: 269, type: !3169, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !2100)
!7116 = distinct !DILocation(line: 192, column: 2, scope: !7112)
!7117 = !{i64 3916565}
!7118 = !DILocation(line: 260, column: 3, scope: !7119, inlinedAt: !7120)
!7119 = distinct !DISubprogram(name: "__ISB", scope: !6243, file: !6243, line: 258, type: !3169, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !2100)
!7120 = distinct !DILocation(line: 193, column: 2, scope: !7112)
!7121 = !{i64 3916282}
!7122 = !DILocation(line: 194, column: 1, scope: !7112)
!7123 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !564, file: !564, line: 199, type: !3169, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !2100)
!7124 = !DILocation(line: 282, column: 3, scope: !7125, inlinedAt: !7126)
!7125 = distinct !DISubprogram(name: "__DMB", scope: !6243, file: !6243, line: 280, type: !3169, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !2100)
!7126 = distinct !DILocation(line: 202, column: 2, scope: !7123)
!7127 = !{i64 3916841}
!7128 = !DILocation(line: 205, column: 12, scope: !7123)
!7129 = !DILocation(line: 206, column: 1, scope: !7123)
!7130 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !564, file: !564, line: 275, type: !7131, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7144)
!7131 = !DISubroutineType(types: !7132)
!7132 = !{null, !7133, !1873, !6526, !6526}
!7133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7134, size: 32)
!7134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7135)
!7135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !515, line: 52, size: 96, elements: !7136)
!7136 = !{!7137, !7138, !7139}
!7137 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7135, file: !515, line: 53, baseType: !22, size: 32)
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7135, file: !515, line: 54, baseType: !235, size: 32, offset: 32)
!7139 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7135, file: !515, line: 55, baseType: !7140, size: 32, offset: 64)
!7140 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !521, line: 151, baseType: !7141)
!7141 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !521, line: 149, size: 32, elements: !7142)
!7142 = !{!7143}
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7141, file: !521, line: 150, baseType: !110, size: 32)
!7144 = !{!7145, !7146, !7147, !7148}
!7145 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7130, file: !564, line: 276, type: !7133)
!7146 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7130, file: !564, line: 276, type: !1873)
!7147 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7130, file: !564, line: 277, type: !6526)
!7148 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7130, file: !564, line: 277, type: !6526)
!7149 = !DILocation(line: 0, scope: !7130)
!7150 = !DILocation(line: 279, column: 6, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7130, file: !564, line: 279, column: 6)
!7152 = !DILocation(line: 280, column: 57, scope: !7151)
!7153 = !DILocation(line: 279, column: 6, scope: !7130)
!7154 = !DILocation(line: 282, column: 3, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7156, file: !564, line: 282, column: 3)
!7156 = distinct !DILexicalBlock(scope: !7157, file: !564, line: 282, column: 3)
!7157 = distinct !DILexicalBlock(scope: !7158, file: !564, line: 282, column: 3)
!7158 = distinct !DILexicalBlock(scope: !7151, file: !564, line: 280, column: 69)
!7159 = !DILocation(line: 285, column: 1, scope: !7130)
!7160 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7161, file: !7161, line: 220, type: !7162, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7164)
!7161 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7162 = !DISubroutineType(types: !7163)
!7163 = !{!109, !7133, !1873, !6526, !6526}
!7164 = !{!7165, !7166, !7167, !7168, !7169}
!7165 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7160, file: !7161, line: 221, type: !7133)
!7166 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7160, file: !7161, line: 221, type: !1873)
!7167 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7160, file: !7161, line: 222, type: !6526)
!7168 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7160, file: !7161, line: 223, type: !6526)
!7169 = !DILocalVariable(name: "mpu_reg_index", scope: !7160, file: !7161, line: 225, type: !109)
!7170 = !DILocation(line: 0, scope: !7160)
!7171 = !DILocation(line: 225, column: 22, scope: !7160)
!7172 = !DILocation(line: 233, column: 18, scope: !7160)
!7173 = !DILocation(line: 236, column: 23, scope: !7160)
!7174 = !DILocation(line: 236, column: 21, scope: !7160)
!7175 = !DILocation(line: 238, column: 2, scope: !7160)
!7176 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !564, file: !564, line: 105, type: !7177, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7179)
!7177 = !DISubroutineType(types: !7178)
!7178 = !{!109, !7133, !167, !167, !334}
!7179 = !{!7180, !7181, !7182, !7183, !7184, !7185}
!7180 = !DILocalVariable(name: "regions", arg: 1, scope: !7176, file: !564, line: 106, type: !7133)
!7181 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7176, file: !564, line: 106, type: !167)
!7182 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7176, file: !564, line: 106, type: !167)
!7183 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7176, file: !564, line: 107, type: !334)
!7184 = !DILocalVariable(name: "i", scope: !7176, file: !564, line: 109, type: !109)
!7185 = !DILocalVariable(name: "reg_index", scope: !7176, file: !564, line: 110, type: !109)
!7186 = !DILocation(line: 0, scope: !7176)
!7187 = !DILocation(line: 110, column: 18, scope: !7176)
!7188 = !DILocation(line: 112, column: 16, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7190, file: !564, line: 112, column: 2)
!7190 = distinct !DILexicalBlock(scope: !7176, file: !564, line: 112, column: 2)
!7191 = !DILocation(line: 112, column: 2, scope: !7190)
!7192 = !DILocation(line: 113, column: 7, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7194, file: !564, line: 113, column: 7)
!7194 = distinct !DILexicalBlock(scope: !7189, file: !564, line: 112, column: 36)
!7195 = !DILocation(line: 113, column: 18, scope: !7193)
!7196 = !DILocation(line: 113, column: 23, scope: !7193)
!7197 = !DILocation(line: 113, column: 7, scope: !7194)
!7198 = !DILocation(line: 118, column: 23, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7194, file: !564, line: 118, column: 7)
!7200 = !DILocation(line: 119, column: 7, scope: !7199)
!7201 = !DILocation(line: 118, column: 7, scope: !7194)
!7202 = !DILocation(line: 124, column: 36, scope: !7194)
!7203 = !DILocation(line: 124, column: 15, scope: !7194)
!7204 = !DILocation(line: 126, column: 17, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7194, file: !564, line: 126, column: 7)
!7206 = !DILocation(line: 126, column: 7, scope: !7194)
!7207 = !DILocation(line: 131, column: 12, scope: !7194)
!7208 = !DILocation(line: 132, column: 2, scope: !7194)
!7209 = !DILocation(line: 112, column: 32, scope: !7189)
!7210 = distinct !{!7210, !7191, !7211}
!7211 = !DILocation(line: 132, column: 2, scope: !7190)
!7212 = !DILocation(line: 135, column: 1, scope: !7176)
!7213 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7161, file: !7161, line: 63, type: !7214, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7216)
!7214 = !DISubroutineType(types: !7215)
!7215 = !{!109, !7133}
!7216 = !{!7217, !7218}
!7217 = !DILocalVariable(name: "part", arg: 1, scope: !7213, file: !7161, line: 63, type: !7133)
!7218 = !DILocalVariable(name: "partition_is_valid", scope: !7213, file: !7161, line: 70, type: !109)
!7219 = !DILocation(line: 0, scope: !7213)
!7220 = !DILocation(line: 71, column: 11, scope: !7213)
!7221 = !DILocation(line: 71, column: 37, scope: !7213)
!7222 = !{i32 0, i32 33}
!7223 = !DILocation(line: 72, column: 3, scope: !7213)
!7224 = !DILocation(line: 71, column: 30, scope: !7213)
!7225 = !DILocation(line: 75, column: 11, scope: !7213)
!7226 = !DILocation(line: 75, column: 17, scope: !7213)
!7227 = !DILocation(line: 75, column: 38, scope: !7213)
!7228 = !DILocation(line: 77, column: 2, scope: !7213)
!7229 = distinct !DISubprogram(name: "mpu_configure_region", scope: !564, file: !564, line: 79, type: !7230, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7232)
!7230 = !DISubroutineType(types: !7231)
!7231 = !{!109, !1873, !7133}
!7232 = !{!7233, !7234, !7235}
!7233 = !DILocalVariable(name: "index", arg: 1, scope: !7229, file: !564, line: 79, type: !1873)
!7234 = !DILocalVariable(name: "new_region", arg: 2, scope: !7229, file: !564, line: 80, type: !7133)
!7235 = !DILocalVariable(name: "region_conf", scope: !7229, file: !564, line: 82, type: !553)
!7236 = !DILocation(line: 0, scope: !7229)
!7237 = !DILocation(line: 82, column: 2, scope: !7229)
!7238 = !DILocation(line: 82, column: 24, scope: !7229)
!7239 = !DILocation(line: 87, column: 33, scope: !7229)
!7240 = !DILocation(line: 87, column: 14, scope: !7229)
!7241 = !DILocation(line: 87, column: 19, scope: !7229)
!7242 = !DILocation(line: 91, column: 55, scope: !7229)
!7243 = !DILocation(line: 92, column: 16, scope: !7229)
!7244 = !DILocation(line: 92, column: 53, scope: !7229)
!7245 = !DILocation(line: 91, column: 2, scope: !7229)
!7246 = !DILocation(line: 95, column: 9, scope: !7229)
!7247 = !DILocation(line: 97, column: 1, scope: !7229)
!7248 = !DILocation(line: 95, column: 2, scope: !7229)
!7249 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7161, file: !7161, line: 113, type: !7250, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7255)
!7250 = !DISubroutineType(types: !7251)
!7251 = !{null, !7252, !7253, !110, !110}
!7252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 32)
!7253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7254, size: 32)
!7254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7140)
!7255 = !{!7256, !7257, !7258, !7259}
!7256 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7249, file: !7161, line: 114, type: !7252)
!7257 = !DILocalVariable(name: "attr", arg: 2, scope: !7249, file: !7161, line: 115, type: !7253)
!7258 = !DILocalVariable(name: "base", arg: 3, scope: !7249, file: !7161, line: 115, type: !110)
!7259 = !DILocalVariable(name: "size", arg: 4, scope: !7249, file: !7161, line: 115, type: !110)
!7260 = !DILocation(line: 0, scope: !7249)
!7261 = !DILocation(line: 127, column: 23, scope: !7249)
!7262 = !DILocation(line: 127, column: 35, scope: !7249)
!7263 = !DILocation(line: 127, column: 33, scope: !7249)
!7264 = !DILocation(line: 127, column: 10, scope: !7249)
!7265 = !DILocation(line: 127, column: 15, scope: !7249)
!7266 = !DILocation(line: 129, column: 1, scope: !7249)
!7267 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !564, file: !564, line: 57, type: !7268, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7270)
!7268 = !DISubroutineType(types: !7269)
!7269 = !{!109, !1873, !551}
!7270 = !{!7271, !7272}
!7271 = !DILocalVariable(name: "index", arg: 1, scope: !7267, file: !564, line: 57, type: !1873)
!7272 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7267, file: !564, line: 58, type: !551)
!7273 = !DILocation(line: 0, scope: !7267)
!7274 = !DILocation(line: 61, column: 6, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7267, file: !564, line: 61, column: 6)
!7276 = !DILocation(line: 61, column: 12, scope: !7275)
!7277 = !DILocation(line: 61, column: 6, scope: !7267)
!7278 = !DILocation(line: 71, column: 2, scope: !7267)
!7279 = !DILocation(line: 73, column: 2, scope: !7267)
!7280 = !DILocation(line: 74, column: 1, scope: !7267)
!7281 = distinct !DISubprogram(name: "region_init", scope: !7161, file: !7161, line: 29, type: !7282, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7284)
!7282 = !DISubroutineType(types: !7283)
!7283 = !{null, !6526, !551}
!7284 = !{!7285, !7286}
!7285 = !DILocalVariable(name: "index", arg: 1, scope: !7281, file: !7161, line: 29, type: !6526)
!7286 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7281, file: !7161, line: 30, type: !551)
!7287 = !DILocation(line: 0, scope: !7281)
!7288 = !DILocation(line: 33, column: 2, scope: !7281)
!7289 = !DILocation(line: 47, column: 28, scope: !7281)
!7290 = !DILocation(line: 47, column: 33, scope: !7281)
!7291 = !DILocation(line: 48, column: 26, scope: !7281)
!7292 = !DILocation(line: 47, column: 12, scope: !7281)
!7293 = !DILocation(line: 49, column: 32, scope: !7281)
!7294 = !DILocation(line: 49, column: 37, scope: !7281)
!7295 = !DILocation(line: 49, column: 12, scope: !7281)
!7296 = !DILocation(line: 53, column: 1, scope: !7281)
!7297 = distinct !DISubprogram(name: "set_region_number", scope: !7298, file: !7298, line: 32, type: !6338, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7299)
!7298 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7299 = !{!7300}
!7300 = !DILocalVariable(name: "index", arg: 1, scope: !7297, file: !7298, line: 32, type: !110)
!7301 = !DILocation(line: 0, scope: !7297)
!7302 = !DILocation(line: 34, column: 11, scope: !7297)
!7303 = !DILocation(line: 35, column: 1, scope: !7297)
!7304 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7161, file: !7161, line: 88, type: !7305, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7307)
!7305 = !DISubroutineType(types: !7306)
!7306 = !{!110, !110}
!7307 = !{!7308}
!7308 = !DILocalVariable(name: "size", arg: 1, scope: !7304, file: !7161, line: 88, type: !110)
!7309 = !DILocation(line: 0, scope: !7304)
!7310 = !DILocation(line: 91, column: 11, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7304, file: !7161, line: 91, column: 6)
!7312 = !DILocation(line: 91, column: 6, scope: !7304)
!7313 = !DILocation(line: 100, column: 11, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7304, file: !7161, line: 100, column: 6)
!7315 = !DILocation(line: 100, column: 6, scope: !7304)
!7316 = !DILocation(line: 104, column: 35, scope: !7304)
!7317 = !DILocation(line: 104, column: 16, scope: !7304)
!7318 = !DILocation(line: 104, column: 50, scope: !7304)
!7319 = !DILocation(line: 104, column: 72, scope: !7304)
!7320 = !DILocation(line: 104, column: 2, scope: !7304)
!7321 = !DILocation(line: 106, column: 1, scope: !7304)
!7322 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !564, file: !564, line: 307, type: !7323, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7325)
!7323 = !DISubroutineType(types: !7324)
!7324 = !{null, !7133, !167}
!7325 = !{!7326, !7327}
!7326 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7322, file: !564, line: 308, type: !7133)
!7327 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7322, file: !564, line: 308, type: !167)
!7328 = !DILocation(line: 0, scope: !7322)
!7329 = !DILocation(line: 310, column: 6, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7322, file: !564, line: 310, column: 6)
!7331 = !DILocation(line: 311, column: 3, scope: !7330)
!7332 = !DILocation(line: 310, column: 6, scope: !7322)
!7333 = !DILocation(line: 313, column: 3, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7335, file: !564, line: 313, column: 3)
!7335 = distinct !DILexicalBlock(scope: !7336, file: !564, line: 313, column: 3)
!7336 = distinct !DILexicalBlock(scope: !7337, file: !564, line: 313, column: 3)
!7337 = distinct !DILexicalBlock(scope: !7330, file: !564, line: 311, column: 15)
!7338 = !DILocation(line: 316, column: 1, scope: !7322)
!7339 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7161, file: !7161, line: 249, type: !7340, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7342)
!7340 = !DISubroutineType(types: !7341)
!7341 = !{!109, !7133, !167}
!7342 = !{!7343, !7344, !7345, !7346}
!7343 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7339, file: !7161, line: 250, type: !7133)
!7344 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7339, file: !7161, line: 250, type: !167)
!7345 = !DILocalVariable(name: "mpu_reg_index", scope: !7339, file: !7161, line: 252, type: !109)
!7346 = !DILocalVariable(name: "i", scope: !7347, file: !7161, line: 264, type: !109)
!7347 = distinct !DILexicalBlock(scope: !7348, file: !7161, line: 264, column: 3)
!7348 = distinct !DILexicalBlock(scope: !7349, file: !7161, line: 261, column: 32)
!7349 = distinct !DILexicalBlock(scope: !7339, file: !7161, line: 261, column: 6)
!7350 = !DILocation(line: 0, scope: !7339)
!7351 = !DILocation(line: 252, column: 22, scope: !7339)
!7352 = !DILocation(line: 258, column: 18, scope: !7339)
!7353 = !DILocation(line: 261, column: 20, scope: !7349)
!7354 = !DILocation(line: 261, column: 6, scope: !7339)
!7355 = !DILocation(line: 0, scope: !7347)
!7356 = !DILocation(line: 265, column: 4, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7358, file: !7161, line: 264, column: 59)
!7358 = distinct !DILexicalBlock(scope: !7347, file: !7161, line: 264, column: 3)
!7359 = !DILocation(line: 264, column: 55, scope: !7358)
!7360 = !DILocation(line: 264, column: 33, scope: !7358)
!7361 = !DILocation(line: 264, column: 3, scope: !7347)
!7362 = distinct !{!7362, !7361, !7363}
!7363 = !DILocation(line: 266, column: 3, scope: !7347)
!7364 = !DILocation(line: 269, column: 2, scope: !7339)
!7365 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7366, file: !7366, line: 218, type: !6338, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7367)
!7366 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7367 = !{!7368}
!7368 = !DILocalVariable(name: "rnr", arg: 1, scope: !7365, file: !7366, line: 218, type: !110)
!7369 = !DILocation(line: 0, scope: !7365)
!7370 = !DILocation(line: 220, column: 12, scope: !7365)
!7371 = !DILocation(line: 221, column: 13, scope: !7365)
!7372 = !DILocation(line: 222, column: 1, scope: !7365)
!7373 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !564, file: !564, line: 326, type: !7374, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !531, retainedNodes: !7376)
!7374 = !DISubroutineType(types: !7375)
!7375 = !{!109}
!7376 = !{!7377}
!7377 = !DILocalVariable(name: "r_index", scope: !7373, file: !564, line: 328, type: !110)
!7378 = !DILocation(line: 330, column: 17, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7373, file: !564, line: 330, column: 6)
!7380 = !DILocation(line: 330, column: 29, scope: !7379)
!7381 = !DILocation(line: 330, column: 6, scope: !7373)
!7382 = !DILocation(line: 337, column: 3, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7384, file: !564, line: 337, column: 3)
!7384 = distinct !DILexicalBlock(scope: !7385, file: !564, line: 337, column: 3)
!7385 = distinct !DILexicalBlock(scope: !7386, file: !564, line: 337, column: 3)
!7386 = distinct !DILexicalBlock(scope: !7379, file: !564, line: 330, column: 50)
!7387 = !DILocation(line: 347, column: 2, scope: !7373)
!7388 = !DILocation(line: 0, scope: !7373)
!7389 = !DILocation(line: 364, column: 29, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7391, file: !564, line: 364, column: 2)
!7391 = distinct !DILexicalBlock(scope: !7373, file: !564, line: 364, column: 2)
!7392 = !DILocation(line: 364, column: 2, scope: !7391)
!7393 = !DILocation(line: 365, column: 25, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7390, file: !564, line: 364, column: 66)
!7395 = !DILocation(line: 365, column: 3, scope: !7394)
!7396 = !DILocation(line: 364, column: 62, scope: !7390)
!7397 = distinct !{!7397, !7392, !7398}
!7398 = !DILocation(line: 366, column: 2, scope: !7391)
!7399 = !DILocation(line: 369, column: 23, scope: !7373)
!7400 = !DILocation(line: 369, column: 21, scope: !7373)
!7401 = !DILocation(line: 372, column: 2, scope: !7373)
!7402 = !DILocation(line: 433, column: 2, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7404, file: !564, line: 433, column: 2)
!7404 = distinct !DILexicalBlock(scope: !7373, file: !564, line: 433, column: 2)
!7405 = !DILocation(line: 433, column: 2, scope: !7404)
!7406 = !DILocation(line: 433, column: 2, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7403, file: !564, line: 433, column: 2)
!7408 = !DILocation(line: 444, column: 1, scope: !7373)
!7409 = distinct !DISubprogram(name: "strcpy", scope: !7410, file: !7410, line: 20, type: !7411, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7415)
!7410 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7411 = !DISubroutineType(types: !7412)
!7412 = !{!1165, !7413, !7414}
!7413 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1165)
!7414 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !324)
!7415 = !{!7416, !7417, !7418}
!7416 = !DILocalVariable(name: "d", arg: 1, scope: !7409, file: !7410, line: 20, type: !7413)
!7417 = !DILocalVariable(name: "s", arg: 2, scope: !7409, file: !7410, line: 20, type: !7414)
!7418 = !DILocalVariable(name: "dest", scope: !7409, file: !7410, line: 22, type: !1165)
!7419 = !DILocation(line: 0, scope: !7409)
!7420 = !DILocation(line: 24, column: 9, scope: !7409)
!7421 = !DILocation(line: 24, column: 12, scope: !7409)
!7422 = !DILocation(line: 24, column: 2, scope: !7409)
!7423 = !DILocation(line: 25, column: 6, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7409, file: !7410, line: 24, column: 21)
!7425 = !DILocation(line: 26, column: 4, scope: !7424)
!7426 = !DILocation(line: 27, column: 4, scope: !7424)
!7427 = distinct !{!7427, !7422, !7428}
!7428 = !DILocation(line: 28, column: 2, scope: !7409)
!7429 = !DILocation(line: 30, column: 5, scope: !7409)
!7430 = !DILocation(line: 32, column: 2, scope: !7409)
!7431 = distinct !DISubprogram(name: "strncpy", scope: !7410, file: !7410, line: 42, type: !7432, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7434)
!7432 = !DISubroutineType(types: !7433)
!7433 = !{!1165, !7413, !7414, !235}
!7434 = !{!7435, !7436, !7437, !7438}
!7435 = !DILocalVariable(name: "d", arg: 1, scope: !7431, file: !7410, line: 42, type: !7413)
!7436 = !DILocalVariable(name: "s", arg: 2, scope: !7431, file: !7410, line: 42, type: !7414)
!7437 = !DILocalVariable(name: "n", arg: 3, scope: !7431, file: !7410, line: 42, type: !235)
!7438 = !DILocalVariable(name: "dest", scope: !7431, file: !7410, line: 44, type: !1165)
!7439 = !DILocation(line: 0, scope: !7431)
!7440 = !DILocation(line: 46, column: 12, scope: !7431)
!7441 = !DILocation(line: 46, column: 17, scope: !7431)
!7442 = !DILocation(line: 46, column: 20, scope: !7431)
!7443 = !DILocation(line: 46, column: 23, scope: !7431)
!7444 = !DILocation(line: 46, column: 2, scope: !7431)
!7445 = !DILocation(line: 47, column: 6, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7431, file: !7410, line: 46, column: 32)
!7447 = !DILocation(line: 48, column: 4, scope: !7446)
!7448 = !DILocation(line: 49, column: 4, scope: !7446)
!7449 = !DILocation(line: 50, column: 4, scope: !7446)
!7450 = distinct !{!7450, !7444, !7451}
!7451 = !DILocation(line: 51, column: 2, scope: !7431)
!7452 = !DILocation(line: 54, column: 6, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7431, file: !7410, line: 53, column: 16)
!7454 = !DILocation(line: 55, column: 4, scope: !7453)
!7455 = !DILocation(line: 56, column: 4, scope: !7453)
!7456 = !DILocation(line: 53, column: 11, scope: !7431)
!7457 = !DILocation(line: 53, column: 2, scope: !7431)
!7458 = distinct !{!7458, !7457, !7459}
!7459 = !DILocation(line: 57, column: 2, scope: !7431)
!7460 = !DILocation(line: 59, column: 2, scope: !7431)
!7461 = distinct !DISubprogram(name: "strchr", scope: !7410, file: !7410, line: 69, type: !7462, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7464)
!7462 = !DISubroutineType(types: !7463)
!7463 = !{!1165, !324, !109}
!7464 = !{!7465, !7466, !7467}
!7465 = !DILocalVariable(name: "s", arg: 1, scope: !7461, file: !7410, line: 69, type: !324)
!7466 = !DILocalVariable(name: "c", arg: 2, scope: !7461, file: !7410, line: 69, type: !109)
!7467 = !DILocalVariable(name: "tmp", scope: !7461, file: !7410, line: 71, type: !226)
!7468 = !DILocation(line: 0, scope: !7461)
!7469 = !DILocation(line: 73, column: 2, scope: !7461)
!7470 = !DILocation(line: 73, column: 10, scope: !7461)
!7471 = !DILocation(line: 73, column: 13, scope: !7461)
!7472 = !DILocation(line: 73, column: 21, scope: !7461)
!7473 = !DILocation(line: 74, column: 4, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7461, file: !7410, line: 73, column: 38)
!7475 = distinct !{!7475, !7469, !7476}
!7476 = !DILocation(line: 75, column: 2, scope: !7461)
!7477 = !DILocation(line: 77, column: 9, scope: !7461)
!7478 = !DILocation(line: 77, column: 2, scope: !7461)
!7479 = distinct !DISubprogram(name: "strrchr", scope: !7410, file: !7410, line: 87, type: !7462, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7480)
!7480 = !{!7481, !7482, !7483}
!7481 = !DILocalVariable(name: "s", arg: 1, scope: !7479, file: !7410, line: 87, type: !324)
!7482 = !DILocalVariable(name: "c", arg: 2, scope: !7479, file: !7410, line: 87, type: !109)
!7483 = !DILocalVariable(name: "match", scope: !7479, file: !7410, line: 89, type: !1165)
!7484 = !DILocation(line: 0, scope: !7479)
!7485 = !DILocation(line: 91, column: 2, scope: !7479)
!7486 = !DILocation(line: 92, column: 7, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7488, file: !7410, line: 92, column: 7)
!7488 = distinct !DILexicalBlock(scope: !7479, file: !7410, line: 91, column: 5)
!7489 = !DILocation(line: 92, column: 10, scope: !7487)
!7490 = !DILocation(line: 92, column: 7, scope: !7488)
!7491 = !DILocation(line: 95, column: 13, scope: !7479)
!7492 = !DILocation(line: 95, column: 2, scope: !7488)
!7493 = distinct !{!7493, !7485, !7494}
!7494 = !DILocation(line: 95, column: 15, scope: !7479)
!7495 = !DILocation(line: 97, column: 2, scope: !7479)
!7496 = distinct !DISubprogram(name: "strlen", scope: !7410, file: !7410, line: 107, type: !7497, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7499)
!7497 = !DISubroutineType(types: !7498)
!7498 = !{!235, !324}
!7499 = !{!7500, !7501}
!7500 = !DILocalVariable(name: "s", arg: 1, scope: !7496, file: !7410, line: 107, type: !324)
!7501 = !DILocalVariable(name: "n", scope: !7496, file: !7410, line: 109, type: !235)
!7502 = !DILocation(line: 0, scope: !7496)
!7503 = !DILocation(line: 111, column: 9, scope: !7496)
!7504 = !DILocation(line: 111, column: 12, scope: !7496)
!7505 = !DILocation(line: 111, column: 2, scope: !7496)
!7506 = !DILocation(line: 112, column: 4, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7496, file: !7410, line: 111, column: 21)
!7508 = !DILocation(line: 113, column: 4, scope: !7507)
!7509 = distinct !{!7509, !7505, !7510}
!7510 = !DILocation(line: 114, column: 2, scope: !7496)
!7511 = !DILocation(line: 116, column: 2, scope: !7496)
!7512 = distinct !DISubprogram(name: "strnlen", scope: !7410, file: !7410, line: 126, type: !7513, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7515)
!7513 = !DISubroutineType(types: !7514)
!7514 = !{!235, !324, !235}
!7515 = !{!7516, !7517, !7518}
!7516 = !DILocalVariable(name: "s", arg: 1, scope: !7512, file: !7410, line: 126, type: !324)
!7517 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7512, file: !7410, line: 126, type: !235)
!7518 = !DILocalVariable(name: "n", scope: !7512, file: !7410, line: 128, type: !235)
!7519 = !DILocation(line: 0, scope: !7512)
!7520 = !DILocation(line: 130, column: 9, scope: !7512)
!7521 = !DILocation(line: 130, column: 12, scope: !7512)
!7522 = !DILocation(line: 130, column: 20, scope: !7512)
!7523 = !DILocation(line: 130, column: 2, scope: !7512)
!7524 = !DILocation(line: 131, column: 4, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7512, file: !7410, line: 130, column: 35)
!7526 = !DILocation(line: 132, column: 4, scope: !7525)
!7527 = distinct !{!7527, !7523, !7528}
!7528 = !DILocation(line: 133, column: 2, scope: !7512)
!7529 = !DILocation(line: 135, column: 2, scope: !7512)
!7530 = distinct !DISubprogram(name: "strcmp", scope: !7410, file: !7410, line: 145, type: !7531, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7533)
!7531 = !DISubroutineType(types: !7532)
!7532 = !{!109, !324, !324}
!7533 = !{!7534, !7535}
!7534 = !DILocalVariable(name: "s1", arg: 1, scope: !7530, file: !7410, line: 145, type: !324)
!7535 = !DILocalVariable(name: "s2", arg: 2, scope: !7530, file: !7410, line: 145, type: !324)
!7536 = !DILocation(line: 0, scope: !7530)
!7537 = !DILocation(line: 147, column: 10, scope: !7530)
!7538 = !DILocation(line: 147, column: 17, scope: !7530)
!7539 = !DILocation(line: 147, column: 14, scope: !7530)
!7540 = !DILocation(line: 147, column: 22, scope: !7530)
!7541 = !DILocation(line: 148, column: 5, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7530, file: !7410, line: 147, column: 40)
!7543 = !DILocation(line: 149, column: 5, scope: !7542)
!7544 = distinct !{!7544, !7545, !7546}
!7545 = !DILocation(line: 147, column: 2, scope: !7530)
!7546 = !DILocation(line: 150, column: 2, scope: !7530)
!7547 = !DILocation(line: 152, column: 9, scope: !7530)
!7548 = !DILocation(line: 152, column: 15, scope: !7530)
!7549 = !DILocation(line: 152, column: 13, scope: !7530)
!7550 = !DILocation(line: 152, column: 2, scope: !7530)
!7551 = distinct !DISubprogram(name: "strncmp", scope: !7410, file: !7410, line: 162, type: !7552, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7554)
!7552 = !DISubroutineType(types: !7553)
!7553 = !{!109, !324, !324, !235}
!7554 = !{!7555, !7556, !7557}
!7555 = !DILocalVariable(name: "s1", arg: 1, scope: !7551, file: !7410, line: 162, type: !324)
!7556 = !DILocalVariable(name: "s2", arg: 2, scope: !7551, file: !7410, line: 162, type: !324)
!7557 = !DILocalVariable(name: "n", arg: 3, scope: !7551, file: !7410, line: 162, type: !235)
!7558 = !DILocation(line: 0, scope: !7551)
!7559 = !DILocation(line: 164, column: 17, scope: !7551)
!7560 = !DILocation(line: 164, column: 21, scope: !7551)
!7561 = !DILocation(line: 164, column: 28, scope: !7551)
!7562 = !DILocation(line: 164, column: 25, scope: !7551)
!7563 = !DILocation(line: 164, column: 33, scope: !7551)
!7564 = !DILocation(line: 165, column: 5, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7551, file: !7410, line: 164, column: 51)
!7566 = !DILocation(line: 166, column: 5, scope: !7565)
!7567 = !DILocation(line: 167, column: 4, scope: !7565)
!7568 = distinct !{!7568, !7569, !7570}
!7569 = !DILocation(line: 164, column: 2, scope: !7551)
!7570 = !DILocation(line: 168, column: 2, scope: !7551)
!7571 = !DILocation(line: 170, column: 25, scope: !7551)
!7572 = !DILocation(line: 170, column: 31, scope: !7551)
!7573 = !DILocation(line: 170, column: 29, scope: !7551)
!7574 = !DILocation(line: 170, column: 9, scope: !7551)
!7575 = !DILocation(line: 170, column: 2, scope: !7551)
!7576 = distinct !DISubprogram(name: "strtok_r", scope: !7410, file: !7410, line: 180, type: !7577, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7580)
!7577 = !DISubroutineType(types: !7578)
!7578 = !{!1165, !1165, !324, !7579}
!7579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 32)
!7580 = !{!7581, !7582, !7583, !7584, !7585}
!7581 = !DILocalVariable(name: "str", arg: 1, scope: !7576, file: !7410, line: 180, type: !1165)
!7582 = !DILocalVariable(name: "sep", arg: 2, scope: !7576, file: !7410, line: 180, type: !324)
!7583 = !DILocalVariable(name: "state", arg: 3, scope: !7576, file: !7410, line: 180, type: !7579)
!7584 = !DILocalVariable(name: "start", scope: !7576, file: !7410, line: 182, type: !1165)
!7585 = !DILocalVariable(name: "end", scope: !7576, file: !7410, line: 182, type: !1165)
!7586 = !DILocation(line: 0, scope: !7576)
!7587 = !DILocation(line: 184, column: 10, scope: !7576)
!7588 = !DILocation(line: 184, column: 22, scope: !7576)
!7589 = !DILocation(line: 187, column: 9, scope: !7576)
!7590 = !DILocation(line: 187, column: 16, scope: !7576)
!7591 = !DILocation(line: 187, column: 19, scope: !7576)
!7592 = !DILocation(line: 187, column: 2, scope: !7576)
!7593 = !DILocation(line: 188, column: 8, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7576, file: !7410, line: 187, column: 40)
!7595 = distinct !{!7595, !7592, !7596}
!7596 = !DILocation(line: 189, column: 2, scope: !7576)
!7597 = !DILocation(line: 198, column: 9, scope: !7576)
!7598 = !DILocation(line: 198, column: 18, scope: !7576)
!7599 = !DILocation(line: 198, column: 17, scope: !7576)
!7600 = !DILocation(line: 198, column: 2, scope: !7576)
!7601 = !DILocation(line: 199, column: 6, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7576, file: !7410, line: 198, column: 37)
!7603 = !DILocation(line: 198, column: 14, scope: !7576)
!7604 = distinct !{!7604, !7600, !7605}
!7605 = !DILocation(line: 200, column: 2, scope: !7576)
!7606 = !DILocation(line: 203, column: 8, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7608, file: !7410, line: 202, column: 20)
!7608 = distinct !DILexicalBlock(scope: !7576, file: !7410, line: 202, column: 6)
!7609 = !DILocation(line: 204, column: 16, scope: !7607)
!7610 = !DILocation(line: 205, column: 2, scope: !7607)
!7611 = !DILocation(line: 210, column: 1, scope: !7576)
!7612 = distinct !DISubprogram(name: "strcat", scope: !7410, file: !7410, line: 212, type: !7411, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7613)
!7613 = !{!7614, !7615}
!7614 = !DILocalVariable(name: "dest", arg: 1, scope: !7612, file: !7410, line: 212, type: !7413)
!7615 = !DILocalVariable(name: "src", arg: 2, scope: !7612, file: !7410, line: 212, type: !7414)
!7616 = !DILocation(line: 0, scope: !7612)
!7617 = !DILocation(line: 214, column: 16, scope: !7612)
!7618 = !DILocation(line: 214, column: 14, scope: !7612)
!7619 = !DILocation(line: 214, column: 2, scope: !7612)
!7620 = !DILocation(line: 215, column: 2, scope: !7612)
!7621 = distinct !DISubprogram(name: "strncat", scope: !7410, file: !7410, line: 218, type: !7432, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7622)
!7622 = !{!7623, !7624, !7625, !7626, !7627}
!7623 = !DILocalVariable(name: "dest", arg: 1, scope: !7621, file: !7410, line: 218, type: !7413)
!7624 = !DILocalVariable(name: "src", arg: 2, scope: !7621, file: !7410, line: 218, type: !7414)
!7625 = !DILocalVariable(name: "n", arg: 3, scope: !7621, file: !7410, line: 219, type: !235)
!7626 = !DILocalVariable(name: "orig_dest", scope: !7621, file: !7410, line: 221, type: !1165)
!7627 = !DILocalVariable(name: "len", scope: !7621, file: !7410, line: 222, type: !235)
!7628 = !DILocation(line: 0, scope: !7621)
!7629 = !DILocation(line: 222, column: 15, scope: !7621)
!7630 = !DILocation(line: 224, column: 7, scope: !7621)
!7631 = !DILocation(line: 225, column: 14, scope: !7621)
!7632 = !DILocation(line: 225, column: 19, scope: !7621)
!7633 = !DILocation(line: 225, column: 11, scope: !7621)
!7634 = !DILocation(line: 225, column: 23, scope: !7621)
!7635 = !DILocation(line: 225, column: 28, scope: !7621)
!7636 = !DILocation(line: 225, column: 2, scope: !7621)
!7637 = !DILocation(line: 226, column: 17, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7621, file: !7410, line: 225, column: 38)
!7639 = !DILocation(line: 226, column: 8, scope: !7638)
!7640 = !DILocation(line: 226, column: 11, scope: !7638)
!7641 = distinct !{!7641, !7636, !7642}
!7642 = !DILocation(line: 227, column: 2, scope: !7621)
!7643 = !DILocation(line: 228, column: 8, scope: !7621)
!7644 = !DILocation(line: 230, column: 2, scope: !7621)
!7645 = distinct !DISubprogram(name: "memcmp", scope: !7410, file: !7410, line: 239, type: !7646, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7648)
!7646 = !DISubroutineType(types: !7647)
!7647 = !{!109, !13, !13, !235}
!7648 = !{!7649, !7650, !7651, !7652, !7653}
!7649 = !DILocalVariable(name: "m1", arg: 1, scope: !7645, file: !7410, line: 239, type: !13)
!7650 = !DILocalVariable(name: "m2", arg: 2, scope: !7645, file: !7410, line: 239, type: !13)
!7651 = !DILocalVariable(name: "n", arg: 3, scope: !7645, file: !7410, line: 239, type: !235)
!7652 = !DILocalVariable(name: "c1", scope: !7645, file: !7410, line: 241, type: !324)
!7653 = !DILocalVariable(name: "c2", scope: !7645, file: !7410, line: 242, type: !324)
!7654 = !DILocation(line: 0, scope: !7645)
!7655 = !DILocation(line: 244, column: 7, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7645, file: !7410, line: 244, column: 6)
!7657 = !DILocation(line: 244, column: 6, scope: !7645)
!7658 = !DILocation(line: 248, column: 10, scope: !7645)
!7659 = !DILocation(line: 248, column: 14, scope: !7645)
!7660 = !DILocation(line: 248, column: 19, scope: !7645)
!7661 = !DILocation(line: 248, column: 2, scope: !7645)
!7662 = !DILocation(line: 248, column: 23, scope: !7645)
!7663 = !DILocation(line: 248, column: 30, scope: !7645)
!7664 = !DILocation(line: 248, column: 27, scope: !7645)
!7665 = !DILocation(line: 249, column: 5, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7645, file: !7410, line: 248, column: 36)
!7667 = !DILocation(line: 250, column: 5, scope: !7666)
!7668 = distinct !{!7668, !7661, !7669}
!7669 = !DILocation(line: 251, column: 2, scope: !7645)
!7670 = !DILocation(line: 253, column: 9, scope: !7645)
!7671 = !DILocation(line: 253, column: 15, scope: !7645)
!7672 = !DILocation(line: 253, column: 13, scope: !7645)
!7673 = !DILocation(line: 253, column: 2, scope: !7645)
!7674 = !DILocation(line: 254, column: 1, scope: !7645)
!7675 = distinct !DISubprogram(name: "memmove", scope: !7410, file: !7410, line: 263, type: !7676, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7678)
!7676 = !DISubroutineType(types: !7677)
!7677 = !{!108, !108, !13, !235}
!7678 = !{!7679, !7680, !7681, !7682, !7683}
!7679 = !DILocalVariable(name: "d", arg: 1, scope: !7675, file: !7410, line: 263, type: !108)
!7680 = !DILocalVariable(name: "s", arg: 2, scope: !7675, file: !7410, line: 263, type: !13)
!7681 = !DILocalVariable(name: "n", arg: 3, scope: !7675, file: !7410, line: 263, type: !235)
!7682 = !DILocalVariable(name: "dest", scope: !7675, file: !7410, line: 265, type: !1165)
!7683 = !DILocalVariable(name: "src", scope: !7675, file: !7410, line: 266, type: !324)
!7684 = !DILocation(line: 0, scope: !7675)
!7685 = !DILocation(line: 268, column: 21, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7675, file: !7410, line: 268, column: 6)
!7687 = !DILocation(line: 268, column: 28, scope: !7686)
!7688 = !DILocation(line: 268, column: 6, scope: !7675)
!7689 = !DILocation(line: 280, column: 12, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7686, file: !7410, line: 278, column: 9)
!7691 = !DILocation(line: 280, column: 3, scope: !7690)
!7692 = !DILocation(line: 275, column: 5, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7694, file: !7410, line: 274, column: 17)
!7694 = distinct !DILexicalBlock(scope: !7686, file: !7410, line: 268, column: 33)
!7695 = !DILocation(line: 276, column: 14, scope: !7693)
!7696 = !DILocation(line: 276, column: 4, scope: !7693)
!7697 = !DILocation(line: 276, column: 12, scope: !7693)
!7698 = !DILocation(line: 274, column: 12, scope: !7694)
!7699 = !DILocation(line: 274, column: 3, scope: !7694)
!7700 = distinct !{!7700, !7699, !7701}
!7701 = !DILocation(line: 277, column: 3, scope: !7694)
!7702 = !DILocation(line: 281, column: 12, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7690, file: !7410, line: 280, column: 17)
!7704 = !DILocation(line: 281, column: 10, scope: !7703)
!7705 = !DILocation(line: 282, column: 8, scope: !7703)
!7706 = !DILocation(line: 283, column: 7, scope: !7703)
!7707 = !DILocation(line: 284, column: 5, scope: !7703)
!7708 = distinct !{!7708, !7691, !7709}
!7709 = !DILocation(line: 285, column: 3, scope: !7690)
!7710 = !DILocation(line: 288, column: 2, scope: !7675)
!7711 = distinct !DISubprogram(name: "memcpy", scope: !7410, file: !7410, line: 298, type: !7712, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7716)
!7712 = !DISubroutineType(types: !7713)
!7713 = !{!108, !7714, !7715, !235}
!7714 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !108)
!7715 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7716 = !{!7717, !7718, !7719, !7720, !7721}
!7717 = !DILocalVariable(name: "d", arg: 1, scope: !7711, file: !7410, line: 298, type: !7714)
!7718 = !DILocalVariable(name: "s", arg: 2, scope: !7711, file: !7410, line: 298, type: !7715)
!7719 = !DILocalVariable(name: "n", arg: 3, scope: !7711, file: !7410, line: 298, type: !235)
!7720 = !DILocalVariable(name: "d_byte", scope: !7711, file: !7410, line: 302, type: !998)
!7721 = !DILocalVariable(name: "s_byte", scope: !7711, file: !7410, line: 303, type: !2954)
!7722 = !DILocation(line: 0, scope: !7711)
!7723 = !DILocation(line: 337, column: 11, scope: !7711)
!7724 = !DILocation(line: 337, column: 2, scope: !7711)
!7725 = !DILocation(line: 338, column: 25, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7711, file: !7410, line: 337, column: 16)
!7727 = !DILocation(line: 338, column: 17, scope: !7726)
!7728 = !DILocation(line: 338, column: 11, scope: !7726)
!7729 = !DILocation(line: 338, column: 15, scope: !7726)
!7730 = !DILocation(line: 339, column: 4, scope: !7726)
!7731 = distinct !{!7731, !7724, !7732}
!7732 = !DILocation(line: 340, column: 2, scope: !7711)
!7733 = !DILocation(line: 342, column: 2, scope: !7711)
!7734 = distinct !DISubprogram(name: "memset", scope: !7410, file: !7410, line: 352, type: !7735, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7737)
!7735 = !DISubroutineType(types: !7736)
!7736 = !{!108, !108, !109, !235}
!7737 = !{!7738, !7739, !7740, !7741, !7742}
!7738 = !DILocalVariable(name: "buf", arg: 1, scope: !7734, file: !7410, line: 352, type: !108)
!7739 = !DILocalVariable(name: "c", arg: 2, scope: !7734, file: !7410, line: 352, type: !109)
!7740 = !DILocalVariable(name: "n", arg: 3, scope: !7734, file: !7410, line: 352, type: !235)
!7741 = !DILocalVariable(name: "d_byte", scope: !7734, file: !7410, line: 356, type: !998)
!7742 = !DILocalVariable(name: "c_byte", scope: !7734, file: !7410, line: 357, type: !168)
!7743 = !DILocation(line: 0, scope: !7734)
!7744 = !DILocation(line: 357, column: 25, scope: !7734)
!7745 = !DILocation(line: 389, column: 11, scope: !7734)
!7746 = !DILocation(line: 389, column: 2, scope: !7734)
!7747 = !DILocation(line: 390, column: 11, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7734, file: !7410, line: 389, column: 16)
!7749 = !DILocation(line: 390, column: 15, scope: !7748)
!7750 = !DILocation(line: 391, column: 4, scope: !7748)
!7751 = distinct !{!7751, !7746, !7752}
!7752 = !DILocation(line: 392, column: 2, scope: !7734)
!7753 = !DILocation(line: 394, column: 2, scope: !7734)
!7754 = distinct !DISubprogram(name: "memchr", scope: !7410, file: !7410, line: 404, type: !7755, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2951, retainedNodes: !7757)
!7755 = !DISubroutineType(types: !7756)
!7756 = !{!108, !13, !109, !235}
!7757 = !{!7758, !7759, !7760, !7761}
!7758 = !DILocalVariable(name: "s", arg: 1, scope: !7754, file: !7410, line: 404, type: !13)
!7759 = !DILocalVariable(name: "c", arg: 2, scope: !7754, file: !7410, line: 404, type: !109)
!7760 = !DILocalVariable(name: "n", arg: 3, scope: !7754, file: !7410, line: 404, type: !235)
!7761 = !DILocalVariable(name: "p", scope: !7762, file: !7410, line: 407, type: !2954)
!7762 = distinct !DILexicalBlock(scope: !7763, file: !7410, line: 406, column: 14)
!7763 = distinct !DILexicalBlock(scope: !7754, file: !7410, line: 406, column: 6)
!7764 = !DILocation(line: 0, scope: !7754)
!7765 = !DILocation(line: 406, column: 8, scope: !7763)
!7766 = !DILocation(line: 406, column: 6, scope: !7754)
!7767 = !DILocation(line: 409, column: 3, scope: !7762)
!7768 = !DILocation(line: 0, scope: !7762)
!7769 = !DILocation(line: 410, column: 8, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7771, file: !7410, line: 410, column: 8)
!7771 = distinct !DILexicalBlock(scope: !7762, file: !7410, line: 409, column: 6)
!7772 = !DILocation(line: 410, column: 13, scope: !7770)
!7773 = !DILocation(line: 410, column: 8, scope: !7771)
!7774 = distinct !{!7774, !7767, !7775}
!7775 = !DILocation(line: 414, column: 20, scope: !7762)
!7776 = !DILocation(line: 417, column: 2, scope: !7754)
!7777 = !DILocation(line: 418, column: 1, scope: !7754)
!7778 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !705, file: !705, line: 368, type: !758, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7779)
!7779 = !{!7780}
!7780 = !DILocalVariable(name: "dev", arg: 1, scope: !7778, file: !705, line: 368, type: !734)
!7781 = !DILocation(line: 0, scope: !7778)
!7782 = !DILocation(line: 370, column: 2, scope: !7778)
!7783 = !DILocation(line: 371, column: 1, scope: !7778)
!7784 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !705, file: !705, line: 243, type: !7785, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7787)
!7785 = !DISubroutineType(types: !7786)
!7786 = !{null, !109, !109, !734}
!7787 = !{!7788, !7789, !7790, !7791, !7793}
!7788 = !DILocalVariable(name: "min", arg: 1, scope: !7784, file: !705, line: 243, type: !109)
!7789 = !DILocalVariable(name: "max", arg: 2, scope: !7784, file: !705, line: 243, type: !109)
!7790 = !DILocalVariable(name: "dev", arg: 3, scope: !7784, file: !705, line: 243, type: !734)
!7791 = !DILocalVariable(name: "data", scope: !7784, file: !705, line: 245, type: !7792)
!7792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 32)
!7793 = !DILocalVariable(name: "line", scope: !7784, file: !705, line: 246, type: !109)
!7794 = !DILocation(line: 0, scope: !7784)
!7795 = !DILocation(line: 245, column: 38, scope: !7784)
!7796 = !DILocation(line: 249, column: 24, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7798, file: !705, line: 249, column: 2)
!7798 = distinct !DILexicalBlock(scope: !7784, file: !705, line: 249, column: 2)
!7799 = !DILocation(line: 249, column: 2, scope: !7798)
!7800 = !DILocation(line: 251, column: 7, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7802, file: !705, line: 251, column: 7)
!7802 = distinct !DILexicalBlock(scope: !7797, file: !705, line: 249, column: 39)
!7803 = !DILocation(line: 251, column: 7, scope: !7802)
!7804 = !DILocation(line: 253, column: 4, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7801, file: !705, line: 251, column: 36)
!7806 = !DILocation(line: 256, column: 24, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7805, file: !705, line: 256, column: 8)
!7808 = !DILocation(line: 256, column: 9, scope: !7807)
!7809 = !DILocation(line: 256, column: 8, scope: !7805)
!7810 = !DILocation(line: 260, column: 43, scope: !7805)
!7811 = !DILocation(line: 260, column: 4, scope: !7805)
!7812 = !DILocation(line: 261, column: 3, scope: !7805)
!7813 = !DILocation(line: 249, column: 35, scope: !7797)
!7814 = distinct !{!7814, !7799, !7815}
!7815 = !DILocation(line: 262, column: 2, scope: !7798)
!7816 = !DILocation(line: 263, column: 1, scope: !7784)
!7817 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !705, file: !705, line: 158, type: !288, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7818)
!7818 = !{!7819}
!7819 = !DILocalVariable(name: "line", arg: 1, scope: !7817, file: !705, line: 158, type: !109)
!7820 = !DILocation(line: 0, scope: !7817)
!7821 = !DILocation(line: 170, column: 38, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7823, file: !705, line: 160, column: 17)
!7823 = distinct !DILexicalBlock(scope: !7817, file: !705, line: 160, column: 6)
!7824 = !DILocation(line: 170, column: 10, scope: !7822)
!7825 = !DILocation(line: 176, column: 1, scope: !7817)
!7826 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !705, file: !705, line: 183, type: !3497, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7827)
!7827 = !{!7828}
!7828 = !DILocalVariable(name: "line", arg: 1, scope: !7826, file: !705, line: 183, type: !109)
!7829 = !DILocation(line: 0, scope: !7826)
!7830 = !DILocation(line: 195, column: 28, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7832, file: !705, line: 185, column: 17)
!7832 = distinct !DILexicalBlock(scope: !7826, file: !705, line: 185, column: 6)
!7833 = !DILocation(line: 195, column: 3, scope: !7831)
!7834 = !DILocation(line: 200, column: 1, scope: !7826)
!7835 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7836, file: !7836, line: 910, type: !6338, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7837)
!7836 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7837 = !{!7838}
!7838 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7835, file: !7836, line: 910, type: !110)
!7839 = !DILocation(line: 0, scope: !7835)
!7840 = !DILocation(line: 912, column: 3, scope: !7835)
!7841 = !DILocation(line: 913, column: 1, scope: !7835)
!7842 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7836, file: !7836, line: 834, type: !7305, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7843)
!7843 = !{!7844}
!7844 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7842, file: !7836, line: 834, type: !110)
!7845 = !DILocation(line: 0, scope: !7842)
!7846 = !DILocation(line: 836, column: 11, scope: !7842)
!7847 = !DILocation(line: 836, column: 40, scope: !7842)
!7848 = !DILocation(line: 836, column: 3, scope: !7842)
!7849 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !705, file: !705, line: 304, type: !758, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7850)
!7850 = !{!7851}
!7851 = !DILocalVariable(name: "dev", arg: 1, scope: !7849, file: !705, line: 304, type: !734)
!7852 = !DILocation(line: 0, scope: !7849)
!7853 = !DILocation(line: 306, column: 2, scope: !7849)
!7854 = !DILocation(line: 307, column: 1, scope: !7849)
!7855 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !705, file: !705, line: 299, type: !758, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7856)
!7856 = !{!7857}
!7857 = !DILocalVariable(name: "dev", arg: 1, scope: !7855, file: !705, line: 299, type: !734)
!7858 = !DILocation(line: 0, scope: !7855)
!7859 = !DILocation(line: 301, column: 2, scope: !7855)
!7860 = !DILocation(line: 302, column: 1, scope: !7855)
!7861 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !705, file: !705, line: 294, type: !758, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7862)
!7862 = !{!7863}
!7863 = !DILocalVariable(name: "dev", arg: 1, scope: !7861, file: !705, line: 294, type: !734)
!7864 = !DILocation(line: 0, scope: !7861)
!7865 = !DILocation(line: 296, column: 2, scope: !7861)
!7866 = !DILocation(line: 297, column: 1, scope: !7861)
!7867 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !705, file: !705, line: 397, type: !758, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7868)
!7868 = !{!7869}
!7869 = !DILocalVariable(name: "dev", arg: 1, scope: !7867, file: !705, line: 397, type: !734)
!7870 = !DILocation(line: 0, scope: !7867)
!7871 = !DILocation(line: 399, column: 2, scope: !7867)
!7872 = !DILocation(line: 400, column: 1, scope: !7867)
!7873 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !705, file: !705, line: 392, type: !758, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7874)
!7874 = !{!7875}
!7875 = !DILocalVariable(name: "dev", arg: 1, scope: !7873, file: !705, line: 392, type: !734)
!7876 = !DILocation(line: 0, scope: !7873)
!7877 = !DILocation(line: 394, column: 2, scope: !7873)
!7878 = !DILocation(line: 395, column: 1, scope: !7873)
!7879 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !705, file: !705, line: 289, type: !758, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7880)
!7880 = !{!7881}
!7881 = !DILocalVariable(name: "dev", arg: 1, scope: !7879, file: !705, line: 289, type: !734)
!7882 = !DILocation(line: 0, scope: !7879)
!7883 = !DILocation(line: 291, column: 2, scope: !7879)
!7884 = !DILocation(line: 292, column: 1, scope: !7879)
!7885 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !705, file: !705, line: 387, type: !758, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7886)
!7886 = !{!7887}
!7887 = !DILocalVariable(name: "dev", arg: 1, scope: !7885, file: !705, line: 387, type: !734)
!7888 = !DILocation(line: 0, scope: !7885)
!7889 = !DILocation(line: 389, column: 2, scope: !7885)
!7890 = !DILocation(line: 390, column: 1, scope: !7885)
!7891 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !705, file: !705, line: 382, type: !758, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7892)
!7892 = !{!7893}
!7893 = !DILocalVariable(name: "dev", arg: 1, scope: !7891, file: !705, line: 382, type: !734)
!7894 = !DILocation(line: 0, scope: !7891)
!7895 = !DILocation(line: 384, column: 2, scope: !7891)
!7896 = !DILocation(line: 385, column: 1, scope: !7891)
!7897 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !705, file: !705, line: 373, type: !758, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7898)
!7898 = !{!7899}
!7899 = !DILocalVariable(name: "dev", arg: 1, scope: !7897, file: !705, line: 373, type: !734)
!7900 = !DILocation(line: 0, scope: !7897)
!7901 = !DILocation(line: 375, column: 2, scope: !7897)
!7902 = !DILocation(line: 376, column: 1, scope: !7897)
!7903 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !705, file: !705, line: 284, type: !758, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7904)
!7904 = !{!7905}
!7905 = !DILocalVariable(name: "dev", arg: 1, scope: !7903, file: !705, line: 284, type: !734)
!7906 = !DILocation(line: 0, scope: !7903)
!7907 = !DILocation(line: 286, column: 2, scope: !7903)
!7908 = !DILocation(line: 287, column: 1, scope: !7903)
!7909 = distinct !DISubprogram(name: "stm32_exti_init", scope: !705, file: !705, line: 416, type: !732, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7910)
!7910 = !{!7911}
!7911 = !DILocalVariable(name: "dev", arg: 1, scope: !7909, file: !705, line: 416, type: !734)
!7912 = !DILocation(line: 0, scope: !7909)
!7913 = !DILocation(line: 418, column: 2, scope: !7909)
!7914 = !DILocation(line: 420, column: 2, scope: !7909)
!7915 = !DILocation(line: 0, scope: !757)
!7916 = !DILocation(line: 493, column: 2, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !757, file: !705, line: 493, column: 2)
!7918 = !DILocation(line: 497, column: 2, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !757, file: !705, line: 497, column: 2)
!7920 = !DILocation(line: 507, column: 2, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !757, file: !705, line: 507, column: 2)
!7922 = !DILocation(line: 512, column: 2, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !757, file: !705, line: 512, column: 2)
!7924 = !DILocation(line: 516, column: 2, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !757, file: !705, line: 516, column: 2)
!7926 = !DILocation(line: 523, column: 2, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !757, file: !705, line: 523, column: 2)
!7928 = !DILocation(line: 527, column: 2, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !757, file: !705, line: 527, column: 2)
!7930 = !DILocation(line: 581, column: 2, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !757, file: !705, line: 581, column: 2)
!7932 = !DILocation(line: 586, column: 2, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !757, file: !705, line: 586, column: 2)
!7934 = !DILocation(line: 591, column: 2, scope: !7935)
!7935 = distinct !DILexicalBlock(scope: !757, file: !705, line: 591, column: 2)
!7936 = !DILocation(line: 595, column: 2, scope: !7937)
!7937 = distinct !DILexicalBlock(scope: !757, file: !705, line: 595, column: 2)
!7938 = !DILocation(line: 607, column: 1, scope: !757)
!7939 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !705, file: !705, line: 112, type: !3497, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7940)
!7940 = !{!7941, !7942}
!7941 = !DILocalVariable(name: "line", arg: 1, scope: !7939, file: !705, line: 112, type: !109)
!7942 = !DILocalVariable(name: "irqnum", scope: !7939, file: !705, line: 114, type: !109)
!7943 = !DILocation(line: 0, scope: !7939)
!7944 = !DILocation(line: 122, column: 13, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7939, file: !705, line: 122, column: 6)
!7946 = !DILocation(line: 122, column: 6, scope: !7939)
!7947 = !DILocation(line: 123, column: 3, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7949, file: !705, line: 123, column: 3)
!7949 = distinct !DILexicalBlock(scope: !7950, file: !705, line: 123, column: 3)
!7950 = distinct !DILexicalBlock(scope: !7951, file: !705, line: 123, column: 3)
!7951 = distinct !DILexicalBlock(scope: !7945, file: !705, line: 122, column: 22)
!7952 = !DILocation(line: 121, column: 11, scope: !7939)
!7953 = !DILocation(line: 130, column: 26, scope: !7939)
!7954 = !DILocation(line: 130, column: 2, scope: !7939)
!7955 = !DILocation(line: 134, column: 2, scope: !7939)
!7956 = !DILocation(line: 135, column: 1, scope: !7939)
!7957 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7836, file: !7836, line: 268, type: !6338, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7958)
!7958 = !{!7959}
!7959 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7957, file: !7836, line: 268, type: !110)
!7960 = !DILocation(line: 0, scope: !7957)
!7961 = !DILocation(line: 270, column: 3, scope: !7957)
!7962 = !DILocation(line: 271, column: 1, scope: !7957)
!7963 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !705, file: !705, line: 137, type: !3497, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7964)
!7964 = !{!7965}
!7965 = !DILocalVariable(name: "line", arg: 1, scope: !7963, file: !705, line: 137, type: !109)
!7966 = !DILocation(line: 0, scope: !7963)
!7967 = !DILocation(line: 141, column: 11, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7963, file: !705, line: 141, column: 6)
!7969 = !DILocation(line: 141, column: 6, scope: !7963)
!7970 = !DILocation(line: 145, column: 28, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7968, file: !705, line: 141, column: 17)
!7972 = !DILocation(line: 145, column: 3, scope: !7971)
!7973 = !DILocation(line: 147, column: 2, scope: !7971)
!7974 = !DILocation(line: 151, column: 1, scope: !7963)
!7975 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7836, file: !7836, line: 309, type: !6338, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7976)
!7976 = !{!7977}
!7977 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7975, file: !7836, line: 309, type: !110)
!7978 = !DILocation(line: 0, scope: !7975)
!7979 = !DILocation(line: 311, column: 3, scope: !7975)
!7980 = !DILocation(line: 312, column: 1, scope: !7975)
!7981 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !705, file: !705, line: 202, type: !7982, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !7984)
!7982 = !DISubroutineType(types: !7983)
!7983 = !{null, !109, !109}
!7984 = !{!7985, !7986}
!7985 = !DILocalVariable(name: "line", arg: 1, scope: !7981, file: !705, line: 202, type: !109)
!7986 = !DILocalVariable(name: "trigger", arg: 2, scope: !7981, file: !705, line: 202, type: !109)
!7987 = !DILocation(line: 0, scope: !7981)
!7988 = !DILocation(line: 211, column: 2, scope: !7981)
!7989 = !DILocation(line: 213, column: 36, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7981, file: !705, line: 211, column: 19)
!7991 = !DILocation(line: 213, column: 3, scope: !7990)
!7992 = !DILocation(line: 214, column: 3, scope: !7990)
!7993 = !DILocation(line: 215, column: 3, scope: !7990)
!7994 = !DILocation(line: 217, column: 35, scope: !7990)
!7995 = !DILocation(line: 217, column: 3, scope: !7990)
!7996 = !DILocation(line: 218, column: 3, scope: !7990)
!7997 = !DILocation(line: 219, column: 3, scope: !7990)
!7998 = !DILocation(line: 221, column: 36, scope: !7990)
!7999 = !DILocation(line: 221, column: 3, scope: !7990)
!8000 = !DILocation(line: 222, column: 3, scope: !7990)
!8001 = !DILocation(line: 223, column: 3, scope: !7990)
!8002 = !DILocation(line: 225, column: 35, scope: !7990)
!8003 = !DILocation(line: 225, column: 3, scope: !7990)
!8004 = !DILocation(line: 226, column: 3, scope: !7990)
!8005 = !DILocation(line: 227, column: 3, scope: !7990)
!8006 = !DILocation(line: 232, column: 1, scope: !7981)
!8007 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7836, file: !7836, line: 573, type: !6338, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !8008)
!8008 = !{!8009}
!8009 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8007, file: !7836, line: 573, type: !110)
!8010 = !DILocation(line: 0, scope: !8007)
!8011 = !DILocation(line: 575, column: 3, scope: !8007)
!8012 = !DILocation(line: 577, column: 1, scope: !8007)
!8013 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7836, file: !7836, line: 703, type: !6338, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !8014)
!8014 = !{!8015}
!8015 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8013, file: !7836, line: 703, type: !110)
!8016 = !DILocation(line: 0, scope: !8013)
!8017 = !DILocation(line: 705, column: 3, scope: !8013)
!8018 = !DILocation(line: 706, column: 1, scope: !8013)
!8019 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7836, file: !7836, line: 529, type: !6338, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !8020)
!8020 = !{!8021}
!8021 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8019, file: !7836, line: 529, type: !110)
!8022 = !DILocation(line: 0, scope: !8019)
!8023 = !DILocation(line: 531, column: 3, scope: !8019)
!8024 = !DILocation(line: 533, column: 1, scope: !8019)
!8025 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7836, file: !7836, line: 661, type: !6338, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !8026)
!8026 = !{!8027}
!8027 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8025, file: !7836, line: 661, type: !110)
!8028 = !DILocation(line: 0, scope: !8025)
!8029 = !DILocation(line: 663, column: 3, scope: !8025)
!8030 = !DILocation(line: 664, column: 1, scope: !8025)
!8031 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !705, file: !705, line: 433, type: !8032, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !8034)
!8032 = !DISubroutineType(types: !8033)
!8033 = !{!109, !109, !745, !108}
!8034 = !{!8035, !8036, !8037, !8038, !8040}
!8035 = !DILocalVariable(name: "line", arg: 1, scope: !8031, file: !705, line: 433, type: !109)
!8036 = !DILocalVariable(name: "cb", arg: 2, scope: !8031, file: !705, line: 433, type: !745)
!8037 = !DILocalVariable(name: "arg", arg: 3, scope: !8031, file: !705, line: 433, type: !108)
!8038 = !DILocalVariable(name: "dev", scope: !8031, file: !705, line: 435, type: !8039)
!8039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !734)
!8040 = !DILocalVariable(name: "data", scope: !8031, file: !705, line: 436, type: !7792)
!8041 = !DILocation(line: 0, scope: !8031)
!8042 = !DILocation(line: 438, column: 21, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8031, file: !705, line: 438, column: 6)
!8044 = !DILocation(line: 438, column: 6, scope: !8043)
!8045 = !DILocation(line: 438, column: 6, scope: !8031)
!8046 = !DILocation(line: 442, column: 20, scope: !8031)
!8047 = !DILocation(line: 443, column: 17, scope: !8031)
!8048 = !DILocation(line: 443, column: 22, scope: !8031)
!8049 = !DILocation(line: 445, column: 2, scope: !8031)
!8050 = !DILocation(line: 446, column: 1, scope: !8031)
!8051 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !705, file: !705, line: 448, type: !3497, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !592, retainedNodes: !8052)
!8052 = !{!8053, !8054, !8055}
!8053 = !DILocalVariable(name: "line", arg: 1, scope: !8051, file: !705, line: 448, type: !109)
!8054 = !DILocalVariable(name: "dev", scope: !8051, file: !705, line: 450, type: !8039)
!8055 = !DILocalVariable(name: "data", scope: !8051, file: !705, line: 451, type: !7792)
!8056 = !DILocation(line: 0, scope: !8051)
!8057 = !DILocation(line: 453, column: 17, scope: !8051)
!8058 = !DILocation(line: 453, column: 20, scope: !8051)
!8059 = !DILocation(line: 454, column: 17, scope: !8051)
!8060 = !DILocation(line: 454, column: 22, scope: !8051)
!8061 = !DILocation(line: 455, column: 1, scope: !8051)
!8062 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !897, file: !897, line: 183, type: !935, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !8063)
!8063 = !{!8064, !8065, !8066, !8067, !8068}
!8064 = !DILocalVariable(name: "dev", arg: 1, scope: !8062, file: !897, line: 183, type: !926)
!8065 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8062, file: !897, line: 184, type: !937)
!8066 = !DILocalVariable(name: "pclken", scope: !8062, file: !897, line: 186, type: !887)
!8067 = !DILocalVariable(name: "reg", scope: !8062, file: !897, line: 187, type: !1478)
!8068 = !DILocalVariable(name: "reg_val", scope: !8062, file: !897, line: 188, type: !110)
!8069 = !DILocation(line: 0, scope: !8062)
!8070 = !DILocation(line: 192, column: 6, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8062, file: !897, line: 192, column: 6)
!8072 = !DILocation(line: 192, column: 6, scope: !8062)
!8073 = !DILocation(line: 197, column: 52, scope: !8062)
!8074 = !DILocation(line: 197, column: 8, scope: !8062)
!8075 = !DILocation(line: 198, column: 12, scope: !8062)
!8076 = !DILocation(line: 199, column: 21, scope: !8062)
!8077 = !DILocation(line: 199, column: 10, scope: !8062)
!8078 = !DILocation(line: 200, column: 7, scope: !8062)
!8079 = !DILocation(line: 202, column: 2, scope: !8062)
!8080 = !DILocation(line: 203, column: 1, scope: !8062)
!8081 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !897, file: !897, line: 205, type: !935, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !8082)
!8082 = !{!8083, !8084, !8085, !8086, !8087}
!8083 = !DILocalVariable(name: "dev", arg: 1, scope: !8081, file: !897, line: 205, type: !926)
!8084 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8081, file: !897, line: 206, type: !937)
!8085 = !DILocalVariable(name: "pclken", scope: !8081, file: !897, line: 208, type: !887)
!8086 = !DILocalVariable(name: "reg", scope: !8081, file: !897, line: 209, type: !1478)
!8087 = !DILocalVariable(name: "reg_val", scope: !8081, file: !897, line: 210, type: !110)
!8088 = !DILocation(line: 0, scope: !8081)
!8089 = !DILocation(line: 214, column: 6, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8081, file: !897, line: 214, column: 6)
!8091 = !DILocation(line: 214, column: 6, scope: !8081)
!8092 = !DILocation(line: 219, column: 52, scope: !8081)
!8093 = !DILocation(line: 219, column: 8, scope: !8081)
!8094 = !DILocation(line: 220, column: 12, scope: !8081)
!8095 = !DILocation(line: 221, column: 22, scope: !8081)
!8096 = !DILocation(line: 221, column: 13, scope: !8081)
!8097 = !DILocation(line: 221, column: 10, scope: !8081)
!8098 = !DILocation(line: 222, column: 7, scope: !8081)
!8099 = !DILocation(line: 224, column: 2, scope: !8081)
!8100 = !DILocation(line: 225, column: 1, scope: !8081)
!8101 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !897, file: !897, line: 262, type: !951, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !8102)
!8102 = !{!8103, !8104, !8105, !8106, !8107, !8108, !8109, !8110}
!8103 = !DILocalVariable(name: "clock", arg: 1, scope: !8101, file: !897, line: 262, type: !926)
!8104 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8101, file: !897, line: 263, type: !937)
!8105 = !DILocalVariable(name: "rate", arg: 3, scope: !8101, file: !897, line: 264, type: !893)
!8106 = !DILocalVariable(name: "pclken", scope: !8101, file: !897, line: 266, type: !887)
!8107 = !DILocalVariable(name: "ahb_clock", scope: !8101, file: !897, line: 273, type: !110)
!8108 = !DILocalVariable(name: "apb1_clock", scope: !8101, file: !897, line: 274, type: !110)
!8109 = !DILocalVariable(name: "apb2_clock", scope: !8101, file: !897, line: 276, type: !110)
!8110 = !DILocalVariable(name: "ahb3_clock", scope: !8101, file: !897, line: 286, type: !110)
!8111 = !DILocation(line: 0, scope: !8101)
!8112 = !DILocation(line: 273, column: 23, scope: !8101)
!8113 = !DILocation(line: 299, column: 18, scope: !8101)
!8114 = !DILocation(line: 299, column: 2, scope: !8101)
!8115 = !DILocation(line: 274, column: 24, scope: !8101)
!8116 = !DILocation(line: 319, column: 3, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8101, file: !897, line: 299, column: 23)
!8118 = !DILocation(line: 276, column: 24, scope: !8101)
!8119 = !DILocation(line: 323, column: 3, scope: !8117)
!8120 = !DILocation(line: 346, column: 33, scope: !8117)
!8121 = !DILocation(line: 346, column: 11, scope: !8117)
!8122 = !DILocation(line: 350, column: 3, scope: !8117)
!8123 = !DILocation(line: 354, column: 33, scope: !8117)
!8124 = !DILocation(line: 354, column: 11, scope: !8117)
!8125 = !DILocation(line: 358, column: 3, scope: !8117)
!8126 = !DILocation(line: 374, column: 3, scope: !8117)
!8127 = !DILocation(line: 379, column: 3, scope: !8117)
!8128 = !DILocation(line: 0, scope: !8117)
!8129 = !DILocation(line: 396, column: 1, scope: !8101)
!8130 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !897, file: !897, line: 227, type: !967, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !8131)
!8131 = !{!8132, !8133, !8134, !8135, !8136, !8137, !8138, !8139}
!8132 = !DILocalVariable(name: "dev", arg: 1, scope: !8130, file: !897, line: 227, type: !926)
!8133 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8130, file: !897, line: 228, type: !937)
!8134 = !DILocalVariable(name: "data", arg: 3, scope: !8130, file: !897, line: 229, type: !108)
!8135 = !DILocalVariable(name: "pclken", scope: !8130, file: !897, line: 233, type: !887)
!8136 = !DILocalVariable(name: "reg", scope: !8130, file: !897, line: 234, type: !1478)
!8137 = !DILocalVariable(name: "reg_val", scope: !8130, file: !897, line: 235, type: !110)
!8138 = !DILocalVariable(name: "dt_val", scope: !8130, file: !897, line: 235, type: !110)
!8139 = !DILocalVariable(name: "err", scope: !8130, file: !897, line: 236, type: !109)
!8140 = !DILocation(line: 0, scope: !8130)
!8141 = !DILocation(line: 241, column: 30, scope: !8130)
!8142 = !DILocation(line: 241, column: 8, scope: !8130)
!8143 = !DILocation(line: 242, column: 10, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8130, file: !897, line: 242, column: 6)
!8145 = !DILocation(line: 242, column: 6, scope: !8130)
!8146 = !DILocation(line: 247, column: 11, scope: !8130)
!8147 = !DILocation(line: 248, column: 6, scope: !8130)
!8148 = !DILocation(line: 247, column: 44, scope: !8130)
!8149 = !DILocation(line: 250, column: 6, scope: !8130)
!8150 = !DILocation(line: 249, column: 52, scope: !8130)
!8151 = !DILocation(line: 249, column: 8, scope: !8130)
!8152 = !DILocation(line: 251, column: 12, scope: !8130)
!8153 = !DILocation(line: 252, column: 10, scope: !8130)
!8154 = !DILocation(line: 253, column: 7, scope: !8130)
!8155 = !DILocation(line: 255, column: 2, scope: !8130)
!8156 = !DILocation(line: 260, column: 1, scope: !8130)
!8157 = distinct !DISubprogram(name: "enabled_clock", scope: !897, file: !897, line: 100, type: !8158, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !8160)
!8158 = !DISubroutineType(types: !8159)
!8159 = !{!109, !110}
!8160 = !{!8161, !8162}
!8161 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8157, file: !897, line: 100, type: !110)
!8162 = !DILocalVariable(name: "r", scope: !8157, file: !897, line: 102, type: !109)
!8163 = !DILocation(line: 0, scope: !8157)
!8164 = !DILocation(line: 104, column: 2, scope: !8157)
!8165 = !DILocation(line: 180, column: 2, scope: !8157)
!8166 = !DILocation(line: 181, column: 1, scope: !8157)
!8167 = distinct !DISubprogram(name: "get_bus_clock", scope: !897, file: !897, line: 79, type: !8168, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !8170)
!8168 = !DISubroutineType(types: !8169)
!8169 = !{!110, !110, !110}
!8170 = !{!8171, !8172}
!8171 = !DILocalVariable(name: "clock", arg: 1, scope: !8167, file: !897, line: 79, type: !110)
!8172 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8167, file: !897, line: 79, type: !110)
!8173 = !DILocation(line: 0, scope: !8167)
!8174 = !DILocation(line: 81, column: 15, scope: !8167)
!8175 = !DILocation(line: 81, column: 2, scope: !8167)
!8176 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !897, file: !897, line: 68, type: !8177, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !8179)
!8177 = !DISubroutineType(types: !8178)
!8178 = !{!110, !110, !109, !109, !109}
!8179 = !{!8180, !8181, !8182, !8183}
!8180 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8176, file: !897, line: 68, type: !110)
!8181 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8176, file: !897, line: 69, type: !109)
!8182 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8176, file: !897, line: 70, type: !109)
!8183 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8176, file: !897, line: 71, type: !109)
!8184 = !DILocation(line: 0, scope: !8176)
!8185 = !DILocation(line: 75, column: 22, scope: !8176)
!8186 = !DILocation(line: 76, column: 13, scope: !8176)
!8187 = !DILocation(line: 75, column: 34, scope: !8176)
!8188 = !DILocation(line: 75, column: 2, scope: !8176)
!8189 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !897, file: !897, line: 641, type: !924, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !8190)
!8190 = !{!8191, !8192, !8193}
!8191 = !DILocalVariable(name: "dev", arg: 1, scope: !8189, file: !897, line: 641, type: !926)
!8192 = !DILocalVariable(name: "old_flash_freq", scope: !8189, file: !897, line: 664, type: !110)
!8193 = !DILocalVariable(name: "new_flash_freq", scope: !8189, file: !897, line: 665, type: !110)
!8194 = !DILocation(line: 0, scope: !8189)
!8195 = !DILocation(line: 646, column: 2, scope: !8189)
!8196 = !DILocation(line: 667, column: 19, scope: !8189)
!8197 = !DILocation(line: 674, column: 21, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8189, file: !897, line: 674, column: 6)
!8199 = !DILocation(line: 674, column: 6, scope: !8189)
!8200 = !DILocation(line: 675, column: 3, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8198, file: !897, line: 674, column: 59)
!8202 = !DILocation(line: 676, column: 2, scope: !8201)
!8203 = !DILocation(line: 680, column: 2, scope: !8189)
!8204 = !DILocation(line: 683, column: 2, scope: !8189)
!8205 = !DILocation(line: 690, column: 3, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8207, file: !897, line: 689, column: 9)
!8207 = distinct !DILexicalBlock(scope: !8189, file: !897, line: 685, column: 6)
!8208 = !DILocation(line: 695, column: 2, scope: !8189)
!8209 = !DILocation(line: 696, column: 2, scope: !8189)
!8210 = !DILocation(line: 696, column: 9, scope: !8189)
!8211 = !DILocation(line: 696, column: 34, scope: !8189)
!8212 = distinct !{!8212, !8209, !8213}
!8213 = !DILocation(line: 697, column: 2, scope: !8189)
!8214 = !DILocation(line: 720, column: 21, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8189, file: !897, line: 720, column: 6)
!8216 = !DILocation(line: 720, column: 6, scope: !8189)
!8217 = !DILocation(line: 721, column: 3, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8215, file: !897, line: 720, column: 60)
!8219 = !DILocation(line: 722, column: 2, scope: !8218)
!8220 = !DILocation(line: 725, column: 18, scope: !8189)
!8221 = !DILocation(line: 728, column: 2, scope: !8189)
!8222 = !DILocation(line: 730, column: 2, scope: !8189)
!8223 = !DILocation(line: 745, column: 2, scope: !8189)
!8224 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8225, file: !8225, line: 3275, type: !3451, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !2100)
!8225 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8226 = !DILocation(line: 3277, column: 21, scope: !8224)
!8227 = !DILocation(line: 3277, column: 3, scope: !8224)
!8228 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !897, file: !897, line: 507, type: !3169, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !2100)
!8229 = !DILocation(line: 516, column: 4, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8231, file: !897, line: 515, column: 10)
!8231 = distinct !DILexicalBlock(scope: !8232, file: !897, line: 513, column: 7)
!8232 = distinct !DILexicalBlock(scope: !8233, file: !897, line: 510, column: 37)
!8233 = distinct !DILexicalBlock(scope: !8228, file: !897, line: 510, column: 6)
!8234 = !DILocation(line: 526, column: 3, scope: !8232)
!8235 = !DILocation(line: 527, column: 3, scope: !8232)
!8236 = !DILocation(line: 527, column: 10, scope: !8232)
!8237 = !DILocation(line: 527, column: 31, scope: !8232)
!8238 = distinct !{!8238, !8235, !8239}
!8239 = !DILocation(line: 529, column: 3, scope: !8232)
!8240 = !DILocation(line: 583, column: 3, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8242, file: !897, line: 577, column: 37)
!8242 = distinct !DILexicalBlock(scope: !8228, file: !897, line: 577, column: 6)
!8243 = !DILocation(line: 584, column: 3, scope: !8241)
!8244 = !DILocation(line: 584, column: 10, scope: !8241)
!8245 = !DILocation(line: 584, column: 31, scope: !8241)
!8246 = distinct !{!8246, !8243, !8247}
!8247 = !DILocation(line: 585, column: 3, scope: !8241)
!8248 = !DILocation(line: 627, column: 1, scope: !8228)
!8249 = distinct !DISubprogram(name: "set_up_plls", scope: !897, file: !897, line: 448, type: !3169, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !2100)
!8250 = !DILocation(line: 460, column: 6, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8249, file: !897, line: 460, column: 6)
!8252 = !DILocation(line: 460, column: 31, scope: !8251)
!8253 = !DILocation(line: 460, column: 6, scope: !8249)
!8254 = !DILocation(line: 461, column: 3, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8251, file: !897, line: 460, column: 67)
!8256 = !DILocation(line: 462, column: 3, scope: !8255)
!8257 = !DILocation(line: 463, column: 2, scope: !8255)
!8258 = !DILocation(line: 464, column: 2, scope: !8249)
!8259 = !DILocation(line: 488, column: 2, scope: !8249)
!8260 = !DILocation(line: 492, column: 2, scope: !8249)
!8261 = !DILocation(line: 496, column: 2, scope: !8249)
!8262 = !DILocation(line: 499, column: 2, scope: !8249)
!8263 = !DILocation(line: 500, column: 2, scope: !8249)
!8264 = !DILocation(line: 500, column: 9, scope: !8249)
!8265 = !DILocation(line: 500, column: 30, scope: !8249)
!8266 = distinct !{!8266, !8263, !8267}
!8267 = !DILocation(line: 502, column: 2, scope: !8249)
!8268 = !DILocation(line: 505, column: 1, scope: !8249)
!8269 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8225, file: !8225, line: 3224, type: !6338, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !8270)
!8270 = !{!8271}
!8271 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8269, file: !8225, line: 3224, type: !110)
!8272 = !DILocation(line: 0, scope: !8269)
!8273 = !DILocation(line: 3226, column: 3, scope: !8269)
!8274 = !DILocation(line: 3227, column: 1, scope: !8269)
!8275 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8225, file: !8225, line: 3188, type: !6338, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !8276)
!8276 = !{!8277}
!8277 = !DILocalVariable(name: "Source", arg: 1, scope: !8275, file: !8225, line: 3188, type: !110)
!8278 = !DILocation(line: 0, scope: !8275)
!8279 = !DILocation(line: 3190, column: 3, scope: !8275)
!8280 = !DILocation(line: 3191, column: 1, scope: !8275)
!8281 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8225, file: !8225, line: 3204, type: !3451, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !2100)
!8282 = !DILocation(line: 3206, column: 21, scope: !8281)
!8283 = !DILocation(line: 3206, column: 3, scope: !8281)
!8284 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8225, file: !8225, line: 3240, type: !6338, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !8285)
!8285 = !{!8286}
!8286 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8284, file: !8225, line: 3240, type: !110)
!8287 = !DILocation(line: 0, scope: !8284)
!8288 = !DILocation(line: 3242, column: 3, scope: !8284)
!8289 = !DILocation(line: 3243, column: 1, scope: !8284)
!8290 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8225, file: !8225, line: 3256, type: !6338, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !8291)
!8291 = !{!8292}
!8292 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8290, file: !8225, line: 3256, type: !110)
!8293 = !DILocation(line: 0, scope: !8290)
!8294 = !DILocation(line: 3258, column: 3, scope: !8290)
!8295 = !DILocation(line: 3259, column: 1, scope: !8290)
!8296 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !897, file: !897, line: 409, type: !3169, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !2100)
!8297 = !DILocation(line: 412, column: 6, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8296, file: !897, line: 412, column: 6)
!8299 = !DILocation(line: 412, column: 27, scope: !8298)
!8300 = !DILocation(line: 412, column: 6, scope: !8296)
!8301 = !DILocation(line: 414, column: 3, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8298, file: !897, line: 412, column: 33)
!8303 = !DILocation(line: 415, column: 3, scope: !8302)
!8304 = !DILocation(line: 415, column: 10, scope: !8302)
!8305 = !DILocation(line: 415, column: 31, scope: !8302)
!8306 = distinct !{!8306, !8303, !8307}
!8307 = !DILocation(line: 417, column: 3, scope: !8302)
!8308 = !DILocation(line: 421, column: 2, scope: !8296)
!8309 = !DILocation(line: 422, column: 2, scope: !8296)
!8310 = !DILocation(line: 422, column: 9, scope: !8296)
!8311 = !DILocation(line: 422, column: 34, scope: !8296)
!8312 = distinct !{!8312, !8309, !8313}
!8313 = !DILocation(line: 423, column: 2, scope: !8296)
!8314 = !DILocation(line: 424, column: 1, scope: !8296)
!8315 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8225, file: !8225, line: 4195, type: !3169, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !2100)
!8316 = !DILocation(line: 4197, column: 3, scope: !8315)
!8317 = !DILocation(line: 4198, column: 1, scope: !8315)
!8318 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8225, file: !8225, line: 4184, type: !3169, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !2100)
!8319 = !DILocation(line: 4186, column: 3, scope: !8318)
!8320 = !DILocation(line: 4187, column: 1, scope: !8318)
!8321 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8225, file: !8225, line: 4205, type: !3451, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !2100)
!8322 = !DILocation(line: 4207, column: 11, scope: !8321)
!8323 = !DILocation(line: 4207, column: 44, scope: !8321)
!8324 = !DILocation(line: 4207, column: 3, scope: !8321)
!8325 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8225, file: !8225, line: 3007, type: !3451, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !2100)
!8326 = !DILocation(line: 3009, column: 11, scope: !8325)
!8327 = !DILocation(line: 3009, column: 44, scope: !8325)
!8328 = !DILocation(line: 3009, column: 3, scope: !8325)
!8329 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8225, file: !8225, line: 2987, type: !3169, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !2100)
!8330 = !DILocation(line: 2989, column: 3, scope: !8329)
!8331 = !DILocation(line: 2990, column: 1, scope: !8329)
!8332 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8225, file: !8225, line: 2939, type: !3169, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !2100)
!8333 = !DILocation(line: 2941, column: 3, scope: !8332)
!8334 = !DILocation(line: 2942, column: 1, scope: !8332)
!8335 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8225, file: !8225, line: 2949, type: !3169, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !2100)
!8336 = !DILocation(line: 2951, column: 3, scope: !8335)
!8337 = !DILocation(line: 2952, column: 1, scope: !8335)
!8338 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8225, file: !8225, line: 2969, type: !3451, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !2100)
!8339 = !DILocation(line: 2971, column: 11, scope: !8338)
!8340 = !DILocation(line: 2971, column: 44, scope: !8338)
!8341 = !DILocation(line: 2971, column: 3, scope: !8338)
!8342 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8225, file: !8225, line: 3143, type: !3169, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !2100)
!8343 = !DILocation(line: 3145, column: 3, scope: !8342)
!8344 = !DILocation(line: 3146, column: 1, scope: !8342)
!8345 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8225, file: !8225, line: 3163, type: !3451, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !832, retainedNodes: !2100)
!8346 = !DILocation(line: 3165, column: 11, scope: !8345)
!8347 = !DILocation(line: 3165, column: 46, scope: !8345)
!8348 = !DILocation(line: 3165, column: 3, scope: !8345)
!8349 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8350, file: !8350, line: 40, type: !3451, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !2100)
!8350 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8351 = !DILocation(line: 45, column: 3, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8353, file: !8350, line: 44, column: 44)
!8353 = distinct !DILexicalBlock(scope: !8354, file: !8350, line: 44, column: 13)
!8354 = distinct !DILexicalBlock(scope: !8349, file: !8350, line: 42, column: 6)
!8355 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8350, file: !8350, line: 56, type: !3169, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !2100)
!8356 = !DILocation(line: 58, column: 2, scope: !8355)
!8357 = !DILocation(line: 62, column: 1, scope: !8355)
!8358 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8225, file: !8225, line: 4304, type: !8359, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !8361)
!8359 = !DISubroutineType(types: !8360)
!8360 = !{null, !110, !110, !110, !110}
!8361 = !{!8362, !8363, !8364, !8365}
!8362 = !DILocalVariable(name: "Source", arg: 1, scope: !8358, file: !8225, line: 4304, type: !110)
!8363 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8358, file: !8225, line: 4304, type: !110)
!8364 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8358, file: !8225, line: 4304, type: !110)
!8365 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8358, file: !8225, line: 4304, type: !110)
!8366 = !DILocation(line: 0, scope: !8358)
!8367 = !DILocation(line: 4306, column: 3, scope: !8358)
!8368 = !DILocation(line: 4308, column: 3, scope: !8358)
!8369 = !DILocation(line: 4310, column: 3, scope: !8358)
!8370 = !DILocation(line: 4312, column: 1, scope: !8358)
!8371 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8350, file: !8350, line: 69, type: !3169, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !2100)
!8372 = !DILocation(line: 72, column: 2, scope: !8371)
!8373 = !DILocation(line: 73, column: 1, scope: !8371)
!8374 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8375, file: !8375, line: 1185, type: !6338, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2956, retainedNodes: !8376)
!8375 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8376 = !{!8377, !8378}
!8377 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8374, file: !8375, line: 1185, type: !110)
!8378 = !DILocalVariable(name: "tmpreg", scope: !8374, file: !8375, line: 1187, type: !301)
!8379 = !DILocation(line: 0, scope: !8374)
!8380 = !DILocation(line: 1187, column: 3, scope: !8374)
!8381 = !DILocation(line: 1187, column: 17, scope: !8374)
!8382 = !DILocation(line: 1188, column: 3, scope: !8374)
!8383 = !DILocation(line: 1190, column: 12, scope: !8374)
!8384 = !DILocation(line: 1190, column: 10, scope: !8374)
!8385 = !DILocation(line: 1191, column: 9, scope: !8374)
!8386 = !DILocation(line: 1192, column: 1, scope: !8374)
!8387 = distinct !DISubprogram(name: "uart_console_init", scope: !1028, file: !1028, line: 588, type: !1005, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !8388)
!8388 = !{!8389}
!8389 = !DILocalVariable(name: "arg", arg: 1, scope: !8387, file: !1028, line: 588, type: !983)
!8390 = !DILocation(line: 0, scope: !8387)
!8391 = !DILocation(line: 593, column: 7, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8387, file: !1028, line: 593, column: 6)
!8393 = !DILocation(line: 593, column: 6, scope: !8387)
!8394 = !DILocation(line: 597, column: 2, scope: !8387)
!8395 = !DILocation(line: 599, column: 2, scope: !8387)
!8396 = !DILocation(line: 600, column: 1, scope: !8387)
!8397 = distinct !DISubprogram(name: "device_is_ready", scope: !8398, file: !8398, line: 47, type: !8399, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !8401)
!8398 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!8399 = !DISubroutineType(types: !8400)
!8400 = !{!334, !983}
!8401 = !{!8402}
!8402 = !DILocalVariable(name: "dev", arg: 1, scope: !8397, file: !8398, line: 47, type: !983)
!8403 = !DILocation(line: 0, scope: !8397)
!8404 = !DILocation(line: 55, column: 2, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8397, file: !8398, line: 55, column: 2)
!8406 = !{i64 2155296474}
!8407 = !DILocation(line: 56, column: 9, scope: !8397)
!8408 = !DILocation(line: 56, column: 2, scope: !8397)
!8409 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1028, file: !1028, line: 573, type: !3169, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !2100)
!8410 = !DILocation(line: 579, column: 2, scope: !8409)
!8411 = !DILocation(line: 581, column: 1, scope: !8409)
!8412 = distinct !DISubprogram(name: "console_out", scope: !1028, file: !1028, line: 77, type: !288, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !8413)
!8413 = !{!8414}
!8414 = !DILocalVariable(name: "c", arg: 1, scope: !8412, file: !1028, line: 77, type: !109)
!8415 = !DILocation(line: 0, scope: !8412)
!8416 = !DILocation(line: 89, column: 11, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8412, file: !1028, line: 89, column: 6)
!8418 = !DILocation(line: 89, column: 6, scope: !8412)
!8419 = !DILocation(line: 90, column: 3, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8417, file: !1028, line: 89, column: 17)
!8421 = !DILocation(line: 91, column: 2, scope: !8420)
!8422 = !DILocation(line: 92, column: 34, scope: !8412)
!8423 = !DILocation(line: 92, column: 2, scope: !8412)
!8424 = !DILocation(line: 94, column: 2, scope: !8412)
!8425 = distinct !DISubprogram(name: "uart_poll_out", scope: !8426, file: !8426, line: 95, type: !1001, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !8427)
!8426 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/zephyr-build/build/96b_stm32_sensor_mez/philosophers")
!8427 = !{!8428, !8429}
!8428 = !DILocalVariable(name: "dev", arg: 1, scope: !8425, file: !8426, line: 95, type: !983)
!8429 = !DILocalVariable(name: "out_char", arg: 2, scope: !8425, file: !8426, line: 95, type: !168)
!8430 = !DILocation(line: 0, scope: !8425)
!8431 = !DILocation(line: 105, column: 2, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8425, file: !8426, line: 105, column: 2)
!8433 = !{i64 2155379865}
!8434 = !DILocation(line: 106, column: 2, scope: !8425)
!8435 = !DILocation(line: 107, column: 1, scope: !8425)
!8436 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !977, file: !977, line: 574, type: !1001, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !8437)
!8437 = !{!8438, !8439, !8440}
!8438 = !DILocalVariable(name: "dev", arg: 1, scope: !8436, file: !977, line: 574, type: !983)
!8439 = !DILocalVariable(name: "out_char", arg: 2, scope: !8436, file: !977, line: 575, type: !168)
!8440 = !DILocalVariable(name: "api", scope: !8436, file: !977, line: 577, type: !974)
!8441 = !DILocation(line: 0, scope: !8436)
!8442 = !DILocation(line: 578, column: 40, scope: !8436)
!8443 = !DILocation(line: 580, column: 7, scope: !8436)
!8444 = !DILocation(line: 580, column: 2, scope: !8436)
!8445 = !DILocation(line: 581, column: 1, scope: !8436)
!8446 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !321, file: !321, line: 730, type: !8399, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !8447)
!8447 = !{!8448}
!8448 = !DILocalVariable(name: "dev", arg: 1, scope: !8446, file: !321, line: 730, type: !983)
!8449 = !DILocation(line: 0, scope: !8446)
!8450 = !DILocation(line: 732, column: 9, scope: !8446)
!8451 = !DILocation(line: 732, column: 2, scope: !8446)
!8452 = distinct !DISubprogram(name: "uart_register_input", scope: !1028, file: !1028, line: 560, type: !8453, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !971, retainedNodes: !8500)
!8453 = !DISubroutineType(types: !8454)
!8454 = !{null, !8455, !8455, !8497}
!8455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8456, size: 32)
!8456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !119, line: 2208, size: 160, elements: !8457)
!8457 = !{!8458}
!8458 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8456, file: !119, line: 2209, baseType: !8459, size: 160)
!8459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !119, line: 1709, size: 160, elements: !8460)
!8460 = !{!8461, !8474, !8478}
!8461 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8459, file: !119, line: 1710, baseType: !8462, size: 64)
!8462 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8463, line: 46, baseType: !8464)
!8463 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8463, line: 41, size: 64, elements: !8465)
!8465 = !{!8466, !8473}
!8466 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8464, file: !8463, line: 42, baseType: !8467, size: 32)
!8467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8468, size: 32)
!8468 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8463, line: 39, baseType: !8469)
!8469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8463, line: 35, size: 32, elements: !8470)
!8470 = !{!8471}
!8471 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8469, file: !8463, line: 36, baseType: !8472, size: 32)
!8472 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8463, line: 32, baseType: !110)
!8473 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8464, file: !8463, line: 43, baseType: !8467, size: 32, offset: 32)
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8459, file: !119, line: 1711, baseType: !8475, size: 32, offset: 64)
!8475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !8476)
!8476 = !{!8477}
!8477 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !8475, file: !254, line: 52, baseType: !22, size: 32)
!8478 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8459, file: !119, line: 1712, baseType: !8479, size: 64, offset: 96)
!8479 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !8480)
!8480 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !8481)
!8481 = !{!8482}
!8482 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8480, file: !123, line: 232, baseType: !8483, size: 64)
!8483 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !8484)
!8484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !8485)
!8485 = !{!8486, !8492}
!8486 = !DIDerivedType(tag: DW_TAG_member, scope: !8484, file: !128, line: 38, baseType: !8487, size: 32)
!8487 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8484, file: !128, line: 38, size: 32, elements: !8488)
!8488 = !{!8489, !8491}
!8489 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8487, file: !128, line: 39, baseType: !8490, size: 32)
!8490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8484, size: 32)
!8491 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8487, file: !128, line: 40, baseType: !8490, size: 32)
!8492 = !DIDerivedType(tag: DW_TAG_member, scope: !8484, file: !128, line: 42, baseType: !8493, size: 32, offset: 32)
!8493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8484, file: !128, line: 42, size: 32, elements: !8494)
!8494 = !{!8495, !8496}
!8495 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8493, file: !128, line: 43, baseType: !8490, size: 32)
!8496 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8493, file: !128, line: 44, baseType: !8490, size: 32)
!8497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8498, size: 32)
!8498 = !DISubroutineType(types: !8499)
!8499 = !{!167, !1165, !167}
!8500 = !{!8501, !8502, !8503}
!8501 = !DILocalVariable(name: "avail", arg: 1, scope: !8452, file: !1028, line: 560, type: !8455)
!8502 = !DILocalVariable(name: "lines", arg: 2, scope: !8452, file: !1028, line: 560, type: !8455)
!8503 = !DILocalVariable(name: "completion", arg: 3, scope: !8452, file: !1028, line: 561, type: !8497)
!8504 = !DILocation(line: 0, scope: !8452)
!8505 = !DILocation(line: 566, column: 1, scope: !8452)
!8506 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1209, file: !1209, line: 523, type: !1064, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8507)
!8507 = !{!8508, !8509, !8510, !8511, !8512}
!8508 = !DILocalVariable(name: "dev", arg: 1, scope: !8506, file: !1209, line: 523, type: !1066)
!8509 = !DILocalVariable(name: "pin", arg: 2, scope: !8506, file: !1209, line: 524, type: !1081)
!8510 = !DILocalVariable(name: "flags", arg: 3, scope: !8506, file: !1209, line: 524, type: !1082)
!8511 = !DILocalVariable(name: "err", scope: !8506, file: !1209, line: 526, type: !109)
!8512 = !DILocalVariable(name: "pincfg", scope: !8506, file: !1209, line: 527, type: !109)
!8513 = !DILocation(line: 0, scope: !8506)
!8514 = !DILocation(line: 527, column: 2, scope: !8506)
!8515 = !DILocation(line: 532, column: 8, scope: !8506)
!8516 = !DILocation(line: 533, column: 10, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8506, file: !1209, line: 533, column: 6)
!8518 = !DILocation(line: 533, column: 6, scope: !8506)
!8519 = !DILocation(line: 543, column: 13, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8506, file: !1209, line: 543, column: 6)
!8521 = !DILocation(line: 543, column: 28, scope: !8520)
!8522 = !DILocation(line: 543, column: 6, scope: !8506)
!8523 = !DILocation(line: 544, column: 14, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8525, file: !1209, line: 544, column: 7)
!8525 = distinct !DILexicalBlock(scope: !8520, file: !1209, line: 543, column: 34)
!8526 = !DILocation(line: 544, column: 39, scope: !8524)
!8527 = !DILocation(line: 544, column: 7, scope: !8525)
!8528 = !DILocation(line: 545, column: 38, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8524, file: !1209, line: 544, column: 45)
!8530 = !DILocation(line: 545, column: 4, scope: !8529)
!8531 = !DILocation(line: 546, column: 3, scope: !8529)
!8532 = !DILocation(line: 546, column: 21, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8524, file: !1209, line: 546, column: 14)
!8534 = !DILocation(line: 546, column: 45, scope: !8533)
!8535 = !DILocation(line: 546, column: 14, scope: !8524)
!8536 = !DILocation(line: 547, column: 40, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8533, file: !1209, line: 546, column: 51)
!8538 = !DILocation(line: 547, column: 4, scope: !8537)
!8539 = !DILocation(line: 548, column: 3, scope: !8537)
!8540 = !DILocation(line: 551, column: 32, scope: !8506)
!8541 = !DILocation(line: 551, column: 37, scope: !8506)
!8542 = !DILocation(line: 551, column: 2, scope: !8506)
!8543 = !DILocation(line: 554, column: 6, scope: !8506)
!8544 = !DILocation(line: 562, column: 1, scope: !8506)
!8545 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1209, file: !1209, line: 410, type: !8546, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8548)
!8546 = !DISubroutineType(types: !8547)
!8547 = !{!109, !1066, !893}
!8548 = !{!8549, !8550, !8551, !8553}
!8549 = !DILocalVariable(name: "dev", arg: 1, scope: !8545, file: !1209, line: 410, type: !1066)
!8550 = !DILocalVariable(name: "value", arg: 2, scope: !8545, file: !1209, line: 410, type: !893)
!8551 = !DILocalVariable(name: "cfg", scope: !8545, file: !1209, line: 412, type: !8552)
!8552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 32)
!8553 = !DILocalVariable(name: "gpio", scope: !8545, file: !1209, line: 413, type: !1139)
!8554 = !DILocation(line: 0, scope: !8545)
!8555 = !DILocation(line: 412, column: 45, scope: !8545)
!8556 = !DILocation(line: 413, column: 44, scope: !8545)
!8557 = !DILocation(line: 415, column: 11, scope: !8545)
!8558 = !DILocation(line: 415, column: 9, scope: !8545)
!8559 = !DILocation(line: 417, column: 2, scope: !8545)
!8560 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1209, file: !1209, line: 420, type: !1091, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8561)
!8561 = !{!8562, !8563, !8564, !8565, !8566, !8567}
!8562 = !DILocalVariable(name: "dev", arg: 1, scope: !8560, file: !1209, line: 420, type: !1066)
!8563 = !DILocalVariable(name: "mask", arg: 2, scope: !8560, file: !1209, line: 421, type: !1093)
!8564 = !DILocalVariable(name: "value", arg: 3, scope: !8560, file: !1209, line: 422, type: !1088)
!8565 = !DILocalVariable(name: "cfg", scope: !8560, file: !1209, line: 424, type: !8552)
!8566 = !DILocalVariable(name: "gpio", scope: !8560, file: !1209, line: 425, type: !1139)
!8567 = !DILocalVariable(name: "port_value", scope: !8560, file: !1209, line: 426, type: !110)
!8568 = !DILocation(line: 0, scope: !8560)
!8569 = !DILocation(line: 424, column: 45, scope: !8560)
!8570 = !DILocation(line: 425, column: 44, scope: !8560)
!8571 = !DILocation(line: 430, column: 15, scope: !8560)
!8572 = !DILocation(line: 431, column: 46, scope: !8560)
!8573 = !DILocation(line: 431, column: 44, scope: !8560)
!8574 = !DILocation(line: 431, column: 61, scope: !8560)
!8575 = !DILocation(line: 431, column: 53, scope: !8560)
!8576 = !DILocation(line: 431, column: 2, scope: !8560)
!8577 = !DILocation(line: 435, column: 2, scope: !8560)
!8578 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1209, file: !1209, line: 438, type: !1096, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8579)
!8579 = !{!8580, !8581, !8582, !8583}
!8580 = !DILocalVariable(name: "dev", arg: 1, scope: !8578, file: !1209, line: 438, type: !1066)
!8581 = !DILocalVariable(name: "pins", arg: 2, scope: !8578, file: !1209, line: 439, type: !1093)
!8582 = !DILocalVariable(name: "cfg", scope: !8578, file: !1209, line: 441, type: !8552)
!8583 = !DILocalVariable(name: "gpio", scope: !8578, file: !1209, line: 442, type: !1139)
!8584 = !DILocation(line: 0, scope: !8578)
!8585 = !DILocation(line: 441, column: 45, scope: !8578)
!8586 = !DILocation(line: 442, column: 44, scope: !8578)
!8587 = !DILocation(line: 448, column: 2, scope: !8578)
!8588 = !DILocation(line: 450, column: 2, scope: !8578)
!8589 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1209, file: !1209, line: 453, type: !1096, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8590)
!8590 = !{!8591, !8592, !8593, !8594}
!8591 = !DILocalVariable(name: "dev", arg: 1, scope: !8589, file: !1209, line: 453, type: !1066)
!8592 = !DILocalVariable(name: "pins", arg: 2, scope: !8589, file: !1209, line: 454, type: !1093)
!8593 = !DILocalVariable(name: "cfg", scope: !8589, file: !1209, line: 456, type: !8552)
!8594 = !DILocalVariable(name: "gpio", scope: !8589, file: !1209, line: 457, type: !1139)
!8595 = !DILocation(line: 0, scope: !8589)
!8596 = !DILocation(line: 456, column: 45, scope: !8589)
!8597 = !DILocation(line: 457, column: 44, scope: !8589)
!8598 = !DILocation(line: 467, column: 2, scope: !8589)
!8599 = !DILocation(line: 470, column: 2, scope: !8589)
!8600 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1209, file: !1209, line: 473, type: !1096, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8601)
!8601 = !{!8602, !8603, !8604, !8605}
!8602 = !DILocalVariable(name: "dev", arg: 1, scope: !8600, file: !1209, line: 473, type: !1066)
!8603 = !DILocalVariable(name: "pins", arg: 2, scope: !8600, file: !1209, line: 474, type: !1093)
!8604 = !DILocalVariable(name: "cfg", scope: !8600, file: !1209, line: 476, type: !8552)
!8605 = !DILocalVariable(name: "gpio", scope: !8600, file: !1209, line: 477, type: !1139)
!8606 = !DILocation(line: 0, scope: !8600)
!8607 = !DILocation(line: 476, column: 45, scope: !8600)
!8608 = !DILocation(line: 477, column: 44, scope: !8600)
!8609 = !DILocation(line: 484, column: 2, scope: !8600)
!8610 = !DILocation(line: 487, column: 2, scope: !8600)
!8611 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1209, file: !1209, line: 594, type: !1102, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8612)
!8612 = !{!8613, !8614, !8615, !8616, !8617, !8618, !8620, !8621, !8622}
!8613 = !DILocalVariable(name: "dev", arg: 1, scope: !8611, file: !1209, line: 594, type: !1066)
!8614 = !DILocalVariable(name: "pin", arg: 2, scope: !8611, file: !1209, line: 595, type: !1081)
!8615 = !DILocalVariable(name: "mode", arg: 3, scope: !8611, file: !1209, line: 596, type: !1040)
!8616 = !DILocalVariable(name: "trig", arg: 4, scope: !8611, file: !1209, line: 597, type: !1046)
!8617 = !DILocalVariable(name: "cfg", scope: !8611, file: !1209, line: 599, type: !8552)
!8618 = !DILocalVariable(name: "data", scope: !8611, file: !1209, line: 600, type: !8619)
!8619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 32)
!8620 = !DILocalVariable(name: "edge", scope: !8611, file: !1209, line: 601, type: !109)
!8621 = !DILocalVariable(name: "err", scope: !8611, file: !1209, line: 602, type: !109)
!8622 = !DILabel(scope: !8611, name: "exit", file: !1209, line: 643)
!8623 = !DILocation(line: 0, scope: !8611)
!8624 = !DILocation(line: 599, column: 45, scope: !8611)
!8625 = !DILocation(line: 604, column: 6, scope: !8611)
!8626 = !DILocation(line: 605, column: 34, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8628, file: !1209, line: 605, column: 7)
!8628 = distinct !DILexicalBlock(scope: !8629, file: !1209, line: 604, column: 38)
!8629 = distinct !DILexicalBlock(scope: !8611, file: !1209, line: 604, column: 6)
!8630 = !DILocation(line: 605, column: 7, scope: !8627)
!8631 = !DILocation(line: 605, column: 47, scope: !8627)
!8632 = !DILocation(line: 605, column: 39, scope: !8627)
!8633 = !DILocation(line: 605, column: 7, scope: !8628)
!8634 = !DILocation(line: 606, column: 4, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8627, file: !1209, line: 605, column: 53)
!8636 = !DILocation(line: 607, column: 4, scope: !8635)
!8637 = !DILocation(line: 608, column: 4, scope: !8635)
!8638 = !DILocation(line: 609, column: 3, scope: !8635)
!8639 = !DILocation(line: 600, column: 38, scope: !8611)
!8640 = !DILocation(line: 620, column: 30, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8611, file: !1209, line: 620, column: 6)
!8642 = !DILocation(line: 620, column: 6, scope: !8641)
!8643 = !DILocation(line: 620, column: 57, scope: !8641)
!8644 = !DILocation(line: 620, column: 6, scope: !8611)
!8645 = !DILocation(line: 625, column: 29, scope: !8611)
!8646 = !DILocation(line: 625, column: 2, scope: !8611)
!8647 = !DILocation(line: 627, column: 2, scope: !8611)
!8648 = !DILocation(line: 630, column: 3, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8611, file: !1209, line: 627, column: 16)
!8650 = !DILocation(line: 633, column: 3, scope: !8649)
!8651 = !DILocation(line: 636, column: 3, scope: !8649)
!8652 = !DILocation(line: 639, column: 2, scope: !8611)
!8653 = !DILocation(line: 641, column: 2, scope: !8611)
!8654 = !DILocation(line: 643, column: 1, scope: !8611)
!8655 = !DILocation(line: 644, column: 2, scope: !8611)
!8656 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1209, file: !1209, line: 647, type: !1106, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8657)
!8657 = !{!8658, !8659, !8660, !8661}
!8658 = !DILocalVariable(name: "dev", arg: 1, scope: !8656, file: !1209, line: 647, type: !1066)
!8659 = !DILocalVariable(name: "callback", arg: 2, scope: !8656, file: !1209, line: 648, type: !1108)
!8660 = !DILocalVariable(name: "set", arg: 3, scope: !8656, file: !1209, line: 649, type: !334)
!8661 = !DILocalVariable(name: "data", scope: !8656, file: !1209, line: 651, type: !8619)
!8662 = !DILocation(line: 0, scope: !8656)
!8663 = !DILocation(line: 651, column: 38, scope: !8656)
!8664 = !DILocation(line: 653, column: 37, scope: !8656)
!8665 = !DILocation(line: 653, column: 9, scope: !8656)
!8666 = !DILocation(line: 653, column: 2, scope: !8656)
!8667 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8668, file: !8668, line: 38, type: !8669, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8672)
!8668 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8669 = !DISubroutineType(types: !8670)
!8670 = !{!109, !8671, !1108, !334}
!8671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 32)
!8672 = !{!8673, !8674, !8675}
!8673 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8667, file: !8668, line: 38, type: !8671)
!8674 = !DILocalVariable(name: "callback", arg: 2, scope: !8667, file: !8668, line: 39, type: !1108)
!8675 = !DILocalVariable(name: "set", arg: 3, scope: !8667, file: !8668, line: 40, type: !334)
!8676 = !DILocation(line: 0, scope: !8667)
!8677 = !DILocation(line: 42, column: 2, scope: !8678)
!8678 = distinct !DILexicalBlock(scope: !8679, file: !8668, line: 42, column: 2)
!8679 = distinct !DILexicalBlock(scope: !8667, file: !8668, line: 42, column: 2)
!8680 = !DILocation(line: 42, column: 2, scope: !8679)
!8681 = !DILocation(line: 42, column: 2, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8678, file: !8668, line: 42, column: 2)
!8683 = !DILocation(line: 43, column: 2, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8685, file: !8668, line: 43, column: 2)
!8685 = distinct !DILexicalBlock(scope: !8667, file: !8668, line: 43, column: 2)
!8686 = !DILocation(line: 43, column: 2, scope: !8685)
!8687 = !DILocation(line: 43, column: 2, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8684, file: !8668, line: 43, column: 2)
!8689 = !DILocation(line: 45, column: 7, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8667, file: !8668, line: 45, column: 6)
!8691 = !DILocation(line: 45, column: 6, scope: !8667)
!8692 = !DILocation(line: 46, column: 56, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8694, file: !8668, line: 46, column: 7)
!8694 = distinct !DILexicalBlock(scope: !8690, file: !8668, line: 45, column: 38)
!8695 = !DILocation(line: 46, column: 8, scope: !8693)
!8696 = !DILocation(line: 46, column: 7, scope: !8694)
!8697 = !DILocation(line: 51, column: 13, scope: !8690)
!8698 = !DILocation(line: 56, column: 43, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8700, file: !8668, line: 55, column: 11)
!8700 = distinct !DILexicalBlock(scope: !8667, file: !8668, line: 55, column: 6)
!8701 = !DILocation(line: 56, column: 3, scope: !8699)
!8702 = !DILocation(line: 57, column: 2, scope: !8699)
!8703 = !DILocation(line: 60, column: 1, scope: !8667)
!8704 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1113, file: !1113, line: 261, type: !8705, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8707)
!8705 = !DISubroutineType(types: !8706)
!8706 = !{!334, !8671}
!8707 = !{!8708}
!8708 = !DILocalVariable(name: "list", arg: 1, scope: !8704, file: !1113, line: 261, type: !8671)
!8709 = !DILocation(line: 0, scope: !8704)
!8710 = !DILocation(line: 261, column: 1, scope: !8704)
!8711 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1113, file: !1113, line: 417, type: !8712, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8714)
!8712 = !DISubroutineType(types: !8713)
!8713 = !{!334, !8671, !1282}
!8714 = !{!8715, !8716, !8717, !8718}
!8715 = !DILocalVariable(name: "list", arg: 1, scope: !8711, file: !1113, line: 417, type: !8671)
!8716 = !DILocalVariable(name: "node", arg: 2, scope: !8711, file: !1113, line: 417, type: !1282)
!8717 = !DILocalVariable(name: "prev", scope: !8711, file: !1113, line: 417, type: !1282)
!8718 = !DILocalVariable(name: "test", scope: !8711, file: !1113, line: 417, type: !1282)
!8719 = !DILocation(line: 0, scope: !8711)
!8720 = !DILocation(line: 417, column: 1, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8711, file: !1113, line: 417, column: 1)
!8722 = !DILocation(line: 417, column: 1, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8721, file: !1113, line: 417, column: 1)
!8724 = !DILocation(line: 417, column: 1, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8726, file: !1113, line: 417, column: 1)
!8726 = distinct !DILexicalBlock(scope: !8723, file: !1113, line: 417, column: 1)
!8727 = !DILocation(line: 417, column: 1, scope: !8726)
!8728 = distinct !{!8728, !8720, !8720}
!8729 = !DILocation(line: 417, column: 1, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8725, file: !1113, line: 417, column: 1)
!8731 = !DILocation(line: 417, column: 1, scope: !8711)
!8732 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1113, file: !1113, line: 298, type: !8733, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8735)
!8733 = !DISubroutineType(types: !8734)
!8734 = !{null, !8671, !1282}
!8735 = !{!8736, !8737}
!8736 = !DILocalVariable(name: "list", arg: 1, scope: !8732, file: !1113, line: 298, type: !8671)
!8737 = !DILocalVariable(name: "node", arg: 2, scope: !8732, file: !1113, line: 298, type: !1282)
!8738 = !DILocation(line: 0, scope: !8732)
!8739 = !DILocation(line: 298, column: 1, scope: !8732)
!8740 = !DILocation(line: 298, column: 1, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8732, file: !1113, line: 298, column: 1)
!8742 = !DILocation(line: 298, column: 1, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8741, file: !1113, line: 298, column: 1)
!8744 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1113, file: !1113, line: 231, type: !8745, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8747)
!8745 = !DISubroutineType(types: !8746)
!8746 = !{!1282, !8671}
!8747 = !{!8748}
!8748 = !DILocalVariable(name: "list", arg: 1, scope: !8744, file: !1113, line: 231, type: !8671)
!8749 = !DILocation(line: 0, scope: !8744)
!8750 = !DILocation(line: 233, column: 15, scope: !8744)
!8751 = !DILocation(line: 233, column: 2, scope: !8744)
!8752 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1113, file: !1113, line: 209, type: !8753, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8755)
!8753 = !DISubroutineType(types: !8754)
!8754 = !{null, !1282, !1282}
!8755 = !{!8756, !8757}
!8756 = !DILocalVariable(name: "parent", arg: 1, scope: !8752, file: !1113, line: 209, type: !1282)
!8757 = !DILocalVariable(name: "child", arg: 2, scope: !8752, file: !1113, line: 209, type: !1282)
!8758 = !DILocation(line: 0, scope: !8752)
!8759 = !DILocation(line: 211, column: 10, scope: !8752)
!8760 = !DILocation(line: 211, column: 15, scope: !8752)
!8761 = !DILocation(line: 212, column: 1, scope: !8752)
!8762 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1113, file: !1113, line: 214, type: !8733, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8763)
!8763 = !{!8764, !8765}
!8764 = !DILocalVariable(name: "list", arg: 1, scope: !8762, file: !1113, line: 214, type: !8671)
!8765 = !DILocalVariable(name: "node", arg: 2, scope: !8762, file: !1113, line: 214, type: !1282)
!8766 = !DILocation(line: 0, scope: !8762)
!8767 = !DILocation(line: 216, column: 8, scope: !8762)
!8768 = !DILocation(line: 216, column: 13, scope: !8762)
!8769 = !DILocation(line: 217, column: 1, scope: !8762)
!8770 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1113, file: !1113, line: 243, type: !8745, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8771)
!8771 = !{!8772}
!8772 = !DILocalVariable(name: "list", arg: 1, scope: !8770, file: !1113, line: 243, type: !8671)
!8773 = !DILocation(line: 0, scope: !8770)
!8774 = !DILocation(line: 245, column: 15, scope: !8770)
!8775 = !DILocation(line: 245, column: 2, scope: !8770)
!8776 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1113, file: !1113, line: 219, type: !8733, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8777)
!8777 = !{!8778, !8779}
!8778 = !DILocalVariable(name: "list", arg: 1, scope: !8776, file: !1113, line: 219, type: !8671)
!8779 = !DILocalVariable(name: "node", arg: 2, scope: !8776, file: !1113, line: 219, type: !1282)
!8780 = !DILocation(line: 0, scope: !8776)
!8781 = !DILocation(line: 221, column: 8, scope: !8776)
!8782 = !DILocation(line: 221, column: 13, scope: !8776)
!8783 = !DILocation(line: 222, column: 1, scope: !8776)
!8784 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1113, file: !1113, line: 401, type: !8785, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8787)
!8785 = !DISubroutineType(types: !8786)
!8786 = !{null, !8671, !1282, !1282}
!8787 = !{!8788, !8789, !8790}
!8788 = !DILocalVariable(name: "list", arg: 1, scope: !8784, file: !1113, line: 401, type: !8671)
!8789 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8784, file: !1113, line: 401, type: !1282)
!8790 = !DILocalVariable(name: "node", arg: 3, scope: !8784, file: !1113, line: 401, type: !1282)
!8791 = !DILocation(line: 0, scope: !8784)
!8792 = !DILocation(line: 401, column: 1, scope: !8793)
!8793 = distinct !DILexicalBlock(scope: !8784, file: !1113, line: 401, column: 1)
!8794 = !DILocation(line: 0, scope: !8793)
!8795 = !DILocation(line: 401, column: 1, scope: !8784)
!8796 = !DILocation(line: 401, column: 1, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8793, file: !1113, line: 401, column: 1)
!8798 = !DILocation(line: 401, column: 1, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8797, file: !1113, line: 401, column: 1)
!8800 = !DILocation(line: 401, column: 1, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8799, file: !1113, line: 401, column: 1)
!8802 = !DILocation(line: 401, column: 1, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8793, file: !1113, line: 401, column: 1)
!8804 = !DILocation(line: 401, column: 1, scope: !8805)
!8805 = distinct !DILexicalBlock(scope: !8803, file: !1113, line: 401, column: 1)
!8806 = !DILocation(line: 401, column: 1, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8805, file: !1113, line: 401, column: 1)
!8808 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1113, file: !1113, line: 285, type: !8809, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8811)
!8809 = !DISubroutineType(types: !8810)
!8810 = !{!1282, !1282}
!8811 = !{!8812}
!8812 = !DILocalVariable(name: "node", arg: 1, scope: !8808, file: !1113, line: 285, type: !1282)
!8813 = !DILocation(line: 0, scope: !8808)
!8814 = !DILocation(line: 285, column: 1, scope: !8808)
!8815 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1113, file: !1113, line: 274, type: !8809, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8816)
!8816 = !{!8817}
!8817 = !DILocalVariable(name: "node", arg: 1, scope: !8815, file: !1113, line: 274, type: !1282)
!8818 = !DILocation(line: 0, scope: !8815)
!8819 = !DILocation(line: 274, column: 1, scope: !8815)
!8820 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1113, file: !1113, line: 204, type: !8809, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8821)
!8821 = !{!8822}
!8822 = !DILocalVariable(name: "node", arg: 1, scope: !8820, file: !1113, line: 204, type: !1282)
!8823 = !DILocation(line: 0, scope: !8820)
!8824 = !DILocation(line: 206, column: 15, scope: !8820)
!8825 = !DILocation(line: 206, column: 2, scope: !8820)
!8826 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1209, file: !1209, line: 342, type: !288, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8827)
!8827 = !{!8828, !8829, !8830}
!8828 = !DILocalVariable(name: "pin", arg: 1, scope: !8826, file: !1209, line: 342, type: !109)
!8829 = !DILocalVariable(name: "line", scope: !8826, file: !1209, line: 344, type: !110)
!8830 = !DILocalVariable(name: "port", scope: !8826, file: !1209, line: 345, type: !109)
!8831 = !DILocation(line: 0, scope: !8826)
!8832 = !DILocation(line: 344, column: 18, scope: !8826)
!8833 = !{i32 983040, i32 0}
!8834 = !DILocation(line: 356, column: 9, scope: !8826)
!8835 = !DILocation(line: 370, column: 2, scope: !8826)
!8836 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1209, file: !1209, line: 37, type: !748, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8837)
!8837 = !{!8838, !8839, !8840}
!8838 = !DILocalVariable(name: "line", arg: 1, scope: !8836, file: !1209, line: 37, type: !109)
!8839 = !DILocalVariable(name: "arg", arg: 2, scope: !8836, file: !1209, line: 37, type: !108)
!8840 = !DILocalVariable(name: "data", scope: !8836, file: !1209, line: 39, type: !8619)
!8841 = !DILocation(line: 0, scope: !8836)
!8842 = !DILocation(line: 41, column: 29, scope: !8836)
!8843 = !DILocation(line: 41, column: 39, scope: !8836)
!8844 = !DILocation(line: 41, column: 44, scope: !8836)
!8845 = !DILocation(line: 41, column: 2, scope: !8836)
!8846 = !DILocation(line: 42, column: 1, scope: !8836)
!8847 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1209, file: !1209, line: 376, type: !8848, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8850)
!8848 = !DISubroutineType(types: !8849)
!8849 = !{!109, !109, !109}
!8850 = !{!8851, !8852, !8853, !8855, !8856}
!8851 = !DILocalVariable(name: "port", arg: 1, scope: !8847, file: !1209, line: 376, type: !109)
!8852 = !DILocalVariable(name: "pin", arg: 2, scope: !8847, file: !1209, line: 376, type: !109)
!8853 = !DILocalVariable(name: "clk", scope: !8847, file: !1209, line: 386, type: !8854)
!8854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1066)
!8855 = !DILocalVariable(name: "pclken", scope: !8847, file: !1209, line: 387, type: !1325)
!8856 = !DILocalVariable(name: "ret", scope: !8847, file: !1209, line: 396, type: !109)
!8857 = !DILocation(line: 0, scope: !8847)
!8858 = !DILocation(line: 387, column: 2, scope: !8847)
!8859 = !DILocation(line: 387, column: 22, scope: !8847)
!8860 = !DILocation(line: 399, column: 8, scope: !8847)
!8861 = !DILocation(line: 400, column: 10, scope: !8862)
!8862 = distinct !DILexicalBlock(scope: !8847, file: !1209, line: 400, column: 6)
!8863 = !DILocation(line: 400, column: 6, scope: !8847)
!8864 = !DILocation(line: 405, column: 2, scope: !8847)
!8865 = !DILocation(line: 407, column: 2, scope: !8847)
!8866 = !DILocation(line: 408, column: 1, scope: !8847)
!8867 = distinct !DISubprogram(name: "clock_control_on", scope: !841, file: !841, line: 123, type: !1174, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8868)
!8868 = !{!8869, !8870, !8871}
!8869 = !DILocalVariable(name: "dev", arg: 1, scope: !8867, file: !841, line: 123, type: !1066)
!8870 = !DILocalVariable(name: "sys", arg: 2, scope: !8867, file: !841, line: 124, type: !937)
!8871 = !DILocalVariable(name: "api", scope: !8867, file: !841, line: 126, type: !1167)
!8872 = !DILocation(line: 0, scope: !8867)
!8873 = !DILocation(line: 127, column: 49, scope: !8867)
!8874 = !DILocation(line: 129, column: 14, scope: !8867)
!8875 = !DILocation(line: 129, column: 9, scope: !8867)
!8876 = !DILocation(line: 129, column: 2, scope: !8867)
!8877 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1209, file: !1209, line: 311, type: !7982, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8878)
!8878 = !{!8879, !8880, !8881}
!8879 = !DILocalVariable(name: "port", arg: 1, scope: !8877, file: !1209, line: 311, type: !109)
!8880 = !DILocalVariable(name: "pin", arg: 2, scope: !8877, file: !1209, line: 311, type: !109)
!8881 = !DILocalVariable(name: "line", scope: !8877, file: !1209, line: 313, type: !110)
!8882 = !DILocation(line: 0, scope: !8877)
!8883 = !DILocation(line: 313, column: 18, scope: !8877)
!8884 = !DILocation(line: 337, column: 2, scope: !8877)
!8885 = !DILocation(line: 340, column: 1, scope: !8877)
!8886 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1209, file: !1209, line: 295, type: !8887, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8889)
!8887 = !DISubroutineType(types: !8888)
!8888 = !{!110, !109}
!8889 = !{!8890}
!8890 = !DILocalVariable(name: "pin", arg: 1, scope: !8886, file: !1209, line: 295, type: !109)
!8891 = !DILocation(line: 0, scope: !8886)
!8892 = !DILocation(line: 307, column: 46, scope: !8886)
!8893 = !DILocation(line: 307, column: 27, scope: !8886)
!8894 = !DILocation(line: 307, column: 32, scope: !8886)
!8895 = !DILocation(line: 307, column: 14, scope: !8886)
!8896 = !DILocation(line: 307, column: 39, scope: !8886)
!8897 = !DILocation(line: 307, column: 2, scope: !8886)
!8898 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6090, file: !6090, line: 671, type: !8899, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8901)
!8899 = !DISubroutineType(types: !8900)
!8900 = !{null, !110, !110}
!8901 = !{!8902, !8903}
!8902 = !DILocalVariable(name: "Port", arg: 1, scope: !8898, file: !6090, line: 671, type: !110)
!8903 = !DILocalVariable(name: "Line", arg: 2, scope: !8898, file: !6090, line: 671, type: !110)
!8904 = !DILocation(line: 0, scope: !8898)
!8905 = !DILocation(line: 673, column: 3, scope: !8898)
!8906 = !DILocalVariable(name: "value", arg: 1, scope: !8907, file: !6243, line: 373, type: !110)
!8907 = distinct !DISubprogram(name: "__RBIT", scope: !6243, file: !6243, line: 373, type: !7305, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8908)
!8908 = !{!8906, !8909}
!8909 = !DILocalVariable(name: "result", scope: !8907, file: !6243, line: 375, type: !110)
!8910 = !DILocation(line: 0, scope: !8907, inlinedAt: !8911)
!8911 = distinct !DILocation(line: 673, column: 3, scope: !8898)
!8912 = !DILocation(line: 380, column: 4, scope: !8907, inlinedAt: !8911)
!8913 = !{i64 3732975}
!8914 = !DILocalVariable(name: "value", arg: 1, scope: !8915, file: !6243, line: 403, type: !110)
!8915 = distinct !DISubprogram(name: "__CLZ", scope: !6243, file: !6243, line: 403, type: !8916, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8918)
!8916 = !DISubroutineType(types: !8917)
!8917 = !{!167, !110}
!8918 = !{!8914}
!8919 = !DILocation(line: 0, scope: !8915, inlinedAt: !8920)
!8920 = distinct !DILocation(line: 673, column: 3, scope: !8898)
!8921 = !DILocation(line: 414, column: 7, scope: !8915, inlinedAt: !8920)
!8922 = !DILocation(line: 674, column: 1, scope: !8898)
!8923 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8668, file: !8668, line: 69, type: !8924, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8926)
!8924 = !DISubroutineType(types: !8925)
!8925 = !{null, !8671, !1066, !110}
!8926 = !{!8927, !8928, !8929, !8930, !8931}
!8927 = !DILocalVariable(name: "list", arg: 1, scope: !8923, file: !8668, line: 69, type: !8671)
!8928 = !DILocalVariable(name: "port", arg: 2, scope: !8923, file: !8668, line: 70, type: !1066)
!8929 = !DILocalVariable(name: "pins", arg: 3, scope: !8923, file: !8668, line: 71, type: !110)
!8930 = !DILocalVariable(name: "cb", scope: !8923, file: !8668, line: 73, type: !1108)
!8931 = !DILocalVariable(name: "tmp", scope: !8923, file: !8668, line: 73, type: !1108)
!8932 = !DILocation(line: 0, scope: !8923)
!8933 = !DILocation(line: 75, column: 2, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8923, file: !8668, line: 75, column: 2)
!8935 = !DILocation(line: 0, scope: !8934)
!8936 = !DILocation(line: 76, column: 11, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8938, file: !8668, line: 76, column: 7)
!8938 = distinct !DILexicalBlock(scope: !8939, file: !8668, line: 75, column: 57)
!8939 = distinct !DILexicalBlock(scope: !8934, file: !8668, line: 75, column: 2)
!8940 = !DILocation(line: 76, column: 20, scope: !8937)
!8941 = !DILocation(line: 76, column: 7, scope: !8938)
!8942 = !DILocation(line: 77, column: 4, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8944, file: !8668, line: 77, column: 4)
!8944 = distinct !DILexicalBlock(scope: !8945, file: !8668, line: 77, column: 4)
!8945 = distinct !DILexicalBlock(scope: !8937, file: !8668, line: 76, column: 28)
!8946 = !DILocation(line: 77, column: 4, scope: !8944)
!8947 = !DILocation(line: 77, column: 4, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8943, file: !8668, line: 77, column: 4)
!8949 = !DILocation(line: 78, column: 4, scope: !8945)
!8950 = !DILocation(line: 79, column: 3, scope: !8945)
!8951 = !DILocation(line: 75, column: 2, scope: !8939)
!8952 = !DILocation(line: 81, column: 1, scope: !8923)
!8953 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6090, file: !6090, line: 710, type: !7305, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8954)
!8954 = !{!8955}
!8955 = !DILocalVariable(name: "Line", arg: 1, scope: !8953, file: !6090, line: 710, type: !110)
!8956 = !DILocation(line: 0, scope: !8953)
!8957 = !DILocation(line: 712, column: 21, scope: !8953)
!8958 = !DILocation(line: 0, scope: !8907, inlinedAt: !8959)
!8959 = distinct !DILocation(line: 712, column: 76, scope: !8953)
!8960 = !DILocation(line: 380, column: 4, scope: !8907, inlinedAt: !8959)
!8961 = !DILocation(line: 0, scope: !8915, inlinedAt: !8962)
!8962 = distinct !DILocation(line: 712, column: 76, scope: !8953)
!8963 = !DILocation(line: 414, column: 7, scope: !8915, inlinedAt: !8962)
!8964 = !DILocation(line: 712, column: 73, scope: !8953)
!8965 = !DILocation(line: 712, column: 3, scope: !8953)
!8966 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !8967, file: !8967, line: 910, type: !8968, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8970)
!8967 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8968 = !DISubroutineType(types: !8969)
!8969 = !{null, !1139, !110}
!8970 = !{!8971, !8972}
!8971 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8966, file: !8967, line: 910, type: !1139)
!8972 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8966, file: !8967, line: 910, type: !110)
!8973 = !DILocation(line: 0, scope: !8966)
!8974 = !DILocation(line: 912, column: 3, scope: !8966)
!8975 = !DILocation(line: 913, column: 1, scope: !8966)
!8976 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !8967, file: !8967, line: 823, type: !8977, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8979)
!8977 = !DISubroutineType(types: !8978)
!8978 = !{!110, !1139}
!8979 = !{!8980}
!8980 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8976, file: !8967, line: 823, type: !1139)
!8981 = !DILocation(line: 0, scope: !8976)
!8982 = !DILocation(line: 825, column: 21, scope: !8976)
!8983 = !DILocation(line: 825, column: 3, scope: !8976)
!8984 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !8967, file: !8967, line: 812, type: !8968, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8985)
!8985 = !{!8986, !8987}
!8986 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8984, file: !8967, line: 812, type: !1139)
!8987 = !DILocalVariable(name: "PortValue", arg: 2, scope: !8984, file: !8967, line: 812, type: !110)
!8988 = !DILocation(line: 0, scope: !8984)
!8989 = !DILocation(line: 814, column: 3, scope: !8984)
!8990 = !DILocation(line: 815, column: 1, scope: !8984)
!8991 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !8967, file: !8967, line: 771, type: !8977, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !8992)
!8992 = !{!8993}
!8993 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8991, file: !8967, line: 771, type: !1139)
!8994 = !DILocation(line: 0, scope: !8991)
!8995 = !DILocation(line: 773, column: 21, scope: !8991)
!8996 = !DILocation(line: 773, column: 3, scope: !8991)
!8997 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1209, file: !1209, line: 47, type: !8998, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !9000)
!8998 = !DISubroutineType(types: !8999)
!8999 = !{!109, !1082, !2635}
!9000 = !{!9001, !9002}
!9001 = !DILocalVariable(name: "flags", arg: 1, scope: !8997, file: !1209, line: 47, type: !1082)
!9002 = !DILocalVariable(name: "pincfg", arg: 2, scope: !8997, file: !1209, line: 47, type: !2635)
!9003 = !DILocation(line: 0, scope: !8997)
!9004 = !DILocation(line: 50, column: 13, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8997, file: !1209, line: 50, column: 6)
!9006 = !DILocation(line: 50, column: 28, scope: !9005)
!9007 = !DILocation(line: 50, column: 6, scope: !8997)
!9008 = !DILocation(line: 53, column: 11, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !9005, file: !1209, line: 50, column: 34)
!9010 = !DILocation(line: 55, column: 14, scope: !9011)
!9011 = distinct !DILexicalBlock(scope: !9009, file: !1209, line: 55, column: 7)
!9012 = !DILocation(line: 55, column: 35, scope: !9011)
!9013 = !DILocation(line: 55, column: 7, scope: !9009)
!9014 = !DILocation(line: 56, column: 14, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9016, file: !1209, line: 56, column: 8)
!9016 = distinct !DILexicalBlock(scope: !9011, file: !1209, line: 55, column: 41)
!9017 = !DILocation(line: 56, column: 8, scope: !9016)
!9018 = !DILocation(line: 0, scope: !9011)
!9019 = !DILocation(line: 66, column: 14, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9009, file: !1209, line: 66, column: 7)
!9021 = !DILocation(line: 66, column: 30, scope: !9020)
!9022 = !DILocation(line: 66, column: 7, scope: !9009)
!9023 = !DILocation(line: 67, column: 12, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9020, file: !1209, line: 66, column: 36)
!9025 = !DILocation(line: 68, column: 3, scope: !9024)
!9026 = !DILocation(line: 68, column: 21, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !9020, file: !1209, line: 68, column: 14)
!9028 = !DILocation(line: 68, column: 39, scope: !9027)
!9029 = !DILocation(line: 68, column: 14, scope: !9020)
!9030 = !DILocation(line: 69, column: 12, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9027, file: !1209, line: 68, column: 45)
!9032 = !DILocation(line: 70, column: 3, scope: !9031)
!9033 = !DILocation(line: 72, column: 21, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9005, file: !1209, line: 72, column: 14)
!9035 = !DILocation(line: 72, column: 35, scope: !9034)
!9036 = !DILocation(line: 72, column: 14, scope: !9005)
!9037 = !DILocation(line: 77, column: 14, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9039, file: !1209, line: 77, column: 7)
!9039 = distinct !DILexicalBlock(scope: !9034, file: !1209, line: 72, column: 41)
!9040 = !DILocation(line: 77, column: 30, scope: !9038)
!9041 = !DILocation(line: 77, column: 7, scope: !9039)
!9042 = !DILocation(line: 0, scope: !9005)
!9043 = !DILocation(line: 90, column: 1, scope: !8997)
!9044 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1209, file: !1209, line: 157, type: !9045, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !9047)
!9045 = !DISubroutineType(types: !9046)
!9046 = !{null, !1066, !109, !109, !109}
!9047 = !{!9048, !9049, !9050, !9051, !9052, !9053, !9054, !9055, !9056, !9057, !9058}
!9048 = !DILocalVariable(name: "dev", arg: 1, scope: !9044, file: !1209, line: 157, type: !1066)
!9049 = !DILocalVariable(name: "pin", arg: 2, scope: !9044, file: !1209, line: 157, type: !109)
!9050 = !DILocalVariable(name: "conf", arg: 3, scope: !9044, file: !1209, line: 158, type: !109)
!9051 = !DILocalVariable(name: "func", arg: 4, scope: !9044, file: !1209, line: 158, type: !109)
!9052 = !DILocalVariable(name: "cfg", scope: !9044, file: !1209, line: 160, type: !8552)
!9053 = !DILocalVariable(name: "gpio", scope: !9044, file: !1209, line: 161, type: !1139)
!9054 = !DILocalVariable(name: "pin_ll", scope: !9044, file: !1209, line: 163, type: !109)
!9055 = !DILocalVariable(name: "mode", scope: !9044, file: !1209, line: 227, type: !32)
!9056 = !DILocalVariable(name: "otype", scope: !9044, file: !1209, line: 227, type: !32)
!9057 = !DILocalVariable(name: "ospeed", scope: !9044, file: !1209, line: 227, type: !32)
!9058 = !DILocalVariable(name: "pupd", scope: !9044, file: !1209, line: 227, type: !32)
!9059 = !DILocation(line: 0, scope: !9044)
!9060 = !DILocation(line: 160, column: 45, scope: !9044)
!9061 = !DILocation(line: 161, column: 44, scope: !9044)
!9062 = !DILocation(line: 163, column: 15, scope: !9044)
!9063 = !DILocation(line: 229, column: 14, scope: !9044)
!9064 = !DILocation(line: 246, column: 47, scope: !9044)
!9065 = !DILocation(line: 246, column: 2, scope: !9044)
!9066 = !DILocation(line: 248, column: 43, scope: !9044)
!9067 = !DILocation(line: 248, column: 2, scope: !9044)
!9068 = !DILocation(line: 250, column: 40, scope: !9044)
!9069 = !DILocation(line: 250, column: 2, scope: !9044)
!9070 = !DILocation(line: 252, column: 11, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9044, file: !1209, line: 252, column: 6)
!9072 = !DILocation(line: 252, column: 6, scope: !9044)
!9073 = !DILocation(line: 253, column: 11, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9075, file: !1209, line: 253, column: 7)
!9075 = distinct !DILexicalBlock(scope: !9071, file: !1209, line: 252, column: 36)
!9076 = !DILocation(line: 253, column: 7, scope: !9075)
!9077 = !DILocation(line: 254, column: 4, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9074, file: !1209, line: 253, column: 16)
!9079 = !DILocation(line: 255, column: 3, scope: !9078)
!9080 = !DILocation(line: 256, column: 4, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9074, file: !1209, line: 255, column: 10)
!9082 = !DILocation(line: 260, column: 40, scope: !9044)
!9083 = !DILocation(line: 260, column: 2, scope: !9044)
!9084 = !DILocation(line: 265, column: 1, scope: !9044)
!9085 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1209, file: !1209, line: 137, type: !8887, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !9086)
!9086 = !{!9087, !9088}
!9087 = !DILocalVariable(name: "pin", arg: 1, scope: !9085, file: !1209, line: 137, type: !109)
!9088 = !DILocalVariable(name: "pinval", scope: !9085, file: !1209, line: 139, type: !110)
!9089 = !DILocation(line: 0, scope: !9085)
!9090 = !DILocation(line: 149, column: 13, scope: !9085)
!9091 = !DILocation(line: 151, column: 2, scope: !9085)
!9092 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !8967, file: !8967, line: 342, type: !9093, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !9095)
!9093 = !DISubroutineType(types: !9094)
!9094 = !{null, !1139, !110, !110}
!9095 = !{!9096, !9097, !9098}
!9096 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9092, file: !8967, line: 342, type: !1139)
!9097 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9092, file: !8967, line: 342, type: !110)
!9098 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9092, file: !8967, line: 342, type: !110)
!9099 = !DILocation(line: 0, scope: !9092)
!9100 = !DILocation(line: 344, column: 3, scope: !9092)
!9101 = !DILocation(line: 345, column: 1, scope: !9092)
!9102 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !8967, file: !8967, line: 413, type: !9093, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !9103)
!9103 = !{!9104, !9105, !9106}
!9104 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9102, file: !8967, line: 413, type: !1139)
!9105 = !DILocalVariable(name: "Pin", arg: 2, scope: !9102, file: !8967, line: 413, type: !110)
!9106 = !DILocalVariable(name: "Speed", arg: 3, scope: !9102, file: !8967, line: 413, type: !110)
!9107 = !DILocation(line: 0, scope: !9102)
!9108 = !DILocation(line: 415, column: 3, scope: !9102)
!9109 = !DILocation(line: 0, scope: !8907, inlinedAt: !9110)
!9110 = distinct !DILocation(line: 415, column: 3, scope: !9102)
!9111 = !DILocation(line: 380, column: 4, scope: !8907, inlinedAt: !9110)
!9112 = !DILocation(line: 0, scope: !8915, inlinedAt: !9113)
!9113 = distinct !DILocation(line: 415, column: 3, scope: !9102)
!9114 = !DILocation(line: 414, column: 7, scope: !8915, inlinedAt: !9113)
!9115 = !DILocation(line: 0, scope: !8907, inlinedAt: !9116)
!9116 = distinct !DILocation(line: 415, column: 3, scope: !9102)
!9117 = !DILocation(line: 0, scope: !8915, inlinedAt: !9118)
!9118 = distinct !DILocation(line: 415, column: 3, scope: !9102)
!9119 = !DILocation(line: 417, column: 1, scope: !9102)
!9120 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !8967, file: !8967, line: 484, type: !9093, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !9121)
!9121 = !{!9122, !9123, !9124}
!9122 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9120, file: !8967, line: 484, type: !1139)
!9123 = !DILocalVariable(name: "Pin", arg: 2, scope: !9120, file: !8967, line: 484, type: !110)
!9124 = !DILocalVariable(name: "Pull", arg: 3, scope: !9120, file: !8967, line: 484, type: !110)
!9125 = !DILocation(line: 0, scope: !9120)
!9126 = !DILocation(line: 486, column: 3, scope: !9120)
!9127 = !DILocation(line: 0, scope: !8907, inlinedAt: !9128)
!9128 = distinct !DILocation(line: 486, column: 3, scope: !9120)
!9129 = !DILocation(line: 380, column: 4, scope: !8907, inlinedAt: !9128)
!9130 = !DILocation(line: 0, scope: !8915, inlinedAt: !9131)
!9131 = distinct !DILocation(line: 486, column: 3, scope: !9120)
!9132 = !DILocation(line: 414, column: 7, scope: !8915, inlinedAt: !9131)
!9133 = !DILocation(line: 0, scope: !8907, inlinedAt: !9134)
!9134 = distinct !DILocation(line: 486, column: 3, scope: !9120)
!9135 = !DILocation(line: 0, scope: !8915, inlinedAt: !9136)
!9136 = distinct !DILocation(line: 486, column: 3, scope: !9120)
!9137 = !DILocation(line: 487, column: 1, scope: !9120)
!9138 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !8967, file: !8967, line: 556, type: !9093, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !9139)
!9139 = !{!9140, !9141, !9142}
!9140 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9138, file: !8967, line: 556, type: !1139)
!9141 = !DILocalVariable(name: "Pin", arg: 2, scope: !9138, file: !8967, line: 556, type: !110)
!9142 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9138, file: !8967, line: 556, type: !110)
!9143 = !DILocation(line: 0, scope: !9138)
!9144 = !DILocation(line: 558, column: 3, scope: !9138)
!9145 = !DILocation(line: 0, scope: !8907, inlinedAt: !9146)
!9146 = distinct !DILocation(line: 558, column: 3, scope: !9138)
!9147 = !DILocation(line: 380, column: 4, scope: !8907, inlinedAt: !9146)
!9148 = !DILocation(line: 0, scope: !8915, inlinedAt: !9149)
!9149 = distinct !DILocation(line: 558, column: 3, scope: !9138)
!9150 = !DILocation(line: 414, column: 7, scope: !8915, inlinedAt: !9149)
!9151 = !DILocation(line: 0, scope: !8907, inlinedAt: !9152)
!9152 = distinct !DILocation(line: 558, column: 3, scope: !9138)
!9153 = !DILocation(line: 0, scope: !8915, inlinedAt: !9154)
!9154 = distinct !DILocation(line: 558, column: 3, scope: !9138)
!9155 = !DILocation(line: 560, column: 1, scope: !9138)
!9156 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !8967, file: !8967, line: 633, type: !9093, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !9157)
!9157 = !{!9158, !9159, !9160}
!9158 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9156, file: !8967, line: 633, type: !1139)
!9159 = !DILocalVariable(name: "Pin", arg: 2, scope: !9156, file: !8967, line: 633, type: !110)
!9160 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9156, file: !8967, line: 633, type: !110)
!9161 = !DILocation(line: 0, scope: !9156)
!9162 = !DILocation(line: 635, column: 3, scope: !9156)
!9163 = !DILocation(line: 0, scope: !8907, inlinedAt: !9164)
!9164 = distinct !DILocation(line: 635, column: 3, scope: !9156)
!9165 = !DILocation(line: 380, column: 4, scope: !8907, inlinedAt: !9164)
!9166 = !DILocation(line: 0, scope: !8915, inlinedAt: !9167)
!9167 = distinct !DILocation(line: 635, column: 3, scope: !9156)
!9168 = !DILocation(line: 414, column: 7, scope: !8915, inlinedAt: !9167)
!9169 = !DILocation(line: 0, scope: !8907, inlinedAt: !9170)
!9170 = distinct !DILocation(line: 635, column: 3, scope: !9156)
!9171 = !DILocation(line: 0, scope: !8915, inlinedAt: !9172)
!9172 = distinct !DILocation(line: 635, column: 3, scope: !9156)
!9173 = !DILocation(line: 637, column: 1, scope: !9156)
!9174 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !8967, file: !8967, line: 273, type: !9093, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !9175)
!9175 = !{!9176, !9177, !9178}
!9176 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9174, file: !8967, line: 273, type: !1139)
!9177 = !DILocalVariable(name: "Pin", arg: 2, scope: !9174, file: !8967, line: 273, type: !110)
!9178 = !DILocalVariable(name: "Mode", arg: 3, scope: !9174, file: !8967, line: 273, type: !110)
!9179 = !DILocation(line: 0, scope: !9174)
!9180 = !DILocation(line: 275, column: 3, scope: !9174)
!9181 = !DILocation(line: 0, scope: !8907, inlinedAt: !9182)
!9182 = distinct !DILocation(line: 275, column: 3, scope: !9174)
!9183 = !DILocation(line: 380, column: 4, scope: !8907, inlinedAt: !9182)
!9184 = !DILocation(line: 0, scope: !8915, inlinedAt: !9185)
!9185 = distinct !DILocation(line: 275, column: 3, scope: !9174)
!9186 = !DILocation(line: 414, column: 7, scope: !8915, inlinedAt: !9185)
!9187 = !DILocation(line: 0, scope: !8907, inlinedAt: !9188)
!9188 = distinct !DILocation(line: 275, column: 3, scope: !9174)
!9189 = !DILocation(line: 0, scope: !8915, inlinedAt: !9190)
!9190 = distinct !DILocation(line: 275, column: 3, scope: !9174)
!9191 = !DILocation(line: 276, column: 1, scope: !9174)
!9192 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1209, file: !1209, line: 698, type: !1222, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !9193)
!9193 = !{!9194, !9195, !9196}
!9194 = !DILocalVariable(name: "dev", arg: 1, scope: !9192, file: !1209, line: 698, type: !1066)
!9195 = !DILocalVariable(name: "data", scope: !9192, file: !1209, line: 700, type: !8619)
!9196 = !DILocalVariable(name: "ret", scope: !9192, file: !1209, line: 701, type: !109)
!9197 = !DILocation(line: 0, scope: !9192)
!9198 = !DILocation(line: 700, column: 38, scope: !9192)
!9199 = !DILocation(line: 703, column: 8, scope: !9192)
!9200 = !DILocation(line: 703, column: 12, scope: !9192)
!9201 = !DILocation(line: 705, column: 7, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9192, file: !1209, line: 705, column: 6)
!9203 = !DILocation(line: 705, column: 6, scope: !9192)
!9204 = !DILocation(line: 722, column: 8, scope: !9192)
!9205 = !DILocation(line: 723, column: 10, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9192, file: !1209, line: 723, column: 6)
!9207 = !DILocation(line: 723, column: 6, scope: !9192)
!9208 = !DILocation(line: 731, column: 1, scope: !9192)
!9209 = distinct !DISubprogram(name: "device_is_ready", scope: !8398, file: !8398, line: 47, type: !9210, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !9212)
!9210 = !DISubroutineType(types: !9211)
!9211 = !{!334, !1066}
!9212 = !{!9213}
!9213 = !DILocalVariable(name: "dev", arg: 1, scope: !9209, file: !8398, line: 47, type: !1066)
!9214 = !DILocation(line: 0, scope: !9209)
!9215 = !DILocation(line: 55, column: 2, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9209, file: !8398, line: 55, column: 2)
!9217 = !{i64 2155287681}
!9218 = !DILocation(line: 56, column: 9, scope: !9209)
!9219 = !DILocation(line: 56, column: 2, scope: !9209)
!9220 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1209, file: !1209, line: 270, type: !9221, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !9223)
!9221 = !DISubroutineType(types: !9222)
!9222 = !{!109, !1066, !334}
!9223 = !{!9224, !9225, !9226, !9227, !9228}
!9224 = !DILocalVariable(name: "dev", arg: 1, scope: !9220, file: !1209, line: 270, type: !1066)
!9225 = !DILocalVariable(name: "on", arg: 2, scope: !9220, file: !1209, line: 270, type: !334)
!9226 = !DILocalVariable(name: "cfg", scope: !9220, file: !1209, line: 272, type: !8552)
!9227 = !DILocalVariable(name: "ret", scope: !9220, file: !1209, line: 273, type: !109)
!9228 = !DILocalVariable(name: "clk", scope: !9220, file: !1209, line: 278, type: !8854)
!9229 = !DILocation(line: 0, scope: !9220)
!9230 = !DILocation(line: 272, column: 45, scope: !9220)
!9231 = !DILocation(line: 282, column: 38, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9233, file: !1209, line: 280, column: 10)
!9233 = distinct !DILexicalBlock(scope: !9220, file: !1209, line: 280, column: 6)
!9234 = !DILocation(line: 282, column: 6, scope: !9232)
!9235 = !DILocation(line: 281, column: 9, scope: !9232)
!9236 = !DILocation(line: 293, column: 1, scope: !9220)
!9237 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !321, file: !321, line: 730, type: !9210, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !9238)
!9238 = !{!9239}
!9239 = !DILocalVariable(name: "dev", arg: 1, scope: !9237, file: !321, line: 730, type: !1066)
!9240 = !DILocation(line: 0, scope: !9237)
!9241 = !DILocation(line: 732, column: 9, scope: !9237)
!9242 = !DILocation(line: 732, column: 2, scope: !9237)
!9243 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1209, file: !1209, line: 496, type: !9244, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1037, retainedNodes: !9246)
!9244 = !DISubroutineType(types: !9245)
!9245 = !{!109, !1066, !109, !109, !109}
!9246 = !{!9247, !9248, !9249, !9250, !9251, !9252}
!9247 = !DILocalVariable(name: "dev", arg: 1, scope: !9243, file: !1209, line: 496, type: !1066)
!9248 = !DILocalVariable(name: "pin", arg: 2, scope: !9243, file: !1209, line: 496, type: !109)
!9249 = !DILocalVariable(name: "conf", arg: 3, scope: !9243, file: !1209, line: 496, type: !109)
!9250 = !DILocalVariable(name: "func", arg: 4, scope: !9243, file: !1209, line: 496, type: !109)
!9251 = !DILocalVariable(name: "ret", scope: !9243, file: !1209, line: 498, type: !109)
!9252 = !DILocalVariable(name: "gpio_out", scope: !9253, file: !1209, line: 508, type: !110)
!9253 = distinct !DILexicalBlock(scope: !9254, file: !1209, line: 507, column: 27)
!9254 = distinct !DILexicalBlock(scope: !9243, file: !1209, line: 507, column: 6)
!9255 = !DILocation(line: 0, scope: !9243)
!9256 = !DILocation(line: 505, column: 2, scope: !9243)
!9257 = !DILocation(line: 507, column: 11, scope: !9254)
!9258 = !DILocation(line: 507, column: 6, scope: !9243)
!9259 = !DILocation(line: 508, column: 28, scope: !9253)
!9260 = !DILocation(line: 0, scope: !9253)
!9261 = !DILocation(line: 510, column: 16, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9253, file: !1209, line: 510, column: 7)
!9263 = !DILocation(line: 0, scope: !9262)
!9264 = !DILocation(line: 510, column: 7, scope: !9253)
!9265 = !DILocation(line: 511, column: 4, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9262, file: !1209, line: 510, column: 32)
!9267 = !DILocation(line: 512, column: 3, scope: !9266)
!9268 = !DILocation(line: 513, column: 4, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9270, file: !1209, line: 512, column: 39)
!9270 = distinct !DILexicalBlock(scope: !9262, file: !1209, line: 512, column: 14)
!9271 = !DILocation(line: 514, column: 3, scope: !9269)
!9272 = !DILocation(line: 518, column: 1, scope: !9243)
!9273 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1482, file: !1482, line: 526, type: !1385, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9274)
!9274 = !{!9275, !9276, !9277}
!9275 = !DILocalVariable(name: "dev", arg: 1, scope: !9273, file: !1482, line: 526, type: !1387)
!9276 = !DILocalVariable(name: "c", arg: 2, scope: !9273, file: !1482, line: 526, type: !998)
!9277 = !DILocalVariable(name: "config", scope: !9273, file: !1482, line: 528, type: !9278)
!9278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 32)
!9279 = !DILocation(line: 0, scope: !9273)
!9280 = !DILocation(line: 528, column: 48, scope: !9273)
!9281 = !DILocation(line: 531, column: 40, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9273, file: !1482, line: 531, column: 6)
!9283 = !DILocation(line: 531, column: 6, scope: !9282)
!9284 = !DILocation(line: 531, column: 6, scope: !9273)
!9285 = !DILocation(line: 532, column: 34, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9282, file: !1482, line: 531, column: 48)
!9287 = !DILocation(line: 532, column: 3, scope: !9286)
!9288 = !DILocation(line: 533, column: 2, scope: !9286)
!9289 = !DILocation(line: 539, column: 42, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9273, file: !1482, line: 539, column: 6)
!9291 = !DILocation(line: 539, column: 7, scope: !9290)
!9292 = !DILocation(line: 539, column: 6, scope: !9273)
!9293 = !DILocation(line: 543, column: 52, scope: !9273)
!9294 = !DILocation(line: 543, column: 22, scope: !9273)
!9295 = !DILocation(line: 543, column: 5, scope: !9273)
!9296 = !DILocation(line: 545, column: 2, scope: !9273)
!9297 = !DILocation(line: 546, column: 1, scope: !9273)
!9298 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1482, file: !1482, line: 548, type: !1404, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9299)
!9299 = !{!9300, !9301, !9302, !9303}
!9300 = !DILocalVariable(name: "dev", arg: 1, scope: !9298, file: !1482, line: 548, type: !1387)
!9301 = !DILocalVariable(name: "c", arg: 2, scope: !9298, file: !1482, line: 549, type: !168)
!9302 = !DILocalVariable(name: "config", scope: !9298, file: !1482, line: 551, type: !9278)
!9303 = !DILocalVariable(name: "key", scope: !9298, file: !1482, line: 555, type: !32)
!9304 = !DILocation(line: 0, scope: !9298)
!9305 = !DILocation(line: 551, column: 48, scope: !9298)
!9306 = !DILocation(line: 562, column: 2, scope: !9298)
!9307 = !DILocation(line: 563, column: 41, scope: !9308)
!9308 = distinct !DILexicalBlock(scope: !9309, file: !1482, line: 563, column: 7)
!9309 = distinct !DILexicalBlock(scope: !9298, file: !1482, line: 562, column: 12)
!9310 = !DILocation(line: 563, column: 7, scope: !9308)
!9311 = !DILocation(line: 563, column: 7, scope: !9309)
!9312 = !DILocation(line: 55, column: 2, scope: !9313, inlinedAt: !9317)
!9313 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6069, file: !6069, line: 42, type: !6070, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9314)
!9314 = !{!9315, !9316}
!9315 = !DILocalVariable(name: "key", scope: !9313, file: !6069, line: 44, type: !32)
!9316 = !DILocalVariable(name: "tmp", scope: !9313, file: !6069, line: 53, type: !32)
!9317 = distinct !DILocation(line: 564, column: 10, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9308, file: !1482, line: 563, column: 49)
!9319 = !{i64 2329825}
!9320 = !DILocation(line: 0, scope: !9313, inlinedAt: !9317)
!9321 = !DILocation(line: 565, column: 42, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !9318, file: !1482, line: 565, column: 8)
!9323 = !DILocation(line: 565, column: 8, scope: !9322)
!9324 = !DILocation(line: 565, column: 8, scope: !9318)
!9325 = !DILocalVariable(name: "key", arg: 1, scope: !9326, file: !6069, line: 84, type: !32)
!9326 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6069, file: !6069, line: 84, type: !6080, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9327)
!9327 = !{!9325}
!9328 = !DILocation(line: 0, scope: !9326, inlinedAt: !9329)
!9329 = distinct !DILocation(line: 568, column: 4, scope: !9318)
!9330 = !DILocation(line: 95, column: 2, scope: !9326, inlinedAt: !9329)
!9331 = !{i64 2330642}
!9332 = !DILocation(line: 569, column: 3, scope: !9318)
!9333 = distinct !{!9333, !9306, !9334}
!9334 = !DILocation(line: 570, column: 2, scope: !9298)
!9335 = !DILocation(line: 592, column: 33, scope: !9298)
!9336 = !DILocation(line: 592, column: 2, scope: !9298)
!9337 = !DILocation(line: 0, scope: !9326, inlinedAt: !9338)
!9338 = distinct !DILocation(line: 593, column: 2, scope: !9298)
!9339 = !DILocation(line: 95, column: 2, scope: !9326, inlinedAt: !9338)
!9340 = !DILocation(line: 594, column: 1, scope: !9298)
!9341 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1482, file: !1482, line: 596, type: !1408, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9342)
!9342 = !{!9343, !9344, !9345}
!9343 = !DILocalVariable(name: "dev", arg: 1, scope: !9341, file: !1482, line: 596, type: !1387)
!9344 = !DILocalVariable(name: "config", scope: !9341, file: !1482, line: 598, type: !9278)
!9345 = !DILocalVariable(name: "err", scope: !9341, file: !1482, line: 599, type: !110)
!9346 = !DILocation(line: 0, scope: !9341)
!9347 = !DILocation(line: 598, column: 48, scope: !9341)
!9348 = !DILocation(line: 606, column: 40, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !9341, file: !1482, line: 606, column: 6)
!9350 = !DILocation(line: 606, column: 6, scope: !9349)
!9351 = !DILocation(line: 606, column: 6, scope: !9341)
!9352 = !DILocation(line: 610, column: 39, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9341, file: !1482, line: 610, column: 6)
!9354 = !DILocation(line: 610, column: 6, scope: !9353)
!9355 = !DILocation(line: 610, column: 6, scope: !9341)
!9356 = !DILocation(line: 614, column: 39, scope: !9357)
!9357 = distinct !DILexicalBlock(scope: !9341, file: !1482, line: 614, column: 6)
!9358 = !DILocation(line: 614, column: 6, scope: !9357)
!9359 = !DILocation(line: 614, column: 6, scope: !9341)
!9360 = !DILocation(line: 619, column: 40, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9341, file: !1482, line: 619, column: 6)
!9362 = !DILocation(line: 619, column: 6, scope: !9361)
!9363 = !DILocation(line: 619, column: 6, scope: !9341)
!9364 = !DILocation(line: 623, column: 10, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9341, file: !1482, line: 623, column: 6)
!9366 = !DILocation(line: 623, column: 6, scope: !9341)
!9367 = !DILocation(line: 624, column: 34, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9365, file: !1482, line: 623, column: 24)
!9369 = !DILocation(line: 624, column: 3, scope: !9368)
!9370 = !DILocation(line: 625, column: 2, scope: !9368)
!9371 = !DILocation(line: 632, column: 10, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9341, file: !1482, line: 632, column: 6)
!9373 = !DILocation(line: 632, column: 6, scope: !9341)
!9374 = !DILocation(line: 633, column: 34, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9372, file: !1482, line: 632, column: 32)
!9376 = !DILocation(line: 633, column: 3, scope: !9375)
!9377 = !DILocation(line: 634, column: 2, scope: !9375)
!9378 = !DILocation(line: 636, column: 10, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9341, file: !1482, line: 636, column: 6)
!9380 = !DILocation(line: 636, column: 6, scope: !9341)
!9381 = !DILocation(line: 637, column: 33, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9379, file: !1482, line: 636, column: 31)
!9383 = !DILocation(line: 637, column: 3, scope: !9382)
!9384 = !DILocation(line: 638, column: 2, scope: !9382)
!9385 = !DILocation(line: 640, column: 10, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9341, file: !1482, line: 640, column: 6)
!9387 = !DILocation(line: 640, column: 6, scope: !9341)
!9388 = !DILocation(line: 641, column: 33, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9386, file: !1482, line: 640, column: 32)
!9390 = !DILocation(line: 641, column: 3, scope: !9389)
!9391 = !DILocation(line: 642, column: 2, scope: !9389)
!9392 = !DILocation(line: 646, column: 32, scope: !9341)
!9393 = !DILocation(line: 646, column: 2, scope: !9341)
!9394 = !DILocation(line: 648, column: 2, scope: !9341)
!9395 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1482, file: !1482, line: 419, type: !1412, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9396)
!9396 = !{!9397, !9398, !9399, !9400, !9402, !9403, !9404, !9405}
!9397 = !DILocalVariable(name: "dev", arg: 1, scope: !9395, file: !1482, line: 419, type: !1387)
!9398 = !DILocalVariable(name: "cfg", arg: 2, scope: !9395, file: !1482, line: 420, type: !1414)
!9399 = !DILocalVariable(name: "config", scope: !9395, file: !1482, line: 422, type: !9278)
!9400 = !DILocalVariable(name: "data", scope: !9395, file: !1482, line: 423, type: !9401)
!9401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 32)
!9402 = !DILocalVariable(name: "parity", scope: !9395, file: !1482, line: 424, type: !6526)
!9403 = !DILocalVariable(name: "stopbits", scope: !9395, file: !1482, line: 425, type: !6526)
!9404 = !DILocalVariable(name: "databits", scope: !9395, file: !1482, line: 426, type: !6526)
!9405 = !DILocalVariable(name: "flowctrl", scope: !9395, file: !1482, line: 428, type: !6526)
!9406 = !DILocation(line: 0, scope: !9395)
!9407 = !DILocation(line: 422, column: 48, scope: !9395)
!9408 = !DILocation(line: 423, column: 38, scope: !9395)
!9409 = !DILocation(line: 424, column: 56, scope: !9395)
!9410 = !DILocation(line: 424, column: 51, scope: !9395)
!9411 = !DILocation(line: 424, column: 26, scope: !9395)
!9412 = !DILocation(line: 425, column: 60, scope: !9395)
!9413 = !DILocation(line: 425, column: 55, scope: !9395)
!9414 = !DILocation(line: 425, column: 28, scope: !9395)
!9415 = !DILocation(line: 426, column: 60, scope: !9395)
!9416 = !DILocation(line: 426, column: 55, scope: !9395)
!9417 = !DILocation(line: 426, column: 28, scope: !9395)
!9418 = !DILocation(line: 428, column: 58, scope: !9395)
!9419 = !DILocation(line: 428, column: 53, scope: !9395)
!9420 = !DILocation(line: 428, column: 28, scope: !9395)
!9421 = !DILocation(line: 431, column: 44, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9395, file: !1482, line: 431, column: 6)
!9423 = !DILocation(line: 438, column: 22, scope: !9424)
!9424 = distinct !DILexicalBlock(scope: !9395, file: !1482, line: 437, column: 6)
!9425 = !DILocation(line: 437, column: 6, scope: !9395)
!9426 = !DILocation(line: 448, column: 6, scope: !9395)
!9427 = !DILocation(line: 465, column: 47, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9395, file: !1482, line: 465, column: 6)
!9429 = !DILocation(line: 475, column: 21, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9395, file: !1482, line: 475, column: 6)
!9431 = !DILocation(line: 475, column: 6, scope: !9395)
!9432 = !DILocation(line: 476, column: 8, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9434, file: !1482, line: 476, column: 7)
!9434 = distinct !DILexicalBlock(scope: !9430, file: !1482, line: 475, column: 49)
!9435 = !DILocation(line: 477, column: 34, scope: !9433)
!9436 = !DILocation(line: 476, column: 7, scope: !9434)
!9437 = !DILocation(line: 482, column: 27, scope: !9395)
!9438 = !DILocation(line: 482, column: 2, scope: !9395)
!9439 = !DILocation(line: 484, column: 16, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9395, file: !1482, line: 484, column: 6)
!9441 = !DILocation(line: 484, column: 13, scope: !9440)
!9442 = !DILocation(line: 484, column: 6, scope: !9395)
!9443 = !DILocation(line: 485, column: 3, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9440, file: !1482, line: 484, column: 44)
!9445 = !DILocation(line: 486, column: 2, scope: !9444)
!9446 = !DILocation(line: 488, column: 18, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9395, file: !1482, line: 488, column: 6)
!9448 = !DILocation(line: 488, column: 15, scope: !9447)
!9449 = !DILocation(line: 488, column: 6, scope: !9395)
!9450 = !DILocation(line: 489, column: 3, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9447, file: !1482, line: 488, column: 48)
!9452 = !DILocation(line: 490, column: 2, scope: !9451)
!9453 = !DILocation(line: 492, column: 18, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9395, file: !1482, line: 492, column: 6)
!9455 = !DILocation(line: 492, column: 15, scope: !9454)
!9456 = !DILocation(line: 492, column: 6, scope: !9395)
!9457 = !DILocation(line: 493, column: 3, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9454, file: !1482, line: 492, column: 48)
!9459 = !DILocation(line: 494, column: 2, scope: !9458)
!9460 = !DILocation(line: 496, column: 18, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9395, file: !1482, line: 496, column: 6)
!9462 = !DILocation(line: 496, column: 15, scope: !9461)
!9463 = !DILocation(line: 496, column: 6, scope: !9395)
!9464 = !DILocation(line: 497, column: 3, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9461, file: !1482, line: 496, column: 46)
!9466 = !DILocation(line: 498, column: 2, scope: !9465)
!9467 = !DILocation(line: 500, column: 11, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9395, file: !1482, line: 500, column: 6)
!9469 = !DILocation(line: 500, column: 29, scope: !9468)
!9470 = !DILocation(line: 500, column: 20, scope: !9468)
!9471 = !DILocation(line: 500, column: 6, scope: !9395)
!9472 = !DILocation(line: 501, column: 3, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9468, file: !1482, line: 500, column: 40)
!9474 = !DILocation(line: 502, column: 26, scope: !9473)
!9475 = !DILocation(line: 502, column: 19, scope: !9473)
!9476 = !DILocation(line: 503, column: 2, scope: !9473)
!9477 = !DILocation(line: 505, column: 26, scope: !9395)
!9478 = !DILocation(line: 505, column: 2, scope: !9395)
!9479 = !DILocation(line: 506, column: 2, scope: !9395)
!9480 = !DILocation(line: 507, column: 1, scope: !9395)
!9481 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1482, file: !1482, line: 509, type: !1425, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9482)
!9482 = !{!9483, !9484, !9485}
!9483 = !DILocalVariable(name: "dev", arg: 1, scope: !9481, file: !1482, line: 509, type: !1387)
!9484 = !DILocalVariable(name: "cfg", arg: 2, scope: !9481, file: !1482, line: 510, type: !1427)
!9485 = !DILocalVariable(name: "data", scope: !9481, file: !1482, line: 512, type: !9401)
!9486 = !DILocation(line: 0, scope: !9481)
!9487 = !DILocation(line: 512, column: 38, scope: !9481)
!9488 = !DILocation(line: 514, column: 24, scope: !9481)
!9489 = !DILocation(line: 514, column: 7, scope: !9481)
!9490 = !DILocation(line: 514, column: 16, scope: !9481)
!9491 = !DILocation(line: 515, column: 41, scope: !9481)
!9492 = !{i32 0, i32 1537}
!9493 = !DILocation(line: 515, column: 16, scope: !9481)
!9494 = !DILocation(line: 515, column: 7, scope: !9481)
!9495 = !DILocation(line: 515, column: 14, scope: !9481)
!9496 = !DILocation(line: 517, column: 3, scope: !9481)
!9497 = !{i32 0, i32 12289}
!9498 = !DILocation(line: 516, column: 19, scope: !9481)
!9499 = !DILocation(line: 516, column: 7, scope: !9481)
!9500 = !DILocation(line: 516, column: 17, scope: !9481)
!9501 = !DILocation(line: 519, column: 3, scope: !9481)
!9502 = !DILocation(line: 519, column: 33, scope: !9481)
!9503 = !DILocation(line: 518, column: 19, scope: !9481)
!9504 = !DILocation(line: 518, column: 7, scope: !9481)
!9505 = !DILocation(line: 518, column: 17, scope: !9481)
!9506 = !DILocation(line: 521, column: 3, scope: !9481)
!9507 = !{i32 0, i32 769}
!9508 = !DILocation(line: 520, column: 19, scope: !9481)
!9509 = !DILocation(line: 520, column: 7, scope: !9481)
!9510 = !DILocation(line: 520, column: 17, scope: !9481)
!9511 = !DILocation(line: 522, column: 2, scope: !9481)
!9512 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1482, file: !1482, line: 205, type: !9513, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9515)
!9513 = !DISubroutineType(types: !9514)
!9514 = !{!110, !1387}
!9515 = !{!9516, !9517}
!9516 = !DILocalVariable(name: "dev", arg: 1, scope: !9512, file: !1482, line: 205, type: !1387)
!9517 = !DILocalVariable(name: "config", scope: !9512, file: !1482, line: 207, type: !9278)
!9518 = !DILocation(line: 0, scope: !9512)
!9519 = !DILocation(line: 207, column: 48, scope: !9512)
!9520 = !DILocation(line: 209, column: 36, scope: !9512)
!9521 = !DILocation(line: 209, column: 9, scope: !9512)
!9522 = !DILocation(line: 209, column: 2, scope: !9512)
!9523 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1482, file: !1482, line: 270, type: !9524, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9526)
!9524 = !DISubroutineType(types: !9525)
!9525 = !{!1353, !110}
!9526 = !{!9527}
!9527 = !DILocalVariable(name: "parity", arg: 1, scope: !9523, file: !1482, line: 270, type: !110)
!9528 = !DILocation(line: 0, scope: !9523)
!9529 = !DILocation(line: 272, column: 2, scope: !9523)
!9530 = !DILocation(line: 281, column: 1, scope: !9523)
!9531 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1482, file: !1482, line: 220, type: !9513, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9532)
!9532 = !{!9533, !9534}
!9533 = !DILocalVariable(name: "dev", arg: 1, scope: !9531, file: !1482, line: 220, type: !1387)
!9534 = !DILocalVariable(name: "config", scope: !9531, file: !1482, line: 222, type: !9278)
!9535 = !DILocation(line: 0, scope: !9531)
!9536 = !DILocation(line: 222, column: 48, scope: !9531)
!9537 = !DILocation(line: 224, column: 44, scope: !9531)
!9538 = !DILocation(line: 224, column: 9, scope: !9531)
!9539 = !DILocation(line: 224, column: 2, scope: !9531)
!9540 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1482, file: !1482, line: 304, type: !9541, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9543)
!9541 = !DISubroutineType(types: !9542)
!9542 = !{!1367, !110}
!9543 = !{!9544}
!9544 = !DILocalVariable(name: "sb", arg: 1, scope: !9540, file: !1482, line: 304, type: !110)
!9545 = !DILocation(line: 0, scope: !9540)
!9546 = !DILocation(line: 306, column: 2, scope: !9540)
!9547 = !DILocation(line: 0, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9540, file: !1482, line: 306, column: 14)
!9549 = !DILocation(line: 323, column: 1, scope: !9540)
!9550 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1482, file: !1482, line: 235, type: !9513, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9551)
!9551 = !{!9552, !9553}
!9552 = !DILocalVariable(name: "dev", arg: 1, scope: !9550, file: !1482, line: 235, type: !1387)
!9553 = !DILocalVariable(name: "config", scope: !9550, file: !1482, line: 237, type: !9278)
!9554 = !DILocation(line: 0, scope: !9550)
!9555 = !DILocation(line: 237, column: 48, scope: !9550)
!9556 = !DILocation(line: 239, column: 39, scope: !9550)
!9557 = !DILocation(line: 239, column: 9, scope: !9550)
!9558 = !DILocation(line: 239, column: 2, scope: !9550)
!9559 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1482, file: !1482, line: 355, type: !9560, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9562)
!9560 = !DISubroutineType(types: !9561)
!9561 = !{!1360, !110, !110}
!9562 = !{!9563, !9564}
!9563 = !DILocalVariable(name: "db", arg: 1, scope: !9559, file: !1482, line: 355, type: !110)
!9564 = !DILocalVariable(name: "p", arg: 2, scope: !9559, file: !1482, line: 356, type: !110)
!9565 = !DILocation(line: 0, scope: !9559)
!9566 = !DILocation(line: 358, column: 2, scope: !9559)
!9567 = !DILocation(line: 384, column: 1, scope: !9559)
!9568 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1482, file: !1482, line: 250, type: !9513, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9569)
!9569 = !{!9570, !9571}
!9570 = !DILocalVariable(name: "dev", arg: 1, scope: !9568, file: !1482, line: 250, type: !1387)
!9571 = !DILocalVariable(name: "config", scope: !9568, file: !1482, line: 252, type: !9278)
!9572 = !DILocation(line: 0, scope: !9568)
!9573 = !DILocation(line: 252, column: 48, scope: !9568)
!9574 = !DILocation(line: 254, column: 40, scope: !9568)
!9575 = !DILocation(line: 254, column: 9, scope: !9568)
!9576 = !DILocation(line: 254, column: 2, scope: !9568)
!9577 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1482, file: !1482, line: 409, type: !9578, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9580)
!9578 = !DISubroutineType(types: !9579)
!9579 = !{!1373, !110}
!9580 = !{!9581}
!9581 = !DILocalVariable(name: "fc", arg: 1, scope: !9577, file: !1482, line: 409, type: !110)
!9582 = !DILocation(line: 0, scope: !9577)
!9583 = !DILocation(line: 411, column: 9, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9577, file: !1482, line: 411, column: 6)
!9585 = !DILocation(line: 416, column: 1, scope: !9577)
!9586 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9587, file: !9587, line: 967, type: !9588, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9590)
!9587 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9588 = !DISubroutineType(types: !9589)
!9589 = !{!110, !1428}
!9590 = !{!9591}
!9591 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9586, file: !9587, line: 967, type: !1428)
!9592 = !DILocation(line: 0, scope: !9586)
!9593 = !DILocation(line: 969, column: 21, scope: !9586)
!9594 = !DILocation(line: 969, column: 3, scope: !9586)
!9595 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9587, file: !9587, line: 601, type: !9588, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9596)
!9596 = !{!9597}
!9597 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9595, file: !9587, line: 601, type: !1428)
!9598 = !DILocation(line: 0, scope: !9595)
!9599 = !DILocation(line: 603, column: 21, scope: !9595)
!9600 = !DILocation(line: 603, column: 3, scope: !9595)
!9601 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9587, file: !9587, line: 820, type: !9588, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9602)
!9602 = !{!9603}
!9603 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9601, file: !9587, line: 820, type: !1428)
!9604 = !DILocation(line: 0, scope: !9601)
!9605 = !DILocation(line: 822, column: 21, scope: !9601)
!9606 = !DILocation(line: 822, column: 3, scope: !9601)
!9607 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9587, file: !9587, line: 547, type: !9588, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9608)
!9608 = !{!9609}
!9609 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9607, file: !9587, line: 547, type: !1428)
!9610 = !DILocation(line: 0, scope: !9607)
!9611 = !DILocation(line: 549, column: 21, scope: !9607)
!9612 = !DILocation(line: 549, column: 3, scope: !9607)
!9613 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1482, file: !1482, line: 257, type: !9614, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9616)
!9614 = !DISubroutineType(types: !9615)
!9615 = !{!110, !1353}
!9616 = !{!9617}
!9617 = !DILocalVariable(name: "parity", arg: 1, scope: !9613, file: !1482, line: 257, type: !1353)
!9618 = !DILocation(line: 0, scope: !9613)
!9619 = !DILocation(line: 259, column: 2, scope: !9613)
!9620 = !DILocation(line: 268, column: 1, scope: !9613)
!9621 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1482, file: !1482, line: 283, type: !9622, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9624)
!9622 = !DISubroutineType(types: !9623)
!9623 = !{!110, !1367}
!9624 = !{!9625}
!9625 = !DILocalVariable(name: "sb", arg: 1, scope: !9621, file: !1482, line: 283, type: !1367)
!9626 = !DILocation(line: 0, scope: !9621)
!9627 = !DILocation(line: 285, column: 2, scope: !9621)
!9628 = !DILocation(line: 0, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9621, file: !1482, line: 285, column: 14)
!9630 = !DILocation(line: 302, column: 1, scope: !9621)
!9631 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1482, file: !1482, line: 325, type: !9632, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9634)
!9632 = !DISubroutineType(types: !9633)
!9633 = !{!110, !1360, !1353}
!9634 = !{!9635, !9636}
!9635 = !DILocalVariable(name: "db", arg: 1, scope: !9631, file: !1482, line: 325, type: !1360)
!9636 = !DILocalVariable(name: "p", arg: 2, scope: !9631, file: !1482, line: 326, type: !1353)
!9637 = !DILocation(line: 0, scope: !9631)
!9638 = !DILocation(line: 328, column: 2, scope: !9631)
!9639 = !DILocation(line: 353, column: 1, scope: !9631)
!9640 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1482, file: !1482, line: 393, type: !9641, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9643)
!9641 = !DISubroutineType(types: !9642)
!9642 = !{!110, !1373}
!9643 = !{!9644}
!9644 = !DILocalVariable(name: "fc", arg: 1, scope: !9640, file: !1482, line: 393, type: !1373)
!9645 = !DILocation(line: 0, scope: !9640)
!9646 = !DILocation(line: 395, column: 9, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9640, file: !1482, line: 395, column: 6)
!9648 = !DILocation(line: 400, column: 1, scope: !9640)
!9649 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9587, file: !9587, line: 424, type: !9650, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9652)
!9650 = !DISubroutineType(types: !9651)
!9651 = !{null, !1428}
!9652 = !{!9653}
!9653 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9649, file: !9587, line: 424, type: !1428)
!9654 = !DILocation(line: 0, scope: !9649)
!9655 = !DILocation(line: 426, column: 3, scope: !9649)
!9656 = !DILocation(line: 427, column: 1, scope: !9649)
!9657 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1482, file: !1482, line: 197, type: !9658, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9660)
!9658 = !DISubroutineType(types: !9659)
!9659 = !{null, !1387, !110}
!9660 = !{!9661, !9662, !9663}
!9661 = !DILocalVariable(name: "dev", arg: 1, scope: !9657, file: !1482, line: 197, type: !1387)
!9662 = !DILocalVariable(name: "parity", arg: 2, scope: !9657, file: !1482, line: 198, type: !110)
!9663 = !DILocalVariable(name: "config", scope: !9657, file: !1482, line: 200, type: !9278)
!9664 = !DILocation(line: 0, scope: !9657)
!9665 = !DILocation(line: 200, column: 48, scope: !9657)
!9666 = !DILocation(line: 202, column: 29, scope: !9657)
!9667 = !DILocation(line: 202, column: 2, scope: !9657)
!9668 = !DILocation(line: 203, column: 1, scope: !9657)
!9669 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1482, file: !1482, line: 212, type: !9658, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9670)
!9670 = !{!9671, !9672, !9673}
!9671 = !DILocalVariable(name: "dev", arg: 1, scope: !9669, file: !1482, line: 212, type: !1387)
!9672 = !DILocalVariable(name: "stopbits", arg: 2, scope: !9669, file: !1482, line: 213, type: !110)
!9673 = !DILocalVariable(name: "config", scope: !9669, file: !1482, line: 215, type: !9278)
!9674 = !DILocation(line: 0, scope: !9669)
!9675 = !DILocation(line: 215, column: 48, scope: !9669)
!9676 = !DILocation(line: 217, column: 37, scope: !9669)
!9677 = !DILocation(line: 217, column: 2, scope: !9669)
!9678 = !DILocation(line: 218, column: 1, scope: !9669)
!9679 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1482, file: !1482, line: 227, type: !9658, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9680)
!9680 = !{!9681, !9682, !9683}
!9681 = !DILocalVariable(name: "dev", arg: 1, scope: !9679, file: !1482, line: 227, type: !1387)
!9682 = !DILocalVariable(name: "databits", arg: 2, scope: !9679, file: !1482, line: 228, type: !110)
!9683 = !DILocalVariable(name: "config", scope: !9679, file: !1482, line: 230, type: !9278)
!9684 = !DILocation(line: 0, scope: !9679)
!9685 = !DILocation(line: 230, column: 48, scope: !9679)
!9686 = !DILocation(line: 232, column: 32, scope: !9679)
!9687 = !DILocation(line: 232, column: 2, scope: !9679)
!9688 = !DILocation(line: 233, column: 1, scope: !9679)
!9689 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1482, file: !1482, line: 242, type: !9658, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9690)
!9690 = !{!9691, !9692, !9693}
!9691 = !DILocalVariable(name: "dev", arg: 1, scope: !9689, file: !1482, line: 242, type: !1387)
!9692 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !9689, file: !1482, line: 243, type: !110)
!9693 = !DILocalVariable(name: "config", scope: !9689, file: !1482, line: 245, type: !9278)
!9694 = !DILocation(line: 0, scope: !9689)
!9695 = !DILocation(line: 245, column: 48, scope: !9689)
!9696 = !DILocation(line: 247, column: 33, scope: !9689)
!9697 = !DILocation(line: 247, column: 2, scope: !9689)
!9698 = !DILocation(line: 248, column: 1, scope: !9689)
!9699 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1482, file: !1482, line: 107, type: !9658, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9700)
!9700 = !{!9701, !9702, !9703, !9704, !9705}
!9701 = !DILocalVariable(name: "dev", arg: 1, scope: !9699, file: !1482, line: 107, type: !1387)
!9702 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !9699, file: !1482, line: 107, type: !110)
!9703 = !DILocalVariable(name: "config", scope: !9699, file: !1482, line: 109, type: !9278)
!9704 = !DILocalVariable(name: "data", scope: !9699, file: !1482, line: 110, type: !9401)
!9705 = !DILocalVariable(name: "clock_rate", scope: !9699, file: !1482, line: 112, type: !110)
!9706 = !DILocation(line: 0, scope: !9699)
!9707 = !DILocation(line: 109, column: 48, scope: !9699)
!9708 = !DILocation(line: 110, column: 38, scope: !9699)
!9709 = !DILocation(line: 112, column: 2, scope: !9699)
!9710 = !DILocation(line: 123, column: 36, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9712, file: !1482, line: 123, column: 7)
!9712 = distinct !DILexicalBlock(scope: !9713, file: !1482, line: 122, column: 9)
!9713 = distinct !DILexicalBlock(scope: !9699, file: !1482, line: 115, column: 6)
!9714 = !DILocation(line: 124, column: 42, scope: !9711)
!9715 = !DILocation(line: 123, column: 7, scope: !9711)
!9716 = !DILocation(line: 125, column: 22, scope: !9711)
!9717 = !DILocation(line: 123, column: 7, scope: !9712)
!9718 = !DILocation(line: 176, column: 36, scope: !9699)
!9719 = !DILocation(line: 176, column: 3, scope: !9699)
!9720 = !DILocation(line: 179, column: 32, scope: !9699)
!9721 = !DILocation(line: 180, column: 10, scope: !9699)
!9722 = !DILocation(line: 179, column: 3, scope: !9699)
!9723 = !DILocation(line: 189, column: 3, scope: !9724)
!9724 = distinct !DILexicalBlock(scope: !9725, file: !1482, line: 189, column: 3)
!9725 = distinct !DILexicalBlock(scope: !9699, file: !1482, line: 189, column: 3)
!9726 = !DILocation(line: 189, column: 3, scope: !9725)
!9727 = !DILocation(line: 189, column: 3, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9724, file: !1482, line: 189, column: 3)
!9729 = !DILocation(line: 195, column: 1, scope: !9699)
!9730 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9587, file: !9587, line: 410, type: !9650, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9731)
!9731 = !{!9732}
!9732 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9730, file: !9587, line: 410, type: !1428)
!9733 = !DILocation(line: 0, scope: !9730)
!9734 = !DILocation(line: 412, column: 3, scope: !9730)
!9735 = !DILocation(line: 413, column: 1, scope: !9730)
!9736 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !841, file: !841, line: 216, type: !1461, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9737)
!9737 = !{!9738, !9739, !9740, !9741}
!9738 = !DILocalVariable(name: "dev", arg: 1, scope: !9736, file: !841, line: 216, type: !1387)
!9739 = !DILocalVariable(name: "sys", arg: 2, scope: !9736, file: !841, line: 217, type: !937)
!9740 = !DILocalVariable(name: "rate", arg: 3, scope: !9736, file: !841, line: 218, type: !893)
!9741 = !DILocalVariable(name: "api", scope: !9736, file: !841, line: 220, type: !1439)
!9742 = !DILocation(line: 0, scope: !9736)
!9743 = !DILocation(line: 221, column: 49, scope: !9736)
!9744 = !DILocation(line: 223, column: 11, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9736, file: !841, line: 223, column: 6)
!9746 = !DILocation(line: 223, column: 20, scope: !9745)
!9747 = !DILocation(line: 223, column: 6, scope: !9736)
!9748 = !DILocation(line: 227, column: 9, scope: !9736)
!9749 = !DILocation(line: 227, column: 2, scope: !9736)
!9750 = !DILocation(line: 228, column: 1, scope: !9736)
!9751 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9587, file: !9587, line: 615, type: !9752, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9754)
!9752 = !DISubroutineType(types: !9753)
!9753 = !{null, !1428, !110}
!9754 = !{!9755, !9756}
!9755 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9751, file: !9587, line: 615, type: !1428)
!9756 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !9751, file: !9587, line: 615, type: !110)
!9757 = !DILocation(line: 0, scope: !9751)
!9758 = !DILocation(line: 617, column: 3, scope: !9751)
!9759 = !DILocation(line: 618, column: 1, scope: !9751)
!9760 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9587, file: !9587, line: 1020, type: !9761, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9763)
!9761 = !DISubroutineType(types: !9762)
!9762 = !{null, !1428, !110, !110, !110}
!9763 = !{!9764, !9765, !9766, !9767}
!9764 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9760, file: !9587, line: 1020, type: !1428)
!9765 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !9760, file: !9587, line: 1020, type: !110)
!9766 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !9760, file: !9587, line: 1020, type: !110)
!9767 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !9760, file: !9587, line: 1021, type: !110)
!9768 = !DILocation(line: 0, scope: !9760)
!9769 = !DILocation(line: 1029, column: 30, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9771, file: !9587, line: 1028, column: 3)
!9771 = distinct !DILexicalBlock(scope: !9760, file: !9587, line: 1023, column: 7)
!9772 = !DILocation(line: 1029, column: 19, scope: !9770)
!9773 = !DILocation(line: 1029, column: 13, scope: !9770)
!9774 = !DILocation(line: 1029, column: 17, scope: !9770)
!9775 = !DILocation(line: 1031, column: 1, scope: !9760)
!9776 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9587, file: !9587, line: 949, type: !9752, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9777)
!9777 = !{!9778, !9779}
!9778 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9776, file: !9587, line: 949, type: !1428)
!9779 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !9776, file: !9587, line: 949, type: !110)
!9780 = !DILocation(line: 0, scope: !9776)
!9781 = !DILocation(line: 951, column: 3, scope: !9776)
!9782 = !DILocation(line: 952, column: 1, scope: !9776)
!9783 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9587, file: !9587, line: 588, type: !9752, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9784)
!9784 = !{!9785, !9786}
!9785 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9783, file: !9587, line: 588, type: !1428)
!9786 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !9783, file: !9587, line: 588, type: !110)
!9787 = !DILocation(line: 0, scope: !9783)
!9788 = !DILocation(line: 590, column: 3, scope: !9783)
!9789 = !DILocation(line: 591, column: 1, scope: !9783)
!9790 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9587, file: !9587, line: 805, type: !9752, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9791)
!9791 = !{!9792, !9793}
!9792 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9790, file: !9587, line: 805, type: !1428)
!9793 = !DILocalVariable(name: "StopBits", arg: 2, scope: !9790, file: !9587, line: 805, type: !110)
!9794 = !DILocation(line: 0, scope: !9790)
!9795 = !DILocation(line: 807, column: 3, scope: !9790)
!9796 = !DILocation(line: 808, column: 1, scope: !9790)
!9797 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9587, file: !9587, line: 532, type: !9752, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9798)
!9798 = !{!9799, !9800}
!9799 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9797, file: !9587, line: 532, type: !1428)
!9800 = !DILocalVariable(name: "Parity", arg: 2, scope: !9797, file: !9587, line: 532, type: !110)
!9801 = !DILocation(line: 0, scope: !9797)
!9802 = !DILocation(line: 534, column: 3, scope: !9797)
!9803 = !DILocation(line: 535, column: 1, scope: !9797)
!9804 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9587, file: !9587, line: 1770, type: !9588, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9805)
!9805 = !{!9806}
!9806 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9804, file: !9587, line: 1770, type: !1428)
!9807 = !DILocation(line: 0, scope: !9804)
!9808 = !DILocation(line: 1772, column: 11, scope: !9804)
!9809 = !DILocation(line: 1772, column: 46, scope: !9804)
!9810 = !DILocation(line: 1772, column: 3, scope: !9804)
!9811 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9587, file: !9587, line: 1737, type: !9588, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9812)
!9812 = !{!9813}
!9813 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9811, file: !9587, line: 1737, type: !1428)
!9814 = !DILocation(line: 0, scope: !9811)
!9815 = !DILocation(line: 1739, column: 11, scope: !9811)
!9816 = !DILocation(line: 1739, column: 3, scope: !9811)
!9817 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9587, file: !9587, line: 1748, type: !9588, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9818)
!9818 = !{!9819}
!9819 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9817, file: !9587, line: 1748, type: !1428)
!9820 = !DILocation(line: 0, scope: !9817)
!9821 = !DILocation(line: 1750, column: 11, scope: !9817)
!9822 = !DILocation(line: 1750, column: 45, scope: !9817)
!9823 = !DILocation(line: 1750, column: 3, scope: !9817)
!9824 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9587, file: !9587, line: 1827, type: !9588, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9825)
!9825 = !{!9826}
!9826 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9824, file: !9587, line: 1827, type: !1428)
!9827 = !DILocation(line: 0, scope: !9824)
!9828 = !DILocation(line: 1829, column: 11, scope: !9824)
!9829 = !DILocation(line: 1829, column: 46, scope: !9824)
!9830 = !DILocation(line: 1829, column: 3, scope: !9824)
!9831 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9587, file: !9587, line: 1992, type: !9650, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9832)
!9832 = !{!9833}
!9833 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9831, file: !9587, line: 1992, type: !1428)
!9834 = !DILocation(line: 0, scope: !9831)
!9835 = !DILocation(line: 1994, column: 3, scope: !9831)
!9836 = !DILocation(line: 1995, column: 1, scope: !9831)
!9837 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9587, file: !9587, line: 1934, type: !9650, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9838)
!9838 = !{!9839, !9840}
!9839 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9837, file: !9587, line: 1934, type: !1428)
!9840 = !DILocalVariable(name: "tmpreg", scope: !9837, file: !9587, line: 1936, type: !301)
!9841 = !DILocation(line: 0, scope: !9837)
!9842 = !DILocation(line: 1936, column: 3, scope: !9837)
!9843 = !DILocation(line: 1936, column: 17, scope: !9837)
!9844 = !DILocation(line: 1937, column: 20, scope: !9837)
!9845 = !DILocation(line: 1937, column: 10, scope: !9837)
!9846 = !DILocation(line: 1938, column: 10, scope: !9837)
!9847 = !DILocation(line: 1939, column: 20, scope: !9837)
!9848 = !DILocation(line: 1939, column: 10, scope: !9837)
!9849 = !DILocation(line: 1940, column: 10, scope: !9837)
!9850 = !DILocation(line: 1941, column: 1, scope: !9837)
!9851 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9587, file: !9587, line: 1877, type: !9650, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9852)
!9852 = !{!9853, !9854}
!9853 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9851, file: !9587, line: 1877, type: !1428)
!9854 = !DILocalVariable(name: "tmpreg", scope: !9851, file: !9587, line: 1879, type: !301)
!9855 = !DILocation(line: 0, scope: !9851)
!9856 = !DILocation(line: 1879, column: 3, scope: !9851)
!9857 = !DILocation(line: 1879, column: 17, scope: !9851)
!9858 = !DILocation(line: 1880, column: 20, scope: !9851)
!9859 = !DILocation(line: 1880, column: 10, scope: !9851)
!9860 = !DILocation(line: 1881, column: 10, scope: !9851)
!9861 = !DILocation(line: 1882, column: 20, scope: !9851)
!9862 = !DILocation(line: 1882, column: 10, scope: !9851)
!9863 = !DILocation(line: 1883, column: 10, scope: !9851)
!9864 = !DILocation(line: 1884, column: 1, scope: !9851)
!9865 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9587, file: !9587, line: 1896, type: !9650, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9866)
!9866 = !{!9867, !9868}
!9867 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9865, file: !9587, line: 1896, type: !1428)
!9868 = !DILocalVariable(name: "tmpreg", scope: !9865, file: !9587, line: 1898, type: !301)
!9869 = !DILocation(line: 0, scope: !9865)
!9870 = !DILocation(line: 1898, column: 3, scope: !9865)
!9871 = !DILocation(line: 1898, column: 17, scope: !9865)
!9872 = !DILocation(line: 1899, column: 20, scope: !9865)
!9873 = !DILocation(line: 1899, column: 10, scope: !9865)
!9874 = !DILocation(line: 1900, column: 10, scope: !9865)
!9875 = !DILocation(line: 1901, column: 20, scope: !9865)
!9876 = !DILocation(line: 1901, column: 10, scope: !9865)
!9877 = !DILocation(line: 1902, column: 10, scope: !9865)
!9878 = !DILocation(line: 1903, column: 1, scope: !9865)
!9879 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9587, file: !9587, line: 1915, type: !9650, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9880)
!9880 = !{!9881, !9882}
!9881 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9879, file: !9587, line: 1915, type: !1428)
!9882 = !DILocalVariable(name: "tmpreg", scope: !9879, file: !9587, line: 1917, type: !301)
!9883 = !DILocation(line: 0, scope: !9879)
!9884 = !DILocation(line: 1917, column: 3, scope: !9879)
!9885 = !DILocation(line: 1917, column: 17, scope: !9879)
!9886 = !DILocation(line: 1918, column: 20, scope: !9879)
!9887 = !DILocation(line: 1918, column: 10, scope: !9879)
!9888 = !DILocation(line: 1919, column: 10, scope: !9879)
!9889 = !DILocation(line: 1920, column: 20, scope: !9879)
!9890 = !DILocation(line: 1920, column: 10, scope: !9879)
!9891 = !DILocation(line: 1921, column: 10, scope: !9879)
!9892 = !DILocation(line: 1922, column: 1, scope: !9879)
!9893 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9587, file: !9587, line: 1814, type: !9588, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9894)
!9894 = !{!9895}
!9895 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9893, file: !9587, line: 1814, type: !1428)
!9896 = !DILocation(line: 0, scope: !9893)
!9897 = !DILocation(line: 1816, column: 11, scope: !9893)
!9898 = !DILocation(line: 1816, column: 46, scope: !9893)
!9899 = !DILocation(line: 1816, column: 3, scope: !9893)
!9900 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9587, file: !9587, line: 2426, type: !9901, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9903)
!9901 = !DISubroutineType(types: !9902)
!9902 = !{null, !1428, !167}
!9903 = !{!9904, !9905}
!9904 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9900, file: !9587, line: 2426, type: !1428)
!9905 = !DILocalVariable(name: "Value", arg: 2, scope: !9900, file: !9587, line: 2426, type: !167)
!9906 = !DILocation(line: 0, scope: !9900)
!9907 = !DILocation(line: 2428, column: 16, scope: !9900)
!9908 = !DILocation(line: 2428, column: 11, scope: !9900)
!9909 = !DILocation(line: 2428, column: 14, scope: !9900)
!9910 = !DILocation(line: 2429, column: 1, scope: !9900)
!9911 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9587, file: !9587, line: 1792, type: !9588, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9912)
!9912 = !{!9913}
!9913 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9911, file: !9587, line: 1792, type: !1428)
!9914 = !DILocation(line: 0, scope: !9911)
!9915 = !DILocation(line: 1794, column: 11, scope: !9911)
!9916 = !DILocation(line: 1794, column: 47, scope: !9911)
!9917 = !DILocation(line: 1794, column: 3, scope: !9911)
!9918 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9587, file: !9587, line: 2403, type: !9919, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9921)
!9919 = !DISubroutineType(types: !9920)
!9920 = !{!167, !1428}
!9921 = !{!9922}
!9922 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9918, file: !9587, line: 2403, type: !1428)
!9923 = !DILocation(line: 0, scope: !9918)
!9924 = !DILocation(line: 2405, column: 20, scope: !9918)
!9925 = !DILocation(line: 2405, column: 10, scope: !9918)
!9926 = !DILocation(line: 2405, column: 3, scope: !9918)
!9927 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1482, file: !1482, line: 1583, type: !1408, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9928)
!9928 = !{!9929, !9930, !9931, !9932, !9933, !9934}
!9929 = !DILocalVariable(name: "dev", arg: 1, scope: !9927, file: !1482, line: 1583, type: !1387)
!9930 = !DILocalVariable(name: "config", scope: !9927, file: !1482, line: 1585, type: !9278)
!9931 = !DILocalVariable(name: "data", scope: !9927, file: !1482, line: 1586, type: !9401)
!9932 = !DILocalVariable(name: "ll_parity", scope: !9927, file: !1482, line: 1587, type: !110)
!9933 = !DILocalVariable(name: "ll_datawidth", scope: !9927, file: !1482, line: 1588, type: !110)
!9934 = !DILocalVariable(name: "err", scope: !9927, file: !1482, line: 1589, type: !109)
!9935 = !DILocation(line: 0, scope: !9927)
!9936 = !DILocation(line: 1585, column: 48, scope: !9927)
!9937 = !DILocation(line: 1586, column: 38, scope: !9927)
!9938 = !DILocation(line: 1591, column: 2, scope: !9927)
!9939 = !DILocation(line: 1593, column: 29, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9927, file: !1482, line: 1593, column: 6)
!9941 = !DILocation(line: 1593, column: 7, scope: !9940)
!9942 = !DILocation(line: 1593, column: 6, scope: !9927)
!9943 = !DILocation(line: 1599, column: 31, scope: !9927)
!9944 = !DILocation(line: 1599, column: 71, scope: !9927)
!9945 = !DILocation(line: 1599, column: 8, scope: !9927)
!9946 = !DILocation(line: 1600, column: 10, scope: !9947)
!9947 = distinct !DILexicalBlock(scope: !9927, file: !1482, line: 1600, column: 6)
!9948 = !DILocation(line: 1600, column: 6, scope: !9927)
!9949 = !DILocation(line: 1616, column: 36, scope: !9927)
!9950 = !DILocation(line: 1616, column: 8, scope: !9927)
!9951 = !DILocation(line: 1617, column: 10, scope: !9952)
!9952 = distinct !DILexicalBlock(scope: !9927, file: !1482, line: 1617, column: 6)
!9953 = !DILocation(line: 1617, column: 6, scope: !9927)
!9954 = !DILocation(line: 1621, column: 27, scope: !9927)
!9955 = !DILocation(line: 1621, column: 2, scope: !9927)
!9956 = !DILocation(line: 1624, column: 40, scope: !9927)
!9957 = !DILocation(line: 1624, column: 2, scope: !9927)
!9958 = !DILocation(line: 1630, column: 14, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9927, file: !1482, line: 1630, column: 6)
!9960 = !DILocation(line: 1630, column: 6, scope: !9927)
!9961 = !DILocation(line: 1638, column: 2, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9963, file: !1482, line: 1634, column: 34)
!9963 = distinct !DILexicalBlock(scope: !9959, file: !1482, line: 1634, column: 13)
!9964 = !DILocation(line: 0, scope: !9959)
!9965 = !DILocation(line: 1649, column: 35, scope: !9927)
!9966 = !DILocation(line: 1649, column: 2, scope: !9927)
!9967 = !DILocation(line: 1654, column: 14, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9927, file: !1482, line: 1654, column: 6)
!9969 = !DILocation(line: 1654, column: 6, scope: !9927)
!9970 = !DILocation(line: 1655, column: 3, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9968, file: !1482, line: 1654, column: 31)
!9972 = !DILocation(line: 1656, column: 2, scope: !9971)
!9973 = !DILocation(line: 1659, column: 37, scope: !9927)
!9974 = !DILocation(line: 1659, column: 2, scope: !9927)
!9975 = !DILocation(line: 1662, column: 14, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9927, file: !1482, line: 1662, column: 6)
!9977 = !DILocation(line: 1662, column: 6, scope: !9927)
!9978 = !DILocation(line: 1663, column: 37, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9976, file: !1482, line: 1662, column: 27)
!9980 = !DILocation(line: 1663, column: 3, scope: !9979)
!9981 = !DILocation(line: 1664, column: 2, scope: !9979)
!9982 = !DILocation(line: 1684, column: 26, scope: !9927)
!9983 = !DILocation(line: 1684, column: 2, scope: !9927)
!9984 = !DILocation(line: 1722, column: 2, scope: !9927)
!9985 = !DILocation(line: 1724, column: 1, scope: !9927)
!9986 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1482, file: !1482, line: 651, type: !9987, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !9989)
!9987 = !DISubroutineType(types: !9988)
!9988 = !{null, !1387}
!9989 = !{!9990, !9991, !9992}
!9990 = !DILocalVariable(name: "dev", arg: 1, scope: !9986, file: !1482, line: 651, type: !1387)
!9991 = !DILocalVariable(name: "data", scope: !9986, file: !1482, line: 653, type: !9401)
!9992 = !DILocalVariable(name: "clk", scope: !9986, file: !1482, line: 654, type: !9993)
!9993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1387)
!9994 = !DILocation(line: 0, scope: !9986)
!9995 = !DILocation(line: 653, column: 38, scope: !9986)
!9996 = !DILocation(line: 656, column: 8, scope: !9986)
!9997 = !DILocation(line: 656, column: 14, scope: !9986)
!9998 = !DILocation(line: 657, column: 1, scope: !9986)
!9999 = distinct !DISubprogram(name: "device_is_ready", scope: !8398, file: !8398, line: 47, type: !10000, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10002)
!10000 = !DISubroutineType(types: !10001)
!10001 = !{!334, !1387}
!10002 = !{!10003}
!10003 = !DILocalVariable(name: "dev", arg: 1, scope: !9999, file: !8398, line: 47, type: !1387)
!10004 = !DILocation(line: 0, scope: !9999)
!10005 = !DILocation(line: 55, column: 2, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !9999, file: !8398, line: 55, column: 2)
!10007 = !{i64 2155378844}
!10008 = !DILocation(line: 56, column: 9, scope: !9999)
!10009 = !DILocation(line: 56, column: 2, scope: !9999)
!10010 = distinct !DISubprogram(name: "clock_control_on", scope: !841, file: !841, line: 123, type: !1446, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10011)
!10011 = !{!10012, !10013, !10014}
!10012 = !DILocalVariable(name: "dev", arg: 1, scope: !10010, file: !841, line: 123, type: !1387)
!10013 = !DILocalVariable(name: "sys", arg: 2, scope: !10010, file: !841, line: 124, type: !937)
!10014 = !DILocalVariable(name: "api", scope: !10010, file: !841, line: 126, type: !1439)
!10015 = !DILocation(line: 0, scope: !10010)
!10016 = !DILocation(line: 127, column: 49, scope: !10010)
!10017 = !DILocation(line: 129, column: 14, scope: !10010)
!10018 = !DILocation(line: 129, column: 9, scope: !10010)
!10019 = !DILocation(line: 129, column: 2, scope: !10010)
!10020 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1533, file: !1533, line: 342, type: !10021, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10023)
!10021 = !DISubroutineType(types: !10022)
!10022 = !{!109, !1583, !167}
!10023 = !{!10024, !10025, !10026, !10027}
!10024 = !DILocalVariable(name: "config", arg: 1, scope: !10020, file: !1533, line: 342, type: !1583)
!10025 = !DILocalVariable(name: "id", arg: 2, scope: !10020, file: !1533, line: 343, type: !167)
!10026 = !DILocalVariable(name: "ret", scope: !10020, file: !1533, line: 345, type: !109)
!10027 = !DILocalVariable(name: "state", scope: !10020, file: !1533, line: 346, type: !1536)
!10028 = !DILocation(line: 0, scope: !10020)
!10029 = !DILocation(line: 346, column: 2, scope: !10020)
!10030 = !DILocation(line: 348, column: 8, scope: !10020)
!10031 = !DILocation(line: 349, column: 10, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10020, file: !1533, line: 349, column: 6)
!10033 = !DILocation(line: 349, column: 6, scope: !10020)
!10034 = !DILocation(line: 353, column: 44, scope: !10020)
!10035 = !DILocation(line: 353, column: 9, scope: !10020)
!10036 = !DILocation(line: 353, column: 2, scope: !10020)
!10037 = !DILocation(line: 354, column: 1, scope: !10020)
!10038 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9587, file: !9587, line: 497, type: !9752, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10039)
!10039 = !{!10040, !10041, !10042}
!10040 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10038, file: !9587, line: 497, type: !1428)
!10041 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10038, file: !9587, line: 497, type: !110)
!10042 = !DILocalVariable(name: "val", scope: !10043, file: !9587, line: 499, type: !110)
!10043 = distinct !DILexicalBlock(scope: !10038, file: !9587, line: 499, column: 3)
!10044 = !DILocation(line: 0, scope: !10038)
!10045 = !DILocation(line: 499, column: 3, scope: !10043)
!10046 = !DILocalVariable(name: "addr", arg: 1, scope: !10047, file: !6243, line: 476, type: !1478)
!10047 = distinct !DISubprogram(name: "__LDREXW", scope: !6243, file: !6243, line: 476, type: !10048, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10050)
!10048 = !DISubroutineType(types: !10049)
!10049 = !{!110, !1478}
!10050 = !{!10046, !10051}
!10051 = !DILocalVariable(name: "result", scope: !10047, file: !6243, line: 478, type: !110)
!10052 = !DILocation(line: 0, scope: !10047, inlinedAt: !10053)
!10053 = distinct !DILocation(line: 499, column: 3, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10043, file: !9587, line: 499, column: 3)
!10055 = !DILocation(line: 480, column: 4, scope: !10047, inlinedAt: !10053)
!10056 = !{i64 3760582}
!10057 = !DILocation(line: 499, column: 3, scope: !10054)
!10058 = !DILocation(line: 0, scope: !10043)
!10059 = !DILocalVariable(name: "value", arg: 1, scope: !10060, file: !6243, line: 527, type: !110)
!10060 = distinct !DISubprogram(name: "__STREXW", scope: !6243, file: !6243, line: 527, type: !10061, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10063)
!10061 = !DISubroutineType(types: !10062)
!10062 = !{!110, !110, !1478}
!10063 = !{!10059, !10064, !10065}
!10064 = !DILocalVariable(name: "addr", arg: 2, scope: !10060, file: !6243, line: 527, type: !1478)
!10065 = !DILocalVariable(name: "result", scope: !10060, file: !6243, line: 529, type: !110)
!10066 = !DILocation(line: 0, scope: !10060, inlinedAt: !10067)
!10067 = distinct !DILocation(line: 499, column: 3, scope: !10043)
!10068 = !DILocation(line: 531, column: 4, scope: !10060, inlinedAt: !10067)
!10069 = !{i64 3762018}
!10070 = distinct !{!10070, !10045, !10045}
!10071 = !DILocation(line: 500, column: 1, scope: !10038)
!10072 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9587, file: !9587, line: 850, type: !9761, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10073)
!10073 = !{!10074, !10075, !10076, !10077}
!10074 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10072, file: !9587, line: 850, type: !1428)
!10075 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10072, file: !9587, line: 850, type: !110)
!10076 = !DILocalVariable(name: "Parity", arg: 3, scope: !10072, file: !9587, line: 850, type: !110)
!10077 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10072, file: !9587, line: 851, type: !110)
!10078 = !DILocation(line: 0, scope: !10072)
!10079 = !DILocation(line: 853, column: 3, scope: !10072)
!10080 = !DILocation(line: 854, column: 3, scope: !10072)
!10081 = !DILocation(line: 855, column: 1, scope: !10072)
!10082 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9587, file: !9587, line: 1337, type: !9650, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10083)
!10083 = !{!10084}
!10084 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10082, file: !9587, line: 1337, type: !1428)
!10085 = !DILocation(line: 0, scope: !10082)
!10086 = !DILocation(line: 1339, column: 3, scope: !10082)
!10087 = !DILocation(line: 1340, column: 1, scope: !10082)
!10088 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1533, file: !1533, line: 316, type: !10089, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10091)
!10089 = !DISubroutineType(types: !10090)
!10090 = !{!109, !1583, !1536}
!10091 = !{!10092, !10093, !10094}
!10092 = !DILocalVariable(name: "config", arg: 1, scope: !10088, file: !1533, line: 317, type: !1583)
!10093 = !DILocalVariable(name: "state", arg: 2, scope: !10088, file: !1533, line: 318, type: !1536)
!10094 = !DILocalVariable(name: "reg", scope: !10088, file: !1533, line: 320, type: !22)
!10095 = !DILocation(line: 0, scope: !10088)
!10096 = !DILocation(line: 329, column: 39, scope: !10088)
!10097 = !DILocation(line: 329, column: 52, scope: !10088)
!10098 = !DILocation(line: 329, column: 9, scope: !10088)
!10099 = !DILocation(line: 329, column: 2, scope: !10088)
!10100 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !321, file: !321, line: 730, type: !10000, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1343, retainedNodes: !10101)
!10101 = !{!10102}
!10102 = !DILocalVariable(name: "dev", arg: 1, scope: !10100, file: !321, line: 730, type: !1387)
!10103 = !DILocation(line: 0, scope: !10100)
!10104 = !DILocation(line: 732, column: 9, scope: !10100)
!10105 = !DILocation(line: 732, column: 2, scope: !10100)
!10106 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1698, file: !1698, line: 270, type: !1704, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10107)
!10107 = !{!10108}
!10108 = !DILocalVariable(name: "dev", arg: 1, scope: !10106, file: !1698, line: 270, type: !1706)
!10109 = !DILocation(line: 0, scope: !10106)
!10110 = !DILocation(line: 274, column: 2, scope: !10106)
!10111 = !DILocation(line: 275, column: 12, scope: !10106)
!10112 = !DILocation(line: 276, column: 15, scope: !10106)
!10113 = !DILocation(line: 277, column: 16, scope: !10106)
!10114 = !DILocation(line: 278, column: 15, scope: !10106)
!10115 = !DILocation(line: 279, column: 16, scope: !10106)
!10116 = !DILocation(line: 282, column: 2, scope: !10106)
!10117 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !536, file: !536, line: 1814, type: !6283, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10118)
!10118 = !{!10119, !10120}
!10119 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10117, file: !536, line: 1814, type: !791)
!10120 = !DILocalVariable(name: "priority", arg: 2, scope: !10117, file: !536, line: 1814, type: !110)
!10121 = !DILocation(line: 0, scope: !10117)
!10122 = !DILocation(line: 1822, column: 46, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10124, file: !536, line: 1821, column: 3)
!10124 = distinct !DILexicalBlock(scope: !10117, file: !536, line: 1816, column: 7)
!10125 = !DILocation(line: 1824, column: 1, scope: !10117)
!10126 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1698, file: !1698, line: 118, type: !6180, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10127)
!10127 = !{!10128, !10129}
!10128 = !DILocalVariable(name: "arg", arg: 1, scope: !10126, file: !1698, line: 118, type: !108)
!10129 = !DILocalVariable(name: "dticks", scope: !10126, file: !1698, line: 121, type: !110)
!10130 = !DILocation(line: 0, scope: !10126)
!10131 = !DILocation(line: 124, column: 2, scope: !10126)
!10132 = !DILocation(line: 129, column: 17, scope: !10126)
!10133 = !DILocation(line: 129, column: 14, scope: !10126)
!10134 = !DILocation(line: 130, column: 15, scope: !10126)
!10135 = !DILocation(line: 145, column: 27, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10137, file: !1698, line: 132, column: 16)
!10137 = distinct !DILexicalBlock(scope: !10126, file: !1698, line: 132, column: 6)
!10138 = !DILocation(line: 145, column: 25, scope: !10136)
!10139 = !DILocation(line: 145, column: 45, scope: !10136)
!10140 = !DILocation(line: 146, column: 30, scope: !10136)
!10141 = !DILocation(line: 146, column: 20, scope: !10136)
!10142 = !DILocation(line: 147, column: 3, scope: !10136)
!10143 = !DILocation(line: 151, column: 2, scope: !10126)
!10144 = !DILocation(line: 152, column: 1, scope: !10126)
!10145 = distinct !DISubprogram(name: "elapsed", scope: !1698, file: !1698, line: 85, type: !3451, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10146)
!10146 = !{!10147, !10148, !10149}
!10147 = !DILocalVariable(name: "val1", scope: !10145, file: !1698, line: 87, type: !110)
!10148 = !DILocalVariable(name: "ctrl", scope: !10145, file: !1698, line: 88, type: !110)
!10149 = !DILocalVariable(name: "val2", scope: !10145, file: !1698, line: 89, type: !110)
!10150 = !DILocation(line: 87, column: 27, scope: !10145)
!10151 = !DILocation(line: 0, scope: !10145)
!10152 = !DILocation(line: 88, column: 27, scope: !10145)
!10153 = !DILocation(line: 89, column: 27, scope: !10145)
!10154 = !DILocation(line: 105, column: 12, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10145, file: !1698, line: 105, column: 6)
!10156 = !DILocation(line: 106, column: 6, scope: !10155)
!10157 = !DILocation(line: 107, column: 16, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10155, file: !1698, line: 106, column: 24)
!10159 = !DILocation(line: 111, column: 18, scope: !10158)
!10160 = !DILocation(line: 112, column: 2, scope: !10158)
!10161 = !DILocation(line: 114, column: 20, scope: !10145)
!10162 = !DILocation(line: 114, column: 30, scope: !10145)
!10163 = !DILocation(line: 114, column: 28, scope: !10145)
!10164 = !DILocation(line: 114, column: 2, scope: !10145)
!10165 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1698, file: !1698, line: 154, type: !10166, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10168)
!10166 = !DISubroutineType(types: !10167)
!10167 = !{null, !765, !334}
!10168 = !{!10169, !10170, !10171, !10172, !10173, !10174, !10175, !10180, !10181}
!10169 = !DILocalVariable(name: "ticks", arg: 1, scope: !10165, file: !1698, line: 154, type: !765)
!10170 = !DILocalVariable(name: "idle", arg: 2, scope: !10165, file: !1698, line: 154, type: !334)
!10171 = !DILocalVariable(name: "delay", scope: !10165, file: !1698, line: 169, type: !110)
!10172 = !DILocalVariable(name: "val1", scope: !10165, file: !1698, line: 170, type: !110)
!10173 = !DILocalVariable(name: "val2", scope: !10165, file: !1698, line: 170, type: !110)
!10174 = !DILocalVariable(name: "last_load_", scope: !10165, file: !1698, line: 171, type: !110)
!10175 = !DILocalVariable(name: "key", scope: !10165, file: !1698, line: 176, type: !10176)
!10176 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !254, line: 106, baseType: !10177)
!10177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !254, line: 32, size: 32, elements: !10178)
!10178 = !{!10179}
!10179 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10177, file: !254, line: 33, baseType: !109, size: 32)
!10180 = !DILocalVariable(name: "pending", scope: !10165, file: !1698, line: 178, type: !110)
!10181 = !DILocalVariable(name: "unannounced", scope: !10165, file: !1698, line: 185, type: !110)
!10182 = !DILocation(line: 0, scope: !10165)
!10183 = !DILocation(line: 162, column: 49, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !10165, file: !1698, line: 162, column: 6)
!10185 = !DILocation(line: 163, column: 17, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10184, file: !1698, line: 162, column: 78)
!10187 = !DILocation(line: 164, column: 13, scope: !10186)
!10188 = !DILocation(line: 165, column: 3, scope: !10186)
!10189 = !DILocation(line: 171, column: 24, scope: !10165)
!10190 = !DILocation(line: 173, column: 10, scope: !10165)
!10191 = !DILocation(line: 174, column: 10, scope: !10165)
!10192 = !DILocalVariable(name: "l", arg: 1, scope: !10193, file: !254, line: 136, type: !10196)
!10193 = distinct !DISubprogram(name: "k_spin_lock", scope: !254, file: !254, line: 136, type: !10194, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10197)
!10194 = !DISubroutineType(types: !10195)
!10195 = !{!10176, !10196}
!10196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 32)
!10197 = !{!10192, !10198}
!10198 = !DILocalVariable(name: "k", scope: !10193, file: !254, line: 139, type: !10176)
!10199 = !DILocation(line: 0, scope: !10193, inlinedAt: !10200)
!10200 = distinct !DILocation(line: 176, column: 25, scope: !10165)
!10201 = !DILocation(line: 55, column: 2, scope: !10202, inlinedAt: !10206)
!10202 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6069, file: !6069, line: 42, type: !6070, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10203)
!10203 = !{!10204, !10205}
!10204 = !DILocalVariable(name: "key", scope: !10202, file: !6069, line: 44, type: !32)
!10205 = !DILocalVariable(name: "tmp", scope: !10202, file: !6069, line: 53, type: !32)
!10206 = distinct !DILocation(line: 145, column: 10, scope: !10193, inlinedAt: !10200)
!10207 = !{i64 2282180}
!10208 = !DILocation(line: 0, scope: !10202, inlinedAt: !10206)
!10209 = !DILocation(line: 148, column: 2, scope: !10210, inlinedAt: !10200)
!10210 = distinct !DILexicalBlock(scope: !10211, file: !254, line: 148, column: 2)
!10211 = distinct !DILexicalBlock(scope: !10193, file: !254, line: 148, column: 2)
!10212 = !DILocation(line: 148, column: 2, scope: !10211, inlinedAt: !10200)
!10213 = !DILocation(line: 148, column: 2, scope: !10214, inlinedAt: !10200)
!10214 = distinct !DILexicalBlock(scope: !10210, file: !254, line: 148, column: 2)
!10215 = !DILocation(line: 160, column: 2, scope: !10193, inlinedAt: !10200)
!10216 = !DILocation(line: 178, column: 21, scope: !10165)
!10217 = !DILocation(line: 180, column: 18, scope: !10165)
!10218 = !DILocation(line: 182, column: 14, scope: !10165)
!10219 = !DILocation(line: 183, column: 15, scope: !10165)
!10220 = !DILocation(line: 185, column: 39, scope: !10165)
!10221 = !DILocation(line: 185, column: 37, scope: !10165)
!10222 = !DILocation(line: 187, column: 27, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10165, file: !1698, line: 187, column: 6)
!10224 = !DILocation(line: 187, column: 6, scope: !10165)
!10225 = !DILocation(line: 202, column: 27, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !10223, file: !1698, line: 195, column: 9)
!10227 = !DILocation(line: 202, column: 48, scope: !10226)
!10228 = !DILocation(line: 203, column: 9, scope: !10226)
!10229 = !DILocation(line: 204, column: 11, scope: !10226)
!10230 = !DILocation(line: 205, column: 13, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10226, file: !1698, line: 205, column: 7)
!10232 = !DILocation(line: 205, column: 7, scope: !10226)
!10233 = !DILocation(line: 0, scope: !10223)
!10234 = !DILocation(line: 212, column: 18, scope: !10165)
!10235 = !DILocation(line: 214, column: 28, scope: !10165)
!10236 = !DILocation(line: 214, column: 16, scope: !10165)
!10237 = !DILocation(line: 215, column: 15, scope: !10165)
!10238 = !DILocation(line: 227, column: 11, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10165, file: !1698, line: 227, column: 6)
!10240 = !DILocation(line: 227, column: 6, scope: !10165)
!10241 = !DILocation(line: 228, column: 15, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10239, file: !1698, line: 227, column: 19)
!10243 = !DILocation(line: 228, column: 38, scope: !10242)
!10244 = !DILocation(line: 228, column: 24, scope: !10242)
!10245 = !DILocation(line: 229, column: 2, scope: !10242)
!10246 = !DILocation(line: 230, column: 24, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10239, file: !1698, line: 229, column: 9)
!10248 = !DILocation(line: 230, column: 15, scope: !10247)
!10249 = !DILocation(line: 0, scope: !10239)
!10250 = !DILocalVariable(name: "key", arg: 2, scope: !10251, file: !254, line: 190, type: !10176)
!10251 = distinct !DISubprogram(name: "k_spin_unlock", scope: !254, file: !254, line: 189, type: !10252, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10254)
!10252 = !DISubroutineType(types: !10253)
!10253 = !{null, !10196, !10176}
!10254 = !{!10255, !10250}
!10255 = !DILocalVariable(name: "l", arg: 1, scope: !10251, file: !254, line: 189, type: !10196)
!10256 = !DILocation(line: 0, scope: !10251, inlinedAt: !10257)
!10257 = distinct !DILocation(line: 232, column: 2, scope: !10165)
!10258 = !DILocation(line: 194, column: 2, scope: !10259, inlinedAt: !10257)
!10259 = distinct !DILexicalBlock(scope: !10260, file: !254, line: 194, column: 2)
!10260 = distinct !DILexicalBlock(scope: !10251, file: !254, line: 194, column: 2)
!10261 = !DILocation(line: 194, column: 2, scope: !10260, inlinedAt: !10257)
!10262 = !DILocation(line: 194, column: 2, scope: !10263, inlinedAt: !10257)
!10263 = distinct !DILexicalBlock(scope: !10259, file: !254, line: 194, column: 2)
!10264 = !DILocalVariable(name: "key", arg: 1, scope: !10265, file: !6069, line: 84, type: !32)
!10265 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6069, file: !6069, line: 84, type: !6080, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10266)
!10266 = !{!10264}
!10267 = !DILocation(line: 0, scope: !10265, inlinedAt: !10268)
!10268 = distinct !DILocation(line: 215, column: 2, scope: !10251, inlinedAt: !10257)
!10269 = !DILocation(line: 95, column: 2, scope: !10265, inlinedAt: !10268)
!10270 = !{i64 2282997}
!10271 = !DILocation(line: 234, column: 1, scope: !10165)
!10272 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1698, file: !1698, line: 236, type: !3451, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10273)
!10273 = !{!10274, !10275}
!10274 = !DILocalVariable(name: "key", scope: !10272, file: !1698, line: 242, type: !10176)
!10275 = !DILocalVariable(name: "cyc", scope: !10272, file: !1698, line: 243, type: !110)
!10276 = !DILocation(line: 0, scope: !10193, inlinedAt: !10277)
!10277 = distinct !DILocation(line: 242, column: 25, scope: !10272)
!10278 = !DILocation(line: 55, column: 2, scope: !10202, inlinedAt: !10279)
!10279 = distinct !DILocation(line: 145, column: 10, scope: !10193, inlinedAt: !10277)
!10280 = !DILocation(line: 0, scope: !10202, inlinedAt: !10279)
!10281 = !DILocation(line: 148, column: 2, scope: !10210, inlinedAt: !10277)
!10282 = !DILocation(line: 148, column: 2, scope: !10211, inlinedAt: !10277)
!10283 = !DILocation(line: 148, column: 2, scope: !10214, inlinedAt: !10277)
!10284 = !DILocation(line: 160, column: 2, scope: !10193, inlinedAt: !10277)
!10285 = !DILocation(line: 0, scope: !10272)
!10286 = !DILocation(line: 243, column: 17, scope: !10272)
!10287 = !DILocation(line: 243, column: 29, scope: !10272)
!10288 = !DILocation(line: 243, column: 43, scope: !10272)
!10289 = !DILocation(line: 0, scope: !10251, inlinedAt: !10290)
!10290 = distinct !DILocation(line: 245, column: 2, scope: !10272)
!10291 = !DILocation(line: 194, column: 2, scope: !10259, inlinedAt: !10290)
!10292 = !DILocation(line: 194, column: 2, scope: !10260, inlinedAt: !10290)
!10293 = !DILocation(line: 194, column: 2, scope: !10263, inlinedAt: !10290)
!10294 = !DILocation(line: 243, column: 27, scope: !10272)
!10295 = !DILocation(line: 243, column: 41, scope: !10272)
!10296 = !DILocation(line: 0, scope: !10265, inlinedAt: !10297)
!10297 = distinct !DILocation(line: 215, column: 2, scope: !10251, inlinedAt: !10290)
!10298 = !DILocation(line: 95, column: 2, scope: !10265, inlinedAt: !10297)
!10299 = !DILocation(line: 246, column: 13, scope: !10272)
!10300 = !DILocation(line: 246, column: 2, scope: !10272)
!10301 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1698, file: !1698, line: 249, type: !3451, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !10302)
!10302 = !{!10303, !10304}
!10303 = !DILocalVariable(name: "key", scope: !10301, file: !1698, line: 251, type: !10176)
!10304 = !DILocalVariable(name: "ret", scope: !10301, file: !1698, line: 252, type: !110)
!10305 = !DILocation(line: 0, scope: !10193, inlinedAt: !10306)
!10306 = distinct !DILocation(line: 251, column: 25, scope: !10301)
!10307 = !DILocation(line: 55, column: 2, scope: !10202, inlinedAt: !10308)
!10308 = distinct !DILocation(line: 145, column: 10, scope: !10193, inlinedAt: !10306)
!10309 = !DILocation(line: 0, scope: !10202, inlinedAt: !10308)
!10310 = !DILocation(line: 148, column: 2, scope: !10210, inlinedAt: !10306)
!10311 = !DILocation(line: 148, column: 2, scope: !10211, inlinedAt: !10306)
!10312 = !DILocation(line: 148, column: 2, scope: !10214, inlinedAt: !10306)
!10313 = !DILocation(line: 160, column: 2, scope: !10193, inlinedAt: !10306)
!10314 = !DILocation(line: 0, scope: !10301)
!10315 = !DILocation(line: 252, column: 17, scope: !10301)
!10316 = !DILocation(line: 252, column: 29, scope: !10301)
!10317 = !DILocation(line: 0, scope: !10251, inlinedAt: !10318)
!10318 = distinct !DILocation(line: 254, column: 2, scope: !10301)
!10319 = !DILocation(line: 194, column: 2, scope: !10259, inlinedAt: !10318)
!10320 = !DILocation(line: 194, column: 2, scope: !10260, inlinedAt: !10318)
!10321 = !DILocation(line: 194, column: 2, scope: !10263, inlinedAt: !10318)
!10322 = !DILocation(line: 252, column: 27, scope: !10301)
!10323 = !DILocation(line: 0, scope: !10265, inlinedAt: !10324)
!10324 = distinct !DILocation(line: 215, column: 2, scope: !10251, inlinedAt: !10318)
!10325 = !DILocation(line: 95, column: 2, scope: !10265, inlinedAt: !10324)
!10326 = !DILocation(line: 255, column: 2, scope: !10301)
!10327 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1698, file: !1698, line: 258, type: !3169, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !2100)
!10328 = !DILocation(line: 260, column: 6, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10327, file: !1698, line: 260, column: 6)
!10330 = !DILocation(line: 260, column: 16, scope: !10329)
!10331 = !DILocation(line: 260, column: 6, scope: !10327)
!10332 = !DILocation(line: 261, column: 17, scope: !10333)
!10333 = distinct !DILexicalBlock(scope: !10329, file: !1698, line: 260, column: 34)
!10334 = !DILocation(line: 262, column: 2, scope: !10333)
!10335 = !DILocation(line: 263, column: 1, scope: !10327)
!10336 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1698, file: !1698, line: 265, type: !3169, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1620, retainedNodes: !2100)
!10337 = !DILocation(line: 267, column: 16, scope: !10336)
!10338 = !DILocation(line: 268, column: 1, scope: !10336)
!10339 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10340, file: !10340, line: 9, type: !10341, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2997, retainedNodes: !10364)
!10340 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10341 = !DISubroutineType(types: !10342)
!10342 = !{!109, !10343, !167, !10363}
!10343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10344, size: 32)
!10344 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10345)
!10345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1533, line: 60, size: 64, elements: !10346)
!10346 = !{!10347, !10362}
!10347 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10345, file: !1533, line: 69, baseType: !10348, size: 32)
!10348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10349, size: 32)
!10349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10350)
!10350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1533, line: 50, size: 64, elements: !10351)
!10351 = !{!10352, !10360, !10361}
!10352 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10350, file: !1533, line: 52, baseType: !10353, size: 32)
!10353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10354, size: 32)
!10354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10355)
!10355 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1544, line: 37, baseType: !10356)
!10356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1544, line: 32, size: 64, elements: !10357)
!10357 = !{!10358, !10359}
!10358 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10356, file: !1544, line: 34, baseType: !110, size: 32)
!10359 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10356, file: !1544, line: 36, baseType: !110, size: 32, offset: 32)
!10360 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10350, file: !1533, line: 54, baseType: !167, size: 8, offset: 32)
!10361 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10350, file: !1533, line: 56, baseType: !167, size: 8, offset: 40)
!10362 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10345, file: !1533, line: 71, baseType: !167, size: 8, offset: 32)
!10363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10348, size: 32)
!10364 = !{!10365, !10366, !10367}
!10365 = !DILocalVariable(name: "config", arg: 1, scope: !10339, file: !10340, line: 9, type: !10343)
!10366 = !DILocalVariable(name: "id", arg: 2, scope: !10339, file: !10340, line: 9, type: !167)
!10367 = !DILocalVariable(name: "state", arg: 3, scope: !10339, file: !10340, line: 10, type: !10363)
!10368 = !DILocation(line: 0, scope: !10339)
!10369 = !DILocation(line: 12, column: 20, scope: !10339)
!10370 = !DILocation(line: 13, column: 27, scope: !10339)
!10371 = !DILocation(line: 13, column: 42, scope: !10339)
!10372 = !DILocation(line: 13, column: 19, scope: !10339)
!10373 = !DILocation(line: 13, column: 16, scope: !10339)
!10374 = !DILocation(line: 13, column: 2, scope: !10339)
!10375 = distinct !{!10375, !10374, !10376}
!10376 = !DILocation(line: 19, column: 2, scope: !10339)
!10377 = !DILocation(line: 14, column: 23, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !10379, file: !10340, line: 14, column: 7)
!10379 = distinct !DILexicalBlock(scope: !10339, file: !10340, line: 13, column: 54)
!10380 = !DILocation(line: 14, column: 10, scope: !10378)
!10381 = !DILocation(line: 18, column: 11, scope: !10379)
!10382 = !DILocation(line: 14, column: 7, scope: !10379)
!10383 = !DILocation(line: 22, column: 1, scope: !10339)
!10384 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1817, file: !1817, line: 193, type: !10385, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10394)
!10385 = !DISubroutineType(types: !10386)
!10386 = !{!109, !10387, !167, !22}
!10387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10388, size: 32)
!10388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10389)
!10389 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1544, line: 37, baseType: !10390)
!10390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1544, line: 32, size: 64, elements: !10391)
!10391 = !{!10392, !10393}
!10392 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10390, file: !1544, line: 34, baseType: !110, size: 32)
!10393 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10390, file: !1544, line: 36, baseType: !110, size: 32, offset: 32)
!10394 = !{!10395, !10396, !10397, !10398, !10399, !10400, !10401, !10402, !10404}
!10395 = !DILocalVariable(name: "pins", arg: 1, scope: !10384, file: !1817, line: 193, type: !10387)
!10396 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10384, file: !1817, line: 193, type: !167)
!10397 = !DILocalVariable(name: "reg", arg: 3, scope: !10384, file: !1817, line: 194, type: !22)
!10398 = !DILocalVariable(name: "pin", scope: !10384, file: !1817, line: 196, type: !110)
!10399 = !DILocalVariable(name: "mux", scope: !10384, file: !1817, line: 196, type: !110)
!10400 = !DILocalVariable(name: "pin_cgf", scope: !10384, file: !1817, line: 197, type: !110)
!10401 = !DILocalVariable(name: "ret", scope: !10384, file: !1817, line: 198, type: !109)
!10402 = !DILocalVariable(name: "i", scope: !10403, file: !1817, line: 209, type: !167)
!10403 = distinct !DILexicalBlock(scope: !10384, file: !1817, line: 209, column: 2)
!10404 = !DILocalVariable(name: "gpio_out", scope: !10405, file: !1817, line: 239, type: !110)
!10405 = distinct !DILexicalBlock(scope: !10406, file: !1817, line: 238, column: 55)
!10406 = distinct !DILexicalBlock(scope: !10407, file: !1817, line: 238, column: 14)
!10407 = distinct !DILexicalBlock(scope: !10408, file: !1817, line: 236, column: 14)
!10408 = distinct !DILexicalBlock(scope: !10409, file: !1817, line: 234, column: 7)
!10409 = distinct !DILexicalBlock(scope: !10410, file: !1817, line: 209, column: 41)
!10410 = distinct !DILexicalBlock(scope: !10403, file: !1817, line: 209, column: 2)
!10411 = !DILocation(line: 0, scope: !10384)
!10412 = !DILocation(line: 0, scope: !10403)
!10413 = !DILocation(line: 209, column: 25, scope: !10410)
!10414 = !DILocation(line: 209, column: 2, scope: !10403)
!10415 = distinct !{!10415, !10414, !10416}
!10416 = !DILocation(line: 259, column: 2, scope: !10403)
!10417 = !DILocation(line: 210, column: 17, scope: !10409)
!10418 = !DILocation(line: 234, column: 7, scope: !10408)
!10419 = !DILocation(line: 234, column: 33, scope: !10408)
!10420 = !DILocation(line: 234, column: 7, scope: !10409)
!10421 = !DILocation(line: 235, column: 22, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10408, file: !1817, line: 234, column: 49)
!10423 = !DILocation(line: 235, column: 29, scope: !10422)
!10424 = !DILocation(line: 236, column: 3, scope: !10422)
!10425 = !DILocation(line: 236, column: 14, scope: !10408)
!10426 = !DILocation(line: 239, column: 32, scope: !10405)
!10427 = !DILocation(line: 0, scope: !10405)
!10428 = !DILocation(line: 241, column: 8, scope: !10405)
!10429 = !DILocation(line: 246, column: 3, scope: !10405)
!10430 = !DILocation(line: 252, column: 9, scope: !10409)
!10431 = !DILocation(line: 255, column: 9, scope: !10409)
!10432 = !DILocation(line: 256, column: 11, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10409, file: !1817, line: 256, column: 7)
!10434 = !DILocation(line: 209, column: 37, scope: !10410)
!10435 = !DILocation(line: 256, column: 7, scope: !10409)
!10436 = !DILocation(line: 262, column: 1, scope: !10384)
!10437 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1817, file: !1817, line: 176, type: !10438, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10440)
!10438 = !DISubroutineType(types: !10439)
!10439 = !{!109, !110, !110, !110}
!10440 = !{!10441, !10442, !10443, !10444}
!10441 = !DILocalVariable(name: "pin", arg: 1, scope: !10437, file: !1817, line: 176, type: !110)
!10442 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10437, file: !1817, line: 176, type: !110)
!10443 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10437, file: !1817, line: 176, type: !110)
!10444 = !DILocalVariable(name: "port_device", scope: !10437, file: !1817, line: 178, type: !1747)
!10445 = !DILocation(line: 0, scope: !10437)
!10446 = !DILocation(line: 180, column: 22, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10437, file: !1817, line: 180, column: 6)
!10448 = !DILocation(line: 180, column: 6, scope: !10437)
!10449 = !DILocation(line: 180, column: 6, scope: !10447)
!10450 = !DILocation(line: 184, column: 16, scope: !10437)
!10451 = !DILocation(line: 186, column: 19, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10437, file: !1817, line: 186, column: 6)
!10453 = !DILocation(line: 186, column: 28, scope: !10452)
!10454 = !DILocation(line: 186, column: 33, scope: !10452)
!10455 = !DILocation(line: 186, column: 6, scope: !10437)
!10456 = !DILocation(line: 190, column: 43, scope: !10437)
!10457 = !DILocation(line: 190, column: 9, scope: !10437)
!10458 = !DILocation(line: 190, column: 2, scope: !10437)
!10459 = !DILocation(line: 191, column: 1, scope: !10437)
!10460 = distinct !DISubprogram(name: "device_is_ready", scope: !8398, file: !8398, line: 47, type: !10461, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10463)
!10461 = !DISubroutineType(types: !10462)
!10462 = !{!334, !1747}
!10463 = !{!10464}
!10464 = !DILocalVariable(name: "dev", arg: 1, scope: !10460, file: !8398, line: 47, type: !1747)
!10465 = !DILocation(line: 0, scope: !10460)
!10466 = !DILocation(line: 55, column: 2, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10460, file: !8398, line: 55, column: 2)
!10468 = !{i64 2149516189}
!10469 = !DILocation(line: 56, column: 9, scope: !10460)
!10470 = !DILocation(line: 56, column: 2, scope: !10460)
!10471 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !321, file: !321, line: 730, type: !10461, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1735, retainedNodes: !10472)
!10472 = !{!10473}
!10473 = !DILocalVariable(name: "dev", arg: 1, scope: !10471, file: !321, line: 730, type: !1747)
!10474 = !DILocation(line: 0, scope: !10471)
!10475 = !DILocation(line: 732, column: 9, scope: !10471)
!10476 = !DILocation(line: 732, column: 2, scope: !10471)
!10477 = distinct !DISubprogram(name: "SystemInit", scope: !1869, file: !1869, line: 167, type: !3169, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !2100)
!10478 = !DILocation(line: 182, column: 1, scope: !10477)
!10479 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1869, file: !1869, line: 220, type: !3169, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1825, retainedNodes: !10480)
!10480 = !{!10481, !10482, !10483, !10484, !10485}
!10481 = !DILocalVariable(name: "tmp", scope: !10479, file: !1869, line: 222, type: !110)
!10482 = !DILocalVariable(name: "pllvco", scope: !10479, file: !1869, line: 222, type: !110)
!10483 = !DILocalVariable(name: "pllp", scope: !10479, file: !1869, line: 222, type: !110)
!10484 = !DILocalVariable(name: "pllsource", scope: !10479, file: !1869, line: 222, type: !110)
!10485 = !DILocalVariable(name: "pllm", scope: !10479, file: !1869, line: 222, type: !110)
!10486 = !DILocation(line: 0, scope: !10479)
!10487 = !DILocation(line: 225, column: 14, scope: !10479)
!10488 = !DILocation(line: 225, column: 19, scope: !10479)
!10489 = !DILocation(line: 227, column: 3, scope: !10479)
!10490 = !DILocation(line: 240, column: 25, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !10479, file: !1869, line: 228, column: 3)
!10492 = !DILocation(line: 241, column: 19, scope: !10491)
!10493 = !DILocation(line: 241, column: 27, scope: !10491)
!10494 = !DILocation(line: 0, scope: !10495)
!10495 = distinct !DILexicalBlock(scope: !10491, file: !1869, line: 243, column: 11)
!10496 = !DILocation(line: 254, column: 22, scope: !10491)
!10497 = !DILocation(line: 254, column: 62, scope: !10491)
!10498 = !DILocation(line: 255, column: 31, scope: !10491)
!10499 = !DILocation(line: 256, column: 7, scope: !10491)
!10500 = !DILocation(line: 0, scope: !10491)
!10501 = !DILocation(line: 263, column: 30, scope: !10479)
!10502 = !DILocation(line: 263, column: 52, scope: !10479)
!10503 = !DILocation(line: 263, column: 9, scope: !10479)
!10504 = !DILocation(line: 265, column: 19, scope: !10479)
!10505 = !DILocation(line: 266, column: 1, scope: !10479)
!10506 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !10507, file: !10507, line: 87, type: !10508, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !10547)
!10507 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10508 = !DISubroutineType(types: !10509)
!10509 = !{!10510, !10511}
!10510 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3003, line: 44, baseType: !3002)
!10511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10512, size: 32)
!10512 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !10513, line: 172, baseType: !10514)
!10513 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10513, line: 121, size: 736, elements: !10515)
!10515 = !{!10516, !10517, !10526, !10534, !10535, !10536, !10537, !10538, !10539, !10540, !10541, !10542, !10543, !10544, !10545, !10546}
!10516 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !10514, file: !10513, line: 123, baseType: !110, size: 32)
!10517 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !10514, file: !10513, line: 126, baseType: !10518, size: 160, offset: 32)
!10518 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !10513, line: 97, baseType: !10519)
!10519 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10513, line: 79, size: 160, elements: !10520)
!10520 = !{!10521, !10522, !10523, !10524, !10525}
!10521 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !10519, file: !10513, line: 81, baseType: !110, size: 32)
!10522 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !10519, file: !10513, line: 84, baseType: !110, size: 32, offset: 32)
!10523 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !10519, file: !10513, line: 87, baseType: !110, size: 32, offset: 64)
!10524 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !10519, file: !10513, line: 90, baseType: !110, size: 32, offset: 96)
!10525 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !10519, file: !10513, line: 94, baseType: !110, size: 32, offset: 128)
!10526 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !10514, file: !10513, line: 129, baseType: !10527, size: 128, offset: 192)
!10527 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !10513, line: 116, baseType: !10528)
!10528 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10513, line: 102, size: 128, elements: !10529)
!10529 = !{!10530, !10531, !10532, !10533}
!10530 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !10528, file: !10513, line: 104, baseType: !110, size: 32)
!10531 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !10528, file: !10513, line: 107, baseType: !110, size: 32, offset: 32)
!10532 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !10528, file: !10513, line: 110, baseType: !110, size: 32, offset: 64)
!10533 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !10528, file: !10513, line: 113, baseType: !110, size: 32, offset: 96)
!10534 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !10514, file: !10513, line: 132, baseType: !110, size: 32, offset: 320)
!10535 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !10514, file: !10513, line: 136, baseType: !110, size: 32, offset: 352)
!10536 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !10514, file: !10513, line: 140, baseType: !110, size: 32, offset: 384)
!10537 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !10514, file: !10513, line: 143, baseType: !110, size: 32, offset: 416)
!10538 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !10514, file: !10513, line: 146, baseType: !110, size: 32, offset: 448)
!10539 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !10514, file: !10513, line: 149, baseType: !110, size: 32, offset: 480)
!10540 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !10514, file: !10513, line: 152, baseType: !110, size: 32, offset: 512)
!10541 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !10514, file: !10513, line: 155, baseType: !110, size: 32, offset: 544)
!10542 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !10514, file: !10513, line: 158, baseType: !110, size: 32, offset: 576)
!10543 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !10514, file: !10513, line: 161, baseType: !110, size: 32, offset: 608)
!10544 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !10514, file: !10513, line: 164, baseType: !110, size: 32, offset: 640)
!10545 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !10514, file: !10513, line: 167, baseType: !110, size: 32, offset: 672)
!10546 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !10514, file: !10513, line: 170, baseType: !167, size: 8, offset: 704)
!10547 = !{!10548, !10549, !10550, !10551, !10552, !10553, !10554, !10555, !10556, !10557, !10558}
!10548 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !10506, file: !10507, line: 87, type: !10511)
!10549 = !DILocalVariable(name: "tickstart", scope: !10506, file: !10507, line: 89, type: !110)
!10550 = !DILocalVariable(name: "tmpreg1", scope: !10506, file: !10507, line: 90, type: !110)
!10551 = !DILocalVariable(name: "plli2sp", scope: !10506, file: !10507, line: 91, type: !110)
!10552 = !DILocalVariable(name: "plli2sq", scope: !10506, file: !10507, line: 92, type: !110)
!10553 = !DILocalVariable(name: "plli2sr", scope: !10506, file: !10507, line: 93, type: !110)
!10554 = !DILocalVariable(name: "pllsaip", scope: !10506, file: !10507, line: 94, type: !110)
!10555 = !DILocalVariable(name: "pllsaiq", scope: !10506, file: !10507, line: 95, type: !110)
!10556 = !DILocalVariable(name: "plli2sused", scope: !10506, file: !10507, line: 96, type: !110)
!10557 = !DILocalVariable(name: "pllsaiused", scope: !10506, file: !10507, line: 97, type: !110)
!10558 = !DILocalVariable(name: "tmpreg", scope: !10559, file: !10507, line: 184, type: !301)
!10559 = distinct !DILexicalBlock(scope: !10560, file: !10507, line: 184, column: 5)
!10560 = distinct !DILexicalBlock(scope: !10561, file: !10507, line: 179, column: 3)
!10561 = distinct !DILexicalBlock(scope: !10506, file: !10507, line: 178, column: 6)
!10562 = !DILocation(line: 0, scope: !10506)
!10563 = !DILocation(line: 103, column: 23, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10506, file: !10507, line: 103, column: 6)
!10565 = !DILocation(line: 103, column: 45, scope: !10564)
!10566 = !DILocation(line: 103, column: 71, scope: !10564)
!10567 = !DILocation(line: 103, column: 6, scope: !10506)
!10568 = !DILocation(line: 109, column: 5, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10564, file: !10507, line: 104, column: 3)
!10570 = !DILocation(line: 111, column: 23, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10569, file: !10507, line: 111, column: 8)
!10572 = !DILocation(line: 111, column: 45, scope: !10571)
!10573 = !DILocation(line: 111, column: 8, scope: !10569)
!10574 = !DILocation(line: 119, column: 23, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10506, file: !10507, line: 119, column: 6)
!10576 = !DILocation(line: 119, column: 45, scope: !10575)
!10577 = !DILocation(line: 119, column: 71, scope: !10575)
!10578 = !DILocation(line: 119, column: 6, scope: !10506)
!10579 = !DILocation(line: 125, column: 5, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10575, file: !10507, line: 120, column: 3)
!10581 = !DILocation(line: 127, column: 23, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10580, file: !10507, line: 127, column: 8)
!10583 = !DILocation(line: 127, column: 45, scope: !10582)
!10584 = !DILocation(line: 127, column: 8, scope: !10580)
!10585 = !DILocation(line: 135, column: 23, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10506, file: !10507, line: 135, column: 6)
!10587 = !DILocation(line: 135, column: 45, scope: !10586)
!10588 = !DILocation(line: 135, column: 67, scope: !10586)
!10589 = !DILocation(line: 135, column: 6, scope: !10506)
!10590 = !DILocation(line: 141, column: 5, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10586, file: !10507, line: 136, column: 3)
!10592 = !DILocation(line: 143, column: 23, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10591, file: !10507, line: 143, column: 8)
!10594 = !DILocation(line: 143, column: 42, scope: !10593)
!10595 = !DILocation(line: 143, column: 8, scope: !10591)
!10596 = !DILocation(line: 148, column: 42, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10591, file: !10507, line: 148, column: 8)
!10598 = !DILocation(line: 148, column: 8, scope: !10591)
!10599 = !DILocation(line: 156, column: 23, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !10506, file: !10507, line: 156, column: 6)
!10601 = !DILocation(line: 156, column: 45, scope: !10600)
!10602 = !DILocation(line: 156, column: 67, scope: !10600)
!10603 = !DILocation(line: 156, column: 6, scope: !10506)
!10604 = !DILocation(line: 162, column: 5, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10600, file: !10507, line: 157, column: 3)
!10606 = !DILocation(line: 165, column: 23, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10605, file: !10507, line: 165, column: 8)
!10608 = !DILocation(line: 165, column: 42, scope: !10607)
!10609 = !DILocation(line: 165, column: 8, scope: !10605)
!10610 = !DILocation(line: 170, column: 42, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10605, file: !10507, line: 170, column: 8)
!10612 = !DILocation(line: 170, column: 8, scope: !10605)
!10613 = !DILocation(line: 178, column: 23, scope: !10561)
!10614 = !DILocation(line: 178, column: 45, scope: !10561)
!10615 = !DILocation(line: 178, column: 66, scope: !10561)
!10616 = !DILocation(line: 178, column: 6, scope: !10506)
!10617 = !DILocation(line: 184, column: 5, scope: !10559)
!10618 = !DILocation(line: 184, column: 5, scope: !10560)
!10619 = !DILocation(line: 187, column: 13, scope: !10560)
!10620 = !DILocation(line: 190, column: 17, scope: !10560)
!10621 = !DILocation(line: 192, column: 5, scope: !10560)
!10622 = !DILocation(line: 192, column: 17, scope: !10560)
!10623 = !DILocation(line: 192, column: 20, scope: !10560)
!10624 = !DILocation(line: 192, column: 34, scope: !10560)
!10625 = !DILocation(line: 194, column: 11, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10627, file: !10507, line: 194, column: 10)
!10627 = distinct !DILexicalBlock(scope: !10560, file: !10507, line: 193, column: 5)
!10628 = !DILocation(line: 194, column: 25, scope: !10626)
!10629 = !DILocation(line: 194, column: 39, scope: !10626)
!10630 = !DILocation(line: 194, column: 10, scope: !10627)
!10631 = distinct !{!10631, !10621, !10632}
!10632 = !DILocation(line: 198, column: 5, scope: !10560)
!10633 = !DILocation(line: 200, column: 21, scope: !10560)
!10634 = !DILocation(line: 200, column: 26, scope: !10560)
!10635 = !DILocation(line: 201, column: 17, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10560, file: !10507, line: 201, column: 8)
!10637 = !DILocation(line: 201, column: 33, scope: !10636)
!10638 = !DILocation(line: 201, column: 66, scope: !10636)
!10639 = !DILocation(line: 201, column: 84, scope: !10636)
!10640 = !DILocation(line: 201, column: 47, scope: !10636)
!10641 = !DILocation(line: 201, column: 8, scope: !10560)
!10642 = !DILocation(line: 204, column: 23, scope: !10643)
!10643 = distinct !DILexicalBlock(scope: !10636, file: !10507, line: 202, column: 5)
!10644 = !DILocation(line: 204, column: 28, scope: !10643)
!10645 = !DILocation(line: 206, column: 7, scope: !10643)
!10646 = !DILocation(line: 207, column: 7, scope: !10643)
!10647 = !DILocation(line: 209, column: 17, scope: !10643)
!10648 = !DILocation(line: 212, column: 10, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10643, file: !10507, line: 212, column: 10)
!10650 = !DILocation(line: 212, column: 10, scope: !10643)
!10651 = !DILocation(line: 215, column: 21, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10649, file: !10507, line: 213, column: 7)
!10653 = !DILocation(line: 218, column: 9, scope: !10652)
!10654 = !DILocation(line: 218, column: 15, scope: !10652)
!10655 = !DILocation(line: 218, column: 51, scope: !10652)
!10656 = !DILocation(line: 220, column: 15, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10658, file: !10507, line: 220, column: 14)
!10658 = distinct !DILexicalBlock(scope: !10652, file: !10507, line: 219, column: 9)
!10659 = !DILocation(line: 220, column: 29, scope: !10657)
!10660 = !DILocation(line: 220, column: 43, scope: !10657)
!10661 = !DILocation(line: 220, column: 14, scope: !10658)
!10662 = distinct !{!10662, !10653, !10663}
!10663 = !DILocation(line: 224, column: 9, scope: !10652)
!10664 = !DILocation(line: 227, column: 5, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10560, file: !10507, line: 227, column: 5)
!10666 = !DILocation(line: 232, column: 23, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10506, file: !10507, line: 232, column: 6)
!10668 = !DILocation(line: 228, column: 3, scope: !10560)
!10669 = !DILocation(line: 232, column: 45, scope: !10667)
!10670 = !DILocation(line: 232, column: 66, scope: !10667)
!10671 = !DILocation(line: 232, column: 6, scope: !10506)
!10672 = !DILocation(line: 235, column: 5, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10667, file: !10507, line: 233, column: 3)
!10674 = !DILocation(line: 240, column: 23, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !10506, file: !10507, line: 240, column: 6)
!10676 = !DILocation(line: 236, column: 3, scope: !10673)
!10677 = !DILocation(line: 240, column: 45, scope: !10675)
!10678 = !DILocation(line: 240, column: 70, scope: !10675)
!10679 = !DILocation(line: 240, column: 6, scope: !10506)
!10680 = !DILocation(line: 246, column: 5, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10675, file: !10507, line: 241, column: 3)
!10682 = !DILocation(line: 251, column: 23, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10506, file: !10507, line: 251, column: 6)
!10684 = !DILocation(line: 247, column: 3, scope: !10681)
!10685 = !DILocation(line: 251, column: 45, scope: !10683)
!10686 = !DILocation(line: 251, column: 66, scope: !10683)
!10687 = !DILocation(line: 251, column: 6, scope: !10506)
!10688 = !DILocation(line: 257, column: 5, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10683, file: !10507, line: 252, column: 3)
!10690 = !DILocation(line: 262, column: 23, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10506, file: !10507, line: 262, column: 6)
!10692 = !DILocation(line: 258, column: 3, scope: !10689)
!10693 = !DILocation(line: 262, column: 45, scope: !10691)
!10694 = !DILocation(line: 262, column: 68, scope: !10691)
!10695 = !DILocation(line: 262, column: 6, scope: !10506)
!10696 = !DILocation(line: 268, column: 5, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10691, file: !10507, line: 263, column: 3)
!10698 = !DILocation(line: 271, column: 23, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10697, file: !10507, line: 271, column: 8)
!10700 = !DILocation(line: 271, column: 43, scope: !10699)
!10701 = !DILocation(line: 271, column: 8, scope: !10697)
!10702 = !DILocation(line: 279, column: 23, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10506, file: !10507, line: 279, column: 6)
!10704 = !DILocation(line: 279, column: 45, scope: !10703)
!10705 = !DILocation(line: 279, column: 67, scope: !10703)
!10706 = !DILocation(line: 279, column: 6, scope: !10506)
!10707 = !DILocation(line: 285, column: 5, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10703, file: !10507, line: 280, column: 3)
!10709 = !DILocation(line: 290, column: 23, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10506, file: !10507, line: 290, column: 6)
!10711 = !DILocation(line: 286, column: 3, scope: !10708)
!10712 = !DILocation(line: 290, column: 45, scope: !10710)
!10713 = !DILocation(line: 290, column: 70, scope: !10710)
!10714 = !DILocation(line: 290, column: 6, scope: !10506)
!10715 = !DILocation(line: 296, column: 5, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10710, file: !10507, line: 291, column: 3)
!10717 = !DILocation(line: 298, column: 23, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10716, file: !10507, line: 298, column: 8)
!10719 = !DILocation(line: 298, column: 43, scope: !10718)
!10720 = !DILocation(line: 298, column: 8, scope: !10716)
!10721 = !DILocation(line: 308, column: 44, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10506, file: !10507, line: 308, column: 6)
!10723 = !DILocation(line: 308, column: 18, scope: !10722)
!10724 = !DILocation(line: 308, column: 25, scope: !10722)
!10725 = !DILocation(line: 308, column: 65, scope: !10722)
!10726 = !DILocation(line: 308, column: 6, scope: !10506)
!10727 = !DILocation(line: 311, column: 5, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10722, file: !10507, line: 309, column: 3)
!10729 = !DILocation(line: 313, column: 17, scope: !10728)
!10730 = !DILocation(line: 315, column: 5, scope: !10728)
!10731 = !DILocation(line: 315, column: 11, scope: !10728)
!10732 = !DILocation(line: 317, column: 11, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10734, file: !10507, line: 317, column: 10)
!10734 = distinct !DILexicalBlock(scope: !10728, file: !10507, line: 316, column: 5)
!10735 = !DILocation(line: 317, column: 25, scope: !10733)
!10736 = !DILocation(line: 317, column: 39, scope: !10733)
!10737 = !DILocation(line: 317, column: 10, scope: !10734)
!10738 = distinct !{!10738, !10730, !10739}
!10739 = !DILocation(line: 322, column: 5, scope: !10728)
!10740 = !DILocation(line: 329, column: 27, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10728, file: !10507, line: 329, column: 8)
!10742 = !DILocation(line: 329, column: 49, scope: !10741)
!10743 = !DILocation(line: 329, column: 75, scope: !10741)
!10744 = !DILocation(line: 329, column: 102, scope: !10741)
!10745 = !DILocation(line: 329, column: 121, scope: !10741)
!10746 = !DILocation(line: 329, column: 143, scope: !10741)
!10747 = !DILocation(line: 329, column: 176, scope: !10741)
!10748 = !DILocation(line: 330, column: 49, scope: !10741)
!10749 = !DILocation(line: 330, column: 75, scope: !10741)
!10750 = !DILocation(line: 330, column: 102, scope: !10741)
!10751 = !DILocation(line: 330, column: 121, scope: !10741)
!10752 = !DILocation(line: 330, column: 143, scope: !10741)
!10753 = !DILocation(line: 329, column: 8, scope: !10728)
!10754 = !DILocation(line: 336, column: 26, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10741, file: !10507, line: 331, column: 5)
!10756 = !DILocation(line: 336, column: 100, scope: !10755)
!10757 = !DILocation(line: 337, column: 24, scope: !10755)
!10758 = !DILocation(line: 337, column: 61, scope: !10755)
!10759 = !DILocation(line: 341, column: 7, scope: !10755)
!10760 = !DILocation(line: 345, column: 27, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10728, file: !10507, line: 345, column: 8)
!10762 = !DILocation(line: 342, column: 5, scope: !10755)
!10763 = !DILocation(line: 345, column: 49, scope: !10761)
!10764 = !DILocation(line: 345, column: 71, scope: !10761)
!10765 = !DILocation(line: 345, column: 94, scope: !10761)
!10766 = !DILocation(line: 345, column: 113, scope: !10761)
!10767 = !DILocation(line: 345, column: 132, scope: !10761)
!10768 = !DILocation(line: 345, column: 162, scope: !10761)
!10769 = !DILocation(line: 346, column: 49, scope: !10761)
!10770 = !DILocation(line: 346, column: 71, scope: !10761)
!10771 = !DILocation(line: 346, column: 94, scope: !10761)
!10772 = !DILocation(line: 346, column: 113, scope: !10761)
!10773 = !DILocation(line: 346, column: 132, scope: !10761)
!10774 = !DILocation(line: 345, column: 8, scope: !10728)
!10775 = !DILocation(line: 354, column: 26, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10761, file: !10507, line: 347, column: 5)
!10777 = !DILocation(line: 354, column: 100, scope: !10776)
!10778 = !DILocation(line: 355, column: 24, scope: !10776)
!10779 = !DILocation(line: 355, column: 61, scope: !10776)
!10780 = !DILocation(line: 360, column: 7, scope: !10776)
!10781 = !DILocation(line: 363, column: 7, scope: !10776)
!10782 = !DILocation(line: 367, column: 26, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10728, file: !10507, line: 367, column: 8)
!10784 = !DILocation(line: 364, column: 5, scope: !10776)
!10785 = !DILocation(line: 367, column: 48, scope: !10783)
!10786 = !DILocation(line: 367, column: 73, scope: !10783)
!10787 = !DILocation(line: 367, column: 99, scope: !10783)
!10788 = !DILocation(line: 367, column: 118, scope: !10783)
!10789 = !DILocation(line: 367, column: 138, scope: !10783)
!10790 = !DILocation(line: 367, column: 8, scope: !10728)
!10791 = !DILocation(line: 372, column: 26, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10783, file: !10507, line: 368, column: 5)
!10793 = !DILocation(line: 373, column: 24, scope: !10792)
!10794 = !DILocation(line: 373, column: 61, scope: !10792)
!10795 = !DILocation(line: 377, column: 7, scope: !10792)
!10796 = !DILocation(line: 381, column: 24, scope: !10797)
!10797 = distinct !DILexicalBlock(scope: !10728, file: !10507, line: 381, column: 8)
!10798 = !DILocation(line: 378, column: 5, scope: !10792)
!10799 = !DILocation(line: 381, column: 45, scope: !10797)
!10800 = !DILocation(line: 381, column: 69, scope: !10797)
!10801 = !DILocation(line: 381, column: 8, scope: !10728)
!10802 = !DILocation(line: 390, column: 7, scope: !10803)
!10803 = distinct !DILexicalBlock(scope: !10797, file: !10507, line: 382, column: 5)
!10804 = !DILocation(line: 391, column: 5, scope: !10803)
!10805 = !DILocation(line: 394, column: 5, scope: !10728)
!10806 = !DILocation(line: 396, column: 17, scope: !10728)
!10807 = !DILocation(line: 398, column: 5, scope: !10728)
!10808 = !DILocation(line: 398, column: 11, scope: !10728)
!10809 = !DILocation(line: 398, column: 51, scope: !10728)
!10810 = !DILocation(line: 400, column: 11, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10812, file: !10507, line: 400, column: 10)
!10812 = distinct !DILexicalBlock(scope: !10728, file: !10507, line: 399, column: 5)
!10813 = !DILocation(line: 400, column: 25, scope: !10811)
!10814 = !DILocation(line: 400, column: 39, scope: !10811)
!10815 = !DILocation(line: 400, column: 10, scope: !10812)
!10816 = distinct !{!10816, !10807, !10817}
!10817 = !DILocation(line: 405, column: 5, scope: !10728)
!10818 = !DILocation(line: 411, column: 17, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10506, file: !10507, line: 411, column: 6)
!10820 = !DILocation(line: 411, column: 6, scope: !10506)
!10821 = !DILocation(line: 414, column: 5, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10819, file: !10507, line: 412, column: 3)
!10823 = !DILocation(line: 416, column: 17, scope: !10822)
!10824 = !DILocation(line: 418, column: 5, scope: !10822)
!10825 = !DILocation(line: 418, column: 11, scope: !10822)
!10826 = !DILocation(line: 420, column: 11, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10828, file: !10507, line: 420, column: 10)
!10828 = distinct !DILexicalBlock(scope: !10822, file: !10507, line: 419, column: 5)
!10829 = !DILocation(line: 420, column: 25, scope: !10827)
!10830 = !DILocation(line: 420, column: 39, scope: !10827)
!10831 = !DILocation(line: 420, column: 10, scope: !10828)
!10832 = distinct !{!10832, !10824, !10833}
!10833 = !DILocation(line: 425, column: 5, scope: !10822)
!10834 = !DILocation(line: 432, column: 27, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10822, file: !10507, line: 432, column: 8)
!10836 = !DILocation(line: 432, column: 49, scope: !10835)
!10837 = !DILocation(line: 432, column: 71, scope: !10835)
!10838 = !DILocation(line: 432, column: 94, scope: !10835)
!10839 = !DILocation(line: 432, column: 113, scope: !10835)
!10840 = !DILocation(line: 432, column: 132, scope: !10835)
!10841 = !DILocation(line: 432, column: 162, scope: !10835)
!10842 = !DILocation(line: 433, column: 49, scope: !10835)
!10843 = !DILocation(line: 433, column: 71, scope: !10835)
!10844 = !DILocation(line: 433, column: 94, scope: !10835)
!10845 = !DILocation(line: 433, column: 113, scope: !10835)
!10846 = !DILocation(line: 433, column: 132, scope: !10835)
!10847 = !DILocation(line: 432, column: 8, scope: !10822)
!10848 = !DILocation(line: 441, column: 26, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10835, file: !10507, line: 434, column: 5)
!10850 = !DILocation(line: 441, column: 100, scope: !10849)
!10851 = !DILocation(line: 445, column: 7, scope: !10849)
!10852 = !DILocation(line: 448, column: 7, scope: !10849)
!10853 = !DILocation(line: 453, column: 26, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10822, file: !10507, line: 453, column: 8)
!10855 = !DILocation(line: 449, column: 5, scope: !10849)
!10856 = !DILocation(line: 453, column: 48, scope: !10854)
!10857 = !DILocation(line: 453, column: 71, scope: !10854)
!10858 = !DILocation(line: 453, column: 95, scope: !10854)
!10859 = !DILocation(line: 453, column: 114, scope: !10854)
!10860 = !DILocation(line: 453, column: 134, scope: !10854)
!10861 = !DILocation(line: 453, column: 8, scope: !10822)
!10862 = !DILocation(line: 458, column: 24, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10854, file: !10507, line: 454, column: 5)
!10864 = !DILocation(line: 458, column: 61, scope: !10863)
!10865 = !DILocation(line: 462, column: 7, scope: !10863)
!10866 = !DILocation(line: 463, column: 5, scope: !10863)
!10867 = !DILocation(line: 466, column: 5, scope: !10822)
!10868 = !DILocation(line: 468, column: 17, scope: !10822)
!10869 = !DILocation(line: 470, column: 5, scope: !10822)
!10870 = !DILocation(line: 470, column: 11, scope: !10822)
!10871 = !DILocation(line: 470, column: 39, scope: !10822)
!10872 = !DILocation(line: 472, column: 11, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10874, file: !10507, line: 472, column: 10)
!10874 = distinct !DILexicalBlock(scope: !10822, file: !10507, line: 471, column: 5)
!10875 = !DILocation(line: 472, column: 25, scope: !10873)
!10876 = !DILocation(line: 472, column: 39, scope: !10873)
!10877 = !DILocation(line: 472, column: 10, scope: !10874)
!10878 = distinct !{!10878, !10869, !10879}
!10879 = !DILocation(line: 477, column: 5, scope: !10822)
!10880 = !DILocation(line: 480, column: 1, scope: !10506)
!10881 = !DISubprogram(name: "HAL_GetTick", scope: !10882, file: !10882, line: 234, type: !3451, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2100)
!10882 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10883 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !10507, file: !10507, line: 489, type: !10884, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !10886)
!10884 = !DISubroutineType(types: !10885)
!10885 = !{null, !10511}
!10886 = !{!10887, !10888}
!10887 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !10883, file: !10507, line: 489, type: !10511)
!10888 = !DILocalVariable(name: "tempreg", scope: !10883, file: !10507, line: 491, type: !110)
!10889 = !DILocation(line: 0, scope: !10883)
!10890 = !DILocation(line: 494, column: 18, scope: !10883)
!10891 = !DILocation(line: 494, column: 39, scope: !10883)
!10892 = !DILocation(line: 502, column: 52, scope: !10883)
!10893 = !DILocation(line: 502, column: 63, scope: !10883)
!10894 = !DILocation(line: 502, column: 25, scope: !10883)
!10895 = !DILocation(line: 502, column: 33, scope: !10883)
!10896 = !DILocation(line: 503, column: 52, scope: !10883)
!10897 = !DILocation(line: 503, column: 89, scope: !10883)
!10898 = !DILocation(line: 503, column: 25, scope: !10883)
!10899 = !DILocation(line: 503, column: 33, scope: !10883)
!10900 = !DILocation(line: 504, column: 54, scope: !10883)
!10901 = !DILocation(line: 504, column: 128, scope: !10883)
!10902 = !DILocation(line: 504, column: 25, scope: !10883)
!10903 = !DILocation(line: 504, column: 33, scope: !10883)
!10904 = !DILocation(line: 505, column: 52, scope: !10883)
!10905 = !DILocation(line: 505, column: 89, scope: !10883)
!10906 = !DILocation(line: 505, column: 25, scope: !10883)
!10907 = !DILocation(line: 505, column: 33, scope: !10883)
!10908 = !DILocation(line: 506, column: 52, scope: !10883)
!10909 = !DILocation(line: 506, column: 89, scope: !10883)
!10910 = !DILocation(line: 506, column: 25, scope: !10883)
!10911 = !DILocation(line: 506, column: 33, scope: !10883)
!10912 = !DILocation(line: 508, column: 52, scope: !10883)
!10913 = !DILocation(line: 508, column: 63, scope: !10883)
!10914 = !DILocation(line: 508, column: 25, scope: !10883)
!10915 = !DILocation(line: 508, column: 33, scope: !10883)
!10916 = !DILocation(line: 509, column: 52, scope: !10883)
!10917 = !DILocation(line: 509, column: 89, scope: !10883)
!10918 = !DILocation(line: 509, column: 25, scope: !10883)
!10919 = !DILocation(line: 509, column: 33, scope: !10883)
!10920 = !DILocation(line: 510, column: 54, scope: !10883)
!10921 = !DILocation(line: 510, column: 128, scope: !10883)
!10922 = !DILocation(line: 510, column: 25, scope: !10883)
!10923 = !DILocation(line: 510, column: 33, scope: !10883)
!10924 = !DILocation(line: 511, column: 52, scope: !10883)
!10925 = !DILocation(line: 511, column: 89, scope: !10883)
!10926 = !DILocation(line: 511, column: 25, scope: !10883)
!10927 = !DILocation(line: 511, column: 33, scope: !10883)
!10928 = !DILocation(line: 513, column: 48, scope: !10883)
!10929 = !DILocation(line: 513, column: 56, scope: !10883)
!10930 = !DILocation(line: 513, column: 18, scope: !10883)
!10931 = !DILocation(line: 513, column: 29, scope: !10883)
!10932 = !DILocation(line: 514, column: 48, scope: !10883)
!10933 = !DILocation(line: 514, column: 82, scope: !10883)
!10934 = !DILocation(line: 514, column: 18, scope: !10883)
!10935 = !DILocation(line: 514, column: 29, scope: !10883)
!10936 = !DILocation(line: 517, column: 39, scope: !10883)
!10937 = !DILocation(line: 517, column: 18, scope: !10883)
!10938 = !DILocation(line: 517, column: 37, scope: !10883)
!10939 = !DILocation(line: 520, column: 39, scope: !10883)
!10940 = !DILocation(line: 520, column: 18, scope: !10883)
!10941 = !DILocation(line: 520, column: 37, scope: !10883)
!10942 = !DILocation(line: 523, column: 42, scope: !10883)
!10943 = !DILocation(line: 523, column: 18, scope: !10883)
!10944 = !DILocation(line: 523, column: 40, scope: !10883)
!10945 = !DILocation(line: 526, column: 42, scope: !10883)
!10946 = !DILocation(line: 526, column: 18, scope: !10883)
!10947 = !DILocation(line: 526, column: 40, scope: !10883)
!10948 = !DILocation(line: 529, column: 19, scope: !10883)
!10949 = !DILocation(line: 529, column: 24, scope: !10883)
!10950 = !DILocation(line: 530, column: 67, scope: !10883)
!10951 = !DILocation(line: 530, column: 72, scope: !10883)
!10952 = !DILocation(line: 530, column: 59, scope: !10883)
!10953 = !DILocation(line: 530, column: 18, scope: !10883)
!10954 = !DILocation(line: 530, column: 36, scope: !10883)
!10955 = !DILocation(line: 533, column: 38, scope: !10883)
!10956 = !DILocation(line: 533, column: 18, scope: !10883)
!10957 = !DILocation(line: 533, column: 36, scope: !10883)
!10958 = !DILocation(line: 536, column: 42, scope: !10883)
!10959 = !DILocation(line: 536, column: 18, scope: !10883)
!10960 = !DILocation(line: 536, column: 40, scope: !10883)
!10961 = !DILocation(line: 539, column: 40, scope: !10883)
!10962 = !DILocation(line: 539, column: 18, scope: !10883)
!10963 = !DILocation(line: 539, column: 38, scope: !10883)
!10964 = !DILocation(line: 542, column: 39, scope: !10883)
!10965 = !DILocation(line: 542, column: 18, scope: !10883)
!10966 = !DILocation(line: 542, column: 37, scope: !10883)
!10967 = !DILocation(line: 545, column: 40, scope: !10883)
!10968 = !DILocation(line: 545, column: 18, scope: !10883)
!10969 = !DILocation(line: 545, column: 38, scope: !10883)
!10970 = !DILocation(line: 548, column: 13, scope: !10971)
!10971 = distinct !DILexicalBlock(scope: !10883, file: !10507, line: 548, column: 7)
!10972 = !DILocation(line: 548, column: 7, scope: !10883)
!10973 = !DILocation(line: 550, column: 20, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10971, file: !10507, line: 549, column: 3)
!10975 = !DILocation(line: 550, column: 37, scope: !10974)
!10976 = !DILocation(line: 556, column: 1, scope: !10883)
!10977 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !10507, file: !10507, line: 569, type: !7305, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !10978)
!10978 = !{!10979, !10980, !10981, !10982, !10983, !10984, !10985}
!10979 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !10977, file: !10507, line: 569, type: !110)
!10980 = !DILocalVariable(name: "tmpreg1", scope: !10977, file: !10507, line: 571, type: !110)
!10981 = !DILocalVariable(name: "frequency", scope: !10977, file: !10507, line: 573, type: !110)
!10982 = !DILocalVariable(name: "vcoinput", scope: !10977, file: !10507, line: 575, type: !110)
!10983 = !DILocalVariable(name: "saiclocksource", scope: !10977, file: !10507, line: 577, type: !110)
!10984 = !DILocalVariable(name: "srcclk", scope: !10977, file: !10507, line: 578, type: !110)
!10985 = !DILocalVariable(name: "vcooutput", scope: !10977, file: !10507, line: 580, type: !110)
!10986 = !DILocation(line: 0, scope: !10977)
!10987 = !DILocation(line: 581, column: 3, scope: !10977)
!10988 = !DILocation(line: 586, column: 29, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10990, file: !10507, line: 585, column: 5)
!10990 = distinct !DILexicalBlock(scope: !10977, file: !10507, line: 582, column: 3)
!10991 = !DILocation(line: 588, column: 7, scope: !10989)
!10992 = !DILocation(line: 594, column: 20, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10994, file: !10507, line: 594, column: 14)
!10994 = distinct !DILexicalBlock(scope: !10995, file: !10507, line: 591, column: 9)
!10995 = distinct !DILexicalBlock(scope: !10989, file: !10507, line: 589, column: 7)
!10996 = !DILocation(line: 0, scope: !10993)
!10997 = !DILocation(line: 606, column: 27, scope: !10994)
!10998 = !DILocation(line: 606, column: 64, scope: !10994)
!10999 = !DILocation(line: 607, column: 42, scope: !10994)
!11000 = !DILocation(line: 607, column: 79, scope: !10994)
!11001 = !DILocation(line: 607, column: 33, scope: !10994)
!11002 = !DILocation(line: 607, column: 86, scope: !10994)
!11003 = !DILocation(line: 610, column: 29, scope: !10994)
!11004 = !DILocation(line: 610, column: 63, scope: !10994)
!11005 = !DILocation(line: 610, column: 70, scope: !10994)
!11006 = !DILocation(line: 611, column: 32, scope: !10994)
!11007 = !DILocation(line: 612, column: 11, scope: !10994)
!11008 = !DILocation(line: 619, column: 20, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11010, file: !10507, line: 619, column: 14)
!11010 = distinct !DILexicalBlock(scope: !10995, file: !10507, line: 616, column: 9)
!11011 = !DILocation(line: 0, scope: !11009)
!11012 = !DILocation(line: 632, column: 27, scope: !11010)
!11013 = !DILocation(line: 632, column: 64, scope: !11010)
!11014 = !DILocation(line: 633, column: 42, scope: !11010)
!11015 = !DILocation(line: 633, column: 79, scope: !11010)
!11016 = !DILocation(line: 633, column: 33, scope: !11010)
!11017 = !DILocation(line: 633, column: 86, scope: !11010)
!11018 = !DILocation(line: 636, column: 28, scope: !11010)
!11019 = !DILocation(line: 636, column: 36, scope: !11010)
!11020 = !DILocation(line: 636, column: 62, scope: !11010)
!11021 = !DILocation(line: 637, column: 32, scope: !11010)
!11022 = !DILocation(line: 638, column: 11, scope: !11010)
!11023 = !DILocation(line: 645, column: 20, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !11025, file: !10507, line: 645, column: 14)
!11025 = distinct !DILexicalBlock(scope: !10995, file: !10507, line: 642, column: 9)
!11026 = !DILocation(line: 0, scope: !11024)
!11027 = !DILocation(line: 658, column: 27, scope: !11025)
!11028 = !DILocation(line: 658, column: 55, scope: !11025)
!11029 = !DILocation(line: 659, column: 42, scope: !11025)
!11030 = !DILocation(line: 659, column: 70, scope: !11025)
!11031 = !DILocation(line: 659, column: 33, scope: !11025)
!11032 = !DILocation(line: 659, column: 77, scope: !11025)
!11033 = !DILocation(line: 660, column: 11, scope: !11025)
!11034 = !DILocation(line: 665, column: 11, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !10995, file: !10507, line: 663, column: 9)
!11036 = !DILocation(line: 669, column: 20, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !11038, file: !10507, line: 669, column: 14)
!11038 = distinct !DILexicalBlock(scope: !10995, file: !10507, line: 668, column: 9)
!11039 = !DILocation(line: 691, column: 16, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !10990, file: !10507, line: 689, column: 5)
!11041 = !DILocation(line: 692, column: 7, scope: !11040)
!11042 = !DILocation(line: 706, column: 20, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11044, file: !10507, line: 706, column: 14)
!11044 = distinct !DILexicalBlock(scope: !11045, file: !10507, line: 703, column: 9)
!11045 = distinct !DILexicalBlock(scope: !11040, file: !10507, line: 693, column: 7)
!11046 = !DILocation(line: 0, scope: !11043)
!11047 = !DILocation(line: 718, column: 53, scope: !11044)
!11048 = !DILocation(line: 718, column: 90, scope: !11044)
!11049 = !DILocation(line: 718, column: 43, scope: !11044)
!11050 = !DILocation(line: 720, column: 53, scope: !11044)
!11051 = !DILocation(line: 720, column: 90, scope: !11044)
!11052 = !DILocation(line: 720, column: 44, scope: !11044)
!11053 = !DILocation(line: 721, column: 11, scope: !11044)
!11054 = !DILocation(line: 728, column: 20, scope: !11055)
!11055 = distinct !DILexicalBlock(scope: !11056, file: !10507, line: 728, column: 14)
!11056 = distinct !DILexicalBlock(scope: !11045, file: !10507, line: 725, column: 9)
!11057 = !DILocation(line: 0, scope: !11055)
!11058 = !DILocation(line: 740, column: 53, scope: !11056)
!11059 = !DILocation(line: 740, column: 81, scope: !11056)
!11060 = !DILocation(line: 740, column: 43, scope: !11056)
!11061 = !DILocation(line: 742, column: 53, scope: !11056)
!11062 = !DILocation(line: 742, column: 81, scope: !11056)
!11063 = !DILocation(line: 742, column: 44, scope: !11056)
!11064 = !DILocation(line: 743, column: 11, scope: !11056)
!11065 = !DILocation(line: 748, column: 20, scope: !11066)
!11066 = distinct !DILexicalBlock(scope: !11067, file: !10507, line: 748, column: 14)
!11067 = distinct !DILexicalBlock(scope: !11045, file: !10507, line: 747, column: 9)
!11068 = !DILocation(line: 770, column: 16, scope: !11069)
!11069 = distinct !DILexicalBlock(scope: !10990, file: !10507, line: 768, column: 5)
!11070 = !DILocation(line: 771, column: 7, scope: !11069)
!11071 = !DILocation(line: 785, column: 20, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11073, file: !10507, line: 785, column: 14)
!11073 = distinct !DILexicalBlock(scope: !11074, file: !10507, line: 782, column: 9)
!11074 = distinct !DILexicalBlock(scope: !11069, file: !10507, line: 772, column: 7)
!11075 = !DILocation(line: 0, scope: !11072)
!11076 = !DILocation(line: 797, column: 53, scope: !11073)
!11077 = !DILocation(line: 797, column: 90, scope: !11073)
!11078 = !DILocation(line: 797, column: 43, scope: !11073)
!11079 = !DILocation(line: 799, column: 53, scope: !11073)
!11080 = !DILocation(line: 799, column: 90, scope: !11073)
!11081 = !DILocation(line: 799, column: 44, scope: !11073)
!11082 = !DILocation(line: 800, column: 11, scope: !11073)
!11083 = !DILocation(line: 807, column: 20, scope: !11084)
!11084 = distinct !DILexicalBlock(scope: !11085, file: !10507, line: 807, column: 14)
!11085 = distinct !DILexicalBlock(scope: !11074, file: !10507, line: 804, column: 9)
!11086 = !DILocation(line: 0, scope: !11084)
!11087 = !DILocation(line: 819, column: 53, scope: !11085)
!11088 = !DILocation(line: 819, column: 81, scope: !11085)
!11089 = !DILocation(line: 819, column: 43, scope: !11085)
!11090 = !DILocation(line: 821, column: 53, scope: !11085)
!11091 = !DILocation(line: 821, column: 81, scope: !11085)
!11092 = !DILocation(line: 821, column: 44, scope: !11085)
!11093 = !DILocation(line: 822, column: 11, scope: !11085)
!11094 = !DILocation(line: 827, column: 20, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11096, file: !10507, line: 827, column: 14)
!11096 = distinct !DILexicalBlock(scope: !11074, file: !10507, line: 826, column: 9)
!11097 = !DILocation(line: 847, column: 3, scope: !10977)
!11098 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !10507, file: !10507, line: 2766, type: !11099, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11101)
!11099 = !DISubroutineType(types: !11100)
!11100 = !{null, !167}
!11101 = !{!11102}
!11102 = !DILocalVariable(name: "Mode", arg: 1, scope: !11098, file: !10507, line: 2766, type: !167)
!11103 = !DILocation(line: 0, scope: !11098)
!11104 = !DILocation(line: 2770, column: 11, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11098, file: !10507, line: 2770, column: 6)
!11106 = !DILocation(line: 0, scope: !11105)
!11107 = !DILocation(line: 2770, column: 6, scope: !11098)
!11108 = !DILocation(line: 2778, column: 1, scope: !11098)
!11109 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !10507, file: !10507, line: 2803, type: !11110, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11113)
!11110 = !DISubroutineType(types: !11111)
!11111 = !{!10510, !11112}
!11112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10518, size: 32)
!11113 = !{!11114, !11115}
!11114 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !11109, file: !10507, line: 2803, type: !11112)
!11115 = !DILocalVariable(name: "tickstart", scope: !11109, file: !10507, line: 2805, type: !110)
!11116 = !DILocation(line: 0, scope: !11109)
!11117 = !DILocation(line: 2821, column: 3, scope: !11109)
!11118 = !DILocation(line: 2824, column: 15, scope: !11109)
!11119 = !DILocation(line: 2825, column: 3, scope: !11109)
!11120 = !DILocation(line: 2825, column: 9, scope: !11109)
!11121 = !DILocation(line: 2827, column: 9, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11123, file: !10507, line: 2827, column: 8)
!11123 = distinct !DILexicalBlock(scope: !11109, file: !10507, line: 2826, column: 3)
!11124 = !DILocation(line: 2827, column: 23, scope: !11122)
!11125 = !DILocation(line: 2827, column: 37, scope: !11122)
!11126 = !DILocation(line: 2827, column: 8, scope: !11123)
!11127 = distinct !{!11127, !11119, !11128}
!11128 = !DILocation(line: 2832, column: 3, scope: !11109)
!11129 = !DILocation(line: 2840, column: 3, scope: !11109)
!11130 = !DILocation(line: 2866, column: 3, scope: !11109)
!11131 = !DILocation(line: 2869, column: 15, scope: !11109)
!11132 = !DILocation(line: 2870, column: 3, scope: !11109)
!11133 = !DILocation(line: 2870, column: 9, scope: !11109)
!11134 = !DILocation(line: 2870, column: 48, scope: !11109)
!11135 = !DILocation(line: 2872, column: 9, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11137, file: !10507, line: 2872, column: 8)
!11137 = distinct !DILexicalBlock(scope: !11109, file: !10507, line: 2871, column: 3)
!11138 = !DILocation(line: 2872, column: 23, scope: !11136)
!11139 = !DILocation(line: 2872, column: 37, scope: !11136)
!11140 = !DILocation(line: 2872, column: 8, scope: !11137)
!11141 = distinct !{!11141, !11132, !11142}
!11142 = !DILocation(line: 2877, column: 3, scope: !11109)
!11143 = !DILocation(line: 2880, column: 1, scope: !11109)
!11144 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !10507, file: !10507, line: 2886, type: !11145, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11147)
!11145 = !DISubroutineType(types: !11146)
!11146 = !{!10510}
!11147 = !{!11148}
!11148 = !DILocalVariable(name: "tickstart", scope: !11144, file: !10507, line: 2888, type: !110)
!11149 = !DILocation(line: 2891, column: 3, scope: !11144)
!11150 = !DILocation(line: 2894, column: 15, scope: !11144)
!11151 = !DILocation(line: 0, scope: !11144)
!11152 = !DILocation(line: 2895, column: 3, scope: !11144)
!11153 = !DILocation(line: 2895, column: 9, scope: !11144)
!11154 = !DILocation(line: 2895, column: 45, scope: !11144)
!11155 = !DILocation(line: 2897, column: 9, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11157, file: !10507, line: 2897, column: 8)
!11157 = distinct !DILexicalBlock(scope: !11144, file: !10507, line: 2896, column: 3)
!11158 = !DILocation(line: 2897, column: 23, scope: !11156)
!11159 = !DILocation(line: 2897, column: 36, scope: !11156)
!11160 = !DILocation(line: 2897, column: 8, scope: !11157)
!11161 = distinct !{!11161, !11152, !11162}
!11162 = !DILocation(line: 2902, column: 3, scope: !11144)
!11163 = !DILocation(line: 2905, column: 1, scope: !11144)
!11164 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !10507, file: !10507, line: 2916, type: !11165, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11168)
!11165 = !DISubroutineType(types: !11166)
!11166 = !{!10510, !11167}
!11167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10527, size: 32)
!11168 = !{!11169, !11170}
!11169 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !11164, file: !10507, line: 2916, type: !11167)
!11170 = !DILocalVariable(name: "tickstart", scope: !11164, file: !10507, line: 2918, type: !110)
!11171 = !DILocation(line: 0, scope: !11164)
!11172 = !DILocation(line: 2934, column: 3, scope: !11164)
!11173 = !DILocation(line: 2937, column: 15, scope: !11164)
!11174 = !DILocation(line: 2938, column: 3, scope: !11164)
!11175 = !DILocation(line: 2938, column: 9, scope: !11164)
!11176 = !DILocation(line: 2940, column: 9, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11178, file: !10507, line: 2940, column: 8)
!11178 = distinct !DILexicalBlock(scope: !11164, file: !10507, line: 2939, column: 3)
!11179 = !DILocation(line: 2940, column: 23, scope: !11177)
!11180 = !DILocation(line: 2940, column: 37, scope: !11177)
!11181 = !DILocation(line: 2940, column: 8, scope: !11178)
!11182 = distinct !{!11182, !11174, !11183}
!11183 = !DILocation(line: 2945, column: 3, scope: !11164)
!11184 = !DILocation(line: 2953, column: 3, scope: !11164)
!11185 = !DILocation(line: 2970, column: 3, scope: !11164)
!11186 = !DILocation(line: 2973, column: 15, scope: !11164)
!11187 = !DILocation(line: 2974, column: 3, scope: !11164)
!11188 = !DILocation(line: 2974, column: 9, scope: !11164)
!11189 = !DILocation(line: 2974, column: 37, scope: !11164)
!11190 = !DILocation(line: 2976, column: 9, scope: !11191)
!11191 = distinct !DILexicalBlock(scope: !11192, file: !10507, line: 2976, column: 8)
!11192 = distinct !DILexicalBlock(scope: !11164, file: !10507, line: 2975, column: 3)
!11193 = !DILocation(line: 2976, column: 23, scope: !11191)
!11194 = !DILocation(line: 2976, column: 37, scope: !11191)
!11195 = !DILocation(line: 2976, column: 8, scope: !11192)
!11196 = distinct !{!11196, !11187, !11197}
!11197 = !DILocation(line: 2981, column: 3, scope: !11164)
!11198 = !DILocation(line: 2984, column: 1, scope: !11164)
!11199 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !10507, file: !10507, line: 2990, type: !11145, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11200)
!11200 = !{!11201}
!11201 = !DILocalVariable(name: "tickstart", scope: !11199, file: !10507, line: 2992, type: !110)
!11202 = !DILocation(line: 2995, column: 3, scope: !11199)
!11203 = !DILocation(line: 2998, column: 15, scope: !11199)
!11204 = !DILocation(line: 0, scope: !11199)
!11205 = !DILocation(line: 2999, column: 3, scope: !11199)
!11206 = !DILocation(line: 2999, column: 9, scope: !11199)
!11207 = !DILocation(line: 3001, column: 9, scope: !11208)
!11208 = distinct !DILexicalBlock(scope: !11209, file: !10507, line: 3001, column: 8)
!11209 = distinct !DILexicalBlock(scope: !11199, file: !10507, line: 3000, column: 3)
!11210 = !DILocation(line: 3001, column: 23, scope: !11208)
!11211 = !DILocation(line: 3001, column: 36, scope: !11208)
!11212 = !DILocation(line: 3001, column: 8, scope: !11209)
!11213 = distinct !{!11213, !11205, !11214}
!11214 = !DILocation(line: 3006, column: 3, scope: !11199)
!11215 = !DILocation(line: 3009, column: 1, scope: !11199)
!11216 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10507, file: !10507, line: 3051, type: !3451, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11217)
!11217 = !{!11218, !11219, !11220, !11221, !11222}
!11218 = !DILocalVariable(name: "pllm", scope: !11216, file: !10507, line: 3053, type: !110)
!11219 = !DILocalVariable(name: "pllvco", scope: !11216, file: !10507, line: 3054, type: !110)
!11220 = !DILocalVariable(name: "pllp", scope: !11216, file: !10507, line: 3055, type: !110)
!11221 = !DILocalVariable(name: "pllr", scope: !11216, file: !10507, line: 3056, type: !110)
!11222 = !DILocalVariable(name: "sysclockfreq", scope: !11216, file: !10507, line: 3057, type: !110)
!11223 = !DILocation(line: 0, scope: !11216)
!11224 = !DILocation(line: 3060, column: 16, scope: !11216)
!11225 = !DILocation(line: 3060, column: 3, scope: !11216)
!11226 = !DILocation(line: 3076, column: 19, scope: !11227)
!11227 = distinct !DILexicalBlock(scope: !11228, file: !10507, line: 3073, column: 5)
!11228 = distinct !DILexicalBlock(scope: !11216, file: !10507, line: 3061, column: 3)
!11229 = !DILocation(line: 3076, column: 27, scope: !11227)
!11230 = !DILocation(line: 3077, column: 10, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11227, file: !10507, line: 3077, column: 10)
!11232 = !DILocation(line: 0, scope: !11231)
!11233 = !DILocation(line: 3087, column: 23, scope: !11227)
!11234 = !DILocation(line: 3087, column: 82, scope: !11227)
!11235 = !DILocation(line: 3089, column: 28, scope: !11227)
!11236 = !DILocation(line: 3090, column: 7, scope: !11227)
!11237 = !DILocation(line: 3096, column: 19, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11228, file: !10507, line: 3093, column: 5)
!11239 = !DILocation(line: 3096, column: 27, scope: !11238)
!11240 = !DILocation(line: 3097, column: 10, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11238, file: !10507, line: 3097, column: 10)
!11242 = !DILocation(line: 0, scope: !11241)
!11243 = !DILocation(line: 3107, column: 21, scope: !11238)
!11244 = !DILocation(line: 3107, column: 49, scope: !11238)
!11245 = !DILocation(line: 3109, column: 28, scope: !11238)
!11246 = !DILocation(line: 3110, column: 7, scope: !11238)
!11247 = !DILocation(line: 0, scope: !11228)
!11248 = !DILocation(line: 3118, column: 3, scope: !11216)
!11249 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10507, file: !10507, line: 3143, type: !11145, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11250)
!11250 = !{!11251}
!11251 = !DILocalVariable(name: "tickstart", scope: !11249, file: !10507, line: 3145, type: !110)
!11252 = !DILocation(line: 3148, column: 15, scope: !11249)
!11253 = !DILocation(line: 0, scope: !11249)
!11254 = !DILocation(line: 3151, column: 3, scope: !11249)
!11255 = !DILocation(line: 3154, column: 3, scope: !11249)
!11256 = !DILocation(line: 3154, column: 10, scope: !11249)
!11257 = !DILocation(line: 3154, column: 43, scope: !11249)
!11258 = !DILocation(line: 3156, column: 10, scope: !11259)
!11259 = distinct !DILexicalBlock(scope: !11260, file: !10507, line: 3156, column: 9)
!11260 = distinct !DILexicalBlock(scope: !11249, file: !10507, line: 3155, column: 3)
!11261 = !DILocation(line: 3156, column: 24, scope: !11259)
!11262 = !DILocation(line: 3156, column: 37, scope: !11259)
!11263 = !DILocation(line: 3156, column: 9, scope: !11260)
!11264 = distinct !{!11264, !11255, !11265}
!11265 = !DILocation(line: 3160, column: 3, scope: !11249)
!11266 = !DILocation(line: 3163, column: 3, scope: !11249)
!11267 = !DILocation(line: 3166, column: 15, scope: !11249)
!11268 = !DILocation(line: 3169, column: 3, scope: !11249)
!11269 = !DILocation(line: 3172, column: 3, scope: !11249)
!11270 = !DILocation(line: 3172, column: 10, scope: !11249)
!11271 = !DILocation(line: 3172, column: 44, scope: !11249)
!11272 = !DILocation(line: 3174, column: 24, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11274, file: !10507, line: 3174, column: 9)
!11274 = distinct !DILexicalBlock(scope: !11249, file: !10507, line: 3173, column: 3)
!11275 = !DILocation(line: 3174, column: 37, scope: !11273)
!11276 = !DILocation(line: 3174, column: 9, scope: !11274)
!11277 = distinct !{!11277, !11269, !11278}
!11278 = !DILocation(line: 3178, column: 3, scope: !11249)
!11279 = !DILocation(line: 3184, column: 3, scope: !11249)
!11280 = !DILocation(line: 3187, column: 3, scope: !11249)
!11281 = !DILocation(line: 3187, column: 10, scope: !11249)
!11282 = !DILocation(line: 3187, column: 43, scope: !11249)
!11283 = !DILocation(line: 3189, column: 24, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11285, file: !10507, line: 3189, column: 9)
!11285 = distinct !DILexicalBlock(scope: !11249, file: !10507, line: 3188, column: 3)
!11286 = !DILocation(line: 3189, column: 37, scope: !11284)
!11287 = !DILocation(line: 3189, column: 9, scope: !11285)
!11288 = distinct !{!11288, !11280, !11289}
!11289 = !DILocation(line: 3193, column: 3, scope: !11249)
!11290 = !DILocation(line: 3199, column: 3, scope: !11249)
!11291 = !DILocation(line: 3202, column: 3, scope: !11249)
!11292 = !DILocation(line: 3202, column: 10, scope: !11249)
!11293 = !DILocation(line: 3202, column: 43, scope: !11249)
!11294 = !DILocation(line: 3204, column: 24, scope: !11295)
!11295 = distinct !DILexicalBlock(scope: !11296, file: !10507, line: 3204, column: 9)
!11296 = distinct !DILexicalBlock(scope: !11249, file: !10507, line: 3203, column: 3)
!11297 = !DILocation(line: 3204, column: 37, scope: !11295)
!11298 = !DILocation(line: 3204, column: 9, scope: !11296)
!11299 = distinct !{!11299, !11291, !11300}
!11300 = !DILocation(line: 3208, column: 3, scope: !11249)
!11301 = !DILocation(line: 3215, column: 3, scope: !11249)
!11302 = !DILocation(line: 3218, column: 3, scope: !11249)
!11303 = !DILocation(line: 3218, column: 10, scope: !11249)
!11304 = !DILocation(line: 3218, column: 46, scope: !11249)
!11305 = !DILocation(line: 3220, column: 24, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !11307, file: !10507, line: 3220, column: 9)
!11307 = distinct !DILexicalBlock(scope: !11249, file: !10507, line: 3219, column: 3)
!11308 = !DILocation(line: 3220, column: 37, scope: !11306)
!11309 = !DILocation(line: 3220, column: 9, scope: !11307)
!11310 = distinct !{!11310, !11302, !11311}
!11311 = !DILocation(line: 3224, column: 3, scope: !11249)
!11312 = !DILocation(line: 3232, column: 3, scope: !11249)
!11313 = !DILocation(line: 3235, column: 3, scope: !11249)
!11314 = !DILocation(line: 3235, column: 10, scope: !11249)
!11315 = !DILocation(line: 3235, column: 46, scope: !11249)
!11316 = !DILocation(line: 3237, column: 10, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11318, file: !10507, line: 3237, column: 9)
!11318 = distinct !DILexicalBlock(scope: !11249, file: !10507, line: 3236, column: 3)
!11319 = !DILocation(line: 3237, column: 24, scope: !11317)
!11320 = !DILocation(line: 3237, column: 37, scope: !11317)
!11321 = !DILocation(line: 3237, column: 9, scope: !11318)
!11322 = distinct !{!11322, !11313, !11323}
!11323 = !DILocation(line: 3241, column: 3, scope: !11249)
!11324 = !DILocation(line: 3247, column: 16, scope: !11249)
!11325 = !DILocation(line: 3257, column: 19, scope: !11249)
!11326 = !DILocation(line: 3270, column: 19, scope: !11249)
!11327 = !DILocation(line: 3274, column: 3, scope: !11249)
!11328 = !DILocation(line: 3277, column: 3, scope: !11249)
!11329 = !DILocation(line: 3281, column: 3, scope: !11249)
!11330 = !DILocation(line: 3285, column: 3, scope: !11249)
!11331 = !DILocation(line: 3288, column: 3, scope: !11249)
!11332 = !DILocation(line: 3292, column: 3, scope: !11249)
!11333 = !DILocation(line: 3296, column: 3, scope: !11249)
!11334 = !DILocation(line: 3299, column: 3, scope: !11249)
!11335 = !DILocation(line: 3302, column: 19, scope: !11249)
!11336 = !DILocation(line: 3305, column: 19, scope: !11337)
!11337 = distinct !DILexicalBlock(scope: !11249, file: !10507, line: 3305, column: 6)
!11338 = !DILocation(line: 3305, column: 6, scope: !11337)
!11339 = !DILocation(line: 3305, column: 31, scope: !11337)
!11340 = !DILocation(line: 0, scope: !11337)
!11341 = !DILocation(line: 3313, column: 1, scope: !11249)
!11342 = !DISubprogram(name: "HAL_InitTick", scope: !10882, file: !10882, line: 223, type: !11343, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2100)
!11343 = !DISubroutineType(types: !11344)
!11344 = !{!10510, !110}
!11345 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10507, file: !10507, line: 3333, type: !11346, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11370)
!11346 = !DISubroutineType(types: !11347)
!11347 = !{!10510, !11348}
!11348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11349, size: 32)
!11349 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11350, line: 70, baseType: !11351)
!11350 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11351 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11350, line: 49, size: 416, elements: !11352)
!11352 = !{!11353, !11354, !11355, !11356, !11357, !11358, !11359}
!11353 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11351, file: !11350, line: 51, baseType: !110, size: 32)
!11354 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11351, file: !11350, line: 54, baseType: !110, size: 32, offset: 32)
!11355 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11351, file: !11350, line: 57, baseType: !110, size: 32, offset: 64)
!11356 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11351, file: !11350, line: 60, baseType: !110, size: 32, offset: 96)
!11357 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11351, file: !11350, line: 63, baseType: !110, size: 32, offset: 128)
!11358 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11351, file: !11350, line: 66, baseType: !110, size: 32, offset: 160)
!11359 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11351, file: !11350, line: 69, baseType: !11360, size: 224, offset: 192)
!11360 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10513, line: 73, baseType: !11361)
!11361 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10513, line: 45, size: 224, elements: !11362)
!11362 = !{!11363, !11364, !11365, !11366, !11367, !11368, !11369}
!11363 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11361, file: !10513, line: 47, baseType: !110, size: 32)
!11364 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11361, file: !10513, line: 50, baseType: !110, size: 32, offset: 32)
!11365 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11361, file: !10513, line: 53, baseType: !110, size: 32, offset: 64)
!11366 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11361, file: !10513, line: 56, baseType: !110, size: 32, offset: 96)
!11367 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11361, file: !10513, line: 60, baseType: !110, size: 32, offset: 128)
!11368 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11361, file: !10513, line: 63, baseType: !110, size: 32, offset: 160)
!11369 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !11361, file: !10513, line: 68, baseType: !110, size: 32, offset: 192)
!11370 = !{!11371, !11372, !11373, !11374, !11378}
!11371 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11345, file: !10507, line: 3333, type: !11348)
!11372 = !DILocalVariable(name: "tickstart", scope: !11345, file: !10507, line: 3335, type: !110)
!11373 = !DILocalVariable(name: "pll_config", scope: !11345, file: !10507, line: 3335, type: !110)
!11374 = !DILocalVariable(name: "pwrclkchanged", scope: !11375, file: !10507, line: 3517, type: !11377)
!11375 = distinct !DILexicalBlock(scope: !11376, file: !10507, line: 3516, column: 3)
!11376 = distinct !DILexicalBlock(scope: !11345, file: !10507, line: 3515, column: 6)
!11377 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !836, line: 188, baseType: !3009)
!11378 = !DILocalVariable(name: "tmpreg", scope: !11379, file: !10507, line: 3526, type: !301)
!11379 = distinct !DILexicalBlock(scope: !11380, file: !10507, line: 3526, column: 7)
!11380 = distinct !DILexicalBlock(scope: !11381, file: !10507, line: 3525, column: 5)
!11381 = distinct !DILexicalBlock(scope: !11375, file: !10507, line: 3524, column: 8)
!11382 = !DILocation(line: 0, scope: !11345)
!11383 = !DILocation(line: 3338, column: 24, scope: !11384)
!11384 = distinct !DILexicalBlock(scope: !11345, file: !10507, line: 3338, column: 6)
!11385 = !DILocation(line: 3338, column: 6, scope: !11345)
!11386 = !DILocation(line: 3346, column: 27, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11345, file: !10507, line: 3346, column: 6)
!11388 = !DILocation(line: 3346, column: 43, scope: !11387)
!11389 = !DILocation(line: 3346, column: 69, scope: !11387)
!11390 = !DILocation(line: 3346, column: 6, scope: !11345)
!11391 = !DILocation(line: 3352, column: 9, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11393, file: !10507, line: 3352, column: 8)
!11393 = distinct !DILexicalBlock(scope: !11387, file: !10507, line: 3347, column: 3)
!11394 = !DILocation(line: 3352, column: 39, scope: !11392)
!11395 = !DILocation(line: 3352, column: 128, scope: !11392)
!11396 = !DILocation(line: 3353, column: 9, scope: !11392)
!11397 = !DILocation(line: 3353, column: 39, scope: !11392)
!11398 = !DILocation(line: 3353, column: 60, scope: !11392)
!11399 = !DILocation(line: 3353, column: 70, scope: !11392)
!11400 = !DILocation(line: 3353, column: 78, scope: !11392)
!11401 = !DILocation(line: 3353, column: 100, scope: !11392)
!11402 = !DILocation(line: 3353, column: 128, scope: !11392)
!11403 = !DILocation(line: 3354, column: 9, scope: !11392)
!11404 = !DILocation(line: 3354, column: 39, scope: !11392)
!11405 = !DILocation(line: 3354, column: 61, scope: !11392)
!11406 = !DILocation(line: 3354, column: 71, scope: !11392)
!11407 = !DILocation(line: 3354, column: 79, scope: !11392)
!11408 = !DILocation(line: 3354, column: 101, scope: !11392)
!11409 = !DILocation(line: 3352, column: 8, scope: !11393)
!11410 = !DILocation(line: 3360, column: 11, scope: !11411)
!11411 = distinct !DILexicalBlock(scope: !11412, file: !10507, line: 3360, column: 10)
!11412 = distinct !DILexicalBlock(scope: !11392, file: !10507, line: 3359, column: 5)
!11413 = !DILocation(line: 3360, column: 57, scope: !11411)
!11414 = !DILocation(line: 3360, column: 80, scope: !11411)
!11415 = !DILocation(line: 3360, column: 89, scope: !11411)
!11416 = !DILocation(line: 3360, column: 10, scope: !11412)
!11417 = !DILocation(line: 3368, column: 7, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11419, file: !10507, line: 3368, column: 7)
!11419 = distinct !DILexicalBlock(scope: !11420, file: !10507, line: 3368, column: 7)
!11420 = distinct !DILexicalBlock(scope: !11392, file: !10507, line: 3366, column: 5)
!11421 = !DILocation(line: 3368, column: 7, scope: !11419)
!11422 = !DILocation(line: 3368, column: 7, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11418, file: !10507, line: 3368, column: 7)
!11424 = !DILocation(line: 3368, column: 7, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11426, file: !10507, line: 3368, column: 7)
!11426 = distinct !DILexicalBlock(scope: !11418, file: !10507, line: 3368, column: 7)
!11427 = !DILocation(line: 3368, column: 7, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !11426, file: !10507, line: 3368, column: 7)
!11429 = !DILocation(line: 0, scope: !11418)
!11430 = !DILocation(line: 3371, column: 30, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11420, file: !10507, line: 3371, column: 10)
!11432 = !DILocation(line: 3371, column: 40, scope: !11431)
!11433 = !DILocation(line: 0, scope: !11431)
!11434 = !DILocation(line: 3371, column: 10, scope: !11420)
!11435 = !DILocation(line: 3377, column: 15, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11431, file: !10507, line: 3372, column: 7)
!11437 = !DILocation(line: 3377, column: 51, scope: !11436)
!11438 = !DILocation(line: 3377, column: 9, scope: !11436)
!11439 = !DILocation(line: 3379, column: 15, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11441, file: !10507, line: 3379, column: 14)
!11441 = distinct !DILexicalBlock(scope: !11436, file: !10507, line: 3378, column: 9)
!11442 = !DILocation(line: 3379, column: 29, scope: !11440)
!11443 = !DILocation(line: 3379, column: 43, scope: !11440)
!11444 = !DILocation(line: 3379, column: 14, scope: !11441)
!11445 = distinct !{!11445, !11438, !11446}
!11446 = !DILocation(line: 3383, column: 9, scope: !11436)
!11447 = !DILocation(line: 3391, column: 15, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11431, file: !10507, line: 3386, column: 7)
!11449 = !DILocation(line: 3391, column: 9, scope: !11448)
!11450 = !DILocation(line: 3393, column: 15, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11452, file: !10507, line: 3393, column: 14)
!11452 = distinct !DILexicalBlock(scope: !11448, file: !10507, line: 3392, column: 9)
!11453 = !DILocation(line: 3393, column: 29, scope: !11451)
!11454 = !DILocation(line: 3393, column: 43, scope: !11451)
!11455 = !DILocation(line: 3393, column: 14, scope: !11452)
!11456 = distinct !{!11456, !11449, !11457}
!11457 = !DILocation(line: 3397, column: 9, scope: !11448)
!11458 = !DILocation(line: 3402, column: 27, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11345, file: !10507, line: 3402, column: 6)
!11460 = !DILocation(line: 3402, column: 43, scope: !11459)
!11461 = !DILocation(line: 3402, column: 69, scope: !11459)
!11462 = !DILocation(line: 3402, column: 6, scope: !11345)
!11463 = !DILocation(line: 3410, column: 9, scope: !11464)
!11464 = distinct !DILexicalBlock(scope: !11465, file: !10507, line: 3410, column: 8)
!11465 = distinct !DILexicalBlock(scope: !11459, file: !10507, line: 3403, column: 3)
!11466 = !DILocation(line: 3410, column: 39, scope: !11464)
!11467 = !DILocation(line: 3410, column: 128, scope: !11464)
!11468 = !DILocation(line: 3411, column: 9, scope: !11464)
!11469 = !DILocation(line: 3411, column: 39, scope: !11464)
!11470 = !DILocation(line: 3411, column: 60, scope: !11464)
!11471 = !DILocation(line: 3411, column: 70, scope: !11464)
!11472 = !DILocation(line: 3411, column: 78, scope: !11464)
!11473 = !DILocation(line: 3411, column: 100, scope: !11464)
!11474 = !DILocation(line: 3411, column: 128, scope: !11464)
!11475 = !DILocation(line: 3412, column: 9, scope: !11464)
!11476 = !DILocation(line: 3412, column: 39, scope: !11464)
!11477 = !DILocation(line: 3412, column: 61, scope: !11464)
!11478 = !DILocation(line: 3412, column: 71, scope: !11464)
!11479 = !DILocation(line: 3412, column: 79, scope: !11464)
!11480 = !DILocation(line: 3412, column: 101, scope: !11464)
!11481 = !DILocation(line: 3410, column: 8, scope: !11465)
!11482 = !DILocation(line: 3419, column: 11, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11484, file: !10507, line: 3419, column: 10)
!11484 = distinct !DILexicalBlock(scope: !11464, file: !10507, line: 3417, column: 5)
!11485 = !DILocation(line: 3419, column: 57, scope: !11483)
!11486 = !DILocation(line: 3419, column: 80, scope: !11483)
!11487 = !DILocation(line: 3419, column: 89, scope: !11483)
!11488 = !DILocation(line: 3419, column: 10, scope: !11484)
!11489 = !DILocation(line: 3433, column: 30, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11491, file: !10507, line: 3433, column: 10)
!11491 = distinct !DILexicalBlock(scope: !11464, file: !10507, line: 3431, column: 5)
!11492 = !DILocation(line: 3433, column: 39, scope: !11490)
!11493 = !DILocation(line: 3433, column: 10, scope: !11491)
!11494 = !DILocation(line: 3436, column: 9, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11490, file: !10507, line: 3434, column: 7)
!11496 = !DILocation(line: 3439, column: 21, scope: !11495)
!11497 = !DILocation(line: 3442, column: 9, scope: !11495)
!11498 = !DILocation(line: 3442, column: 15, scope: !11495)
!11499 = !DILocation(line: 3442, column: 51, scope: !11495)
!11500 = !DILocation(line: 3444, column: 15, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11502, file: !10507, line: 3444, column: 14)
!11502 = distinct !DILexicalBlock(scope: !11495, file: !10507, line: 3443, column: 9)
!11503 = !DILocation(line: 3444, column: 29, scope: !11501)
!11504 = !DILocation(line: 3444, column: 43, scope: !11501)
!11505 = !DILocation(line: 3444, column: 14, scope: !11502)
!11506 = distinct !{!11506, !11497, !11507}
!11507 = !DILocation(line: 3448, column: 9, scope: !11495)
!11508 = !DILocation(line: 3456, column: 9, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11490, file: !10507, line: 3454, column: 7)
!11510 = !DILocation(line: 3459, column: 21, scope: !11509)
!11511 = !DILocation(line: 3462, column: 9, scope: !11509)
!11512 = !DILocation(line: 3462, column: 15, scope: !11509)
!11513 = !DILocation(line: 3464, column: 15, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11515, file: !10507, line: 3464, column: 14)
!11515 = distinct !DILexicalBlock(scope: !11509, file: !10507, line: 3463, column: 9)
!11516 = !DILocation(line: 3464, column: 29, scope: !11514)
!11517 = !DILocation(line: 3464, column: 43, scope: !11514)
!11518 = !DILocation(line: 3464, column: 14, scope: !11515)
!11519 = distinct !{!11519, !11511, !11520}
!11520 = !DILocation(line: 3468, column: 9, scope: !11509)
!11521 = !DILocation(line: 0, scope: !11464)
!11522 = !DILocation(line: 3473, column: 27, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11345, file: !10507, line: 3473, column: 6)
!11524 = !DILocation(line: 3473, column: 43, scope: !11523)
!11525 = !DILocation(line: 3473, column: 69, scope: !11523)
!11526 = !DILocation(line: 3473, column: 6, scope: !11345)
!11527 = !DILocation(line: 3479, column: 28, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11529, file: !10507, line: 3479, column: 8)
!11529 = distinct !DILexicalBlock(scope: !11523, file: !10507, line: 3474, column: 3)
!11530 = !DILocation(line: 3479, column: 37, scope: !11528)
!11531 = !DILocation(line: 3479, column: 8, scope: !11529)
!11532 = !DILocation(line: 3482, column: 7, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11528, file: !10507, line: 3480, column: 5)
!11534 = !DILocation(line: 3485, column: 19, scope: !11533)
!11535 = !DILocation(line: 3488, column: 7, scope: !11533)
!11536 = !DILocation(line: 3488, column: 13, scope: !11533)
!11537 = !DILocation(line: 3488, column: 49, scope: !11533)
!11538 = !DILocation(line: 3490, column: 13, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11540, file: !10507, line: 3490, column: 12)
!11540 = distinct !DILexicalBlock(scope: !11533, file: !10507, line: 3489, column: 7)
!11541 = !DILocation(line: 3490, column: 27, scope: !11539)
!11542 = !DILocation(line: 3490, column: 41, scope: !11539)
!11543 = !DILocation(line: 3490, column: 12, scope: !11540)
!11544 = distinct !{!11544, !11535, !11545}
!11545 = !DILocation(line: 3494, column: 7, scope: !11533)
!11546 = !DILocation(line: 3499, column: 7, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !11528, file: !10507, line: 3497, column: 5)
!11548 = !DILocation(line: 3502, column: 19, scope: !11547)
!11549 = !DILocation(line: 3505, column: 7, scope: !11547)
!11550 = !DILocation(line: 3505, column: 13, scope: !11547)
!11551 = !DILocation(line: 3507, column: 13, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11553, file: !10507, line: 3507, column: 12)
!11553 = distinct !DILexicalBlock(scope: !11547, file: !10507, line: 3506, column: 7)
!11554 = !DILocation(line: 3507, column: 27, scope: !11552)
!11555 = !DILocation(line: 3507, column: 41, scope: !11552)
!11556 = !DILocation(line: 3507, column: 12, scope: !11553)
!11557 = distinct !{!11557, !11549, !11558}
!11558 = !DILocation(line: 3511, column: 7, scope: !11547)
!11559 = !DILocation(line: 3515, column: 27, scope: !11376)
!11560 = !DILocation(line: 3515, column: 43, scope: !11376)
!11561 = !DILocation(line: 3515, column: 69, scope: !11376)
!11562 = !DILocation(line: 3515, column: 6, scope: !11345)
!11563 = !DILocation(line: 0, scope: !11375)
!11564 = !DILocation(line: 3524, column: 8, scope: !11381)
!11565 = !DILocation(line: 3524, column: 8, scope: !11375)
!11566 = !DILocation(line: 3526, column: 7, scope: !11379)
!11567 = !DILocation(line: 3526, column: 7, scope: !11380)
!11568 = !DILocation(line: 3528, column: 5, scope: !11380)
!11569 = !DILocation(line: 3530, column: 8, scope: !11570)
!11570 = distinct !DILexicalBlock(scope: !11375, file: !10507, line: 3530, column: 8)
!11571 = !DILocation(line: 3530, column: 8, scope: !11375)
!11572 = !DILocation(line: 3533, column: 7, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11570, file: !10507, line: 3531, column: 5)
!11574 = !DILocation(line: 3536, column: 19, scope: !11573)
!11575 = !DILocation(line: 3538, column: 7, scope: !11573)
!11576 = !DILocation(line: 3538, column: 13, scope: !11573)
!11577 = !DILocation(line: 3540, column: 13, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11579, file: !10507, line: 3540, column: 12)
!11579 = distinct !DILexicalBlock(scope: !11573, file: !10507, line: 3539, column: 7)
!11580 = !DILocation(line: 3540, column: 27, scope: !11578)
!11581 = !DILocation(line: 3540, column: 40, scope: !11578)
!11582 = !DILocation(line: 3540, column: 12, scope: !11579)
!11583 = distinct !{!11583, !11575, !11584}
!11584 = !DILocation(line: 3544, column: 7, scope: !11573)
!11585 = !DILocation(line: 3548, column: 5, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11587, file: !10507, line: 3548, column: 5)
!11587 = distinct !DILexicalBlock(scope: !11375, file: !10507, line: 3548, column: 5)
!11588 = !DILocation(line: 3548, column: 5, scope: !11587)
!11589 = !DILocation(line: 3548, column: 5, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11586, file: !10507, line: 3548, column: 5)
!11591 = !DILocation(line: 3548, column: 5, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11593, file: !10507, line: 3548, column: 5)
!11593 = distinct !DILexicalBlock(scope: !11586, file: !10507, line: 3548, column: 5)
!11594 = !DILocation(line: 3548, column: 5, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11593, file: !10507, line: 3548, column: 5)
!11596 = !DILocation(line: 0, scope: !11586)
!11597 = !DILocation(line: 3550, column: 28, scope: !11598)
!11598 = distinct !DILexicalBlock(scope: !11375, file: !10507, line: 3550, column: 8)
!11599 = !DILocation(line: 3550, column: 38, scope: !11598)
!11600 = !DILocation(line: 0, scope: !11598)
!11601 = !DILocation(line: 3550, column: 8, scope: !11375)
!11602 = !DILocation(line: 3556, column: 13, scope: !11603)
!11603 = distinct !DILexicalBlock(scope: !11598, file: !10507, line: 3551, column: 5)
!11604 = !DILocation(line: 3556, column: 49, scope: !11603)
!11605 = !DILocation(line: 3556, column: 7, scope: !11603)
!11606 = !DILocation(line: 3558, column: 13, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11608, file: !10507, line: 3558, column: 12)
!11608 = distinct !DILexicalBlock(scope: !11603, file: !10507, line: 3557, column: 7)
!11609 = !DILocation(line: 3558, column: 27, scope: !11607)
!11610 = !DILocation(line: 3558, column: 41, scope: !11607)
!11611 = !DILocation(line: 3558, column: 12, scope: !11608)
!11612 = distinct !{!11612, !11605, !11613}
!11613 = !DILocation(line: 3562, column: 7, scope: !11603)
!11614 = !DILocation(line: 3570, column: 13, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11598, file: !10507, line: 3565, column: 5)
!11616 = !DILocation(line: 3570, column: 7, scope: !11615)
!11617 = !DILocation(line: 3572, column: 13, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11619, file: !10507, line: 3572, column: 12)
!11619 = distinct !DILexicalBlock(scope: !11615, file: !10507, line: 3571, column: 7)
!11620 = !DILocation(line: 3572, column: 27, scope: !11618)
!11621 = !DILocation(line: 3572, column: 41, scope: !11618)
!11622 = !DILocation(line: 3572, column: 12, scope: !11619)
!11623 = distinct !{!11623, !11616, !11624}
!11624 = !DILocation(line: 3576, column: 7, scope: !11615)
!11625 = !DILocation(line: 3580, column: 8, scope: !11375)
!11626 = !DILocation(line: 3582, column: 7, scope: !11627)
!11627 = distinct !DILexicalBlock(scope: !11628, file: !10507, line: 3581, column: 5)
!11628 = distinct !DILexicalBlock(scope: !11375, file: !10507, line: 3580, column: 8)
!11629 = !DILocation(line: 3583, column: 5, scope: !11627)
!11630 = !DILocation(line: 3588, column: 31, scope: !11631)
!11631 = distinct !DILexicalBlock(scope: !11345, file: !10507, line: 3588, column: 7)
!11632 = !DILocation(line: 3588, column: 41, scope: !11631)
!11633 = !DILocation(line: 3588, column: 7, scope: !11345)
!11634 = !DILocation(line: 3591, column: 8, scope: !11635)
!11635 = distinct !DILexicalBlock(scope: !11636, file: !10507, line: 3591, column: 8)
!11636 = distinct !DILexicalBlock(scope: !11631, file: !10507, line: 3589, column: 3)
!11637 = !DILocation(line: 3591, column: 38, scope: !11635)
!11638 = !DILocation(line: 3591, column: 8, scope: !11636)
!11639 = !DILocation(line: 3593, column: 44, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11641, file: !10507, line: 3593, column: 10)
!11641 = distinct !DILexicalBlock(scope: !11635, file: !10507, line: 3592, column: 5)
!11642 = !DILocation(line: 0, scope: !11640)
!11643 = !DILocation(line: 3593, column: 10, scope: !11641)
!11644 = !DILocation(line: 3610, column: 15, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11640, file: !10507, line: 3594, column: 7)
!11646 = !DILocation(line: 3610, column: 9, scope: !11645)
!11647 = !DILocation(line: 3612, column: 15, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11649, file: !10507, line: 3612, column: 14)
!11649 = distinct !DILexicalBlock(scope: !11645, file: !10507, line: 3611, column: 9)
!11650 = !DILocation(line: 3612, column: 29, scope: !11648)
!11651 = !DILocation(line: 3612, column: 43, scope: !11648)
!11652 = !DILocation(line: 3612, column: 14, scope: !11649)
!11653 = distinct !{!11653, !11646, !11654}
!11654 = !DILocation(line: 3616, column: 9, scope: !11645)
!11655 = !DILocation(line: 3619, column: 9, scope: !11645)
!11656 = !DILocation(line: 3626, column: 9, scope: !11645)
!11657 = !DILocation(line: 3629, column: 21, scope: !11645)
!11658 = !DILocation(line: 3632, column: 9, scope: !11645)
!11659 = !DILocation(line: 3632, column: 15, scope: !11645)
!11660 = !DILocation(line: 3632, column: 51, scope: !11645)
!11661 = !DILocation(line: 3634, column: 15, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11663, file: !10507, line: 3634, column: 14)
!11663 = distinct !DILexicalBlock(scope: !11645, file: !10507, line: 3633, column: 9)
!11664 = !DILocation(line: 3634, column: 29, scope: !11662)
!11665 = !DILocation(line: 3634, column: 43, scope: !11662)
!11666 = !DILocation(line: 3634, column: 14, scope: !11663)
!11667 = distinct !{!11667, !11658, !11668}
!11668 = !DILocation(line: 3638, column: 9, scope: !11645)
!11669 = !DILocation(line: 3649, column: 15, scope: !11670)
!11670 = distinct !DILexicalBlock(scope: !11640, file: !10507, line: 3641, column: 7)
!11671 = !DILocation(line: 3649, column: 9, scope: !11670)
!11672 = !DILocation(line: 3651, column: 15, scope: !11673)
!11673 = distinct !DILexicalBlock(scope: !11674, file: !10507, line: 3651, column: 14)
!11674 = distinct !DILexicalBlock(scope: !11670, file: !10507, line: 3650, column: 9)
!11675 = !DILocation(line: 3651, column: 29, scope: !11673)
!11676 = !DILocation(line: 3651, column: 43, scope: !11673)
!11677 = !DILocation(line: 3651, column: 14, scope: !11674)
!11678 = distinct !{!11678, !11671, !11679}
!11679 = !DILocation(line: 3655, column: 9, scope: !11670)
!11680 = !DILocation(line: 3661, column: 44, scope: !11681)
!11681 = distinct !DILexicalBlock(scope: !11682, file: !10507, line: 3661, column: 10)
!11682 = distinct !DILexicalBlock(scope: !11635, file: !10507, line: 3659, column: 5)
!11683 = !DILocation(line: 3661, column: 10, scope: !11682)
!11684 = !DILocation(line: 3668, column: 27, scope: !11685)
!11685 = distinct !DILexicalBlock(scope: !11681, file: !10507, line: 3666, column: 7)
!11686 = !DILocation(line: 3671, column: 14, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !11685, file: !10507, line: 3670, column: 13)
!11688 = !DILocation(line: 3671, column: 81, scope: !11687)
!11689 = !DILocation(line: 3671, column: 55, scope: !11687)
!11690 = !DILocation(line: 3671, column: 92, scope: !11687)
!11691 = !DILocation(line: 3672, column: 14, scope: !11687)
!11692 = !DILocation(line: 3672, column: 80, scope: !11687)
!11693 = !DILocation(line: 3672, column: 53, scope: !11687)
!11694 = !DILocation(line: 3672, column: 111, scope: !11687)
!11695 = !DILocation(line: 3673, column: 14, scope: !11687)
!11696 = !DILocation(line: 3673, column: 80, scope: !11687)
!11697 = !DILocation(line: 3673, column: 86, scope: !11687)
!11698 = !DILocation(line: 3673, column: 53, scope: !11687)
!11699 = !DILocation(line: 3673, column: 111, scope: !11687)
!11700 = !DILocation(line: 3674, column: 14, scope: !11687)
!11701 = !DILocation(line: 3674, column: 82, scope: !11687)
!11702 = !DILocation(line: 3674, column: 101, scope: !11687)
!11703 = !DILocation(line: 3674, column: 53, scope: !11687)
!11704 = !DILocation(line: 3674, column: 126, scope: !11687)
!11705 = !DILocation(line: 3675, column: 14, scope: !11687)
!11706 = !DILocation(line: 3675, column: 80, scope: !11687)
!11707 = !DILocation(line: 3675, column: 85, scope: !11687)
!11708 = !DILocation(line: 3675, column: 53, scope: !11687)
!11709 = !DILocation(line: 3675, column: 111, scope: !11687)
!11710 = !DILocation(line: 3676, column: 14, scope: !11687)
!11711 = !DILocation(line: 3676, column: 80, scope: !11687)
!11712 = !DILocation(line: 3676, column: 85, scope: !11687)
!11713 = !DILocation(line: 3676, column: 53, scope: !11687)
!11714 = !DILocation(line: 3670, column: 13, scope: !11685)
!11715 = !DILocation(line: 3691, column: 3, scope: !11345)
!11716 = !DILocation(line: 3692, column: 1, scope: !11345)
!11717 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10507, file: !10507, line: 3703, type: !11718, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2999, retainedNodes: !11720)
!11718 = !DISubroutineType(types: !11719)
!11719 = !{null, !11348}
!11720 = !{!11721}
!11721 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11717, file: !10507, line: 3703, type: !11348)
!11722 = !DILocation(line: 0, scope: !11717)
!11723 = !DILocation(line: 3706, column: 22, scope: !11717)
!11724 = !DILocation(line: 3706, column: 37, scope: !11717)
!11725 = !DILocation(line: 3709, column: 12, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11717, file: !10507, line: 3709, column: 6)
!11727 = !DILocation(line: 3709, column: 15, scope: !11726)
!11728 = !DILocation(line: 3709, column: 31, scope: !11726)
!11729 = !DILocation(line: 3709, column: 6, scope: !11717)
!11730 = !DILocation(line: 3711, column: 24, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11726, file: !10507, line: 3710, column: 3)
!11732 = !DILocation(line: 3711, column: 33, scope: !11731)
!11733 = !DILocation(line: 3712, column: 3, scope: !11731)
!11734 = !DILocation(line: 3713, column: 17, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !11726, file: !10507, line: 3713, column: 11)
!11736 = !DILocation(line: 3713, column: 20, scope: !11735)
!11737 = !DILocation(line: 3713, column: 35, scope: !11735)
!11738 = !DILocation(line: 0, scope: !11735)
!11739 = !DILocation(line: 3713, column: 11, scope: !11726)
!11740 = !DILocation(line: 3715, column: 33, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !11735, file: !10507, line: 3714, column: 3)
!11742 = !DILocation(line: 3716, column: 3, scope: !11741)
!11743 = !DILocation(line: 3719, column: 33, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11735, file: !10507, line: 3718, column: 3)
!11745 = !DILocation(line: 3723, column: 12, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11717, file: !10507, line: 3723, column: 6)
!11747 = !DILocation(line: 3723, column: 15, scope: !11746)
!11748 = !DILocation(line: 3729, column: 24, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11746, file: !10507, line: 3728, column: 3)
!11750 = !DILocation(line: 3729, column: 33, scope: !11749)
!11751 = !DILocation(line: 3732, column: 61, scope: !11717)
!11752 = !DILocation(line: 3732, column: 81, scope: !11717)
!11753 = !DILocation(line: 3732, column: 22, scope: !11717)
!11754 = !DILocation(line: 3732, column: 42, scope: !11717)
!11755 = !DILocation(line: 3735, column: 12, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11717, file: !10507, line: 3735, column: 6)
!11757 = !DILocation(line: 3735, column: 17, scope: !11756)
!11758 = !DILocation(line: 3735, column: 35, scope: !11756)
!11759 = !DILocation(line: 3735, column: 6, scope: !11717)
!11760 = !DILocation(line: 3737, column: 24, scope: !11761)
!11761 = distinct !DILexicalBlock(scope: !11756, file: !10507, line: 3736, column: 3)
!11762 = !DILocation(line: 3737, column: 33, scope: !11761)
!11763 = !DILocation(line: 3738, column: 3, scope: !11761)
!11764 = !DILocation(line: 3739, column: 17, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11756, file: !10507, line: 3739, column: 11)
!11766 = !DILocation(line: 3739, column: 22, scope: !11765)
!11767 = !DILocation(line: 3739, column: 39, scope: !11765)
!11768 = !DILocation(line: 0, scope: !11765)
!11769 = !DILocation(line: 3739, column: 11, scope: !11756)
!11770 = !DILocation(line: 3741, column: 33, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11765, file: !10507, line: 3740, column: 3)
!11772 = !DILocation(line: 3742, column: 3, scope: !11771)
!11773 = !DILocation(line: 3745, column: 33, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11765, file: !10507, line: 3744, column: 3)
!11775 = !DILocation(line: 3749, column: 12, scope: !11776)
!11776 = distinct !DILexicalBlock(scope: !11717, file: !10507, line: 3749, column: 6)
!11777 = !DILocation(line: 3749, column: 16, scope: !11776)
!11778 = !DILocation(line: 3755, column: 24, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11776, file: !10507, line: 3754, column: 3)
!11780 = !DILocation(line: 3755, column: 33, scope: !11779)
!11781 = !DILocation(line: 3759, column: 12, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11717, file: !10507, line: 3759, column: 6)
!11783 = !DILocation(line: 3759, column: 15, scope: !11782)
!11784 = !DILocation(line: 3759, column: 30, scope: !11782)
!11785 = !DILocation(line: 3759, column: 6, scope: !11717)
!11786 = !DILocation(line: 3765, column: 28, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11782, file: !10507, line: 3764, column: 3)
!11788 = !DILocation(line: 3765, column: 37, scope: !11787)
!11789 = !DILocation(line: 3767, column: 54, scope: !11717)
!11790 = !DILocation(line: 3767, column: 62, scope: !11717)
!11791 = !DILocation(line: 3767, column: 26, scope: !11717)
!11792 = !DILocation(line: 3767, column: 36, scope: !11717)
!11793 = !DILocation(line: 3768, column: 49, scope: !11717)
!11794 = !DILocation(line: 3768, column: 57, scope: !11717)
!11795 = !DILocation(line: 3768, column: 26, scope: !11717)
!11796 = !DILocation(line: 3768, column: 31, scope: !11717)
!11797 = !DILocation(line: 3769, column: 50, scope: !11717)
!11798 = !DILocation(line: 3769, column: 78, scope: !11717)
!11799 = !DILocation(line: 3769, column: 26, scope: !11717)
!11800 = !DILocation(line: 3769, column: 31, scope: !11717)
!11801 = !DILocation(line: 3770, column: 52, scope: !11717)
!11802 = !DILocation(line: 3770, column: 102, scope: !11717)
!11803 = !DILocation(line: 3770, column: 109, scope: !11717)
!11804 = !DILocation(line: 3770, column: 26, scope: !11717)
!11805 = !DILocation(line: 3770, column: 31, scope: !11717)
!11806 = !DILocation(line: 3771, column: 50, scope: !11717)
!11807 = !DILocation(line: 3771, column: 78, scope: !11717)
!11808 = !DILocation(line: 3771, column: 26, scope: !11717)
!11809 = !DILocation(line: 3771, column: 31, scope: !11717)
!11810 = !DILocation(line: 3772, column: 50, scope: !11717)
!11811 = !DILocation(line: 3772, column: 78, scope: !11717)
!11812 = !DILocation(line: 3772, column: 26, scope: !11717)
!11813 = !DILocation(line: 3772, column: 31, scope: !11717)
!11814 = !DILocation(line: 3773, column: 1, scope: !11717)
!11815 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11816, file: !11816, line: 257, type: !6338, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !11817)
!11816 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11817 = !{!11818}
!11818 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11815, file: !11816, line: 257, type: !110)
!11819 = !DILocation(line: 0, scope: !11815)
!11820 = !DILocation(line: 260, column: 3, scope: !11815)
!11821 = !DILocation(line: 261, column: 1, scope: !11815)
!11822 = distinct !DISubprogram(name: "LL_InitTick", scope: !11823, file: !11823, line: 260, type: !8899, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !11824)
!11823 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11824 = !{!11825, !11826}
!11825 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11822, file: !11823, line: 260, type: !110)
!11826 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11822, file: !11823, line: 260, type: !110)
!11827 = !DILocation(line: 0, scope: !11822)
!11828 = !DILocation(line: 263, column: 46, scope: !11822)
!11829 = !DILocation(line: 263, column: 55, scope: !11822)
!11830 = !DILocation(line: 263, column: 18, scope: !11822)
!11831 = !DILocation(line: 264, column: 18, scope: !11822)
!11832 = !DILocation(line: 265, column: 18, scope: !11822)
!11833 = !DILocation(line: 267, column: 1, scope: !11822)
!11834 = distinct !DISubprogram(name: "LL_mDelay", scope: !11816, file: !11816, line: 273, type: !6338, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !11835)
!11835 = !{!11836, !11837}
!11836 = !DILocalVariable(name: "Delay", arg: 1, scope: !11834, file: !11816, line: 273, type: !110)
!11837 = !DILocalVariable(name: "tmp", scope: !11834, file: !11816, line: 275, type: !301)
!11838 = !DILocation(line: 0, scope: !11834)
!11839 = !DILocation(line: 275, column: 3, scope: !11834)
!11840 = !DILocation(line: 275, column: 18, scope: !11834)
!11841 = !DILocation(line: 275, column: 33, scope: !11834)
!11842 = !DILocation(line: 277, column: 10, scope: !11834)
!11843 = !DILocation(line: 280, column: 12, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11834, file: !11816, line: 280, column: 6)
!11845 = !DILocation(line: 285, column: 3, scope: !11834)
!11846 = !DILocation(line: 287, column: 18, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11848, file: !11816, line: 287, column: 8)
!11848 = distinct !DILexicalBlock(scope: !11834, file: !11816, line: 286, column: 3)
!11849 = !DILocation(line: 292, column: 1, scope: !11834)
!11850 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11816, file: !11816, line: 323, type: !6338, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !11851)
!11851 = !{!11852}
!11852 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11850, file: !11816, line: 323, type: !110)
!11853 = !DILocation(line: 0, scope: !11850)
!11854 = !DILocation(line: 326, column: 19, scope: !11850)
!11855 = !DILocation(line: 327, column: 1, scope: !11850)
!11856 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11816, file: !11816, line: 338, type: !11857, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !11860)
!11857 = !DISubroutineType(types: !11858)
!11858 = !{!11859, !110}
!11859 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !836, line: 201, baseType: !835)
!11860 = !{!11861, !11862, !11863, !11864, !11865}
!11861 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11856, file: !11816, line: 338, type: !110)
!11862 = !DILocalVariable(name: "timeout", scope: !11856, file: !11816, line: 340, type: !110)
!11863 = !DILocalVariable(name: "getlatency", scope: !11856, file: !11816, line: 341, type: !110)
!11864 = !DILocalVariable(name: "latency", scope: !11856, file: !11816, line: 342, type: !110)
!11865 = !DILocalVariable(name: "status", scope: !11856, file: !11816, line: 343, type: !11859)
!11866 = !DILocation(line: 0, scope: !11856)
!11867 = !DILocation(line: 347, column: 21, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11856, file: !11816, line: 347, column: 6)
!11869 = !DILocation(line: 347, column: 6, scope: !11856)
!11870 = !DILocation(line: 353, column: 8, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11872, file: !11816, line: 353, column: 8)
!11872 = distinct !DILexicalBlock(scope: !11868, file: !11816, line: 352, column: 3)
!11873 = !DILocation(line: 353, column: 40, scope: !11871)
!11874 = !DILocation(line: 353, column: 8, scope: !11872)
!11875 = !DILocation(line: 356, column: 26, scope: !11876)
!11876 = distinct !DILexicalBlock(scope: !11877, file: !11816, line: 356, column: 10)
!11877 = distinct !DILexicalBlock(scope: !11871, file: !11816, line: 354, column: 5)
!11878 = !DILocation(line: 356, column: 55, scope: !11876)
!11879 = !DILocation(line: 362, column: 55, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11877, file: !11816, line: 362, column: 10)
!11881 = !DILocation(line: 368, column: 55, scope: !11882)
!11882 = distinct !DILexicalBlock(scope: !11877, file: !11816, line: 368, column: 10)
!11883 = !DILocation(line: 374, column: 26, scope: !11884)
!11884 = distinct !DILexicalBlock(scope: !11877, file: !11816, line: 374, column: 10)
!11885 = !DILocation(line: 374, column: 55, scope: !11884)
!11886 = !DILocation(line: 380, column: 28, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11888, file: !11816, line: 380, column: 12)
!11888 = distinct !DILexicalBlock(scope: !11884, file: !11816, line: 379, column: 7)
!11889 = !DILocation(line: 380, column: 57, scope: !11887)
!11890 = !DILocation(line: 387, column: 8, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11872, file: !11816, line: 387, column: 8)
!11892 = !DILocation(line: 387, column: 40, scope: !11891)
!11893 = !DILocation(line: 387, column: 8, scope: !11872)
!11894 = !DILocation(line: 390, column: 26, scope: !11895)
!11895 = distinct !DILexicalBlock(scope: !11896, file: !11816, line: 390, column: 10)
!11896 = distinct !DILexicalBlock(scope: !11891, file: !11816, line: 388, column: 5)
!11897 = !DILocation(line: 390, column: 55, scope: !11895)
!11898 = !DILocation(line: 396, column: 26, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11896, file: !11816, line: 396, column: 10)
!11900 = !DILocation(line: 396, column: 55, scope: !11899)
!11901 = !DILocation(line: 402, column: 26, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !11896, file: !11816, line: 402, column: 10)
!11903 = !DILocation(line: 402, column: 55, scope: !11902)
!11904 = !DILocation(line: 407, column: 26, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11896, file: !11816, line: 407, column: 10)
!11906 = !DILocation(line: 407, column: 55, scope: !11905)
!11907 = !DILocation(line: 413, column: 28, scope: !11908)
!11908 = distinct !DILexicalBlock(scope: !11909, file: !11816, line: 413, column: 12)
!11909 = distinct !DILexicalBlock(scope: !11905, file: !11816, line: 412, column: 7)
!11910 = !DILocation(line: 413, column: 57, scope: !11908)
!11911 = !DILocation(line: 0, scope: !11872)
!11912 = !DILocation(line: 420, column: 8, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11872, file: !11816, line: 420, column: 8)
!11914 = !DILocation(line: 420, column: 40, scope: !11913)
!11915 = !DILocation(line: 420, column: 8, scope: !11872)
!11916 = !DILocation(line: 423, column: 26, scope: !11917)
!11917 = distinct !DILexicalBlock(scope: !11918, file: !11816, line: 423, column: 10)
!11918 = distinct !DILexicalBlock(scope: !11913, file: !11816, line: 421, column: 5)
!11919 = !DILocation(line: 423, column: 55, scope: !11917)
!11920 = !DILocation(line: 429, column: 26, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11918, file: !11816, line: 429, column: 10)
!11922 = !DILocation(line: 429, column: 55, scope: !11921)
!11923 = !DILocation(line: 435, column: 28, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11925, file: !11816, line: 435, column: 12)
!11925 = distinct !DILexicalBlock(scope: !11921, file: !11816, line: 434, column: 7)
!11926 = !DILocation(line: 435, column: 57, scope: !11924)
!11927 = !DILocation(line: 444, column: 5, scope: !11872)
!11928 = !DILocation(line: 448, column: 5, scope: !11872)
!11929 = !DILocation(line: 451, column: 18, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11872, file: !11816, line: 449, column: 5)
!11931 = !DILocation(line: 452, column: 12, scope: !11930)
!11932 = !DILocation(line: 453, column: 26, scope: !11872)
!11933 = !DILocation(line: 453, column: 38, scope: !11872)
!11934 = !DILocation(line: 453, column: 5, scope: !11930)
!11935 = distinct !{!11935, !11928, !11936}
!11936 = !DILocation(line: 453, column: 54, scope: !11872)
!11937 = !DILocation(line: 0, scope: !11868)
!11938 = !DILocation(line: 464, column: 3, scope: !11856)
!11939 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11940, file: !11940, line: 519, type: !3451, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !2100)
!11940 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11941 = !DILocation(line: 521, column: 21, scope: !11939)
!11942 = !DILocation(line: 521, column: 3, scope: !11939)
!11943 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6090, file: !6090, line: 1543, type: !6338, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !11944)
!11944 = !{!11945}
!11945 = !DILocalVariable(name: "Latency", arg: 1, scope: !11943, file: !6090, line: 1543, type: !110)
!11946 = !DILocation(line: 0, scope: !11943)
!11947 = !DILocation(line: 1545, column: 3, scope: !11943)
!11948 = !DILocation(line: 1546, column: 1, scope: !11943)
!11949 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6090, file: !6090, line: 1569, type: !3451, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !2100)
!11950 = !DILocation(line: 1571, column: 21, scope: !11949)
!11951 = !DILocation(line: 1571, column: 3, scope: !11949)
!11952 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11816, file: !11816, line: 483, type: !11953, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !11969)
!11953 = !DISubroutineType(types: !11954)
!11954 = !{!11859, !11955, !11962}
!11955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11956, size: 32)
!11956 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11823, line: 114, baseType: !11957)
!11957 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11823, line: 94, size: 96, elements: !11958)
!11958 = !{!11959, !11960, !11961}
!11959 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11957, file: !11823, line: 96, baseType: !110, size: 32)
!11960 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11957, file: !11823, line: 102, baseType: !110, size: 32, offset: 32)
!11961 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11957, file: !11823, line: 109, baseType: !110, size: 32, offset: 64)
!11962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11963, size: 32)
!11963 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11823, line: 139, baseType: !11964)
!11964 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11823, line: 119, size: 96, elements: !11965)
!11965 = !{!11966, !11967, !11968}
!11966 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11964, file: !11823, line: 121, baseType: !110, size: 32)
!11967 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11964, file: !11823, line: 127, baseType: !110, size: 32, offset: 32)
!11968 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11964, file: !11823, line: 133, baseType: !110, size: 32, offset: 64)
!11969 = !{!11970, !11971, !11972, !11973}
!11970 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11952, file: !11816, line: 483, type: !11955)
!11971 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11952, file: !11816, line: 484, type: !11962)
!11972 = !DILocalVariable(name: "status", scope: !11952, file: !11816, line: 486, type: !11859)
!11973 = !DILocalVariable(name: "pllfreq", scope: !11952, file: !11816, line: 487, type: !110)
!11974 = !DILocation(line: 0, scope: !11952)
!11975 = !DILocation(line: 490, column: 6, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11952, file: !11816, line: 490, column: 6)
!11977 = !DILocation(line: 490, column: 25, scope: !11976)
!11978 = !DILocation(line: 490, column: 6, scope: !11952)
!11979 = !DILocation(line: 493, column: 15, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11976, file: !11816, line: 491, column: 3)
!11981 = !DILocation(line: 496, column: 8, scope: !11982)
!11982 = distinct !DILexicalBlock(scope: !11980, file: !11816, line: 496, column: 8)
!11983 = !DILocation(line: 496, column: 29, scope: !11982)
!11984 = !DILocation(line: 496, column: 8, scope: !11980)
!11985 = !DILocation(line: 498, column: 7, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11982, file: !11816, line: 497, column: 5)
!11987 = !DILocation(line: 499, column: 7, scope: !11986)
!11988 = !DILocation(line: 499, column: 14, scope: !11986)
!11989 = !DILocation(line: 499, column: 35, scope: !11986)
!11990 = distinct !{!11990, !11987, !11991}
!11991 = !DILocation(line: 502, column: 7, scope: !11986)
!11992 = !DILocation(line: 506, column: 76, scope: !11980)
!11993 = !DILocation(line: 506, column: 103, scope: !11980)
!11994 = !DILocation(line: 507, column: 54, scope: !11980)
!11995 = !DILocation(line: 506, column: 5, scope: !11980)
!11996 = !DILocation(line: 510, column: 14, scope: !11980)
!11997 = !DILocation(line: 511, column: 3, scope: !11980)
!11998 = !DILocation(line: 0, scope: !11976)
!11999 = !DILocation(line: 518, column: 3, scope: !11952)
!12000 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11816, file: !11816, line: 642, type: !12001, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !12003)
!12001 = !DISubroutineType(types: !12002)
!12002 = !{!11859}
!12003 = !{!12004}
!12004 = !DILocalVariable(name: "status", scope: !12000, file: !11816, line: 644, type: !11859)
!12005 = !DILocation(line: 0, scope: !12000)
!12006 = !DILocation(line: 647, column: 6, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !12000, file: !11816, line: 647, column: 6)
!12008 = !DILocation(line: 647, column: 27, scope: !12007)
!12009 = !DILocation(line: 655, column: 6, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !12000, file: !11816, line: 655, column: 6)
!12011 = !DILocation(line: 655, column: 30, scope: !12010)
!12012 = !DILocation(line: 663, column: 6, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !12000, file: !11816, line: 663, column: 6)
!12014 = !DILocation(line: 663, column: 30, scope: !12013)
!12015 = !DILocation(line: 663, column: 6, scope: !12000)
!12016 = !DILocation(line: 669, column: 3, scope: !12000)
!12017 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11816, file: !11816, line: 611, type: !12018, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !12020)
!12018 = !DISubroutineType(types: !12019)
!12019 = !{!110, !110, !11955}
!12020 = !{!12021, !12022, !12023}
!12021 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12017, file: !11816, line: 611, type: !110)
!12022 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12017, file: !11816, line: 611, type: !11955)
!12023 = !DILocalVariable(name: "pllfreq", scope: !12017, file: !11816, line: 613, type: !110)
!12024 = !DILocation(line: 0, scope: !12017)
!12025 = !DILocation(line: 622, column: 56, scope: !12017)
!12026 = !DILocation(line: 622, column: 61, scope: !12017)
!12027 = !DILocation(line: 622, column: 32, scope: !12017)
!12028 = !DILocation(line: 626, column: 45, scope: !12017)
!12029 = !DILocation(line: 626, column: 50, scope: !12017)
!12030 = !DILocation(line: 626, column: 21, scope: !12017)
!12031 = !DILocation(line: 630, column: 47, scope: !12017)
!12032 = !DILocation(line: 630, column: 82, scope: !12017)
!12033 = !DILocation(line: 630, column: 21, scope: !12017)
!12034 = !DILocation(line: 633, column: 3, scope: !12017)
!12035 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8225, file: !8225, line: 3007, type: !3451, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !2100)
!12036 = !DILocation(line: 3009, column: 11, scope: !12035)
!12037 = !DILocation(line: 3009, column: 44, scope: !12035)
!12038 = !DILocation(line: 3009, column: 3, scope: !12035)
!12039 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8225, file: !8225, line: 2987, type: !3169, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !2100)
!12040 = !DILocation(line: 2989, column: 3, scope: !12039)
!12041 = !DILocation(line: 2990, column: 1, scope: !12039)
!12042 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8225, file: !8225, line: 4304, type: !8359, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !12043)
!12043 = !{!12044, !12045, !12046, !12047}
!12044 = !DILocalVariable(name: "Source", arg: 1, scope: !12042, file: !8225, line: 4304, type: !110)
!12045 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12042, file: !8225, line: 4304, type: !110)
!12046 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12042, file: !8225, line: 4304, type: !110)
!12047 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12042, file: !8225, line: 4304, type: !110)
!12048 = !DILocation(line: 0, scope: !12042)
!12049 = !DILocation(line: 4306, column: 3, scope: !12042)
!12050 = !DILocation(line: 4308, column: 3, scope: !12042)
!12051 = !DILocation(line: 4310, column: 3, scope: !12042)
!12052 = !DILocation(line: 4312, column: 1, scope: !12042)
!12053 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11816, file: !11816, line: 681, type: !12054, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !12056)
!12054 = !DISubroutineType(types: !12055)
!12055 = !{!11859, !110, !11962}
!12056 = !{!12057, !12058, !12059, !12060}
!12057 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12053, file: !11816, line: 681, type: !110)
!12058 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12053, file: !11816, line: 681, type: !11962)
!12059 = !DILocalVariable(name: "status", scope: !12053, file: !11816, line: 683, type: !11859)
!12060 = !DILocalVariable(name: "hclk_frequency", scope: !12053, file: !11816, line: 684, type: !110)
!12061 = !DILocation(line: 0, scope: !12053)
!12062 = !DILocation(line: 691, column: 20, scope: !12053)
!12063 = !DILocation(line: 694, column: 6, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !12053, file: !11816, line: 694, column: 6)
!12065 = !DILocation(line: 694, column: 22, scope: !12064)
!12066 = !DILocation(line: 694, column: 6, scope: !12053)
!12067 = !DILocation(line: 697, column: 14, scope: !12068)
!12068 = distinct !DILexicalBlock(scope: !12064, file: !11816, line: 695, column: 3)
!12069 = !DILocation(line: 701, column: 13, scope: !12070)
!12070 = distinct !DILexicalBlock(scope: !12053, file: !11816, line: 701, column: 6)
!12071 = !DILocation(line: 701, column: 6, scope: !12053)
!12072 = !DILocation(line: 704, column: 5, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12070, file: !11816, line: 702, column: 3)
!12074 = !DILocation(line: 705, column: 5, scope: !12073)
!12075 = !DILocation(line: 705, column: 12, scope: !12073)
!12076 = !DILocation(line: 705, column: 33, scope: !12073)
!12077 = distinct !{!12077, !12074, !12078}
!12078 = !DILocation(line: 708, column: 5, scope: !12073)
!12079 = !DILocation(line: 711, column: 49, scope: !12073)
!12080 = !DILocation(line: 711, column: 5, scope: !12073)
!12081 = !DILocation(line: 712, column: 5, scope: !12073)
!12082 = !DILocation(line: 713, column: 5, scope: !12073)
!12083 = !DILocation(line: 713, column: 12, scope: !12073)
!12084 = !DILocation(line: 713, column: 37, scope: !12073)
!12085 = distinct !{!12085, !12082, !12086}
!12086 = !DILocation(line: 716, column: 5, scope: !12073)
!12087 = !DILocation(line: 719, column: 50, scope: !12073)
!12088 = !DILocation(line: 719, column: 5, scope: !12073)
!12089 = !DILocation(line: 720, column: 50, scope: !12073)
!12090 = !DILocation(line: 720, column: 5, scope: !12073)
!12091 = !DILocation(line: 721, column: 3, scope: !12073)
!12092 = !DILocation(line: 724, column: 6, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12053, file: !11816, line: 724, column: 6)
!12094 = !DILocation(line: 724, column: 22, scope: !12093)
!12095 = !DILocation(line: 724, column: 6, scope: !12053)
!12096 = !DILocation(line: 727, column: 14, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12093, file: !11816, line: 725, column: 3)
!12098 = !DILocation(line: 728, column: 3, scope: !12097)
!12099 = !DILocation(line: 731, column: 13, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12053, file: !11816, line: 731, column: 6)
!12101 = !DILocation(line: 731, column: 6, scope: !12053)
!12102 = !DILocation(line: 733, column: 5, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !12100, file: !11816, line: 732, column: 3)
!12104 = !DILocation(line: 734, column: 3, scope: !12103)
!12105 = !DILocation(line: 736, column: 3, scope: !12053)
!12106 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8225, file: !8225, line: 4184, type: !3169, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !2100)
!12107 = !DILocation(line: 4186, column: 3, scope: !12106)
!12108 = !DILocation(line: 4187, column: 1, scope: !12106)
!12109 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8225, file: !8225, line: 4205, type: !3451, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !2100)
!12110 = !DILocation(line: 4207, column: 11, scope: !12109)
!12111 = !DILocation(line: 4207, column: 44, scope: !12109)
!12112 = !DILocation(line: 4207, column: 3, scope: !12109)
!12113 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8225, file: !8225, line: 3224, type: !6338, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !12114)
!12114 = !{!12115}
!12115 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12113, file: !8225, line: 3224, type: !110)
!12116 = !DILocation(line: 0, scope: !12113)
!12117 = !DILocation(line: 3226, column: 3, scope: !12113)
!12118 = !DILocation(line: 3227, column: 1, scope: !12113)
!12119 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8225, file: !8225, line: 3188, type: !6338, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !12120)
!12120 = !{!12121}
!12121 = !DILocalVariable(name: "Source", arg: 1, scope: !12119, file: !8225, line: 3188, type: !110)
!12122 = !DILocation(line: 0, scope: !12119)
!12123 = !DILocation(line: 3190, column: 3, scope: !12119)
!12124 = !DILocation(line: 3191, column: 1, scope: !12119)
!12125 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8225, file: !8225, line: 3204, type: !3451, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !2100)
!12126 = !DILocation(line: 3206, column: 21, scope: !12125)
!12127 = !DILocation(line: 3206, column: 3, scope: !12125)
!12128 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8225, file: !8225, line: 3240, type: !6338, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !12129)
!12129 = !{!12130}
!12130 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12128, file: !8225, line: 3240, type: !110)
!12131 = !DILocation(line: 0, scope: !12128)
!12132 = !DILocation(line: 3242, column: 3, scope: !12128)
!12133 = !DILocation(line: 3243, column: 1, scope: !12128)
!12134 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8225, file: !8225, line: 3256, type: !6338, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !12135)
!12135 = !{!12136}
!12136 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12134, file: !8225, line: 3256, type: !110)
!12137 = !DILocation(line: 0, scope: !12134)
!12138 = !DILocation(line: 3258, column: 3, scope: !12134)
!12139 = !DILocation(line: 3259, column: 1, scope: !12134)
!12140 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !8225, file: !8225, line: 5969, type: !3451, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !2100)
!12141 = !DILocation(line: 5971, column: 11, scope: !12140)
!12142 = !DILocation(line: 5971, column: 47, scope: !12140)
!12143 = !DILocation(line: 5971, column: 3, scope: !12140)
!12144 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8225, file: !8225, line: 5153, type: !3451, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !2100)
!12145 = !DILocation(line: 5155, column: 11, scope: !12144)
!12146 = !DILocation(line: 5155, column: 47, scope: !12144)
!12147 = !DILocation(line: 5155, column: 3, scope: !12144)
!12148 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11816, file: !11816, line: 540, type: !12149, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !12151)
!12149 = !DISubroutineType(types: !12150)
!12150 = !{!11859, !110, !110, !11955, !11962}
!12151 = !{!12152, !12153, !12154, !12155, !12156, !12157}
!12152 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12148, file: !11816, line: 540, type: !110)
!12153 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12148, file: !11816, line: 540, type: !110)
!12154 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12148, file: !11816, line: 541, type: !11955)
!12155 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12148, file: !11816, line: 541, type: !11962)
!12156 = !DILocalVariable(name: "status", scope: !12148, file: !11816, line: 543, type: !11859)
!12157 = !DILocalVariable(name: "pllfreq", scope: !12148, file: !11816, line: 544, type: !110)
!12158 = !DILocation(line: 0, scope: !12148)
!12159 = !DILocation(line: 551, column: 6, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12148, file: !11816, line: 551, column: 6)
!12161 = !DILocation(line: 551, column: 25, scope: !12160)
!12162 = !DILocation(line: 551, column: 6, scope: !12148)
!12163 = !DILocation(line: 554, column: 15, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12160, file: !11816, line: 552, column: 3)
!12165 = !DILocation(line: 557, column: 8, scope: !12166)
!12166 = distinct !DILexicalBlock(scope: !12164, file: !11816, line: 557, column: 8)
!12167 = !DILocation(line: 557, column: 29, scope: !12166)
!12168 = !DILocation(line: 557, column: 8, scope: !12164)
!12169 = !DILocation(line: 560, column: 20, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12171, file: !11816, line: 560, column: 10)
!12171 = distinct !DILexicalBlock(scope: !12166, file: !11816, line: 558, column: 5)
!12172 = !DILocation(line: 560, column: 10, scope: !12171)
!12173 = !DILocation(line: 562, column: 9, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12170, file: !11816, line: 561, column: 7)
!12175 = !DILocation(line: 563, column: 7, scope: !12174)
!12176 = !DILocation(line: 566, column: 9, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12170, file: !11816, line: 565, column: 7)
!12178 = !DILocation(line: 570, column: 7, scope: !12171)
!12179 = !DILocation(line: 571, column: 7, scope: !12171)
!12180 = !DILocation(line: 571, column: 14, scope: !12171)
!12181 = !DILocation(line: 571, column: 35, scope: !12171)
!12182 = distinct !{!12182, !12179, !12183}
!12183 = !DILocation(line: 574, column: 7, scope: !12171)
!12184 = !DILocation(line: 578, column: 76, scope: !12164)
!12185 = !DILocation(line: 578, column: 103, scope: !12164)
!12186 = !DILocation(line: 579, column: 54, scope: !12164)
!12187 = !DILocation(line: 578, column: 5, scope: !12164)
!12188 = !DILocation(line: 582, column: 14, scope: !12164)
!12189 = !DILocation(line: 583, column: 3, scope: !12164)
!12190 = !DILocation(line: 0, scope: !12160)
!12191 = !DILocation(line: 590, column: 3, scope: !12148)
!12192 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8225, file: !8225, line: 2969, type: !3451, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !2100)
!12193 = !DILocation(line: 2971, column: 11, scope: !12192)
!12194 = !DILocation(line: 2971, column: 44, scope: !12192)
!12195 = !DILocation(line: 2971, column: 3, scope: !12192)
!12196 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8225, file: !8225, line: 2929, type: !3169, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !2100)
!12197 = !DILocation(line: 2931, column: 3, scope: !12196)
!12198 = !DILocation(line: 2932, column: 1, scope: !12196)
!12199 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8225, file: !8225, line: 2939, type: !3169, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !2100)
!12200 = !DILocation(line: 2941, column: 3, scope: !12199)
!12201 = !DILocation(line: 2942, column: 1, scope: !12199)
!12202 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8225, file: !8225, line: 2949, type: !3169, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3062, retainedNodes: !2100)
!12203 = !DILocation(line: 2951, column: 3, scope: !12202)
!12204 = !DILocation(line: 2952, column: 1, scope: !12202)
!12205 = distinct !DISubprogram(name: "z_device_state_init", scope: !12206, file: !12206, line: 23, type: !3169, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !12207)
!12206 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12207 = !{!12208}
!12208 = !DILocalVariable(name: "dev", scope: !12205, file: !12206, line: 25, type: !12209)
!12209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12210, size: 32)
!12210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12211)
!12211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !321, line: 378, size: 192, elements: !12212)
!12212 = !{!12213, !12214, !12215, !12216, !12222, !12223}
!12213 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12211, file: !321, line: 380, baseType: !324, size: 32)
!12214 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12211, file: !321, line: 382, baseType: !13, size: 32, offset: 32)
!12215 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12211, file: !321, line: 384, baseType: !13, size: 32, offset: 64)
!12216 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12211, file: !321, line: 386, baseType: !12217, size: 32, offset: 96)
!12217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12218, size: 32)
!12218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !321, line: 351, size: 16, elements: !12219)
!12219 = !{!12220, !12221}
!12220 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12218, file: !321, line: 359, baseType: !167, size: 8)
!12221 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12218, file: !321, line: 364, baseType: !334, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12222 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12211, file: !321, line: 388, baseType: !108, size: 32, offset: 128)
!12223 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12211, file: !321, line: 396, baseType: !337, size: 32, offset: 160)
!12224 = !DILocation(line: 0, scope: !12205)
!12225 = !DILocation(line: 31, column: 1, scope: !12205)
!12226 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12206, file: !12206, line: 33, type: !12227, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !12229)
!12227 = !DISubroutineType(types: !12228)
!12228 = !{!12209, !324}
!12229 = !{!12230, !12231}
!12230 = !DILocalVariable(name: "name", arg: 1, scope: !12226, file: !12206, line: 33, type: !324)
!12231 = !DILocalVariable(name: "dev", scope: !12226, file: !12206, line: 35, type: !12209)
!12232 = !DILocation(line: 0, scope: !12226)
!12233 = !DILocation(line: 40, column: 12, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !12226, file: !12206, line: 40, column: 6)
!12235 = !DILocation(line: 40, column: 21, scope: !12234)
!12236 = !DILocation(line: 40, column: 25, scope: !12234)
!12237 = !DILocation(line: 40, column: 33, scope: !12234)
!12238 = !DILocation(line: 40, column: 6, scope: !12226)
!12239 = !DILocation(line: 55, column: 2, scope: !12240)
!12240 = distinct !DILexicalBlock(scope: !12226, file: !12206, line: 55, column: 2)
!12241 = !DILocation(line: 50, column: 7, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12243, file: !12206, line: 50, column: 7)
!12243 = distinct !DILexicalBlock(scope: !12244, file: !12206, line: 49, column: 57)
!12244 = distinct !DILexicalBlock(scope: !12245, file: !12206, line: 49, column: 2)
!12245 = distinct !DILexicalBlock(scope: !12226, file: !12206, line: 49, column: 2)
!12246 = !DILocation(line: 50, column: 30, scope: !12242)
!12247 = !DILocation(line: 50, column: 39, scope: !12242)
!12248 = !DILocation(line: 50, column: 44, scope: !12242)
!12249 = !DILocation(line: 50, column: 7, scope: !12243)
!12250 = !DILocation(line: 49, column: 53, scope: !12244)
!12251 = !DILocation(line: 49, column: 33, scope: !12244)
!12252 = !DILocation(line: 49, column: 2, scope: !12245)
!12253 = distinct !{!12253, !12252, !12254}
!12254 = !DILocation(line: 53, column: 2, scope: !12245)
!12255 = !DILocation(line: 56, column: 7, scope: !12256)
!12256 = distinct !DILexicalBlock(scope: !12257, file: !12206, line: 56, column: 7)
!12257 = distinct !DILexicalBlock(scope: !12258, file: !12206, line: 55, column: 57)
!12258 = distinct !DILexicalBlock(scope: !12240, file: !12206, line: 55, column: 2)
!12259 = !DILocation(line: 56, column: 30, scope: !12256)
!12260 = !DILocation(line: 56, column: 52, scope: !12256)
!12261 = !DILocation(line: 56, column: 34, scope: !12256)
!12262 = !DILocation(line: 56, column: 58, scope: !12256)
!12263 = !DILocation(line: 56, column: 7, scope: !12257)
!12264 = !DILocation(line: 55, column: 53, scope: !12258)
!12265 = !DILocation(line: 55, column: 33, scope: !12258)
!12266 = distinct !{!12266, !12239, !12267}
!12267 = !DILocation(line: 59, column: 2, scope: !12240)
!12268 = !DILocation(line: 62, column: 1, scope: !12226)
!12269 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12206, file: !12206, line: 93, type: !12270, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !12272)
!12270 = !DISubroutineType(types: !12271)
!12271 = !{!334, !12209}
!12272 = !{!12273}
!12273 = !DILocalVariable(name: "dev", arg: 1, scope: !12269, file: !12206, line: 93, type: !12209)
!12274 = !DILocation(line: 0, scope: !12269)
!12275 = !DILocation(line: 99, column: 10, scope: !12276)
!12276 = distinct !DILexicalBlock(scope: !12269, file: !12206, line: 99, column: 6)
!12277 = !DILocation(line: 99, column: 6, scope: !12269)
!12278 = !DILocation(line: 103, column: 14, scope: !12269)
!12279 = !DILocation(line: 103, column: 21, scope: !12269)
!12280 = !DILocation(line: 103, column: 33, scope: !12269)
!12281 = !DILocation(line: 103, column: 49, scope: !12269)
!12282 = !DILocation(line: 103, column: 58, scope: !12269)
!12283 = !DILocation(line: 104, column: 1, scope: !12269)
!12284 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12206, file: !12206, line: 87, type: !12285, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !12288)
!12285 = !DISubroutineType(types: !12286)
!12286 = !{!235, !12287}
!12287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12209, size: 32)
!12288 = !{!12289}
!12289 = !DILocalVariable(name: "devices", arg: 1, scope: !12284, file: !12206, line: 87, type: !12287)
!12290 = !DILocation(line: 0, scope: !12284)
!12291 = !DILocation(line: 89, column: 11, scope: !12284)
!12292 = !DILocation(line: 90, column: 2, scope: !12284)
!12293 = distinct !DISubprogram(name: "device_required_foreach", scope: !12206, file: !12206, line: 125, type: !12294, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !12300)
!12294 = !DISubroutineType(types: !12295)
!12295 = !{!109, !12209, !12296, !108}
!12296 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !321, line: 471, baseType: !12297)
!12297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12298, size: 32)
!12298 = !DISubroutineType(types: !12299)
!12299 = !{!109, !12209, !108}
!12300 = !{!12301, !12302, !12303, !12304, !12305}
!12301 = !DILocalVariable(name: "dev", arg: 1, scope: !12293, file: !12206, line: 125, type: !12209)
!12302 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12293, file: !12206, line: 126, type: !12296)
!12303 = !DILocalVariable(name: "context", arg: 3, scope: !12293, file: !12206, line: 127, type: !108)
!12304 = !DILocalVariable(name: "handle_count", scope: !12293, file: !12206, line: 129, type: !235)
!12305 = !DILocalVariable(name: "handles", scope: !12293, file: !12206, line: 130, type: !337)
!12306 = !DILocation(line: 0, scope: !12293)
!12307 = !DILocation(line: 129, column: 2, scope: !12293)
!12308 = !DILocation(line: 129, column: 9, scope: !12293)
!12309 = !DILocation(line: 130, column: 35, scope: !12293)
!12310 = !DILocation(line: 132, column: 33, scope: !12293)
!12311 = !DILocation(line: 132, column: 9, scope: !12293)
!12312 = !DILocation(line: 133, column: 1, scope: !12293)
!12313 = !DILocation(line: 132, column: 2, scope: !12293)
!12314 = distinct !DISubprogram(name: "device_required_handles_get", scope: !321, file: !321, line: 493, type: !12315, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !12317)
!12315 = !DISubroutineType(types: !12316)
!12316 = !{!337, !12209, !2641}
!12317 = !{!12318, !12319, !12320, !12321}
!12318 = !DILocalVariable(name: "dev", arg: 1, scope: !12314, file: !321, line: 493, type: !12209)
!12319 = !DILocalVariable(name: "count", arg: 2, scope: !12314, file: !321, line: 493, type: !2641)
!12320 = !DILocalVariable(name: "rv", scope: !12314, file: !321, line: 495, type: !337)
!12321 = !DILocalVariable(name: "i", scope: !12322, file: !321, line: 498, type: !235)
!12322 = distinct !DILexicalBlock(scope: !12323, file: !321, line: 497, column: 18)
!12323 = distinct !DILexicalBlock(scope: !12314, file: !321, line: 497, column: 6)
!12324 = !DILocation(line: 0, scope: !12314)
!12325 = !DILocation(line: 495, column: 35, scope: !12314)
!12326 = !DILocation(line: 497, column: 9, scope: !12323)
!12327 = !DILocation(line: 497, column: 6, scope: !12314)
!12328 = !DILocation(line: 0, scope: !12322)
!12329 = !DILocation(line: 500, column: 11, scope: !12322)
!12330 = !DILocation(line: 500, column: 40, scope: !12322)
!12331 = !DILocation(line: 502, column: 4, scope: !12332)
!12332 = distinct !DILexicalBlock(scope: !12322, file: !321, line: 501, column: 40)
!12333 = distinct !{!12333, !12334, !12335}
!12334 = !DILocation(line: 500, column: 3, scope: !12322)
!12335 = !DILocation(line: 503, column: 3, scope: !12322)
!12336 = !DILocation(line: 504, column: 10, scope: !12322)
!12337 = !DILocation(line: 505, column: 2, scope: !12322)
!12338 = !DILocation(line: 507, column: 2, scope: !12314)
!12339 = distinct !DISubprogram(name: "device_visitor", scope: !12206, file: !12206, line: 106, type: !12340, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !12342)
!12340 = !DISubroutineType(types: !12341)
!12341 = !{!109, !337, !235, !12296, !108}
!12342 = !{!12343, !12344, !12345, !12346, !12347, !12349, !12352, !12353}
!12343 = !DILocalVariable(name: "handles", arg: 1, scope: !12339, file: !12206, line: 106, type: !337)
!12344 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12339, file: !12206, line: 107, type: !235)
!12345 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12339, file: !12206, line: 108, type: !12296)
!12346 = !DILocalVariable(name: "context", arg: 4, scope: !12339, file: !12206, line: 109, type: !108)
!12347 = !DILocalVariable(name: "i", scope: !12348, file: !12206, line: 112, type: !235)
!12348 = distinct !DILexicalBlock(scope: !12339, file: !12206, line: 112, column: 2)
!12349 = !DILocalVariable(name: "dh", scope: !12350, file: !12206, line: 113, type: !339)
!12350 = distinct !DILexicalBlock(scope: !12351, file: !12206, line: 112, column: 44)
!12351 = distinct !DILexicalBlock(scope: !12348, file: !12206, line: 112, column: 2)
!12352 = !DILocalVariable(name: "rdev", scope: !12350, file: !12206, line: 114, type: !12209)
!12353 = !DILocalVariable(name: "rc", scope: !12350, file: !12206, line: 115, type: !109)
!12354 = !DILocation(line: 0, scope: !12339)
!12355 = !DILocation(line: 0, scope: !12348)
!12356 = !DILocation(line: 112, column: 23, scope: !12351)
!12357 = !DILocation(line: 112, column: 2, scope: !12348)
!12358 = distinct !{!12358, !12357, !12359}
!12359 = !DILocation(line: 120, column: 2, scope: !12348)
!12360 = !DILocation(line: 113, column: 24, scope: !12350)
!12361 = !DILocation(line: 0, scope: !12350)
!12362 = !DILocation(line: 114, column: 31, scope: !12350)
!12363 = !DILocation(line: 115, column: 12, scope: !12350)
!12364 = !DILocation(line: 117, column: 10, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12350, file: !12206, line: 117, column: 7)
!12366 = !DILocation(line: 112, column: 39, scope: !12351)
!12367 = !DILocation(line: 123, column: 1, scope: !12339)
!12368 = distinct !DISubprogram(name: "device_from_handle", scope: !321, file: !321, line: 439, type: !12369, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !12371)
!12369 = !DISubroutineType(types: !12370)
!12370 = !{!12209, !339}
!12371 = !{!12372, !12373, !12374}
!12372 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12368, file: !321, line: 439, type: !339)
!12373 = !DILocalVariable(name: "dev", scope: !12368, file: !321, line: 443, type: !12209)
!12374 = !DILocalVariable(name: "numdev", scope: !12368, file: !321, line: 444, type: !235)
!12375 = !DILocation(line: 0, scope: !12368)
!12376 = !DILocation(line: 446, column: 7, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12368, file: !321, line: 446, column: 6)
!12378 = !DILocation(line: 446, column: 18, scope: !12377)
!12379 = !DILocation(line: 446, column: 23, scope: !12377)
!12380 = !DILocation(line: 450, column: 2, scope: !12368)
!12381 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12206, file: !12206, line: 135, type: !12294, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !12382)
!12382 = !{!12383, !12384, !12385, !12386, !12387}
!12383 = !DILocalVariable(name: "dev", arg: 1, scope: !12381, file: !12206, line: 135, type: !12209)
!12384 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12381, file: !12206, line: 136, type: !12296)
!12385 = !DILocalVariable(name: "context", arg: 3, scope: !12381, file: !12206, line: 137, type: !108)
!12386 = !DILocalVariable(name: "handle_count", scope: !12381, file: !12206, line: 139, type: !235)
!12387 = !DILocalVariable(name: "handles", scope: !12381, file: !12206, line: 140, type: !337)
!12388 = !DILocation(line: 0, scope: !12381)
!12389 = !DILocation(line: 139, column: 2, scope: !12381)
!12390 = !DILocation(line: 139, column: 9, scope: !12381)
!12391 = !DILocation(line: 140, column: 35, scope: !12381)
!12392 = !DILocation(line: 142, column: 33, scope: !12381)
!12393 = !DILocation(line: 142, column: 9, scope: !12381)
!12394 = !DILocation(line: 143, column: 1, scope: !12381)
!12395 = !DILocation(line: 142, column: 2, scope: !12381)
!12396 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !321, file: !321, line: 573, type: !12315, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3129, retainedNodes: !12397)
!12397 = !{!12398, !12399, !12400, !12401, !12402}
!12398 = !DILocalVariable(name: "dev", arg: 1, scope: !12396, file: !321, line: 573, type: !12209)
!12399 = !DILocalVariable(name: "count", arg: 2, scope: !12396, file: !321, line: 573, type: !2641)
!12400 = !DILocalVariable(name: "rv", scope: !12396, file: !321, line: 575, type: !337)
!12401 = !DILocalVariable(name: "region", scope: !12396, file: !321, line: 576, type: !235)
!12402 = !DILocalVariable(name: "i", scope: !12396, file: !321, line: 577, type: !235)
!12403 = !DILocation(line: 0, scope: !12396)
!12404 = !DILocation(line: 575, column: 35, scope: !12396)
!12405 = !DILocation(line: 579, column: 9, scope: !12406)
!12406 = distinct !DILexicalBlock(scope: !12396, file: !321, line: 579, column: 6)
!12407 = !DILocation(line: 579, column: 6, scope: !12396)
!12408 = !DILocation(line: 582, column: 8, scope: !12409)
!12409 = distinct !DILexicalBlock(scope: !12410, file: !321, line: 582, column: 8)
!12410 = distinct !DILexicalBlock(scope: !12411, file: !321, line: 581, column: 23)
!12411 = distinct !DILexicalBlock(scope: !12406, file: !321, line: 579, column: 18)
!12412 = !DILocation(line: 582, column: 12, scope: !12409)
!12413 = !DILocation(line: 585, column: 6, scope: !12410)
!12414 = !DILocation(line: 0, scope: !12411)
!12415 = !DILocation(line: 581, column: 17, scope: !12411)
!12416 = !DILocation(line: 581, column: 3, scope: !12411)
!12417 = !DILocation(line: 588, column: 10, scope: !12411)
!12418 = !DILocation(line: 588, column: 16, scope: !12411)
!12419 = !DILocation(line: 589, column: 4, scope: !12420)
!12420 = distinct !DILexicalBlock(scope: !12411, file: !321, line: 588, column: 39)
!12421 = !DILocation(line: 588, column: 3, scope: !12411)
!12422 = distinct !{!12422, !12421, !12423}
!12423 = !DILocation(line: 590, column: 3, scope: !12411)
!12424 = !DILocation(line: 591, column: 10, scope: !12411)
!12425 = !DILocation(line: 592, column: 2, scope: !12411)
!12426 = !DILocation(line: 575, column: 25, scope: !12396)
!12427 = !DILocation(line: 594, column: 2, scope: !12396)
!12428 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1882, file: !1882, line: 49, type: !12429, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1879, retainedNodes: !2100)
!12429 = !DISubroutineType(types: !12430)
!12430 = !{!2635}
!12431 = !DILocation(line: 51, column: 10, scope: !12428)
!12432 = !DILocation(line: 51, column: 20, scope: !12428)
!12433 = !DILocation(line: 51, column: 2, scope: !12428)
!12434 = distinct !DISubprogram(name: "coredump", scope: !3136, file: !3136, line: 209, type: !12435, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !12592)
!12435 = !DISubroutineType(types: !12436)
!12436 = !{null, !32, !12437, !12481}
!12437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12438, size: 32)
!12438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12439)
!12439 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2768, line: 141, baseType: !12440)
!12440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2768, line: 97, size: 256, elements: !12441)
!12441 = !{!12442}
!12442 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12440, file: !2768, line: 107, baseType: !12443, size: 256)
!12443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2768, line: 98, size: 256, elements: !12444)
!12444 = !{!12445, !12450, !12455, !12460, !12465, !12470, !12475, !12480}
!12445 = !DIDerivedType(tag: DW_TAG_member, scope: !12443, file: !2768, line: 99, baseType: !12446, size: 32)
!12446 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12443, file: !2768, line: 99, size: 32, elements: !12447)
!12447 = !{!12448, !12449}
!12448 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12446, file: !2768, line: 99, baseType: !110, size: 32)
!12449 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12446, file: !2768, line: 99, baseType: !110, size: 32)
!12450 = !DIDerivedType(tag: DW_TAG_member, scope: !12443, file: !2768, line: 100, baseType: !12451, size: 32, offset: 32)
!12451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12443, file: !2768, line: 100, size: 32, elements: !12452)
!12452 = !{!12453, !12454}
!12453 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12451, file: !2768, line: 100, baseType: !110, size: 32)
!12454 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12451, file: !2768, line: 100, baseType: !110, size: 32)
!12455 = !DIDerivedType(tag: DW_TAG_member, scope: !12443, file: !2768, line: 101, baseType: !12456, size: 32, offset: 64)
!12456 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12443, file: !2768, line: 101, size: 32, elements: !12457)
!12457 = !{!12458, !12459}
!12458 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12456, file: !2768, line: 101, baseType: !110, size: 32)
!12459 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12456, file: !2768, line: 101, baseType: !110, size: 32)
!12460 = !DIDerivedType(tag: DW_TAG_member, scope: !12443, file: !2768, line: 102, baseType: !12461, size: 32, offset: 96)
!12461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12443, file: !2768, line: 102, size: 32, elements: !12462)
!12462 = !{!12463, !12464}
!12463 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12461, file: !2768, line: 102, baseType: !110, size: 32)
!12464 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12461, file: !2768, line: 102, baseType: !110, size: 32)
!12465 = !DIDerivedType(tag: DW_TAG_member, scope: !12443, file: !2768, line: 103, baseType: !12466, size: 32, offset: 128)
!12466 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12443, file: !2768, line: 103, size: 32, elements: !12467)
!12467 = !{!12468, !12469}
!12468 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12466, file: !2768, line: 103, baseType: !110, size: 32)
!12469 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12466, file: !2768, line: 103, baseType: !110, size: 32)
!12470 = !DIDerivedType(tag: DW_TAG_member, scope: !12443, file: !2768, line: 104, baseType: !12471, size: 32, offset: 160)
!12471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12443, file: !2768, line: 104, size: 32, elements: !12472)
!12472 = !{!12473, !12474}
!12473 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12471, file: !2768, line: 104, baseType: !110, size: 32)
!12474 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12471, file: !2768, line: 104, baseType: !110, size: 32)
!12475 = !DIDerivedType(tag: DW_TAG_member, scope: !12443, file: !2768, line: 105, baseType: !12476, size: 32, offset: 192)
!12476 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12443, file: !2768, line: 105, size: 32, elements: !12477)
!12477 = !{!12478, !12479}
!12478 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12476, file: !2768, line: 105, baseType: !110, size: 32)
!12479 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12476, file: !2768, line: 105, baseType: !110, size: 32)
!12480 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12443, file: !2768, line: 106, baseType: !110, size: 32, offset: 224)
!12481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12482, size: 32)
!12482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !145, line: 245, size: 1408, elements: !12483)
!12483 = !{!12484, !12542, !12554, !12555, !12556, !12563, !12564, !12565, !12566, !12572, !12587}
!12484 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12482, file: !145, line: 247, baseType: !12485, size: 384)
!12485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !145, line: 57, size: 384, elements: !12486)
!12486 = !{!12487, !12511, !12518, !12519, !12520, !12529, !12530, !12531}
!12487 = !DIDerivedType(tag: DW_TAG_member, scope: !12485, file: !145, line: 60, baseType: !12488, size: 64)
!12488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12485, file: !145, line: 60, size: 64, elements: !12489)
!12489 = !{!12490, !12505}
!12490 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12488, file: !145, line: 61, baseType: !12491, size: 64)
!12491 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !128, line: 49, baseType: !12492)
!12492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !128, line: 37, size: 64, elements: !12493)
!12493 = !{!12494, !12500}
!12494 = !DIDerivedType(tag: DW_TAG_member, scope: !12492, file: !128, line: 38, baseType: !12495, size: 32)
!12495 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12492, file: !128, line: 38, size: 32, elements: !12496)
!12496 = !{!12497, !12499}
!12497 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12495, file: !128, line: 39, baseType: !12498, size: 32)
!12498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12492, size: 32)
!12499 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12495, file: !128, line: 40, baseType: !12498, size: 32)
!12500 = !DIDerivedType(tag: DW_TAG_member, scope: !12492, file: !128, line: 42, baseType: !12501, size: 32, offset: 32)
!12501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12492, file: !128, line: 42, size: 32, elements: !12502)
!12502 = !{!12503, !12504}
!12503 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12501, file: !128, line: 43, baseType: !12498, size: 32)
!12504 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12501, file: !128, line: 44, baseType: !12498, size: 32)
!12505 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12488, file: !145, line: 62, baseType: !12506, size: 64)
!12506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !157, line: 49, size: 64, elements: !12507)
!12507 = !{!12508}
!12508 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12506, file: !157, line: 50, baseType: !12509, size: 64)
!12509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12510, size: 64, elements: !162)
!12510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12506, size: 32)
!12511 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12485, file: !145, line: 68, baseType: !12512, size: 32, offset: 64)
!12512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12513, size: 32)
!12513 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !123, line: 233, baseType: !12514)
!12514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !123, line: 231, size: 64, elements: !12515)
!12515 = !{!12516}
!12516 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12514, file: !123, line: 232, baseType: !12517, size: 64)
!12517 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !128, line: 48, baseType: !12492)
!12518 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12485, file: !145, line: 71, baseType: !167, size: 8, offset: 96)
!12519 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12485, file: !145, line: 74, baseType: !167, size: 8, offset: 104)
!12520 = !DIDerivedType(tag: DW_TAG_member, scope: !12485, file: !145, line: 90, baseType: !12521, size: 16, offset: 112)
!12521 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12485, file: !145, line: 90, size: 16, elements: !12522)
!12522 = !{!12523, !12528}
!12523 = !DIDerivedType(tag: DW_TAG_member, scope: !12521, file: !145, line: 91, baseType: !12524, size: 16)
!12524 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12521, file: !145, line: 91, size: 16, elements: !12525)
!12525 = !{!12526, !12527}
!12526 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12524, file: !145, line: 96, baseType: !177, size: 8)
!12527 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12524, file: !145, line: 97, baseType: !167, size: 8, offset: 8)
!12528 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12521, file: !145, line: 100, baseType: !181, size: 16)
!12529 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12485, file: !145, line: 107, baseType: !110, size: 32, offset: 128)
!12530 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12485, file: !145, line: 127, baseType: !108, size: 32, offset: 160)
!12531 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12485, file: !145, line: 131, baseType: !12532, size: 192, offset: 192)
!12532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !123, line: 244, size: 192, elements: !12533)
!12533 = !{!12534, !12535, !12541}
!12534 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12532, file: !123, line: 245, baseType: !12491, size: 64)
!12535 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12532, file: !123, line: 246, baseType: !12536, size: 32, offset: 64)
!12536 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !123, line: 242, baseType: !12537)
!12537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12538, size: 32)
!12538 = !DISubroutineType(types: !12539)
!12539 = !{null, !12540}
!12540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12532, size: 32)
!12541 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12532, file: !123, line: 249, baseType: !106, size: 64, offset: 128)
!12542 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12482, file: !145, line: 250, baseType: !12543, size: 288, offset: 384)
!12543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !198, line: 25, size: 288, elements: !12544)
!12544 = !{!12545, !12546, !12547, !12548, !12549, !12550, !12551, !12552, !12553}
!12545 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12543, file: !198, line: 26, baseType: !110, size: 32)
!12546 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12543, file: !198, line: 27, baseType: !110, size: 32, offset: 32)
!12547 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12543, file: !198, line: 28, baseType: !110, size: 32, offset: 64)
!12548 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12543, file: !198, line: 29, baseType: !110, size: 32, offset: 96)
!12549 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12543, file: !198, line: 30, baseType: !110, size: 32, offset: 128)
!12550 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12543, file: !198, line: 31, baseType: !110, size: 32, offset: 160)
!12551 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12543, file: !198, line: 32, baseType: !110, size: 32, offset: 192)
!12552 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12543, file: !198, line: 33, baseType: !110, size: 32, offset: 224)
!12553 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12543, file: !198, line: 34, baseType: !110, size: 32, offset: 256)
!12554 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12482, file: !145, line: 253, baseType: !108, size: 32, offset: 672)
!12555 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12482, file: !145, line: 256, baseType: !12513, size: 64, offset: 704)
!12556 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !12482, file: !145, line: 271, baseType: !12557, size: 128, offset: 768)
!12557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__thread_entry", file: !145, line: 34, size: 128, elements: !12558)
!12558 = !{!12559, !12560, !12561, !12562}
!12559 = !DIDerivedType(tag: DW_TAG_member, name: "pEntry", scope: !12557, file: !145, line: 35, baseType: !215, size: 32)
!12560 = !DIDerivedType(tag: DW_TAG_member, name: "parameter1", scope: !12557, file: !145, line: 36, baseType: !108, size: 32, offset: 32)
!12561 = !DIDerivedType(tag: DW_TAG_member, name: "parameter2", scope: !12557, file: !145, line: 37, baseType: !108, size: 32, offset: 64)
!12562 = !DIDerivedType(tag: DW_TAG_member, name: "parameter3", scope: !12557, file: !145, line: 38, baseType: !108, size: 32, offset: 96)
!12563 = !DIDerivedType(tag: DW_TAG_member, name: "next_thread", scope: !12482, file: !145, line: 274, baseType: !12481, size: 32, offset: 896)
!12564 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12482, file: !145, line: 279, baseType: !225, size: 256, offset: 928)
!12565 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12482, file: !145, line: 294, baseType: !109, size: 32, offset: 1184)
!12566 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12482, file: !145, line: 300, baseType: !12567, size: 96, offset: 1216)
!12567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !145, line: 149, size: 96, elements: !12568)
!12568 = !{!12569, !12570, !12571}
!12569 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12567, file: !145, line: 153, baseType: !22, size: 32)
!12570 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12567, file: !145, line: 162, baseType: !235, size: 32, offset: 32)
!12571 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12567, file: !145, line: 168, baseType: !235, size: 32, offset: 64)
!12572 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12482, file: !145, line: 325, baseType: !12573, size: 32, offset: 1312)
!12573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12574, size: 32)
!12574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !119, line: 5073, size: 192, elements: !12575)
!12575 = !{!12576, !12582, !12583}
!12576 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12574, file: !119, line: 5074, baseType: !12577, size: 96)
!12577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !244, line: 56, size: 96, elements: !12578)
!12578 = !{!12579, !12580, !12581}
!12579 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12577, file: !244, line: 57, baseType: !247, size: 32)
!12580 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12577, file: !244, line: 58, baseType: !108, size: 32, offset: 32)
!12581 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12577, file: !244, line: 59, baseType: !235, size: 32, offset: 64)
!12582 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12574, file: !119, line: 5075, baseType: !12513, size: 64, offset: 96)
!12583 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12574, file: !119, line: 5076, baseType: !12584, size: 32, offset: 160)
!12584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !254, line: 43, size: 32, elements: !12585)
!12585 = !{!12586}
!12586 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12584, file: !254, line: 52, baseType: !22, size: 32)
!12587 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12482, file: !145, line: 343, baseType: !12588, size: 64, offset: 1344)
!12588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !198, line: 60, size: 64, elements: !12589)
!12589 = !{!12590, !12591}
!12590 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12588, file: !198, line: 63, baseType: !110, size: 32)
!12591 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12588, file: !198, line: 66, baseType: !110, size: 32, offset: 32)
!12592 = !{!12593, !12594, !12595}
!12593 = !DILocalVariable(name: "reason", arg: 1, scope: !12434, file: !3136, line: 209, type: !32)
!12594 = !DILocalVariable(name: "esf", arg: 2, scope: !12434, file: !3136, line: 209, type: !12437)
!12595 = !DILocalVariable(name: "thread", arg: 3, scope: !12434, file: !3136, line: 210, type: !12481)
!12596 = !DILocation(line: 0, scope: !12434)
!12597 = !DILocation(line: 212, column: 1, scope: !12434)
!12598 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3136, file: !3136, line: 214, type: !12599, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !12601)
!12599 = !DISubroutineType(types: !12600)
!12600 = !{null, !22, !22}
!12601 = !{!12602, !12603}
!12602 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12598, file: !3136, line: 214, type: !22)
!12603 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12598, file: !3136, line: 214, type: !22)
!12604 = !DILocation(line: 0, scope: !12598)
!12605 = !DILocation(line: 216, column: 1, scope: !12598)
!12606 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3136, file: !3136, line: 218, type: !12607, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !12609)
!12607 = !DISubroutineType(types: !12608)
!12608 = !{null, !1923, !235}
!12609 = !{!12610, !12611}
!12610 = !DILocalVariable(name: "buf", arg: 1, scope: !12606, file: !3136, line: 218, type: !1923)
!12611 = !DILocalVariable(name: "buflen", arg: 2, scope: !12606, file: !3136, line: 218, type: !235)
!12612 = !DILocation(line: 0, scope: !12606)
!12613 = !DILocation(line: 220, column: 1, scope: !12606)
!12614 = distinct !DISubprogram(name: "coredump_query", scope: !3136, file: !3136, line: 222, type: !12615, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !12617)
!12615 = !DISubroutineType(types: !12616)
!12616 = !{!109, !3135, !108}
!12617 = !{!12618, !12619}
!12618 = !DILocalVariable(name: "query_id", arg: 1, scope: !12614, file: !3136, line: 222, type: !3135)
!12619 = !DILocalVariable(name: "arg", arg: 2, scope: !12614, file: !3136, line: 222, type: !108)
!12620 = !DILocation(line: 0, scope: !12614)
!12621 = !DILocation(line: 224, column: 2, scope: !12614)
!12622 = distinct !DISubprogram(name: "coredump_cmd", scope: !3136, file: !3136, line: 227, type: !12623, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !12625)
!12623 = !DISubroutineType(types: !12624)
!12624 = !{!109, !3142, !108}
!12625 = !{!12626, !12627}
!12626 = !DILocalVariable(name: "query_id", arg: 1, scope: !12622, file: !3136, line: 227, type: !3142)
!12627 = !DILocalVariable(name: "arg", arg: 2, scope: !12622, file: !3136, line: 227, type: !108)
!12628 = !DILocation(line: 0, scope: !12622)
!12629 = !DILocation(line: 229, column: 2, scope: !12622)
!12630 = distinct !DISubprogram(name: "arch_system_halt", scope: !12631, file: !12631, line: 23, type: !6080, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !12632)
!12631 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12632 = !{!12633}
!12633 = !DILocalVariable(name: "reason", arg: 1, scope: !12630, file: !12631, line: 23, type: !32)
!12634 = !DILocation(line: 0, scope: !12630)
!12635 = !DILocation(line: 55, column: 2, scope: !12636, inlinedAt: !12640)
!12636 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6069, file: !6069, line: 42, type: !6070, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !12637)
!12637 = !{!12638, !12639}
!12638 = !DILocalVariable(name: "key", scope: !12636, file: !6069, line: 44, type: !32)
!12639 = !DILocalVariable(name: "tmp", scope: !12636, file: !6069, line: 53, type: !32)
!12640 = distinct !DILocation(line: 31, column: 8, scope: !12630)
!12641 = !{i64 2282385}
!12642 = !DILocation(line: 0, scope: !12636, inlinedAt: !12640)
!12643 = !DILocation(line: 32, column: 2, scope: !12630)
!12644 = !DILocation(line: 32, column: 2, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12646, file: !12631, line: 32, column: 2)
!12646 = distinct !DILexicalBlock(scope: !12630, file: !12631, line: 32, column: 2)
!12647 = distinct !{!12647, !12648, !12649}
!12648 = !DILocation(line: 32, column: 2, scope: !12646)
!12649 = !DILocation(line: 34, column: 2, scope: !12646)
!12650 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12631, file: !12631, line: 39, type: !12651, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !12653)
!12651 = !DISubroutineType(types: !12652)
!12652 = !{null, !32, !12437}
!12653 = !{!12654, !12655}
!12654 = !DILocalVariable(name: "reason", arg: 1, scope: !12650, file: !12631, line: 39, type: !32)
!12655 = !DILocalVariable(name: "esf", arg: 2, scope: !12650, file: !12631, line: 40, type: !12437)
!12656 = !DILocation(line: 0, scope: !12650)
!12657 = !DILocation(line: 46, column: 2, scope: !12650)
!12658 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12631, file: !12631, line: 81, type: !6080, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !12659)
!12659 = !{!12660}
!12660 = !DILocalVariable(name: "reason", arg: 1, scope: !12658, file: !12631, line: 81, type: !32)
!12661 = !DILocation(line: 0, scope: !12658)
!12662 = !DILocation(line: 83, column: 2, scope: !12658)
!12663 = distinct !DISubprogram(name: "z_fatal_error", scope: !12631, file: !12631, line: 96, type: !12651, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !12664)
!12664 = !{!12665, !12666, !12667, !12668}
!12665 = !DILocalVariable(name: "reason", arg: 1, scope: !12663, file: !12631, line: 96, type: !32)
!12666 = !DILocalVariable(name: "esf", arg: 2, scope: !12663, file: !12631, line: 96, type: !12437)
!12667 = !DILocalVariable(name: "key", scope: !12663, file: !12631, line: 102, type: !32)
!12668 = !DILocalVariable(name: "thread", scope: !12663, file: !12631, line: 103, type: !12481)
!12669 = !DILocation(line: 0, scope: !12663)
!12670 = !DILocation(line: 55, column: 2, scope: !12636, inlinedAt: !12671)
!12671 = distinct !DILocation(line: 102, column: 21, scope: !12663)
!12672 = !DILocation(line: 0, scope: !12636, inlinedAt: !12671)
!12673 = !DILocation(line: 131, column: 2, scope: !12663)
!12674 = !DILocation(line: 147, column: 3, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12676, file: !12631, line: 147, column: 3)
!12676 = distinct !DILexicalBlock(scope: !12677, file: !12631, line: 147, column: 3)
!12677 = distinct !DILexicalBlock(scope: !12678, file: !12631, line: 146, column: 32)
!12678 = distinct !DILexicalBlock(scope: !12663, file: !12631, line: 146, column: 6)
!12679 = !DILocation(line: 147, column: 3, scope: !12676)
!12680 = !DILocation(line: 147, column: 3, scope: !12681)
!12681 = distinct !DILexicalBlock(scope: !12675, file: !12631, line: 147, column: 3)
!12682 = !DILocation(line: 104, column: 4, scope: !12663)
!12683 = !DILocalVariable(name: "key", arg: 1, scope: !12684, file: !6069, line: 84, type: !32)
!12684 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6069, file: !6069, line: 84, type: !6080, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !12685)
!12685 = !{!12683}
!12686 = !DILocation(line: 0, scope: !12684, inlinedAt: !12687)
!12687 = distinct !DILocation(line: 186, column: 2, scope: !12663)
!12688 = !DILocation(line: 95, column: 2, scope: !12684, inlinedAt: !12687)
!12689 = !{i64 2283202}
!12690 = !DILocation(line: 189, column: 3, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12692, file: !12631, line: 188, column: 41)
!12692 = distinct !DILexicalBlock(scope: !12663, file: !12631, line: 188, column: 6)
!12693 = !DILocation(line: 191, column: 1, scope: !12663)
!12694 = distinct !DISubprogram(name: "k_current_get", scope: !119, file: !119, line: 530, type: !12695, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !2100)
!12695 = !DISubroutineType(types: !12696)
!12696 = !{!12697}
!12697 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !12481)
!12698 = !DILocation(line: 535, column: 9, scope: !12694)
!12699 = !DILocation(line: 535, column: 2, scope: !12694)
!12700 = distinct !DISubprogram(name: "k_thread_abort", scope: !3354, file: !3354, line: 188, type: !12701, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !12703)
!12701 = !DISubroutineType(types: !12702)
!12702 = !{null, !12697}
!12703 = !{!12704}
!12704 = !DILocalVariable(name: "thread", arg: 1, scope: !12700, file: !3354, line: 188, type: !12697)
!12705 = !DILocation(line: 0, scope: !12700)
!12706 = !DILocation(line: 197, column: 2, scope: !12707)
!12707 = distinct !DILexicalBlock(scope: !12700, file: !3354, line: 197, column: 2)
!12708 = !{i64 2155068549}
!12709 = !DILocation(line: 198, column: 2, scope: !12700)
!12710 = !DILocation(line: 199, column: 1, scope: !12700)
!12711 = distinct !DISubprogram(name: "z_current_get", scope: !3354, file: !3354, line: 173, type: !12695, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3132, retainedNodes: !2100)
!12712 = !DILocation(line: 180, column: 2, scope: !12713)
!12713 = distinct !DILexicalBlock(scope: !12711, file: !3354, line: 180, column: 2)
!12714 = !{i64 2155068481}
!12715 = !DILocation(line: 181, column: 9, scope: !12711)
!12716 = !DILocation(line: 181, column: 2, scope: !12711)
!12717 = distinct !DISubprogram(name: "z_early_memset", scope: !1890, file: !1890, line: 108, type: !12718, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !12720)
!12718 = !DISubroutineType(types: !12719)
!12719 = !{null, !108, !109, !235}
!12720 = !{!12721, !12722, !12723}
!12721 = !DILocalVariable(name: "dst", arg: 1, scope: !12717, file: !1890, line: 108, type: !108)
!12722 = !DILocalVariable(name: "c", arg: 2, scope: !12717, file: !1890, line: 108, type: !109)
!12723 = !DILocalVariable(name: "n", arg: 3, scope: !12717, file: !1890, line: 108, type: !235)
!12724 = !DILocation(line: 0, scope: !12717)
!12725 = !DILocation(line: 110, column: 9, scope: !12717)
!12726 = !DILocation(line: 111, column: 1, scope: !12717)
!12727 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1890, file: !1890, line: 121, type: !12728, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !12730)
!12728 = !DISubroutineType(types: !12729)
!12729 = !{null, !108, !13, !235}
!12730 = !{!12731, !12732, !12733}
!12731 = !DILocalVariable(name: "dst", arg: 1, scope: !12727, file: !1890, line: 121, type: !108)
!12732 = !DILocalVariable(name: "src", arg: 2, scope: !12727, file: !1890, line: 121, type: !13)
!12733 = !DILocalVariable(name: "n", arg: 3, scope: !12727, file: !1890, line: 121, type: !235)
!12734 = !DILocation(line: 0, scope: !12727)
!12735 = !DILocation(line: 123, column: 9, scope: !12727)
!12736 = !DILocation(line: 124, column: 1, scope: !12727)
!12737 = distinct !DISubprogram(name: "z_bss_zero", scope: !1890, file: !1890, line: 132, type: !3169, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !2100)
!12738 = !DILocation(line: 143, column: 2, scope: !12737)
!12739 = !DILocation(line: 168, column: 1, scope: !12737)
!12740 = distinct !DISubprogram(name: "z_init_cpu", scope: !1890, file: !1890, line: 372, type: !3497, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !12741)
!12741 = !{!12742}
!12742 = !DILocalVariable(name: "id", arg: 1, scope: !12740, file: !1890, line: 372, type: !109)
!12743 = !DILocation(line: 0, scope: !12740)
!12744 = !DILocation(line: 374, column: 2, scope: !12740)
!12745 = !DILocation(line: 375, column: 34, scope: !12740)
!12746 = !DILocation(line: 375, column: 19, scope: !12740)
!12747 = !DILocation(line: 375, column: 31, scope: !12740)
!12748 = !DILocation(line: 376, column: 24, scope: !12740)
!12749 = !DILocation(line: 376, column: 19, scope: !12740)
!12750 = !DILocation(line: 376, column: 22, scope: !12740)
!12751 = !DILocation(line: 378, column: 26, scope: !12740)
!12752 = !DILocation(line: 378, column: 4, scope: !12740)
!12753 = !DILocation(line: 378, column: 50, scope: !12740)
!12754 = !DILocation(line: 377, column: 19, scope: !12740)
!12755 = !DILocation(line: 377, column: 29, scope: !12740)
!12756 = !DILocation(line: 384, column: 1, scope: !12740)
!12757 = distinct !DISubprogram(name: "init_idle_thread", scope: !1890, file: !1890, line: 343, type: !3497, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !12758)
!12758 = !{!12759, !12760, !12761, !12764}
!12759 = !DILocalVariable(name: "i", arg: 1, scope: !12757, file: !1890, line: 343, type: !109)
!12760 = !DILocalVariable(name: "thread", scope: !12757, file: !1890, line: 345, type: !1983)
!12761 = !DILocalVariable(name: "stack", scope: !12757, file: !1890, line: 346, type: !12762)
!12762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12763, size: 32)
!12763 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !216, line: 44, baseType: !2124)
!12764 = !DILocalVariable(name: "tname", scope: !12757, file: !1890, line: 354, type: !1165)
!12765 = !DILocation(line: 0, scope: !12757)
!12766 = !DILocation(line: 345, column: 29, scope: !12757)
!12767 = !DILocation(line: 346, column: 28, scope: !12757)
!12768 = !DILocation(line: 362, column: 37, scope: !12757)
!12769 = !DILocation(line: 362, column: 36, scope: !12757)
!12770 = !DILocation(line: 361, column: 2, scope: !12757)
!12771 = !DILocation(line: 365, column: 2, scope: !12757)
!12772 = !DILocation(line: 370, column: 1, scope: !12757)
!12773 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !273, file: !273, line: 331, type: !12774, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !12776)
!12774 = !DISubroutineType(types: !12775)
!12775 = !{!1165, !12762}
!12776 = !{!12777}
!12777 = !DILocalVariable(name: "sym", arg: 1, scope: !12773, file: !273, line: 331, type: !12762)
!12778 = !DILocation(line: 0, scope: !12773)
!12779 = !DILocation(line: 333, column: 21, scope: !12773)
!12780 = !DILocation(line: 333, column: 2, scope: !12773)
!12781 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12782, file: !12782, line: 155, type: !12783, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !12785)
!12782 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12783 = !DISubroutineType(types: !12784)
!12784 = !{null, !1983}
!12785 = !{!12786}
!12786 = !DILocalVariable(name: "thread", arg: 1, scope: !12781, file: !12782, line: 155, type: !1983)
!12787 = !DILocation(line: 0, scope: !12781)
!12788 = !DILocation(line: 157, column: 15, scope: !12781)
!12789 = !DILocation(line: 157, column: 28, scope: !12781)
!12790 = !DILocation(line: 158, column: 1, scope: !12781)
!12791 = distinct !DISubprogram(name: "z_cstart", scope: !1890, file: !1890, line: 501, type: !3169, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !12792)
!12792 = !{!12793}
!12793 = !DILocalVariable(name: "dummy_thread", scope: !12791, file: !1890, line: 518, type: !1984)
!12794 = !DILocation(line: 507, column: 2, scope: !12791)
!12795 = !DILocation(line: 43, column: 14, scope: !12796, inlinedAt: !12800)
!12796 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12797, file: !12797, line: 40, type: !3169, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !12798)
!12797 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12798 = !{!12799}
!12799 = !DILocalVariable(name: "msp", scope: !12796, file: !12797, line: 42, type: !110)
!12800 = distinct !DILocation(line: 44, column: 2, scope: !12801, inlinedAt: !12803)
!12801 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12802, file: !12802, line: 42, type: !3169, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !2100)
!12802 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12803 = distinct !DILocation(line: 510, column: 2, scope: !12791)
!12804 = !DILocation(line: 43, column: 3, scope: !12796, inlinedAt: !12800)
!12805 = !DILocation(line: 43, column: 60, scope: !12796, inlinedAt: !12800)
!12806 = !DILocation(line: 0, scope: !12796, inlinedAt: !12800)
!12807 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12808, file: !6243, line: 1153, type: !110)
!12808 = distinct !DISubprogram(name: "__set_MSP", scope: !6243, file: !6243, line: 1153, type: !6338, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !12809)
!12809 = !{!12807}
!12810 = !DILocation(line: 0, scope: !12808, inlinedAt: !12811)
!12811 = distinct !DILocation(line: 46, column: 2, scope: !12796, inlinedAt: !12800)
!12812 = !DILocation(line: 1155, column: 3, scope: !12808, inlinedAt: !12811)
!12813 = !{i64 3748408}
!12814 = !DILocation(line: 62, column: 11, scope: !12796, inlinedAt: !12800)
!12815 = !DILocation(line: 102, column: 2, scope: !12816, inlinedAt: !12817)
!12816 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7084, file: !7084, line: 97, type: !3169, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !2100)
!12817 = distinct !DILocation(line: 45, column: 2, scope: !12801, inlinedAt: !12803)
!12818 = !DILocation(line: 108, column: 2, scope: !12816, inlinedAt: !12817)
!12819 = !DILocation(line: 112, column: 2, scope: !12816, inlinedAt: !12817)
!12820 = !DILocation(line: 113, column: 2, scope: !12816, inlinedAt: !12817)
!12821 = !DILocation(line: 114, column: 2, scope: !12816, inlinedAt: !12817)
!12822 = !DILocation(line: 116, column: 2, scope: !12816, inlinedAt: !12817)
!12823 = !DILocation(line: 123, column: 13, scope: !12816, inlinedAt: !12817)
!12824 = !DILocation(line: 46, column: 2, scope: !12801, inlinedAt: !12803)
!12825 = !DILocation(line: 47, column: 2, scope: !12801, inlinedAt: !12803)
!12826 = !DILocation(line: 174, column: 12, scope: !12827, inlinedAt: !12828)
!12827 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7084, file: !7084, line: 169, type: !3169, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !2100)
!12828 = distinct !DILocation(line: 48, column: 2, scope: !12801, inlinedAt: !12803)
!12829 = !DILocation(line: 179, column: 12, scope: !12827, inlinedAt: !12828)
!12830 = !DILocation(line: 50, column: 2, scope: !12801, inlinedAt: !12803)
!12831 = !DILocation(line: 57, column: 2, scope: !12801, inlinedAt: !12803)
!12832 = !DILocation(line: 518, column: 2, scope: !12791)
!12833 = !DILocation(line: 518, column: 18, scope: !12791)
!12834 = !DILocation(line: 520, column: 2, scope: !12791)
!12835 = !DILocation(line: 523, column: 2, scope: !12791)
!12836 = !DILocation(line: 526, column: 2, scope: !12791)
!12837 = !DILocation(line: 527, column: 2, scope: !12791)
!12838 = !DILocation(line: 543, column: 24, scope: !12791)
!12839 = !DILocation(line: 543, column: 2, scope: !12791)
!12840 = !DILocation(line: 0, scope: !2143)
!12841 = !DILocation(line: 246, column: 15, scope: !2161)
!12842 = !DILocation(line: 246, column: 36, scope: !2160)
!12843 = !DILocation(line: 246, column: 2, scope: !2161)
!12844 = !DILocation(line: 247, column: 37, scope: !2159)
!12845 = !DILocation(line: 0, scope: !2159)
!12846 = !DILocation(line: 248, column: 19, scope: !2159)
!12847 = !DILocation(line: 248, column: 12, scope: !2159)
!12848 = !DILocation(line: 250, column: 11, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !2159, file: !1890, line: 250, column: 7)
!12850 = !DILocation(line: 250, column: 7, scope: !2159)
!12851 = !DILocation(line: 254, column: 11, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12853, file: !1890, line: 254, column: 8)
!12853 = distinct !DILexicalBlock(scope: !12849, file: !1890, line: 250, column: 20)
!12854 = !DILocation(line: 254, column: 8, scope: !12853)
!12855 = !DILocation(line: 255, column: 9, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12852, file: !1890, line: 254, column: 17)
!12857 = !DILocation(line: 258, column: 9, scope: !12856)
!12858 = !DILocation(line: 261, column: 28, scope: !12856)
!12859 = !DILocation(line: 261, column: 10, scope: !12856)
!12860 = !DILocation(line: 261, column: 17, scope: !12856)
!12861 = !DILocation(line: 261, column: 26, scope: !12856)
!12862 = !DILocation(line: 262, column: 4, scope: !12856)
!12863 = !DILocation(line: 263, column: 9, scope: !12853)
!12864 = !DILocation(line: 263, column: 16, scope: !12853)
!12865 = !DILocation(line: 263, column: 28, scope: !12853)
!12866 = !DILocation(line: 264, column: 3, scope: !12853)
!12867 = !DILocation(line: 246, column: 60, scope: !2160)
!12868 = distinct !{!12868, !12843, !12869}
!12869 = !DILocation(line: 265, column: 2, scope: !2161)
!12870 = !DILocation(line: 266, column: 1, scope: !2143)
!12871 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !536, file: !536, line: 1814, type: !6283, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !12872)
!12872 = !{!12873, !12874}
!12873 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12871, file: !536, line: 1814, type: !791)
!12874 = !DILocalVariable(name: "priority", arg: 2, scope: !12871, file: !536, line: 1814, type: !110)
!12875 = !DILocation(line: 0, scope: !12871)
!12876 = !DILocation(line: 1822, column: 48, scope: !12877)
!12877 = distinct !DILexicalBlock(scope: !12878, file: !536, line: 1821, column: 3)
!12878 = distinct !DILexicalBlock(scope: !12871, file: !536, line: 1816, column: 7)
!12879 = !DILocation(line: 1822, column: 32, scope: !12877)
!12880 = !DILocation(line: 1822, column: 40, scope: !12877)
!12881 = !DILocation(line: 1822, column: 5, scope: !12877)
!12882 = !DILocation(line: 1822, column: 46, scope: !12877)
!12883 = !DILocation(line: 1824, column: 1, scope: !12871)
!12884 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12802, file: !12802, line: 32, type: !3169, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2100)
!12885 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12886, file: !12886, line: 215, type: !12783, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !12887)
!12886 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12887 = !{!12888}
!12888 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12885, file: !12886, line: 215, type: !1983)
!12889 = !DILocation(line: 0, scope: !12885)
!12890 = !DILocation(line: 217, column: 21, scope: !12885)
!12891 = !DILocation(line: 217, column: 34, scope: !12885)
!12892 = !DILocation(line: 221, column: 21, scope: !12885)
!12893 = !DILocation(line: 221, column: 34, scope: !12885)
!12894 = !DILocation(line: 223, column: 27, scope: !12885)
!12895 = !DILocation(line: 223, column: 33, scope: !12885)
!12896 = !DILocation(line: 224, column: 27, scope: !12885)
!12897 = !DILocation(line: 224, column: 32, scope: !12885)
!12898 = !DILocation(line: 232, column: 16, scope: !12885)
!12899 = !DILocation(line: 232, column: 30, scope: !12885)
!12900 = !DILocation(line: 239, column: 24, scope: !12885)
!12901 = !DILocation(line: 240, column: 1, scope: !12885)
!12902 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1890, file: !1890, line: 399, type: !12903, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !12905)
!12903 = !DISubroutineType(types: !12904)
!12904 = !{!1165}
!12905 = !{!12906}
!12906 = !DILocalVariable(name: "stack_ptr", scope: !12902, file: !1890, line: 401, type: !1165)
!12907 = !DILocation(line: 404, column: 2, scope: !12902)
!12908 = !DILocation(line: 416, column: 24, scope: !12902)
!12909 = !DILocation(line: 418, column: 14, scope: !12902)
!12910 = !DILocation(line: 0, scope: !12902)
!12911 = !DILocation(line: 423, column: 2, scope: !12902)
!12912 = !DILocation(line: 424, column: 2, scope: !12902)
!12913 = !DILocation(line: 426, column: 2, scope: !12902)
!12914 = !DILocation(line: 428, column: 2, scope: !12902)
!12915 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1890, file: !1890, line: 432, type: !12916, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !12918)
!12916 = !DISubroutineType(types: !12917)
!12917 = !{null, !1165}
!12918 = !{!12919}
!12919 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12915, file: !1890, line: 432, type: !1165)
!12920 = !DILocation(line: 0, scope: !12915)
!12921 = !DILocation(line: 435, column: 2, scope: !12915)
!12922 = !DILocation(line: 445, column: 2, scope: !12915)
!12923 = distinct !DISubprogram(name: "bg_thread_main", scope: !1890, file: !1890, line: 277, type: !218, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1886, retainedNodes: !12924)
!12924 = !{!12925, !12926, !12927}
!12925 = !DILocalVariable(name: "unused1", arg: 1, scope: !12923, file: !1890, line: 277, type: !108)
!12926 = !DILocalVariable(name: "unused2", arg: 2, scope: !12923, file: !1890, line: 277, type: !108)
!12927 = !DILocalVariable(name: "unused3", arg: 3, scope: !12923, file: !1890, line: 277, type: !108)
!12928 = !DILocation(line: 0, scope: !12923)
!12929 = !DILocation(line: 291, column: 20, scope: !12923)
!12930 = !DILocation(line: 293, column: 2, scope: !12923)
!12931 = !DILocation(line: 297, column: 2, scope: !12923)
!12932 = !DILocation(line: 305, column: 2, scope: !12923)
!12933 = !DILocation(line: 307, column: 2, scope: !12923)
!12934 = !DILocation(line: 330, column: 8, scope: !12923)
!12935 = !DILocation(line: 333, column: 34, scope: !12923)
!12936 = !DILocation(line: 339, column: 1, scope: !12923)
!12937 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2190, file: !2190, line: 45, type: !12938, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !12946)
!12938 = !DISubroutineType(types: !12939)
!12939 = !{null, !12940, !108}
!12940 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !119, line: 103, baseType: !12941)
!12941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12942, size: 32)
!12942 = !DISubroutineType(types: !12943)
!12943 = !{null, !12944, !108}
!12944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12945, size: 32)
!12945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2195)
!12946 = !{!12947, !12948, !12949, !12950}
!12947 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12937, file: !2190, line: 45, type: !12940)
!12948 = !DILocalVariable(name: "user_data", arg: 2, scope: !12937, file: !2190, line: 45, type: !108)
!12949 = !DILocalVariable(name: "thread", scope: !12937, file: !2190, line: 48, type: !2194)
!12950 = !DILocalVariable(name: "key", scope: !12937, file: !2190, line: 49, type: !12951)
!12951 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !254, line: 106, baseType: !12952)
!12952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !254, line: 32, size: 32, elements: !12953)
!12953 = !{!12954}
!12954 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12952, file: !254, line: 33, baseType: !109, size: 32)
!12955 = !DILocation(line: 0, scope: !12937)
!12956 = !DILocation(line: 51, column: 2, scope: !12957)
!12957 = distinct !DILexicalBlock(scope: !12958, file: !2190, line: 51, column: 2)
!12958 = distinct !DILexicalBlock(scope: !12937, file: !2190, line: 51, column: 2)
!12959 = !DILocation(line: 51, column: 2, scope: !12958)
!12960 = !DILocation(line: 51, column: 2, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !12957, file: !2190, line: 51, column: 2)
!12962 = !DILocalVariable(name: "l", arg: 1, scope: !12963, file: !254, line: 136, type: !12966)
!12963 = distinct !DISubprogram(name: "k_spin_lock", scope: !254, file: !254, line: 136, type: !12964, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !12967)
!12964 = !DISubroutineType(types: !12965)
!12965 = !{!12951, !12966}
!12966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 32)
!12967 = !{!12962, !12968}
!12968 = !DILocalVariable(name: "k", scope: !12963, file: !254, line: 139, type: !12951)
!12969 = !DILocation(line: 0, scope: !12963, inlinedAt: !12970)
!12970 = distinct !DILocation(line: 59, column: 8, scope: !12937)
!12971 = !DILocation(line: 55, column: 2, scope: !12972, inlinedAt: !12976)
!12972 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6069, file: !6069, line: 42, type: !6070, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !12973)
!12973 = !{!12974, !12975}
!12974 = !DILocalVariable(name: "key", scope: !12972, file: !6069, line: 44, type: !32)
!12975 = !DILocalVariable(name: "tmp", scope: !12972, file: !6069, line: 53, type: !32)
!12976 = distinct !DILocation(line: 145, column: 10, scope: !12963, inlinedAt: !12970)
!12977 = !{i64 2307541}
!12978 = !DILocation(line: 0, scope: !12972, inlinedAt: !12976)
!12979 = !DILocation(line: 148, column: 2, scope: !12980, inlinedAt: !12970)
!12980 = distinct !DILexicalBlock(scope: !12981, file: !254, line: 148, column: 2)
!12981 = distinct !DILexicalBlock(scope: !12963, file: !254, line: 148, column: 2)
!12982 = !DILocation(line: 148, column: 2, scope: !12981, inlinedAt: !12970)
!12983 = !DILocation(line: 148, column: 2, scope: !12984, inlinedAt: !12970)
!12984 = distinct !DILexicalBlock(scope: !12980, file: !254, line: 148, column: 2)
!12985 = !DILocation(line: 160, column: 2, scope: !12963, inlinedAt: !12970)
!12986 = !DILocation(line: 0, scope: !12987)
!12987 = distinct !DILexicalBlock(scope: !12937, file: !2190, line: 63, column: 2)
!12988 = !DILocation(line: 63, column: 2, scope: !12987)
!12989 = !DILocation(line: 64, column: 3, scope: !12990)
!12990 = distinct !DILexicalBlock(scope: !12991, file: !2190, line: 63, column: 71)
!12991 = distinct !DILexicalBlock(scope: !12987, file: !2190, line: 63, column: 2)
!12992 = !DILocation(line: 63, column: 58, scope: !12991)
!12993 = distinct !{!12993, !12988, !12994}
!12994 = !DILocation(line: 65, column: 2, scope: !12987)
!12995 = !DILocalVariable(name: "key", arg: 2, scope: !12996, file: !254, line: 190, type: !12951)
!12996 = distinct !DISubprogram(name: "k_spin_unlock", scope: !254, file: !254, line: 189, type: !12997, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !12999)
!12997 = !DISubroutineType(types: !12998)
!12998 = !{null, !12966, !12951}
!12999 = !{!13000, !12995}
!13000 = !DILocalVariable(name: "l", arg: 1, scope: !12996, file: !254, line: 189, type: !12966)
!13001 = !DILocation(line: 0, scope: !12996, inlinedAt: !13002)
!13002 = distinct !DILocation(line: 69, column: 2, scope: !12937)
!13003 = !DILocation(line: 194, column: 2, scope: !13004, inlinedAt: !13002)
!13004 = distinct !DILexicalBlock(scope: !13005, file: !254, line: 194, column: 2)
!13005 = distinct !DILexicalBlock(scope: !12996, file: !254, line: 194, column: 2)
!13006 = !DILocation(line: 194, column: 2, scope: !13005, inlinedAt: !13002)
!13007 = !DILocation(line: 194, column: 2, scope: !13008, inlinedAt: !13002)
!13008 = distinct !DILexicalBlock(scope: !13004, file: !254, line: 194, column: 2)
!13009 = !DILocalVariable(name: "key", arg: 1, scope: !13010, file: !6069, line: 84, type: !32)
!13010 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6069, file: !6069, line: 84, type: !6080, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13011)
!13011 = !{!13009}
!13012 = !DILocation(line: 0, scope: !13010, inlinedAt: !13013)
!13013 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !13002)
!13014 = !DILocation(line: 95, column: 2, scope: !13010, inlinedAt: !13013)
!13015 = !{i64 2308358}
!13016 = !DILocation(line: 71, column: 1, scope: !12937)
!13017 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2190, file: !2190, line: 853, type: !13018, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13020)
!13018 = !DISubroutineType(types: !13019)
!13019 = !{!334, !12966}
!13020 = !{!13021, !13022}
!13021 = !DILocalVariable(name: "l", arg: 1, scope: !13017, file: !2190, line: 853, type: !12966)
!13022 = !DILocalVariable(name: "thread_cpu", scope: !13017, file: !2190, line: 855, type: !22)
!13023 = !DILocation(line: 0, scope: !13017)
!13024 = !DILocation(line: 855, column: 28, scope: !13017)
!13025 = !DILocation(line: 857, column: 17, scope: !13026)
!13026 = distinct !DILexicalBlock(scope: !13017, file: !2190, line: 857, column: 6)
!13027 = !DILocation(line: 857, column: 6, scope: !13017)
!13028 = !DILocation(line: 858, column: 19, scope: !13029)
!13029 = distinct !DILexicalBlock(scope: !13030, file: !2190, line: 858, column: 7)
!13030 = distinct !DILexicalBlock(scope: !13026, file: !2190, line: 857, column: 24)
!13031 = !DILocation(line: 858, column: 42, scope: !13029)
!13032 = !DILocation(line: 858, column: 28, scope: !13029)
!13033 = !DILocation(line: 858, column: 25, scope: !13029)
!13034 = !DILocation(line: 858, column: 7, scope: !13030)
!13035 = !DILocation(line: 862, column: 2, scope: !13017)
!13036 = !DILocation(line: 863, column: 1, scope: !13017)
!13037 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2190, file: !2190, line: 874, type: !13038, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13040)
!13038 = !DISubroutineType(types: !13039)
!13039 = !{null, !12966}
!13040 = !{!13041}
!13041 = !DILocalVariable(name: "l", arg: 1, scope: !13037, file: !2190, line: 874, type: !12966)
!13042 = !DILocation(line: 0, scope: !13037)
!13043 = !DILocation(line: 876, column: 32, scope: !13037)
!13044 = !DILocation(line: 876, column: 18, scope: !13037)
!13045 = !DILocation(line: 876, column: 48, scope: !13037)
!13046 = !DILocation(line: 876, column: 37, scope: !13037)
!13047 = !DILocation(line: 876, column: 35, scope: !13037)
!13048 = !DILocation(line: 876, column: 5, scope: !13037)
!13049 = !DILocation(line: 876, column: 16, scope: !13037)
!13050 = !DILocation(line: 877, column: 1, scope: !13037)
!13051 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2190, file: !2190, line: 865, type: !13018, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13052)
!13052 = !{!13053}
!13053 = !DILocalVariable(name: "l", arg: 1, scope: !13051, file: !2190, line: 865, type: !12966)
!13054 = !DILocation(line: 0, scope: !13051)
!13055 = !DILocation(line: 867, column: 9, scope: !13056)
!13056 = distinct !DILexicalBlock(scope: !13051, file: !2190, line: 867, column: 6)
!13057 = !DILocation(line: 867, column: 38, scope: !13056)
!13058 = !DILocation(line: 867, column: 24, scope: !13056)
!13059 = !DILocation(line: 867, column: 54, scope: !13056)
!13060 = !DILocation(line: 867, column: 43, scope: !13056)
!13061 = !DILocation(line: 867, column: 41, scope: !13056)
!13062 = !DILocation(line: 867, column: 20, scope: !13056)
!13063 = !DILocation(line: 867, column: 6, scope: !13051)
!13064 = !DILocation(line: 870, column: 16, scope: !13051)
!13065 = !DILocation(line: 871, column: 2, scope: !13051)
!13066 = !DILocation(line: 872, column: 1, scope: !13051)
!13067 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2190, file: !2190, line: 73, type: !12938, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13068)
!13068 = !{!13069, !13070, !13071, !13072}
!13069 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13067, file: !2190, line: 73, type: !12940)
!13070 = !DILocalVariable(name: "user_data", arg: 2, scope: !13067, file: !2190, line: 73, type: !108)
!13071 = !DILocalVariable(name: "thread", scope: !13067, file: !2190, line: 76, type: !2194)
!13072 = !DILocalVariable(name: "key", scope: !13067, file: !2190, line: 77, type: !12951)
!13073 = !DILocation(line: 0, scope: !13067)
!13074 = !DILocation(line: 79, column: 2, scope: !13075)
!13075 = distinct !DILexicalBlock(scope: !13076, file: !2190, line: 79, column: 2)
!13076 = distinct !DILexicalBlock(scope: !13067, file: !2190, line: 79, column: 2)
!13077 = !DILocation(line: 79, column: 2, scope: !13076)
!13078 = !DILocation(line: 79, column: 2, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13075, file: !2190, line: 79, column: 2)
!13080 = !DILocation(line: 0, scope: !12963, inlinedAt: !13081)
!13081 = distinct !DILocation(line: 81, column: 8, scope: !13067)
!13082 = !DILocation(line: 55, column: 2, scope: !12972, inlinedAt: !13083)
!13083 = distinct !DILocation(line: 145, column: 10, scope: !12963, inlinedAt: !13081)
!13084 = !DILocation(line: 0, scope: !12972, inlinedAt: !13083)
!13085 = !DILocation(line: 148, column: 2, scope: !12980, inlinedAt: !13081)
!13086 = !DILocation(line: 148, column: 2, scope: !12981, inlinedAt: !13081)
!13087 = !DILocation(line: 148, column: 2, scope: !12984, inlinedAt: !13081)
!13088 = !DILocation(line: 160, column: 2, scope: !12963, inlinedAt: !13081)
!13089 = !DILocation(line: 0, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !13067, file: !2190, line: 85, column: 2)
!13091 = !DILocation(line: 85, column: 2, scope: !13090)
!13092 = !DILocation(line: 0, scope: !12996, inlinedAt: !13093)
!13093 = distinct !DILocation(line: 86, column: 3, scope: !13094)
!13094 = distinct !DILexicalBlock(scope: !13095, file: !2190, line: 85, column: 71)
!13095 = distinct !DILexicalBlock(scope: !13090, file: !2190, line: 85, column: 2)
!13096 = !DILocation(line: 194, column: 2, scope: !13004, inlinedAt: !13093)
!13097 = !DILocation(line: 194, column: 2, scope: !13005, inlinedAt: !13093)
!13098 = !DILocation(line: 194, column: 2, scope: !13008, inlinedAt: !13093)
!13099 = !DILocation(line: 0, scope: !13010, inlinedAt: !13100)
!13100 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !13093)
!13101 = !DILocation(line: 95, column: 2, scope: !13010, inlinedAt: !13100)
!13102 = !DILocation(line: 87, column: 3, scope: !13094)
!13103 = !DILocation(line: 0, scope: !12963, inlinedAt: !13104)
!13104 = distinct !DILocation(line: 88, column: 9, scope: !13094)
!13105 = !DILocation(line: 55, column: 2, scope: !12972, inlinedAt: !13106)
!13106 = distinct !DILocation(line: 145, column: 10, scope: !12963, inlinedAt: !13104)
!13107 = !DILocation(line: 0, scope: !12972, inlinedAt: !13106)
!13108 = !DILocation(line: 148, column: 2, scope: !12980, inlinedAt: !13104)
!13109 = !DILocation(line: 148, column: 2, scope: !12981, inlinedAt: !13104)
!13110 = !DILocation(line: 148, column: 2, scope: !12984, inlinedAt: !13104)
!13111 = !DILocation(line: 160, column: 2, scope: !12963, inlinedAt: !13104)
!13112 = !DILocation(line: 85, column: 58, scope: !13095)
!13113 = distinct !{!13113, !13091, !13114}
!13114 = !DILocation(line: 89, column: 2, scope: !13090)
!13115 = !DILocation(line: 0, scope: !12996, inlinedAt: !13116)
!13116 = distinct !DILocation(line: 93, column: 2, scope: !13067)
!13117 = !DILocation(line: 194, column: 2, scope: !13004, inlinedAt: !13116)
!13118 = !DILocation(line: 194, column: 2, scope: !13005, inlinedAt: !13116)
!13119 = !DILocation(line: 194, column: 2, scope: !13008, inlinedAt: !13116)
!13120 = !DILocation(line: 0, scope: !13010, inlinedAt: !13121)
!13121 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !13116)
!13122 = !DILocation(line: 95, column: 2, scope: !13010, inlinedAt: !13121)
!13123 = !DILocation(line: 95, column: 1, scope: !13067)
!13124 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2190, file: !2190, line: 97, type: !7085, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !2100)
!13125 = !DILocation(line: 1031, column: 3, scope: !13126, inlinedAt: !13129)
!13126 = distinct !DISubprogram(name: "__get_IPSR", scope: !6243, file: !6243, line: 1027, type: !3451, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13127)
!13127 = !{!13128}
!13128 = !DILocalVariable(name: "result", scope: !13126, file: !6243, line: 1029, type: !110)
!13129 = distinct !DILocation(line: 48, column: 10, scope: !13130, inlinedAt: !13131)
!13130 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7084, file: !7084, line: 46, type: !7085, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !2100)
!13131 = distinct !DILocation(line: 99, column: 9, scope: !13124)
!13132 = !{i64 3753975}
!13133 = !DILocation(line: 0, scope: !13126, inlinedAt: !13129)
!13134 = !DILocation(line: 48, column: 9, scope: !13130, inlinedAt: !13131)
!13135 = !DILocation(line: 99, column: 2, scope: !13124)
!13136 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2190, file: !2190, line: 106, type: !3169, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !2100)
!13137 = !DILocation(line: 108, column: 2, scope: !13136)
!13138 = !DILocation(line: 108, column: 17, scope: !13136)
!13139 = !DILocation(line: 108, column: 30, scope: !13136)
!13140 = !DILocation(line: 109, column: 1, scope: !13136)
!13141 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2190, file: !2190, line: 116, type: !3169, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !2100)
!13142 = !DILocation(line: 118, column: 2, scope: !13141)
!13143 = !DILocation(line: 118, column: 17, scope: !13141)
!13144 = !DILocation(line: 118, column: 30, scope: !13141)
!13145 = !DILocation(line: 119, column: 1, scope: !13141)
!13146 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2190, file: !2190, line: 126, type: !7085, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !2100)
!13147 = !DILocation(line: 128, column: 10, scope: !13146)
!13148 = !DILocation(line: 128, column: 25, scope: !13146)
!13149 = !DILocation(line: 128, column: 38, scope: !13146)
!13150 = !DILocation(line: 128, column: 53, scope: !13146)
!13151 = !DILocation(line: 128, column: 2, scope: !13146)
!13152 = distinct !DISubprogram(name: "z_thread_monitor_exit", scope: !2190, file: !2190, line: 164, type: !13153, scopeLine: 165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13155)
!13153 = !DISubroutineType(types: !13154)
!13154 = !{null, !2194}
!13155 = !{!13156, !13157, !13158}
!13156 = !DILocalVariable(name: "thread", arg: 1, scope: !13152, file: !2190, line: 164, type: !2194)
!13157 = !DILocalVariable(name: "key", scope: !13152, file: !2190, line: 166, type: !12951)
!13158 = !DILocalVariable(name: "prev_thread", scope: !13159, file: !2190, line: 171, type: !2194)
!13159 = distinct !DILexicalBlock(scope: !13160, file: !2190, line: 170, column: 9)
!13160 = distinct !DILexicalBlock(scope: !13152, file: !2190, line: 168, column: 6)
!13161 = !DILocation(line: 0, scope: !13152)
!13162 = !DILocation(line: 0, scope: !12963, inlinedAt: !13163)
!13163 = distinct !DILocation(line: 166, column: 25, scope: !13152)
!13164 = !DILocation(line: 55, column: 2, scope: !12972, inlinedAt: !13165)
!13165 = distinct !DILocation(line: 145, column: 10, scope: !12963, inlinedAt: !13163)
!13166 = !DILocation(line: 0, scope: !12972, inlinedAt: !13165)
!13167 = !DILocation(line: 148, column: 2, scope: !12980, inlinedAt: !13163)
!13168 = !DILocation(line: 148, column: 2, scope: !12981, inlinedAt: !13163)
!13169 = !DILocation(line: 148, column: 2, scope: !12984, inlinedAt: !13163)
!13170 = !DILocation(line: 160, column: 2, scope: !12963, inlinedAt: !13163)
!13171 = !DILocation(line: 168, column: 24, scope: !13160)
!13172 = !DILocation(line: 168, column: 13, scope: !13160)
!13173 = !DILocation(line: 168, column: 6, scope: !13152)
!13174 = !DILocation(line: 169, column: 38, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !13160, file: !2190, line: 168, column: 33)
!13176 = !DILocation(line: 169, column: 19, scope: !13175)
!13177 = !DILocation(line: 170, column: 2, scope: !13175)
!13178 = !DILocation(line: 0, scope: !13159)
!13179 = !DILocation(line: 174, column: 23, scope: !13159)
!13180 = !DILocation(line: 174, column: 32, scope: !13159)
!13181 = !DILocation(line: 175, column: 28, scope: !13159)
!13182 = !DILocation(line: 175, column: 12, scope: !13159)
!13183 = !DILocation(line: 174, column: 3, scope: !13159)
!13184 = distinct !{!13184, !13183, !13185}
!13185 = !DILocation(line: 177, column: 3, scope: !13159)
!13186 = !DILocation(line: 179, column: 39, scope: !13187)
!13187 = distinct !DILexicalBlock(scope: !13188, file: !2190, line: 178, column: 28)
!13188 = distinct !DILexicalBlock(scope: !13159, file: !2190, line: 178, column: 7)
!13189 = !DILocation(line: 179, column: 29, scope: !13187)
!13190 = !DILocation(line: 180, column: 3, scope: !13187)
!13191 = !DILocation(line: 0, scope: !12996, inlinedAt: !13192)
!13192 = distinct !DILocation(line: 183, column: 2, scope: !13152)
!13193 = !DILocation(line: 194, column: 2, scope: !13004, inlinedAt: !13192)
!13194 = !DILocation(line: 194, column: 2, scope: !13005, inlinedAt: !13192)
!13195 = !DILocation(line: 194, column: 2, scope: !13008, inlinedAt: !13192)
!13196 = !DILocation(line: 0, scope: !13010, inlinedAt: !13197)
!13197 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !13192)
!13198 = !DILocation(line: 95, column: 2, scope: !13010, inlinedAt: !13197)
!13199 = !DILocation(line: 184, column: 1, scope: !13152)
!13200 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2190, file: !2190, line: 187, type: !13201, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13203)
!13201 = !DISubroutineType(types: !13202)
!13202 = !{!109, !2194, !324}
!13203 = !{!13204, !13205}
!13204 = !DILocalVariable(name: "thread", arg: 1, scope: !13200, file: !2190, line: 187, type: !2194)
!13205 = !DILocalVariable(name: "value", arg: 2, scope: !13200, file: !2190, line: 187, type: !324)
!13206 = !DILocation(line: 0, scope: !13200)
!13207 = !DILocation(line: 190, column: 13, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13200, file: !2190, line: 190, column: 6)
!13209 = !DILocation(line: 190, column: 6, scope: !13200)
!13210 = !DILocation(line: 194, column: 10, scope: !13200)
!13211 = !DILocation(line: 194, column: 2, scope: !13200)
!13212 = !DILocation(line: 195, column: 2, scope: !13200)
!13213 = !DILocation(line: 195, column: 47, scope: !13200)
!13214 = !DILocation(line: 199, column: 2, scope: !13200)
!13215 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2190, file: !2190, line: 238, type: !13216, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13218)
!13216 = !DISubroutineType(types: !13217)
!13217 = !{!324, !2194}
!13218 = !{!13219}
!13219 = !DILocalVariable(name: "thread", arg: 1, scope: !13215, file: !2190, line: 238, type: !2194)
!13220 = !DILocation(line: 0, scope: !13215)
!13221 = !DILocation(line: 241, column: 23, scope: !13215)
!13222 = !DILocation(line: 241, column: 2, scope: !13215)
!13223 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2190, file: !2190, line: 248, type: !13224, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13226)
!13224 = !DISubroutineType(types: !13225)
!13225 = !{!109, !2193, !1165, !235}
!13226 = !{!13227, !13228, !13229}
!13227 = !DILocalVariable(name: "thread", arg: 1, scope: !13223, file: !2190, line: 248, type: !2193)
!13228 = !DILocalVariable(name: "buf", arg: 2, scope: !13223, file: !2190, line: 248, type: !1165)
!13229 = !DILocalVariable(name: "size", arg: 3, scope: !13223, file: !2190, line: 248, type: !235)
!13230 = !DILocation(line: 0, scope: !13223)
!13231 = !DILocation(line: 251, column: 15, scope: !13223)
!13232 = !DILocation(line: 251, column: 2, scope: !13223)
!13233 = !DILocation(line: 252, column: 2, scope: !13223)
!13234 = !DILocation(line: 0, scope: !2189)
!13235 = !DILocation(line: 281, column: 11, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !2189, file: !2190, line: 281, column: 6)
!13237 = !DILocation(line: 281, column: 20, scope: !13236)
!13238 = !DILocation(line: 275, column: 45, scope: !2189)
!13239 = !DILocation(line: 285, column: 10, scope: !2189)
!13240 = !DILocation(line: 0, scope: !2299)
!13241 = !DILocation(line: 293, column: 39, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !2299, file: !2190, line: 293, column: 2)
!13243 = !DILocation(line: 293, column: 2, scope: !2299)
!13244 = !DILocation(line: 273, column: 14, scope: !2189)
!13245 = !DILocation(line: 309, column: 2, scope: !2189)
!13246 = !DILocation(line: 309, column: 11, scope: !2189)
!13247 = !DILocation(line: 311, column: 2, scope: !2189)
!13248 = !DILocation(line: 293, column: 26, scope: !13242)
!13249 = !DILocation(line: 294, column: 9, scope: !13250)
!13250 = distinct !DILexicalBlock(scope: !13242, file: !2190, line: 293, column: 54)
!13251 = !DILocation(line: 295, column: 21, scope: !13252)
!13252 = distinct !DILexicalBlock(scope: !13250, file: !2190, line: 295, column: 7)
!13253 = !DILocation(line: 295, column: 28, scope: !13252)
!13254 = !DILocation(line: 295, column: 7, scope: !13250)
!13255 = !DILocation(line: 299, column: 25, scope: !13250)
!13256 = !DILocation(line: 299, column: 41, scope: !13250)
!13257 = !DILocation(line: 300, column: 7, scope: !13250)
!13258 = !DILocation(line: 300, column: 26, scope: !13250)
!13259 = !DILocation(line: 299, column: 10, scope: !13250)
!13260 = !DILocation(line: 299, column: 7, scope: !13250)
!13261 = !DILocation(line: 302, column: 16, scope: !13250)
!13262 = !DILocation(line: 304, column: 20, scope: !13263)
!13263 = distinct !DILexicalBlock(scope: !13250, file: !2190, line: 304, column: 7)
!13264 = !DILocation(line: 304, column: 7, scope: !13250)
!13265 = !DILocation(line: 305, column: 26, scope: !13266)
!13266 = distinct !DILexicalBlock(scope: !13263, file: !2190, line: 304, column: 26)
!13267 = !DILocation(line: 305, column: 42, scope: !13266)
!13268 = !DILocation(line: 305, column: 11, scope: !13266)
!13269 = !DILocation(line: 305, column: 8, scope: !13266)
!13270 = !DILocation(line: 306, column: 3, scope: !13266)
!13271 = !DILocation(line: 293, column: 50, scope: !13242)
!13272 = !DILocation(line: 312, column: 1, scope: !2189)
!13273 = distinct !DISubprogram(name: "copy_bytes", scope: !2190, file: !2190, line: 261, type: !13274, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13276)
!13274 = !DISubroutineType(types: !13275)
!13275 = !{!235, !1165, !235, !324, !235}
!13276 = !{!13277, !13278, !13279, !13280, !13281}
!13277 = !DILocalVariable(name: "dest", arg: 1, scope: !13273, file: !2190, line: 261, type: !1165)
!13278 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13273, file: !2190, line: 261, type: !235)
!13279 = !DILocalVariable(name: "src", arg: 3, scope: !13273, file: !2190, line: 261, type: !324)
!13280 = !DILocalVariable(name: "src_size", arg: 4, scope: !13273, file: !2190, line: 261, type: !235)
!13281 = !DILocalVariable(name: "bytes_to_copy", scope: !13273, file: !2190, line: 263, type: !235)
!13282 = !DILocation(line: 0, scope: !13273)
!13283 = !DILocation(line: 265, column: 18, scope: !13273)
!13284 = !DILocation(line: 266, column: 2, scope: !13273)
!13285 = !DILocation(line: 268, column: 2, scope: !13273)
!13286 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2190, file: !2190, line: 383, type: !13153, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13287)
!13287 = !{!13288}
!13288 = !DILocalVariable(name: "thread", arg: 1, scope: !13286, file: !2190, line: 383, type: !2194)
!13289 = !DILocation(line: 0, scope: !13286)
!13290 = !DILocation(line: 387, column: 2, scope: !13286)
!13291 = !DILocation(line: 388, column: 1, scope: !13286)
!13292 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2190, file: !2190, line: 528, type: !13293, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13300)
!13293 = !DISubroutineType(types: !13294)
!13294 = !{!1165, !2194, !13295, !235, !215, !108, !108, !108, !109, !110, !324}
!13295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13296, size: 32)
!13296 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !216, line: 44, baseType: !13297)
!13297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !273, line: 47, size: 8, elements: !13298)
!13298 = !{!13299}
!13299 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13297, file: !273, line: 48, baseType: !226, size: 8)
!13300 = !{!13301, !13302, !13303, !13304, !13305, !13306, !13307, !13308, !13309, !13310, !13311, !13312}
!13301 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13292, file: !2190, line: 528, type: !2194)
!13302 = !DILocalVariable(name: "stack", arg: 2, scope: !13292, file: !2190, line: 529, type: !13295)
!13303 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13292, file: !2190, line: 529, type: !235)
!13304 = !DILocalVariable(name: "entry", arg: 4, scope: !13292, file: !2190, line: 530, type: !215)
!13305 = !DILocalVariable(name: "p1", arg: 5, scope: !13292, file: !2190, line: 531, type: !108)
!13306 = !DILocalVariable(name: "p2", arg: 6, scope: !13292, file: !2190, line: 531, type: !108)
!13307 = !DILocalVariable(name: "p3", arg: 7, scope: !13292, file: !2190, line: 531, type: !108)
!13308 = !DILocalVariable(name: "prio", arg: 8, scope: !13292, file: !2190, line: 532, type: !109)
!13309 = !DILocalVariable(name: "options", arg: 9, scope: !13292, file: !2190, line: 532, type: !110)
!13310 = !DILocalVariable(name: "name", arg: 10, scope: !13292, file: !2190, line: 532, type: !324)
!13311 = !DILocalVariable(name: "stack_ptr", scope: !13292, file: !2190, line: 534, type: !1165)
!13312 = !DILocalVariable(name: "key", scope: !13292, file: !2190, line: 587, type: !12951)
!13313 = !DILocation(line: 0, scope: !13292)
!13314 = !DILocation(line: 536, column: 2, scope: !13315)
!13315 = distinct !DILexicalBlock(scope: !13316, file: !2190, line: 536, column: 2)
!13316 = distinct !DILexicalBlock(scope: !13317, file: !2190, line: 536, column: 2)
!13317 = distinct !DILexicalBlock(scope: !13292, file: !2190, line: 536, column: 2)
!13318 = !DILocation(line: 536, column: 2, scope: !13319)
!13319 = distinct !DILexicalBlock(scope: !13315, file: !2190, line: 536, column: 2)
!13320 = !DILocation(line: 550, column: 28, scope: !13292)
!13321 = !DILocation(line: 550, column: 2, scope: !13292)
!13322 = !DILocation(line: 553, column: 34, scope: !13292)
!13323 = !DILocation(line: 553, column: 2, scope: !13292)
!13324 = !DILocation(line: 554, column: 14, scope: !13292)
!13325 = !DILocation(line: 564, column: 2, scope: !13292)
!13326 = !DILocation(line: 567, column: 14, scope: !13292)
!13327 = !DILocation(line: 567, column: 24, scope: !13292)
!13328 = !DILocation(line: 582, column: 20, scope: !13292)
!13329 = !DILocation(line: 582, column: 27, scope: !13292)
!13330 = !DILocation(line: 583, column: 20, scope: !13292)
!13331 = !DILocation(line: 583, column: 31, scope: !13292)
!13332 = !DILocation(line: 584, column: 20, scope: !13292)
!13333 = !DILocation(line: 584, column: 31, scope: !13292)
!13334 = !DILocation(line: 585, column: 20, scope: !13292)
!13335 = !DILocation(line: 585, column: 31, scope: !13292)
!13336 = !DILocation(line: 0, scope: !12963, inlinedAt: !13337)
!13337 = distinct !DILocation(line: 587, column: 25, scope: !13292)
!13338 = !DILocation(line: 55, column: 2, scope: !12972, inlinedAt: !13339)
!13339 = distinct !DILocation(line: 145, column: 10, scope: !12963, inlinedAt: !13337)
!13340 = !DILocation(line: 0, scope: !12972, inlinedAt: !13339)
!13341 = !DILocation(line: 148, column: 2, scope: !12980, inlinedAt: !13337)
!13342 = !DILocation(line: 148, column: 2, scope: !12981, inlinedAt: !13337)
!13343 = !DILocation(line: 148, column: 2, scope: !12984, inlinedAt: !13337)
!13344 = !DILocation(line: 160, column: 2, scope: !12963, inlinedAt: !13337)
!13345 = !DILocation(line: 589, column: 36, scope: !13292)
!13346 = !DILocation(line: 589, column: 14, scope: !13292)
!13347 = !DILocation(line: 589, column: 26, scope: !13292)
!13348 = !DILocation(line: 590, column: 18, scope: !13292)
!13349 = !DILocation(line: 0, scope: !12996, inlinedAt: !13350)
!13350 = distinct !DILocation(line: 591, column: 2, scope: !13292)
!13351 = !DILocation(line: 194, column: 2, scope: !13004, inlinedAt: !13350)
!13352 = !DILocation(line: 194, column: 2, scope: !13005, inlinedAt: !13350)
!13353 = !DILocation(line: 194, column: 2, scope: !13008, inlinedAt: !13350)
!13354 = !DILocation(line: 0, scope: !13010, inlinedAt: !13355)
!13355 = distinct !DILocation(line: 215, column: 2, scope: !12996, inlinedAt: !13350)
!13356 = !DILocation(line: 95, column: 2, scope: !13010, inlinedAt: !13355)
!13357 = !DILocation(line: 594, column: 11, scope: !13358)
!13358 = distinct !DILexicalBlock(scope: !13292, file: !2190, line: 594, column: 6)
!13359 = !DILocation(line: 0, scope: !13358)
!13360 = !DILocation(line: 594, column: 6, scope: !13292)
!13361 = !DILocation(line: 595, column: 3, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13358, file: !2190, line: 594, column: 20)
!13363 = !DILocation(line: 598, column: 3, scope: !13362)
!13364 = !DILocation(line: 598, column: 52, scope: !13362)
!13365 = !DILocation(line: 599, column: 2, scope: !13362)
!13366 = !DILocation(line: 600, column: 23, scope: !13367)
!13367 = distinct !DILexicalBlock(scope: !13358, file: !2190, line: 599, column: 9)
!13368 = !DILocation(line: 612, column: 7, scope: !13369)
!13369 = distinct !DILexicalBlock(scope: !13292, file: !2190, line: 612, column: 6)
!13370 = !DILocation(line: 612, column: 6, scope: !13292)
!13371 = !DILocation(line: 627, column: 40, scope: !13292)
!13372 = !DILocation(line: 637, column: 2, scope: !13292)
!13373 = !DILocation(line: 613, column: 15, scope: !13374)
!13374 = distinct !DILexicalBlock(scope: !13369, file: !2190, line: 612, column: 17)
!13375 = !DILocation(line: 613, column: 29, scope: !13374)
!13376 = !DILocation(line: 638, column: 1, scope: !13292)
!13377 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12782, file: !12782, line: 78, type: !13378, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13380)
!13378 = !DISubroutineType(types: !13379)
!13379 = !{!334, !108}
!13380 = !{!13381}
!13381 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13377, file: !12782, line: 78, type: !108)
!13382 = !DILocation(line: 0, scope: !13377)
!13383 = !DILocation(line: 80, column: 21, scope: !13377)
!13384 = !DILocation(line: 80, column: 2, scope: !13377)
!13385 = distinct !DISubprogram(name: "z_waitq_init", scope: !13386, file: !13386, line: 47, type: !13387, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13389)
!13386 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13387 = !DISubroutineType(types: !13388)
!13388 = !{null, !2211}
!13389 = !{!13390}
!13390 = !DILocalVariable(name: "w", arg: 1, scope: !13385, file: !13386, line: 47, type: !2211)
!13391 = !DILocation(line: 0, scope: !13385)
!13392 = !DILocation(line: 49, column: 21, scope: !13385)
!13393 = !DILocation(line: 49, column: 2, scope: !13385)
!13394 = !DILocation(line: 50, column: 1, scope: !13385)
!13395 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2190, file: !2190, line: 791, type: !13396, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13399)
!13396 = !DISubroutineType(types: !13397)
!13397 = !{null, !13398, !109, !110, !32}
!13398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 32)
!13399 = !{!13400, !13401, !13402, !13403}
!13400 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13395, file: !2190, line: 791, type: !13398)
!13401 = !DILocalVariable(name: "priority", arg: 2, scope: !13395, file: !2190, line: 791, type: !109)
!13402 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13395, file: !2190, line: 792, type: !110)
!13403 = !DILocalVariable(name: "options", arg: 4, scope: !13395, file: !2190, line: 792, type: !32)
!13404 = !DILocation(line: 0, scope: !13395)
!13405 = !DILocation(line: 795, column: 15, scope: !13395)
!13406 = !DILocation(line: 795, column: 25, scope: !13395)
!13407 = !DILocation(line: 796, column: 30, scope: !13395)
!13408 = !DILocation(line: 796, column: 15, scope: !13395)
!13409 = !DILocation(line: 796, column: 28, scope: !13395)
!13410 = !DILocation(line: 797, column: 30, scope: !13395)
!13411 = !DILocation(line: 797, column: 15, scope: !13395)
!13412 = !DILocation(line: 797, column: 28, scope: !13395)
!13413 = !DILocation(line: 799, column: 22, scope: !13395)
!13414 = !DILocation(line: 799, column: 15, scope: !13395)
!13415 = !DILocation(line: 799, column: 20, scope: !13395)
!13416 = !DILocation(line: 801, column: 15, scope: !13395)
!13417 = !DILocation(line: 801, column: 28, scope: !13395)
!13418 = !DILocation(line: 814, column: 2, scope: !13395)
!13419 = !DILocation(line: 815, column: 1, scope: !13395)
!13420 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2190, file: !2190, line: 449, type: !13421, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13423)
!13421 = !DISubroutineType(types: !13422)
!13422 = !{!1165, !2194, !13295, !235}
!13423 = !{!13424, !13425, !13426, !13427, !13428, !13429, !13430, !13431}
!13424 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13420, file: !2190, line: 449, type: !2194)
!13425 = !DILocalVariable(name: "stack", arg: 2, scope: !13420, file: !2190, line: 450, type: !13295)
!13426 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13420, file: !2190, line: 450, type: !235)
!13427 = !DILocalVariable(name: "stack_obj_size", scope: !13420, file: !2190, line: 452, type: !235)
!13428 = !DILocalVariable(name: "stack_buf_size", scope: !13420, file: !2190, line: 452, type: !235)
!13429 = !DILocalVariable(name: "stack_ptr", scope: !13420, file: !2190, line: 453, type: !1165)
!13430 = !DILocalVariable(name: "stack_buf_start", scope: !13420, file: !2190, line: 453, type: !1165)
!13431 = !DILocalVariable(name: "delta", scope: !13420, file: !2190, line: 454, type: !235)
!13432 = !DILocation(line: 0, scope: !13420)
!13433 = !DILocation(line: 465, column: 20, scope: !13434)
!13434 = distinct !DILexicalBlock(scope: !13420, file: !2190, line: 463, column: 2)
!13435 = !DILocation(line: 466, column: 21, scope: !13434)
!13436 = !DILocation(line: 473, column: 28, scope: !13420)
!13437 = !DILocation(line: 514, column: 33, scope: !13420)
!13438 = !DILocation(line: 514, column: 25, scope: !13420)
!13439 = !DILocation(line: 514, column: 31, scope: !13420)
!13440 = !DILocation(line: 515, column: 25, scope: !13420)
!13441 = !DILocation(line: 515, column: 30, scope: !13420)
!13442 = !DILocation(line: 516, column: 25, scope: !13420)
!13443 = !DILocation(line: 516, column: 31, scope: !13420)
!13444 = !DILocation(line: 520, column: 2, scope: !13420)
!13445 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !273, file: !273, line: 331, type: !13446, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13448)
!13446 = !DISubroutineType(types: !13447)
!13447 = !{!1165, !13295}
!13448 = !{!13449}
!13449 = !DILocalVariable(name: "sym", arg: 1, scope: !13445, file: !273, line: 331, type: !13295)
!13450 = !DILocation(line: 0, scope: !13445)
!13451 = !DILocation(line: 333, column: 21, scope: !13445)
!13452 = !DILocation(line: 333, column: 2, scope: !13445)
!13453 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13454, file: !13454, line: 40, type: !13455, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13457)
!13454 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13455 = !DISubroutineType(types: !13456)
!13456 = !{null, !13398}
!13457 = !{!13458}
!13458 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13453, file: !13454, line: 40, type: !13398)
!13459 = !DILocation(line: 0, scope: !13453)
!13460 = !DILocation(line: 42, column: 31, scope: !13453)
!13461 = !DILocation(line: 42, column: 2, scope: !13453)
!13462 = !DILocation(line: 43, column: 1, scope: !13453)
!13463 = distinct !DISubprogram(name: "z_init_timeout", scope: !13454, file: !13454, line: 25, type: !2237, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13464)
!13464 = !{!13465}
!13465 = !DILocalVariable(name: "to", arg: 1, scope: !13463, file: !13454, line: 25, type: !2239)
!13466 = !DILocation(line: 0, scope: !13463)
!13467 = !DILocation(line: 27, column: 22, scope: !13463)
!13468 = !DILocation(line: 27, column: 2, scope: !13463)
!13469 = !DILocation(line: 28, column: 1, scope: !13463)
!13470 = distinct !DISubprogram(name: "sys_dnode_init", scope: !128, file: !128, line: 211, type: !13471, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13473)
!13471 = !DISubroutineType(types: !13472)
!13472 = !{null, !2171}
!13473 = !{!13474}
!13474 = !DILocalVariable(name: "node", arg: 1, scope: !13470, file: !128, line: 211, type: !2171)
!13475 = !DILocation(line: 0, scope: !13470)
!13476 = !DILocation(line: 213, column: 8, scope: !13470)
!13477 = !DILocation(line: 213, column: 13, scope: !13470)
!13478 = !DILocation(line: 214, column: 8, scope: !13470)
!13479 = !DILocation(line: 214, column: 13, scope: !13470)
!13480 = !DILocation(line: 215, column: 1, scope: !13470)
!13481 = distinct !DISubprogram(name: "sys_dlist_init", scope: !128, file: !128, line: 197, type: !13482, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13485)
!13482 = !DISubroutineType(types: !13483)
!13483 = !{null, !13484}
!13484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 32)
!13485 = !{!13486}
!13486 = !DILocalVariable(name: "list", arg: 1, scope: !13481, file: !128, line: 197, type: !13484)
!13487 = !DILocation(line: 0, scope: !13481)
!13488 = !DILocation(line: 199, column: 8, scope: !13481)
!13489 = !DILocation(line: 199, column: 13, scope: !13481)
!13490 = !DILocation(line: 200, column: 8, scope: !13481)
!13491 = !DILocation(line: 200, column: 13, scope: !13481)
!13492 = !DILocation(line: 201, column: 1, scope: !13481)
!13493 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2190, file: !2190, line: 641, type: !13494, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13500)
!13494 = !DISubroutineType(types: !13495)
!13495 = !{!2193, !2194, !13295, !235, !215, !108, !108, !108, !109, !110, !13496}
!13496 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !13497)
!13497 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !13498)
!13498 = !{!13499}
!13499 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13497, file: !105, line: 66, baseType: !104, size: 64)
!13500 = !{!13501, !13502, !13503, !13504, !13505, !13506, !13507, !13508, !13509, !13510}
!13501 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13493, file: !2190, line: 641, type: !2194)
!13502 = !DILocalVariable(name: "stack", arg: 2, scope: !13493, file: !2190, line: 642, type: !13295)
!13503 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13493, file: !2190, line: 643, type: !235)
!13504 = !DILocalVariable(name: "entry", arg: 4, scope: !13493, file: !2190, line: 643, type: !215)
!13505 = !DILocalVariable(name: "p1", arg: 5, scope: !13493, file: !2190, line: 644, type: !108)
!13506 = !DILocalVariable(name: "p2", arg: 6, scope: !13493, file: !2190, line: 644, type: !108)
!13507 = !DILocalVariable(name: "p3", arg: 7, scope: !13493, file: !2190, line: 644, type: !108)
!13508 = !DILocalVariable(name: "prio", arg: 8, scope: !13493, file: !2190, line: 645, type: !109)
!13509 = !DILocalVariable(name: "options", arg: 9, scope: !13493, file: !2190, line: 645, type: !110)
!13510 = !DILocalVariable(name: "delay", arg: 10, scope: !13493, file: !2190, line: 645, type: !13496)
!13511 = !DILocation(line: 0, scope: !13493)
!13512 = !DILocation(line: 1031, column: 3, scope: !13126, inlinedAt: !13513)
!13513 = distinct !DILocation(line: 48, column: 10, scope: !13130, inlinedAt: !13514)
!13514 = distinct !DILocation(line: 647, column: 2, scope: !13515)
!13515 = distinct !DILexicalBlock(scope: !13516, file: !2190, line: 647, column: 2)
!13516 = distinct !DILexicalBlock(scope: !13493, file: !2190, line: 647, column: 2)
!13517 = !DILocation(line: 0, scope: !13126, inlinedAt: !13513)
!13518 = !DILocation(line: 48, column: 9, scope: !13130, inlinedAt: !13514)
!13519 = !DILocation(line: 647, column: 2, scope: !13516)
!13520 = !DILocation(line: 647, column: 2, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13515, file: !2190, line: 647, column: 2)
!13522 = !DILocation(line: 649, column: 2, scope: !13493)
!13523 = !DILocation(line: 652, column: 7, scope: !13524)
!13524 = distinct !DILexicalBlock(scope: !13493, file: !2190, line: 652, column: 6)
!13525 = !DILocation(line: 652, column: 6, scope: !13493)
!13526 = !DILocation(line: 653, column: 3, scope: !13527)
!13527 = distinct !DILexicalBlock(scope: !13524, file: !2190, line: 652, column: 39)
!13528 = !DILocation(line: 654, column: 2, scope: !13527)
!13529 = !DILocation(line: 656, column: 2, scope: !13493)
!13530 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2190, file: !2190, line: 401, type: !13531, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13533)
!13531 = !DISubroutineType(types: !13532)
!13532 = !{null, !2194, !13496}
!13533 = !{!13534, !13535}
!13534 = !DILocalVariable(name: "thread", arg: 1, scope: !13530, file: !2190, line: 401, type: !2194)
!13535 = !DILocalVariable(name: "delay", arg: 2, scope: !13530, file: !2190, line: 401, type: !13496)
!13536 = !DILocation(line: 0, scope: !13530)
!13537 = !DILocation(line: 404, column: 6, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13530, file: !2190, line: 404, column: 6)
!13539 = !DILocation(line: 404, column: 6, scope: !13530)
!13540 = !DILocation(line: 405, column: 3, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13538, file: !2190, line: 404, column: 38)
!13542 = !DILocation(line: 406, column: 2, scope: !13541)
!13543 = !DILocation(line: 407, column: 3, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13538, file: !2190, line: 406, column: 9)
!13545 = !DILocation(line: 413, column: 1, scope: !13530)
!13546 = distinct !DISubprogram(name: "k_thread_start", scope: !3354, file: !3354, line: 205, type: !13547, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13549)
!13547 = !DISubroutineType(types: !13548)
!13548 = !{null, !2193}
!13549 = !{!13550}
!13550 = !DILocalVariable(name: "thread", arg: 1, scope: !13546, file: !3354, line: 205, type: !2193)
!13551 = !DILocation(line: 0, scope: !13546)
!13552 = !DILocation(line: 214, column: 2, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13546, file: !3354, line: 214, column: 2)
!13554 = !{i64 2155093773}
!13555 = !DILocation(line: 215, column: 2, scope: !13546)
!13556 = !DILocation(line: 216, column: 1, scope: !13546)
!13557 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13454, file: !13454, line: 47, type: !13531, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13558)
!13558 = !{!13559, !13560}
!13559 = !DILocalVariable(name: "thread", arg: 1, scope: !13557, file: !13454, line: 47, type: !2194)
!13560 = !DILocalVariable(name: "ticks", arg: 2, scope: !13557, file: !13454, line: 47, type: !13496)
!13561 = !DILocation(line: 0, scope: !13557)
!13562 = !DILocation(line: 49, column: 30, scope: !13557)
!13563 = !DILocation(line: 49, column: 2, scope: !13557)
!13564 = !DILocation(line: 50, column: 1, scope: !13557)
!13565 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2190, file: !2190, line: 748, type: !3169, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13566)
!13566 = !{!13567, !13585}
!13567 = !DILocalVariable(name: "thread_data", scope: !13568, file: !2190, line: 750, type: !13569)
!13568 = distinct !DILexicalBlock(scope: !13565, file: !2190, line: 750, column: 2)
!13569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13570, size: 32)
!13570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !119, line: 620, size: 384, elements: !13571)
!13571 = !{!13572, !13573, !13574, !13575, !13576, !13577, !13578, !13579, !13580, !13581, !13582, !13584}
!13572 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13570, file: !119, line: 621, baseType: !2194, size: 32)
!13573 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13570, file: !119, line: 622, baseType: !13295, size: 32, offset: 32)
!13574 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13570, file: !119, line: 623, baseType: !32, size: 32, offset: 64)
!13575 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13570, file: !119, line: 624, baseType: !215, size: 32, offset: 96)
!13576 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13570, file: !119, line: 625, baseType: !108, size: 32, offset: 128)
!13577 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13570, file: !119, line: 626, baseType: !108, size: 32, offset: 160)
!13578 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13570, file: !119, line: 627, baseType: !108, size: 32, offset: 192)
!13579 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13570, file: !119, line: 628, baseType: !109, size: 32, offset: 224)
!13580 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13570, file: !119, line: 629, baseType: !110, size: 32, offset: 256)
!13581 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13570, file: !119, line: 630, baseType: !765, size: 32, offset: 288)
!13582 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13570, file: !119, line: 631, baseType: !13583, size: 32, offset: 320)
!13583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3169, size: 32)
!13584 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13570, file: !119, line: 632, baseType: !324, size: 32, offset: 352)
!13585 = !DILocalVariable(name: "thread_data", scope: !13586, file: !2190, line: 781, type: !13569)
!13586 = distinct !DILexicalBlock(scope: !13565, file: !2190, line: 781, column: 2)
!13587 = !DILocation(line: 0, scope: !13568)
!13588 = !DILocation(line: 750, column: 2, scope: !13589)
!13589 = distinct !DILexicalBlock(scope: !13590, file: !2190, line: 750, column: 2)
!13590 = distinct !DILexicalBlock(scope: !13591, file: !2190, line: 750, column: 2)
!13591 = distinct !DILexicalBlock(scope: !13568, file: !2190, line: 750, column: 2)
!13592 = !DILocation(line: 750, column: 2, scope: !13593)
!13593 = distinct !DILexicalBlock(scope: !13594, file: !2190, line: 750, column: 2)
!13594 = distinct !DILexicalBlock(scope: !13589, file: !2190, line: 750, column: 2)
!13595 = !DILocation(line: 750, column: 2, scope: !13590)
!13596 = !DILocation(line: 750, column: 2, scope: !13568)
!13597 = !DILocation(line: 780, column: 2, scope: !13565)
!13598 = !DILocation(line: 0, scope: !13586)
!13599 = !DILocation(line: 781, column: 2, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13601, file: !2190, line: 781, column: 2)
!13601 = distinct !DILexicalBlock(scope: !13602, file: !2190, line: 781, column: 2)
!13602 = distinct !DILexicalBlock(scope: !13586, file: !2190, line: 781, column: 2)
!13603 = !DILocation(line: 752, column: 17, scope: !13604)
!13604 = distinct !DILexicalBlock(scope: !13591, file: !2190, line: 750, column: 38)
!13605 = !DILocation(line: 753, column: 17, scope: !13604)
!13606 = !DILocation(line: 754, column: 17, scope: !13604)
!13607 = !DILocation(line: 755, column: 17, scope: !13604)
!13608 = !DILocation(line: 756, column: 17, scope: !13604)
!13609 = !DILocation(line: 757, column: 17, scope: !13604)
!13610 = !DILocation(line: 758, column: 17, scope: !13604)
!13611 = !DILocation(line: 759, column: 17, scope: !13604)
!13612 = !DILocation(line: 760, column: 17, scope: !13604)
!13613 = !DILocation(line: 761, column: 17, scope: !13604)
!13614 = !DILocation(line: 751, column: 3, scope: !13604)
!13615 = !DILocation(line: 763, column: 16, scope: !13604)
!13616 = !DILocation(line: 763, column: 29, scope: !13604)
!13617 = !DILocation(line: 763, column: 39, scope: !13604)
!13618 = !DILocation(line: 750, column: 2, scope: !13591)
!13619 = !DILocation(line: 750, column: 2, scope: !13594)
!13620 = distinct !{!13620, !13596, !13621}
!13621 = !DILocation(line: 764, column: 2, scope: !13568)
!13622 = !DILocation(line: 781, column: 2, scope: !13623)
!13623 = distinct !DILexicalBlock(scope: !13624, file: !2190, line: 781, column: 2)
!13624 = distinct !DILexicalBlock(scope: !13600, file: !2190, line: 781, column: 2)
!13625 = !DILocation(line: 781, column: 2, scope: !13601)
!13626 = !DILocation(line: 781, column: 2, scope: !13586)
!13627 = !DILocation(line: 787, column: 2, scope: !13565)
!13628 = !DILocation(line: 788, column: 1, scope: !13565)
!13629 = !DILocation(line: 782, column: 20, scope: !13630)
!13630 = distinct !DILexicalBlock(scope: !13631, file: !2190, line: 782, column: 7)
!13631 = distinct !DILexicalBlock(scope: !13602, file: !2190, line: 781, column: 38)
!13632 = !DILocation(line: 782, column: 31, scope: !13630)
!13633 = !DILocation(line: 782, column: 7, scope: !13631)
!13634 = !DILocation(line: 783, column: 37, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13630, file: !2190, line: 782, column: 51)
!13636 = !DILocation(line: 784, column: 10, scope: !13635)
!13637 = !DILocation(line: 783, column: 4, scope: !13635)
!13638 = !DILocation(line: 785, column: 3, scope: !13635)
!13639 = !DILocation(line: 781, column: 2, scope: !13602)
!13640 = !DILocation(line: 781, column: 2, scope: !13624)
!13641 = distinct !{!13641, !13626, !13642}
!13642 = !DILocation(line: 786, column: 2, scope: !13586)
!13643 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3407, file: !3407, line: 403, type: !3408, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13644)
!13644 = !{!13645}
!13645 = !DILocalVariable(name: "t", arg: 1, scope: !13643, file: !3407, line: 403, type: !111)
!13646 = !DILocation(line: 0, scope: !13643)
!13647 = !DILocalVariable(name: "t", arg: 1, scope: !13648, file: !3407, line: 102, type: !111)
!13648 = distinct !DISubprogram(name: "z_tmcvt", scope: !3407, file: !3407, line: 102, type: !3415, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13649)
!13649 = !{!13647, !13650, !13651, !13652, !13653, !13654, !13655, !13656, !13657, !13658, !13659}
!13650 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13648, file: !3407, line: 102, type: !110)
!13651 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13648, file: !3407, line: 103, type: !110)
!13652 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13648, file: !3407, line: 103, type: !334)
!13653 = !DILocalVariable(name: "result32", arg: 5, scope: !13648, file: !3407, line: 104, type: !334)
!13654 = !DILocalVariable(name: "round_up", arg: 6, scope: !13648, file: !3407, line: 104, type: !334)
!13655 = !DILocalVariable(name: "round_off", arg: 7, scope: !13648, file: !3407, line: 105, type: !334)
!13656 = !DILocalVariable(name: "mul_ratio", scope: !13648, file: !3407, line: 107, type: !334)
!13657 = !DILocalVariable(name: "div_ratio", scope: !13648, file: !3407, line: 109, type: !334)
!13658 = !DILocalVariable(name: "off", scope: !13648, file: !3407, line: 116, type: !111)
!13659 = !DILocalVariable(name: "rdivisor", scope: !13660, file: !3407, line: 119, type: !110)
!13660 = distinct !DILexicalBlock(scope: !13661, file: !3407, line: 118, column: 18)
!13661 = distinct !DILexicalBlock(scope: !13648, file: !3407, line: 118, column: 6)
!13662 = !DILocation(line: 0, scope: !13648, inlinedAt: !13663)
!13663 = distinct !DILocation(line: 406, column: 9, scope: !13643)
!13664 = !DILocation(line: 145, column: 13, scope: !13665, inlinedAt: !13663)
!13665 = distinct !DILexicalBlock(scope: !13666, file: !3407, line: 144, column: 10)
!13666 = distinct !DILexicalBlock(scope: !13667, file: !3407, line: 142, column: 7)
!13667 = distinct !DILexicalBlock(scope: !13668, file: !3407, line: 141, column: 24)
!13668 = distinct !DILexicalBlock(scope: !13669, file: !3407, line: 141, column: 13)
!13669 = distinct !DILexicalBlock(scope: !13648, file: !3407, line: 134, column: 6)
!13670 = !DILocation(line: 406, column: 2, scope: !13643)
!13671 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2190, file: !2190, line: 817, type: !4522, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13672)
!13672 = !{!13673, !13674, !13675, !13676}
!13673 = !DILocalVariable(name: "entry", arg: 1, scope: !13671, file: !2190, line: 817, type: !215)
!13674 = !DILocalVariable(name: "p1", arg: 2, scope: !13671, file: !2190, line: 818, type: !108)
!13675 = !DILocalVariable(name: "p2", arg: 3, scope: !13671, file: !2190, line: 818, type: !108)
!13676 = !DILocalVariable(name: "p3", arg: 4, scope: !13671, file: !2190, line: 818, type: !108)
!13677 = !DILocation(line: 0, scope: !13671)
!13678 = !DILocation(line: 822, column: 2, scope: !13671)
!13679 = !DILocation(line: 822, column: 17, scope: !13671)
!13680 = !DILocation(line: 822, column: 30, scope: !13671)
!13681 = !DILocation(line: 823, column: 2, scope: !13671)
!13682 = !DILocation(line: 825, column: 2, scope: !13671)
!13683 = !DILocation(line: 825, column: 18, scope: !13671)
!13684 = !DILocation(line: 825, column: 25, scope: !13671)
!13685 = !DILocation(line: 826, column: 18, scope: !13671)
!13686 = !DILocation(line: 826, column: 29, scope: !13671)
!13687 = !DILocation(line: 827, column: 18, scope: !13671)
!13688 = !DILocation(line: 827, column: 29, scope: !13671)
!13689 = !DILocation(line: 828, column: 18, scope: !13671)
!13690 = !DILocation(line: 828, column: 29, scope: !13671)
!13691 = !DILocation(line: 845, column: 2, scope: !13671)
!13692 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2190, file: !2190, line: 888, type: !13693, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13695)
!13693 = !DISubroutineType(types: !13694)
!13694 = !{!109, !2194}
!13695 = !{!13696}
!13696 = !DILocalVariable(name: "thread", arg: 1, scope: !13692, file: !2190, line: 888, type: !2194)
!13697 = !DILocation(line: 0, scope: !13692)
!13698 = !DILocation(line: 893, column: 2, scope: !13692)
!13699 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2190, file: !2190, line: 897, type: !13700, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13702)
!13700 = !DISubroutineType(types: !13701)
!13701 = !{!109, !2194, !32}
!13702 = !{!13703, !13704}
!13703 = !DILocalVariable(name: "thread", arg: 1, scope: !13699, file: !2190, line: 897, type: !2194)
!13704 = !DILocalVariable(name: "options", arg: 2, scope: !13699, file: !2190, line: 897, type: !32)
!13705 = !DILocation(line: 0, scope: !13699)
!13706 = !DILocation(line: 902, column: 2, scope: !13699)
!13707 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2190, file: !2190, line: 1072, type: !13708, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13713)
!13708 = !DISubroutineType(types: !13709)
!13709 = !{!109, !2193, !13710}
!13710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13711, size: 32)
!13711 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !145, line: 234, baseType: !13712)
!13712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !145, line: 192, elements: !2100)
!13713 = !{!13714, !13715}
!13714 = !DILocalVariable(name: "thread", arg: 1, scope: !13707, file: !2190, line: 1072, type: !2193)
!13715 = !DILocalVariable(name: "stats", arg: 2, scope: !13707, file: !2190, line: 1073, type: !13710)
!13716 = !DILocation(line: 0, scope: !13707)
!13717 = !DILocation(line: 1075, column: 14, scope: !13718)
!13718 = distinct !DILexicalBlock(scope: !13707, file: !2190, line: 1075, column: 6)
!13719 = !DILocation(line: 1075, column: 23, scope: !13718)
!13720 = !DILocation(line: 1086, column: 1, scope: !13707)
!13721 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2190, file: !2190, line: 1088, type: !13722, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2168, retainedNodes: !13724)
!13722 = !DISubroutineType(types: !13723)
!13723 = !{!109, !13710}
!13724 = !{!13725}
!13725 = !DILocalVariable(name: "stats", arg: 1, scope: !13721, file: !2190, line: 1088, type: !13710)
!13726 = !DILocation(line: 0, scope: !13721)
!13727 = !DILocation(line: 1094, column: 12, scope: !13728)
!13728 = distinct !DILexicalBlock(scope: !13721, file: !2190, line: 1094, column: 6)
!13729 = !DILocation(line: 1120, column: 1, scope: !13721)
!13730 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13731, file: !13731, line: 20, type: !3169, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !2100)
!13731 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13732 = !DILocation(line: 30, column: 2, scope: !13730)
!13733 = !DILocation(line: 31, column: 1, scope: !13730)
!13734 = distinct !DISubprogram(name: "idle", scope: !13731, file: !13731, line: 33, type: !218, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !13735)
!13735 = !{!13736, !13737, !13738}
!13736 = !DILocalVariable(name: "unused1", arg: 1, scope: !13734, file: !13731, line: 33, type: !108)
!13737 = !DILocalVariable(name: "unused2", arg: 2, scope: !13734, file: !13731, line: 33, type: !108)
!13738 = !DILocalVariable(name: "unused3", arg: 3, scope: !13734, file: !13731, line: 33, type: !108)
!13739 = !DILocation(line: 0, scope: !13734)
!13740 = !DILocation(line: 39, column: 2, scope: !13741)
!13741 = distinct !DILexicalBlock(scope: !13742, file: !13731, line: 39, column: 2)
!13742 = distinct !DILexicalBlock(scope: !13734, file: !13731, line: 39, column: 2)
!13743 = !DILocation(line: 39, column: 2, scope: !13742)
!13744 = !DILocation(line: 39, column: 2, scope: !13745)
!13745 = distinct !DILexicalBlock(scope: !13741, file: !13731, line: 39, column: 2)
!13746 = !DILocation(line: 55, column: 2, scope: !13747, inlinedAt: !13751)
!13747 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6069, file: !6069, line: 42, type: !6070, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !13748)
!13748 = !{!13749, !13750}
!13749 = !DILocalVariable(name: "key", scope: !13747, file: !6069, line: 44, type: !32)
!13750 = !DILocalVariable(name: "tmp", scope: !13747, file: !6069, line: 53, type: !32)
!13751 = distinct !DILocation(line: 62, column: 10, scope: !13752)
!13752 = distinct !DILexicalBlock(scope: !13734, file: !13731, line: 41, column: 15)
!13753 = !{i64 2280727}
!13754 = !DILocation(line: 0, scope: !13747, inlinedAt: !13751)
!13755 = !DILocation(line: 86, column: 3, scope: !13752)
!13756 = !DILocation(line: 41, column: 2, scope: !13734)
!13757 = distinct !{!13757, !13756, !13758}
!13758 = !DILocation(line: 105, column: 2, scope: !13734)
!13759 = distinct !DISubprogram(name: "k_cpu_idle", scope: !119, file: !119, line: 5627, type: !3169, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3150, retainedNodes: !2100)
!13760 = !DILocation(line: 5629, column: 2, scope: !13759)
!13761 = !DILocation(line: 5630, column: 1, scope: !13759)
!13762 = !DISubprogram(name: "arch_cpu_idle", scope: !216, file: !216, line: 167, type: !3169, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2100)
!13763 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2422, file: !2422, line: 49, type: !13764, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13773)
!13764 = !DISubroutineType(types: !13765)
!13765 = !{!109, !13766}
!13766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13767, size: 32)
!13767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !119, line: 2720, size: 160, elements: !13768)
!13768 = !{!13769, !13770, !13771, !13772}
!13769 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13767, file: !119, line: 2722, baseType: !2342, size: 64)
!13770 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !13767, file: !119, line: 2724, baseType: !2324, size: 32, offset: 64)
!13771 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !13767, file: !119, line: 2727, baseType: !110, size: 32, offset: 96)
!13772 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !13767, file: !119, line: 2730, baseType: !109, size: 32, offset: 128)
!13773 = !{!13774}
!13774 = !DILocalVariable(name: "mutex", arg: 1, scope: !13763, file: !2422, line: 49, type: !13766)
!13775 = !DILocation(line: 0, scope: !13763)
!13776 = !DILocation(line: 51, column: 9, scope: !13763)
!13777 = !DILocation(line: 51, column: 15, scope: !13763)
!13778 = !DILocation(line: 52, column: 9, scope: !13763)
!13779 = !DILocation(line: 52, column: 20, scope: !13763)
!13780 = !DILocation(line: 54, column: 23, scope: !13763)
!13781 = !DILocation(line: 54, column: 2, scope: !13763)
!13782 = !DILocation(line: 60, column: 2, scope: !13763)
!13783 = distinct !DISubprogram(name: "z_waitq_init", scope: !13386, file: !13386, line: 47, type: !13784, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13786)
!13784 = !DISubroutineType(types: !13785)
!13785 = !{null, !2341}
!13786 = !{!13787}
!13787 = !DILocalVariable(name: "w", arg: 1, scope: !13783, file: !13386, line: 47, type: !2341)
!13788 = !DILocation(line: 0, scope: !13783)
!13789 = !DILocation(line: 49, column: 21, scope: !13783)
!13790 = !DILocation(line: 49, column: 2, scope: !13783)
!13791 = !DILocation(line: 50, column: 1, scope: !13783)
!13792 = distinct !DISubprogram(name: "sys_dlist_init", scope: !128, file: !128, line: 197, type: !13793, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13796)
!13793 = !DISubroutineType(types: !13794)
!13794 = !{null, !13795}
!13795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 32)
!13796 = !{!13797}
!13797 = !DILocalVariable(name: "list", arg: 1, scope: !13792, file: !128, line: 197, type: !13795)
!13798 = !DILocation(line: 0, scope: !13792)
!13799 = !DILocation(line: 199, column: 8, scope: !13792)
!13800 = !DILocation(line: 199, column: 13, scope: !13792)
!13801 = !DILocation(line: 200, column: 8, scope: !13792)
!13802 = !DILocation(line: 200, column: 13, scope: !13792)
!13803 = !DILocation(line: 201, column: 1, scope: !13792)
!13804 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2422, file: !2422, line: 95, type: !13805, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13811)
!13805 = !DISubroutineType(types: !13806)
!13806 = !{!109, !13766, !13807}
!13807 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !13808)
!13808 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !13809)
!13809 = !{!13810}
!13810 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13808, file: !105, line: 66, baseType: !104, size: 64)
!13811 = !{!13812, !13813, !13814, !13815, !13820, !13821, !13822}
!13812 = !DILocalVariable(name: "mutex", arg: 1, scope: !13804, file: !2422, line: 95, type: !13766)
!13813 = !DILocalVariable(name: "timeout", arg: 2, scope: !13804, file: !2422, line: 95, type: !13807)
!13814 = !DILocalVariable(name: "new_prio", scope: !13804, file: !2422, line: 97, type: !109)
!13815 = !DILocalVariable(name: "key", scope: !13804, file: !2422, line: 98, type: !13816)
!13816 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !254, line: 106, baseType: !13817)
!13817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !254, line: 32, size: 32, elements: !13818)
!13818 = !{!13819}
!13819 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13817, file: !254, line: 33, baseType: !109, size: 32)
!13820 = !DILocalVariable(name: "resched", scope: !13804, file: !2422, line: 99, type: !334)
!13821 = !DILocalVariable(name: "got_mutex", scope: !13804, file: !2422, line: 146, type: !109)
!13822 = !DILocalVariable(name: "waiter", scope: !13823, file: !2422, line: 169, type: !2324)
!13823 = distinct !DILexicalBlock(scope: !13824, file: !2422, line: 168, column: 36)
!13824 = distinct !DILexicalBlock(scope: !13804, file: !2422, line: 168, column: 6)
!13825 = !DILocation(line: 0, scope: !13804)
!13826 = !DILocation(line: 1031, column: 3, scope: !13827, inlinedAt: !13830)
!13827 = distinct !DISubprogram(name: "__get_IPSR", scope: !6243, file: !6243, line: 1027, type: !3451, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13828)
!13828 = !{!13829}
!13829 = !DILocalVariable(name: "result", scope: !13827, file: !6243, line: 1029, type: !110)
!13830 = distinct !DILocation(line: 48, column: 10, scope: !13831, inlinedAt: !13832)
!13831 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7084, file: !7084, line: 46, type: !7085, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !2100)
!13832 = distinct !DILocation(line: 101, column: 2, scope: !13833)
!13833 = distinct !DILexicalBlock(scope: !13834, file: !2422, line: 101, column: 2)
!13834 = distinct !DILexicalBlock(scope: !13804, file: !2422, line: 101, column: 2)
!13835 = !{i64 3731569}
!13836 = !DILocation(line: 0, scope: !13827, inlinedAt: !13830)
!13837 = !DILocation(line: 48, column: 9, scope: !13831, inlinedAt: !13832)
!13838 = !DILocation(line: 101, column: 2, scope: !13834)
!13839 = !DILocation(line: 101, column: 2, scope: !13840)
!13840 = distinct !DILexicalBlock(scope: !13833, file: !2422, line: 101, column: 2)
!13841 = !DILocalVariable(name: "l", arg: 1, scope: !13842, file: !254, line: 136, type: !13845)
!13842 = distinct !DISubprogram(name: "k_spin_lock", scope: !254, file: !254, line: 136, type: !13843, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13846)
!13843 = !DISubroutineType(types: !13844)
!13844 = !{!13816, !13845}
!13845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 32)
!13846 = !{!13841, !13847}
!13847 = !DILocalVariable(name: "k", scope: !13842, file: !254, line: 139, type: !13816)
!13848 = !DILocation(line: 0, scope: !13842, inlinedAt: !13849)
!13849 = distinct !DILocation(line: 105, column: 8, scope: !13804)
!13850 = !DILocation(line: 55, column: 2, scope: !13851, inlinedAt: !13855)
!13851 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6069, file: !6069, line: 42, type: !6070, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13852)
!13852 = !{!13853, !13854}
!13853 = !DILocalVariable(name: "key", scope: !13851, file: !6069, line: 44, type: !32)
!13854 = !DILocalVariable(name: "tmp", scope: !13851, file: !6069, line: 53, type: !32)
!13855 = distinct !DILocation(line: 145, column: 10, scope: !13842, inlinedAt: !13849)
!13856 = !{i64 2285135}
!13857 = !DILocation(line: 0, scope: !13851, inlinedAt: !13855)
!13858 = !DILocation(line: 148, column: 2, scope: !13859, inlinedAt: !13849)
!13859 = distinct !DILexicalBlock(scope: !13860, file: !254, line: 148, column: 2)
!13860 = distinct !DILexicalBlock(scope: !13842, file: !254, line: 148, column: 2)
!13861 = !DILocation(line: 148, column: 2, scope: !13860, inlinedAt: !13849)
!13862 = !DILocation(line: 148, column: 2, scope: !13863, inlinedAt: !13849)
!13863 = distinct !DILexicalBlock(scope: !13859, file: !254, line: 148, column: 2)
!13864 = !DILocation(line: 160, column: 2, scope: !13842, inlinedAt: !13849)
!13865 = !DILocation(line: 107, column: 6, scope: !13866)
!13866 = distinct !DILexicalBlock(scope: !13804, file: !2422, line: 107, column: 6)
!13867 = !DILocation(line: 107, column: 6, scope: !13804)
!13868 = !{!"branch_weights", i32 2000, i32 1}
!13869 = !DILocation(line: 110, column: 6, scope: !13870)
!13870 = distinct !DILexicalBlock(scope: !13866, file: !2422, line: 107, column: 71)
!13871 = !DILocation(line: 110, column: 21, scope: !13870)
!13872 = !DILocation(line: 109, column: 28, scope: !13870)
!13873 = !DILocation(line: 111, column: 13, scope: !13870)
!13874 = !DILocation(line: 114, column: 18, scope: !13870)
!13875 = !DILocation(line: 109, column: 10, scope: !13870)
!13876 = !DILocation(line: 109, column: 26, scope: !13870)
!13877 = !DILocation(line: 113, column: 20, scope: !13870)
!13878 = !DILocation(line: 114, column: 10, scope: !13870)
!13879 = !DILocation(line: 114, column: 16, scope: !13870)
!13880 = !DILocalVariable(name: "key", arg: 2, scope: !13881, file: !254, line: 190, type: !13816)
!13881 = distinct !DISubprogram(name: "k_spin_unlock", scope: !254, file: !254, line: 189, type: !13882, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13884)
!13882 = !DISubroutineType(types: !13883)
!13883 = !{null, !13845, !13816}
!13884 = !{!13885, !13880}
!13885 = !DILocalVariable(name: "l", arg: 1, scope: !13881, file: !254, line: 189, type: !13845)
!13886 = !DILocation(line: 0, scope: !13881, inlinedAt: !13887)
!13887 = distinct !DILocation(line: 120, column: 3, scope: !13870)
!13888 = !DILocation(line: 194, column: 2, scope: !13889, inlinedAt: !13887)
!13889 = distinct !DILexicalBlock(scope: !13890, file: !254, line: 194, column: 2)
!13890 = distinct !DILexicalBlock(scope: !13881, file: !254, line: 194, column: 2)
!13891 = !DILocation(line: 194, column: 2, scope: !13890, inlinedAt: !13887)
!13892 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !13887)
!13893 = distinct !DILexicalBlock(scope: !13889, file: !254, line: 194, column: 2)
!13894 = !DILocalVariable(name: "key", arg: 1, scope: !13895, file: !6069, line: 84, type: !32)
!13895 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6069, file: !6069, line: 84, type: !6080, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13896)
!13896 = !{!13894}
!13897 = !DILocation(line: 0, scope: !13895, inlinedAt: !13898)
!13898 = distinct !DILocation(line: 215, column: 2, scope: !13881, inlinedAt: !13887)
!13899 = !DILocation(line: 95, column: 2, scope: !13895, inlinedAt: !13898)
!13900 = !{i64 2285952}
!13901 = !DILocation(line: 124, column: 3, scope: !13870)
!13902 = !DILocation(line: 127, column: 6, scope: !13903)
!13903 = distinct !DILexicalBlock(scope: !13804, file: !2422, line: 127, column: 6)
!13904 = !DILocation(line: 127, column: 6, scope: !13804)
!13905 = !{!"branch_weights", i32 1, i32 2000}
!13906 = !DILocation(line: 0, scope: !13881, inlinedAt: !13907)
!13907 = distinct !DILocation(line: 128, column: 3, scope: !13908)
!13908 = distinct !DILexicalBlock(scope: !13903, file: !2422, line: 127, column: 50)
!13909 = !DILocation(line: 194, column: 2, scope: !13889, inlinedAt: !13907)
!13910 = !DILocation(line: 194, column: 2, scope: !13890, inlinedAt: !13907)
!13911 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !13907)
!13912 = !DILocation(line: 0, scope: !13895, inlinedAt: !13913)
!13913 = distinct !DILocation(line: 215, column: 2, scope: !13881, inlinedAt: !13907)
!13914 = !DILocation(line: 95, column: 2, scope: !13895, inlinedAt: !13913)
!13915 = !DILocation(line: 132, column: 3, scope: !13908)
!13916 = !DILocation(line: 137, column: 53, scope: !13804)
!13917 = !DILocation(line: 137, column: 38, scope: !13804)
!13918 = !DILocation(line: 138, column: 29, scope: !13804)
!13919 = !DILocation(line: 138, column: 10, scope: !13804)
!13920 = !DILocation(line: 137, column: 13, scope: !13804)
!13921 = !DILocation(line: 142, column: 6, scope: !13922)
!13922 = distinct !DILexicalBlock(scope: !13804, file: !2422, line: 142, column: 6)
!13923 = !DILocation(line: 142, column: 6, scope: !13804)
!13924 = !DILocation(line: 143, column: 13, scope: !13925)
!13925 = distinct !DILexicalBlock(scope: !13922, file: !2422, line: 142, column: 59)
!13926 = !DILocation(line: 144, column: 2, scope: !13925)
!13927 = !DILocation(line: 146, column: 50, scope: !13804)
!13928 = !DILocation(line: 146, column: 18, scope: !13804)
!13929 = !DILocation(line: 153, column: 16, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13804, file: !2422, line: 153, column: 6)
!13931 = !DILocation(line: 153, column: 6, scope: !13804)
!13932 = !DILocation(line: 0, scope: !13842, inlinedAt: !13933)
!13933 = distinct !DILocation(line: 162, column: 8, scope: !13804)
!13934 = !DILocation(line: 55, column: 2, scope: !13851, inlinedAt: !13935)
!13935 = distinct !DILocation(line: 145, column: 10, scope: !13842, inlinedAt: !13933)
!13936 = !DILocation(line: 0, scope: !13851, inlinedAt: !13935)
!13937 = !DILocation(line: 148, column: 2, scope: !13859, inlinedAt: !13933)
!13938 = !DILocation(line: 148, column: 2, scope: !13860, inlinedAt: !13933)
!13939 = !DILocation(line: 148, column: 2, scope: !13863, inlinedAt: !13933)
!13940 = !DILocation(line: 160, column: 2, scope: !13842, inlinedAt: !13933)
!13941 = !DILocation(line: 168, column: 6, scope: !13824)
!13942 = !DILocation(line: 168, column: 6, scope: !13804)
!13943 = !DILocation(line: 169, column: 29, scope: !13823)
!13944 = !DILocation(line: 0, scope: !13823)
!13945 = !DILocation(line: 171, column: 22, scope: !13823)
!13946 = !DILocation(line: 171, column: 14, scope: !13823)
!13947 = !DILocation(line: 172, column: 42, scope: !13823)
!13948 = !DILocation(line: 172, column: 29, scope: !13823)
!13949 = !DILocation(line: 172, column: 55, scope: !13823)
!13950 = !DILocation(line: 172, column: 4, scope: !13823)
!13951 = !DILocation(line: 173, column: 11, scope: !13823)
!13952 = !DILocation(line: 177, column: 13, scope: !13823)
!13953 = !DILocation(line: 177, column: 48, scope: !13823)
!13954 = !DILocation(line: 180, column: 6, scope: !13804)
!13955 = !DILocation(line: 181, column: 3, scope: !13956)
!13956 = distinct !DILexicalBlock(scope: !13957, file: !2422, line: 180, column: 15)
!13957 = distinct !DILexicalBlock(scope: !13804, file: !2422, line: 180, column: 6)
!13958 = !DILocation(line: 182, column: 2, scope: !13956)
!13959 = !DILocation(line: 0, scope: !13881, inlinedAt: !13960)
!13960 = distinct !DILocation(line: 183, column: 3, scope: !13961)
!13961 = distinct !DILexicalBlock(scope: !13957, file: !2422, line: 182, column: 9)
!13962 = !DILocation(line: 194, column: 2, scope: !13889, inlinedAt: !13960)
!13963 = !DILocation(line: 194, column: 2, scope: !13890, inlinedAt: !13960)
!13964 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !13960)
!13965 = !DILocation(line: 0, scope: !13895, inlinedAt: !13966)
!13966 = distinct !DILocation(line: 215, column: 2, scope: !13881, inlinedAt: !13960)
!13967 = !DILocation(line: 95, column: 2, scope: !13895, inlinedAt: !13966)
!13968 = !DILocation(line: 189, column: 1, scope: !13804)
!13969 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2422, file: !2422, line: 72, type: !13970, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13972)
!13970 = !DISubroutineType(types: !13971)
!13971 = !{!765, !765, !765}
!13972 = !{!13973, !13974, !13975}
!13973 = !DILocalVariable(name: "target", arg: 1, scope: !13969, file: !2422, line: 72, type: !765)
!13974 = !DILocalVariable(name: "limit", arg: 2, scope: !13969, file: !2422, line: 72, type: !765)
!13975 = !DILocalVariable(name: "new_prio", scope: !13969, file: !2422, line: 74, type: !109)
!13976 = !DILocation(line: 0, scope: !13969)
!13977 = !DILocation(line: 74, column: 17, scope: !13969)
!13978 = !DILocation(line: 76, column: 13, scope: !13969)
!13979 = !DILocation(line: 78, column: 2, scope: !13969)
!13980 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12782, file: !12782, line: 211, type: !13981, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13983)
!13981 = !DISubroutineType(types: !13982)
!13982 = !{!334, !109, !109}
!13983 = !{!13984, !13985}
!13984 = !DILocalVariable(name: "prio", arg: 1, scope: !13980, file: !12782, line: 211, type: !109)
!13985 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13980, file: !12782, line: 211, type: !109)
!13986 = !DILocation(line: 0, scope: !13980)
!13987 = !DILocation(line: 213, column: 9, scope: !13980)
!13988 = !DILocation(line: 213, column: 2, scope: !13980)
!13989 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2422, file: !2422, line: 81, type: !13990, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !13992)
!13990 = !DISubroutineType(types: !13991)
!13991 = !{!334, !13766, !765}
!13992 = !{!13993, !13994}
!13993 = !DILocalVariable(name: "mutex", arg: 1, scope: !13989, file: !2422, line: 81, type: !13766)
!13994 = !DILocalVariable(name: "new_prio", arg: 2, scope: !13989, file: !2422, line: 81, type: !765)
!13995 = !DILocation(line: 0, scope: !13989)
!13996 = !DILocation(line: 83, column: 13, scope: !13997)
!13997 = distinct !DILexicalBlock(scope: !13989, file: !2422, line: 83, column: 6)
!13998 = !DILocation(line: 83, column: 25, scope: !13997)
!13999 = !DILocation(line: 83, column: 6, scope: !13997)
!14000 = !DILocation(line: 83, column: 30, scope: !13997)
!14001 = !DILocation(line: 83, column: 6, scope: !13989)
!14002 = !DILocation(line: 90, column: 10, scope: !14003)
!14003 = distinct !DILexicalBlock(scope: !13997, file: !2422, line: 83, column: 43)
!14004 = !DILocation(line: 90, column: 3, scope: !14003)
!14005 = !DILocation(line: 93, column: 1, scope: !13989)
!14006 = distinct !DISubprogram(name: "z_waitq_head", scope: !13386, file: !13386, line: 52, type: !14007, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !14009)
!14007 = !DISubroutineType(types: !14008)
!14008 = !{!2324, !2341}
!14009 = !{!14010}
!14010 = !DILocalVariable(name: "w", arg: 1, scope: !14006, file: !13386, line: 52, type: !2341)
!14011 = !DILocation(line: 0, scope: !14006)
!14012 = !DILocation(line: 54, column: 52, scope: !14006)
!14013 = !DILocation(line: 54, column: 28, scope: !14006)
!14014 = !DILocation(line: 54, column: 9, scope: !14006)
!14015 = !DILocation(line: 54, column: 2, scope: !14006)
!14016 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !128, file: !128, line: 294, type: !14017, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !14019)
!14017 = !DISubroutineType(types: !14018)
!14018 = !{!2309, !13795}
!14019 = !{!14020}
!14020 = !DILocalVariable(name: "list", arg: 1, scope: !14016, file: !128, line: 294, type: !13795)
!14021 = !DILocation(line: 0, scope: !14016)
!14022 = !DILocation(line: 296, column: 9, scope: !14016)
!14023 = !DILocation(line: 296, column: 49, scope: !14016)
!14024 = !DILocation(line: 296, column: 2, scope: !14016)
!14025 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !128, file: !128, line: 266, type: !14026, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !14028)
!14026 = !DISubroutineType(types: !14027)
!14027 = !{!334, !13795}
!14028 = !{!14029}
!14029 = !DILocalVariable(name: "list", arg: 1, scope: !14025, file: !128, line: 266, type: !13795)
!14030 = !DILocation(line: 0, scope: !14025)
!14031 = !DILocation(line: 268, column: 15, scope: !14025)
!14032 = !DILocation(line: 268, column: 20, scope: !14025)
!14033 = !DILocation(line: 268, column: 2, scope: !14025)
!14034 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12782, file: !12782, line: 206, type: !13981, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !14035)
!14035 = !{!14036, !14037}
!14036 = !DILocalVariable(name: "prio1", arg: 1, scope: !14034, file: !12782, line: 206, type: !109)
!14037 = !DILocalVariable(name: "prio2", arg: 2, scope: !14034, file: !12782, line: 206, type: !109)
!14038 = !DILocation(line: 0, scope: !14034)
!14039 = !DILocation(line: 208, column: 15, scope: !14034)
!14040 = !DILocation(line: 208, column: 2, scope: !14034)
!14041 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !12782, file: !12782, line: 186, type: !288, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !14042)
!14042 = !{!14043}
!14043 = !DILocalVariable(name: "prio", arg: 1, scope: !14041, file: !12782, line: 186, type: !109)
!14044 = !DILocation(line: 0, scope: !14041)
!14045 = !DILocation(line: 188, column: 9, scope: !14041)
!14046 = !DILocation(line: 188, column: 2, scope: !14041)
!14047 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !12782, file: !12782, line: 181, type: !14048, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !14050)
!14048 = !DISubroutineType(types: !14049)
!14049 = !{!334, !109}
!14050 = !{!14051}
!14051 = !DILocalVariable(name: "prio", arg: 1, scope: !14047, file: !12782, line: 181, type: !109)
!14052 = !DILocation(line: 0, scope: !14047)
!14053 = !DILocation(line: 183, column: 14, scope: !14047)
!14054 = !DILocation(line: 183, column: 2, scope: !14047)
!14055 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2422, file: !2422, line: 201, type: !13764, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !14056)
!14056 = !{!14057, !14058, !14059, !14060}
!14057 = !DILocalVariable(name: "mutex", arg: 1, scope: !14055, file: !2422, line: 201, type: !13766)
!14058 = !DILocalVariable(name: "new_owner", scope: !14055, file: !2422, line: 203, type: !2324)
!14059 = !DILocalVariable(name: "key", scope: !14055, file: !2422, line: 242, type: !13816)
!14060 = !DILabel(scope: !14055, name: "k_mutex_unlock_return", file: !2422, line: 270)
!14061 = !DILocation(line: 0, scope: !14055)
!14062 = !DILocation(line: 1031, column: 3, scope: !13827, inlinedAt: !14063)
!14063 = distinct !DILocation(line: 48, column: 10, scope: !13831, inlinedAt: !14064)
!14064 = distinct !DILocation(line: 205, column: 2, scope: !14065)
!14065 = distinct !DILexicalBlock(scope: !14066, file: !2422, line: 205, column: 2)
!14066 = distinct !DILexicalBlock(scope: !14055, file: !2422, line: 205, column: 2)
!14067 = !DILocation(line: 0, scope: !13827, inlinedAt: !14063)
!14068 = !DILocation(line: 48, column: 9, scope: !13831, inlinedAt: !14064)
!14069 = !DILocation(line: 205, column: 2, scope: !14066)
!14070 = !DILocation(line: 205, column: 2, scope: !14071)
!14071 = distinct !DILexicalBlock(scope: !14065, file: !2422, line: 205, column: 2)
!14072 = !DILocation(line: 209, column: 2, scope: !14073)
!14073 = distinct !DILexicalBlock(scope: !14055, file: !2422, line: 209, column: 2)
!14074 = !DILocation(line: 209, column: 2, scope: !14055)
!14075 = !DILocation(line: 217, column: 2, scope: !14076)
!14076 = distinct !DILexicalBlock(scope: !14055, file: !2422, line: 217, column: 2)
!14077 = !DILocation(line: 217, column: 2, scope: !14055)
!14078 = !DILocation(line: 229, column: 2, scope: !14079)
!14079 = distinct !DILexicalBlock(scope: !14080, file: !2422, line: 229, column: 2)
!14080 = distinct !DILexicalBlock(scope: !14055, file: !2422, line: 229, column: 2)
!14081 = !DILocation(line: 229, column: 2, scope: !14080)
!14082 = !DILocation(line: 229, column: 2, scope: !14083)
!14083 = distinct !DILexicalBlock(scope: !14079, file: !2422, line: 229, column: 2)
!14084 = !DILocation(line: 238, column: 20, scope: !14085)
!14085 = distinct !DILexicalBlock(scope: !14086, file: !2422, line: 237, column: 30)
!14086 = distinct !DILexicalBlock(scope: !14055, file: !2422, line: 237, column: 6)
!14087 = !DILocation(line: 239, column: 3, scope: !14085)
!14088 = !DILocation(line: 0, scope: !13842, inlinedAt: !14089)
!14089 = distinct !DILocation(line: 242, column: 25, scope: !14055)
!14090 = !DILocation(line: 55, column: 2, scope: !13851, inlinedAt: !14091)
!14091 = distinct !DILocation(line: 145, column: 10, scope: !13842, inlinedAt: !14089)
!14092 = !DILocation(line: 0, scope: !13851, inlinedAt: !14091)
!14093 = !DILocation(line: 148, column: 2, scope: !13859, inlinedAt: !14089)
!14094 = !DILocation(line: 148, column: 2, scope: !13860, inlinedAt: !14089)
!14095 = !DILocation(line: 148, column: 2, scope: !13863, inlinedAt: !14089)
!14096 = !DILocation(line: 160, column: 2, scope: !13842, inlinedAt: !14089)
!14097 = !DILocation(line: 244, column: 34, scope: !14055)
!14098 = !DILocation(line: 244, column: 2, scope: !14055)
!14099 = !DILocation(line: 247, column: 44, scope: !14055)
!14100 = !DILocation(line: 247, column: 14, scope: !14055)
!14101 = !DILocation(line: 249, column: 15, scope: !14055)
!14102 = !DILocation(line: 254, column: 16, scope: !14103)
!14103 = distinct !DILexicalBlock(scope: !14055, file: !2422, line: 254, column: 6)
!14104 = !DILocation(line: 254, column: 6, scope: !14055)
!14105 = !DILocation(line: 260, column: 44, scope: !14106)
!14106 = distinct !DILexicalBlock(scope: !14103, file: !2422, line: 254, column: 25)
!14107 = !DILocation(line: 260, column: 28, scope: !14106)
!14108 = !DILocation(line: 260, column: 26, scope: !14106)
!14109 = !DILocalVariable(name: "thread", arg: 1, scope: !14110, file: !12802, line: 65, type: !2324)
!14110 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12802, file: !12802, line: 65, type: !14111, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !14113)
!14111 = !DISubroutineType(types: !14112)
!14112 = !{null, !2324, !32}
!14113 = !{!14109, !14114}
!14114 = !DILocalVariable(name: "value", arg: 2, scope: !14110, file: !12802, line: 65, type: !32)
!14115 = !DILocation(line: 0, scope: !14110, inlinedAt: !14116)
!14116 = distinct !DILocation(line: 261, column: 3, scope: !14106)
!14117 = !DILocation(line: 67, column: 15, scope: !14110, inlinedAt: !14116)
!14118 = !DILocation(line: 67, column: 33, scope: !14110, inlinedAt: !14116)
!14119 = !DILocation(line: 262, column: 3, scope: !14106)
!14120 = !DILocation(line: 263, column: 3, scope: !14106)
!14121 = !DILocation(line: 264, column: 2, scope: !14106)
!14122 = !DILocation(line: 265, column: 21, scope: !14123)
!14123 = distinct !DILexicalBlock(scope: !14103, file: !2422, line: 264, column: 9)
!14124 = !DILocation(line: 0, scope: !13881, inlinedAt: !14125)
!14125 = distinct !DILocation(line: 266, column: 3, scope: !14123)
!14126 = !DILocation(line: 194, column: 2, scope: !13889, inlinedAt: !14125)
!14127 = !DILocation(line: 194, column: 2, scope: !13890, inlinedAt: !14125)
!14128 = !DILocation(line: 194, column: 2, scope: !13893, inlinedAt: !14125)
!14129 = !DILocation(line: 0, scope: !13895, inlinedAt: !14130)
!14130 = distinct !DILocation(line: 215, column: 2, scope: !13881, inlinedAt: !14125)
!14131 = !DILocation(line: 95, column: 2, scope: !13895, inlinedAt: !14130)
!14132 = !DILocation(line: 274, column: 1, scope: !14055)
!14133 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2543, file: !2543, line: 93, type: !14134, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14136)
!14134 = !DISubroutineType(types: !14135)
!14135 = !{!765, !2428, !2428}
!14136 = !{!14137, !14138, !14139, !14140}
!14137 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14133, file: !2543, line: 93, type: !2428)
!14138 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14133, file: !2543, line: 94, type: !2428)
!14139 = !DILocalVariable(name: "b1", scope: !14133, file: !2543, line: 97, type: !765)
!14140 = !DILocalVariable(name: "b2", scope: !14133, file: !2543, line: 98, type: !765)
!14141 = !DILocation(line: 0, scope: !14133)
!14142 = !DILocation(line: 97, column: 30, scope: !14133)
!14143 = !DILocation(line: 98, column: 30, scope: !14133)
!14144 = !DILocation(line: 100, column: 9, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14133, file: !2543, line: 100, column: 6)
!14146 = !DILocation(line: 100, column: 6, scope: !14133)
!14147 = !DILocation(line: 125, column: 1, scope: !14133)
!14148 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2543, file: !2543, line: 428, type: !14149, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14151)
!14149 = !DISubroutineType(types: !14150)
!14150 = !{null, !2428}
!14151 = !{!14152}
!14152 = !DILocalVariable(name: "curr", arg: 1, scope: !14148, file: !2543, line: 428, type: !2428)
!14153 = !DILocation(line: 0, scope: !14148)
!14154 = !DILocation(line: 434, column: 6, scope: !14155)
!14155 = distinct !DILexicalBlock(scope: !14148, file: !2543, line: 434, column: 6)
!14156 = !DILocation(line: 434, column: 23, scope: !14155)
!14157 = !DILocation(line: 434, column: 6, scope: !14148)
!14158 = !DILocation(line: 435, column: 50, scope: !14159)
!14159 = distinct !DILexicalBlock(scope: !14155, file: !2543, line: 434, column: 29)
!14160 = !DILocation(line: 435, column: 48, scope: !14159)
!14161 = !DILocation(line: 435, column: 29, scope: !14159)
!14162 = !DILocation(line: 436, column: 24, scope: !14159)
!14163 = !DILocation(line: 436, column: 3, scope: !14159)
!14164 = !DILocation(line: 437, column: 2, scope: !14159)
!14165 = !DILocation(line: 438, column: 1, scope: !14148)
!14166 = distinct !DISubprogram(name: "slice_time", scope: !2543, file: !2543, line: 407, type: !14167, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14169)
!14167 = !DISubroutineType(types: !14168)
!14168 = !{!109, !2428}
!14169 = !{!14170, !14171}
!14170 = !DILocalVariable(name: "curr", arg: 1, scope: !14166, file: !2543, line: 407, type: !2428)
!14171 = !DILocalVariable(name: "ret", scope: !14166, file: !2543, line: 409, type: !109)
!14172 = !DILocation(line: 0, scope: !14166)
!14173 = !DILocation(line: 409, column: 12, scope: !14166)
!14174 = !DILocation(line: 416, column: 2, scope: !14166)
!14175 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2543, file: !2543, line: 440, type: !14176, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14178)
!14176 = !DISubroutineType(types: !14177)
!14177 = !{null, !765, !109}
!14178 = !{!14179, !14180, !14181, !14187}
!14179 = !DILocalVariable(name: "slice", arg: 1, scope: !14175, file: !2543, line: 440, type: !765)
!14180 = !DILocalVariable(name: "prio", arg: 2, scope: !14175, file: !2543, line: 440, type: !109)
!14181 = !DILocalVariable(name: "__i", scope: !14182, file: !2543, line: 442, type: !14183)
!14182 = distinct !DILexicalBlock(scope: !14175, file: !2543, line: 442, column: 2)
!14183 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !254, line: 106, baseType: !14184)
!14184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !254, line: 32, size: 32, elements: !14185)
!14185 = !{!14186}
!14186 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14184, file: !254, line: 33, baseType: !109, size: 32)
!14187 = !DILocalVariable(name: "__key", scope: !14182, file: !2543, line: 442, type: !14183)
!14188 = !DILocation(line: 0, scope: !14175)
!14189 = !DILocation(line: 0, scope: !14182)
!14190 = !DILocalVariable(name: "l", arg: 1, scope: !14191, file: !254, line: 136, type: !14194)
!14191 = distinct !DISubprogram(name: "k_spin_lock", scope: !254, file: !254, line: 136, type: !14192, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14195)
!14192 = !DISubroutineType(types: !14193)
!14193 = !{!14183, !14194}
!14194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2531, size: 32)
!14195 = !{!14190, !14196}
!14196 = !DILocalVariable(name: "k", scope: !14191, file: !254, line: 139, type: !14183)
!14197 = !DILocation(line: 0, scope: !14191, inlinedAt: !14198)
!14198 = distinct !DILocation(line: 442, column: 2, scope: !14182)
!14199 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !14204)
!14200 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6069, file: !6069, line: 42, type: !6070, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14201)
!14201 = !{!14202, !14203}
!14202 = !DILocalVariable(name: "key", scope: !14200, file: !6069, line: 44, type: !32)
!14203 = !DILocalVariable(name: "tmp", scope: !14200, file: !6069, line: 53, type: !32)
!14204 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !14198)
!14205 = !{i64 2324698}
!14206 = !DILocation(line: 0, scope: !14200, inlinedAt: !14204)
!14207 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !14198)
!14208 = distinct !DILexicalBlock(scope: !14209, file: !254, line: 148, column: 2)
!14209 = distinct !DILexicalBlock(scope: !14191, file: !254, line: 148, column: 2)
!14210 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !14198)
!14211 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !14198)
!14212 = distinct !DILexicalBlock(scope: !14208, file: !254, line: 148, column: 2)
!14213 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !14198)
!14214 = !DILocation(line: 443, column: 29, scope: !14215)
!14215 = distinct !DILexicalBlock(scope: !14216, file: !2543, line: 442, column: 26)
!14216 = distinct !DILexicalBlock(scope: !14182, file: !2543, line: 442, column: 2)
!14217 = !DILocation(line: 444, column: 17, scope: !14215)
!14218 = !DILocation(line: 445, column: 51, scope: !14219)
!14219 = distinct !DILexicalBlock(scope: !14215, file: !2543, line: 445, column: 7)
!14220 = !DILocation(line: 445, column: 7, scope: !14215)
!14221 = !DILocation(line: 0, scope: !14215)
!14222 = !DILocation(line: 451, column: 18, scope: !14215)
!14223 = !DILocation(line: 452, column: 3, scope: !14215)
!14224 = !DILocalVariable(name: "key", arg: 2, scope: !14225, file: !254, line: 190, type: !14183)
!14225 = distinct !DISubprogram(name: "k_spin_unlock", scope: !254, file: !254, line: 189, type: !14226, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14228)
!14226 = !DISubroutineType(types: !14227)
!14227 = !{null, !14194, !14183}
!14228 = !{!14229, !14224}
!14229 = !DILocalVariable(name: "l", arg: 1, scope: !14225, file: !254, line: 189, type: !14194)
!14230 = !DILocation(line: 0, scope: !14225, inlinedAt: !14231)
!14231 = distinct !DILocation(line: 442, column: 2, scope: !14216)
!14232 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !14231)
!14233 = distinct !DILexicalBlock(scope: !14234, file: !254, line: 194, column: 2)
!14234 = distinct !DILexicalBlock(scope: !14225, file: !254, line: 194, column: 2)
!14235 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !14231)
!14236 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !14231)
!14237 = distinct !DILexicalBlock(scope: !14233, file: !254, line: 194, column: 2)
!14238 = !DILocalVariable(name: "key", arg: 1, scope: !14239, file: !6069, line: 84, type: !32)
!14239 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6069, file: !6069, line: 84, type: !6080, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14240)
!14240 = !{!14238}
!14241 = !DILocation(line: 0, scope: !14239, inlinedAt: !14242)
!14242 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !14231)
!14243 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !14242)
!14244 = !{i64 2325515}
!14245 = !DILocation(line: 454, column: 1, scope: !14175)
!14246 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3407, file: !3407, line: 389, type: !7305, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14247)
!14247 = !{!14248}
!14248 = !DILocalVariable(name: "t", arg: 1, scope: !14246, file: !3407, line: 389, type: !110)
!14249 = !DILocation(line: 0, scope: !14246)
!14250 = !DILocalVariable(name: "t", arg: 1, scope: !14251, file: !3407, line: 102, type: !111)
!14251 = distinct !DISubprogram(name: "z_tmcvt", scope: !3407, file: !3407, line: 102, type: !3415, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14252)
!14252 = !{!14250, !14253, !14254, !14255, !14256, !14257, !14258, !14259, !14260, !14261, !14262}
!14253 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14251, file: !3407, line: 102, type: !110)
!14254 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14251, file: !3407, line: 103, type: !110)
!14255 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14251, file: !3407, line: 103, type: !334)
!14256 = !DILocalVariable(name: "result32", arg: 5, scope: !14251, file: !3407, line: 104, type: !334)
!14257 = !DILocalVariable(name: "round_up", arg: 6, scope: !14251, file: !3407, line: 104, type: !334)
!14258 = !DILocalVariable(name: "round_off", arg: 7, scope: !14251, file: !3407, line: 105, type: !334)
!14259 = !DILocalVariable(name: "mul_ratio", scope: !14251, file: !3407, line: 107, type: !334)
!14260 = !DILocalVariable(name: "div_ratio", scope: !14251, file: !3407, line: 109, type: !334)
!14261 = !DILocalVariable(name: "off", scope: !14251, file: !3407, line: 116, type: !111)
!14262 = !DILocalVariable(name: "rdivisor", scope: !14263, file: !3407, line: 119, type: !110)
!14263 = distinct !DILexicalBlock(scope: !14264, file: !3407, line: 118, column: 18)
!14264 = distinct !DILexicalBlock(scope: !14251, file: !3407, line: 118, column: 6)
!14265 = !DILocation(line: 0, scope: !14251, inlinedAt: !14266)
!14266 = distinct !DILocation(line: 392, column: 9, scope: !14246)
!14267 = !DILocation(line: 143, column: 25, scope: !14268, inlinedAt: !14266)
!14268 = distinct !DILexicalBlock(scope: !14269, file: !3407, line: 142, column: 17)
!14269 = distinct !DILexicalBlock(scope: !14270, file: !3407, line: 142, column: 7)
!14270 = distinct !DILexicalBlock(scope: !14271, file: !3407, line: 141, column: 24)
!14271 = distinct !DILexicalBlock(scope: !14272, file: !3407, line: 141, column: 13)
!14272 = distinct !DILexicalBlock(scope: !14251, file: !3407, line: 134, column: 6)
!14273 = !DILocation(line: 392, column: 2, scope: !14246)
!14274 = distinct !DISubprogram(name: "z_time_slice", scope: !2543, file: !2543, line: 502, type: !3497, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14275)
!14275 = !{!14276, !14277}
!14276 = !DILocalVariable(name: "ticks", arg: 1, scope: !14274, file: !2543, line: 502, type: !109)
!14277 = !DILocalVariable(name: "key", scope: !14274, file: !2543, line: 511, type: !14183)
!14278 = !DILocation(line: 0, scope: !14274)
!14279 = !DILocation(line: 0, scope: !14191, inlinedAt: !14280)
!14280 = distinct !DILocation(line: 511, column: 25, scope: !14274)
!14281 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !14282)
!14282 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !14280)
!14283 = !DILocation(line: 0, scope: !14200, inlinedAt: !14282)
!14284 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !14280)
!14285 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !14280)
!14286 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !14280)
!14287 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !14280)
!14288 = !DILocation(line: 514, column: 6, scope: !14289)
!14289 = distinct !DILexicalBlock(scope: !14274, file: !2543, line: 514, column: 6)
!14290 = !DILocation(line: 514, column: 25, scope: !14289)
!14291 = !DILocation(line: 514, column: 22, scope: !14289)
!14292 = !DILocation(line: 514, column: 6, scope: !14274)
!14293 = !DILocation(line: 515, column: 3, scope: !14294)
!14294 = distinct !DILexicalBlock(scope: !14289, file: !2543, line: 514, column: 35)
!14295 = !DILocation(line: 0, scope: !14225, inlinedAt: !14296)
!14296 = distinct !DILocation(line: 516, column: 3, scope: !14294)
!14297 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !14296)
!14298 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !14296)
!14299 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !14296)
!14300 = !DILocation(line: 0, scope: !14239, inlinedAt: !14301)
!14301 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !14296)
!14302 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !14301)
!14303 = !DILocation(line: 517, column: 3, scope: !14294)
!14304 = !DILocation(line: 519, column: 18, scope: !14274)
!14305 = !DILocation(line: 522, column: 6, scope: !14306)
!14306 = distinct !DILexicalBlock(scope: !14274, file: !2543, line: 522, column: 6)
!14307 = !DILocation(line: 522, column: 27, scope: !14306)
!14308 = !DILocation(line: 522, column: 30, scope: !14306)
!14309 = !DILocation(line: 522, column: 6, scope: !14274)
!14310 = !DILocation(line: 523, column: 30, scope: !14311)
!14311 = distinct !DILexicalBlock(scope: !14312, file: !2543, line: 523, column: 7)
!14312 = distinct !DILexicalBlock(scope: !14306, file: !2543, line: 522, column: 51)
!14313 = !DILocation(line: 523, column: 13, scope: !14311)
!14314 = !DILocation(line: 523, column: 7, scope: !14312)
!14315 = !DILocation(line: 530, column: 10, scope: !14316)
!14316 = distinct !DILexicalBlock(scope: !14311, file: !2543, line: 523, column: 43)
!14317 = !DILocation(line: 531, column: 3, scope: !14316)
!14318 = !DILocation(line: 532, column: 30, scope: !14319)
!14319 = distinct !DILexicalBlock(scope: !14311, file: !2543, line: 531, column: 10)
!14320 = !DILocation(line: 535, column: 29, scope: !14321)
!14321 = distinct !DILexicalBlock(scope: !14306, file: !2543, line: 534, column: 9)
!14322 = !DILocation(line: 0, scope: !14225, inlinedAt: !14323)
!14323 = distinct !DILocation(line: 537, column: 2, scope: !14274)
!14324 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !14323)
!14325 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !14323)
!14326 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !14323)
!14327 = !DILocation(line: 0, scope: !14239, inlinedAt: !14328)
!14328 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !14323)
!14329 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !14328)
!14330 = !DILocation(line: 538, column: 1, scope: !14274)
!14331 = distinct !DISubprogram(name: "sliceable", scope: !2543, file: !2543, line: 468, type: !14332, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14334)
!14332 = !DISubroutineType(types: !14333)
!14333 = !{!334, !2428}
!14334 = !{!14335, !14336}
!14335 = !DILocalVariable(name: "thread", arg: 1, scope: !14331, file: !2543, line: 468, type: !2428)
!14336 = !DILocalVariable(name: "ret", scope: !14331, file: !2543, line: 470, type: !334)
!14337 = !DILocation(line: 0, scope: !14331)
!14338 = !DILocation(line: 470, column: 13, scope: !14331)
!14339 = !DILocation(line: 471, column: 3, scope: !14331)
!14340 = !DILocation(line: 471, column: 7, scope: !14331)
!14341 = !DILocation(line: 472, column: 3, scope: !14331)
!14342 = !DILocation(line: 472, column: 37, scope: !14331)
!14343 = !DILocation(line: 472, column: 24, scope: !14331)
!14344 = !DILocation(line: 472, column: 43, scope: !14331)
!14345 = !DILocation(line: 472, column: 7, scope: !14331)
!14346 = !DILocation(line: 473, column: 3, scope: !14331)
!14347 = !DILocation(line: 473, column: 7, scope: !14331)
!14348 = !DILocation(line: 473, column: 6, scope: !14331)
!14349 = !DILocation(line: 479, column: 2, scope: !14331)
!14350 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2543, file: !2543, line: 482, type: !14351, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14353)
!14351 = !DISubroutineType(types: !14352)
!14352 = !{!14183, !14183}
!14353 = !{!14354, !14355}
!14354 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14350, file: !2543, line: 482, type: !14183)
!14355 = !DILocalVariable(name: "curr", scope: !14350, file: !2543, line: 484, type: !2428)
!14356 = !DILocation(line: 0, scope: !14350)
!14357 = !DILocation(line: 484, column: 26, scope: !14350)
!14358 = !DILocation(line: 493, column: 7, scope: !14359)
!14359 = distinct !DILexicalBlock(scope: !14350, file: !2543, line: 493, column: 6)
!14360 = !DILocation(line: 493, column: 6, scope: !14350)
!14361 = !DILocation(line: 494, column: 3, scope: !14362)
!14362 = distinct !DILexicalBlock(scope: !14359, file: !2543, line: 493, column: 49)
!14363 = !DILocation(line: 495, column: 2, scope: !14362)
!14364 = !DILocation(line: 496, column: 2, scope: !14350)
!14365 = !DILocation(line: 499, column: 1, scope: !14350)
!14366 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12782, file: !12782, line: 106, type: !14332, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14367)
!14367 = !{!14368, !14369}
!14368 = !DILocalVariable(name: "thread", arg: 1, scope: !14366, file: !12782, line: 106, type: !2428)
!14369 = !DILocalVariable(name: "state", scope: !14366, file: !12782, line: 108, type: !167)
!14370 = !DILocation(line: 0, scope: !14366)
!14371 = !DILocation(line: 108, column: 31, scope: !14366)
!14372 = !DILocation(line: 110, column: 16, scope: !14366)
!14373 = !DILocation(line: 111, column: 41, scope: !14366)
!14374 = !DILocation(line: 110, column: 2, scope: !14366)
!14375 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2543, file: !2543, line: 393, type: !14149, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14376)
!14376 = !{!14377}
!14377 = !DILocalVariable(name: "thread", arg: 1, scope: !14375, file: !2543, line: 393, type: !2428)
!14378 = !DILocation(line: 0, scope: !14375)
!14379 = !DILocation(line: 395, column: 6, scope: !14380)
!14380 = distinct !DILexicalBlock(scope: !14375, file: !2543, line: 395, column: 6)
!14381 = !DILocation(line: 395, column: 6, scope: !14375)
!14382 = !DILocalVariable(name: "thread", arg: 1, scope: !14383, file: !2543, line: 264, type: !2428)
!14383 = distinct !DISubprogram(name: "dequeue_thread", scope: !2543, file: !2543, line: 264, type: !14149, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14384)
!14384 = !{!14382}
!14385 = !DILocation(line: 0, scope: !14383, inlinedAt: !14386)
!14386 = distinct !DILocation(line: 396, column: 3, scope: !14387)
!14387 = distinct !DILexicalBlock(scope: !14380, file: !2543, line: 395, column: 34)
!14388 = !DILocation(line: 266, column: 15, scope: !14383, inlinedAt: !14386)
!14389 = !DILocation(line: 266, column: 28, scope: !14383, inlinedAt: !14386)
!14390 = !DILocalVariable(name: "thread", arg: 1, scope: !14391, file: !2543, line: 232, type: !2428)
!14391 = distinct !DISubprogram(name: "runq_remove", scope: !2543, file: !2543, line: 232, type: !14149, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14392)
!14392 = !{!14390}
!14393 = !DILocation(line: 0, scope: !14391, inlinedAt: !14394)
!14394 = distinct !DILocation(line: 268, column: 3, scope: !14395, inlinedAt: !14386)
!14395 = distinct !DILexicalBlock(scope: !14396, file: !2543, line: 267, column: 35)
!14396 = distinct !DILexicalBlock(scope: !14383, file: !2543, line: 267, column: 6)
!14397 = !DILocation(line: 234, column: 2, scope: !14391, inlinedAt: !14394)
!14398 = !DILocation(line: 397, column: 2, scope: !14387)
!14399 = !DILocalVariable(name: "thread", arg: 1, scope: !14400, file: !2543, line: 250, type: !2428)
!14400 = distinct !DISubprogram(name: "queue_thread", scope: !2543, file: !2543, line: 250, type: !14149, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14401)
!14401 = !{!14399}
!14402 = !DILocation(line: 0, scope: !14400, inlinedAt: !14403)
!14403 = distinct !DILocation(line: 398, column: 2, scope: !14375)
!14404 = !DILocation(line: 252, column: 15, scope: !14400, inlinedAt: !14403)
!14405 = !DILocation(line: 252, column: 28, scope: !14400, inlinedAt: !14403)
!14406 = !DILocalVariable(name: "thread", arg: 1, scope: !14407, file: !2543, line: 227, type: !2428)
!14407 = distinct !DISubprogram(name: "runq_add", scope: !2543, file: !2543, line: 227, type: !14149, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14408)
!14408 = !{!14406}
!14409 = !DILocation(line: 0, scope: !14407, inlinedAt: !14410)
!14410 = distinct !DILocation(line: 254, column: 3, scope: !14411, inlinedAt: !14403)
!14411 = distinct !DILexicalBlock(scope: !14412, file: !2543, line: 253, column: 35)
!14412 = distinct !DILexicalBlock(scope: !14400, file: !2543, line: 253, column: 6)
!14413 = !DILocation(line: 229, column: 2, scope: !14407, inlinedAt: !14410)
!14414 = !DILocation(line: 399, column: 25, scope: !14375)
!14415 = !DILocation(line: 399, column: 22, scope: !14375)
!14416 = !DILocation(line: 399, column: 2, scope: !14375)
!14417 = !DILocation(line: 400, column: 1, scope: !14375)
!14418 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12782, file: !12782, line: 136, type: !14332, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14419)
!14419 = !{!14420}
!14420 = !DILocalVariable(name: "thread", arg: 1, scope: !14418, file: !12782, line: 136, type: !2428)
!14421 = !DILocation(line: 0, scope: !14418)
!14422 = !DILocation(line: 138, column: 9, scope: !14418)
!14423 = !DILocation(line: 138, column: 2, scope: !14418)
!14424 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2543, file: !2543, line: 1198, type: !14425, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14441)
!14425 = !DISubroutineType(types: !14426)
!14426 = !{null, !14427, !2428}
!14427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14428, size: 32)
!14428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !2107, line: 37, size: 128, elements: !14429)
!14429 = !{!14430, !14440}
!14430 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !14428, file: !2107, line: 38, baseType: !14431, size: 96)
!14431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !157, line: 83, size: 96, elements: !14432)
!14432 = !{!14433, !14434, !14439}
!14433 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !14431, file: !157, line: 84, baseType: !2457, size: 32)
!14434 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !14431, file: !157, line: 85, baseType: !14435, size: 32, offset: 32)
!14435 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !157, line: 81, baseType: !14436)
!14436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14437, size: 32)
!14437 = !DISubroutineType(types: !14438)
!14438 = !{!334, !2457, !2457}
!14439 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !14431, file: !157, line: 86, baseType: !109, size: 32, offset: 64)
!14440 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !14428, file: !2107, line: 39, baseType: !109, size: 32, offset: 96)
!14441 = !{!14442, !14443}
!14442 = !DILocalVariable(name: "pq", arg: 1, scope: !14424, file: !2543, line: 1198, type: !14427)
!14443 = !DILocalVariable(name: "thread", arg: 2, scope: !14424, file: !2543, line: 1198, type: !2428)
!14444 = !DILocation(line: 0, scope: !14424)
!14445 = !DILocation(line: 1200, column: 2, scope: !14446)
!14446 = distinct !DILexicalBlock(scope: !14447, file: !2543, line: 1200, column: 2)
!14447 = distinct !DILexicalBlock(scope: !14424, file: !2543, line: 1200, column: 2)
!14448 = !DILocation(line: 1200, column: 2, scope: !14447)
!14449 = !DILocation(line: 1200, column: 2, scope: !14450)
!14450 = distinct !DILexicalBlock(scope: !14446, file: !2543, line: 1200, column: 2)
!14451 = !DILocation(line: 1202, column: 17, scope: !14424)
!14452 = !DILocation(line: 1202, column: 37, scope: !14424)
!14453 = !DILocation(line: 1202, column: 2, scope: !14424)
!14454 = !DILocation(line: 1204, column: 16, scope: !14455)
!14455 = distinct !DILexicalBlock(scope: !14424, file: !2543, line: 1204, column: 6)
!14456 = !DILocation(line: 1204, column: 7, scope: !14455)
!14457 = !DILocation(line: 1204, column: 6, scope: !14424)
!14458 = !DILocation(line: 1205, column: 7, scope: !14459)
!14459 = distinct !DILexicalBlock(scope: !14455, file: !2543, line: 1204, column: 22)
!14460 = !DILocation(line: 1205, column: 22, scope: !14459)
!14461 = !DILocation(line: 1206, column: 2, scope: !14459)
!14462 = !DILocation(line: 1207, column: 1, scope: !14424)
!14463 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2543, file: !2543, line: 1175, type: !14425, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14464)
!14464 = !{!14465, !14466, !14467, !14468, !14477}
!14465 = !DILocalVariable(name: "pq", arg: 1, scope: !14463, file: !2543, line: 1175, type: !14427)
!14466 = !DILocalVariable(name: "thread", arg: 2, scope: !14463, file: !2543, line: 1175, type: !2428)
!14467 = !DILocalVariable(name: "t", scope: !14463, file: !2543, line: 1177, type: !2428)
!14468 = !DILocalVariable(name: "__f", scope: !14469, file: !2543, line: 1190, type: !14472)
!14469 = distinct !DILexicalBlock(scope: !14470, file: !2543, line: 1190, column: 3)
!14470 = distinct !DILexicalBlock(scope: !14471, file: !2543, line: 1189, column: 27)
!14471 = distinct !DILexicalBlock(scope: !14463, file: !2543, line: 1189, column: 6)
!14472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !157, line: 155, size: 96, elements: !14473)
!14473 = !{!14474, !14475, !14476}
!14474 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !14472, file: !157, line: 156, baseType: !2539, size: 32)
!14475 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !14472, file: !157, line: 157, baseType: !1923, size: 32, offset: 32)
!14476 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !14472, file: !157, line: 158, baseType: !765, size: 32, offset: 64)
!14477 = !DILocalVariable(name: "n", scope: !14478, file: !2543, line: 1190, type: !2457)
!14478 = distinct !DILexicalBlock(scope: !14479, file: !2543, line: 1190, column: 3)
!14479 = distinct !DILexicalBlock(scope: !14469, file: !2543, line: 1190, column: 3)
!14480 = !DILocation(line: 0, scope: !14463)
!14481 = !DILocation(line: 1179, column: 2, scope: !14482)
!14482 = distinct !DILexicalBlock(scope: !14483, file: !2543, line: 1179, column: 2)
!14483 = distinct !DILexicalBlock(scope: !14463, file: !2543, line: 1179, column: 2)
!14484 = !DILocation(line: 1179, column: 2, scope: !14483)
!14485 = !DILocation(line: 1179, column: 2, scope: !14486)
!14486 = distinct !DILexicalBlock(scope: !14482, file: !2543, line: 1179, column: 2)
!14487 = !DILocation(line: 1181, column: 31, scope: !14463)
!14488 = !DILocation(line: 1181, column: 45, scope: !14463)
!14489 = !DILocation(line: 1181, column: 15, scope: !14463)
!14490 = !DILocation(line: 1181, column: 25, scope: !14463)
!14491 = !DILocation(line: 1189, column: 11, scope: !14471)
!14492 = !DILocation(line: 1189, column: 7, scope: !14471)
!14493 = !DILocation(line: 1189, column: 6, scope: !14463)
!14494 = !DILocation(line: 1190, column: 3, scope: !14469)
!14495 = !DILocation(line: 1190, column: 3, scope: !14478)
!14496 = !DILocation(line: 0, scope: !14478)
!14497 = !DILocation(line: 1190, column: 3, scope: !14479)
!14498 = !DILocation(line: 1193, column: 2, scope: !14470)
!14499 = !DILocation(line: 1191, column: 42, scope: !14500)
!14500 = distinct !DILexicalBlock(scope: !14479, file: !2543, line: 1190, column: 54)
!14501 = !DILocation(line: 1191, column: 12, scope: !14500)
!14502 = !DILocation(line: 1191, column: 22, scope: !14500)
!14503 = distinct !{!14503, !14494, !14504}
!14504 = !DILocation(line: 1192, column: 3, scope: !14469)
!14505 = !DILocation(line: 1195, column: 17, scope: !14463)
!14506 = !DILocation(line: 1195, column: 37, scope: !14463)
!14507 = !DILocation(line: 1195, column: 2, scope: !14463)
!14508 = !DILocation(line: 1196, column: 1, scope: !14463)
!14509 = distinct !DISubprogram(name: "update_cache", scope: !2543, file: !2543, line: 559, type: !3497, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14510)
!14510 = !{!14511, !14512}
!14511 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14509, file: !2543, line: 559, type: !109)
!14512 = !DILocalVariable(name: "thread", scope: !14509, file: !2543, line: 562, type: !2428)
!14513 = !DILocation(line: 0, scope: !14509)
!14514 = !DILocation(line: 239, column: 9, scope: !14515, inlinedAt: !14518)
!14515 = distinct !DISubprogram(name: "runq_best", scope: !2543, file: !2543, line: 237, type: !14516, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2100)
!14516 = !DISubroutineType(types: !14517)
!14517 = !{!2428}
!14518 = distinct !DILocation(line: 314, column: 28, scope: !14519, inlinedAt: !14522)
!14519 = distinct !DISubprogram(name: "next_up", scope: !2543, file: !2543, line: 312, type: !14516, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14520)
!14520 = !{!14521}
!14521 = !DILocalVariable(name: "thread", scope: !14519, file: !2543, line: 314, type: !2428)
!14522 = distinct !DILocation(line: 562, column: 28, scope: !14509)
!14523 = !DILocation(line: 0, scope: !14519, inlinedAt: !14522)
!14524 = !DILocation(line: 340, column: 17, scope: !14519, inlinedAt: !14522)
!14525 = !DILocation(line: 340, column: 9, scope: !14519, inlinedAt: !14522)
!14526 = !DILocalVariable(name: "thread", arg: 1, scope: !14527, file: !2543, line: 127, type: !2428)
!14527 = distinct !DISubprogram(name: "should_preempt", scope: !2543, file: !2543, line: 127, type: !14528, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14530)
!14528 = !DISubroutineType(types: !14529)
!14529 = !{!334, !2428, !109}
!14530 = !{!14526, !14531}
!14531 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14527, file: !2543, line: 128, type: !109)
!14532 = !DILocation(line: 0, scope: !14527, inlinedAt: !14533)
!14533 = distinct !DILocation(line: 564, column: 6, scope: !14534)
!14534 = distinct !DILexicalBlock(scope: !14509, file: !2543, line: 564, column: 6)
!14535 = !DILocation(line: 133, column: 17, scope: !14536, inlinedAt: !14533)
!14536 = distinct !DILexicalBlock(scope: !14527, file: !2543, line: 133, column: 6)
!14537 = !DILocation(line: 0, scope: !14534)
!14538 = !DILocation(line: 133, column: 6, scope: !14527, inlinedAt: !14533)
!14539 = !DILocation(line: 137, column: 2, scope: !14540, inlinedAt: !14533)
!14540 = distinct !DILexicalBlock(scope: !14541, file: !2543, line: 137, column: 2)
!14541 = distinct !DILexicalBlock(scope: !14527, file: !2543, line: 137, column: 2)
!14542 = !DILocation(line: 137, column: 2, scope: !14541, inlinedAt: !14533)
!14543 = !DILocation(line: 137, column: 2, scope: !14544, inlinedAt: !14533)
!14544 = distinct !DILexicalBlock(scope: !14540, file: !2543, line: 137, column: 2)
!14545 = !DILocation(line: 140, column: 6, scope: !14546, inlinedAt: !14533)
!14546 = distinct !DILexicalBlock(scope: !14527, file: !2543, line: 140, column: 6)
!14547 = !DILocation(line: 140, column: 6, scope: !14527, inlinedAt: !14533)
!14548 = !DILocation(line: 150, column: 9, scope: !14549, inlinedAt: !14533)
!14549 = distinct !DILexicalBlock(scope: !14527, file: !2543, line: 149, column: 6)
!14550 = !DILocation(line: 149, column: 6, scope: !14527, inlinedAt: !14533)
!14551 = !DILocation(line: 157, column: 6, scope: !14552, inlinedAt: !14533)
!14552 = distinct !DILexicalBlock(scope: !14527, file: !2543, line: 157, column: 6)
!14553 = !DILocation(line: 564, column: 6, scope: !14509)
!14554 = !DILocation(line: 566, column: 14, scope: !14555)
!14555 = distinct !DILexicalBlock(scope: !14556, file: !2543, line: 566, column: 7)
!14556 = distinct !DILexicalBlock(scope: !14534, file: !2543, line: 564, column: 42)
!14557 = !DILocation(line: 566, column: 7, scope: !14556)
!14558 = !DILocation(line: 567, column: 4, scope: !14559)
!14559 = distinct !DILexicalBlock(scope: !14555, file: !2543, line: 566, column: 27)
!14560 = !DILocation(line: 568, column: 3, scope: !14559)
!14561 = !DILocation(line: 585, column: 1, scope: !14509)
!14562 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2543, file: !2543, line: 1209, type: !14563, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14565)
!14563 = !DISubroutineType(types: !14564)
!14564 = !{!2428, !14427}
!14565 = !{!14566, !14567, !14568}
!14566 = !DILocalVariable(name: "pq", arg: 1, scope: !14562, file: !2543, line: 1209, type: !14427)
!14567 = !DILocalVariable(name: "thread", scope: !14562, file: !2543, line: 1211, type: !2428)
!14568 = !DILocalVariable(name: "n", scope: !14562, file: !2543, line: 1212, type: !2457)
!14569 = !DILocation(line: 0, scope: !14562)
!14570 = !DILocation(line: 1212, column: 37, scope: !14562)
!14571 = !DILocation(line: 1212, column: 21, scope: !14562)
!14572 = !DILocation(line: 1217, column: 2, scope: !14562)
!14573 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12782, file: !12782, line: 115, type: !14332, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14574)
!14574 = !{!14575}
!14575 = !DILocalVariable(name: "thread", arg: 1, scope: !14573, file: !12782, line: 115, type: !2428)
!14576 = !DILocation(line: 0, scope: !14573)
!14577 = !DILocation(line: 117, column: 46, scope: !14573)
!14578 = !DILocation(line: 117, column: 10, scope: !14573)
!14579 = !DILocation(line: 117, column: 9, scope: !14573)
!14580 = !DILocation(line: 117, column: 2, scope: !14573)
!14581 = distinct !DISubprogram(name: "is_preempt", scope: !2543, file: !2543, line: 62, type: !14167, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14582)
!14582 = !{!14583}
!14583 = !DILocalVariable(name: "thread", arg: 1, scope: !14581, file: !2543, line: 62, type: !2428)
!14584 = !DILocation(line: 0, scope: !14581)
!14585 = !DILocation(line: 65, column: 22, scope: !14581)
!14586 = !DILocation(line: 65, column: 30, scope: !14581)
!14587 = !DILocation(line: 65, column: 2, scope: !14581)
!14588 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13454, file: !13454, line: 35, type: !14589, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14593)
!14589 = !DISubroutineType(types: !14590)
!14590 = !{!334, !14591}
!14591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14592, size: 32)
!14592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2479)
!14593 = !{!14594}
!14594 = !DILocalVariable(name: "to", arg: 1, scope: !14588, file: !13454, line: 35, type: !14591)
!14595 = !DILocation(line: 0, scope: !14588)
!14596 = !DILocation(line: 37, column: 35, scope: !14588)
!14597 = !DILocation(line: 37, column: 10, scope: !14588)
!14598 = !DILocation(line: 37, column: 9, scope: !14588)
!14599 = !DILocation(line: 37, column: 2, scope: !14588)
!14600 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !128, file: !128, line: 225, type: !14601, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14605)
!14601 = !DISubroutineType(types: !14602)
!14602 = !{!334, !14603}
!14603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14604, size: 32)
!14604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2438)
!14605 = !{!14606}
!14606 = !DILocalVariable(name: "node", arg: 1, scope: !14600, file: !128, line: 225, type: !14603)
!14607 = !DILocation(line: 0, scope: !14600)
!14608 = !DILocation(line: 227, column: 15, scope: !14600)
!14609 = !DILocation(line: 227, column: 20, scope: !14600)
!14610 = !DILocation(line: 227, column: 2, scope: !14600)
!14611 = distinct !DISubprogram(name: "rb_get_min", scope: !157, file: !157, line: 115, type: !14612, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14615)
!14612 = !DISubroutineType(types: !14613)
!14613 = !{!2457, !14614}
!14614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14431, size: 32)
!14615 = !{!14616}
!14616 = !DILocalVariable(name: "tree", arg: 1, scope: !14611, file: !157, line: 115, type: !14614)
!14617 = !DILocation(line: 0, scope: !14611)
!14618 = !DILocation(line: 117, column: 9, scope: !14611)
!14619 = !DILocation(line: 117, column: 2, scope: !14611)
!14620 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12782, file: !12782, line: 83, type: !14332, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14621)
!14621 = !{!14622}
!14622 = !DILocalVariable(name: "thread", arg: 1, scope: !14620, file: !12782, line: 83, type: !2428)
!14623 = !DILocation(line: 0, scope: !14620)
!14624 = !DILocation(line: 89, column: 16, scope: !14620)
!14625 = !DILocation(line: 89, column: 2, scope: !14620)
!14626 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12782, file: !12782, line: 131, type: !14627, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14629)
!14627 = !DISubroutineType(types: !14628)
!14628 = !{!334, !2428, !110}
!14629 = !{!14630, !14631}
!14630 = !DILocalVariable(name: "thread", arg: 1, scope: !14626, file: !12782, line: 131, type: !2428)
!14631 = !DILocalVariable(name: "state", arg: 2, scope: !14626, file: !12782, line: 131, type: !110)
!14632 = !DILocation(line: 0, scope: !14626)
!14633 = !DILocation(line: 133, column: 23, scope: !14626)
!14634 = !DILocation(line: 133, column: 10, scope: !14626)
!14635 = !DILocation(line: 133, column: 36, scope: !14626)
!14636 = !DILocation(line: 133, column: 45, scope: !14626)
!14637 = !DILocation(line: 133, column: 2, scope: !14626)
!14638 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12782, file: !12782, line: 211, type: !13981, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14639)
!14639 = !{!14640, !14641}
!14640 = !DILocalVariable(name: "prio", arg: 1, scope: !14638, file: !12782, line: 211, type: !109)
!14641 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14638, file: !12782, line: 211, type: !109)
!14642 = !DILocation(line: 0, scope: !14638)
!14643 = !DILocation(line: 213, column: 9, scope: !14638)
!14644 = !DILocation(line: 213, column: 2, scope: !14638)
!14645 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12782, file: !12782, line: 206, type: !13981, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14646)
!14646 = !{!14647, !14648}
!14647 = !DILocalVariable(name: "prio1", arg: 1, scope: !14645, file: !12782, line: 206, type: !109)
!14648 = !DILocalVariable(name: "prio2", arg: 2, scope: !14645, file: !12782, line: 206, type: !109)
!14649 = !DILocation(line: 0, scope: !14645)
!14650 = !DILocation(line: 208, column: 15, scope: !14645)
!14651 = !DILocation(line: 208, column: 2, scope: !14645)
!14652 = distinct !DISubprogram(name: "z_ready_thread", scope: !2543, file: !2543, line: 635, type: !14149, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14653)
!14653 = !{!14654, !14655, !14657}
!14654 = !DILocalVariable(name: "thread", arg: 1, scope: !14652, file: !2543, line: 635, type: !2428)
!14655 = !DILocalVariable(name: "__i", scope: !14656, file: !2543, line: 637, type: !14183)
!14656 = distinct !DILexicalBlock(scope: !14652, file: !2543, line: 637, column: 2)
!14657 = !DILocalVariable(name: "__key", scope: !14656, file: !2543, line: 637, type: !14183)
!14658 = !DILocation(line: 0, scope: !14652)
!14659 = !DILocation(line: 0, scope: !14656)
!14660 = !DILocation(line: 0, scope: !14191, inlinedAt: !14661)
!14661 = distinct !DILocation(line: 637, column: 2, scope: !14656)
!14662 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !14663)
!14663 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !14661)
!14664 = !DILocation(line: 0, scope: !14200, inlinedAt: !14663)
!14665 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !14661)
!14666 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !14661)
!14667 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !14661)
!14668 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !14661)
!14669 = !DILocation(line: 639, column: 4, scope: !14670)
!14670 = distinct !DILexicalBlock(scope: !14671, file: !2543, line: 638, column: 41)
!14671 = distinct !DILexicalBlock(scope: !14672, file: !2543, line: 638, column: 7)
!14672 = distinct !DILexicalBlock(scope: !14673, file: !2543, line: 637, column: 26)
!14673 = distinct !DILexicalBlock(scope: !14656, file: !2543, line: 637, column: 2)
!14674 = !DILocation(line: 0, scope: !14225, inlinedAt: !14675)
!14675 = distinct !DILocation(line: 637, column: 2, scope: !14673)
!14676 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !14675)
!14677 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !14675)
!14678 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !14675)
!14679 = !DILocation(line: 0, scope: !14239, inlinedAt: !14680)
!14680 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !14675)
!14681 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !14680)
!14682 = !DILocation(line: 642, column: 1, scope: !14652)
!14683 = distinct !DISubprogram(name: "ready_thread", scope: !2543, file: !2543, line: 617, type: !14149, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14684)
!14684 = !{!14685}
!14685 = !DILocalVariable(name: "thread", arg: 1, scope: !14683, file: !2543, line: 617, type: !2428)
!14686 = !DILocation(line: 0, scope: !14683)
!14687 = !DILocation(line: 626, column: 7, scope: !14688)
!14688 = distinct !DILexicalBlock(scope: !14683, file: !2543, line: 626, column: 6)
!14689 = !DILocation(line: 626, column: 34, scope: !14688)
!14690 = !DILocation(line: 626, column: 37, scope: !14688)
!14691 = !DILocation(line: 626, column: 6, scope: !14683)
!14692 = !DILocation(line: 0, scope: !14400, inlinedAt: !14693)
!14693 = distinct !DILocation(line: 629, column: 3, scope: !14694)
!14694 = distinct !DILexicalBlock(scope: !14688, file: !2543, line: 626, column: 64)
!14695 = !DILocation(line: 252, column: 15, scope: !14400, inlinedAt: !14693)
!14696 = !DILocation(line: 252, column: 28, scope: !14400, inlinedAt: !14693)
!14697 = !DILocation(line: 0, scope: !14407, inlinedAt: !14698)
!14698 = distinct !DILocation(line: 254, column: 3, scope: !14411, inlinedAt: !14693)
!14699 = !DILocation(line: 229, column: 2, scope: !14407, inlinedAt: !14698)
!14700 = !DILocation(line: 630, column: 3, scope: !14694)
!14701 = !DILocation(line: 632, column: 2, scope: !14694)
!14702 = !DILocation(line: 633, column: 1, scope: !14683)
!14703 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12782, file: !12782, line: 120, type: !14332, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14704)
!14704 = !{!14705}
!14705 = !DILocalVariable(name: "thread", arg: 1, scope: !14703, file: !12782, line: 120, type: !2428)
!14706 = !DILocation(line: 0, scope: !14703)
!14707 = !DILocation(line: 122, column: 12, scope: !14703)
!14708 = !DILocation(line: 122, column: 62, scope: !14703)
!14709 = !DILocation(line: 123, column: 4, scope: !14703)
!14710 = !DILocation(line: 122, column: 2, scope: !14703)
!14711 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2543, file: !2543, line: 644, type: !14149, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14712)
!14712 = !{!14713, !14714, !14716}
!14713 = !DILocalVariable(name: "thread", arg: 1, scope: !14711, file: !2543, line: 644, type: !2428)
!14714 = !DILocalVariable(name: "__i", scope: !14715, file: !2543, line: 646, type: !14183)
!14715 = distinct !DILexicalBlock(scope: !14711, file: !2543, line: 646, column: 2)
!14716 = !DILocalVariable(name: "__key", scope: !14715, file: !2543, line: 646, type: !14183)
!14717 = !DILocation(line: 0, scope: !14711)
!14718 = !DILocation(line: 0, scope: !14715)
!14719 = !DILocation(line: 0, scope: !14191, inlinedAt: !14720)
!14720 = distinct !DILocation(line: 646, column: 2, scope: !14715)
!14721 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !14722)
!14722 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !14720)
!14723 = !DILocation(line: 0, scope: !14200, inlinedAt: !14722)
!14724 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !14720)
!14725 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !14720)
!14726 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !14720)
!14727 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !14720)
!14728 = !DILocation(line: 647, column: 3, scope: !14729)
!14729 = distinct !DILexicalBlock(scope: !14730, file: !2543, line: 646, column: 26)
!14730 = distinct !DILexicalBlock(scope: !14715, file: !2543, line: 646, column: 2)
!14731 = !DILocation(line: 0, scope: !14225, inlinedAt: !14732)
!14732 = distinct !DILocation(line: 646, column: 2, scope: !14730)
!14733 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !14732)
!14734 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !14732)
!14735 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !14732)
!14736 = !DILocation(line: 0, scope: !14239, inlinedAt: !14737)
!14737 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !14732)
!14738 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !14737)
!14739 = !DILocation(line: 649, column: 1, scope: !14711)
!14740 = distinct !DISubprogram(name: "z_sched_start", scope: !2543, file: !2543, line: 651, type: !14149, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14741)
!14741 = !{!14742, !14743}
!14742 = !DILocalVariable(name: "thread", arg: 1, scope: !14740, file: !2543, line: 651, type: !2428)
!14743 = !DILocalVariable(name: "key", scope: !14740, file: !2543, line: 653, type: !14183)
!14744 = !DILocation(line: 0, scope: !14740)
!14745 = !DILocation(line: 0, scope: !14191, inlinedAt: !14746)
!14746 = distinct !DILocation(line: 653, column: 25, scope: !14740)
!14747 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !14748)
!14748 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !14746)
!14749 = !DILocation(line: 0, scope: !14200, inlinedAt: !14748)
!14750 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !14746)
!14751 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !14746)
!14752 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !14746)
!14753 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !14746)
!14754 = !DILocation(line: 655, column: 6, scope: !14755)
!14755 = distinct !DILexicalBlock(scope: !14740, file: !2543, line: 655, column: 6)
!14756 = !DILocation(line: 655, column: 6, scope: !14740)
!14757 = !DILocation(line: 0, scope: !14225, inlinedAt: !14758)
!14758 = distinct !DILocation(line: 656, column: 3, scope: !14759)
!14759 = distinct !DILexicalBlock(scope: !14755, file: !2543, line: 655, column: 36)
!14760 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !14758)
!14761 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !14758)
!14762 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !14758)
!14763 = !DILocation(line: 0, scope: !14239, inlinedAt: !14764)
!14764 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !14758)
!14765 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !14764)
!14766 = !DILocation(line: 657, column: 3, scope: !14759)
!14767 = !DILocation(line: 660, column: 2, scope: !14740)
!14768 = !DILocation(line: 661, column: 2, scope: !14740)
!14769 = !DILocation(line: 662, column: 2, scope: !14740)
!14770 = !DILocation(line: 663, column: 1, scope: !14740)
!14771 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12782, file: !12782, line: 126, type: !14332, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14772)
!14772 = !{!14773}
!14773 = !DILocalVariable(name: "thread", arg: 1, scope: !14771, file: !12782, line: 126, type: !2428)
!14774 = !DILocation(line: 0, scope: !14771)
!14775 = !DILocation(line: 128, column: 23, scope: !14771)
!14776 = !DILocation(line: 128, column: 36, scope: !14771)
!14777 = !DILocation(line: 128, column: 56, scope: !14771)
!14778 = !DILocation(line: 128, column: 2, scope: !14771)
!14779 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12782, file: !12782, line: 155, type: !14149, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14780)
!14780 = !{!14781}
!14781 = !DILocalVariable(name: "thread", arg: 1, scope: !14779, file: !12782, line: 155, type: !2428)
!14782 = !DILocation(line: 0, scope: !14779)
!14783 = !DILocation(line: 157, column: 15, scope: !14779)
!14784 = !DILocation(line: 157, column: 28, scope: !14779)
!14785 = !DILocation(line: 158, column: 1, scope: !14779)
!14786 = distinct !DISubprogram(name: "z_reschedule", scope: !2543, file: !2543, line: 967, type: !14226, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14787)
!14787 = !{!14788, !14789}
!14788 = !DILocalVariable(name: "lock", arg: 1, scope: !14786, file: !2543, line: 967, type: !14194)
!14789 = !DILocalVariable(name: "key", arg: 2, scope: !14786, file: !2543, line: 967, type: !14183)
!14790 = !DILocation(line: 0, scope: !14786)
!14791 = !DILocation(line: 969, column: 6, scope: !14792)
!14792 = distinct !DILexicalBlock(scope: !14786, file: !2543, line: 969, column: 6)
!14793 = !DILocation(line: 969, column: 23, scope: !14792)
!14794 = !DILocation(line: 969, column: 26, scope: !14792)
!14795 = !DILocation(line: 969, column: 6, scope: !14786)
!14796 = !DILocalVariable(name: "key", arg: 2, scope: !14797, file: !12886, line: 193, type: !14183)
!14797 = distinct !DISubprogram(name: "z_swap", scope: !12886, file: !12886, line: 193, type: !14798, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14800)
!14798 = !DISubroutineType(types: !14799)
!14799 = !{!109, !14194, !14183}
!14800 = !{!14801, !14796}
!14801 = !DILocalVariable(name: "lock", arg: 1, scope: !14797, file: !12886, line: 193, type: !14194)
!14802 = !DILocation(line: 0, scope: !14797, inlinedAt: !14803)
!14803 = distinct !DILocation(line: 970, column: 3, scope: !14804)
!14804 = distinct !DILexicalBlock(scope: !14792, file: !2543, line: 969, column: 39)
!14805 = !DILocalVariable(name: "l", arg: 1, scope: !14806, file: !254, line: 221, type: !14194)
!14806 = distinct !DISubprogram(name: "k_spin_release", scope: !254, file: !254, line: 221, type: !14807, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14809)
!14807 = !DISubroutineType(types: !14808)
!14808 = !{null, !14194}
!14809 = !{!14805}
!14810 = !DILocation(line: 0, scope: !14806, inlinedAt: !14811)
!14811 = distinct !DILocation(line: 195, column: 2, scope: !14797, inlinedAt: !14803)
!14812 = !DILocation(line: 225, column: 2, scope: !14813, inlinedAt: !14811)
!14813 = distinct !DILexicalBlock(scope: !14814, file: !254, line: 225, column: 2)
!14814 = distinct !DILexicalBlock(scope: !14806, file: !254, line: 225, column: 2)
!14815 = !DILocation(line: 225, column: 2, scope: !14814, inlinedAt: !14811)
!14816 = !DILocation(line: 225, column: 2, scope: !14817, inlinedAt: !14811)
!14817 = distinct !DILexicalBlock(scope: !14813, file: !254, line: 225, column: 2)
!14818 = !DILocation(line: 196, column: 9, scope: !14797, inlinedAt: !14803)
!14819 = !DILocation(line: 971, column: 2, scope: !14804)
!14820 = !DILocation(line: 0, scope: !14225, inlinedAt: !14821)
!14821 = distinct !DILocation(line: 972, column: 3, scope: !14822)
!14822 = distinct !DILexicalBlock(scope: !14792, file: !2543, line: 971, column: 9)
!14823 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !14821)
!14824 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !14821)
!14825 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !14821)
!14826 = !DILocation(line: 0, scope: !14239, inlinedAt: !14827)
!14827 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !14821)
!14828 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !14827)
!14829 = !DILocation(line: 975, column: 1, scope: !14786)
!14830 = distinct !DISubprogram(name: "resched", scope: !2543, file: !2543, line: 940, type: !14831, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14833)
!14831 = !DISubroutineType(types: !14832)
!14832 = !{!334, !110}
!14833 = !{!14834}
!14834 = !DILocalVariable(name: "key", arg: 1, scope: !14830, file: !2543, line: 940, type: !110)
!14835 = !DILocation(line: 0, scope: !14830)
!14836 = !DILocalVariable(name: "key", arg: 1, scope: !14837, file: !6069, line: 112, type: !32)
!14837 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6069, file: !6069, line: 112, type: !14838, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14840)
!14838 = !DISubroutineType(types: !14839)
!14839 = !{!334, !32}
!14840 = !{!14836}
!14841 = !DILocation(line: 0, scope: !14837, inlinedAt: !14842)
!14842 = distinct !DILocation(line: 946, column: 9, scope: !14830)
!14843 = !DILocation(line: 115, column: 13, scope: !14837, inlinedAt: !14842)
!14844 = !DILocation(line: 946, column: 32, scope: !14830)
!14845 = !DILocation(line: 1031, column: 3, scope: !14846, inlinedAt: !14849)
!14846 = distinct !DISubprogram(name: "__get_IPSR", scope: !6243, file: !6243, line: 1027, type: !3451, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14847)
!14847 = !{!14848}
!14848 = !DILocalVariable(name: "result", scope: !14846, file: !6243, line: 1029, type: !110)
!14849 = distinct !DILocation(line: 48, column: 10, scope: !14850, inlinedAt: !14851)
!14850 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7084, file: !7084, line: 46, type: !7085, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2100)
!14851 = distinct !DILocation(line: 946, column: 36, scope: !14830)
!14852 = !{i64 3771132}
!14853 = !DILocation(line: 0, scope: !14846, inlinedAt: !14849)
!14854 = !DILocation(line: 48, column: 9, scope: !14850, inlinedAt: !14851)
!14855 = !DILocation(line: 946, column: 2, scope: !14830)
!14856 = distinct !DISubprogram(name: "need_swap", scope: !2543, file: !2543, line: 953, type: !7085, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14857)
!14857 = !{!14858}
!14858 = !DILocalVariable(name: "new_thread", scope: !14856, file: !2543, line: 959, type: !2428)
!14859 = !DILocation(line: 962, column: 31, scope: !14856)
!14860 = !DILocation(line: 0, scope: !14856)
!14861 = !DILocation(line: 963, column: 23, scope: !14856)
!14862 = !DILocation(line: 963, column: 20, scope: !14856)
!14863 = !DILocation(line: 963, column: 2, scope: !14856)
!14864 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12886, file: !12886, line: 181, type: !6253, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14865)
!14865 = !{!14866, !14867}
!14866 = !DILocalVariable(name: "key", arg: 1, scope: !14864, file: !12886, line: 181, type: !32)
!14867 = !DILocalVariable(name: "ret", scope: !14864, file: !12886, line: 183, type: !109)
!14868 = !DILocation(line: 0, scope: !14864)
!14869 = !DILocation(line: 185, column: 8, scope: !14864)
!14870 = !DILocation(line: 186, column: 2, scope: !14864)
!14871 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2543, file: !2543, line: 665, type: !14149, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14872)
!14872 = !{!14873, !14874, !14876}
!14873 = !DILocalVariable(name: "thread", arg: 1, scope: !14871, file: !2543, line: 665, type: !2428)
!14874 = !DILocalVariable(name: "__i", scope: !14875, file: !2543, line: 671, type: !14183)
!14875 = distinct !DILexicalBlock(scope: !14871, file: !2543, line: 671, column: 2)
!14876 = !DILocalVariable(name: "__key", scope: !14875, file: !2543, line: 671, type: !14183)
!14877 = !DILocation(line: 0, scope: !14871)
!14878 = !DILocation(line: 669, column: 8, scope: !14871)
!14879 = !DILocation(line: 0, scope: !14875)
!14880 = !DILocation(line: 0, scope: !14191, inlinedAt: !14881)
!14881 = distinct !DILocation(line: 671, column: 2, scope: !14875)
!14882 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !14883)
!14883 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !14881)
!14884 = !DILocation(line: 0, scope: !14200, inlinedAt: !14883)
!14885 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !14881)
!14886 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !14881)
!14887 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !14881)
!14888 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !14881)
!14889 = !DILocation(line: 672, column: 7, scope: !14890)
!14890 = distinct !DILexicalBlock(scope: !14891, file: !2543, line: 672, column: 7)
!14891 = distinct !DILexicalBlock(scope: !14892, file: !2543, line: 671, column: 26)
!14892 = distinct !DILexicalBlock(scope: !14875, file: !2543, line: 671, column: 2)
!14893 = !DILocation(line: 672, column: 7, scope: !14891)
!14894 = !DILocation(line: 0, scope: !14383, inlinedAt: !14895)
!14895 = distinct !DILocation(line: 673, column: 4, scope: !14896)
!14896 = distinct !DILexicalBlock(scope: !14890, file: !2543, line: 672, column: 35)
!14897 = !DILocation(line: 266, column: 15, scope: !14383, inlinedAt: !14895)
!14898 = !DILocation(line: 266, column: 28, scope: !14383, inlinedAt: !14895)
!14899 = !DILocation(line: 0, scope: !14391, inlinedAt: !14900)
!14900 = distinct !DILocation(line: 268, column: 3, scope: !14395, inlinedAt: !14895)
!14901 = !DILocation(line: 234, column: 2, scope: !14391, inlinedAt: !14900)
!14902 = !DILocation(line: 674, column: 3, scope: !14896)
!14903 = !DILocation(line: 675, column: 3, scope: !14891)
!14904 = !DILocation(line: 676, column: 26, scope: !14891)
!14905 = !DILocation(line: 676, column: 23, scope: !14891)
!14906 = !DILocation(line: 676, column: 3, scope: !14891)
!14907 = !DILocation(line: 0, scope: !14225, inlinedAt: !14908)
!14908 = distinct !DILocation(line: 671, column: 2, scope: !14892)
!14909 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !14908)
!14910 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !14908)
!14911 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !14908)
!14912 = !DILocation(line: 0, scope: !14239, inlinedAt: !14913)
!14913 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !14908)
!14914 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !14913)
!14915 = !DILocation(line: 679, column: 16, scope: !14916)
!14916 = distinct !DILexicalBlock(scope: !14871, file: !2543, line: 679, column: 6)
!14917 = !DILocation(line: 679, column: 13, scope: !14916)
!14918 = !DILocation(line: 679, column: 6, scope: !14871)
!14919 = !DILocation(line: 680, column: 3, scope: !14920)
!14920 = distinct !DILexicalBlock(scope: !14916, file: !2543, line: 679, column: 26)
!14921 = !DILocation(line: 681, column: 2, scope: !14920)
!14922 = !DILocation(line: 684, column: 1, scope: !14871)
!14923 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13454, file: !13454, line: 52, type: !14167, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14924)
!14924 = !{!14925}
!14925 = !DILocalVariable(name: "thread", arg: 1, scope: !14923, file: !13454, line: 52, type: !2428)
!14926 = !DILocation(line: 0, scope: !14923)
!14927 = !DILocation(line: 54, column: 39, scope: !14923)
!14928 = !DILocation(line: 54, column: 9, scope: !14923)
!14929 = !DILocation(line: 54, column: 2, scope: !14923)
!14930 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12782, file: !12782, line: 141, type: !14149, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14931)
!14931 = !{!14932}
!14932 = !DILocalVariable(name: "thread", arg: 1, scope: !14930, file: !12782, line: 141, type: !2428)
!14933 = !DILocation(line: 0, scope: !14930)
!14934 = !DILocation(line: 143, column: 15, scope: !14930)
!14935 = !DILocation(line: 143, column: 28, scope: !14930)
!14936 = !DILocation(line: 146, column: 1, scope: !14930)
!14937 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12782, file: !12782, line: 73, type: !3169, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2100)
!14938 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !14939)
!14939 = distinct !DILocation(line: 75, column: 30, scope: !14937)
!14940 = !DILocation(line: 0, scope: !14200, inlinedAt: !14939)
!14941 = !DILocation(line: 75, column: 9, scope: !14937)
!14942 = !DILocation(line: 76, column: 1, scope: !14937)
!14943 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2543, file: !2543, line: 977, type: !6338, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14944)
!14944 = !{!14945}
!14945 = !DILocalVariable(name: "key", arg: 1, scope: !14943, file: !2543, line: 977, type: !110)
!14946 = !DILocation(line: 0, scope: !14943)
!14947 = !DILocation(line: 979, column: 6, scope: !14948)
!14948 = distinct !DILexicalBlock(scope: !14943, file: !2543, line: 979, column: 6)
!14949 = !DILocation(line: 979, column: 6, scope: !14943)
!14950 = !DILocation(line: 980, column: 3, scope: !14951)
!14951 = distinct !DILexicalBlock(scope: !14948, file: !2543, line: 979, column: 20)
!14952 = !DILocation(line: 981, column: 2, scope: !14951)
!14953 = !DILocation(line: 0, scope: !14239, inlinedAt: !14954)
!14954 = distinct !DILocation(line: 982, column: 3, scope: !14955)
!14955 = distinct !DILexicalBlock(scope: !14948, file: !2543, line: 981, column: 9)
!14956 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !14954)
!14957 = !DILocation(line: 985, column: 1, scope: !14943)
!14958 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2543, file: !2543, line: 695, type: !14149, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14959)
!14959 = !{!14960, !14961}
!14960 = !DILocalVariable(name: "thread", arg: 1, scope: !14958, file: !2543, line: 695, type: !2428)
!14961 = !DILocalVariable(name: "key", scope: !14958, file: !2543, line: 699, type: !14183)
!14962 = !DILocation(line: 0, scope: !14958)
!14963 = !DILocation(line: 0, scope: !14191, inlinedAt: !14964)
!14964 = distinct !DILocation(line: 699, column: 25, scope: !14958)
!14965 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !14966)
!14966 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !14964)
!14967 = !DILocation(line: 0, scope: !14200, inlinedAt: !14966)
!14968 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !14964)
!14969 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !14964)
!14970 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !14964)
!14971 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !14964)
!14972 = !DILocation(line: 702, column: 7, scope: !14973)
!14973 = distinct !DILexicalBlock(scope: !14958, file: !2543, line: 702, column: 6)
!14974 = !DILocation(line: 702, column: 6, scope: !14958)
!14975 = !DILocation(line: 0, scope: !14225, inlinedAt: !14976)
!14976 = distinct !DILocation(line: 703, column: 3, scope: !14977)
!14977 = distinct !DILexicalBlock(scope: !14973, file: !2543, line: 702, column: 38)
!14978 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !14976)
!14979 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !14976)
!14980 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !14976)
!14981 = !DILocation(line: 0, scope: !14239, inlinedAt: !14982)
!14982 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !14976)
!14983 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !14982)
!14984 = !DILocation(line: 704, column: 3, scope: !14977)
!14985 = !DILocation(line: 707, column: 2, scope: !14958)
!14986 = !DILocation(line: 708, column: 2, scope: !14958)
!14987 = !DILocation(line: 710, column: 2, scope: !14958)
!14988 = !DILocation(line: 713, column: 1, scope: !14958)
!14989 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12782, file: !12782, line: 96, type: !14332, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14990)
!14990 = !{!14991}
!14991 = !DILocalVariable(name: "thread", arg: 1, scope: !14989, file: !12782, line: 96, type: !2428)
!14992 = !DILocation(line: 0, scope: !14989)
!14993 = !DILocation(line: 98, column: 23, scope: !14989)
!14994 = !DILocation(line: 98, column: 36, scope: !14989)
!14995 = !DILocation(line: 98, column: 57, scope: !14989)
!14996 = !DILocation(line: 98, column: 2, scope: !14989)
!14997 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12782, file: !12782, line: 148, type: !14149, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !14998)
!14998 = !{!14999}
!14999 = !DILocalVariable(name: "thread", arg: 1, scope: !14997, file: !12782, line: 148, type: !2428)
!15000 = !DILocation(line: 0, scope: !14997)
!15001 = !DILocation(line: 150, column: 15, scope: !14997)
!15002 = !DILocation(line: 150, column: 28, scope: !14997)
!15003 = !DILocation(line: 153, column: 1, scope: !14997)
!15004 = distinct !DISubprogram(name: "z_pend_thread", scope: !2543, file: !2543, line: 770, type: !15005, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15011)
!15005 = !DISubroutineType(types: !15006)
!15006 = !{null, !2428, !2459, !15007}
!15007 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !15008)
!15008 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !15009)
!15009 = !{!15010}
!15010 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15008, file: !105, line: 66, baseType: !104, size: 64)
!15011 = !{!15012, !15013, !15014, !15015, !15017}
!15012 = !DILocalVariable(name: "thread", arg: 1, scope: !15004, file: !2543, line: 770, type: !2428)
!15013 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15004, file: !2543, line: 770, type: !2459)
!15014 = !DILocalVariable(name: "timeout", arg: 3, scope: !15004, file: !2543, line: 771, type: !15007)
!15015 = !DILocalVariable(name: "__i", scope: !15016, file: !2543, line: 774, type: !14183)
!15016 = distinct !DILexicalBlock(scope: !15004, file: !2543, line: 774, column: 2)
!15017 = !DILocalVariable(name: "__key", scope: !15016, file: !2543, line: 774, type: !14183)
!15018 = !DILocation(line: 0, scope: !15004)
!15019 = !DILocation(line: 773, column: 2, scope: !15020)
!15020 = distinct !DILexicalBlock(scope: !15021, file: !2543, line: 773, column: 2)
!15021 = distinct !DILexicalBlock(scope: !15004, file: !2543, line: 773, column: 2)
!15022 = !DILocation(line: 773, column: 2, scope: !15021)
!15023 = !DILocation(line: 773, column: 2, scope: !15024)
!15024 = distinct !DILexicalBlock(scope: !15020, file: !2543, line: 773, column: 2)
!15025 = !DILocation(line: 0, scope: !15016)
!15026 = !DILocation(line: 0, scope: !14191, inlinedAt: !15027)
!15027 = distinct !DILocation(line: 774, column: 2, scope: !15016)
!15028 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !15029)
!15029 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !15027)
!15030 = !DILocation(line: 0, scope: !14200, inlinedAt: !15029)
!15031 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !15027)
!15032 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !15027)
!15033 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !15027)
!15034 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !15027)
!15035 = !DILocation(line: 775, column: 3, scope: !15036)
!15036 = distinct !DILexicalBlock(scope: !15037, file: !2543, line: 774, column: 26)
!15037 = distinct !DILexicalBlock(scope: !15016, file: !2543, line: 774, column: 2)
!15038 = !DILocation(line: 0, scope: !14225, inlinedAt: !15039)
!15039 = distinct !DILocation(line: 774, column: 2, scope: !15037)
!15040 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !15039)
!15041 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !15039)
!15042 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !15039)
!15043 = !DILocation(line: 0, scope: !14239, inlinedAt: !15044)
!15044 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !15039)
!15045 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !15044)
!15046 = !DILocation(line: 777, column: 1, scope: !15004)
!15047 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2543, file: !2543, line: 79, type: !14332, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15048)
!15048 = !{!15049}
!15049 = !DILocalVariable(name: "thread", arg: 1, scope: !15047, file: !2543, line: 79, type: !2428)
!15050 = !DILocation(line: 0, scope: !15047)
!15051 = !DILocation(line: 81, column: 23, scope: !15047)
!15052 = !DILocation(line: 81, column: 36, scope: !15047)
!15053 = !DILocation(line: 81, column: 53, scope: !15047)
!15054 = !DILocation(line: 81, column: 2, scope: !15047)
!15055 = distinct !DISubprogram(name: "pend_locked", scope: !2543, file: !2543, line: 760, type: !15005, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15056)
!15056 = !{!15057, !15058, !15059}
!15057 = !DILocalVariable(name: "thread", arg: 1, scope: !15055, file: !2543, line: 760, type: !2428)
!15058 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15055, file: !2543, line: 760, type: !2459)
!15059 = !DILocalVariable(name: "timeout", arg: 3, scope: !15055, file: !2543, line: 761, type: !15007)
!15060 = !DILocation(line: 0, scope: !15055)
!15061 = !DILocation(line: 766, column: 2, scope: !15055)
!15062 = !DILocation(line: 767, column: 2, scope: !15055)
!15063 = !DILocation(line: 768, column: 1, scope: !15055)
!15064 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2543, file: !2543, line: 740, type: !15065, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15067)
!15065 = !DISubroutineType(types: !15066)
!15066 = !{null, !2428, !2459}
!15067 = !{!15068, !15069}
!15068 = !DILocalVariable(name: "thread", arg: 1, scope: !15064, file: !2543, line: 740, type: !2428)
!15069 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15064, file: !2543, line: 740, type: !2459)
!15070 = !DILocation(line: 0, scope: !15064)
!15071 = !DILocation(line: 742, column: 2, scope: !15064)
!15072 = !DILocation(line: 743, column: 2, scope: !15064)
!15073 = !DILocation(line: 747, column: 13, scope: !15074)
!15074 = distinct !DILexicalBlock(scope: !15064, file: !2543, line: 747, column: 6)
!15075 = !DILocation(line: 747, column: 6, scope: !15064)
!15076 = !DILocation(line: 748, column: 16, scope: !15077)
!15077 = distinct !DILexicalBlock(scope: !15074, file: !2543, line: 747, column: 22)
!15078 = !DILocation(line: 748, column: 26, scope: !15077)
!15079 = !DILocation(line: 749, column: 28, scope: !15077)
!15080 = !DILocalVariable(name: "pq", arg: 1, scope: !15081, file: !2543, line: 181, type: !15084)
!15081 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2543, file: !2543, line: 181, type: !15082, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15085)
!15082 = !DISubroutineType(types: !15083)
!15083 = !{null, !15084, !2428}
!15084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 32)
!15085 = !{!15080, !15086, !15087}
!15086 = !DILocalVariable(name: "thread", arg: 2, scope: !15081, file: !2543, line: 182, type: !2428)
!15087 = !DILocalVariable(name: "t", scope: !15081, file: !2543, line: 184, type: !2428)
!15088 = !DILocation(line: 0, scope: !15081, inlinedAt: !15089)
!15089 = distinct !DILocation(line: 749, column: 3, scope: !15077)
!15090 = !DILocation(line: 186, column: 2, scope: !15091, inlinedAt: !15089)
!15091 = distinct !DILexicalBlock(scope: !15092, file: !2543, line: 186, column: 2)
!15092 = distinct !DILexicalBlock(scope: !15081, file: !2543, line: 186, column: 2)
!15093 = !DILocation(line: 186, column: 2, scope: !15092, inlinedAt: !15089)
!15094 = !DILocation(line: 186, column: 2, scope: !15095, inlinedAt: !15089)
!15095 = distinct !DILexicalBlock(scope: !15091, file: !2543, line: 186, column: 2)
!15096 = !DILocation(line: 188, column: 2, scope: !15097, inlinedAt: !15089)
!15097 = distinct !DILexicalBlock(scope: !15081, file: !2543, line: 188, column: 2)
!15098 = !DILocation(line: 188, column: 2, scope: !15099, inlinedAt: !15089)
!15099 = distinct !DILexicalBlock(scope: !15097, file: !2543, line: 188, column: 2)
!15100 = !DILocation(line: 0, scope: !15097, inlinedAt: !15089)
!15101 = !DILocation(line: 189, column: 7, scope: !15102, inlinedAt: !15089)
!15102 = distinct !DILexicalBlock(scope: !15103, file: !2543, line: 189, column: 7)
!15103 = distinct !DILexicalBlock(scope: !15099, file: !2543, line: 188, column: 56)
!15104 = !DILocation(line: 189, column: 35, scope: !15102, inlinedAt: !15089)
!15105 = !DILocation(line: 189, column: 7, scope: !15103, inlinedAt: !15089)
!15106 = !DILocation(line: 191, column: 21, scope: !15107, inlinedAt: !15089)
!15107 = distinct !DILexicalBlock(scope: !15102, file: !2543, line: 189, column: 40)
!15108 = !DILocation(line: 190, column: 4, scope: !15107, inlinedAt: !15089)
!15109 = !DILocation(line: 192, column: 4, scope: !15107, inlinedAt: !15089)
!15110 = distinct !{!15110, !15096, !15111}
!15111 = !DILocation(line: 194, column: 2, scope: !15097, inlinedAt: !15089)
!15112 = !DILocation(line: 196, column: 37, scope: !15081, inlinedAt: !15089)
!15113 = !DILocation(line: 196, column: 2, scope: !15081, inlinedAt: !15089)
!15114 = !DILocation(line: 197, column: 1, scope: !15081, inlinedAt: !15089)
!15115 = !DILocation(line: 751, column: 1, scope: !15064)
!15116 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2543, file: !2543, line: 753, type: !15117, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15119)
!15117 = !DISubroutineType(types: !15118)
!15118 = !{null, !2428, !15007}
!15119 = !{!15120, !15121}
!15120 = !DILocalVariable(name: "thread", arg: 1, scope: !15116, file: !2543, line: 753, type: !2428)
!15121 = !DILocalVariable(name: "timeout", arg: 2, scope: !15116, file: !2543, line: 753, type: !15007)
!15122 = !DILocation(line: 0, scope: !15116)
!15123 = !DILocation(line: 755, column: 7, scope: !15124)
!15124 = distinct !DILexicalBlock(scope: !15116, file: !2543, line: 755, column: 6)
!15125 = !DILocation(line: 755, column: 6, scope: !15116)
!15126 = !DILocation(line: 756, column: 3, scope: !15127)
!15127 = distinct !DILexicalBlock(scope: !15124, file: !2543, line: 755, column: 41)
!15128 = !DILocation(line: 757, column: 2, scope: !15127)
!15129 = !DILocation(line: 758, column: 1, scope: !15116)
!15130 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13454, file: !13454, line: 47, type: !15117, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15131)
!15131 = !{!15132, !15133}
!15132 = !DILocalVariable(name: "thread", arg: 1, scope: !15130, file: !13454, line: 47, type: !2428)
!15133 = !DILocalVariable(name: "ticks", arg: 2, scope: !15130, file: !13454, line: 47, type: !15007)
!15134 = !DILocation(line: 0, scope: !15130)
!15135 = !DILocation(line: 49, column: 30, scope: !15130)
!15136 = !DILocation(line: 49, column: 2, scope: !15130)
!15137 = !DILocation(line: 50, column: 1, scope: !15130)
!15138 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2543, file: !2543, line: 795, type: !2485, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15139)
!15139 = !{!15140, !15141, !15142, !15144, !15145}
!15140 = !DILocalVariable(name: "timeout", arg: 1, scope: !15138, file: !2543, line: 795, type: !2487)
!15141 = !DILocalVariable(name: "thread", scope: !15138, file: !2543, line: 797, type: !2428)
!15142 = !DILocalVariable(name: "__i", scope: !15143, file: !2543, line: 800, type: !14183)
!15143 = distinct !DILexicalBlock(scope: !15138, file: !2543, line: 800, column: 2)
!15144 = !DILocalVariable(name: "__key", scope: !15143, file: !2543, line: 800, type: !14183)
!15145 = !DILocalVariable(name: "killed", scope: !15146, file: !2543, line: 801, type: !334)
!15146 = distinct !DILexicalBlock(scope: !15147, file: !2543, line: 800, column: 26)
!15147 = distinct !DILexicalBlock(scope: !15143, file: !2543, line: 800, column: 2)
!15148 = !DILocation(line: 0, scope: !15138)
!15149 = !DILocation(line: 797, column: 28, scope: !15138)
!15150 = !DILocation(line: 0, scope: !15143)
!15151 = !DILocation(line: 0, scope: !14191, inlinedAt: !15152)
!15152 = distinct !DILocation(line: 800, column: 2, scope: !15143)
!15153 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !15154)
!15154 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !15152)
!15155 = !DILocation(line: 0, scope: !14200, inlinedAt: !15154)
!15156 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !15152)
!15157 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !15152)
!15158 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !15152)
!15159 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !15152)
!15160 = !DILocation(line: 801, column: 27, scope: !15146)
!15161 = !DILocation(line: 801, column: 32, scope: !15146)
!15162 = !DILocation(line: 801, column: 61, scope: !15146)
!15163 = !DILocation(line: 0, scope: !15146)
!15164 = !DILocation(line: 804, column: 7, scope: !15146)
!15165 = !DILocation(line: 805, column: 21, scope: !15166)
!15166 = distinct !DILexicalBlock(scope: !15167, file: !2543, line: 805, column: 8)
!15167 = distinct !DILexicalBlock(scope: !15168, file: !2543, line: 804, column: 16)
!15168 = distinct !DILexicalBlock(scope: !15146, file: !2543, line: 804, column: 7)
!15169 = !DILocation(line: 805, column: 31, scope: !15166)
!15170 = !DILocation(line: 805, column: 8, scope: !15167)
!15171 = !DILocation(line: 806, column: 5, scope: !15172)
!15172 = distinct !DILexicalBlock(scope: !15166, file: !2543, line: 805, column: 40)
!15173 = !DILocation(line: 807, column: 4, scope: !15172)
!15174 = !DILocation(line: 808, column: 4, scope: !15167)
!15175 = !DILocation(line: 809, column: 4, scope: !15167)
!15176 = !DILocation(line: 810, column: 4, scope: !15167)
!15177 = !DILocation(line: 811, column: 3, scope: !15167)
!15178 = !DILocation(line: 0, scope: !14225, inlinedAt: !15179)
!15179 = distinct !DILocation(line: 800, column: 2, scope: !15147)
!15180 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !15179)
!15181 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !15179)
!15182 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !15179)
!15183 = !DILocation(line: 0, scope: !14239, inlinedAt: !15184)
!15184 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !15179)
!15185 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !15184)
!15186 = !DILocation(line: 813, column: 1, scope: !15138)
!15187 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2543, file: !2543, line: 779, type: !14149, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15188)
!15188 = !{!15189}
!15189 = !DILocalVariable(name: "thread", arg: 1, scope: !15187, file: !2543, line: 779, type: !2428)
!15190 = !DILocation(line: 0, scope: !15187)
!15191 = !DILocation(line: 781, column: 21, scope: !15187)
!15192 = !DILocation(line: 781, column: 2, scope: !15187)
!15193 = !DILocation(line: 782, column: 2, scope: !15187)
!15194 = !DILocation(line: 783, column: 15, scope: !15187)
!15195 = !DILocation(line: 783, column: 25, scope: !15187)
!15196 = !DILocation(line: 784, column: 1, scope: !15187)
!15197 = distinct !DISubprogram(name: "pended_on_thread", scope: !2543, file: !2543, line: 724, type: !15198, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15200)
!15198 = !DISubroutineType(types: !15199)
!15199 = !{!2459, !2428}
!15200 = !{!15201}
!15201 = !DILocalVariable(name: "thread", arg: 1, scope: !15197, file: !2543, line: 724, type: !2428)
!15202 = !DILocation(line: 0, scope: !15197)
!15203 = !DILocation(line: 726, column: 2, scope: !15204)
!15204 = distinct !DILexicalBlock(scope: !15205, file: !2543, line: 726, column: 2)
!15205 = distinct !DILexicalBlock(scope: !15197, file: !2543, line: 726, column: 2)
!15206 = !DILocation(line: 726, column: 2, scope: !15205)
!15207 = !DILocation(line: 726, column: 2, scope: !15208)
!15208 = distinct !DILexicalBlock(scope: !15204, file: !2543, line: 726, column: 2)
!15209 = !DILocation(line: 728, column: 2, scope: !15197)
!15210 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2543, file: !2543, line: 1137, type: !15082, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15211)
!15211 = !{!15212, !15213}
!15212 = !DILocalVariable(name: "pq", arg: 1, scope: !15210, file: !2543, line: 1137, type: !15084)
!15213 = !DILocalVariable(name: "thread", arg: 2, scope: !15210, file: !2543, line: 1137, type: !2428)
!15214 = !DILocation(line: 0, scope: !15210)
!15215 = !DILocation(line: 1139, column: 2, scope: !15216)
!15216 = distinct !DILexicalBlock(scope: !15217, file: !2543, line: 1139, column: 2)
!15217 = distinct !DILexicalBlock(scope: !15210, file: !2543, line: 1139, column: 2)
!15218 = !DILocation(line: 1139, column: 2, scope: !15217)
!15219 = !DILocation(line: 1139, column: 2, scope: !15220)
!15220 = distinct !DILexicalBlock(scope: !15216, file: !2543, line: 1139, column: 2)
!15221 = !DILocation(line: 1141, column: 33, scope: !15210)
!15222 = !DILocation(line: 1141, column: 2, scope: !15210)
!15223 = !DILocation(line: 1142, column: 1, scope: !15210)
!15224 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12782, file: !12782, line: 165, type: !14149, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15225)
!15225 = !{!15226}
!15226 = !DILocalVariable(name: "thread", arg: 1, scope: !15224, file: !12782, line: 165, type: !2428)
!15227 = !DILocation(line: 0, scope: !15224)
!15228 = !DILocation(line: 167, column: 15, scope: !15224)
!15229 = !DILocation(line: 167, column: 28, scope: !15224)
!15230 = !DILocation(line: 168, column: 1, scope: !15224)
!15231 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !128, file: !128, line: 496, type: !15232, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15235)
!15232 = !DISubroutineType(types: !15233)
!15233 = !{null, !15234}
!15234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 32)
!15235 = !{!15236, !15237, !15239}
!15236 = !DILocalVariable(name: "node", arg: 1, scope: !15231, file: !128, line: 496, type: !15234)
!15237 = !DILocalVariable(name: "prev", scope: !15231, file: !128, line: 498, type: !15238)
!15238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15234)
!15239 = !DILocalVariable(name: "next", scope: !15231, file: !128, line: 499, type: !15238)
!15240 = !DILocation(line: 0, scope: !15231)
!15241 = !DILocation(line: 498, column: 34, scope: !15231)
!15242 = !DILocation(line: 499, column: 34, scope: !15231)
!15243 = !DILocation(line: 501, column: 8, scope: !15231)
!15244 = !DILocation(line: 501, column: 13, scope: !15231)
!15245 = !DILocation(line: 502, column: 8, scope: !15231)
!15246 = !DILocation(line: 502, column: 13, scope: !15231)
!15247 = !DILocation(line: 503, column: 2, scope: !15231)
!15248 = !DILocation(line: 504, column: 1, scope: !15231)
!15249 = distinct !DISubprogram(name: "sys_dnode_init", scope: !128, file: !128, line: 211, type: !15232, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15250)
!15250 = !{!15251}
!15251 = !DILocalVariable(name: "node", arg: 1, scope: !15249, file: !128, line: 211, type: !15234)
!15252 = !DILocation(line: 0, scope: !15249)
!15253 = !DILocation(line: 213, column: 8, scope: !15249)
!15254 = !DILocation(line: 213, column: 13, scope: !15249)
!15255 = !DILocation(line: 214, column: 8, scope: !15249)
!15256 = !DILocation(line: 214, column: 13, scope: !15249)
!15257 = !DILocation(line: 215, column: 1, scope: !15249)
!15258 = distinct !DISubprogram(name: "unready_thread", scope: !2543, file: !2543, line: 731, type: !14149, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15259)
!15259 = !{!15260}
!15260 = !DILocalVariable(name: "thread", arg: 1, scope: !15258, file: !2543, line: 731, type: !2428)
!15261 = !DILocation(line: 0, scope: !15258)
!15262 = !DILocation(line: 733, column: 6, scope: !15263)
!15263 = distinct !DILexicalBlock(scope: !15258, file: !2543, line: 733, column: 6)
!15264 = !DILocation(line: 733, column: 6, scope: !15258)
!15265 = !DILocation(line: 0, scope: !14383, inlinedAt: !15266)
!15266 = distinct !DILocation(line: 734, column: 3, scope: !15267)
!15267 = distinct !DILexicalBlock(scope: !15263, file: !2543, line: 733, column: 34)
!15268 = !DILocation(line: 266, column: 15, scope: !14383, inlinedAt: !15266)
!15269 = !DILocation(line: 266, column: 28, scope: !14383, inlinedAt: !15266)
!15270 = !DILocation(line: 0, scope: !14391, inlinedAt: !15271)
!15271 = distinct !DILocation(line: 268, column: 3, scope: !14395, inlinedAt: !15266)
!15272 = !DILocation(line: 234, column: 2, scope: !14391, inlinedAt: !15271)
!15273 = !DILocation(line: 735, column: 2, scope: !15267)
!15274 = !DILocation(line: 736, column: 25, scope: !15258)
!15275 = !DILocation(line: 736, column: 22, scope: !15258)
!15276 = !DILocation(line: 736, column: 2, scope: !15258)
!15277 = !DILocation(line: 737, column: 1, scope: !15258)
!15278 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12782, file: !12782, line: 160, type: !14149, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15279)
!15279 = !{!15280}
!15280 = !DILocalVariable(name: "thread", arg: 1, scope: !15278, file: !12782, line: 160, type: !2428)
!15281 = !DILocation(line: 0, scope: !15278)
!15282 = !DILocation(line: 162, column: 15, scope: !15278)
!15283 = !DILocation(line: 162, column: 28, scope: !15278)
!15284 = !DILocation(line: 163, column: 1, scope: !15278)
!15285 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !128, file: !128, line: 294, type: !15286, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15288)
!15286 = !DISubroutineType(types: !15287)
!15287 = !{!15234, !15084}
!15288 = !{!15289}
!15289 = !DILocalVariable(name: "list", arg: 1, scope: !15285, file: !128, line: 294, type: !15084)
!15290 = !DILocation(line: 0, scope: !15285)
!15291 = !DILocation(line: 296, column: 9, scope: !15285)
!15292 = !DILocation(line: 296, column: 49, scope: !15285)
!15293 = !DILocation(line: 296, column: 2, scope: !15285)
!15294 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !128, file: !128, line: 443, type: !15295, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15297)
!15295 = !DISubroutineType(types: !15296)
!15296 = !{null, !15234, !15234}
!15297 = !{!15298, !15299, !15300}
!15298 = !DILocalVariable(name: "successor", arg: 1, scope: !15294, file: !128, line: 443, type: !15234)
!15299 = !DILocalVariable(name: "node", arg: 2, scope: !15294, file: !128, line: 443, type: !15234)
!15300 = !DILocalVariable(name: "prev", scope: !15294, file: !128, line: 445, type: !15238)
!15301 = !DILocation(line: 0, scope: !15294)
!15302 = !DILocation(line: 445, column: 39, scope: !15294)
!15303 = !DILocation(line: 447, column: 8, scope: !15294)
!15304 = !DILocation(line: 447, column: 13, scope: !15294)
!15305 = !DILocation(line: 448, column: 8, scope: !15294)
!15306 = !DILocation(line: 448, column: 13, scope: !15294)
!15307 = !DILocation(line: 449, column: 8, scope: !15294)
!15308 = !DILocation(line: 449, column: 13, scope: !15294)
!15309 = !DILocation(line: 450, column: 18, scope: !15294)
!15310 = !DILocation(line: 451, column: 1, scope: !15294)
!15311 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !128, file: !128, line: 341, type: !15312, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15314)
!15312 = !DISubroutineType(types: !15313)
!15313 = !{!15234, !15084, !15234}
!15314 = !{!15315, !15316}
!15315 = !DILocalVariable(name: "list", arg: 1, scope: !15311, file: !128, line: 341, type: !15084)
!15316 = !DILocalVariable(name: "node", arg: 2, scope: !15311, file: !128, line: 342, type: !15234)
!15317 = !DILocation(line: 0, scope: !15311)
!15318 = !DILocation(line: 344, column: 15, scope: !15311)
!15319 = !DILocation(line: 344, column: 9, scope: !15311)
!15320 = !DILocation(line: 344, column: 26, scope: !15311)
!15321 = !DILocation(line: 344, column: 2, scope: !15311)
!15322 = distinct !DISubprogram(name: "sys_dlist_append", scope: !128, file: !128, line: 404, type: !15323, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15325)
!15323 = !DISubroutineType(types: !15324)
!15324 = !{null, !15084, !15234}
!15325 = !{!15326, !15327, !15328}
!15326 = !DILocalVariable(name: "list", arg: 1, scope: !15322, file: !128, line: 404, type: !15084)
!15327 = !DILocalVariable(name: "node", arg: 2, scope: !15322, file: !128, line: 404, type: !15234)
!15328 = !DILocalVariable(name: "tail", scope: !15322, file: !128, line: 406, type: !15238)
!15329 = !DILocation(line: 0, scope: !15322)
!15330 = !DILocation(line: 406, column: 34, scope: !15322)
!15331 = !DILocation(line: 408, column: 8, scope: !15322)
!15332 = !DILocation(line: 408, column: 13, scope: !15322)
!15333 = !DILocation(line: 409, column: 8, scope: !15322)
!15334 = !DILocation(line: 409, column: 13, scope: !15322)
!15335 = !DILocation(line: 411, column: 8, scope: !15322)
!15336 = !DILocation(line: 411, column: 13, scope: !15322)
!15337 = !DILocation(line: 412, column: 13, scope: !15322)
!15338 = !DILocation(line: 413, column: 1, scope: !15322)
!15339 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !128, file: !128, line: 325, type: !15312, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15340)
!15340 = !{!15341, !15342}
!15341 = !DILocalVariable(name: "list", arg: 1, scope: !15339, file: !128, line: 325, type: !15084)
!15342 = !DILocalVariable(name: "node", arg: 2, scope: !15339, file: !128, line: 326, type: !15234)
!15343 = !DILocation(line: 0, scope: !15339)
!15344 = !DILocation(line: 328, column: 24, scope: !15339)
!15345 = !DILocation(line: 328, column: 15, scope: !15339)
!15346 = !DILocation(line: 328, column: 9, scope: !15339)
!15347 = !DILocation(line: 328, column: 45, scope: !15339)
!15348 = !DILocation(line: 328, column: 2, scope: !15339)
!15349 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !128, file: !128, line: 266, type: !15350, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15352)
!15350 = !DISubroutineType(types: !15351)
!15351 = !{!334, !15084}
!15352 = !{!15353}
!15353 = !DILocalVariable(name: "list", arg: 1, scope: !15349, file: !128, line: 266, type: !15084)
!15354 = !DILocation(line: 0, scope: !15349)
!15355 = !DILocation(line: 268, column: 15, scope: !15349)
!15356 = !DILocation(line: 268, column: 20, scope: !15349)
!15357 = !DILocation(line: 268, column: 2, scope: !15349)
!15358 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2543, file: !2543, line: 786, type: !14149, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15359)
!15359 = !{!15360, !15361, !15363}
!15360 = !DILocalVariable(name: "thread", arg: 1, scope: !15358, file: !2543, line: 786, type: !2428)
!15361 = !DILocalVariable(name: "__i", scope: !15362, file: !2543, line: 788, type: !14183)
!15362 = distinct !DILexicalBlock(scope: !15358, file: !2543, line: 788, column: 2)
!15363 = !DILocalVariable(name: "__key", scope: !15362, file: !2543, line: 788, type: !14183)
!15364 = !DILocation(line: 0, scope: !15358)
!15365 = !DILocation(line: 0, scope: !15362)
!15366 = !DILocation(line: 0, scope: !14191, inlinedAt: !15367)
!15367 = distinct !DILocation(line: 788, column: 2, scope: !15362)
!15368 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !15369)
!15369 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !15367)
!15370 = !DILocation(line: 0, scope: !14200, inlinedAt: !15369)
!15371 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !15367)
!15372 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !15367)
!15373 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !15367)
!15374 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !15367)
!15375 = !DILocation(line: 789, column: 3, scope: !15376)
!15376 = distinct !DILexicalBlock(scope: !15377, file: !2543, line: 788, column: 26)
!15377 = distinct !DILexicalBlock(scope: !15362, file: !2543, line: 788, column: 2)
!15378 = !DILocation(line: 0, scope: !14225, inlinedAt: !15379)
!15379 = distinct !DILocation(line: 788, column: 2, scope: !15377)
!15380 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !15379)
!15381 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !15379)
!15382 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !15379)
!15383 = !DILocation(line: 0, scope: !14239, inlinedAt: !15384)
!15384 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !15379)
!15385 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !15384)
!15386 = !DILocation(line: 791, column: 1, scope: !15358)
!15387 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2543, file: !2543, line: 816, type: !15388, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15390)
!15388 = !DISubroutineType(types: !15389)
!15389 = !{!109, !110, !2459, !15007}
!15390 = !{!15391, !15392, !15393, !15394, !15395, !15397}
!15391 = !DILocalVariable(name: "key", arg: 1, scope: !15387, file: !2543, line: 816, type: !110)
!15392 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15387, file: !2543, line: 816, type: !2459)
!15393 = !DILocalVariable(name: "timeout", arg: 3, scope: !15387, file: !2543, line: 816, type: !15007)
!15394 = !DILocalVariable(name: "ret", scope: !15387, file: !2543, line: 828, type: !109)
!15395 = !DILocalVariable(name: "__i", scope: !15396, file: !2543, line: 829, type: !14183)
!15396 = distinct !DILexicalBlock(scope: !15387, file: !2543, line: 829, column: 2)
!15397 = !DILocalVariable(name: "__key", scope: !15396, file: !2543, line: 829, type: !14183)
!15398 = !DILocation(line: 0, scope: !15387)
!15399 = !DILocation(line: 823, column: 14, scope: !15387)
!15400 = !DILocation(line: 823, column: 2, scope: !15387)
!15401 = !DILocation(line: 826, column: 20, scope: !15387)
!15402 = !DILocation(line: 826, column: 18, scope: !15387)
!15403 = !DILocation(line: 828, column: 12, scope: !15387)
!15404 = !DILocation(line: 0, scope: !15396)
!15405 = !DILocation(line: 0, scope: !14191, inlinedAt: !15406)
!15406 = distinct !DILocation(line: 829, column: 2, scope: !15396)
!15407 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !15408)
!15408 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !15406)
!15409 = !DILocation(line: 0, scope: !14200, inlinedAt: !15408)
!15410 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !15406)
!15411 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !15406)
!15412 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !15406)
!15413 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !15406)
!15414 = !DILocation(line: 830, column: 7, scope: !15415)
!15415 = distinct !DILexicalBlock(scope: !15416, file: !2543, line: 830, column: 7)
!15416 = distinct !DILexicalBlock(scope: !15417, file: !2543, line: 829, column: 26)
!15417 = distinct !DILexicalBlock(scope: !15396, file: !2543, line: 829, column: 2)
!15418 = !DILocation(line: 830, column: 26, scope: !15415)
!15419 = !DILocation(line: 830, column: 23, scope: !15415)
!15420 = !DILocation(line: 830, column: 7, scope: !15416)
!15421 = !DILocation(line: 831, column: 20, scope: !15422)
!15422 = distinct !DILexicalBlock(scope: !15415, file: !2543, line: 830, column: 36)
!15423 = !DILocation(line: 832, column: 3, scope: !15422)
!15424 = !DILocation(line: 0, scope: !14225, inlinedAt: !15425)
!15425 = distinct !DILocation(line: 829, column: 2, scope: !15417)
!15426 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !15425)
!15427 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !15425)
!15428 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !15425)
!15429 = !DILocation(line: 0, scope: !14239, inlinedAt: !15430)
!15430 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !15425)
!15431 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !15430)
!15432 = !DILocation(line: 834, column: 2, scope: !15387)
!15433 = distinct !DISubprogram(name: "z_pend_curr", scope: !2543, file: !2543, line: 840, type: !15434, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15436)
!15434 = !DISubroutineType(types: !15435)
!15435 = !{!109, !14194, !14183, !2459, !15007}
!15436 = !{!15437, !15438, !15439, !15440}
!15437 = !DILocalVariable(name: "lock", arg: 1, scope: !15433, file: !2543, line: 840, type: !14194)
!15438 = !DILocalVariable(name: "key", arg: 2, scope: !15433, file: !2543, line: 840, type: !14183)
!15439 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15433, file: !2543, line: 841, type: !2459)
!15440 = !DILocalVariable(name: "timeout", arg: 4, scope: !15433, file: !2543, line: 841, type: !15007)
!15441 = !DILocation(line: 0, scope: !15433)
!15442 = !DILocation(line: 844, column: 20, scope: !15433)
!15443 = !DILocation(line: 844, column: 18, scope: !15433)
!15444 = !DILocation(line: 846, column: 2, scope: !15445)
!15445 = distinct !DILexicalBlock(scope: !15446, file: !2543, line: 846, column: 2)
!15446 = distinct !DILexicalBlock(scope: !15433, file: !2543, line: 846, column: 2)
!15447 = !DILocation(line: 846, column: 2, scope: !15446)
!15448 = !DILocation(line: 846, column: 2, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !15445, file: !2543, line: 846, column: 2)
!15450 = !DILocation(line: 0, scope: !14191, inlinedAt: !15451)
!15451 = distinct !DILocation(line: 856, column: 9, scope: !15433)
!15452 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !15453)
!15453 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !15451)
!15454 = !DILocation(line: 0, scope: !14200, inlinedAt: !15453)
!15455 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !15451)
!15456 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !15451)
!15457 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !15451)
!15458 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !15451)
!15459 = !DILocation(line: 857, column: 14, scope: !15433)
!15460 = !DILocation(line: 857, column: 2, scope: !15433)
!15461 = !DILocation(line: 0, scope: !14806, inlinedAt: !15462)
!15462 = distinct !DILocation(line: 858, column: 2, scope: !15433)
!15463 = !DILocation(line: 225, column: 2, scope: !14813, inlinedAt: !15462)
!15464 = !DILocation(line: 225, column: 2, scope: !14814, inlinedAt: !15462)
!15465 = !DILocation(line: 225, column: 2, scope: !14817, inlinedAt: !15462)
!15466 = !DILocation(line: 0, scope: !14797, inlinedAt: !15467)
!15467 = distinct !DILocation(line: 859, column: 9, scope: !15433)
!15468 = !DILocation(line: 0, scope: !14806, inlinedAt: !15469)
!15469 = distinct !DILocation(line: 195, column: 2, scope: !14797, inlinedAt: !15467)
!15470 = !DILocation(line: 225, column: 2, scope: !14813, inlinedAt: !15469)
!15471 = !DILocation(line: 225, column: 2, scope: !14814, inlinedAt: !15469)
!15472 = !DILocation(line: 225, column: 2, scope: !14817, inlinedAt: !15469)
!15473 = !DILocation(line: 196, column: 9, scope: !14797, inlinedAt: !15467)
!15474 = !DILocation(line: 859, column: 2, scope: !15433)
!15475 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2543, file: !2543, line: 862, type: !15476, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15478)
!15476 = !DISubroutineType(types: !15477)
!15477 = !{!2428, !2459}
!15478 = !{!15479, !15480, !15481, !15483}
!15479 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15475, file: !2543, line: 862, type: !2459)
!15480 = !DILocalVariable(name: "thread", scope: !15475, file: !2543, line: 864, type: !2428)
!15481 = !DILocalVariable(name: "__i", scope: !15482, file: !2543, line: 866, type: !14183)
!15482 = distinct !DILexicalBlock(scope: !15475, file: !2543, line: 866, column: 2)
!15483 = !DILocalVariable(name: "__key", scope: !15482, file: !2543, line: 866, type: !14183)
!15484 = !DILocation(line: 0, scope: !15475)
!15485 = !DILocation(line: 0, scope: !15482)
!15486 = !DILocation(line: 0, scope: !14191, inlinedAt: !15487)
!15487 = distinct !DILocation(line: 866, column: 2, scope: !15482)
!15488 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !15489)
!15489 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !15487)
!15490 = !DILocation(line: 0, scope: !14200, inlinedAt: !15489)
!15491 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !15487)
!15492 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !15487)
!15493 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !15487)
!15494 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !15487)
!15495 = !DILocation(line: 867, column: 12, scope: !15496)
!15496 = distinct !DILexicalBlock(scope: !15497, file: !2543, line: 866, column: 26)
!15497 = distinct !DILexicalBlock(scope: !15482, file: !2543, line: 866, column: 2)
!15498 = !DILocation(line: 869, column: 14, scope: !15499)
!15499 = distinct !DILexicalBlock(scope: !15496, file: !2543, line: 869, column: 7)
!15500 = !DILocation(line: 869, column: 7, scope: !15496)
!15501 = !DILocation(line: 870, column: 4, scope: !15502)
!15502 = distinct !DILexicalBlock(scope: !15499, file: !2543, line: 869, column: 23)
!15503 = !DILocation(line: 871, column: 3, scope: !15502)
!15504 = !DILocation(line: 0, scope: !14225, inlinedAt: !15505)
!15505 = distinct !DILocation(line: 866, column: 2, scope: !15497)
!15506 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !15505)
!15507 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !15505)
!15508 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !15505)
!15509 = !DILocation(line: 0, scope: !14239, inlinedAt: !15510)
!15510 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !15505)
!15511 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !15510)
!15512 = !DILocation(line: 874, column: 2, scope: !15475)
!15513 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2543, file: !2543, line: 1144, type: !15514, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15516)
!15514 = !DISubroutineType(types: !15515)
!15515 = !{!2428, !15084}
!15516 = !{!15517, !15518, !15519}
!15517 = !DILocalVariable(name: "pq", arg: 1, scope: !15513, file: !2543, line: 1144, type: !15084)
!15518 = !DILocalVariable(name: "thread", scope: !15513, file: !2543, line: 1146, type: !2428)
!15519 = !DILocalVariable(name: "n", scope: !15513, file: !2543, line: 1147, type: !15234)
!15520 = !DILocation(line: 0, scope: !15513)
!15521 = !DILocation(line: 1147, column: 19, scope: !15513)
!15522 = !DILocation(line: 1152, column: 2, scope: !15513)
!15523 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2543, file: !2543, line: 877, type: !15476, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15524)
!15524 = !{!15525, !15526, !15527, !15529}
!15525 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15523, file: !2543, line: 877, type: !2459)
!15526 = !DILocalVariable(name: "thread", scope: !15523, file: !2543, line: 879, type: !2428)
!15527 = !DILocalVariable(name: "__i", scope: !15528, file: !2543, line: 881, type: !14183)
!15528 = distinct !DILexicalBlock(scope: !15523, file: !2543, line: 881, column: 2)
!15529 = !DILocalVariable(name: "__key", scope: !15528, file: !2543, line: 881, type: !14183)
!15530 = !DILocation(line: 0, scope: !15523)
!15531 = !DILocation(line: 0, scope: !15528)
!15532 = !DILocation(line: 0, scope: !14191, inlinedAt: !15533)
!15533 = distinct !DILocation(line: 881, column: 2, scope: !15528)
!15534 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !15535)
!15535 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !15533)
!15536 = !DILocation(line: 0, scope: !14200, inlinedAt: !15535)
!15537 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !15533)
!15538 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !15533)
!15539 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !15533)
!15540 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !15533)
!15541 = !DILocation(line: 882, column: 12, scope: !15542)
!15542 = distinct !DILexicalBlock(scope: !15543, file: !2543, line: 881, column: 26)
!15543 = distinct !DILexicalBlock(scope: !15528, file: !2543, line: 881, column: 2)
!15544 = !DILocation(line: 884, column: 14, scope: !15545)
!15545 = distinct !DILexicalBlock(scope: !15542, file: !2543, line: 884, column: 7)
!15546 = !DILocation(line: 884, column: 7, scope: !15542)
!15547 = !DILocation(line: 885, column: 4, scope: !15548)
!15548 = distinct !DILexicalBlock(scope: !15545, file: !2543, line: 884, column: 23)
!15549 = !DILocation(line: 886, column: 10, scope: !15548)
!15550 = !DILocation(line: 887, column: 3, scope: !15548)
!15551 = !DILocation(line: 0, scope: !14225, inlinedAt: !15552)
!15552 = distinct !DILocation(line: 881, column: 2, scope: !15543)
!15553 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !15552)
!15554 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !15552)
!15555 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !15552)
!15556 = !DILocation(line: 0, scope: !14239, inlinedAt: !15557)
!15557 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !15552)
!15558 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !15557)
!15559 = !DILocation(line: 890, column: 2, scope: !15523)
!15560 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2543, file: !2543, line: 893, type: !14149, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15561)
!15561 = !{!15562}
!15562 = !DILocalVariable(name: "thread", arg: 1, scope: !15560, file: !2543, line: 893, type: !2428)
!15563 = !DILocation(line: 0, scope: !15560)
!15564 = !DILocation(line: 0, scope: !15358, inlinedAt: !15565)
!15565 = distinct !DILocation(line: 895, column: 2, scope: !15560)
!15566 = !DILocation(line: 0, scope: !15362, inlinedAt: !15565)
!15567 = !DILocation(line: 0, scope: !14191, inlinedAt: !15568)
!15568 = distinct !DILocation(line: 788, column: 2, scope: !15362, inlinedAt: !15565)
!15569 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !15570)
!15570 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !15568)
!15571 = !DILocation(line: 0, scope: !14200, inlinedAt: !15570)
!15572 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !15568)
!15573 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !15568)
!15574 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !15568)
!15575 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !15568)
!15576 = !DILocation(line: 789, column: 3, scope: !15376, inlinedAt: !15565)
!15577 = !DILocation(line: 0, scope: !14225, inlinedAt: !15578)
!15578 = distinct !DILocation(line: 788, column: 2, scope: !15377, inlinedAt: !15565)
!15579 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !15578)
!15580 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !15578)
!15581 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !15578)
!15582 = !DILocation(line: 0, scope: !14239, inlinedAt: !15583)
!15583 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !15578)
!15584 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !15583)
!15585 = !DILocation(line: 896, column: 8, scope: !15560)
!15586 = !DILocation(line: 897, column: 1, scope: !15560)
!15587 = distinct !DISubprogram(name: "z_set_prio", scope: !2543, file: !2543, line: 902, type: !14528, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15588)
!15588 = !{!15589, !15590, !15591, !15592, !15594}
!15589 = !DILocalVariable(name: "thread", arg: 1, scope: !15587, file: !2543, line: 902, type: !2428)
!15590 = !DILocalVariable(name: "prio", arg: 2, scope: !15587, file: !2543, line: 902, type: !109)
!15591 = !DILocalVariable(name: "need_sched", scope: !15587, file: !2543, line: 904, type: !334)
!15592 = !DILocalVariable(name: "__i", scope: !15593, file: !2543, line: 906, type: !14183)
!15593 = distinct !DILexicalBlock(scope: !15587, file: !2543, line: 906, column: 2)
!15594 = !DILocalVariable(name: "__key", scope: !15593, file: !2543, line: 906, type: !14183)
!15595 = !DILocation(line: 0, scope: !15587)
!15596 = !DILocation(line: 0, scope: !15593)
!15597 = !DILocation(line: 0, scope: !14191, inlinedAt: !15598)
!15598 = distinct !DILocation(line: 906, column: 2, scope: !15593)
!15599 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !15600)
!15600 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !15598)
!15601 = !DILocation(line: 0, scope: !14200, inlinedAt: !15600)
!15602 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !15598)
!15603 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !15598)
!15604 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !15598)
!15605 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !15598)
!15606 = !DILocation(line: 907, column: 16, scope: !15607)
!15607 = distinct !DILexicalBlock(scope: !15608, file: !2543, line: 906, column: 26)
!15608 = distinct !DILexicalBlock(scope: !15593, file: !2543, line: 906, column: 2)
!15609 = !DILocation(line: 909, column: 7, scope: !15607)
!15610 = !DILocation(line: 0, scope: !14383, inlinedAt: !15611)
!15611 = distinct !DILocation(line: 912, column: 5, scope: !15612)
!15612 = distinct !DILexicalBlock(scope: !15613, file: !2543, line: 911, column: 63)
!15613 = distinct !DILexicalBlock(scope: !15614, file: !2543, line: 911, column: 8)
!15614 = distinct !DILexicalBlock(scope: !15615, file: !2543, line: 909, column: 19)
!15615 = distinct !DILexicalBlock(scope: !15607, file: !2543, line: 909, column: 7)
!15616 = !DILocation(line: 266, column: 28, scope: !14383, inlinedAt: !15611)
!15617 = !DILocation(line: 0, scope: !14391, inlinedAt: !15618)
!15618 = distinct !DILocation(line: 268, column: 3, scope: !14395, inlinedAt: !15611)
!15619 = !DILocation(line: 234, column: 2, scope: !14391, inlinedAt: !15618)
!15620 = !DILocation(line: 913, column: 23, scope: !15612)
!15621 = !DILocation(line: 0, scope: !14400, inlinedAt: !15622)
!15622 = distinct !DILocation(line: 914, column: 5, scope: !15612)
!15623 = !DILocation(line: 252, column: 28, scope: !14400, inlinedAt: !15622)
!15624 = !DILocation(line: 0, scope: !14407, inlinedAt: !15625)
!15625 = distinct !DILocation(line: 254, column: 3, scope: !14411, inlinedAt: !15622)
!15626 = !DILocation(line: 229, column: 2, scope: !14407, inlinedAt: !15625)
!15627 = !DILocation(line: 918, column: 4, scope: !15614)
!15628 = !DILocation(line: 919, column: 3, scope: !15614)
!15629 = !DILocation(line: 920, column: 22, scope: !15630)
!15630 = distinct !DILexicalBlock(scope: !15615, file: !2543, line: 919, column: 10)
!15631 = !DILocation(line: 0, scope: !14225, inlinedAt: !15632)
!15632 = distinct !DILocation(line: 906, column: 2, scope: !15608)
!15633 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !15632)
!15634 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !15632)
!15635 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !15632)
!15636 = !DILocation(line: 0, scope: !14239, inlinedAt: !15637)
!15637 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !15632)
!15638 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !15637)
!15639 = !DILocation(line: 926, column: 2, scope: !15587)
!15640 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2543, file: !2543, line: 929, type: !15641, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15643)
!15641 = !DISubroutineType(types: !15642)
!15642 = !{null, !2428, !109}
!15643 = !{!15644, !15645, !15646}
!15644 = !DILocalVariable(name: "thread", arg: 1, scope: !15640, file: !2543, line: 929, type: !2428)
!15645 = !DILocalVariable(name: "prio", arg: 2, scope: !15640, file: !2543, line: 929, type: !109)
!15646 = !DILocalVariable(name: "need_sched", scope: !15640, file: !2543, line: 931, type: !334)
!15647 = !DILocation(line: 0, scope: !15640)
!15648 = !DILocation(line: 931, column: 20, scope: !15640)
!15649 = !DILocation(line: 935, column: 17, scope: !15650)
!15650 = distinct !DILexicalBlock(scope: !15640, file: !2543, line: 935, column: 6)
!15651 = !DILocation(line: 935, column: 20, scope: !15650)
!15652 = !DILocation(line: 935, column: 35, scope: !15650)
!15653 = !DILocation(line: 935, column: 48, scope: !15650)
!15654 = !DILocation(line: 935, column: 6, scope: !15640)
!15655 = !DILocation(line: 936, column: 3, scope: !15656)
!15656 = distinct !DILexicalBlock(scope: !15650, file: !2543, line: 935, column: 55)
!15657 = !DILocation(line: 937, column: 2, scope: !15656)
!15658 = !DILocation(line: 938, column: 1, scope: !15640)
!15659 = distinct !DISubprogram(name: "k_sched_lock", scope: !2543, file: !2543, line: 987, type: !3169, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15660)
!15660 = !{!15661, !15663}
!15661 = !DILocalVariable(name: "__i", scope: !15662, file: !2543, line: 989, type: !14183)
!15662 = distinct !DILexicalBlock(scope: !15659, file: !2543, line: 989, column: 2)
!15663 = !DILocalVariable(name: "__key", scope: !15662, file: !2543, line: 989, type: !14183)
!15664 = !DILocation(line: 0, scope: !15662)
!15665 = !DILocation(line: 0, scope: !14191, inlinedAt: !15666)
!15666 = distinct !DILocation(line: 989, column: 2, scope: !15662)
!15667 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !15668)
!15668 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !15666)
!15669 = !DILocation(line: 0, scope: !14200, inlinedAt: !15668)
!15670 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !15666)
!15671 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !15666)
!15672 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !15666)
!15673 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !15666)
!15674 = !DILocation(line: 992, column: 3, scope: !15675)
!15675 = distinct !DILexicalBlock(scope: !15676, file: !2543, line: 989, column: 26)
!15676 = distinct !DILexicalBlock(scope: !15662, file: !2543, line: 989, column: 2)
!15677 = !DILocation(line: 0, scope: !14225, inlinedAt: !15678)
!15678 = distinct !DILocation(line: 989, column: 2, scope: !15676)
!15679 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !15678)
!15680 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !15678)
!15681 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !15678)
!15682 = !DILocation(line: 0, scope: !14239, inlinedAt: !15683)
!15683 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !15678)
!15684 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !15683)
!15685 = !DILocation(line: 994, column: 1, scope: !15659)
!15686 = distinct !DISubprogram(name: "z_sched_lock", scope: !12782, file: !12782, line: 251, type: !3169, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2100)
!15687 = !DILocation(line: 1031, column: 3, scope: !14846, inlinedAt: !15688)
!15688 = distinct !DILocation(line: 48, column: 10, scope: !14850, inlinedAt: !15689)
!15689 = distinct !DILocation(line: 253, column: 2, scope: !15690)
!15690 = distinct !DILexicalBlock(scope: !15691, file: !12782, line: 253, column: 2)
!15691 = distinct !DILexicalBlock(scope: !15686, file: !12782, line: 253, column: 2)
!15692 = !DILocation(line: 0, scope: !14846, inlinedAt: !15688)
!15693 = !DILocation(line: 48, column: 9, scope: !14850, inlinedAt: !15689)
!15694 = !DILocation(line: 253, column: 2, scope: !15691)
!15695 = !DILocation(line: 253, column: 2, scope: !15696)
!15696 = distinct !DILexicalBlock(scope: !15690, file: !12782, line: 253, column: 2)
!15697 = !DILocation(line: 254, column: 2, scope: !15698)
!15698 = distinct !DILexicalBlock(scope: !15699, file: !12782, line: 254, column: 2)
!15699 = distinct !DILexicalBlock(scope: !15686, file: !12782, line: 254, column: 2)
!15700 = !DILocation(line: 254, column: 2, scope: !15699)
!15701 = !DILocation(line: 254, column: 2, scope: !15702)
!15702 = distinct !DILexicalBlock(scope: !15698, file: !12782, line: 254, column: 2)
!15703 = !DILocation(line: 256, column: 2, scope: !15686)
!15704 = !DILocation(line: 258, column: 2, scope: !15705)
!15705 = distinct !DILexicalBlock(scope: !15686, file: !12782, line: 258, column: 2)
!15706 = !{i64 2155195180}
!15707 = !DILocation(line: 259, column: 1, scope: !15686)
!15708 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2543, file: !2543, line: 996, type: !3169, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15709)
!15709 = !{!15710, !15712}
!15710 = !DILocalVariable(name: "__i", scope: !15711, file: !2543, line: 998, type: !14183)
!15711 = distinct !DILexicalBlock(scope: !15708, file: !2543, line: 998, column: 2)
!15712 = !DILocalVariable(name: "__key", scope: !15711, file: !2543, line: 998, type: !14183)
!15713 = !DILocation(line: 0, scope: !15711)
!15714 = !DILocation(line: 0, scope: !14191, inlinedAt: !15715)
!15715 = distinct !DILocation(line: 998, column: 2, scope: !15711)
!15716 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !15717)
!15717 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !15715)
!15718 = !DILocation(line: 0, scope: !14200, inlinedAt: !15717)
!15719 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !15715)
!15720 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !15715)
!15721 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !15715)
!15722 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !15715)
!15723 = !DILocation(line: 999, column: 3, scope: !15724)
!15724 = distinct !DILexicalBlock(scope: !15725, file: !2543, line: 999, column: 3)
!15725 = distinct !DILexicalBlock(scope: !15726, file: !2543, line: 999, column: 3)
!15726 = distinct !DILexicalBlock(scope: !15727, file: !2543, line: 998, column: 26)
!15727 = distinct !DILexicalBlock(scope: !15711, file: !2543, line: 998, column: 2)
!15728 = !DILocation(line: 999, column: 3, scope: !15725)
!15729 = !DILocation(line: 999, column: 3, scope: !15730)
!15730 = distinct !DILexicalBlock(scope: !15724, file: !2543, line: 999, column: 3)
!15731 = !DILocation(line: 1031, column: 3, scope: !14846, inlinedAt: !15732)
!15732 = distinct !DILocation(line: 48, column: 10, scope: !14850, inlinedAt: !15733)
!15733 = distinct !DILocation(line: 1000, column: 3, scope: !15734)
!15734 = distinct !DILexicalBlock(scope: !15735, file: !2543, line: 1000, column: 3)
!15735 = distinct !DILexicalBlock(scope: !15726, file: !2543, line: 1000, column: 3)
!15736 = !DILocation(line: 0, scope: !14846, inlinedAt: !15732)
!15737 = !DILocation(line: 48, column: 9, scope: !14850, inlinedAt: !15733)
!15738 = !DILocation(line: 1000, column: 3, scope: !15735)
!15739 = !DILocation(line: 1000, column: 3, scope: !15740)
!15740 = distinct !DILexicalBlock(scope: !15734, file: !2543, line: 1000, column: 3)
!15741 = !DILocation(line: 1002, column: 5, scope: !15726)
!15742 = !DILocation(line: 1002, column: 20, scope: !15726)
!15743 = !DILocation(line: 1002, column: 3, scope: !15726)
!15744 = !DILocation(line: 1003, column: 3, scope: !15726)
!15745 = !DILocation(line: 0, scope: !14225, inlinedAt: !15746)
!15746 = distinct !DILocation(line: 998, column: 2, scope: !15727)
!15747 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !15746)
!15748 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !15746)
!15749 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !15746)
!15750 = !DILocation(line: 0, scope: !14239, inlinedAt: !15751)
!15751 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !15746)
!15752 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !15751)
!15753 = !DILocation(line: 1011, column: 2, scope: !15708)
!15754 = !DILocation(line: 1012, column: 1, scope: !15708)
!15755 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2543, file: !2543, line: 1014, type: !14516, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2100)
!15756 = !DILocation(line: 1028, column: 25, scope: !15755)
!15757 = !DILocation(line: 1028, column: 2, scope: !15755)
!15758 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2543, file: !2543, line: 1155, type: !14437, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15759)
!15759 = !{!15760, !15761, !15762, !15763, !15764}
!15760 = !DILocalVariable(name: "a", arg: 1, scope: !15758, file: !2543, line: 1155, type: !2457)
!15761 = !DILocalVariable(name: "b", arg: 2, scope: !15758, file: !2543, line: 1155, type: !2457)
!15762 = !DILocalVariable(name: "thread_a", scope: !15758, file: !2543, line: 1157, type: !2428)
!15763 = !DILocalVariable(name: "thread_b", scope: !15758, file: !2543, line: 1157, type: !2428)
!15764 = !DILocalVariable(name: "cmp", scope: !15758, file: !2543, line: 1158, type: !765)
!15765 = !DILocation(line: 0, scope: !15758)
!15766 = !DILocation(line: 1160, column: 13, scope: !15758)
!15767 = !DILocation(line: 1161, column: 13, scope: !15758)
!15768 = !DILocation(line: 1163, column: 8, scope: !15758)
!15769 = !DILocation(line: 1165, column: 10, scope: !15770)
!15770 = distinct !DILexicalBlock(scope: !15758, file: !2543, line: 1165, column: 6)
!15771 = !DILocation(line: 1165, column: 6, scope: !15758)
!15772 = !DILocation(line: 1167, column: 17, scope: !15773)
!15773 = distinct !DILexicalBlock(scope: !15770, file: !2543, line: 1167, column: 13)
!15774 = !DILocation(line: 1167, column: 13, scope: !15770)
!15775 = !DILocation(line: 1170, column: 25, scope: !15776)
!15776 = distinct !DILexicalBlock(scope: !15773, file: !2543, line: 1169, column: 9)
!15777 = !DILocation(line: 1170, column: 52, scope: !15776)
!15778 = !DILocation(line: 1170, column: 35, scope: !15776)
!15779 = !DILocation(line: 1170, column: 3, scope: !15776)
!15780 = !DILocation(line: 0, scope: !15770)
!15781 = !DILocation(line: 1173, column: 1, scope: !15758)
!15782 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2543, file: !2543, line: 1246, type: !15783, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15791)
!15783 = !DISubroutineType(types: !15784)
!15784 = !{!2428, !15785}
!15785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15786, size: 32)
!15786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !2107, line: 53, size: 2080, elements: !15787)
!15787 = !{!15788, !15790}
!15788 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15786, file: !2107, line: 54, baseType: !15789, size: 2048)
!15789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2464, size: 2048, elements: !227)
!15790 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15786, file: !2107, line: 55, baseType: !32, size: 32, offset: 2048)
!15791 = !{!15792, !15793, !15794, !15795}
!15792 = !DILocalVariable(name: "pq", arg: 1, scope: !15782, file: !2543, line: 1246, type: !15785)
!15793 = !DILocalVariable(name: "thread", scope: !15782, file: !2543, line: 1252, type: !2428)
!15794 = !DILocalVariable(name: "l", scope: !15782, file: !2543, line: 1253, type: !15084)
!15795 = !DILocalVariable(name: "n", scope: !15782, file: !2543, line: 1254, type: !15234)
!15796 = !DILocation(line: 0, scope: !15782)
!15797 = !DILocation(line: 1248, column: 11, scope: !15798)
!15798 = distinct !DILexicalBlock(scope: !15782, file: !2543, line: 1248, column: 6)
!15799 = !DILocation(line: 1248, column: 7, scope: !15798)
!15800 = !DILocation(line: 1248, column: 6, scope: !15782)
!15801 = !DILocation(line: 1253, column: 31, scope: !15782)
!15802 = !DILocation(line: 1253, column: 20, scope: !15782)
!15803 = !DILocation(line: 1254, column: 19, scope: !15782)
!15804 = !DILocation(line: 1260, column: 1, scope: !15782)
!15805 = distinct !DISubprogram(name: "z_unpend_all", scope: !2543, file: !2543, line: 1262, type: !15806, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15808)
!15806 = !DISubroutineType(types: !15807)
!15807 = !{!109, !2459}
!15808 = !{!15809, !15810, !15811}
!15809 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15805, file: !2543, line: 1262, type: !2459)
!15810 = !DILocalVariable(name: "need_sched", scope: !15805, file: !2543, line: 1264, type: !109)
!15811 = !DILocalVariable(name: "thread", scope: !15805, file: !2543, line: 1265, type: !2428)
!15812 = !DILocation(line: 0, scope: !15805)
!15813 = !DILocation(line: 1267, column: 19, scope: !15805)
!15814 = !DILocation(line: 1267, column: 41, scope: !15805)
!15815 = !DILocation(line: 1267, column: 2, scope: !15805)
!15816 = !DILocation(line: 1268, column: 3, scope: !15817)
!15817 = distinct !DILexicalBlock(scope: !15805, file: !2543, line: 1267, column: 50)
!15818 = !DILocation(line: 1269, column: 3, scope: !15817)
!15819 = distinct !{!15819, !15815, !15820}
!15820 = !DILocation(line: 1271, column: 2, scope: !15805)
!15821 = !DILocation(line: 1273, column: 2, scope: !15805)
!15822 = distinct !DISubprogram(name: "z_waitq_head", scope: !13386, file: !13386, line: 52, type: !15476, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15823)
!15823 = !{!15824}
!15824 = !DILocalVariable(name: "w", arg: 1, scope: !15822, file: !13386, line: 52, type: !2459)
!15825 = !DILocation(line: 0, scope: !15822)
!15826 = !DILocation(line: 54, column: 52, scope: !15822)
!15827 = !DILocation(line: 54, column: 28, scope: !15822)
!15828 = !DILocation(line: 54, column: 9, scope: !15822)
!15829 = !DILocation(line: 54, column: 2, scope: !15822)
!15830 = distinct !DISubprogram(name: "init_ready_q", scope: !2543, file: !2543, line: 1276, type: !15831, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15838)
!15831 = !DISubroutineType(types: !15832)
!15832 = !{null, !15833}
!15833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15834, size: 32)
!15834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !123, line: 83, size: 160, elements: !15835)
!15835 = !{!15836, !15837}
!15836 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15834, file: !123, line: 86, baseType: !2428, size: 32)
!15837 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15834, file: !123, line: 92, baseType: !14428, size: 128, offset: 32)
!15838 = !{!15839}
!15839 = !DILocalVariable(name: "rq", arg: 1, scope: !15830, file: !2543, line: 1276, type: !15833)
!15840 = !DILocation(line: 0, scope: !15830)
!15841 = !DILocation(line: 1279, column: 13, scope: !15830)
!15842 = !DILocation(line: 1291, column: 1, scope: !15830)
!15843 = distinct !DISubprogram(name: "z_sched_init", scope: !2543, file: !2543, line: 1293, type: !3169, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2100)
!15844 = !DILocation(line: 1302, column: 2, scope: !15843)
!15845 = !DILocation(line: 1306, column: 2, scope: !15843)
!15846 = !DILocation(line: 1309, column: 1, scope: !15843)
!15847 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2543, file: !2543, line: 1311, type: !15848, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15851)
!15848 = !DISubroutineType(types: !15849)
!15849 = !{!109, !15850}
!15850 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !145, line: 347, baseType: !2428)
!15851 = !{!15852}
!15852 = !DILocalVariable(name: "thread", arg: 1, scope: !15847, file: !2543, line: 1311, type: !15850)
!15853 = !DILocation(line: 0, scope: !15847)
!15854 = !DILocation(line: 1313, column: 22, scope: !15847)
!15855 = !DILocation(line: 1313, column: 9, scope: !15847)
!15856 = !DILocation(line: 1313, column: 2, scope: !15847)
!15857 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2543, file: !2543, line: 1325, type: !15858, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15860)
!15858 = !DISubroutineType(types: !15859)
!15859 = !{null, !15850, !109}
!15860 = !{!15861, !15862, !15863}
!15861 = !DILocalVariable(name: "thread", arg: 1, scope: !15857, file: !2543, line: 1325, type: !15850)
!15862 = !DILocalVariable(name: "prio", arg: 2, scope: !15857, file: !2543, line: 1325, type: !109)
!15863 = !DILocalVariable(name: "th", scope: !15857, file: !2543, line: 1334, type: !2428)
!15864 = !DILocation(line: 0, scope: !15857)
!15865 = !DILocation(line: 1331, column: 2, scope: !15866)
!15866 = distinct !DILexicalBlock(scope: !15867, file: !2543, line: 1331, column: 2)
!15867 = distinct !DILexicalBlock(scope: !15868, file: !2543, line: 1331, column: 2)
!15868 = distinct !DILexicalBlock(scope: !15857, file: !2543, line: 1331, column: 2)
!15869 = !DILocation(line: 1331, column: 2, scope: !15870)
!15870 = distinct !DILexicalBlock(scope: !15866, file: !2543, line: 1331, column: 2)
!15871 = !DILocation(line: 1031, column: 3, scope: !14846, inlinedAt: !15872)
!15872 = distinct !DILocation(line: 48, column: 10, scope: !14850, inlinedAt: !15873)
!15873 = distinct !DILocation(line: 1332, column: 2, scope: !15874)
!15874 = distinct !DILexicalBlock(scope: !15875, file: !2543, line: 1332, column: 2)
!15875 = distinct !DILexicalBlock(scope: !15857, file: !2543, line: 1332, column: 2)
!15876 = !DILocation(line: 0, scope: !14846, inlinedAt: !15872)
!15877 = !DILocation(line: 48, column: 9, scope: !14850, inlinedAt: !15873)
!15878 = !DILocation(line: 1332, column: 2, scope: !15875)
!15879 = !DILocation(line: 1332, column: 2, scope: !15880)
!15880 = distinct !DILexicalBlock(scope: !15874, file: !2543, line: 1332, column: 2)
!15881 = !DILocation(line: 1336, column: 2, scope: !15857)
!15882 = !DILocation(line: 1337, column: 1, scope: !15857)
!15883 = distinct !DISubprogram(name: "k_can_yield", scope: !2543, file: !2543, line: 1384, type: !7085, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2100)
!15884 = !DILocation(line: 1386, column: 11, scope: !15883)
!15885 = !DILocation(line: 1386, column: 29, scope: !15883)
!15886 = !DILocation(line: 1386, column: 32, scope: !15883)
!15887 = !DILocation(line: 1386, column: 46, scope: !15883)
!15888 = !DILocation(line: 1387, column: 28, scope: !15883)
!15889 = !DILocation(line: 1387, column: 4, scope: !15883)
!15890 = !DILocation(line: 1386, column: 2, scope: !15883)
!15891 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !119, file: !119, line: 989, type: !7085, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2100)
!15892 = !DILocation(line: 993, column: 10, scope: !15891)
!15893 = !DILocation(line: 993, column: 2, scope: !15891)
!15894 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2543, file: !2543, line: 1390, type: !3169, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15895)
!15895 = !{!15896}
!15896 = !DILocalVariable(name: "key", scope: !15894, file: !2543, line: 1396, type: !14183)
!15897 = !DILocation(line: 1031, column: 3, scope: !14846, inlinedAt: !15898)
!15898 = distinct !DILocation(line: 48, column: 10, scope: !14850, inlinedAt: !15899)
!15899 = distinct !DILocation(line: 1392, column: 2, scope: !15900)
!15900 = distinct !DILexicalBlock(scope: !15901, file: !2543, line: 1392, column: 2)
!15901 = distinct !DILexicalBlock(scope: !15894, file: !2543, line: 1392, column: 2)
!15902 = !DILocation(line: 0, scope: !14846, inlinedAt: !15898)
!15903 = !DILocation(line: 48, column: 9, scope: !14850, inlinedAt: !15899)
!15904 = !DILocation(line: 1392, column: 2, scope: !15901)
!15905 = !DILocation(line: 1392, column: 2, scope: !15906)
!15906 = distinct !DILexicalBlock(scope: !15900, file: !2543, line: 1392, column: 2)
!15907 = !DILocation(line: 0, scope: !14191, inlinedAt: !15908)
!15908 = distinct !DILocation(line: 1396, column: 25, scope: !15894)
!15909 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !15910)
!15910 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !15908)
!15911 = !DILocation(line: 0, scope: !14200, inlinedAt: !15910)
!15912 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !15908)
!15913 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !15908)
!15914 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !15908)
!15915 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !15908)
!15916 = !DILocation(line: 0, scope: !15894)
!15917 = !DILocation(line: 1400, column: 18, scope: !15918)
!15918 = distinct !DILexicalBlock(scope: !15919, file: !2543, line: 1399, column: 36)
!15919 = distinct !DILexicalBlock(scope: !15894, file: !2543, line: 1398, column: 6)
!15920 = !DILocation(line: 0, scope: !14383, inlinedAt: !15921)
!15921 = distinct !DILocation(line: 1400, column: 3, scope: !15918)
!15922 = !DILocation(line: 266, column: 15, scope: !14383, inlinedAt: !15921)
!15923 = !DILocation(line: 266, column: 28, scope: !14383, inlinedAt: !15921)
!15924 = !DILocation(line: 0, scope: !14391, inlinedAt: !15925)
!15925 = distinct !DILocation(line: 268, column: 3, scope: !14395, inlinedAt: !15921)
!15926 = !DILocation(line: 234, column: 2, scope: !14391, inlinedAt: !15925)
!15927 = !DILocation(line: 1402, column: 15, scope: !15894)
!15928 = !DILocation(line: 0, scope: !14400, inlinedAt: !15929)
!15929 = distinct !DILocation(line: 1402, column: 2, scope: !15894)
!15930 = !DILocation(line: 252, column: 15, scope: !14400, inlinedAt: !15929)
!15931 = !DILocation(line: 252, column: 28, scope: !14400, inlinedAt: !15929)
!15932 = !DILocation(line: 0, scope: !14407, inlinedAt: !15933)
!15933 = distinct !DILocation(line: 254, column: 3, scope: !14411, inlinedAt: !15929)
!15934 = !DILocation(line: 229, column: 2, scope: !14407, inlinedAt: !15933)
!15935 = !DILocation(line: 1403, column: 2, scope: !15894)
!15936 = !DILocation(line: 0, scope: !14797, inlinedAt: !15937)
!15937 = distinct !DILocation(line: 1404, column: 2, scope: !15894)
!15938 = !DILocation(line: 0, scope: !14806, inlinedAt: !15939)
!15939 = distinct !DILocation(line: 195, column: 2, scope: !14797, inlinedAt: !15937)
!15940 = !DILocation(line: 225, column: 2, scope: !14813, inlinedAt: !15939)
!15941 = !DILocation(line: 225, column: 2, scope: !14814, inlinedAt: !15939)
!15942 = !DILocation(line: 225, column: 2, scope: !14817, inlinedAt: !15939)
!15943 = !DILocation(line: 196, column: 9, scope: !14797, inlinedAt: !15937)
!15944 = !DILocation(line: 1405, column: 1, scope: !15894)
!15945 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2543, file: !2543, line: 1459, type: !15946, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15948)
!15946 = !DISubroutineType(types: !15947)
!15947 = !{!765, !15007}
!15948 = !{!15949, !15950, !15951}
!15949 = !DILocalVariable(name: "timeout", arg: 1, scope: !15945, file: !2543, line: 1459, type: !15007)
!15950 = !DILocalVariable(name: "ticks", scope: !15945, file: !2543, line: 1461, type: !104)
!15951 = !DILocalVariable(name: "ret", scope: !15945, file: !2543, line: 1480, type: !765)
!15952 = !DILocation(line: 0, scope: !15945)
!15953 = !DILocation(line: 1031, column: 3, scope: !14846, inlinedAt: !15954)
!15954 = distinct !DILocation(line: 48, column: 10, scope: !14850, inlinedAt: !15955)
!15955 = distinct !DILocation(line: 1463, column: 2, scope: !15956)
!15956 = distinct !DILexicalBlock(scope: !15957, file: !2543, line: 1463, column: 2)
!15957 = distinct !DILexicalBlock(scope: !15945, file: !2543, line: 1463, column: 2)
!15958 = !DILocation(line: 0, scope: !14846, inlinedAt: !15954)
!15959 = !DILocation(line: 48, column: 9, scope: !14850, inlinedAt: !15955)
!15960 = !DILocation(line: 1463, column: 2, scope: !15957)
!15961 = !DILocation(line: 1463, column: 2, scope: !15962)
!15962 = distinct !DILexicalBlock(scope: !15956, file: !2543, line: 1463, column: 2)
!15963 = !DILocation(line: 1468, column: 6, scope: !15964)
!15964 = distinct !DILexicalBlock(scope: !15945, file: !2543, line: 1468, column: 6)
!15965 = !DILocation(line: 1468, column: 6, scope: !15945)
!15966 = !DILocation(line: 1469, column: 20, scope: !15967)
!15967 = distinct !DILexicalBlock(scope: !15964, file: !2543, line: 1468, column: 40)
!15968 = !DILocation(line: 1469, column: 3, scope: !15967)
!15969 = !DILocation(line: 1473, column: 3, scope: !15967)
!15970 = !DILocation(line: 1478, column: 10, scope: !15945)
!15971 = !DILocation(line: 1480, column: 16, scope: !15945)
!15972 = !DILocation(line: 1485, column: 1, scope: !15945)
!15973 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3354, file: !3354, line: 310, type: !15974, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15976)
!15974 = !DISubroutineType(types: !15975)
!15975 = !{null, !15850}
!15976 = !{!15977}
!15977 = !DILocalVariable(name: "thread", arg: 1, scope: !15973, file: !3354, line: 310, type: !15850)
!15978 = !DILocation(line: 0, scope: !15973)
!15979 = !DILocation(line: 319, column: 2, scope: !15980)
!15980 = distinct !DILexicalBlock(scope: !15973, file: !3354, line: 319, column: 2)
!15981 = !{i64 2155111338}
!15982 = !DILocation(line: 320, column: 2, scope: !15973)
!15983 = !DILocation(line: 321, column: 1, scope: !15973)
!15984 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2543, file: !2543, line: 1415, type: !15985, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !15987)
!15985 = !DISubroutineType(types: !15986)
!15986 = !{!765, !104}
!15987 = !{!15988, !15989, !15990, !15991}
!15988 = !DILocalVariable(name: "ticks", arg: 1, scope: !15984, file: !2543, line: 1415, type: !104)
!15989 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15984, file: !2543, line: 1418, type: !110)
!15990 = !DILocalVariable(name: "timeout", scope: !15984, file: !2543, line: 1430, type: !15007)
!15991 = !DILocalVariable(name: "key", scope: !15984, file: !2543, line: 1437, type: !14183)
!15992 = !DILocation(line: 0, scope: !15984)
!15993 = !DILocation(line: 1031, column: 3, scope: !14846, inlinedAt: !15994)
!15994 = distinct !DILocation(line: 48, column: 10, scope: !14850, inlinedAt: !15995)
!15995 = distinct !DILocation(line: 1420, column: 2, scope: !15996)
!15996 = distinct !DILexicalBlock(scope: !15997, file: !2543, line: 1420, column: 2)
!15997 = distinct !DILexicalBlock(scope: !15984, file: !2543, line: 1420, column: 2)
!15998 = !DILocation(line: 0, scope: !14846, inlinedAt: !15994)
!15999 = !DILocation(line: 48, column: 9, scope: !14850, inlinedAt: !15995)
!16000 = !DILocation(line: 1420, column: 2, scope: !15997)
!16001 = !DILocation(line: 1420, column: 2, scope: !16002)
!16002 = distinct !DILexicalBlock(scope: !15996, file: !2543, line: 1420, column: 2)
!16003 = !DILocation(line: 1425, column: 12, scope: !16004)
!16004 = distinct !DILexicalBlock(scope: !15984, file: !2543, line: 1425, column: 6)
!16005 = !DILocation(line: 1425, column: 6, scope: !15984)
!16006 = !DILocation(line: 1426, column: 3, scope: !16007)
!16007 = distinct !DILexicalBlock(scope: !16004, file: !2543, line: 1425, column: 18)
!16008 = !DILocation(line: 1427, column: 3, scope: !16007)
!16009 = !DILocation(line: 1431, column: 24, scope: !16010)
!16010 = distinct !DILexicalBlock(scope: !15984, file: !2543, line: 1431, column: 6)
!16011 = !DILocation(line: 1431, column: 6, scope: !15984)
!16012 = !DILocation(line: 1432, column: 35, scope: !16013)
!16013 = distinct !DILexicalBlock(scope: !16010, file: !2543, line: 1431, column: 30)
!16014 = !DILocation(line: 1432, column: 27, scope: !16013)
!16015 = !DILocation(line: 1433, column: 2, scope: !16013)
!16016 = !DILocation(line: 1434, column: 27, scope: !16017)
!16017 = distinct !DILexicalBlock(scope: !16010, file: !2543, line: 1433, column: 9)
!16018 = !DILocation(line: 0, scope: !16010)
!16019 = !DILocation(line: 0, scope: !14191, inlinedAt: !16020)
!16020 = distinct !DILocation(line: 1437, column: 25, scope: !15984)
!16021 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !16022)
!16022 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !16020)
!16023 = !DILocation(line: 0, scope: !14200, inlinedAt: !16022)
!16024 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !16020)
!16025 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !16020)
!16026 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !16020)
!16027 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !16020)
!16028 = !DILocation(line: 1440, column: 20, scope: !15984)
!16029 = !DILocation(line: 1440, column: 18, scope: !15984)
!16030 = !DILocation(line: 1442, column: 2, scope: !15984)
!16031 = !DILocation(line: 1443, column: 23, scope: !15984)
!16032 = !DILocation(line: 1443, column: 2, scope: !15984)
!16033 = !DILocation(line: 1444, column: 29, scope: !15984)
!16034 = !DILocation(line: 1444, column: 2, scope: !15984)
!16035 = !DILocation(line: 0, scope: !14797, inlinedAt: !16036)
!16036 = distinct !DILocation(line: 1446, column: 8, scope: !15984)
!16037 = !DILocation(line: 0, scope: !14806, inlinedAt: !16038)
!16038 = distinct !DILocation(line: 195, column: 2, scope: !14797, inlinedAt: !16036)
!16039 = !DILocation(line: 225, column: 2, scope: !14813, inlinedAt: !16038)
!16040 = !DILocation(line: 225, column: 2, scope: !14814, inlinedAt: !16038)
!16041 = !DILocation(line: 225, column: 2, scope: !14817, inlinedAt: !16038)
!16042 = !DILocation(line: 196, column: 9, scope: !14797, inlinedAt: !16036)
!16043 = !DILocation(line: 1448, column: 2, scope: !16044)
!16044 = distinct !DILexicalBlock(scope: !16045, file: !2543, line: 1448, column: 2)
!16045 = distinct !DILexicalBlock(scope: !15984, file: !2543, line: 1448, column: 2)
!16046 = !DILocation(line: 1448, column: 2, scope: !16045)
!16047 = !DILocation(line: 1448, column: 2, scope: !16048)
!16048 = distinct !DILexicalBlock(scope: !16044, file: !2543, line: 1448, column: 2)
!16049 = !DILocation(line: 1450, column: 10, scope: !15984)
!16050 = !DILocation(line: 1450, column: 45, scope: !15984)
!16051 = !DILocation(line: 1450, column: 43, scope: !15984)
!16052 = !DILocation(line: 1451, column: 6, scope: !15984)
!16053 = !DILocation(line: 1457, column: 1, scope: !15984)
!16054 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3407, file: !3407, line: 1103, type: !3408, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16055)
!16055 = !{!16056}
!16056 = !DILocalVariable(name: "t", arg: 1, scope: !16054, file: !3407, line: 1103, type: !111)
!16057 = !DILocation(line: 0, scope: !16054)
!16058 = !DILocation(line: 0, scope: !14251, inlinedAt: !16059)
!16059 = distinct !DILocation(line: 1106, column: 9, scope: !16054)
!16060 = !DILocation(line: 139, column: 13, scope: !16061, inlinedAt: !16059)
!16061 = distinct !DILexicalBlock(scope: !16062, file: !3407, line: 138, column: 10)
!16062 = distinct !DILexicalBlock(scope: !16063, file: !3407, line: 136, column: 7)
!16063 = distinct !DILexicalBlock(scope: !14272, file: !3407, line: 134, column: 17)
!16064 = !DILocation(line: 1106, column: 2, scope: !16054)
!16065 = distinct !DISubprogram(name: "k_yield", scope: !3354, file: !3354, line: 140, type: !3169, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2100)
!16066 = !DILocation(line: 148, column: 2, scope: !16067)
!16067 = distinct !DILexicalBlock(scope: !16065, file: !3354, line: 148, column: 2)
!16068 = !{i64 2155110658}
!16069 = !DILocation(line: 149, column: 2, scope: !16065)
!16070 = !DILocation(line: 150, column: 1, scope: !16065)
!16071 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2543, file: !2543, line: 1495, type: !16072, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16074)
!16072 = !DISubroutineType(types: !16073)
!16073 = !{!765, !109}
!16074 = !{!16075, !16076}
!16075 = !DILocalVariable(name: "us", arg: 1, scope: !16071, file: !2543, line: 1495, type: !109)
!16076 = !DILocalVariable(name: "ticks", scope: !16071, file: !2543, line: 1497, type: !765)
!16077 = !DILocation(line: 0, scope: !16071)
!16078 = !DILocation(line: 1501, column: 31, scope: !16071)
!16079 = !DILocation(line: 1501, column: 10, scope: !16071)
!16080 = !DILocation(line: 1502, column: 23, scope: !16071)
!16081 = !DILocation(line: 1502, column: 10, scope: !16071)
!16082 = !DILocation(line: 1506, column: 31, scope: !16071)
!16083 = !DILocation(line: 1506, column: 9, scope: !16071)
!16084 = !DILocation(line: 1506, column: 2, scope: !16071)
!16085 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3407, file: !3407, line: 571, type: !3408, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16086)
!16086 = !{!16087}
!16087 = !DILocalVariable(name: "t", arg: 1, scope: !16085, file: !3407, line: 571, type: !111)
!16088 = !DILocation(line: 0, scope: !16085)
!16089 = !DILocation(line: 0, scope: !14251, inlinedAt: !16090)
!16090 = distinct !DILocation(line: 574, column: 9, scope: !16085)
!16091 = !DILocation(line: 135, column: 5, scope: !16063, inlinedAt: !16090)
!16092 = !DILocation(line: 139, column: 13, scope: !16061, inlinedAt: !16090)
!16093 = !DILocation(line: 574, column: 2, scope: !16085)
!16094 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3407, file: !3407, line: 1187, type: !3408, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16095)
!16095 = !{!16096}
!16096 = !DILocalVariable(name: "t", arg: 1, scope: !16094, file: !3407, line: 1187, type: !111)
!16097 = !DILocation(line: 0, scope: !16094)
!16098 = !DILocation(line: 0, scope: !14251, inlinedAt: !16099)
!16099 = distinct !DILocation(line: 1190, column: 9, scope: !16094)
!16100 = !DILocation(line: 145, column: 13, scope: !16101, inlinedAt: !16099)
!16101 = distinct !DILexicalBlock(scope: !14269, file: !3407, line: 144, column: 10)
!16102 = !DILocation(line: 1190, column: 2, scope: !16094)
!16103 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2543, file: !2543, line: 1517, type: !15974, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16104)
!16104 = !{!16105}
!16105 = !DILocalVariable(name: "thread", arg: 1, scope: !16103, file: !2543, line: 1517, type: !15850)
!16106 = !DILocation(line: 0, scope: !16103)
!16107 = !DILocation(line: 1521, column: 6, scope: !16108)
!16108 = distinct !DILexicalBlock(scope: !16103, file: !2543, line: 1521, column: 6)
!16109 = !DILocation(line: 1521, column: 6, scope: !16103)
!16110 = !DILocation(line: 1525, column: 6, scope: !16111)
!16111 = distinct !DILexicalBlock(scope: !16103, file: !2543, line: 1525, column: 6)
!16112 = !DILocation(line: 1525, column: 37, scope: !16111)
!16113 = !DILocation(line: 1525, column: 6, scope: !16103)
!16114 = !DILocation(line: 1527, column: 20, scope: !16115)
!16115 = distinct !DILexicalBlock(scope: !16116, file: !2543, line: 1527, column: 7)
!16116 = distinct !DILexicalBlock(scope: !16111, file: !2543, line: 1525, column: 42)
!16117 = !DILocation(line: 1527, column: 33, scope: !16115)
!16118 = !DILocation(line: 1527, column: 7, scope: !16116)
!16119 = !DILocation(line: 1532, column: 2, scope: !16103)
!16120 = !DILocation(line: 1533, column: 2, scope: !16103)
!16121 = !DILocation(line: 1031, column: 3, scope: !14846, inlinedAt: !16122)
!16122 = distinct !DILocation(line: 48, column: 10, scope: !14850, inlinedAt: !16123)
!16123 = distinct !DILocation(line: 1537, column: 7, scope: !16124)
!16124 = distinct !DILexicalBlock(scope: !16103, file: !2543, line: 1537, column: 6)
!16125 = !DILocation(line: 0, scope: !14846, inlinedAt: !16122)
!16126 = !DILocation(line: 48, column: 9, scope: !14850, inlinedAt: !16123)
!16127 = !DILocation(line: 1537, column: 6, scope: !16103)
!16128 = !DILocation(line: 1538, column: 3, scope: !16129)
!16129 = distinct !DILexicalBlock(scope: !16124, file: !2543, line: 1537, column: 25)
!16130 = !DILocation(line: 1539, column: 2, scope: !16129)
!16131 = !DILocation(line: 1540, column: 1, scope: !16103)
!16132 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12782, file: !12782, line: 101, type: !14332, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16133)
!16133 = !{!16134}
!16134 = !DILocalVariable(name: "thread", arg: 1, scope: !16132, file: !12782, line: 101, type: !2428)
!16135 = !DILocation(line: 0, scope: !16132)
!16136 = !DILocation(line: 103, column: 23, scope: !16132)
!16137 = !DILocation(line: 103, column: 36, scope: !16132)
!16138 = !DILocation(line: 103, column: 55, scope: !16132)
!16139 = !DILocation(line: 103, column: 2, scope: !16132)
!16140 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2543, file: !2543, line: 1567, type: !16141, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16143)
!16141 = !DISubroutineType(types: !16142)
!16142 = !{!15850}
!16143 = !{!16144}
!16144 = !DILocalVariable(name: "ret", scope: !16140, file: !2543, line: 1577, type: !15850)
!16145 = !DILocation(line: 1577, column: 30, scope: !16140)
!16146 = !DILocation(line: 0, scope: !16140)
!16147 = !DILocation(line: 1582, column: 2, scope: !16140)
!16148 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2543, file: !2543, line: 1593, type: !7374, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !2100)
!16149 = !DILocation(line: 1031, column: 3, scope: !14846, inlinedAt: !16150)
!16150 = distinct !DILocation(line: 48, column: 10, scope: !14850, inlinedAt: !16151)
!16151 = distinct !DILocation(line: 1595, column: 10, scope: !16148)
!16152 = !DILocation(line: 0, scope: !14846, inlinedAt: !16150)
!16153 = !DILocation(line: 48, column: 9, scope: !14850, inlinedAt: !16151)
!16154 = !DILocation(line: 1595, column: 27, scope: !16148)
!16155 = !DILocation(line: 1595, column: 41, scope: !16148)
!16156 = !DILocation(line: 1595, column: 30, scope: !16148)
!16157 = !DILocation(line: 1595, column: 2, scope: !16148)
!16158 = distinct !DISubprogram(name: "z_thread_abort", scope: !2543, file: !2543, line: 1725, type: !14149, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16159)
!16159 = !{!16160, !16161}
!16160 = !DILocalVariable(name: "thread", arg: 1, scope: !16158, file: !2543, line: 1725, type: !2428)
!16161 = !DILocalVariable(name: "key", scope: !16158, file: !2543, line: 1727, type: !14183)
!16162 = !DILocation(line: 0, scope: !16158)
!16163 = !DILocation(line: 0, scope: !14191, inlinedAt: !16164)
!16164 = distinct !DILocation(line: 1727, column: 25, scope: !16158)
!16165 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !16166)
!16166 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !16164)
!16167 = !DILocation(line: 0, scope: !14200, inlinedAt: !16166)
!16168 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !16164)
!16169 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !16164)
!16170 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !16164)
!16171 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !16164)
!16172 = !DILocation(line: 1729, column: 20, scope: !16173)
!16173 = distinct !DILexicalBlock(scope: !16158, file: !2543, line: 1729, column: 6)
!16174 = !DILocation(line: 1729, column: 33, scope: !16173)
!16175 = !DILocation(line: 1729, column: 48, scope: !16173)
!16176 = !DILocation(line: 1729, column: 6, scope: !16158)
!16177 = !DILocation(line: 0, scope: !14225, inlinedAt: !16178)
!16178 = distinct !DILocation(line: 1730, column: 3, scope: !16179)
!16179 = distinct !DILexicalBlock(scope: !16173, file: !2543, line: 1729, column: 54)
!16180 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !16178)
!16181 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !16178)
!16182 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !16178)
!16183 = !DILocation(line: 0, scope: !14239, inlinedAt: !16184)
!16184 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !16178)
!16185 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !16184)
!16186 = !DILocation(line: 1731, column: 3, scope: !16187)
!16187 = distinct !DILexicalBlock(scope: !16188, file: !2543, line: 1731, column: 3)
!16188 = distinct !DILexicalBlock(scope: !16189, file: !2543, line: 1731, column: 3)
!16189 = distinct !DILexicalBlock(scope: !16179, file: !2543, line: 1731, column: 3)
!16190 = !DILocation(line: 1736, column: 20, scope: !16191)
!16191 = distinct !DILexicalBlock(scope: !16158, file: !2543, line: 1736, column: 6)
!16192 = !DILocation(line: 1736, column: 33, scope: !16191)
!16193 = !DILocation(line: 1736, column: 49, scope: !16191)
!16194 = !DILocation(line: 1736, column: 6, scope: !16158)
!16195 = !DILocation(line: 0, scope: !14225, inlinedAt: !16196)
!16196 = distinct !DILocation(line: 1737, column: 3, scope: !16197)
!16197 = distinct !DILexicalBlock(scope: !16191, file: !2543, line: 1736, column: 56)
!16198 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !16196)
!16199 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !16196)
!16200 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !16196)
!16201 = !DILocation(line: 0, scope: !14239, inlinedAt: !16202)
!16202 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !16196)
!16203 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !16202)
!16204 = !DILocation(line: 1738, column: 3, scope: !16197)
!16205 = !DILocation(line: 1775, column: 2, scope: !16158)
!16206 = !DILocation(line: 1776, column: 16, scope: !16207)
!16207 = distinct !DILexicalBlock(scope: !16158, file: !2543, line: 1776, column: 6)
!16208 = !DILocation(line: 1776, column: 13, scope: !16207)
!16209 = !DILocation(line: 1776, column: 25, scope: !16207)
!16210 = !DILocation(line: 1031, column: 3, scope: !14846, inlinedAt: !16211)
!16211 = distinct !DILocation(line: 48, column: 10, scope: !14850, inlinedAt: !16212)
!16212 = distinct !DILocation(line: 1776, column: 29, scope: !16207)
!16213 = !DILocation(line: 0, scope: !14846, inlinedAt: !16211)
!16214 = !DILocation(line: 48, column: 9, scope: !14850, inlinedAt: !16212)
!16215 = !DILocation(line: 1776, column: 6, scope: !16158)
!16216 = !DILocation(line: 0, scope: !14797, inlinedAt: !16217)
!16217 = distinct !DILocation(line: 1777, column: 3, scope: !16218)
!16218 = distinct !DILexicalBlock(scope: !16207, file: !2543, line: 1776, column: 47)
!16219 = !DILocation(line: 0, scope: !14806, inlinedAt: !16220)
!16220 = distinct !DILocation(line: 195, column: 2, scope: !14797, inlinedAt: !16217)
!16221 = !DILocation(line: 225, column: 2, scope: !14813, inlinedAt: !16220)
!16222 = !DILocation(line: 225, column: 2, scope: !14814, inlinedAt: !16220)
!16223 = !DILocation(line: 225, column: 2, scope: !14817, inlinedAt: !16220)
!16224 = !DILocation(line: 196, column: 9, scope: !14797, inlinedAt: !16217)
!16225 = !DILocation(line: 1778, column: 3, scope: !16226)
!16226 = distinct !DILexicalBlock(scope: !16227, file: !2543, line: 1778, column: 3)
!16227 = distinct !DILexicalBlock(scope: !16228, file: !2543, line: 1778, column: 3)
!16228 = distinct !DILexicalBlock(scope: !16218, file: !2543, line: 1778, column: 3)
!16229 = !DILocation(line: 0, scope: !14225, inlinedAt: !16230)
!16230 = distinct !DILocation(line: 1780, column: 2, scope: !16158)
!16231 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !16230)
!16232 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !16230)
!16233 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !16230)
!16234 = !DILocation(line: 0, scope: !14239, inlinedAt: !16235)
!16235 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !16230)
!16236 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !16235)
!16237 = !DILocation(line: 1781, column: 1, scope: !16158)
!16238 = distinct !DISubprogram(name: "end_thread", scope: !2543, file: !2543, line: 1690, type: !14149, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16239)
!16239 = !{!16240}
!16240 = !DILocalVariable(name: "thread", arg: 1, scope: !16238, file: !2543, line: 1690, type: !2428)
!16241 = !DILocation(line: 0, scope: !16238)
!16242 = !DILocation(line: 1695, column: 20, scope: !16243)
!16243 = distinct !DILexicalBlock(scope: !16238, file: !2543, line: 1695, column: 6)
!16244 = !DILocation(line: 1695, column: 33, scope: !16243)
!16245 = !DILocation(line: 1695, column: 49, scope: !16243)
!16246 = !DILocation(line: 1695, column: 6, scope: !16238)
!16247 = !DILocation(line: 1697, column: 29, scope: !16248)
!16248 = distinct !DILexicalBlock(scope: !16243, file: !2543, line: 1695, column: 56)
!16249 = !DILocation(line: 1698, column: 7, scope: !16250)
!16250 = distinct !DILexicalBlock(scope: !16248, file: !2543, line: 1698, column: 7)
!16251 = !DILocation(line: 1698, column: 7, scope: !16248)
!16252 = !DILocation(line: 0, scope: !14383, inlinedAt: !16253)
!16253 = distinct !DILocation(line: 1699, column: 4, scope: !16254)
!16254 = distinct !DILexicalBlock(scope: !16250, file: !2543, line: 1698, column: 35)
!16255 = !DILocation(line: 266, column: 28, scope: !14383, inlinedAt: !16253)
!16256 = !DILocation(line: 0, scope: !14391, inlinedAt: !16257)
!16257 = distinct !DILocation(line: 268, column: 3, scope: !14395, inlinedAt: !16253)
!16258 = !DILocation(line: 234, column: 2, scope: !14391, inlinedAt: !16257)
!16259 = !DILocation(line: 1700, column: 3, scope: !16254)
!16260 = !DILocation(line: 1701, column: 20, scope: !16261)
!16261 = distinct !DILexicalBlock(scope: !16248, file: !2543, line: 1701, column: 7)
!16262 = !DILocation(line: 1701, column: 30, scope: !16261)
!16263 = !DILocation(line: 1701, column: 7, scope: !16248)
!16264 = !DILocation(line: 1702, column: 4, scope: !16265)
!16265 = distinct !DILexicalBlock(scope: !16261, file: !2543, line: 1701, column: 39)
!16266 = !DILocation(line: 1703, column: 3, scope: !16265)
!16267 = !DILocation(line: 1704, column: 9, scope: !16248)
!16268 = !DILocation(line: 1705, column: 23, scope: !16248)
!16269 = !DILocation(line: 1705, column: 3, scope: !16248)
!16270 = !DILocation(line: 1706, column: 3, scope: !16248)
!16271 = !DILocation(line: 1710, column: 3, scope: !16248)
!16272 = !DILocation(line: 1722, column: 2, scope: !16248)
!16273 = !DILocation(line: 1723, column: 1, scope: !16238)
!16274 = distinct !DISubprogram(name: "unpend_all", scope: !2543, file: !2543, line: 1674, type: !16275, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16277)
!16275 = !DISubroutineType(types: !16276)
!16276 = !{null, !2459}
!16277 = !{!16278, !16279}
!16278 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16274, file: !2543, line: 1674, type: !2459)
!16279 = !DILocalVariable(name: "thread", scope: !16274, file: !2543, line: 1676, type: !2428)
!16280 = !DILocation(line: 0, scope: !16274)
!16281 = !DILocation(line: 1678, column: 19, scope: !16274)
!16282 = !DILocation(line: 1678, column: 41, scope: !16274)
!16283 = !DILocation(line: 1678, column: 2, scope: !16274)
!16284 = !DILocation(line: 1679, column: 3, scope: !16285)
!16285 = distinct !DILexicalBlock(scope: !16274, file: !2543, line: 1678, column: 50)
!16286 = !DILocation(line: 1680, column: 9, scope: !16285)
!16287 = !DILocalVariable(name: "thread", arg: 1, scope: !16288, file: !12802, line: 65, type: !2428)
!16288 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12802, file: !12802, line: 65, type: !16289, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16291)
!16289 = !DISubroutineType(types: !16290)
!16290 = !{null, !2428, !32}
!16291 = !{!16287, !16292}
!16292 = !DILocalVariable(name: "value", arg: 2, scope: !16288, file: !12802, line: 65, type: !32)
!16293 = !DILocation(line: 0, scope: !16288, inlinedAt: !16294)
!16294 = distinct !DILocation(line: 1681, column: 3, scope: !16285)
!16295 = !DILocation(line: 67, column: 15, scope: !16288, inlinedAt: !16294)
!16296 = !DILocation(line: 67, column: 33, scope: !16288, inlinedAt: !16294)
!16297 = !DILocation(line: 1682, column: 3, scope: !16285)
!16298 = distinct !{!16298, !16283, !16299}
!16299 = !DILocation(line: 1683, column: 2, scope: !16274)
!16300 = !DILocation(line: 1684, column: 1, scope: !16274)
!16301 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2543, file: !2543, line: 1794, type: !16302, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16304)
!16302 = !DISubroutineType(types: !16303)
!16303 = !{!109, !2428, !15007}
!16304 = !{!16305, !16306, !16307, !16308}
!16305 = !DILocalVariable(name: "thread", arg: 1, scope: !16301, file: !2543, line: 1794, type: !2428)
!16306 = !DILocalVariable(name: "timeout", arg: 2, scope: !16301, file: !2543, line: 1794, type: !15007)
!16307 = !DILocalVariable(name: "key", scope: !16301, file: !2543, line: 1796, type: !14183)
!16308 = !DILocalVariable(name: "ret", scope: !16301, file: !2543, line: 1797, type: !109)
!16309 = !DILocation(line: 0, scope: !16301)
!16310 = !DILocation(line: 0, scope: !14191, inlinedAt: !16311)
!16311 = distinct !DILocation(line: 1796, column: 25, scope: !16301)
!16312 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !16313)
!16313 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !16311)
!16314 = !DILocation(line: 0, scope: !14200, inlinedAt: !16313)
!16315 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !16311)
!16316 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !16311)
!16317 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !16311)
!16318 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !16311)
!16319 = !DILocation(line: 1801, column: 20, scope: !16320)
!16320 = distinct !DILexicalBlock(scope: !16301, file: !2543, line: 1801, column: 6)
!16321 = !DILocation(line: 1801, column: 33, scope: !16320)
!16322 = !DILocation(line: 1801, column: 49, scope: !16320)
!16323 = !DILocation(line: 1801, column: 6, scope: !16301)
!16324 = !DILocation(line: 1803, column: 13, scope: !16325)
!16325 = distinct !DILexicalBlock(scope: !16320, file: !2543, line: 1803, column: 13)
!16326 = !DILocation(line: 1803, column: 13, scope: !16320)
!16327 = !DILocation(line: 1805, column: 24, scope: !16328)
!16328 = distinct !DILexicalBlock(scope: !16325, file: !2543, line: 1805, column: 13)
!16329 = !DILocation(line: 1805, column: 21, scope: !16328)
!16330 = !DILocation(line: 1805, column: 34, scope: !16328)
!16331 = !DILocation(line: 1806, column: 20, scope: !16328)
!16332 = !DILocation(line: 1806, column: 44, scope: !16328)
!16333 = !DILocation(line: 1806, column: 30, scope: !16328)
!16334 = !DILocation(line: 1805, column: 13, scope: !16325)
!16335 = !DILocation(line: 1031, column: 3, scope: !14846, inlinedAt: !16336)
!16336 = distinct !DILocation(line: 48, column: 10, scope: !14850, inlinedAt: !16337)
!16337 = distinct !DILocation(line: 1809, column: 3, scope: !16338)
!16338 = distinct !DILexicalBlock(scope: !16339, file: !2543, line: 1809, column: 3)
!16339 = distinct !DILexicalBlock(scope: !16340, file: !2543, line: 1809, column: 3)
!16340 = distinct !DILexicalBlock(scope: !16328, file: !2543, line: 1808, column: 9)
!16341 = !DILocation(line: 0, scope: !14846, inlinedAt: !16336)
!16342 = !DILocation(line: 48, column: 9, scope: !14850, inlinedAt: !16337)
!16343 = !DILocation(line: 1809, column: 3, scope: !16339)
!16344 = !DILocation(line: 1809, column: 3, scope: !16345)
!16345 = distinct !DILexicalBlock(scope: !16338, file: !2543, line: 1809, column: 3)
!16346 = !DILocation(line: 1810, column: 23, scope: !16340)
!16347 = !DILocation(line: 1810, column: 42, scope: !16340)
!16348 = !DILocation(line: 1810, column: 3, scope: !16340)
!16349 = !DILocation(line: 1811, column: 22, scope: !16340)
!16350 = !DILocation(line: 1811, column: 3, scope: !16340)
!16351 = !DILocation(line: 0, scope: !14797, inlinedAt: !16352)
!16352 = distinct !DILocation(line: 1814, column: 9, scope: !16340)
!16353 = !DILocation(line: 0, scope: !14806, inlinedAt: !16354)
!16354 = distinct !DILocation(line: 195, column: 2, scope: !14797, inlinedAt: !16352)
!16355 = !DILocation(line: 225, column: 2, scope: !14813, inlinedAt: !16354)
!16356 = !DILocation(line: 225, column: 2, scope: !14814, inlinedAt: !16354)
!16357 = !DILocation(line: 225, column: 2, scope: !14817, inlinedAt: !16354)
!16358 = !DILocation(line: 196, column: 9, scope: !14797, inlinedAt: !16352)
!16359 = !DILocation(line: 1817, column: 3, scope: !16340)
!16360 = !DILocation(line: 0, scope: !16320)
!16361 = !DILocation(line: 0, scope: !14225, inlinedAt: !16362)
!16362 = distinct !DILocation(line: 1822, column: 2, scope: !16301)
!16363 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !16362)
!16364 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !16362)
!16365 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !16362)
!16366 = !DILocation(line: 0, scope: !14239, inlinedAt: !16367)
!16367 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !16362)
!16368 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !16367)
!16369 = !DILocation(line: 1823, column: 2, scope: !16301)
!16370 = !DILocation(line: 1824, column: 1, scope: !16301)
!16371 = distinct !DISubprogram(name: "z_sched_wake", scope: !2543, file: !2543, line: 1882, type: !16372, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16374)
!16372 = !DISubroutineType(types: !16373)
!16373 = !{!334, !2459, !109, !108}
!16374 = !{!16375, !16376, !16377, !16378, !16379, !16380, !16382}
!16375 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16371, file: !2543, line: 1882, type: !2459)
!16376 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16371, file: !2543, line: 1882, type: !109)
!16377 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16371, file: !2543, line: 1882, type: !108)
!16378 = !DILocalVariable(name: "thread", scope: !16371, file: !2543, line: 1884, type: !2428)
!16379 = !DILocalVariable(name: "ret", scope: !16371, file: !2543, line: 1885, type: !334)
!16380 = !DILocalVariable(name: "__i", scope: !16381, file: !2543, line: 1887, type: !14183)
!16381 = distinct !DILexicalBlock(scope: !16371, file: !2543, line: 1887, column: 2)
!16382 = !DILocalVariable(name: "__key", scope: !16381, file: !2543, line: 1887, type: !14183)
!16383 = !DILocation(line: 0, scope: !16371)
!16384 = !DILocation(line: 0, scope: !16381)
!16385 = !DILocation(line: 0, scope: !14191, inlinedAt: !16386)
!16386 = distinct !DILocation(line: 1887, column: 2, scope: !16381)
!16387 = !DILocation(line: 55, column: 2, scope: !14200, inlinedAt: !16388)
!16388 = distinct !DILocation(line: 145, column: 10, scope: !14191, inlinedAt: !16386)
!16389 = !DILocation(line: 0, scope: !14200, inlinedAt: !16388)
!16390 = !DILocation(line: 148, column: 2, scope: !14208, inlinedAt: !16386)
!16391 = !DILocation(line: 148, column: 2, scope: !14209, inlinedAt: !16386)
!16392 = !DILocation(line: 148, column: 2, scope: !14212, inlinedAt: !16386)
!16393 = !DILocation(line: 160, column: 2, scope: !14191, inlinedAt: !16386)
!16394 = !DILocation(line: 1888, column: 12, scope: !16395)
!16395 = distinct !DILexicalBlock(scope: !16396, file: !2543, line: 1887, column: 26)
!16396 = distinct !DILexicalBlock(scope: !16381, file: !2543, line: 1887, column: 2)
!16397 = !DILocation(line: 1890, column: 14, scope: !16398)
!16398 = distinct !DILexicalBlock(scope: !16395, file: !2543, line: 1890, column: 7)
!16399 = !DILocation(line: 1890, column: 7, scope: !16395)
!16400 = !DILocalVariable(name: "thread", arg: 1, scope: !16401, file: !16402, line: 134, type: !2428)
!16401 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16402, file: !16402, line: 134, type: !16403, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16405)
!16402 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16403 = !DISubroutineType(types: !16404)
!16404 = !{null, !2428, !32, !108}
!16405 = !{!16400, !16406, !16407}
!16406 = !DILocalVariable(name: "value", arg: 2, scope: !16401, file: !16402, line: 135, type: !32)
!16407 = !DILocalVariable(name: "data", arg: 3, scope: !16401, file: !16402, line: 136, type: !108)
!16408 = !DILocation(line: 0, scope: !16401, inlinedAt: !16409)
!16409 = distinct !DILocation(line: 1891, column: 4, scope: !16410)
!16410 = distinct !DILexicalBlock(scope: !16398, file: !2543, line: 1890, column: 23)
!16411 = !DILocation(line: 0, scope: !16288, inlinedAt: !16412)
!16412 = distinct !DILocation(line: 138, column: 2, scope: !16401, inlinedAt: !16409)
!16413 = !DILocation(line: 67, column: 15, scope: !16288, inlinedAt: !16412)
!16414 = !DILocation(line: 67, column: 33, scope: !16288, inlinedAt: !16412)
!16415 = !DILocation(line: 139, column: 15, scope: !16401, inlinedAt: !16409)
!16416 = !DILocation(line: 139, column: 25, scope: !16401, inlinedAt: !16409)
!16417 = !DILocation(line: 1894, column: 4, scope: !16410)
!16418 = !DILocation(line: 1895, column: 10, scope: !16410)
!16419 = !DILocation(line: 1896, column: 4, scope: !16410)
!16420 = !DILocation(line: 1898, column: 3, scope: !16410)
!16421 = !DILocation(line: 0, scope: !14225, inlinedAt: !16422)
!16422 = distinct !DILocation(line: 1887, column: 2, scope: !16396)
!16423 = !DILocation(line: 194, column: 2, scope: !14233, inlinedAt: !16422)
!16424 = !DILocation(line: 194, column: 2, scope: !14234, inlinedAt: !16422)
!16425 = !DILocation(line: 194, column: 2, scope: !14237, inlinedAt: !16422)
!16426 = !DILocation(line: 0, scope: !14239, inlinedAt: !16427)
!16427 = distinct !DILocation(line: 215, column: 2, scope: !14225, inlinedAt: !16422)
!16428 = !DILocation(line: 95, column: 2, scope: !14239, inlinedAt: !16427)
!16429 = !DILocation(line: 1901, column: 2, scope: !16371)
!16430 = distinct !DISubprogram(name: "z_sched_wait", scope: !2543, file: !2543, line: 1904, type: !16431, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2425, retainedNodes: !16434)
!16431 = !DISubroutineType(types: !16432)
!16432 = !{!109, !14194, !14183, !2459, !15007, !16433}
!16433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!16434 = !{!16435, !16436, !16437, !16438, !16439, !16440}
!16435 = !DILocalVariable(name: "lock", arg: 1, scope: !16430, file: !2543, line: 1904, type: !14194)
!16436 = !DILocalVariable(name: "key", arg: 2, scope: !16430, file: !2543, line: 1904, type: !14183)
!16437 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16430, file: !2543, line: 1905, type: !2459)
!16438 = !DILocalVariable(name: "timeout", arg: 4, scope: !16430, file: !2543, line: 1905, type: !15007)
!16439 = !DILocalVariable(name: "data", arg: 5, scope: !16430, file: !2543, line: 1905, type: !16433)
!16440 = !DILocalVariable(name: "ret", scope: !16430, file: !2543, line: 1907, type: !109)
!16441 = !DILocation(line: 0, scope: !16430)
!16442 = !DILocation(line: 1907, column: 12, scope: !16430)
!16443 = !DILocation(line: 1909, column: 11, scope: !16444)
!16444 = distinct !DILexicalBlock(scope: !16430, file: !2543, line: 1909, column: 6)
!16445 = !DILocation(line: 1909, column: 6, scope: !16430)
!16446 = !DILocation(line: 1910, column: 11, scope: !16447)
!16447 = distinct !DILexicalBlock(scope: !16444, file: !2543, line: 1909, column: 20)
!16448 = !DILocation(line: 1910, column: 26, scope: !16447)
!16449 = !DILocation(line: 1910, column: 9, scope: !16447)
!16450 = !DILocation(line: 1911, column: 2, scope: !16447)
!16451 = !DILocation(line: 1912, column: 2, scope: !16430)
!16452 = distinct !DISubprogram(name: "z_data_copy", scope: !16453, file: !16453, line: 22, type: !3169, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3152, retainedNodes: !2100)
!16453 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16454 = !DILocation(line: 24, column: 2, scope: !16452)
!16455 = !DILocation(line: 27, column: 2, scope: !16452)
!16456 = !DILocation(line: 71, column: 1, scope: !16452)
!16457 = distinct !DISubprogram(name: "z_add_timeout", scope: !2580, file: !2580, line: 88, type: !16458, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16464)
!16458 = !DISubroutineType(types: !16459)
!16459 = !{null, !2553, !2572, !16460}
!16460 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !105, line: 67, baseType: !16461)
!16461 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !105, line: 65, size: 64, elements: !16462)
!16462 = !{!16463}
!16463 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16461, file: !105, line: 66, baseType: !104, size: 64)
!16464 = !{!16465, !16466, !16467, !16468, !16474, !16475, !16478, !16481}
!16465 = !DILocalVariable(name: "to", arg: 1, scope: !16457, file: !2580, line: 88, type: !2553)
!16466 = !DILocalVariable(name: "fn", arg: 2, scope: !16457, file: !2580, line: 88, type: !2572)
!16467 = !DILocalVariable(name: "timeout", arg: 3, scope: !16457, file: !2580, line: 89, type: !16460)
!16468 = !DILocalVariable(name: "__i", scope: !16469, file: !2580, line: 102, type: !16470)
!16469 = distinct !DILexicalBlock(scope: !16457, file: !2580, line: 102, column: 2)
!16470 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !254, line: 106, baseType: !16471)
!16471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !254, line: 32, size: 32, elements: !16472)
!16472 = !{!16473}
!16473 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16471, file: !254, line: 33, baseType: !109, size: 32)
!16474 = !DILocalVariable(name: "__key", scope: !16469, file: !2580, line: 102, type: !16470)
!16475 = !DILocalVariable(name: "t", scope: !16476, file: !2580, line: 103, type: !2553)
!16476 = distinct !DILexicalBlock(scope: !16477, file: !2580, line: 102, column: 24)
!16477 = distinct !DILexicalBlock(scope: !16469, file: !2580, line: 102, column: 2)
!16478 = !DILocalVariable(name: "ticks", scope: !16479, file: !2580, line: 107, type: !104)
!16479 = distinct !DILexicalBlock(scope: !16480, file: !2580, line: 106, column: 39)
!16480 = distinct !DILexicalBlock(scope: !16476, file: !2580, line: 105, column: 7)
!16481 = !DILocalVariable(name: "next_time", scope: !16482, file: !2580, line: 137, type: !765)
!16482 = distinct !DILexicalBlock(scope: !16483, file: !2580, line: 127, column: 22)
!16483 = distinct !DILexicalBlock(scope: !16476, file: !2580, line: 127, column: 7)
!16484 = !DILocation(line: 0, scope: !16457)
!16485 = !DILocation(line: 91, column: 6, scope: !16486)
!16486 = distinct !DILexicalBlock(scope: !16457, file: !2580, line: 91, column: 6)
!16487 = !DILocation(line: 91, column: 6, scope: !16457)
!16488 = !DILocation(line: 99, column: 2, scope: !16489)
!16489 = distinct !DILexicalBlock(scope: !16490, file: !2580, line: 99, column: 2)
!16490 = distinct !DILexicalBlock(scope: !16457, file: !2580, line: 99, column: 2)
!16491 = !DILocation(line: 99, column: 2, scope: !16490)
!16492 = !DILocation(line: 99, column: 2, scope: !16493)
!16493 = distinct !DILexicalBlock(scope: !16489, file: !2580, line: 99, column: 2)
!16494 = !DILocation(line: 100, column: 6, scope: !16457)
!16495 = !DILocation(line: 100, column: 9, scope: !16457)
!16496 = !DILocation(line: 0, scope: !16469)
!16497 = !DILocalVariable(name: "l", arg: 1, scope: !16498, file: !254, line: 136, type: !16501)
!16498 = distinct !DISubprogram(name: "k_spin_lock", scope: !254, file: !254, line: 136, type: !16499, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16502)
!16499 = !DISubroutineType(types: !16500)
!16500 = !{!16470, !16501}
!16501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 32)
!16502 = !{!16497, !16503}
!16503 = !DILocalVariable(name: "k", scope: !16498, file: !254, line: 139, type: !16470)
!16504 = !DILocation(line: 0, scope: !16498, inlinedAt: !16505)
!16505 = distinct !DILocation(line: 102, column: 2, scope: !16469)
!16506 = !DILocation(line: 55, column: 2, scope: !16507, inlinedAt: !16511)
!16507 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6069, file: !6069, line: 42, type: !6070, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16508)
!16508 = !{!16509, !16510}
!16509 = !DILocalVariable(name: "key", scope: !16507, file: !6069, line: 44, type: !32)
!16510 = !DILocalVariable(name: "tmp", scope: !16507, file: !6069, line: 53, type: !32)
!16511 = distinct !DILocation(line: 145, column: 10, scope: !16498, inlinedAt: !16505)
!16512 = !{i64 2286240}
!16513 = !DILocation(line: 0, scope: !16507, inlinedAt: !16511)
!16514 = !DILocation(line: 148, column: 2, scope: !16515, inlinedAt: !16505)
!16515 = distinct !DILexicalBlock(scope: !16516, file: !254, line: 148, column: 2)
!16516 = distinct !DILexicalBlock(scope: !16498, file: !254, line: 148, column: 2)
!16517 = !DILocation(line: 148, column: 2, scope: !16516, inlinedAt: !16505)
!16518 = !DILocation(line: 148, column: 2, scope: !16519, inlinedAt: !16505)
!16519 = distinct !DILexicalBlock(scope: !16515, file: !254, line: 148, column: 2)
!16520 = !DILocation(line: 160, column: 2, scope: !16498, inlinedAt: !16505)
!16521 = !DILocation(line: 106, column: 33, scope: !16480)
!16522 = !DILocation(line: 105, column: 7, scope: !16476)
!16523 = !DILocation(line: 107, column: 50, scope: !16479)
!16524 = !DILocation(line: 107, column: 48, scope: !16479)
!16525 = !DILocation(line: 0, scope: !16479)
!16526 = !DILocation(line: 109, column: 17, scope: !16479)
!16527 = !DILocation(line: 110, column: 3, scope: !16479)
!16528 = !DILocation(line: 111, column: 31, scope: !16529)
!16529 = distinct !DILexicalBlock(scope: !16480, file: !2580, line: 110, column: 10)
!16530 = !DILocation(line: 111, column: 37, scope: !16529)
!16531 = !DILocation(line: 111, column: 35, scope: !16529)
!16532 = !DILocation(line: 0, scope: !16480)
!16533 = !DILocation(line: 109, column: 8, scope: !16479)
!16534 = !DILocation(line: 109, column: 15, scope: !16479)
!16535 = !DILocation(line: 114, column: 12, scope: !16536)
!16536 = distinct !DILexicalBlock(scope: !16476, file: !2580, line: 114, column: 3)
!16537 = !DILocation(line: 0, scope: !16476)
!16538 = !DILocation(line: 114, column: 3, scope: !16536)
!16539 = !DILocation(line: 115, column: 24, scope: !16540)
!16540 = distinct !DILexicalBlock(scope: !16541, file: !2580, line: 115, column: 8)
!16541 = distinct !DILexicalBlock(scope: !16542, file: !2580, line: 114, column: 45)
!16542 = distinct !DILexicalBlock(scope: !16536, file: !2580, line: 114, column: 3)
!16543 = !DILocation(line: 115, column: 11, scope: !16540)
!16544 = !DILocation(line: 115, column: 18, scope: !16540)
!16545 = !DILocation(line: 115, column: 8, scope: !16541)
!16546 = !DILocation(line: 116, column: 15, scope: !16547)
!16547 = distinct !DILexicalBlock(scope: !16540, file: !2580, line: 115, column: 32)
!16548 = !DILocation(line: 117, column: 26, scope: !16547)
!16549 = !DILocation(line: 117, column: 5, scope: !16547)
!16550 = !DILocation(line: 123, column: 7, scope: !16476)
!16551 = !DILocation(line: 120, column: 15, scope: !16541)
!16552 = !DILocation(line: 114, column: 36, scope: !16542)
!16553 = distinct !{!16553, !16538, !16554}
!16554 = !DILocation(line: 121, column: 3, scope: !16536)
!16555 = !DILocation(line: 124, column: 4, scope: !16556)
!16556 = distinct !DILexicalBlock(scope: !16557, file: !2580, line: 123, column: 18)
!16557 = distinct !DILexicalBlock(scope: !16476, file: !2580, line: 123, column: 7)
!16558 = !DILocation(line: 125, column: 3, scope: !16556)
!16559 = !DILocation(line: 127, column: 13, scope: !16483)
!16560 = !DILocation(line: 127, column: 10, scope: !16483)
!16561 = !DILocation(line: 127, column: 7, scope: !16476)
!16562 = !DILocation(line: 137, column: 24, scope: !16482)
!16563 = !DILocation(line: 0, scope: !16482)
!16564 = !DILocation(line: 139, column: 18, scope: !16565)
!16565 = distinct !DILexicalBlock(scope: !16482, file: !2580, line: 139, column: 8)
!16566 = !DILocation(line: 139, column: 23, scope: !16565)
!16567 = !DILocation(line: 141, column: 5, scope: !16568)
!16568 = distinct !DILexicalBlock(scope: !16565, file: !2580, line: 140, column: 48)
!16569 = !DILocation(line: 142, column: 4, scope: !16568)
!16570 = !DILocalVariable(name: "key", arg: 2, scope: !16571, file: !254, line: 190, type: !16470)
!16571 = distinct !DISubprogram(name: "k_spin_unlock", scope: !254, file: !254, line: 189, type: !16572, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16574)
!16572 = !DISubroutineType(types: !16573)
!16573 = !{null, !16501, !16470}
!16574 = !{!16575, !16570}
!16575 = !DILocalVariable(name: "l", arg: 1, scope: !16571, file: !254, line: 189, type: !16501)
!16576 = !DILocation(line: 0, scope: !16571, inlinedAt: !16577)
!16577 = distinct !DILocation(line: 102, column: 2, scope: !16477)
!16578 = !DILocation(line: 194, column: 2, scope: !16579, inlinedAt: !16577)
!16579 = distinct !DILexicalBlock(scope: !16580, file: !254, line: 194, column: 2)
!16580 = distinct !DILexicalBlock(scope: !16571, file: !254, line: 194, column: 2)
!16581 = !DILocation(line: 194, column: 2, scope: !16580, inlinedAt: !16577)
!16582 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !16577)
!16583 = distinct !DILexicalBlock(scope: !16579, file: !254, line: 194, column: 2)
!16584 = !DILocalVariable(name: "key", arg: 1, scope: !16585, file: !6069, line: 84, type: !32)
!16585 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6069, file: !6069, line: 84, type: !6080, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16586)
!16586 = !{!16584}
!16587 = !DILocation(line: 0, scope: !16585, inlinedAt: !16588)
!16588 = distinct !DILocation(line: 215, column: 2, scope: !16571, inlinedAt: !16577)
!16589 = !DILocation(line: 95, column: 2, scope: !16585, inlinedAt: !16588)
!16590 = !{i64 2287057}
!16591 = !DILocation(line: 148, column: 1, scope: !16457)
!16592 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !128, file: !128, line: 225, type: !16593, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16597)
!16593 = !DISubroutineType(types: !16594)
!16594 = !{!334, !16595}
!16595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16596, size: 32)
!16596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2557)
!16597 = !{!16598}
!16598 = !DILocalVariable(name: "node", arg: 1, scope: !16592, file: !128, line: 225, type: !16595)
!16599 = !DILocation(line: 0, scope: !16592)
!16600 = !DILocation(line: 227, column: 15, scope: !16592)
!16601 = !DILocation(line: 227, column: 20, scope: !16592)
!16602 = !DILocation(line: 227, column: 2, scope: !16592)
!16603 = distinct !DISubprogram(name: "elapsed", scope: !2580, file: !2580, line: 62, type: !16604, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !2100)
!16604 = !DISubroutineType(types: !16605)
!16605 = !{!765}
!16606 = !DILocation(line: 64, column: 9, scope: !16603)
!16607 = !DILocation(line: 64, column: 28, scope: !16603)
!16608 = !DILocation(line: 64, column: 35, scope: !16603)
!16609 = !DILocation(line: 64, column: 2, scope: !16603)
!16610 = distinct !DISubprogram(name: "first", scope: !2580, file: !2580, line: 39, type: !16611, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16613)
!16611 = !DISubroutineType(types: !16612)
!16612 = !{!2553}
!16613 = !{!16614}
!16614 = !DILocalVariable(name: "t", scope: !16610, file: !2580, line: 41, type: !16615)
!16615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2557, size: 32)
!16616 = !DILocation(line: 41, column: 19, scope: !16610)
!16617 = !DILocation(line: 0, scope: !16610)
!16618 = !DILocation(line: 43, column: 9, scope: !16610)
!16619 = !DILocation(line: 43, column: 2, scope: !16610)
!16620 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !128, file: !128, line: 443, type: !16621, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16623)
!16621 = !DISubroutineType(types: !16622)
!16622 = !{null, !16615, !16615}
!16623 = !{!16624, !16625, !16626}
!16624 = !DILocalVariable(name: "successor", arg: 1, scope: !16620, file: !128, line: 443, type: !16615)
!16625 = !DILocalVariable(name: "node", arg: 2, scope: !16620, file: !128, line: 443, type: !16615)
!16626 = !DILocalVariable(name: "prev", scope: !16620, file: !128, line: 445, type: !16627)
!16627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16615)
!16628 = !DILocation(line: 0, scope: !16620)
!16629 = !DILocation(line: 445, column: 39, scope: !16620)
!16630 = !DILocation(line: 447, column: 8, scope: !16620)
!16631 = !DILocation(line: 447, column: 13, scope: !16620)
!16632 = !DILocation(line: 448, column: 8, scope: !16620)
!16633 = !DILocation(line: 448, column: 13, scope: !16620)
!16634 = !DILocation(line: 449, column: 8, scope: !16620)
!16635 = !DILocation(line: 449, column: 13, scope: !16620)
!16636 = !DILocation(line: 450, column: 18, scope: !16620)
!16637 = !DILocation(line: 451, column: 1, scope: !16620)
!16638 = distinct !DISubprogram(name: "next", scope: !2580, file: !2580, line: 46, type: !16639, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16641)
!16639 = !DISubroutineType(types: !16640)
!16640 = !{!2553, !2553}
!16641 = !{!16642, !16643}
!16642 = !DILocalVariable(name: "t", arg: 1, scope: !16638, file: !2580, line: 46, type: !2553)
!16643 = !DILocalVariable(name: "n", scope: !16638, file: !2580, line: 48, type: !16615)
!16644 = !DILocation(line: 0, scope: !16638)
!16645 = !DILocation(line: 48, column: 58, scope: !16638)
!16646 = !DILocation(line: 48, column: 19, scope: !16638)
!16647 = !DILocation(line: 50, column: 9, scope: !16638)
!16648 = !DILocation(line: 50, column: 2, scope: !16638)
!16649 = distinct !DISubprogram(name: "sys_dlist_append", scope: !128, file: !128, line: 404, type: !16650, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16653)
!16650 = !DISubroutineType(types: !16651)
!16651 = !{null, !16652, !16615}
!16652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 32)
!16653 = !{!16654, !16655, !16656}
!16654 = !DILocalVariable(name: "list", arg: 1, scope: !16649, file: !128, line: 404, type: !16652)
!16655 = !DILocalVariable(name: "node", arg: 2, scope: !16649, file: !128, line: 404, type: !16615)
!16656 = !DILocalVariable(name: "tail", scope: !16649, file: !128, line: 406, type: !16627)
!16657 = !DILocation(line: 0, scope: !16649)
!16658 = !DILocation(line: 406, column: 34, scope: !16649)
!16659 = !DILocation(line: 408, column: 8, scope: !16649)
!16660 = !DILocation(line: 408, column: 13, scope: !16649)
!16661 = !DILocation(line: 409, column: 8, scope: !16649)
!16662 = !DILocation(line: 409, column: 13, scope: !16649)
!16663 = !DILocation(line: 411, column: 8, scope: !16649)
!16664 = !DILocation(line: 411, column: 13, scope: !16649)
!16665 = !DILocation(line: 412, column: 13, scope: !16649)
!16666 = !DILocation(line: 413, column: 1, scope: !16649)
!16667 = distinct !DISubprogram(name: "next_timeout", scope: !2580, file: !2580, line: 67, type: !16604, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16668)
!16668 = !{!16669, !16670, !16671}
!16669 = !DILocalVariable(name: "to", scope: !16667, file: !2580, line: 69, type: !2553)
!16670 = !DILocalVariable(name: "ticks_elapsed", scope: !16667, file: !2580, line: 70, type: !765)
!16671 = !DILocalVariable(name: "ret", scope: !16667, file: !2580, line: 71, type: !765)
!16672 = !DILocation(line: 69, column: 24, scope: !16667)
!16673 = !DILocation(line: 0, scope: !16667)
!16674 = !DILocation(line: 70, column: 26, scope: !16667)
!16675 = !DILocation(line: 73, column: 10, scope: !16676)
!16676 = distinct !DILexicalBlock(scope: !16667, file: !2580, line: 73, column: 6)
!16677 = !DILocation(line: 73, column: 19, scope: !16676)
!16678 = !DILocation(line: 74, column: 21, scope: !16676)
!16679 = !DILocation(line: 74, column: 30, scope: !16676)
!16680 = !DILocation(line: 74, column: 28, scope: !16676)
!16681 = !DILocation(line: 74, column: 45, scope: !16676)
!16682 = !DILocation(line: 73, column: 6, scope: !16667)
!16683 = !DILocation(line: 77, column: 9, scope: !16684)
!16684 = distinct !DILexicalBlock(scope: !16676, file: !2580, line: 76, column: 9)
!16685 = !DILocation(line: 0, scope: !16676)
!16686 = !DILocation(line: 81, column: 20, scope: !16687)
!16687 = distinct !DILexicalBlock(scope: !16667, file: !2580, line: 81, column: 6)
!16688 = !DILocation(line: 81, column: 6, scope: !16687)
!16689 = !DILocation(line: 81, column: 32, scope: !16687)
!16690 = !DILocation(line: 85, column: 2, scope: !16667)
!16691 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !128, file: !128, line: 341, type: !16692, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16694)
!16692 = !DISubroutineType(types: !16693)
!16693 = !{!16615, !16652, !16615}
!16694 = !{!16695, !16696}
!16695 = !DILocalVariable(name: "list", arg: 1, scope: !16691, file: !128, line: 341, type: !16652)
!16696 = !DILocalVariable(name: "node", arg: 2, scope: !16691, file: !128, line: 342, type: !16615)
!16697 = !DILocation(line: 0, scope: !16691)
!16698 = !DILocation(line: 344, column: 15, scope: !16691)
!16699 = !DILocation(line: 344, column: 9, scope: !16691)
!16700 = !DILocation(line: 344, column: 26, scope: !16691)
!16701 = !DILocation(line: 344, column: 2, scope: !16691)
!16702 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !128, file: !128, line: 325, type: !16692, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16703)
!16703 = !{!16704, !16705}
!16704 = !DILocalVariable(name: "list", arg: 1, scope: !16702, file: !128, line: 325, type: !16652)
!16705 = !DILocalVariable(name: "node", arg: 2, scope: !16702, file: !128, line: 326, type: !16615)
!16706 = !DILocation(line: 0, scope: !16702)
!16707 = !DILocation(line: 328, column: 24, scope: !16702)
!16708 = !DILocation(line: 328, column: 15, scope: !16702)
!16709 = !DILocation(line: 328, column: 9, scope: !16702)
!16710 = !DILocation(line: 328, column: 45, scope: !16702)
!16711 = !DILocation(line: 328, column: 2, scope: !16702)
!16712 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !128, file: !128, line: 294, type: !16713, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16715)
!16713 = !DISubroutineType(types: !16714)
!16714 = !{!16615, !16652}
!16715 = !{!16716}
!16716 = !DILocalVariable(name: "list", arg: 1, scope: !16712, file: !128, line: 294, type: !16652)
!16717 = !DILocation(line: 0, scope: !16712)
!16718 = !DILocation(line: 296, column: 9, scope: !16712)
!16719 = !DILocation(line: 296, column: 2, scope: !16712)
!16720 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !128, file: !128, line: 266, type: !16721, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16723)
!16721 = !DISubroutineType(types: !16722)
!16722 = !{!334, !16652}
!16723 = !{!16724}
!16724 = !DILocalVariable(name: "list", arg: 1, scope: !16720, file: !128, line: 266, type: !16652)
!16725 = !DILocation(line: 0, scope: !16720)
!16726 = !DILocation(line: 268, column: 15, scope: !16720)
!16727 = !DILocation(line: 268, column: 20, scope: !16720)
!16728 = !DILocation(line: 268, column: 2, scope: !16720)
!16729 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2580, file: !2580, line: 150, type: !16730, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16732)
!16730 = !DISubroutineType(types: !16731)
!16731 = !{!109, !2553}
!16732 = !{!16733, !16734, !16735, !16737}
!16733 = !DILocalVariable(name: "to", arg: 1, scope: !16729, file: !2580, line: 150, type: !2553)
!16734 = !DILocalVariable(name: "ret", scope: !16729, file: !2580, line: 152, type: !109)
!16735 = !DILocalVariable(name: "__i", scope: !16736, file: !2580, line: 154, type: !16470)
!16736 = distinct !DILexicalBlock(scope: !16729, file: !2580, line: 154, column: 2)
!16737 = !DILocalVariable(name: "__key", scope: !16736, file: !2580, line: 154, type: !16470)
!16738 = !DILocation(line: 0, scope: !16729)
!16739 = !DILocation(line: 0, scope: !16736)
!16740 = !DILocation(line: 0, scope: !16498, inlinedAt: !16741)
!16741 = distinct !DILocation(line: 154, column: 2, scope: !16736)
!16742 = !DILocation(line: 55, column: 2, scope: !16507, inlinedAt: !16743)
!16743 = distinct !DILocation(line: 145, column: 10, scope: !16498, inlinedAt: !16741)
!16744 = !DILocation(line: 0, scope: !16507, inlinedAt: !16743)
!16745 = !DILocation(line: 148, column: 2, scope: !16515, inlinedAt: !16741)
!16746 = !DILocation(line: 148, column: 2, scope: !16516, inlinedAt: !16741)
!16747 = !DILocation(line: 148, column: 2, scope: !16519, inlinedAt: !16741)
!16748 = !DILocation(line: 160, column: 2, scope: !16498, inlinedAt: !16741)
!16749 = !DILocation(line: 155, column: 7, scope: !16750)
!16750 = distinct !DILexicalBlock(scope: !16751, file: !2580, line: 155, column: 7)
!16751 = distinct !DILexicalBlock(scope: !16752, file: !2580, line: 154, column: 24)
!16752 = distinct !DILexicalBlock(scope: !16736, file: !2580, line: 154, column: 2)
!16753 = !DILocation(line: 155, column: 7, scope: !16751)
!16754 = !DILocation(line: 156, column: 4, scope: !16755)
!16755 = distinct !DILexicalBlock(scope: !16750, file: !2580, line: 155, column: 39)
!16756 = !DILocation(line: 158, column: 3, scope: !16755)
!16757 = !DILocation(line: 0, scope: !16571, inlinedAt: !16758)
!16758 = distinct !DILocation(line: 154, column: 2, scope: !16752)
!16759 = !DILocation(line: 194, column: 2, scope: !16579, inlinedAt: !16758)
!16760 = !DILocation(line: 194, column: 2, scope: !16580, inlinedAt: !16758)
!16761 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !16758)
!16762 = !DILocation(line: 0, scope: !16585, inlinedAt: !16763)
!16763 = distinct !DILocation(line: 215, column: 2, scope: !16571, inlinedAt: !16758)
!16764 = !DILocation(line: 95, column: 2, scope: !16585, inlinedAt: !16763)
!16765 = !DILocation(line: 161, column: 2, scope: !16729)
!16766 = distinct !DISubprogram(name: "remove_timeout", scope: !2580, file: !2580, line: 53, type: !2574, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16767)
!16767 = !{!16768}
!16768 = !DILocalVariable(name: "t", arg: 1, scope: !16766, file: !2580, line: 53, type: !2553)
!16769 = !DILocation(line: 0, scope: !16766)
!16770 = !DILocation(line: 55, column: 6, scope: !16771)
!16771 = distinct !DILexicalBlock(scope: !16766, file: !2580, line: 55, column: 6)
!16772 = !DILocation(line: 55, column: 14, scope: !16771)
!16773 = !DILocation(line: 55, column: 6, scope: !16766)
!16774 = !DILocation(line: 56, column: 25, scope: !16775)
!16775 = distinct !DILexicalBlock(scope: !16771, file: !2580, line: 55, column: 23)
!16776 = !DILocation(line: 56, column: 12, scope: !16775)
!16777 = !DILocation(line: 56, column: 19, scope: !16775)
!16778 = !DILocation(line: 57, column: 2, scope: !16775)
!16779 = !DILocation(line: 59, column: 23, scope: !16766)
!16780 = !DILocation(line: 59, column: 2, scope: !16766)
!16781 = !DILocation(line: 60, column: 1, scope: !16766)
!16782 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !128, file: !128, line: 496, type: !16783, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16785)
!16783 = !DISubroutineType(types: !16784)
!16784 = !{null, !16615}
!16785 = !{!16786, !16787, !16788}
!16786 = !DILocalVariable(name: "node", arg: 1, scope: !16782, file: !128, line: 496, type: !16615)
!16787 = !DILocalVariable(name: "prev", scope: !16782, file: !128, line: 498, type: !16627)
!16788 = !DILocalVariable(name: "next", scope: !16782, file: !128, line: 499, type: !16627)
!16789 = !DILocation(line: 0, scope: !16782)
!16790 = !DILocation(line: 498, column: 34, scope: !16782)
!16791 = !DILocation(line: 499, column: 34, scope: !16782)
!16792 = !DILocation(line: 501, column: 8, scope: !16782)
!16793 = !DILocation(line: 501, column: 13, scope: !16782)
!16794 = !DILocation(line: 502, column: 8, scope: !16782)
!16795 = !DILocation(line: 502, column: 13, scope: !16782)
!16796 = !DILocation(line: 503, column: 2, scope: !16782)
!16797 = !DILocation(line: 504, column: 1, scope: !16782)
!16798 = distinct !DISubprogram(name: "sys_dnode_init", scope: !128, file: !128, line: 211, type: !16783, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16799)
!16799 = !{!16800}
!16800 = !DILocalVariable(name: "node", arg: 1, scope: !16798, file: !128, line: 211, type: !16615)
!16801 = !DILocation(line: 0, scope: !16798)
!16802 = !DILocation(line: 213, column: 8, scope: !16798)
!16803 = !DILocation(line: 213, column: 13, scope: !16798)
!16804 = !DILocation(line: 214, column: 8, scope: !16798)
!16805 = !DILocation(line: 214, column: 13, scope: !16798)
!16806 = !DILocation(line: 215, column: 1, scope: !16798)
!16807 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2580, file: !2580, line: 183, type: !16808, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16812)
!16808 = !DISubroutineType(types: !16809)
!16809 = !{!104, !16810}
!16810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16811, size: 32)
!16811 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2554)
!16812 = !{!16813, !16814, !16815, !16817}
!16813 = !DILocalVariable(name: "timeout", arg: 1, scope: !16807, file: !2580, line: 183, type: !16810)
!16814 = !DILocalVariable(name: "ticks", scope: !16807, file: !2580, line: 185, type: !104)
!16815 = !DILocalVariable(name: "__i", scope: !16816, file: !2580, line: 187, type: !16470)
!16816 = distinct !DILexicalBlock(scope: !16807, file: !2580, line: 187, column: 2)
!16817 = !DILocalVariable(name: "__key", scope: !16816, file: !2580, line: 187, type: !16470)
!16818 = !DILocation(line: 0, scope: !16807)
!16819 = !DILocation(line: 0, scope: !16816)
!16820 = !DILocation(line: 0, scope: !16498, inlinedAt: !16821)
!16821 = distinct !DILocation(line: 187, column: 2, scope: !16816)
!16822 = !DILocation(line: 55, column: 2, scope: !16507, inlinedAt: !16823)
!16823 = distinct !DILocation(line: 145, column: 10, scope: !16498, inlinedAt: !16821)
!16824 = !DILocation(line: 0, scope: !16507, inlinedAt: !16823)
!16825 = !DILocation(line: 148, column: 2, scope: !16515, inlinedAt: !16821)
!16826 = !DILocation(line: 148, column: 2, scope: !16516, inlinedAt: !16821)
!16827 = !DILocation(line: 148, column: 2, scope: !16519, inlinedAt: !16821)
!16828 = !DILocation(line: 160, column: 2, scope: !16498, inlinedAt: !16821)
!16829 = !DILocation(line: 188, column: 11, scope: !16830)
!16830 = distinct !DILexicalBlock(scope: !16831, file: !2580, line: 187, column: 24)
!16831 = distinct !DILexicalBlock(scope: !16816, file: !2580, line: 187, column: 2)
!16832 = !DILocation(line: 0, scope: !16571, inlinedAt: !16833)
!16833 = distinct !DILocation(line: 187, column: 2, scope: !16831)
!16834 = !DILocation(line: 194, column: 2, scope: !16579, inlinedAt: !16833)
!16835 = !DILocation(line: 194, column: 2, scope: !16580, inlinedAt: !16833)
!16836 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !16833)
!16837 = !DILocation(line: 0, scope: !16585, inlinedAt: !16838)
!16838 = distinct !DILocation(line: 215, column: 2, scope: !16571, inlinedAt: !16833)
!16839 = !DILocation(line: 95, column: 2, scope: !16585, inlinedAt: !16838)
!16840 = !DILocation(line: 191, column: 2, scope: !16807)
!16841 = distinct !DISubprogram(name: "timeout_rem", scope: !2580, file: !2580, line: 165, type: !16808, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16842)
!16842 = !{!16843, !16844, !16845}
!16843 = !DILocalVariable(name: "timeout", arg: 1, scope: !16841, file: !2580, line: 165, type: !16810)
!16844 = !DILocalVariable(name: "ticks", scope: !16841, file: !2580, line: 167, type: !104)
!16845 = !DILocalVariable(name: "t", scope: !16846, file: !2580, line: 173, type: !2553)
!16846 = distinct !DILexicalBlock(scope: !16841, file: !2580, line: 173, column: 2)
!16847 = !DILocation(line: 0, scope: !16841)
!16848 = !DILocation(line: 169, column: 6, scope: !16849)
!16849 = distinct !DILexicalBlock(scope: !16841, file: !2580, line: 169, column: 6)
!16850 = !DILocation(line: 169, column: 6, scope: !16841)
!16851 = !DILocation(line: 173, column: 28, scope: !16846)
!16852 = !DILocation(line: 0, scope: !16846)
!16853 = !DILocation(line: 173, column: 39, scope: !16854)
!16854 = distinct !DILexicalBlock(scope: !16846, file: !2580, line: 173, column: 2)
!16855 = !DILocation(line: 173, column: 2, scope: !16846)
!16856 = !DILocation(line: 174, column: 15, scope: !16857)
!16857 = distinct !DILexicalBlock(scope: !16854, file: !2580, line: 173, column: 61)
!16858 = !DILocation(line: 174, column: 9, scope: !16857)
!16859 = !DILocation(line: 175, column: 15, scope: !16860)
!16860 = distinct !DILexicalBlock(scope: !16857, file: !2580, line: 175, column: 7)
!16861 = !DILocation(line: 175, column: 7, scope: !16857)
!16862 = !DILocation(line: 173, column: 52, scope: !16854)
!16863 = distinct !{!16863, !16855, !16864}
!16864 = !DILocation(line: 178, column: 2, scope: !16846)
!16865 = !DILocation(line: 180, column: 17, scope: !16841)
!16866 = !DILocation(line: 180, column: 15, scope: !16841)
!16867 = !DILocation(line: 180, column: 2, scope: !16841)
!16868 = !DILocation(line: 181, column: 1, scope: !16841)
!16869 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13454, file: !13454, line: 35, type: !16870, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16872)
!16870 = !DISubroutineType(types: !16871)
!16871 = !{!334, !16810}
!16872 = !{!16873}
!16873 = !DILocalVariable(name: "to", arg: 1, scope: !16869, file: !13454, line: 35, type: !16810)
!16874 = !DILocation(line: 0, scope: !16869)
!16875 = !DILocation(line: 37, column: 35, scope: !16869)
!16876 = !DILocation(line: 37, column: 10, scope: !16869)
!16877 = !DILocation(line: 37, column: 9, scope: !16869)
!16878 = !DILocation(line: 37, column: 2, scope: !16869)
!16879 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2580, file: !2580, line: 194, type: !16808, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16880)
!16880 = !{!16881, !16882, !16883, !16885}
!16881 = !DILocalVariable(name: "timeout", arg: 1, scope: !16879, file: !2580, line: 194, type: !16810)
!16882 = !DILocalVariable(name: "ticks", scope: !16879, file: !2580, line: 196, type: !104)
!16883 = !DILocalVariable(name: "__i", scope: !16884, file: !2580, line: 198, type: !16470)
!16884 = distinct !DILexicalBlock(scope: !16879, file: !2580, line: 198, column: 2)
!16885 = !DILocalVariable(name: "__key", scope: !16884, file: !2580, line: 198, type: !16470)
!16886 = !DILocation(line: 0, scope: !16879)
!16887 = !DILocation(line: 0, scope: !16884)
!16888 = !DILocation(line: 0, scope: !16498, inlinedAt: !16889)
!16889 = distinct !DILocation(line: 198, column: 2, scope: !16884)
!16890 = !DILocation(line: 55, column: 2, scope: !16507, inlinedAt: !16891)
!16891 = distinct !DILocation(line: 145, column: 10, scope: !16498, inlinedAt: !16889)
!16892 = !DILocation(line: 0, scope: !16507, inlinedAt: !16891)
!16893 = !DILocation(line: 148, column: 2, scope: !16515, inlinedAt: !16889)
!16894 = !DILocation(line: 148, column: 2, scope: !16516, inlinedAt: !16889)
!16895 = !DILocation(line: 148, column: 2, scope: !16519, inlinedAt: !16889)
!16896 = !DILocation(line: 160, column: 2, scope: !16498, inlinedAt: !16889)
!16897 = !DILocation(line: 199, column: 11, scope: !16898)
!16898 = distinct !DILexicalBlock(scope: !16899, file: !2580, line: 198, column: 24)
!16899 = distinct !DILexicalBlock(scope: !16884, file: !2580, line: 198, column: 2)
!16900 = !DILocation(line: 199, column: 23, scope: !16898)
!16901 = !DILocation(line: 0, scope: !16571, inlinedAt: !16902)
!16902 = distinct !DILocation(line: 198, column: 2, scope: !16899)
!16903 = !DILocation(line: 194, column: 2, scope: !16579, inlinedAt: !16902)
!16904 = !DILocation(line: 194, column: 2, scope: !16580, inlinedAt: !16902)
!16905 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !16902)
!16906 = !DILocation(line: 0, scope: !16585, inlinedAt: !16907)
!16907 = distinct !DILocation(line: 215, column: 2, scope: !16571, inlinedAt: !16902)
!16908 = !DILocation(line: 95, column: 2, scope: !16585, inlinedAt: !16907)
!16909 = !DILocation(line: 199, column: 21, scope: !16898)
!16910 = !DILocation(line: 202, column: 2, scope: !16879)
!16911 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2580, file: !2580, line: 205, type: !16604, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16912)
!16912 = !{!16913, !16914, !16916}
!16913 = !DILocalVariable(name: "ret", scope: !16911, file: !2580, line: 207, type: !765)
!16914 = !DILocalVariable(name: "__i", scope: !16915, file: !2580, line: 209, type: !16470)
!16915 = distinct !DILexicalBlock(scope: !16911, file: !2580, line: 209, column: 2)
!16916 = !DILocalVariable(name: "__key", scope: !16915, file: !2580, line: 209, type: !16470)
!16917 = !DILocation(line: 0, scope: !16911)
!16918 = !DILocation(line: 0, scope: !16915)
!16919 = !DILocation(line: 0, scope: !16498, inlinedAt: !16920)
!16920 = distinct !DILocation(line: 209, column: 2, scope: !16915)
!16921 = !DILocation(line: 55, column: 2, scope: !16507, inlinedAt: !16922)
!16922 = distinct !DILocation(line: 145, column: 10, scope: !16498, inlinedAt: !16920)
!16923 = !DILocation(line: 0, scope: !16507, inlinedAt: !16922)
!16924 = !DILocation(line: 148, column: 2, scope: !16515, inlinedAt: !16920)
!16925 = !DILocation(line: 148, column: 2, scope: !16516, inlinedAt: !16920)
!16926 = !DILocation(line: 148, column: 2, scope: !16519, inlinedAt: !16920)
!16927 = !DILocation(line: 160, column: 2, scope: !16498, inlinedAt: !16920)
!16928 = !DILocation(line: 210, column: 9, scope: !16929)
!16929 = distinct !DILexicalBlock(scope: !16930, file: !2580, line: 209, column: 24)
!16930 = distinct !DILexicalBlock(scope: !16915, file: !2580, line: 209, column: 2)
!16931 = !DILocation(line: 0, scope: !16571, inlinedAt: !16932)
!16932 = distinct !DILocation(line: 209, column: 2, scope: !16930)
!16933 = !DILocation(line: 194, column: 2, scope: !16579, inlinedAt: !16932)
!16934 = !DILocation(line: 194, column: 2, scope: !16580, inlinedAt: !16932)
!16935 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !16932)
!16936 = !DILocation(line: 0, scope: !16585, inlinedAt: !16937)
!16937 = distinct !DILocation(line: 215, column: 2, scope: !16571, inlinedAt: !16932)
!16938 = !DILocation(line: 95, column: 2, scope: !16585, inlinedAt: !16937)
!16939 = !DILocation(line: 212, column: 2, scope: !16911)
!16940 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2580, file: !2580, line: 215, type: !10166, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16941)
!16941 = !{!16942, !16943, !16944, !16946, !16947, !16950, !16951}
!16942 = !DILocalVariable(name: "ticks", arg: 1, scope: !16940, file: !2580, line: 215, type: !765)
!16943 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16940, file: !2580, line: 215, type: !334)
!16944 = !DILocalVariable(name: "__i", scope: !16945, file: !2580, line: 217, type: !16470)
!16945 = distinct !DILexicalBlock(scope: !16940, file: !2580, line: 217, column: 2)
!16946 = !DILocalVariable(name: "__key", scope: !16945, file: !2580, line: 217, type: !16470)
!16947 = !DILocalVariable(name: "next_to", scope: !16948, file: !2580, line: 218, type: !109)
!16948 = distinct !DILexicalBlock(scope: !16949, file: !2580, line: 217, column: 24)
!16949 = distinct !DILexicalBlock(scope: !16945, file: !2580, line: 217, column: 2)
!16950 = !DILocalVariable(name: "sooner", scope: !16948, file: !2580, line: 219, type: !334)
!16951 = !DILocalVariable(name: "imminent", scope: !16948, file: !2580, line: 221, type: !334)
!16952 = !DILocation(line: 0, scope: !16940)
!16953 = !DILocation(line: 0, scope: !16945)
!16954 = !DILocation(line: 0, scope: !16498, inlinedAt: !16955)
!16955 = distinct !DILocation(line: 217, column: 2, scope: !16945)
!16956 = !DILocation(line: 55, column: 2, scope: !16507, inlinedAt: !16957)
!16957 = distinct !DILocation(line: 145, column: 10, scope: !16498, inlinedAt: !16955)
!16958 = !DILocation(line: 0, scope: !16507, inlinedAt: !16957)
!16959 = !DILocation(line: 148, column: 2, scope: !16515, inlinedAt: !16955)
!16960 = !DILocation(line: 148, column: 2, scope: !16516, inlinedAt: !16955)
!16961 = !DILocation(line: 148, column: 2, scope: !16519, inlinedAt: !16955)
!16962 = !DILocation(line: 160, column: 2, scope: !16498, inlinedAt: !16955)
!16963 = !DILocation(line: 218, column: 17, scope: !16948)
!16964 = !DILocation(line: 0, scope: !16948)
!16965 = !DILocation(line: 221, column: 27, scope: !16948)
!16966 = !DILocation(line: 233, column: 17, scope: !16967)
!16967 = distinct !DILexicalBlock(scope: !16948, file: !2580, line: 233, column: 7)
!16968 = !DILocation(line: 234, column: 26, scope: !16969)
!16969 = distinct !DILexicalBlock(scope: !16967, file: !2580, line: 233, column: 56)
!16970 = !DILocation(line: 234, column: 4, scope: !16969)
!16971 = !DILocation(line: 235, column: 3, scope: !16969)
!16972 = !DILocation(line: 0, scope: !16571, inlinedAt: !16973)
!16973 = distinct !DILocation(line: 217, column: 2, scope: !16949)
!16974 = !DILocation(line: 194, column: 2, scope: !16579, inlinedAt: !16973)
!16975 = !DILocation(line: 194, column: 2, scope: !16580, inlinedAt: !16973)
!16976 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !16973)
!16977 = !DILocation(line: 0, scope: !16585, inlinedAt: !16978)
!16978 = distinct !DILocation(line: 215, column: 2, scope: !16571, inlinedAt: !16973)
!16979 = !DILocation(line: 95, column: 2, scope: !16585, inlinedAt: !16978)
!16980 = !DILocation(line: 237, column: 1, scope: !16940)
!16981 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2580, file: !2580, line: 239, type: !16982, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !16984)
!16982 = !DISubroutineType(types: !16983)
!16983 = !{null, !765}
!16984 = !{!16985, !16986, !16987, !16989}
!16985 = !DILocalVariable(name: "ticks", arg: 1, scope: !16981, file: !2580, line: 239, type: !765)
!16986 = !DILocalVariable(name: "key", scope: !16981, file: !2580, line: 245, type: !16470)
!16987 = !DILocalVariable(name: "t", scope: !16988, file: !2580, line: 262, type: !2553)
!16988 = distinct !DILexicalBlock(scope: !16981, file: !2580, line: 261, column: 67)
!16989 = !DILocalVariable(name: "dt", scope: !16988, file: !2580, line: 263, type: !109)
!16990 = !DILocation(line: 0, scope: !16981)
!16991 = !DILocation(line: 242, column: 2, scope: !16981)
!16992 = !DILocation(line: 0, scope: !16498, inlinedAt: !16993)
!16993 = distinct !DILocation(line: 245, column: 25, scope: !16981)
!16994 = !DILocation(line: 55, column: 2, scope: !16507, inlinedAt: !16995)
!16995 = distinct !DILocation(line: 145, column: 10, scope: !16498, inlinedAt: !16993)
!16996 = !DILocation(line: 0, scope: !16507, inlinedAt: !16995)
!16997 = !DILocation(line: 148, column: 2, scope: !16515, inlinedAt: !16993)
!16998 = !DILocation(line: 148, column: 2, scope: !16516, inlinedAt: !16993)
!16999 = !DILocation(line: 148, column: 2, scope: !16519, inlinedAt: !16993)
!17000 = !DILocation(line: 160, column: 2, scope: !16498, inlinedAt: !16993)
!17001 = !DILocation(line: 261, column: 9, scope: !16981)
!17002 = !DILocation(line: 261, column: 17, scope: !16981)
!17003 = !DILocation(line: 261, column: 25, scope: !16981)
!17004 = !DILocation(line: 261, column: 37, scope: !16981)
!17005 = !DILocation(line: 261, column: 47, scope: !16981)
!17006 = !DILocation(line: 261, column: 44, scope: !16981)
!17007 = !DILocation(line: 261, column: 2, scope: !16981)
!17008 = !DILocation(line: 0, scope: !16988)
!17009 = !DILocation(line: 263, column: 12, scope: !16988)
!17010 = !DILocation(line: 265, column: 16, scope: !16988)
!17011 = !DILocation(line: 265, column: 13, scope: !16988)
!17012 = !DILocation(line: 266, column: 13, scope: !16988)
!17013 = !DILocation(line: 267, column: 3, scope: !16988)
!17014 = !DILocation(line: 0, scope: !16571, inlinedAt: !17015)
!17015 = distinct !DILocation(line: 269, column: 3, scope: !16988)
!17016 = !DILocation(line: 194, column: 2, scope: !16579, inlinedAt: !17015)
!17017 = !DILocation(line: 194, column: 2, scope: !16580, inlinedAt: !17015)
!17018 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !17015)
!17019 = !DILocation(line: 0, scope: !16585, inlinedAt: !17020)
!17020 = distinct !DILocation(line: 215, column: 2, scope: !16571, inlinedAt: !17015)
!17021 = !DILocation(line: 95, column: 2, scope: !16585, inlinedAt: !17020)
!17022 = !DILocation(line: 270, column: 6, scope: !16988)
!17023 = !DILocation(line: 270, column: 3, scope: !16988)
!17024 = !DILocation(line: 0, scope: !16498, inlinedAt: !17025)
!17025 = distinct !DILocation(line: 271, column: 9, scope: !16988)
!17026 = !DILocation(line: 55, column: 2, scope: !16507, inlinedAt: !17027)
!17027 = distinct !DILocation(line: 145, column: 10, scope: !16498, inlinedAt: !17025)
!17028 = !DILocation(line: 0, scope: !16507, inlinedAt: !17027)
!17029 = !DILocation(line: 148, column: 2, scope: !16515, inlinedAt: !17025)
!17030 = !DILocation(line: 148, column: 2, scope: !16516, inlinedAt: !17025)
!17031 = !DILocation(line: 148, column: 2, scope: !16519, inlinedAt: !17025)
!17032 = !DILocation(line: 160, column: 2, scope: !16498, inlinedAt: !17025)
!17033 = !DILocation(line: 272, column: 22, scope: !16988)
!17034 = distinct !{!17034, !17007, !17035}
!17035 = !DILocation(line: 273, column: 2, scope: !16981)
!17036 = !DILocation(line: 276, column: 19, scope: !17037)
!17037 = distinct !DILexicalBlock(scope: !17038, file: !2580, line: 275, column: 23)
!17038 = distinct !DILexicalBlock(scope: !16981, file: !2580, line: 275, column: 6)
!17039 = !DILocation(line: 277, column: 2, scope: !17037)
!17040 = !DILocation(line: 279, column: 15, scope: !16981)
!17041 = !DILocation(line: 279, column: 12, scope: !16981)
!17042 = !DILocation(line: 280, column: 21, scope: !16981)
!17043 = !DILocation(line: 282, column: 24, scope: !16981)
!17044 = !DILocation(line: 282, column: 2, scope: !16981)
!17045 = !DILocation(line: 0, scope: !16571, inlinedAt: !17046)
!17046 = distinct !DILocation(line: 284, column: 2, scope: !16981)
!17047 = !DILocation(line: 194, column: 2, scope: !16579, inlinedAt: !17046)
!17048 = !DILocation(line: 194, column: 2, scope: !16580, inlinedAt: !17046)
!17049 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !17046)
!17050 = !DILocation(line: 0, scope: !16585, inlinedAt: !17051)
!17051 = distinct !DILocation(line: 215, column: 2, scope: !16571, inlinedAt: !17046)
!17052 = !DILocation(line: 95, column: 2, scope: !16585, inlinedAt: !17051)
!17053 = !DILocation(line: 285, column: 1, scope: !16981)
!17054 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2580, file: !2580, line: 287, type: !3457, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17055)
!17055 = !{!17056, !17057, !17059}
!17056 = !DILocalVariable(name: "t", scope: !17054, file: !2580, line: 289, type: !111)
!17057 = !DILocalVariable(name: "__i", scope: !17058, file: !2580, line: 291, type: !16470)
!17058 = distinct !DILexicalBlock(scope: !17054, file: !2580, line: 291, column: 2)
!17059 = !DILocalVariable(name: "__key", scope: !17058, file: !2580, line: 291, type: !16470)
!17060 = !DILocation(line: 0, scope: !17054)
!17061 = !DILocation(line: 0, scope: !17058)
!17062 = !DILocation(line: 0, scope: !16498, inlinedAt: !17063)
!17063 = distinct !DILocation(line: 291, column: 2, scope: !17058)
!17064 = !DILocation(line: 55, column: 2, scope: !16507, inlinedAt: !17065)
!17065 = distinct !DILocation(line: 145, column: 10, scope: !16498, inlinedAt: !17063)
!17066 = !DILocation(line: 0, scope: !16507, inlinedAt: !17065)
!17067 = !DILocation(line: 148, column: 2, scope: !16515, inlinedAt: !17063)
!17068 = !DILocation(line: 148, column: 2, scope: !16516, inlinedAt: !17063)
!17069 = !DILocation(line: 148, column: 2, scope: !16519, inlinedAt: !17063)
!17070 = !DILocation(line: 160, column: 2, scope: !16498, inlinedAt: !17063)
!17071 = !DILocation(line: 292, column: 7, scope: !17072)
!17072 = distinct !DILexicalBlock(scope: !17073, file: !2580, line: 291, column: 24)
!17073 = distinct !DILexicalBlock(scope: !17058, file: !2580, line: 291, column: 2)
!17074 = !DILocation(line: 292, column: 19, scope: !17072)
!17075 = !DILocation(line: 0, scope: !16571, inlinedAt: !17076)
!17076 = distinct !DILocation(line: 291, column: 2, scope: !17073)
!17077 = !DILocation(line: 194, column: 2, scope: !16579, inlinedAt: !17076)
!17078 = !DILocation(line: 194, column: 2, scope: !16580, inlinedAt: !17076)
!17079 = !DILocation(line: 194, column: 2, scope: !16583, inlinedAt: !17076)
!17080 = !DILocation(line: 0, scope: !16585, inlinedAt: !17081)
!17081 = distinct !DILocation(line: 215, column: 2, scope: !16571, inlinedAt: !17076)
!17082 = !DILocation(line: 95, column: 2, scope: !16585, inlinedAt: !17081)
!17083 = !DILocation(line: 292, column: 17, scope: !17072)
!17084 = !DILocation(line: 294, column: 2, scope: !17054)
!17085 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2580, file: !2580, line: 297, type: !3451, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !2100)
!17086 = !DILocation(line: 300, column: 19, scope: !17085)
!17087 = !DILocation(line: 300, column: 9, scope: !17085)
!17088 = !DILocation(line: 300, column: 2, scope: !17085)
!17089 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2580, file: !2580, line: 306, type: !3457, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !2100)
!17090 = !DILocation(line: 308, column: 9, scope: !17089)
!17091 = !DILocation(line: 308, column: 2, scope: !17089)
!17092 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2580, file: !2580, line: 319, type: !6338, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17093)
!17093 = !{!17094, !17095, !17096, !17097}
!17094 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17092, file: !2580, line: 319, type: !110)
!17095 = !DILocalVariable(name: "start_cycles", scope: !17092, file: !2580, line: 328, type: !110)
!17096 = !DILocalVariable(name: "cycles_to_wait", scope: !17092, file: !2580, line: 331, type: !110)
!17097 = !DILocalVariable(name: "current_cycles", scope: !17098, file: !2580, line: 338, type: !110)
!17098 = distinct !DILexicalBlock(scope: !17099, file: !2580, line: 337, column: 11)
!17099 = distinct !DILexicalBlock(scope: !17100, file: !2580, line: 337, column: 2)
!17100 = distinct !DILexicalBlock(scope: !17092, file: !2580, line: 337, column: 2)
!17101 = !DILocation(line: 0, scope: !17092)
!17102 = !DILocation(line: 322, column: 19, scope: !17103)
!17103 = distinct !DILexicalBlock(scope: !17092, file: !2580, line: 322, column: 6)
!17104 = !DILocation(line: 322, column: 6, scope: !17092)
!17105 = !DILocation(line: 328, column: 26, scope: !17092)
!17106 = !DILocation(line: 333, column: 43, scope: !17092)
!17107 = !DILocation(line: 337, column: 2, scope: !17092)
!17108 = !DILocation(line: 338, column: 29, scope: !17098)
!17109 = !DILocation(line: 0, scope: !17098)
!17110 = !DILocation(line: 341, column: 23, scope: !17111)
!17111 = distinct !DILexicalBlock(scope: !17098, file: !2580, line: 341, column: 7)
!17112 = !DILocation(line: 341, column: 39, scope: !17111)
!17113 = !DILocation(line: 349, column: 1, scope: !17092)
!17114 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !119, file: !119, line: 1675, type: !3451, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !2100)
!17115 = !DILocation(line: 1677, column: 9, scope: !17114)
!17116 = !DILocation(line: 1677, column: 2, scope: !17114)
!17117 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17118, file: !17118, line: 24, type: !3451, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !2100)
!17118 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17119 = !DILocation(line: 26, column: 9, scope: !17117)
!17120 = !DILocation(line: 26, column: 2, scope: !17117)
!17121 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2580, file: !2580, line: 364, type: !17122, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2550, retainedNodes: !17124)
!17122 = !DISubroutineType(types: !17123)
!17123 = !{!111, !16460}
!17124 = !{!17125, !17126}
!17125 = !DILocalVariable(name: "timeout", arg: 1, scope: !17121, file: !2580, line: 364, type: !16460)
!17126 = !DILocalVariable(name: "dt", scope: !17121, file: !2580, line: 366, type: !104)
!17127 = !DILocation(line: 0, scope: !17121)
!17128 = !DILocation(line: 368, column: 6, scope: !17121)
!17129 = !DILocation(line: 371, column: 10, scope: !17130)
!17130 = distinct !DILexicalBlock(scope: !17131, file: !2580, line: 370, column: 47)
!17131 = distinct !DILexicalBlock(scope: !17132, file: !2580, line: 370, column: 13)
!17132 = distinct !DILexicalBlock(scope: !17121, file: !2580, line: 368, column: 6)
!17133 = !DILocation(line: 371, column: 3, scope: !17130)
!17134 = !DILocation(line: 376, column: 58, scope: !17135)
!17135 = distinct !DILexicalBlock(scope: !17136, file: !2580, line: 376, column: 7)
!17136 = distinct !DILexicalBlock(scope: !17131, file: !2580, line: 372, column: 9)
!17137 = !DILocation(line: 376, column: 7, scope: !17136)
!17138 = !DILocation(line: 376, column: 43, scope: !17135)
!17139 = !DILocation(line: 377, column: 4, scope: !17140)
!17140 = distinct !DILexicalBlock(scope: !17135, file: !2580, line: 376, column: 64)
!17141 = !DILocation(line: 379, column: 10, scope: !17136)
!17142 = !DILocation(line: 379, column: 33, scope: !17136)
!17143 = !DILocation(line: 379, column: 31, scope: !17136)
!17144 = !DILocation(line: 379, column: 3, scope: !17136)
!17145 = !DILocation(line: 0, scope: !17132)
!17146 = !DILocation(line: 381, column: 1, scope: !17121)
!17147 = distinct !DISubprogram(name: "boot_banner", scope: !17148, file: !17148, line: 26, type: !3169, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3155, retainedNodes: !2100)
!17148 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17149 = !DILocation(line: 34, column: 2, scope: !17147)
!17150 = !DILocation(line: 36, column: 1, scope: !17147)
