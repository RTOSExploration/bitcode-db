; ModuleID = 'build/96b_stm32_sensor_mez/echo_bot/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type {}
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.z_heap_bucket = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_PeriphCLKInitTypeDef = type { i32, %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLSAIInitTypeDef, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.RCC_PLLI2SInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.RCC_PLLSAIInitTypeDef = type { i32, i32, i32, i32 }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231992 to i8*), void (i8*)* inttoptr (i32 134229535 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231992 to i8*), void (i8*)* inttoptr (i32 134229515 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231992 to i8*), void (i8*)* inttoptr (i32 134229505 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231992 to i8*), void (i8*)* inttoptr (i32 134229605 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231992 to i8*), void (i8*)* inttoptr (i32 134229595 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231992 to i8*), void (i8*)* inttoptr (i32 134229585 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231992 to i8*), void (i8*)* inttoptr (i32 134229575 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231992 to i8*), void (i8*)* inttoptr (i32 134229565 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231992 to i8*), void (i8*)* inttoptr (i32 134229555 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232280 to i8*), void (i8*)* inttoptr (i32 134230881 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232256 to i8*), void (i8*)* inttoptr (i32 134230881 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134232232 to i8*), void (i8*)* inttoptr (i32 134230881 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231992 to i8*), void (i8*)* inttoptr (i32 134229545 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231992 to i8*), void (i8*)* inttoptr (i32 134229525 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134232208 to i8*), void (i8*)* inttoptr (i32 134230881 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [49 x i8*] [i8* bitcast (%struct.k_msgq* @uart_msgq to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_36 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_90 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_91 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_92 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_93 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_94 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_95 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_96 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_90 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_91 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_92 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_93 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_94 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_95 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_96 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_42 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_45 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_48 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_52 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_2.__isr_uart_stm32_isr_irq_2 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_3.__isr_uart_stm32_isr_irq_3 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@uart_msgq = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @uart_msgq, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @uart_msgq, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 32, i32 10, i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i32 0, i32 0), i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i64 1, i64 0), i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i32 0, i32 0), i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static.uart_msgq", align 4, !dbg !25
@_k_fifo_buf_uart_msgq = internal global [320 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 4, !dbg !211
@rx_buf_pos = internal unnamed_addr global i32 0, align 4, !dbg !221
@rx_buf = internal global [32 x i8] zeroinitializer, align 1, !dbg !216
@.str = private unnamed_addr constant [23 x i8] c"UART device not found!\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"Hello! I'm your echo bot.\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [37 x i8] c"Tell me something and press enter:\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"Echo: \00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !262
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !272
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !316
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !345
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !351
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !490
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !526
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i32 0, i32 0), %struct.z_heap_bucket { i32 117571620 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.30, i32 0, i32 0), %struct.z_heap_bucket { i32 285933600 } }], align 4, !dbg !536
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !541
@.str.29 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.30 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !561
@__devicehdl_dts_ord_36 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !763
@.str.31 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_36 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !724
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !707
@__device_dts_ord_36 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.31, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_36, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_36, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !680
@__init___device_dts_ord_36 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_36 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !696
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !726
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !740
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !742
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !744
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !746
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !748
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !750
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !752
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !754
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !756
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_36 to i8*) }, section ".intList", align 4, !dbg !758
@__devicehdl_dts_ord_8 = dso_local constant [15 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 12, i16 13, i16 14, i16 32767], section ".__device_handles_pass2", align 2, !dbg !768
@.str.33 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !801
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !899
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !888
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !940
@__devicehdl_dts_ord_90 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !788
@.str.46 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1034
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1312
@__devstate_dts_ord_90 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1282
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1268
@__init___device_dts_ord_90 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_90 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1213
@__devicehdl_dts_ord_91 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !786
@.str.1.47 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1314
@__devstate_dts_ord_91 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1286
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1284
@__init___device_dts_ord_91 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_91 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1227
@__devicehdl_dts_ord_92 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !784
@.str.2.48 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1327
@__devstate_dts_ord_92 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1290
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1288
@__init___device_dts_ord_92 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_92 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1233
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !782
@.str.3.49 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1329
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1294
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1292
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1242
@__devicehdl_dts_ord_93 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !780
@.str.4.50 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1331
@__devstate_dts_ord_93 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1298
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1296
@__init___device_dts_ord_93 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_93 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1248
@__devicehdl_dts_ord_94 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !778
@.str.5.51 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1333
@__devstate_dts_ord_94 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1302
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1300
@__init___device_dts_ord_94 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_94 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1254
@__devicehdl_dts_ord_95 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !776
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1335
@__devstate_dts_ord_95 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1306
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1304
@__init___device_dts_ord_95 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_95 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1260
@__devicehdl_dts_ord_96 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !774
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1337
@__devstate_dts_ord_96 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1310
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1308
@__init___device_dts_ord_96 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_96 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1266
@__devicehdl_dts_ord_52 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !796
@.str.55 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_52, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1339
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1599
@__devstate_dts_ord_52 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1543
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1601
@__device_dts_ord_52 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_52, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_52, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1516
@__init___device_dts_ord_52 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_52 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1518
@__devicehdl_dts_ord_42 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !794
@.str.1.56 = private unnamed_addr constant [16 x i8] c"serial@40004400\00", align 1
@uart_stm32_cfg_1 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073759232 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_1, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_42, void (%struct.device*)* @uart_stm32_irq_config_func_1 }, align 4, !dbg !1610
@__devstate_dts_ord_42 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1545
@uart_stm32_data_1 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1642
@__device_dts_ord_42 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.56, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_1 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_42, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_1 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_42, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1527
@__init___device_dts_ord_42 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_42 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1529
@__devicehdl_dts_ord_45 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !792
@.str.2.57 = private unnamed_addr constant [16 x i8] c"serial@40004800\00", align 1
@uart_stm32_cfg_2 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073760256 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_2, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_45, void (%struct.device*)* @uart_stm32_irq_config_func_2 }, align 4, !dbg !1644
@__devstate_dts_ord_45 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1547
@uart_stm32_data_2 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1659
@__device_dts_ord_45 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.57, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_2 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_45, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_2 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_45, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1533
@__init___device_dts_ord_45 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_45 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1535
@__devicehdl_dts_ord_48 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !790
@.str.3.60 = private unnamed_addr constant [16 x i8] c"serial@40004c00\00", align 1
@uart_stm32_cfg_3 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073761280 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_3, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_48, void (%struct.device*)* @uart_stm32_irq_config_func_3 }, align 4, !dbg !1661
@__devstate_dts_ord_48 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1549
@uart_stm32_data_3 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1676
@__device_dts_ord_48 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.60, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_3 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_48, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_3 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_48, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1539
@__init___device_dts_ord_48 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_48 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1541
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1551
@__pinctrl_dev_config__device_dts_ord_52 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_52, i32 0, i32 0), i8 1 }, align 4, !dbg !1559
@__pinctrl_states__device_dts_ord_52 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_52, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1582
@__pinctrl_state_pins_0__device_dts_ord_52 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1585
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 37, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_52 to i8*) }, section ".intList", align 4, !dbg !1588
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([15 x i16], [15 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !872
@pclken_1 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 131072 }], align 4, !dbg !1629
@__pinctrl_dev_config__device_dts_ord_42 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_42, i32 0, i32 0), i8 1 }, align 4, !dbg !1631
@__pinctrl_states__device_dts_ord_42 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_42, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1633
@__pinctrl_state_pins_0__device_dts_ord_42 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1703, i32 512 }, %struct._thread_arch { i32 1735, i32 0 }], align 4, !dbg !1635
@uart_stm32_irq_config_func_1.__isr_uart_stm32_isr_irq_1 = internal global %struct._isr_list { i32 38, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_42 to i8*) }, section ".intList", align 4, !dbg !1637
@pclken_2 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 262144 }], align 4, !dbg !1646
@__pinctrl_dev_config__device_dts_ord_45 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_45, i32 0, i32 0), i8 1 }, align 4, !dbg !1648
@__pinctrl_states__device_dts_ord_45 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_45, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1650
@__pinctrl_state_pins_0__device_dts_ord_45 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1799, i32 512 }, %struct._thread_arch { i32 1831, i32 0 }], align 4, !dbg !1652
@uart_stm32_irq_config_func_2.__isr_uart_stm32_isr_irq_2 = internal global %struct._isr_list { i32 39, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_45 to i8*) }, section ".intList", align 4, !dbg !1654
@pclken_3 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 64, i32 524288 }], align 4, !dbg !1663
@__pinctrl_dev_config__device_dts_ord_48 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_48, i32 0, i32 0), i8 1 }, align 4, !dbg !1665
@__pinctrl_states__device_dts_ord_48 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_48, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1667
@__pinctrl_state_pins_0__device_dts_ord_48 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 1352, i32 512 }, %struct._thread_arch { i32 1384, i32 0 }], align 4, !dbg !1669
@uart_stm32_irq_config_func_3.__isr_uart_stm32_isr_irq_3 = internal global %struct._isr_list { i32 52, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_48 to i8*) }, section ".intList", align 4, !dbg !1671
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1678
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1787
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1789
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1785
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1756
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_90, %struct.device* @__device_dts_ord_91, %struct.device* @__device_dts_ord_92, %struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_93, %struct.device* @__device_dts_ord_94, %struct.device* @__device_dts_ord_95, %struct.device* @__device_dts_ord_96, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1791
@__device_dts_ord_90 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_90, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_90, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1211
@__device_dts_ord_91 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.47, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_91, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_91, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1225
@__device_dts_ord_92 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.48, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_92, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_92, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1231
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.49, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1240
@__device_dts_ord_93 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.50, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_93, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_93, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1246
@__device_dts_ord_94 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.51, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_94, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_94, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1252
@__device_dts_ord_95 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_95, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_95, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1258
@__device_dts_ord_96 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_96, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_96, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1264
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1881
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1925
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1928
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1934
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1940
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2149
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2158
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2165
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2170
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.110 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.113, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.114, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.115, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.116, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.117, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.111, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.118, i32 0, i32 0)], align 4, !dbg !2198
@.str.112 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.113 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.114 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.115 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.116 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.117 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.111 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.118 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2310
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2323
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2431
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2434
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2436
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2163
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2160
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2438
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2474
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2027
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2472
@.str.186 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2477
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3209 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3213, !srcloc !3214
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3215, !srcloc !3216
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3217, !srcloc !3218
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3219, !srcloc !3220
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3221, !srcloc !3222
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3223, !srcloc !3224
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3225, !srcloc !3226
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3227, !srcloc !3228
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3229, !srcloc !3230
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3231, !srcloc !3232
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3233, !srcloc !3234
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3235, !srcloc !3236
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3237, !srcloc !3238
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3239, !srcloc !3240
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3241, !srcloc !3242
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3243, !srcloc !3244
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3245, !srcloc !3246
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3247, !srcloc !3248
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3249, !srcloc !3250
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3251, !srcloc !3252
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3253, !srcloc !3254
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3255, !srcloc !3256
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3257, !srcloc !3258
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3259, !srcloc !3260
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3261, !srcloc !3262
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3263, !srcloc !3264
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3265, !srcloc !3266
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3267, !srcloc !3270
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3271, !srcloc !3272
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3273, !srcloc !3274
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3275, !srcloc !3276
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3277, !srcloc !3278
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3279, !srcloc !3280
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3281, !srcloc !3282
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3283, !srcloc !3284
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3285, !srcloc !3286
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3287, !srcloc !3288
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3289, !srcloc !3290
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3291, !srcloc !3292
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3293, !srcloc !3294
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3295, !srcloc !3296
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3297, !srcloc !3298
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3299, !srcloc !3300
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3301, !srcloc !3302
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3303, !srcloc !3304
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3305, !srcloc !3306
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3307, !srcloc !3308
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3309, !srcloc !3310
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3311, !srcloc !3312
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3313, !srcloc !3314
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3315, !srcloc !3316
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3317, !srcloc !3318
  ret void, !dbg !3319
}

; Function Attrs: noinline nounwind optsize
define dso_local void @serial_cb(%struct.device* nocapture readnone %0, i8* nocapture readnone %1) #1 !dbg !3322 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !3324, metadata !DIExpression()), !dbg !3327
  call void @llvm.dbg.value(metadata i8* undef, metadata !3325, metadata !DIExpression()), !dbg !3327
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #25, !dbg !3328
  %4 = tail call fastcc i32 @uart_irq_update() #26, !dbg !3329
  %5 = icmp eq i32 %4, 0, !dbg !3329
  br i1 %5, label %27, label %6, !dbg !3331

6:                                                ; preds = %2
  %7 = call fastcc i32 @uart_irq_rx_ready() #26, !dbg !3332
  %8 = icmp eq i32 %7, 0, !dbg !3333
  br i1 %8, label %27, label %9, !dbg !3333

9:                                                ; preds = %6, %24
  call void @llvm.dbg.value(metadata i8* %3, metadata !3326, metadata !DIExpression(DW_OP_deref)), !dbg !3327
  call fastcc void @uart_fifo_read(i8* noundef nonnull %3) #26, !dbg !3334
  %10 = load i8, i8* %3, align 1, !dbg !3336
  call void @llvm.dbg.value(metadata i8 %10, metadata !3326, metadata !DIExpression()), !dbg !3327
  %11 = icmp eq i8 %10, 10, !dbg !3338
  %12 = icmp eq i8 %10, 13
  %13 = or i1 %11, %12, !dbg !3339
  %14 = load i32, i32* @rx_buf_pos, align 4
  %15 = icmp sgt i32 %14, 0
  %16 = select i1 %13, i1 %15, i1 false, !dbg !3339
  br i1 %16, label %17, label %19, !dbg !3339

17:                                               ; preds = %9
  %18 = getelementptr inbounds [32 x i8], [32 x i8]* @rx_buf, i32 0, i32 %14, !dbg !3340
  store i8 0, i8* %18, align 1, !dbg !3342
  call fastcc void @k_msgq_put() #26, !dbg !3343
  store i32 0, i32* @rx_buf_pos, align 4, !dbg !3344
  br label %24, !dbg !3345

19:                                               ; preds = %9
  %20 = icmp ult i32 %14, 31, !dbg !3346
  br i1 %20, label %21, label %24, !dbg !3348

21:                                               ; preds = %19
  %22 = add nuw nsw i32 %14, 1, !dbg !3349
  store i32 %22, i32* @rx_buf_pos, align 4, !dbg !3349
  %23 = getelementptr inbounds [32 x i8], [32 x i8]* @rx_buf, i32 0, i32 %14, !dbg !3351
  store i8 %10, i8* %23, align 1, !dbg !3352
  br label %24, !dbg !3353

24:                                               ; preds = %19, %21, %17
  %25 = call fastcc i32 @uart_irq_rx_ready() #26, !dbg !3332
  %26 = icmp eq i32 %25, 0, !dbg !3333
  br i1 %26, label %27, label %9, !dbg !3333, !llvm.loop !3354

27:                                               ; preds = %24, %6, %2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25, !dbg !3356
  ret void, !dbg !3356
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update() unnamed_addr #1 !dbg !3357 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !3360, metadata !DIExpression()), !dbg !3361
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3362, !srcloc !3364
  %1 = tail call fastcc i32 @z_impl_uart_irq_update() #26, !dbg !3365
  ret i32 %1, !dbg !3366
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready() unnamed_addr #1 !dbg !3367 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !3369, metadata !DIExpression()), !dbg !3371
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3372
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3370, metadata !DIExpression()), !dbg !3371
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !3373
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !3373
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !3375
  br i1 %4, label %7, label %5, !dbg !3376

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_48) #27, !dbg !3377
  br label %7, !dbg !3378

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !3371
  ret i32 %8, !dbg !3379
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_fifo_read(i8* noundef %0) unnamed_addr #1 !dbg !3380 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !3382, metadata !DIExpression()), !dbg !3386
  call void @llvm.dbg.value(metadata i8* %0, metadata !3383, metadata !DIExpression()), !dbg !3386
  call void @llvm.dbg.value(metadata i32 1, metadata !3384, metadata !DIExpression()), !dbg !3386
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3387
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !3385, metadata !DIExpression()), !dbg !3386
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !3388
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !3388
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !3390
  br i1 %5, label %8, label %6, !dbg !3391

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8* noundef %0, i32 noundef 1) #27, !dbg !3392
  br label %8, !dbg !3393

8:                                                ; preds = %1, %6
  ret void, !dbg !3394
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msgq_put() unnamed_addr #1 !dbg !3395 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3407, metadata !DIExpression()), !dbg !3408
  call void @llvm.dbg.value(metadata %struct.k_msgq* @uart_msgq, metadata !3405, metadata !DIExpression()), !dbg !3408
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([32 x i8], [32 x i8]* @rx_buf, i32 0, i32 0), metadata !3406, metadata !DIExpression()), !dbg !3408
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3409, !srcloc !3411
  %1 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef nonnull @uart_msgq, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @rx_buf, i32 0, i32 0), [1 x i64] zeroinitializer) #27, !dbg !3412
  ret void, !dbg !3413
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update() unnamed_addr #1 !dbg !3414 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !3416, metadata !DIExpression()), !dbg !3418
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3419
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3417, metadata !DIExpression()), !dbg !3418
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !3420
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !3420
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !3422
  br i1 %4, label %7, label %5, !dbg !3423

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_48) #27, !dbg !3424
  br label %7, !dbg !3425

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !3418
  ret i32 %8, !dbg !3426
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_uart(i8* noundef %0) local_unnamed_addr #1 !dbg !3427 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3431, metadata !DIExpression()), !dbg !3435
  %2 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !3436
  call void @llvm.dbg.value(metadata i32 %2, metadata !3432, metadata !DIExpression()), !dbg !3435
  call void @llvm.dbg.value(metadata i32 0, metadata !3433, metadata !DIExpression()), !dbg !3437
  %3 = icmp sgt i32 %2, 0, !dbg !3438
  br i1 %3, label %5, label %4, !dbg !3440

4:                                                ; preds = %5, %1
  ret void, !dbg !3441

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %9, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3433, metadata !DIExpression()), !dbg !3437
  %7 = getelementptr inbounds i8, i8* %0, i32 %6, !dbg !3442
  %8 = load i8, i8* %7, align 1, !dbg !3442
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %8) #26, !dbg !3444
  %9 = add nuw nsw i32 %6, 1, !dbg !3445
  call void @llvm.dbg.value(metadata i32 %9, metadata !3433, metadata !DIExpression()), !dbg !3437
  %10 = icmp eq i32 %9, %2, !dbg !3438
  br i1 %10, label %4, label %5, !dbg !3440, !llvm.loop !3446
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !3448 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !3450, metadata !DIExpression()), !dbg !3452
  call void @llvm.dbg.value(metadata i8 %0, metadata !3451, metadata !DIExpression()), !dbg !3452
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3453, !srcloc !3455
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !3456
  ret void, !dbg !3457
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !3458 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !3460, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.value(metadata i8 %0, metadata !3461, metadata !DIExpression()), !dbg !3463
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3464
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !3462, metadata !DIExpression()), !dbg !3463
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !3465
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !3465
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #27, !dbg !3466
  ret void, !dbg !3467
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3468 {
  %1 = alloca [32 x i8], align 1
  %2 = getelementptr inbounds [32 x i8], [32 x i8]* %1, i32 0, i32 0, !dbg !3471
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #25, !dbg !3471
  call void @llvm.dbg.declare(metadata [32 x i8]* %1, metadata !3470, metadata !DIExpression()), !dbg !3472
  %3 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !3473
  br i1 %3, label %5, label %4, !dbg !3475

4:                                                ; preds = %0
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0)) #27, !dbg !3476
  br label %11, !dbg !3478

5:                                                ; preds = %0
  tail call fastcc void @uart_irq_callback_user_data_set() #26, !dbg !3479
  tail call fastcc void @uart_irq_rx_enable() #26, !dbg !3480
  tail call void @print_uart(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0)) #26, !dbg !3481
  tail call void @print_uart(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i32 0, i32 0)) #26, !dbg !3482
  %6 = call fastcc i32 @k_msgq_get(i8* noundef nonnull %2) #26, !dbg !3483
  %7 = icmp eq i32 %6, 0, !dbg !3484
  br i1 %7, label %8, label %11, !dbg !3485

8:                                                ; preds = %5, %8
  call void @print_uart(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0)) #26, !dbg !3486
  call void @print_uart(i8* noundef nonnull %2) #26, !dbg !3488
  call void @print_uart(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i32 0, i32 0)) #26, !dbg !3489
  %9 = call fastcc i32 @k_msgq_get(i8* noundef nonnull %2) #26, !dbg !3483
  %10 = icmp eq i32 %9, 0, !dbg !3484
  br i1 %10, label %8, label %11, !dbg !3485, !llvm.loop !3490

11:                                               ; preds = %8, %5, %4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #25, !dbg !3492
  ret void, !dbg !3492
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !3493 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !3498, metadata !DIExpression()), !dbg !3499
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3500, !srcloc !3502
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !3503
  ret i1 %1, !dbg !3504
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set() unnamed_addr #1 !dbg !3505 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !3507, metadata !DIExpression()), !dbg !3511
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @serial_cb, metadata !3508, metadata !DIExpression()), !dbg !3511
  call void @llvm.dbg.value(metadata i8* null, metadata !3509, metadata !DIExpression()), !dbg !3511
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3512
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3510, metadata !DIExpression()), !dbg !3511
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !3513
  br i1 %2, label %8, label %3, !dbg !3515

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !3516
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !3516
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !3517
  br i1 %6, label %8, label %7, !dbg !3518

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_48, void (%struct.device*, i8*)* noundef nonnull @serial_cb, i8* noundef null) #27, !dbg !3519
  br label %8, !dbg !3521

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !3522
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable() unnamed_addr #1 !dbg !3523 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !3525, metadata !DIExpression()), !dbg !3526
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3527, !srcloc !3529
  tail call fastcc void @z_impl_uart_irq_rx_enable() #26, !dbg !3530
  ret void, !dbg !3531
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(i8* noundef %0) unnamed_addr #1 !dbg !3532 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3538, metadata !DIExpression()), !dbg !3539
  call void @llvm.dbg.value(metadata %struct.k_msgq* @uart_msgq, metadata !3536, metadata !DIExpression()), !dbg !3539
  call void @llvm.dbg.value(metadata i8* %0, metadata !3537, metadata !DIExpression()), !dbg !3539
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3540, !srcloc !3542
  %2 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef nonnull @uart_msgq, i8* noundef %0, [1 x i64] [i64 -1]) #27, !dbg !3543
  ret i32 %2, !dbg !3544
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable() unnamed_addr #1 !dbg !3545 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !3547, metadata !DIExpression()), !dbg !3549
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3550
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3548, metadata !DIExpression()), !dbg !3549
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !3551
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !3551
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !3553
  br i1 %4, label %6, label %5, !dbg !3554

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_48) #27, !dbg !3555
  br label %6, !dbg !3557

6:                                                ; preds = %5, %0
  ret void, !dbg !3558
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !3559 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !3561, metadata !DIExpression()), !dbg !3562
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #27, !dbg !3563
  ret i1 %1, !dbg !3564
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3565 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3567, metadata !DIExpression()), !dbg !3568
  ret i32 0, !dbg !3569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3570 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3574, metadata !DIExpression()), !dbg !3575
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3576
  ret void, !dbg !3577
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3578 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3581
  ret i8* %1, !dbg !3582
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3583 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3595, metadata !DIExpression()), !dbg !3604
  call void @llvm.dbg.value(metadata i8* %0, metadata !3594, metadata !DIExpression()), !dbg !3604
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3605
  ret void, !dbg !3607
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3608 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3612, metadata !DIExpression()), !dbg !3614
  call void @llvm.dbg.value(metadata i8* %1, metadata !3613, metadata !DIExpression()), !dbg !3614
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3615
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !3615
  ret i32 %4, !dbg !3616
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3617 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3629, metadata !DIExpression()), !dbg !3630
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3626, metadata !DIExpression()), !dbg !3630
  call void @llvm.dbg.value(metadata i8* %1, metadata !3627, metadata !DIExpression()), !dbg !3630
  call void @llvm.dbg.value(metadata i8* %2, metadata !3628, metadata !DIExpression()), !dbg !3630
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !3631
  ret void, !dbg !3632
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3633 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3637, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.value(metadata i32 %1, metadata !3638, metadata !DIExpression()), !dbg !3640
  call void @llvm.dbg.value(metadata i32 0, metadata !3639, metadata !DIExpression()), !dbg !3640
  %3 = icmp eq i32 %1, 0, !dbg !3641
  br i1 %3, label %13, label %4, !dbg !3644

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3639, metadata !DIExpression()), !dbg !3640
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3645
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3647
  %8 = load i8, i8* %7, align 1, !dbg !3647
  %9 = zext i8 %8 to i32, !dbg !3647
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !3645
  %11 = add nuw i32 %5, 1, !dbg !3648
  call void @llvm.dbg.value(metadata i32 %11, metadata !3639, metadata !DIExpression()), !dbg !3640
  %12 = icmp eq i32 %11, %1, !dbg !3641
  br i1 %12, label %13, label %4, !dbg !3644, !llvm.loop !3649

13:                                               ; preds = %4, %2
  ret void, !dbg !3651
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3652 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3656, metadata !DIExpression()), !dbg !3658
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3659
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3659
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3657, metadata !DIExpression()), !dbg !3660
  call void @llvm.va_start(i8* nonnull %3), !dbg !3661
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3662
  %5 = load i32, i32* %4, align 4, !dbg !3662
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3662
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3662
  call void @llvm.va_end(i8* nonnull %3), !dbg !3663
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3664
  ret void, !dbg !3664
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3665 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3669, metadata !DIExpression()), !dbg !3674
  call void @llvm.dbg.value(metadata i32 %1, metadata !3670, metadata !DIExpression()), !dbg !3674
  call void @llvm.dbg.value(metadata i8* %2, metadata !3671, metadata !DIExpression()), !dbg !3674
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3675
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3675
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3672, metadata !DIExpression()), !dbg !3676
  call void @llvm.va_start(i8* nonnull %5), !dbg !3677
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3678
  %7 = load i32, i32* %6, align 4, !dbg !3678
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3678
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3678
  call void @llvm.dbg.value(metadata i32 %9, metadata !3673, metadata !DIExpression()), !dbg !3674
  call void @llvm.va_end(i8* nonnull %5), !dbg !3679
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3680
  ret i32 %9, !dbg !3681
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3682 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3689, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.value(metadata i8* %0, metadata !3686, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.value(metadata i32 %1, metadata !3687, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.value(metadata i8* %2, metadata !3688, metadata !DIExpression()), !dbg !3696
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3697
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3697
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3690, metadata !DIExpression()), !dbg !3698
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3699
  store i8* %0, i8** %7, align 4, !dbg !3699
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3699
  store i32 %1, i32* %8, align 4, !dbg !3699
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3699
  store i32 0, i32* %9, align 4, !dbg !3699
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3700
  %10 = load i32, i32* %9, align 4, !dbg !3701
  %11 = load i32, i32* %8, align 4, !dbg !3703
  %12 = icmp slt i32 %10, %11, !dbg !3704
  br i1 %12, label %13, label %15, !dbg !3705

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3706
  store i8 0, i8* %14, align 1, !dbg !3708
  br label %15, !dbg !3709

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3710
  ret i32 %10, !dbg !3711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3717, metadata !DIExpression()), !dbg !3719
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3718, metadata !DIExpression()), !dbg !3719
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3720
  %4 = load i8*, i8** %3, align 4, !dbg !3720
  %5 = icmp eq i8* %4, null, !dbg !3722
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3723
  br i1 %5, label %12, label %8, !dbg !3724

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3725
  %10 = load i32, i32* %9, align 4, !dbg !3725
  %11 = icmp slt i32 %7, %10, !dbg !3726
  br i1 %11, label %15, label %12, !dbg !3727

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3728
  %14 = add nsw i32 %7, 1, !dbg !3730
  store i32 %14, i32* %13, align 4, !dbg !3730
  br label %25, !dbg !3731

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3732
  %17 = icmp eq i32 %7, %16, !dbg !3734
  br i1 %17, label %18, label %21, !dbg !3735

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3736
  store i32 %19, i32* %6, align 4, !dbg !3736
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3738
  store i8 0, i8* %20, align 1, !dbg !3739
  br label %25, !dbg !3740

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3741
  %23 = add nsw i32 %7, 1, !dbg !3743
  store i32 %23, i32* %6, align 4, !dbg !3743
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3744
  store i8 %22, i8* %24, align 1, !dbg !3745
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3746
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3747 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3757, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8* %1, metadata !3758, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8* %2, metadata !3759, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i8* %3, metadata !3760, metadata !DIExpression()), !dbg !3761
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !3762
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !3763
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3764
  unreachable, !dbg !3765
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3766 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !3870
  ret %struct.k_thread* %1, !dbg !3871
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3872 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3876, metadata !DIExpression()), !dbg !3877
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3878, !srcloc !3880
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !3881
  ret void, !dbg !3882
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3883 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3884, !srcloc !3886
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !3887
  ret %struct.k_thread* %1, !dbg !3888
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3889 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3900, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i8* %1, metadata !3901, metadata !DIExpression()), !dbg !3904
  %3 = icmp eq i8* %1, null, !dbg !3905
  br i1 %3, label %8, label %4, !dbg !3907

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3908
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3908
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3902, metadata !DIExpression()), !dbg !3904
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3909, !range !3910
  call void @llvm.dbg.value(metadata i32 %7, metadata !3903, metadata !DIExpression()), !dbg !3904
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3911
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3912
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3913
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3914 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3918, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata i8* %1, metadata !3919, metadata !DIExpression()), !dbg !3922
  call void @llvm.dbg.value(metadata i8* %1, metadata !3920, metadata !DIExpression()), !dbg !3922
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3923
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3921, metadata !DIExpression()), !dbg !3922
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3924
  %5 = ptrtoint i8* %4 to i32, !dbg !3925
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3925
  %7 = sub i32 %5, %6, !dbg !3925
  %8 = lshr i32 %7, 3, !dbg !3926
  ret i32 %8, !dbg !3927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !3928 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3932, metadata !DIExpression()), !dbg !3937
  call void @llvm.dbg.value(metadata i32 %1, metadata !3933, metadata !DIExpression()), !dbg !3937
  call void @llvm.dbg.value(metadata i1 %2, metadata !3934, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3937
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3938
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3935, metadata !DIExpression()), !dbg !3937
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3936, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3937
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3939
  %6 = bitcast i8* %5 to i16*, !dbg !3939
  %7 = load i16, i16* %6, align 2, !dbg !3939
  %8 = and i16 %7, -2, !dbg !3943
  %9 = zext i1 %2 to i16, !dbg !3943
  %10 = or i16 %8, %9, !dbg !3943
  store i16 %10, i16* %6, align 2, !dbg !3939
  ret void, !dbg !3944
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3945 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3949, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.value(metadata i32 %1, metadata !3950, metadata !DIExpression()), !dbg !3951
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3952
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3954
  br i1 %4, label %7, label %5, !dbg !3955

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3956
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3958
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3959
  br label %7, !dbg !3960

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3961, !range !3963
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3964
  br i1 %9, label %13, label %10, !dbg !3965

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3966
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3968, !range !3963
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3969
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3970
  call void @llvm.dbg.value(metadata i32 %12, metadata !3950, metadata !DIExpression()), !dbg !3951
  br label %13, !dbg !3971

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3950, metadata !DIExpression()), !dbg !3951
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3972
  ret void, !dbg !3973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3974 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3978, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.value(metadata i32 %1, metadata !3979, metadata !DIExpression()), !dbg !3980
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3981
  %4 = add i32 %3, %1, !dbg !3982
  ret i32 %4, !dbg !3983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3984 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3988, metadata !DIExpression()), !dbg !3990
  call void @llvm.dbg.value(metadata i32 %1, metadata !3989, metadata !DIExpression()), !dbg !3990
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3991
  %4 = and i32 %3, 1, !dbg !3992
  %5 = icmp ne i32 %4, 0, !dbg !3991
  ret i1 %5, !dbg !3993
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3994 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3996, metadata !DIExpression()), !dbg !4001
  call void @llvm.dbg.value(metadata i32 %1, metadata !3997, metadata !DIExpression()), !dbg !4001
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4002, !range !4003
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4004
  call void @llvm.dbg.value(metadata i32 %4, metadata !3998, metadata !DIExpression()), !dbg !4005
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4006
  ret void, !dbg !4007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4008 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4012, metadata !DIExpression()), !dbg !4017
  call void @llvm.dbg.value(metadata i32 %1, metadata !4013, metadata !DIExpression()), !dbg !4017
  call void @llvm.dbg.value(metadata i32 %2, metadata !4014, metadata !DIExpression()), !dbg !4017
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4018
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4019
  %6 = add i32 %5, %4, !dbg !4020
  call void @llvm.dbg.value(metadata i32 %6, metadata !4015, metadata !DIExpression()), !dbg !4017
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !4021
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4022
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4023
  ret void, !dbg !4024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4025 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4027, metadata !DIExpression()), !dbg !4029
  call void @llvm.dbg.value(metadata i32 %1, metadata !4028, metadata !DIExpression()), !dbg !4029
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !4030
  %4 = sub i32 %1, %3, !dbg !4031
  ret i32 %4, !dbg !4032
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !4033 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4035, metadata !DIExpression()), !dbg !4040
  call void @llvm.dbg.value(metadata i32 %1, metadata !4036, metadata !DIExpression()), !dbg !4040
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4041, !range !4003
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !4042
  call void @llvm.dbg.value(metadata i32 %4, metadata !4037, metadata !DIExpression()), !dbg !4043
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !4044
  ret void, !dbg !4045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !4046 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4050, metadata !DIExpression()), !dbg !4052
  call void @llvm.dbg.value(metadata i32 %1, metadata !4051, metadata !DIExpression()), !dbg !4052
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !4053
  %4 = lshr i32 %3, 1, !dbg !4054
  ret i32 %4, !dbg !4055
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !4056 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4060, metadata !DIExpression()), !dbg !4063
  call void @llvm.dbg.value(metadata i32 %1, metadata !4061, metadata !DIExpression()), !dbg !4063
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !4064
  %4 = add i32 %1, 1, !dbg !4065
  %5 = sub i32 %4, %3, !dbg !4066
  call void @llvm.dbg.value(metadata i32 %5, metadata !4062, metadata !DIExpression()), !dbg !4063
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !4067, !range !4068
  %7 = sub nsw i32 31, %6, !dbg !4069
  ret i32 %7, !dbg !4070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4071 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4075, metadata !DIExpression()), !dbg !4084
  call void @llvm.dbg.value(metadata i32 %1, metadata !4076, metadata !DIExpression()), !dbg !4084
  call void @llvm.dbg.value(metadata i32 %2, metadata !4077, metadata !DIExpression()), !dbg !4084
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !4078, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4084
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !4085
  %5 = load i32, i32* %4, align 4, !dbg !4085
  %6 = icmp eq i32 %5, 0, !dbg !4086
  br i1 %6, label %7, label %12, !dbg !4087

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4088
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4090
  %10 = load i32, i32* %9, align 4, !dbg !4091
  %11 = or i32 %10, %8, !dbg !4091
  store i32 %11, i32* %9, align 4, !dbg !4091
  store i32 %1, i32* %4, align 4, !dbg !4092
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !4093
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !4094
  br label %14, !dbg !4095

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !4080, metadata !DIExpression()), !dbg !4096
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !4097, !range !4098
  call void @llvm.dbg.value(metadata i32 %13, metadata !4083, metadata !DIExpression()), !dbg !4096
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !4099
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4100
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !4101
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !4102
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !4103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4104 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4106, metadata !DIExpression()), !dbg !4109
  call void @llvm.dbg.value(metadata i32 %1, metadata !4107, metadata !DIExpression()), !dbg !4109
  call void @llvm.dbg.value(metadata i32 %2, metadata !4108, metadata !DIExpression()), !dbg !4109
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !4110
  ret void, !dbg !4111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4112 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4114, metadata !DIExpression()), !dbg !4117
  call void @llvm.dbg.value(metadata i32 %1, metadata !4115, metadata !DIExpression()), !dbg !4117
  call void @llvm.dbg.value(metadata i32 %2, metadata !4116, metadata !DIExpression()), !dbg !4117
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !4118
  ret void, !dbg !4119
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4120 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4122, metadata !DIExpression()), !dbg !4124
  call void @llvm.dbg.value(metadata i32 %1, metadata !4123, metadata !DIExpression()), !dbg !4124
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !4125
  ret i32 %3, !dbg !4126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !4127 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4131, metadata !DIExpression()), !dbg !4136
  call void @llvm.dbg.value(metadata i32 %1, metadata !4132, metadata !DIExpression()), !dbg !4136
  call void @llvm.dbg.value(metadata i32 %2, metadata !4133, metadata !DIExpression()), !dbg !4136
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4137
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4134, metadata !DIExpression()), !dbg !4136
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4135, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4136
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4135, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4136
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4138
  call void @llvm.dbg.value(metadata i8* %5, metadata !4135, metadata !DIExpression()), !dbg !4136
  %6 = bitcast i8* %5 to i16*, !dbg !4139
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4142
  %8 = load i16, i16* %7, align 2, !dbg !4142
  %9 = zext i16 %8 to i32, !dbg !4142
  ret i32 %9, !dbg !4143
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !4144 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4148, metadata !DIExpression()), !dbg !4149
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4150
  ret %struct.chunk_unit_t* %2, !dbg !4151
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !4152 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4156, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.value(metadata i32 %1, metadata !4157, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.value(metadata i32 %2, metadata !4158, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.value(metadata i32 %3, metadata !4159, metadata !DIExpression()), !dbg !4162
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4163
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !4160, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !4161, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4162
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !4164
  call void @llvm.dbg.value(metadata i8* %6, metadata !4161, metadata !DIExpression()), !dbg !4162
  %7 = trunc i32 %3 to i16, !dbg !4165
  %8 = bitcast i8* %6 to i16*, !dbg !4168
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !4169
  store i16 %7, i16* %9, align 2, !dbg !4170
  ret void, !dbg !4171
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !4172 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4176, metadata !DIExpression()), !dbg !4177
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !4178
  ret i32 %2, !dbg !4179
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4180 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4184, metadata !DIExpression()), !dbg !4186
  call void @llvm.dbg.value(metadata i32 %1, metadata !4185, metadata !DIExpression()), !dbg !4186
  %3 = add i32 %1, 4, !dbg !4187
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !4188
  ret i32 %4, !dbg !4189
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !4190 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4194, metadata !DIExpression()), !dbg !4195
  %2 = add i32 %0, 7, !dbg !4196
  %3 = lshr i32 %2, 3, !dbg !4197
  ret i32 %3, !dbg !4198
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4199 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4203, metadata !DIExpression()), !dbg !4206
  call void @llvm.dbg.value(metadata i32 %1, metadata !4204, metadata !DIExpression()), !dbg !4206
  call void @llvm.dbg.value(metadata i32 %2, metadata !4205, metadata !DIExpression()), !dbg !4206
  %4 = shl i32 %2, 1, !dbg !4207
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !4208
  ret void, !dbg !4209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4210 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4212, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %1, metadata !4213, metadata !DIExpression()), !dbg !4215
  call void @llvm.dbg.value(metadata i32 %2, metadata !4214, metadata !DIExpression()), !dbg !4215
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !4216
  ret void, !dbg !4217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4218 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4220, metadata !DIExpression()), !dbg !4228
  call void @llvm.dbg.value(metadata i32 %1, metadata !4221, metadata !DIExpression()), !dbg !4228
  call void @llvm.dbg.value(metadata i32 %2, metadata !4222, metadata !DIExpression()), !dbg !4228
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4229
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4223, metadata !DIExpression()), !dbg !4228
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4230
  %6 = icmp eq i32 %5, %1, !dbg !4231
  br i1 %6, label %7, label %14, !dbg !4232

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4233
  %9 = xor i32 %8, -1, !dbg !4235
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4236
  %11 = load i32, i32* %10, align 4, !dbg !4237
  %12 = and i32 %11, %9, !dbg !4237
  store i32 %12, i32* %10, align 4, !dbg !4237
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4238
  store i32 0, i32* %13, align 4, !dbg !4239
  br label %17, !dbg !4240

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4241
  call void @llvm.dbg.value(metadata i32 %15, metadata !4224, metadata !DIExpression()), !dbg !4242
  call void @llvm.dbg.value(metadata i32 %5, metadata !4227, metadata !DIExpression()), !dbg !4242
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4243
  store i32 %5, i32* %16, align 4, !dbg !4244
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !4245
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !4246
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4247
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4248 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4250, metadata !DIExpression()), !dbg !4252
  call void @llvm.dbg.value(metadata i32 %1, metadata !4251, metadata !DIExpression()), !dbg !4252
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4253
  ret i32 %3, !dbg !4254
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4255 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4259, metadata !DIExpression()), !dbg !4266
  call void @llvm.dbg.value(metadata i8* %1, metadata !4260, metadata !DIExpression()), !dbg !4266
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4267
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4267
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4261, metadata !DIExpression()), !dbg !4266
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !4268
  call void @llvm.dbg.value(metadata i32 %5, metadata !4262, metadata !DIExpression()), !dbg !4266
  %6 = ptrtoint i8* %1 to i32, !dbg !4269
  call void @llvm.dbg.value(metadata i32 %6, metadata !4263, metadata !DIExpression()), !dbg !4266
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !4270
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4270
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4271
  call void @llvm.dbg.value(metadata i32 %9, metadata !4264, metadata !DIExpression()), !dbg !4266
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !4272
  %11 = shl i32 %10, 3, !dbg !4273
  call void @llvm.dbg.value(metadata i32 %11, metadata !4265, metadata !DIExpression()), !dbg !4266
  %12 = sub i32 %9, %6, !dbg !4274
  %13 = add i32 %12, %11, !dbg !4275
  ret i32 %13, !dbg !4276
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4277 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4281, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.value(metadata i32 %1, metadata !4282, metadata !DIExpression()), !dbg !4287
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4288
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4288
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4283, metadata !DIExpression()), !dbg !4287
  %5 = icmp eq i32 %1, 0, !dbg !4289
  br i1 %5, label %19, label %6, !dbg !4291

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4292
  br i1 %7, label %19, label %8, !dbg !4293

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4294, !range !3910
  call void @llvm.dbg.value(metadata i32 %9, metadata !4285, metadata !DIExpression()), !dbg !4287
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !4295
  call void @llvm.dbg.value(metadata i32 %10, metadata !4286, metadata !DIExpression()), !dbg !4287
  %11 = icmp eq i32 %10, 0, !dbg !4296
  br i1 %11, label %19, label %12, !dbg !4298

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4299
  %14 = icmp ugt i32 %13, %9, !dbg !4301
  br i1 %14, label %15, label %17, !dbg !4302

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4303
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !4305
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !4306
  br label %17, !dbg !4307

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !4308
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4309
  call void @llvm.dbg.value(metadata i8* %18, metadata !4284, metadata !DIExpression()), !dbg !4287
  br label %19, !dbg !4310

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4287
  ret i8* %20, !dbg !4311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4312 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4316, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata i32 %1, metadata !4317, metadata !DIExpression()), !dbg !4318
  %3 = lshr i32 %1, 3, !dbg !4319
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4320
  %5 = load i32, i32* %4, align 4, !dbg !4320
  %6 = icmp uge i32 %3, %5, !dbg !4321
  ret i1 %6, !dbg !4322
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4323 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4327, metadata !DIExpression()), !dbg !4342
  call void @llvm.dbg.value(metadata i32 %1, metadata !4328, metadata !DIExpression()), !dbg !4342
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4343
  call void @llvm.dbg.value(metadata i32 %3, metadata !4329, metadata !DIExpression()), !dbg !4342
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4330, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4342
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4344
  %5 = load i32, i32* %4, align 4, !dbg !4344
  %6 = icmp eq i32 %5, 0, !dbg !4345
  br i1 %6, label %19, label %7, !dbg !4346

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4347
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4348
  call void @llvm.dbg.value(metadata i32 %9, metadata !4334, metadata !DIExpression()), !dbg !4348
  call void @llvm.dbg.value(metadata i32 %8, metadata !4335, metadata !DIExpression()), !dbg !4349
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4350
  %11 = icmp ult i32 %10, %1, !dbg !4352
  br i1 %11, label %13, label %12, !dbg !4353

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !4354
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4356
  store i32 %14, i32* %4, align 4, !dbg !4357
  %15 = add nsw i32 %9, -1, !dbg !4358
  call void @llvm.dbg.value(metadata i32 %15, metadata !4334, metadata !DIExpression()), !dbg !4348
  %16 = icmp eq i32 %15, 0, !dbg !4358
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4359
  br i1 %18, label %19, label %7, !dbg !4359, !llvm.loop !4360

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4363
  %21 = load i32, i32* %20, align 4, !dbg !4363
  %22 = add nsw i32 %3, 1, !dbg !4364
  %23 = shl nsw i32 -1, %22, !dbg !4364
  %24 = and i32 %21, %23, !dbg !4365
  call void @llvm.dbg.value(metadata i32 %24, metadata !4337, metadata !DIExpression()), !dbg !4342
  %25 = icmp eq i32 %24, 0, !dbg !4366
  br i1 %25, label %30, label %26, !dbg !4367

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4368, !range !4068
  call void @llvm.dbg.value(metadata i32 %27, metadata !4338, metadata !DIExpression()), !dbg !4369
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4370
  %29 = load i32, i32* %28, align 4, !dbg !4370
  call void @llvm.dbg.value(metadata i32 %29, metadata !4341, metadata !DIExpression()), !dbg !4369
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !4371
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4342
  ret i32 %31, !dbg !4372
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4373 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4375, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 %1, metadata !4376, metadata !DIExpression()), !dbg !4381
  call void @llvm.dbg.value(metadata i32 %2, metadata !4377, metadata !DIExpression()), !dbg !4381
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4382
  call void @llvm.dbg.value(metadata i32 %4, metadata !4378, metadata !DIExpression()), !dbg !4381
  %5 = sub i32 %2, %1, !dbg !4383
  call void @llvm.dbg.value(metadata i32 %5, metadata !4379, metadata !DIExpression()), !dbg !4381
  %6 = sub i32 %4, %5, !dbg !4384
  call void @llvm.dbg.value(metadata i32 %6, metadata !4380, metadata !DIExpression()), !dbg !4381
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4385
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !4386
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !4387
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4388
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4389
  ret void, !dbg !4390
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4391 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4395, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i32 %1, metadata !4396, metadata !DIExpression()), !dbg !4399
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4400
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4397, metadata !DIExpression()), !dbg !4399
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4401
  call void @llvm.dbg.value(metadata i8* %4, metadata !4398, metadata !DIExpression()), !dbg !4399
  ret i8* %4, !dbg !4402
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4403 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4407, metadata !DIExpression()), !dbg !4419
  call void @llvm.dbg.value(metadata i32 %1, metadata !4408, metadata !DIExpression()), !dbg !4419
  call void @llvm.dbg.value(metadata i32 %2, metadata !4409, metadata !DIExpression()), !dbg !4419
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4420
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4420
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4410, metadata !DIExpression()), !dbg !4419
  %6 = sub i32 0, %1, !dbg !4421
  %7 = and i32 %6, %1, !dbg !4422
  call void @llvm.dbg.value(metadata i32 %7, metadata !4412, metadata !DIExpression()), !dbg !4419
  %8 = icmp eq i32 %7, %1, !dbg !4423
  br i1 %8, label %13, label %9, !dbg !4425

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4426
  call void @llvm.dbg.value(metadata i32 %10, metadata !4408, metadata !DIExpression()), !dbg !4419
  %11 = icmp ult i32 %7, 4, !dbg !4428
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4428
  br label %17, !dbg !4428

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4429
  br i1 %14, label %15, label %17, !dbg !4432

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !4433
  br label %57, !dbg !4435

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4419
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4436
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4408, metadata !DIExpression()), !dbg !4419
  call void @llvm.dbg.value(metadata i32 %19, metadata !4411, metadata !DIExpression()), !dbg !4419
  call void @llvm.dbg.value(metadata i32 %18, metadata !4412, metadata !DIExpression()), !dbg !4419
  %21 = icmp eq i32 %2, 0, !dbg !4437
  br i1 %21, label %57, label %22, !dbg !4439

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !4440
  br i1 %23, label %57, label %24, !dbg !4441

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4442
  %26 = add i32 %25, %20, !dbg !4443
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !4444, !range !3910
  call void @llvm.dbg.value(metadata i32 %27, metadata !4413, metadata !DIExpression()), !dbg !4419
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !4445
  call void @llvm.dbg.value(metadata i32 %28, metadata !4414, metadata !DIExpression()), !dbg !4419
  %29 = icmp eq i32 %28, 0, !dbg !4446
  br i1 %29, label %57, label %30, !dbg !4448

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4449
  call void @llvm.dbg.value(metadata i8* %31, metadata !4415, metadata !DIExpression()), !dbg !4419
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4450
  %33 = ptrtoint i8* %32 to i32, !dbg !4450
  %34 = add i32 %20, -1, !dbg !4450
  %35 = add i32 %34, %33, !dbg !4450
  %36 = sub i32 0, %20, !dbg !4450
  %37 = and i32 %35, %36, !dbg !4450
  %38 = inttoptr i32 %37 to i8*, !dbg !4451
  %39 = sub i32 0, %18, !dbg !4452
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4452
  call void @llvm.dbg.value(metadata i8* %40, metadata !4415, metadata !DIExpression()), !dbg !4419
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4453
  %42 = ptrtoint i8* %41 to i32, !dbg !4453
  %43 = add i32 %42, 7, !dbg !4453
  %44 = and i32 %43, -8, !dbg !4453
  call void @llvm.dbg.value(metadata i32 %44, metadata !4416, metadata !DIExpression()), !dbg !4419
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !4454
  call void @llvm.dbg.value(metadata i32 %45, metadata !4417, metadata !DIExpression()), !dbg !4419
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !4455
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4456
  %48 = sub i32 %44, %47, !dbg !4456
  %49 = ashr exact i32 %48, 3, !dbg !4456
  call void @llvm.dbg.value(metadata i32 %49, metadata !4418, metadata !DIExpression()), !dbg !4419
  %50 = icmp ugt i32 %45, %28, !dbg !4457
  br i1 %50, label %51, label %52, !dbg !4459

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !4460
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4462
  br label %52, !dbg !4463

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !4464
  %54 = icmp ugt i32 %53, %49, !dbg !4466
  br i1 %54, label %55, label %56, !dbg !4467

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !4468
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !4470
  br label %56, !dbg !4471

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !4472
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4419
  ret i8* %58, !dbg !4473
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4474 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4478, metadata !DIExpression()), !dbg !4497
  call void @llvm.dbg.value(metadata i8* %1, metadata !4479, metadata !DIExpression()), !dbg !4497
  call void @llvm.dbg.value(metadata i32 %2, metadata !4480, metadata !DIExpression()), !dbg !4497
  call void @llvm.dbg.value(metadata i32 %3, metadata !4481, metadata !DIExpression()), !dbg !4497
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4498
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4498
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4482, metadata !DIExpression()), !dbg !4497
  %7 = icmp eq i8* %1, null, !dbg !4499
  br i1 %7, label %8, label %10, !dbg !4501

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4502
  br label %59, !dbg !4504

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4505
  br i1 %11, label %12, label %13, !dbg !4507

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4508
  br label %59, !dbg !4510

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4511
  br i1 %14, label %59, label %15, !dbg !4513

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4514, !range !3910
  call void @llvm.dbg.value(metadata i32 %16, metadata !4483, metadata !DIExpression()), !dbg !4497
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4515
  call void @llvm.dbg.value(metadata i32 %17, metadata !4484, metadata !DIExpression()), !dbg !4497
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4516
  %19 = ptrtoint i8* %1 to i32, !dbg !4517
  %20 = ptrtoint i8* %18 to i32, !dbg !4517
  %21 = sub i32 %19, %20, !dbg !4517
  call void @llvm.dbg.value(metadata i32 %21, metadata !4485, metadata !DIExpression()), !dbg !4497
  %22 = add i32 %21, %3, !dbg !4518
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4519
  call void @llvm.dbg.value(metadata i32 %23, metadata !4486, metadata !DIExpression()), !dbg !4497
  %24 = icmp eq i32 %2, 0, !dbg !4520
  br i1 %24, label %29, label %25, !dbg !4521

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4522
  %27 = and i32 %26, %19, !dbg !4523
  %28 = icmp eq i32 %27, 0, !dbg !4523
  br i1 %28, label %29, label %49, !dbg !4524

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4525
  %31 = icmp eq i32 %23, %30, !dbg !4526
  br i1 %31, label %59, label %32, !dbg !4527

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4528
  br i1 %33, label %34, label %36, !dbg !4529

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4530
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !4532
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4533
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !4534
  br label %59, !dbg !4535

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4536
  br i1 %37, label %49, label %38, !dbg !4537

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4538
  %40 = add i32 %39, %30, !dbg !4539
  %41 = icmp ult i32 %40, %23, !dbg !4540
  br i1 %41, label %49, label %42, !dbg !4541

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4542
  call void @llvm.dbg.value(metadata i32 %43, metadata !4487, metadata !DIExpression()), !dbg !4543
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4544
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4545
  %45 = icmp ult i32 %43, %44, !dbg !4547
  br i1 %45, label %46, label %48, !dbg !4548

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4549
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !4551
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !4552
  br label %48, !dbg !4553

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !4554
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4555
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4556
  call void @llvm.dbg.value(metadata i8* %50, metadata !4493, metadata !DIExpression()), !dbg !4497
  %51 = icmp eq i8* %50, null, !dbg !4557
  br i1 %51, label %59, label %52, !dbg !4558

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4559, !range !4003
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !4560
  %55 = sub i32 %54, %21, !dbg !4561
  call void @llvm.dbg.value(metadata i32 %55, metadata !4494, metadata !DIExpression()), !dbg !4562
  %56 = icmp ult i32 %55, %3, !dbg !4563
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4563
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #27, !dbg !4564
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4565
  br label %59, !dbg !4566

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4497
  ret i8* %60, !dbg !4567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4568 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4572, metadata !DIExpression()), !dbg !4574
  call void @llvm.dbg.value(metadata i32 %1, metadata !4573, metadata !DIExpression()), !dbg !4574
  %3 = shl i32 %1, 3, !dbg !4575
  %4 = add i32 %3, -4, !dbg !4576
  ret i32 %4, !dbg !4577
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4578 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4582, metadata !DIExpression()), !dbg !4593
  call void @llvm.dbg.value(metadata i8* %1, metadata !4583, metadata !DIExpression()), !dbg !4593
  call void @llvm.dbg.value(metadata i32 %2, metadata !4584, metadata !DIExpression()), !dbg !4593
  %4 = add i32 %2, -4, !dbg !4594
  call void @llvm.dbg.value(metadata i32 %4, metadata !4584, metadata !DIExpression()), !dbg !4593
  %5 = ptrtoint i8* %1 to i32, !dbg !4595
  %6 = add i32 %5, 7, !dbg !4595
  %7 = and i32 %6, -8, !dbg !4595
  call void @llvm.dbg.value(metadata i32 %7, metadata !4585, metadata !DIExpression()), !dbg !4593
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4596
  %9 = ptrtoint i8* %8 to i32, !dbg !4596
  %10 = and i32 %9, -8, !dbg !4596
  call void @llvm.dbg.value(metadata i32 %10, metadata !4586, metadata !DIExpression()), !dbg !4593
  %11 = sub i32 %10, %7, !dbg !4597
  %12 = lshr exact i32 %11, 3, !dbg !4598
  call void @llvm.dbg.value(metadata i32 %12, metadata !4587, metadata !DIExpression()), !dbg !4593
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4599
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4588, metadata !DIExpression()), !dbg !4593
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4600
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4601
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4602
  store i32 %12, i32* %15, align 8, !dbg !4603
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4604
  store i32 0, i32* %16, align 4, !dbg !4605
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4606
  call void @llvm.dbg.value(metadata i32 %17, metadata !4589, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4593
  %18 = shl i32 %17, 2, !dbg !4607
  %19 = add i32 %18, 20, !dbg !4608
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !4609
  call void @llvm.dbg.value(metadata i32 %20, metadata !4590, metadata !DIExpression()), !dbg !4593
  call void @llvm.dbg.value(metadata i32 0, metadata !4591, metadata !DIExpression()), !dbg !4610
  %21 = icmp slt i32 %17, 0, !dbg !4611
  br i1 %21, label %22, label %24, !dbg !4613

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !4614
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4615
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4616
  %23 = sub i32 %12, %20, !dbg !4617
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !4618
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !4619
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4620
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !4621
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4622
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !4623
  ret void, !dbg !4624

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4591, metadata !DIExpression()), !dbg !4610
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4625
  store i32 0, i32* %26, align 4, !dbg !4627
  %27 = add nuw i32 %25, 1, !dbg !4628
  call void @llvm.dbg.value(metadata i32 %27, metadata !4591, metadata !DIExpression()), !dbg !4610
  %28 = icmp eq i32 %25, %17, !dbg !4611
  br i1 %28, label %22, label %24, !dbg !4613, !llvm.loop !4629
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4631 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4644, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4641, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i8* %1, metadata !4642, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i8* %2, metadata !4643, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i32 %4, metadata !4645, metadata !DIExpression()), !dbg !4772
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4773
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4773
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4646, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 0, metadata !4650, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i1 undef, metadata !4652, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4772
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4775

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4775

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4776
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4644, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i8* %30, metadata !4643, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i32 %29, metadata !4650, metadata !DIExpression()), !dbg !4772
  %31 = load i8, i8* %30, align 1, !dbg !4777
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4775

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4777
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4778
  call void @llvm.dbg.value(metadata i8* %34, metadata !4643, metadata !DIExpression()), !dbg !4772
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !4778
  call void @llvm.dbg.value(metadata i32 %35, metadata !4654, metadata !DIExpression()), !dbg !4779
  %36 = icmp slt i32 %35, 0, !dbg !4780
  %37 = add i32 %29, 1, !dbg !4778
  call void @llvm.dbg.value(metadata i32 undef, metadata !4650, metadata !DIExpression()), !dbg !4772
  br i1 %36, label %365, label %28, !llvm.loop !4782

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4784
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4659, metadata !DIExpression()), !dbg !4785
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4785
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4704, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4707, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8* %30, metadata !4710, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 -1, metadata !4711, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 -1, metadata !4712, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8* null, metadata !4713, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8* %14, metadata !4714, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8 0, metadata !4715, metadata !DIExpression()), !dbg !4786
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4787
  call void @llvm.dbg.value(metadata i8* %39, metadata !4643, metadata !DIExpression()), !dbg !4772
  %40 = load i24, i24* %15, align 8, !dbg !4788
  %41 = and i24 %40, 256, !dbg !4788
  %42 = icmp eq i24 %41, 0, !dbg !4788
  br i1 %42, label %51, label %43, !dbg !4790

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4791
  call void @llvm.dbg.value(metadata i8* %44, metadata !4644, metadata !DIExpression()), !dbg !4772
  %45 = bitcast i8* %27 to i32*, !dbg !4791
  %46 = load i32, i32* %45, align 4, !dbg !4791
  call void @llvm.dbg.value(metadata i32 %46, metadata !4711, metadata !DIExpression()), !dbg !4786
  %47 = icmp slt i32 %46, 0, !dbg !4793
  br i1 %47, label %48, label %56, !dbg !4795

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4796
  store i24 %49, i24* %15, align 8, !dbg !4796
  %50 = sub nsw i32 0, %46, !dbg !4798
  call void @llvm.dbg.value(metadata i32 %50, metadata !4711, metadata !DIExpression()), !dbg !4786
  br label %56, !dbg !4799

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4800
  %53 = icmp eq i24 %52, 0, !dbg !4800
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4802
  br label %56, !dbg !4802

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4803
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4786
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4644, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i32 %58, metadata !4711, metadata !DIExpression()), !dbg !4786
  %60 = and i24 %57, 1024, !dbg !4803
  %61 = icmp eq i24 %60, 0, !dbg !4803
  br i1 %61, label %69, label %62, !dbg !4804

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4805
  call void @llvm.dbg.value(metadata i8* %63, metadata !4644, metadata !DIExpression()), !dbg !4772
  %64 = bitcast i8* %59 to i32*, !dbg !4805
  %65 = load i32, i32* %64, align 4, !dbg !4805
  call void @llvm.dbg.value(metadata i32 %65, metadata !4716, metadata !DIExpression()), !dbg !4806
  %66 = icmp slt i32 %65, 0, !dbg !4807
  br i1 %66, label %67, label %74, !dbg !4809

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4810
  store i24 %68, i24* %15, align 8, !dbg !4810
  br label %74, !dbg !4812

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4813
  %71 = icmp eq i24 %70, 0, !dbg !4813
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4815
  br label %74, !dbg !4815

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4816
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4786
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4786
  call void @llvm.dbg.value(metadata i8* %77, metadata !4644, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i32 %76, metadata !4712, metadata !DIExpression()), !dbg !4786
  store i32 0, i32* %16, align 4, !dbg !4817
  store i32 0, i32* %17, align 8, !dbg !4818
  %78 = lshr i24 %75, 16, !dbg !4816
  call void @llvm.dbg.value(metadata i24 %78, metadata !4719, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4786
  %79 = lshr i24 %75, 11, !dbg !4819
  %80 = and i24 %79, 15, !dbg !4819
  %81 = zext i24 %80 to i32, !dbg !4819
  call void @llvm.dbg.value(metadata i32 %81, metadata !4720, metadata !DIExpression()), !dbg !4786
  %82 = trunc i24 %78 to i3, !dbg !4820
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4820

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4821

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4824
  call void @llvm.dbg.value(metadata i8* %85, metadata !4644, metadata !DIExpression()), !dbg !4772
  %86 = bitcast i8* %77 to i32*, !dbg !4824
  %87 = load i32, i32* %86, align 4, !dbg !4824
  %88 = sext i32 %87 to i64, !dbg !4824
  store i64 %88, i64* %20, align 8, !dbg !4826
  br label %115, !dbg !4827

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4828
  call void @llvm.dbg.value(metadata i8* %90, metadata !4644, metadata !DIExpression()), !dbg !4772
  %91 = bitcast i8* %77 to i32*, !dbg !4828
  %92 = load i32, i32* %91, align 4, !dbg !4828
  %93 = sext i32 %92 to i64, !dbg !4828
  store i64 %93, i64* %20, align 8, !dbg !4831
  br label %115, !dbg !4832

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4833
  %96 = add i32 %95, 7, !dbg !4833
  %97 = and i32 %96, -8, !dbg !4833
  %98 = inttoptr i32 %97 to i8*, !dbg !4833
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4833
  call void @llvm.dbg.value(metadata i8* %99, metadata !4644, metadata !DIExpression()), !dbg !4772
  %100 = inttoptr i32 %97 to i64*, !dbg !4833
  %101 = load i64, i64* %100, align 8, !dbg !4833
  store i64 %101, i64* %20, align 8, !dbg !4834
  br label %115, !dbg !4835

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4836
  %104 = add i32 %103, 7, !dbg !4836
  %105 = and i32 %104, -8, !dbg !4836
  %106 = inttoptr i32 %105 to i8*, !dbg !4836
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4836
  call void @llvm.dbg.value(metadata i8* %107, metadata !4644, metadata !DIExpression()), !dbg !4772
  %108 = inttoptr i32 %105 to i64*, !dbg !4836
  %109 = load i64, i64* %108, align 8, !dbg !4836
  store i64 %109, i64* %20, align 8, !dbg !4837
  br label %115, !dbg !4838

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4839
  call void @llvm.dbg.value(metadata i8* %111, metadata !4644, metadata !DIExpression()), !dbg !4772
  %112 = bitcast i8* %77 to i32*, !dbg !4839
  %113 = load i32, i32* %112, align 4, !dbg !4839
  %114 = sext i32 %113 to i64, !dbg !4840
  store i64 %114, i64* %20, align 8, !dbg !4841
  br label %115, !dbg !4842

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4843
  call void @llvm.dbg.value(metadata i8* %117, metadata !4644, metadata !DIExpression()), !dbg !4772
  %118 = trunc i24 %79 to i4, !dbg !4844
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4844

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4845
  %121 = ashr exact i64 %120, 56, !dbg !4845
  store i64 %121, i64* %20, align 8, !dbg !4848
  br label %177, !dbg !4849

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4850
  %124 = ashr exact i64 %123, 48, !dbg !4850
  store i64 %124, i64* %20, align 8, !dbg !4853
  br label %177, !dbg !4854

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4855

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4858
  call void @llvm.dbg.value(metadata i8* %127, metadata !4644, metadata !DIExpression()), !dbg !4772
  %128 = bitcast i8* %77 to i32*, !dbg !4858
  %129 = load i32, i32* %128, align 4, !dbg !4858
  %130 = zext i32 %129 to i64, !dbg !4858
  store i64 %130, i64* %20, align 8, !dbg !4860
  br label %157, !dbg !4861

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4862
  call void @llvm.dbg.value(metadata i8* %132, metadata !4644, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i8* %132, metadata !4644, metadata !DIExpression()), !dbg !4772
  %133 = bitcast i8* %77 to i32*, !dbg !4862
  %134 = load i32, i32* %133, align 4, !dbg !4862
  %135 = zext i32 %134 to i64, !dbg !4862
  store i64 %135, i64* %20, align 8, !dbg !4862
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4864
  %138 = add i32 %137, 7, !dbg !4864
  %139 = and i32 %138, -8, !dbg !4864
  %140 = inttoptr i32 %139 to i8*, !dbg !4864
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4864
  call void @llvm.dbg.value(metadata i8* %141, metadata !4644, metadata !DIExpression()), !dbg !4772
  %142 = inttoptr i32 %139 to i64*, !dbg !4864
  %143 = load i64, i64* %142, align 8, !dbg !4864
  store i64 %143, i64* %20, align 8, !dbg !4865
  br label %157, !dbg !4866

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4867
  %146 = add i32 %145, 7, !dbg !4867
  %147 = and i32 %146, -8, !dbg !4867
  %148 = inttoptr i32 %147 to i8*, !dbg !4867
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4867
  call void @llvm.dbg.value(metadata i8* %149, metadata !4644, metadata !DIExpression()), !dbg !4772
  %150 = inttoptr i32 %147 to i64*, !dbg !4867
  %151 = load i64, i64* %150, align 8, !dbg !4867
  store i64 %151, i64* %20, align 8, !dbg !4868
  br label %157, !dbg !4869

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4870
  call void @llvm.dbg.value(metadata i8* %153, metadata !4644, metadata !DIExpression()), !dbg !4772
  %154 = bitcast i8* %77 to i32*, !dbg !4870
  %155 = load i32, i32* %154, align 4, !dbg !4870
  %156 = zext i32 %155 to i64, !dbg !4871
  store i64 %156, i64* %20, align 8, !dbg !4872
  br label %157, !dbg !4873

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4874
  call void @llvm.dbg.value(metadata i8* %159, metadata !4644, metadata !DIExpression()), !dbg !4772
  %160 = trunc i24 %79 to i4, !dbg !4875
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4875

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4876
  store i64 %162, i64* %20, align 8, !dbg !4879
  br label %177, !dbg !4880

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4881
  store i64 %164, i64* %20, align 8, !dbg !4884
  br label %177, !dbg !4885

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4886
  %167 = add i32 %166, 7, !dbg !4886
  %168 = and i32 %167, -8, !dbg !4886
  %169 = inttoptr i32 %168 to i8*, !dbg !4886
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4886
  call void @llvm.dbg.value(metadata i8* %170, metadata !4644, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i8* %170, metadata !4644, metadata !DIExpression()), !dbg !4772
  %171 = inttoptr i32 %168 to double*, !dbg !4886
  %172 = load double, double* %171, align 8, !dbg !4886
  store double %172, double* %19, align 8, !dbg !4886
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4890
  call void @llvm.dbg.value(metadata i8* %174, metadata !4644, metadata !DIExpression()), !dbg !4772
  %175 = bitcast i8* %77 to i8**, !dbg !4890
  %176 = load i8*, i8** %175, align 4, !dbg !4890
  store i8* %176, i8** %18, align 8, !dbg !4893
  br label %177, !dbg !4894

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4786
  call void @llvm.dbg.value(metadata i8* %178, metadata !4644, metadata !DIExpression()), !dbg !4772
  %179 = and i24 %75, 3, !dbg !4895
  %180 = icmp eq i24 %179, 0, !dbg !4895
  br i1 %180, label %185, label %181, !dbg !4895

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !4896
  call void @llvm.dbg.value(metadata i32 %182, metadata !4721, metadata !DIExpression()), !dbg !4897
  %183 = icmp slt i32 %182, 0, !dbg !4898
  %184 = add i32 %182, %29, !dbg !4896
  call void @llvm.dbg.value(metadata i32 undef, metadata !4650, metadata !DIExpression()), !dbg !4772
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4900
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4901

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !4902
  call void @llvm.dbg.value(metadata i32 %188, metadata !4725, metadata !DIExpression()), !dbg !4903
  %189 = icmp slt i32 %188, 0, !dbg !4904
  %190 = add i32 %29, 1, !dbg !4902
  call void @llvm.dbg.value(metadata i32 undef, metadata !4650, metadata !DIExpression()), !dbg !4772
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4906
  call void @llvm.dbg.value(metadata i8* %192, metadata !4713, metadata !DIExpression()), !dbg !4786
  %193 = icmp sgt i32 %76, -1, !dbg !4907
  br i1 %193, label %194, label %196, !dbg !4909

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !4910
  call void @llvm.dbg.value(metadata i32 %195, metadata !4728, metadata !DIExpression()), !dbg !4912
  br label %241, !dbg !4913

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !4914
  call void @llvm.dbg.value(metadata i32 %197, metadata !4728, metadata !DIExpression()), !dbg !4912
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4713, metadata !DIExpression()), !dbg !4786
  %199 = load i64, i64* %20, align 8, !dbg !4916
  %200 = trunc i64 %199 to i8, !dbg !4917
  store i8 %200, i8* %10, align 1, !dbg !4918
  call void @llvm.dbg.value(metadata i8* %23, metadata !4714, metadata !DIExpression()), !dbg !4786
  br label %245, !dbg !4919

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4920
  %203 = icmp eq i24 %202, 0, !dbg !4920
  %204 = trunc i24 %75 to i8, !dbg !4922
  %205 = shl i8 %204, 1, !dbg !4922
  %206 = and i8 %205, 32, !dbg !4922
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4922
  call void @llvm.dbg.value(metadata i8 %207, metadata !4715, metadata !DIExpression()), !dbg !4786
  %208 = load i64, i64* %20, align 8, !dbg !4923
  call void @llvm.dbg.value(metadata i64 %208, metadata !4651, metadata !DIExpression()), !dbg !4772
  %209 = icmp slt i64 %208, 0, !dbg !4924
  br i1 %209, label %210, label %212, !dbg !4926

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4715, metadata !DIExpression()), !dbg !4786
  %211 = sub nsw i64 0, %208, !dbg !4927
  store i64 %211, i64* %20, align 8, !dbg !4929
  br label %212, !dbg !4930

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4786
  call void @llvm.dbg.value(metadata i8 %213, metadata !4715, metadata !DIExpression()), !dbg !4786
  %214 = load i64, i64* %20, align 8, !dbg !4931
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4932
  call void @llvm.dbg.value(metadata i8* %215, metadata !4713, metadata !DIExpression()), !dbg !4786
  br label %216, !dbg !4933

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4934
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4935
  call void @llvm.dbg.value(metadata i8* %218, metadata !4713, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8 %217, metadata !4715, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.label(metadata !4771), !dbg !4936
  %219 = icmp sgt i32 %76, -1, !dbg !4937
  br i1 %219, label %222, label %220, !dbg !4938

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4939
  br label %245, !dbg !4938

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4941
  %224 = sub i32 %22, %223, !dbg !4941
  call void @llvm.dbg.value(metadata i32 %224, metadata !4730, metadata !DIExpression()), !dbg !4942
  %225 = load i24, i24* %15, align 8, !dbg !4943
  %226 = and i24 %225, -65, !dbg !4943
  store i24 %226, i24* %15, align 8, !dbg !4943
  %227 = icmp ugt i32 %76, %224, !dbg !4944
  br i1 %227, label %228, label %245, !dbg !4946

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4947
  store i32 %229, i32* %16, align 4, !dbg !4949
  br label %245, !dbg !4950

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4951
  %232 = icmp eq i8* %231, null, !dbg !4953
  br i1 %232, label %245, label %233, !dbg !4954

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4955
  %235 = zext i32 %234 to i64, !dbg !4955
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4957
  call void @llvm.dbg.value(metadata i8* %236, metadata !4713, metadata !DIExpression()), !dbg !4786
  %237 = load i24, i24* %15, align 8, !dbg !4958
  %238 = or i24 %237, 1048576, !dbg !4958
  store i24 %238, i24* %15, align 8, !dbg !4958
  store i8 120, i8* %21, align 1, !dbg !4959
  br label %216, !dbg !4960

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4961
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !4964
  br label %363, !dbg !4965

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4966
  call void @llvm.dbg.value(metadata i32 %242, metadata !4728, metadata !DIExpression()), !dbg !4912
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4967
  call void @llvm.dbg.value(metadata i32 -1, metadata !4712, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 %29, metadata !4650, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i8* %192, metadata !4713, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8* %243, metadata !4714, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8 0, metadata !4715, metadata !DIExpression()), !dbg !4786
  %244 = icmp eq i8* %192, null, !dbg !4968
  br i1 %244, label %363, label %245, !dbg !4970, !llvm.loop !4782

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4939
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4733, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4786
  call void @llvm.dbg.value(metadata i32 0, metadata !4734, metadata !DIExpression()), !dbg !4786
  %250 = zext i8 %249 to i32, !dbg !4971
  %251 = icmp eq i8 %249, 0, !dbg !4973
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4733, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4786
  call void @llvm.dbg.value(metadata i32 undef, metadata !4733, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4733, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4786
  call void @llvm.dbg.value(metadata i32 undef, metadata !4733, metadata !DIExpression()), !dbg !4786
  %252 = icmp sgt i32 %58, 0, !dbg !4974
  br i1 %252, label %253, label %302, !dbg !4975

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4939
  %255 = icmp eq i24 %254, 0, !dbg !4939
  %256 = ptrtoint i8* %248 to i32, !dbg !4976
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4733, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4786
  %257 = ptrtoint i8* %247 to i32, !dbg !4976
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4733, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4786
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4733, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4786
  %258 = xor i1 %251, true, !dbg !4977
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4733, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4786
  %259 = sext i1 %258 to i32, !dbg !4977
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4733, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4786
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4733, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4786
  %260 = lshr i24 %246, 19, !dbg !4978
  %261 = and i24 %260, 1, !dbg !4978
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4978
  %263 = zext i24 %262 to i32, !dbg !4978
  %264 = add i32 %257, %259, !dbg !4978
  %265 = add i32 %256, %263, !dbg !4978
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4733, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4786
  %266 = and i24 %246, 4194304, !dbg !4979
  %267 = icmp eq i24 %266, 0, !dbg !4979
  %268 = load i32, i32* %16, align 4, !dbg !4981
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4733, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4786
  call void @llvm.dbg.value(metadata i32 undef, metadata !4733, metadata !DIExpression()), !dbg !4786
  %269 = load i32, i32* %17, align 8, !dbg !4982
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4982
  call void @llvm.dbg.value(metadata i32 undef, metadata !4733, metadata !DIExpression()), !dbg !4786
  %271 = add i32 %264, %58, !dbg !4982
  %272 = add i32 %265, %268, !dbg !4982
  %273 = add i32 %272, %270, !dbg !4983
  %274 = sub i32 %271, %273, !dbg !4983
  call void @llvm.dbg.value(metadata i32 %274, metadata !4711, metadata !DIExpression()), !dbg !4786
  %275 = and i24 %246, 4, !dbg !4984
  %276 = icmp eq i24 %275, 0, !dbg !4984
  br i1 %276, label %277, label %302, !dbg !4985

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4735, metadata !DIExpression()), !dbg !4986
  %278 = and i24 %246, 64, !dbg !4987
  %279 = icmp eq i24 %278, 0, !dbg !4987
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4988
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4988
  %282 = select i1 %279, i32 32, i32 48, !dbg !4988
  br i1 %280, label %287, label %283, !dbg !4988

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !4989
  call void @llvm.dbg.value(metadata i32 %284, metadata !4740, metadata !DIExpression()), !dbg !4990
  %285 = icmp slt i32 %284, 0, !dbg !4991
  %286 = add i32 %29, 1, !dbg !4989
  call void @llvm.dbg.value(metadata i32 undef, metadata !4650, metadata !DIExpression()), !dbg !4772
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4786
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4776
  call void @llvm.dbg.value(metadata i32 %290, metadata !4650, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i8 undef, metadata !4735, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.value(metadata i8 %288, metadata !4715, metadata !DIExpression()), !dbg !4786
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4993
  %292 = add i32 %291, -1, !dbg !4993
  br label %293, !dbg !4993

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4994
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4776
  call void @llvm.dbg.value(metadata i32 %295, metadata !4650, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i32 %294, metadata !4711, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i32 %294, metadata !4711, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4786
  %296 = icmp sgt i32 %294, 0, !dbg !4995
  br i1 %296, label %297, label %302, !dbg !4993

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4996
  call void @llvm.dbg.value(metadata i32 %298, metadata !4711, metadata !DIExpression()), !dbg !4786
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !4997
  call void @llvm.dbg.value(metadata i32 %299, metadata !4746, metadata !DIExpression()), !dbg !4998
  %300 = icmp slt i32 %299, 0, !dbg !4999
  %301 = add i32 %295, 1, !dbg !4997
  call void @llvm.dbg.value(metadata i32 undef, metadata !4650, metadata !DIExpression()), !dbg !4772
  br i1 %300, label %361, label %293, !llvm.loop !5001

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4786
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4786
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4776
  call void @llvm.dbg.value(metadata i32 %305, metadata !4650, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i32 %304, metadata !4711, metadata !DIExpression()), !dbg !4786
  call void @llvm.dbg.value(metadata i8 %303, metadata !4715, metadata !DIExpression()), !dbg !4786
  %306 = icmp eq i8 %303, 0, !dbg !5003
  br i1 %306, label %312, label %307, !dbg !5004

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5005
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !5006
  call void @llvm.dbg.value(metadata i32 %309, metadata !4749, metadata !DIExpression()), !dbg !5007
  %310 = icmp slt i32 %309, 0, !dbg !5008
  %311 = add i32 %305, 1, !dbg !5006
  call void @llvm.dbg.value(metadata i32 undef, metadata !4650, metadata !DIExpression()), !dbg !4772
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4776
  call void @llvm.dbg.value(metadata i32 %313, metadata !4650, metadata !DIExpression()), !dbg !4772
  %314 = lshr i24 %246, 20, !dbg !5010
  %315 = lshr i24 %246, 19, !dbg !5011
  %316 = or i24 %314, %315, !dbg !5012
  %317 = and i24 %316, 1, !dbg !5012
  %318 = icmp eq i24 %317, 0, !dbg !5012
  br i1 %318, label %323, label %319, !dbg !5013

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5014
  call void @llvm.dbg.value(metadata i32 %320, metadata !4753, metadata !DIExpression()), !dbg !5015
  %321 = icmp slt i32 %320, 0, !dbg !5016
  %322 = add i32 %313, 1, !dbg !5014
  call void @llvm.dbg.value(metadata i32 undef, metadata !4650, metadata !DIExpression()), !dbg !4772
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4776
  call void @llvm.dbg.value(metadata i32 %324, metadata !4650, metadata !DIExpression()), !dbg !4772
  %325 = and i24 %246, 1048576, !dbg !5018
  %326 = icmp eq i24 %325, 0, !dbg !5018
  br i1 %326, label %333, label %327, !dbg !5019

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5020
  %329 = zext i8 %328 to i32, !dbg !5020
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !5020
  call void @llvm.dbg.value(metadata i32 %330, metadata !4759, metadata !DIExpression()), !dbg !5021
  %331 = icmp slt i32 %330, 0, !dbg !5022
  %332 = add i32 %324, 1, !dbg !5020
  call void @llvm.dbg.value(metadata i32 undef, metadata !4650, metadata !DIExpression()), !dbg !4772
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4776
  call void @llvm.dbg.value(metadata i32 %334, metadata !4650, metadata !DIExpression()), !dbg !4772
  %335 = load i32, i32* %16, align 4, !dbg !5024
  call void @llvm.dbg.value(metadata i32 %335, metadata !4734, metadata !DIExpression()), !dbg !4786
  br label %336, !dbg !5025

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5026
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4776
  call void @llvm.dbg.value(metadata i32 %338, metadata !4650, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i32 %337, metadata !4734, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4786
  %339 = icmp sgt i32 %337, 0, !dbg !5027
  br i1 %339, label %340, label %345, !dbg !5025

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5028
  call void @llvm.dbg.value(metadata i32 %341, metadata !4734, metadata !DIExpression()), !dbg !4786
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5029
  call void @llvm.dbg.value(metadata i32 %342, metadata !4763, metadata !DIExpression()), !dbg !5030
  %343 = icmp slt i32 %342, 0, !dbg !5031
  %344 = add i32 %338, 1, !dbg !5029
  call void @llvm.dbg.value(metadata i32 undef, metadata !4650, metadata !DIExpression()), !dbg !4772
  br i1 %343, label %361, label %336, !llvm.loop !5033

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5035
  call void @llvm.dbg.value(metadata i32 %346, metadata !4766, metadata !DIExpression()), !dbg !5036
  %347 = icmp slt i32 %346, 0, !dbg !5037
  call void @llvm.dbg.value(metadata i32 undef, metadata !4650, metadata !DIExpression()), !dbg !4772
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5035
  call void @llvm.dbg.value(metadata i32 %349, metadata !4650, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i32 %304, metadata !4711, metadata !DIExpression()), !dbg !4786
  %350 = icmp sgt i32 %304, 0, !dbg !5039
  br i1 %350, label %351, label %363, !dbg !5040

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5040
  %353 = add i32 %352, %338, !dbg !5040
  br label %354, !dbg !5040

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4650, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i32 %355, metadata !4711, metadata !DIExpression()), !dbg !4786
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !5041
  call void @llvm.dbg.value(metadata i32 %356, metadata !4768, metadata !DIExpression()), !dbg !5042
  %357 = icmp slt i32 %356, 0, !dbg !5043
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5045
  call void @llvm.dbg.value(metadata i32 undef, metadata !4650, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4772
  call void @llvm.dbg.value(metadata i32 %359, metadata !4711, metadata !DIExpression()), !dbg !4786
  %360 = icmp sgt i32 %355, 1, !dbg !5039
  br i1 %360, label %354, label %363, !dbg !5040, !llvm.loop !5046

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4650, metadata !DIExpression()), !dbg !4772
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4783
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4776
  call void @llvm.dbg.value(metadata i32 %364, metadata !4650, metadata !DIExpression()), !dbg !4772
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4783
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4772
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5048
  ret i32 %366, !dbg !5048
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5049 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5053, metadata !DIExpression()), !dbg !5055
  call void @llvm.dbg.value(metadata i8* %1, metadata !5054, metadata !DIExpression()), !dbg !5055
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5056
  store i24 0, i24* %3, align 4, !dbg !5056
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5056
  store i8 0, i8* %4, align 1, !dbg !5056
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5056
  store i32 0, i32* %5, align 4, !dbg !5056
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5056
  store i32 0, i32* %6, align 4, !dbg !5056
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5057
  call void @llvm.dbg.value(metadata i8* %7, metadata !5054, metadata !DIExpression()), !dbg !5055
  %8 = load i8, i8* %7, align 1, !dbg !5058
  %9 = icmp eq i8 %8, 37, !dbg !5060
  br i1 %9, label %10, label %12, !dbg !5061

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5062
  call void @llvm.dbg.value(metadata i8* %11, metadata !5054, metadata !DIExpression()), !dbg !5055
  store i8 37, i8* %4, align 1, !dbg !5064
  br label %18, !dbg !5065

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5066
  call void @llvm.dbg.value(metadata i8* %13, metadata !5054, metadata !DIExpression()), !dbg !5055
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5067
  call void @llvm.dbg.value(metadata i8* %14, metadata !5054, metadata !DIExpression()), !dbg !5055
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5068
  call void @llvm.dbg.value(metadata i8* %15, metadata !5054, metadata !DIExpression()), !dbg !5055
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5069
  call void @llvm.dbg.value(metadata i8* %16, metadata !5054, metadata !DIExpression()), !dbg !5055
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5070
  call void @llvm.dbg.value(metadata i8* %17, metadata !5054, metadata !DIExpression()), !dbg !5055
  br label %18, !dbg !5071

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5055
  ret i8* %19, !dbg !5072
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5073 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5077, metadata !DIExpression()), !dbg !5084
  call void @llvm.dbg.value(metadata i8* %1, metadata !5078, metadata !DIExpression()), !dbg !5084
  call void @llvm.dbg.value(metadata i8* %2, metadata !5079, metadata !DIExpression()), !dbg !5084
  call void @llvm.dbg.value(metadata i8* %3, metadata !5080, metadata !DIExpression()), !dbg !5084
  call void @llvm.dbg.value(metadata i32 0, metadata !5081, metadata !DIExpression()), !dbg !5084
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5085

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5086
  call void @llvm.dbg.value(metadata i32 %9, metadata !5081, metadata !DIExpression()), !dbg !5084
  call void @llvm.dbg.value(metadata i8* %8, metadata !5079, metadata !DIExpression()), !dbg !5084
  %10 = icmp ult i8* %8, %3, !dbg !5087
  br i1 %10, label %11, label %13, !dbg !5088

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5089
  br label %17, !dbg !5088

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5090

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5091
  %16 = icmp eq i8 %15, 0, !dbg !5090
  br i1 %16, label %24, label %17, !dbg !5085

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5089
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5092
  call void @llvm.dbg.value(metadata i8* %19, metadata !5079, metadata !DIExpression()), !dbg !5084
  %20 = zext i8 %18 to i32, !dbg !5093
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !5094
  call void @llvm.dbg.value(metadata i32 %21, metadata !5082, metadata !DIExpression()), !dbg !5095
  %22 = icmp slt i32 %21, 0, !dbg !5096
  %23 = add i32 %9, 1, !dbg !5098
  call void @llvm.dbg.value(metadata i32 undef, metadata !5081, metadata !DIExpression()), !dbg !5084
  br i1 %22, label %24, label %7, !llvm.loop !5099

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5084
  ret i32 %25, !dbg !5101
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5102 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5106, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5107, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata i8* %2, metadata !5108, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata i8* %3, metadata !5109, metadata !DIExpression()), !dbg !5116
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5117
  %6 = load i8, i8* %5, align 1, !dbg !5117
  %7 = zext i8 %6 to i32, !dbg !5118
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5119
  %9 = icmp eq i32 %8, 0, !dbg !5119
  call void @llvm.dbg.value(metadata i1 %9, metadata !5110, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5116
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5120
  call void @llvm.dbg.value(metadata i32 %10, metadata !5111, metadata !DIExpression()), !dbg !5116
  %11 = ptrtoint i8* %3 to i32, !dbg !5121
  %12 = ptrtoint i8* %2 to i32, !dbg !5121
  %13 = sub i32 %11, %12, !dbg !5121
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5122
  call void @llvm.dbg.value(metadata i8* %14, metadata !5113, metadata !DIExpression()), !dbg !5116
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5123

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5116
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5106, metadata !DIExpression()), !dbg !5116
  call void @llvm.dbg.value(metadata i8* %18, metadata !5113, metadata !DIExpression()), !dbg !5116
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5124
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5125
  call void @llvm.dbg.value(metadata i32 %25, metadata !5114, metadata !DIExpression()), !dbg !5126
  %26 = icmp ult i32 %25, 10, !dbg !5127
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5128
  %28 = add i32 %27, %25, !dbg !5126
  %29 = trunc i32 %28 to i8, !dbg !5128
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5129
  call void @llvm.dbg.value(metadata i8* %30, metadata !5113, metadata !DIExpression()), !dbg !5116
  store i8 %29, i8* %30, align 1, !dbg !5130
  call void @llvm.dbg.value(metadata i64 %22, metadata !5106, metadata !DIExpression()), !dbg !5116
  %31 = icmp uge i64 %19, %15, !dbg !5131
  %32 = icmp ugt i8* %30, %2, !dbg !5132
  %33 = and i1 %31, %32, !dbg !5132
  br i1 %33, label %17, label %34, !dbg !5133, !llvm.loop !5134

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5136
  %36 = load i24, i24* %35, align 4, !dbg !5136
  %37 = and i24 %36, 32, !dbg !5136
  %38 = icmp eq i24 %37, 0, !dbg !5136
  br i1 %38, label %44, label %39, !dbg !5138

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5139

40:                                               ; preds = %39
  br label %41, !dbg !5141

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5145
  store i24 %43, i24* %35, align 4, !dbg !5145
  br label %44, !dbg !5146

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5146
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !5147 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5153, metadata !DIExpression()), !dbg !5156
  call void @llvm.dbg.value(metadata i8* %1, metadata !5154, metadata !DIExpression()), !dbg !5156
  call void @llvm.dbg.value(metadata i32 %2, metadata !5155, metadata !DIExpression()), !dbg !5156
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5157
  %5 = load i24, i24* %4, align 4, !dbg !5157
  %6 = lshr i24 %5, 11, !dbg !5157
  %7 = and i24 %6, 15, !dbg !5157
  %8 = zext i24 %7 to i32, !dbg !5157
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5158

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5159
  store i32 %2, i32* %10, align 4, !dbg !5161
  br label %28, !dbg !5162

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5163
  store i8 %12, i8* %1, align 1, !dbg !5164
  br label %28, !dbg !5165

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5166
  %15 = bitcast i8* %1 to i16*, !dbg !5167
  store i16 %14, i16* %15, align 2, !dbg !5168
  br label %28, !dbg !5169

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5170
  store i32 %2, i32* %17, align 4, !dbg !5171
  br label %28, !dbg !5172

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5173
  %20 = bitcast i8* %1 to i64*, !dbg !5174
  store i64 %19, i64* %20, align 8, !dbg !5175
  br label %28, !dbg !5176

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5177
  %23 = bitcast i8* %1 to i64*, !dbg !5178
  store i64 %22, i64* %23, align 8, !dbg !5179
  br label %28, !dbg !5180

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5181
  store i32 %2, i32* %25, align 4, !dbg !5182
  br label %28, !dbg !5183

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5184
  store i32 %2, i32* %27, align 4, !dbg !5185
  br label %28, !dbg !5186

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5187
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !5188 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5191, metadata !DIExpression()), !dbg !5192
  %2 = add i32 %0, -65, !dbg !5193
  %3 = icmp ult i32 %2, 26, !dbg !5194
  %4 = zext i1 %3 to i32, !dbg !5194
  ret i32 %4, !dbg !5195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !5196 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5200, metadata !DIExpression()), !dbg !5201
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5202

2:                                                ; preds = %1
  br label %4, !dbg !5203

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5205

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5206
  ret i32 %5, !dbg !5207
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5208 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5210, metadata !DIExpression()), !dbg !5213
  call void @llvm.dbg.value(metadata i8* %1, metadata !5211, metadata !DIExpression()), !dbg !5213
  call void @llvm.dbg.value(metadata i8 1, metadata !5212, metadata !DIExpression()), !dbg !5213
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5214

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5212, metadata !DIExpression()), !dbg !5213
  call void @llvm.dbg.value(metadata i8* %5, metadata !5211, metadata !DIExpression()), !dbg !5213
  %6 = load i8, i8* %5, align 1, !dbg !5215
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5217

7:                                                ; preds = %4
  br label %11, !dbg !5218

8:                                                ; preds = %4
  br label %11, !dbg !5220

9:                                                ; preds = %4
  br label %11, !dbg !5221

10:                                               ; preds = %4
  br label %11, !dbg !5222

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5223
  %14 = or i24 %13, %12, !dbg !5223
  store i24 %14, i24* %3, align 4, !dbg !5223
  call void @llvm.dbg.value(metadata i8 poison, metadata !5212, metadata !DIExpression()), !dbg !5213
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5211, metadata !DIExpression()), !dbg !5213
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5212, metadata !DIExpression()), !dbg !5213
  call void @llvm.dbg.value(metadata i8* %15, metadata !5211, metadata !DIExpression()), !dbg !5213
  %17 = load i24, i24* %3, align 4, !dbg !5224
  %18 = and i24 %17, 68, !dbg !5226
  %19 = icmp eq i24 %18, 68, !dbg !5226
  br i1 %19, label %20, label %22, !dbg !5226

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5227
  store i24 %21, i24* %3, align 4, !dbg !5227
  br label %22, !dbg !5229

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5230
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5231 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5233, metadata !DIExpression()), !dbg !5237
  call void @llvm.dbg.value(metadata i8* %1, metadata !5234, metadata !DIExpression()), !dbg !5237
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5238
  %5 = load i24, i24* %4, align 4, !dbg !5239
  %6 = or i24 %5, 128, !dbg !5239
  store i24 %6, i24* %4, align 4, !dbg !5239
  call void @llvm.dbg.value(metadata i8* %1, metadata !5234, metadata !DIExpression()), !dbg !5237
  %7 = load i8, i8* %1, align 1, !dbg !5240
  %8 = icmp eq i8 %7, 42, !dbg !5242
  br i1 %8, label %9, label %12, !dbg !5243

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5244
  store i24 %10, i24* %4, align 4, !dbg !5244
  call void @llvm.dbg.value(metadata i8* %1, metadata !5234, metadata !DIExpression()), !dbg !5237
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5246
  call void @llvm.dbg.value(metadata i8* %11, metadata !5234, metadata !DIExpression()), !dbg !5237
  store i8* %11, i8** %3, align 4, !dbg !5246
  br label %29, !dbg !5247

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5235, metadata !DIExpression()), !dbg !5237
  call void @llvm.dbg.value(metadata i8** %3, metadata !5234, metadata !DIExpression(DW_OP_deref)), !dbg !5237
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5248
  call void @llvm.dbg.value(metadata i32 %13, metadata !5236, metadata !DIExpression()), !dbg !5237
  %14 = load i8*, i8** %3, align 4, !dbg !5249
  call void @llvm.dbg.value(metadata i8* %14, metadata !5234, metadata !DIExpression()), !dbg !5237
  %15 = icmp eq i8* %14, %1, !dbg !5251
  br i1 %15, label %29, label %16, !dbg !5252

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5253
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5255
  store i32 %13, i32* %18, align 4, !dbg !5256
  %19 = lshr i32 %13, 31, !dbg !5257
  %20 = lshr i24 %17, 1, !dbg !5258
  %21 = and i24 %20, 1, !dbg !5258
  %22 = zext i24 %21 to i32, !dbg !5258
  %23 = or i32 %19, %22, !dbg !5258
  %24 = trunc i32 %23 to i24, !dbg !5258
  %25 = shl nuw nsw i24 %24, 1, !dbg !5258
  %26 = and i24 %17, -131, !dbg !5258
  %27 = or i24 %26, 128, !dbg !5258
  %28 = or i24 %25, %27, !dbg !5258
  store i24 %28, i24* %4, align 4, !dbg !5258
  br label %29, !dbg !5259

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5237
  ret i8* %30, !dbg !5260
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5261 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5263, metadata !DIExpression()), !dbg !5266
  call void @llvm.dbg.value(metadata i8* %1, metadata !5264, metadata !DIExpression()), !dbg !5266
  %4 = load i8, i8* %1, align 1, !dbg !5267
  %5 = icmp eq i8 %4, 46, !dbg !5268
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5269
  %7 = load i24, i24* %6, align 4, !dbg !5270
  %8 = select i1 %5, i24 512, i24 0, !dbg !5270
  %9 = and i24 %7, -513, !dbg !5270
  %10 = or i24 %9, %8, !dbg !5270
  store i24 %10, i24* %6, align 4, !dbg !5270
  br i1 %5, label %11, label %32, !dbg !5271

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5264, metadata !DIExpression()), !dbg !5266
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5272
  call void @llvm.dbg.value(metadata i8* %12, metadata !5264, metadata !DIExpression()), !dbg !5266
  store i8* %12, i8** %3, align 4, !dbg !5272
  %13 = load i8, i8* %12, align 1, !dbg !5273
  %14 = icmp eq i8 %13, 42, !dbg !5275
  br i1 %14, label %15, label %18, !dbg !5276

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5277
  store i24 %16, i24* %6, align 4, !dbg !5277
  call void @llvm.dbg.value(metadata i8* %12, metadata !5264, metadata !DIExpression()), !dbg !5266
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5279
  call void @llvm.dbg.value(metadata i8* %17, metadata !5264, metadata !DIExpression()), !dbg !5266
  store i8* %17, i8** %3, align 4, !dbg !5279
  br label %32, !dbg !5280

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5264, metadata !DIExpression(DW_OP_deref)), !dbg !5266
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5281
  call void @llvm.dbg.value(metadata i32 %19, metadata !5265, metadata !DIExpression()), !dbg !5266
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5282
  store i32 %19, i32* %20, align 4, !dbg !5283
  %21 = lshr i32 %19, 31, !dbg !5284
  %22 = load i24, i24* %6, align 4, !dbg !5285
  %23 = lshr i24 %22, 1, !dbg !5285
  %24 = and i24 %23, 1, !dbg !5285
  %25 = zext i24 %24 to i32, !dbg !5285
  %26 = or i32 %21, %25, !dbg !5285
  %27 = trunc i32 %26 to i24, !dbg !5285
  %28 = shl nuw nsw i24 %27, 1, !dbg !5285
  %29 = and i24 %22, -3, !dbg !5285
  %30 = or i24 %28, %29, !dbg !5285
  store i24 %30, i24* %6, align 4, !dbg !5285
  %31 = load i8*, i8** %3, align 4, !dbg !5286
  call void @llvm.dbg.value(metadata i8* %31, metadata !5264, metadata !DIExpression()), !dbg !5266
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5266
  ret i8* %33, !dbg !5287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5288 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5290, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.value(metadata i8* %1, metadata !5291, metadata !DIExpression()), !dbg !5292
  %3 = load i8, i8* %1, align 1, !dbg !5293
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5294

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5295
  call void @llvm.dbg.value(metadata i8* %5, metadata !5291, metadata !DIExpression()), !dbg !5292
  %6 = load i8, i8* %5, align 1, !dbg !5298
  %7 = icmp eq i8 %6, 104, !dbg !5299
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5300
  %9 = load i24, i24* %8, align 4, !dbg !5300
  %10 = and i24 %9, -30721, !dbg !5300
  br i1 %7, label %11, label %14, !dbg !5301

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5302
  store i24 %12, i24* %8, align 4, !dbg !5302
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5304
  call void @llvm.dbg.value(metadata i8* %13, metadata !5291, metadata !DIExpression()), !dbg !5292
  br label %56, !dbg !5305

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5306
  store i24 %15, i24* %8, align 4, !dbg !5306
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5308
  call void @llvm.dbg.value(metadata i8* %17, metadata !5291, metadata !DIExpression()), !dbg !5292
  %18 = load i8, i8* %17, align 1, !dbg !5310
  %19 = icmp eq i8 %18, 108, !dbg !5311
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5312
  %21 = load i24, i24* %20, align 4, !dbg !5312
  %22 = and i24 %21, -30721, !dbg !5312
  br i1 %19, label %23, label %26, !dbg !5313

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5314
  store i24 %24, i24* %20, align 4, !dbg !5314
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5316
  call void @llvm.dbg.value(metadata i8* %25, metadata !5291, metadata !DIExpression()), !dbg !5292
  br label %56, !dbg !5317

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5318
  store i24 %27, i24* %20, align 4, !dbg !5318
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5320
  %30 = load i24, i24* %29, align 4, !dbg !5321
  %31 = and i24 %30, -30721, !dbg !5321
  %32 = or i24 %31, 10240, !dbg !5321
  store i24 %32, i24* %29, align 4, !dbg !5321
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5322
  call void @llvm.dbg.value(metadata i8* %33, metadata !5291, metadata !DIExpression()), !dbg !5292
  br label %56, !dbg !5323

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5324
  %36 = load i24, i24* %35, align 4, !dbg !5325
  %37 = and i24 %36, -30721, !dbg !5325
  %38 = or i24 %37, 12288, !dbg !5325
  store i24 %38, i24* %35, align 4, !dbg !5325
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5326
  call void @llvm.dbg.value(metadata i8* %39, metadata !5291, metadata !DIExpression()), !dbg !5292
  br label %56, !dbg !5327

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5328
  %42 = load i24, i24* %41, align 4, !dbg !5329
  %43 = and i24 %42, -30721, !dbg !5329
  %44 = or i24 %43, 14336, !dbg !5329
  store i24 %44, i24* %41, align 4, !dbg !5329
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5330
  call void @llvm.dbg.value(metadata i8* %45, metadata !5291, metadata !DIExpression()), !dbg !5292
  br label %56, !dbg !5331

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5332
  %48 = load i24, i24* %47, align 4, !dbg !5333
  %49 = and i24 %48, -30723, !dbg !5333
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5334
  call void @llvm.dbg.value(metadata i8* %50, metadata !5291, metadata !DIExpression()), !dbg !5292
  %51 = or i24 %49, 16386, !dbg !5335
  store i24 %51, i24* %47, align 4, !dbg !5335
  br label %56, !dbg !5336

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5337
  %54 = load i24, i24* %53, align 4, !dbg !5338
  %55 = and i24 %54, -30721, !dbg !5338
  store i24 %55, i24* %53, align 4, !dbg !5338
  br label %56, !dbg !5339

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5291, metadata !DIExpression()), !dbg !5292
  ret i8* %57, !dbg !5340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5341 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5343, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.value(metadata i8* %1, metadata !5344, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.value(metadata i8 0, metadata !5345, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.value(metadata i8* %1, metadata !5344, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5348
  %3 = load i8, i8* %1, align 1, !dbg !5349
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5350
  store i8 %3, i8* %4, align 1, !dbg !5351
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5352

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5353

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5354
  %9 = load i24, i24* %8, align 4, !dbg !5354
  %10 = and i24 %9, -458753, !dbg !5354
  %11 = or i24 %10, %7, !dbg !5354
  call void @llvm.dbg.label(metadata !5346), !dbg !5355
  %12 = and i24 %9, 30720, !dbg !5356
  %13 = icmp eq i24 %12, 16384, !dbg !5356
  %14 = zext i1 %13 to i24, !dbg !5358
  %15 = or i24 %11, %14, !dbg !5358
  %16 = icmp eq i8 %3, 99, !dbg !5359
  br i1 %16, label %17, label %43, !dbg !5361

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5362
  %19 = icmp ne i24 %18, 0, !dbg !5362
  call void @llvm.dbg.value(metadata i1 %19, metadata !5345, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5348
  br label %43, !dbg !5364

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5365
  %22 = load i24, i24* %21, align 4, !dbg !5366
  %23 = and i24 %22, -458753, !dbg !5366
  %24 = or i24 %23, 262144, !dbg !5366
  call void @llvm.dbg.value(metadata i8 1, metadata !5345, metadata !DIExpression()), !dbg !5348
  br label %43, !dbg !5367

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5370
  %27 = load i24, i24* %26, align 4, !dbg !5371
  %28 = and i24 %27, -458753, !dbg !5371
  %29 = or i24 %28, 196608, !dbg !5371
  %30 = and i24 %27, 30720, !dbg !5372
  %31 = icmp eq i24 %30, 16384, !dbg !5372
  br label %43, !dbg !5374

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5375
  %34 = load i24, i24* %33, align 4, !dbg !5376
  %35 = and i24 %34, -458753, !dbg !5376
  %36 = or i24 %35, 196608, !dbg !5376
  %37 = and i24 %34, 30720, !dbg !5377
  %38 = icmp ne i24 %37, 0, !dbg !5377
  br label %43, !dbg !5379

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5380
  %41 = load i24, i24* %40, align 4, !dbg !5381
  %42 = or i24 %41, 1, !dbg !5381
  br label %43, !dbg !5382

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5383
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5384
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5385
  call void @llvm.dbg.value(metadata i8* %48, metadata !5344, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.value(metadata i8 poison, metadata !5345, metadata !DIExpression()), !dbg !5348
  %49 = lshr i24 %44, 1, !dbg !5383
  %50 = and i24 %49, 1, !dbg !5383
  %51 = zext i24 %50 to i32, !dbg !5383
  %52 = or i32 %51, %47, !dbg !5383
  %53 = trunc i32 %52 to i24, !dbg !5383
  %54 = shl nuw nsw i24 %53, 1, !dbg !5383
  %55 = and i24 %44, -3, !dbg !5383
  %56 = or i24 %54, %55, !dbg !5383
  store i24 %56, i24* %46, align 4, !dbg !5383
  ret i8* %48, !dbg !5386
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5387 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5392, metadata !DIExpression()), !dbg !5395
  %2 = load i8*, i8** %0, align 4, !dbg !5396
  call void @llvm.dbg.value(metadata i8* %2, metadata !5393, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 0, metadata !5394, metadata !DIExpression()), !dbg !5395
  %3 = load i8, i8* %2, align 1, !dbg !5397
  %4 = zext i8 %3 to i32, !dbg !5398
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5399
  %6 = icmp eq i32 %5, 0, !dbg !5400
  br i1 %6, label %19, label %7, !dbg !5400

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5394, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i8* %10, metadata !5393, metadata !DIExpression()), !dbg !5395
  %11 = mul i32 %9, 10, !dbg !5401
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5403
  call void @llvm.dbg.value(metadata i8* %12, metadata !5393, metadata !DIExpression()), !dbg !5395
  %13 = add i32 %11, -48, !dbg !5404
  %14 = add i32 %13, %8, !dbg !5405
  call void @llvm.dbg.value(metadata i32 %14, metadata !5394, metadata !DIExpression()), !dbg !5395
  %15 = load i8, i8* %12, align 1, !dbg !5397
  %16 = zext i8 %15 to i32, !dbg !5398
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5399
  %18 = icmp eq i32 %17, 0, !dbg !5400
  br i1 %18, label %19, label %7, !dbg !5400, !llvm.loop !5406

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5395
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5395
  store i8* %20, i8** %0, align 4, !dbg !5408
  ret i32 %21, !dbg !5409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5410 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5412, metadata !DIExpression()), !dbg !5413
  %2 = add i32 %0, -48, !dbg !5414
  %3 = icmp ult i32 %2, 10, !dbg !5415
  %4 = zext i1 %3 to i32, !dbg !5415
  ret i32 %4, !dbg !5416
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5417 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !5419, !srcloc !5420
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !5421, !srcloc !5422
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #25, !dbg !5423, !srcloc !5424
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !5425, !srcloc !5426
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !5427, !srcloc !5428
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !5429, !srcloc !5430
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !5431, !srcloc !5432
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !5433, !srcloc !5434
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,512\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LIS3MDL_MAGN_ENABLED,%object", ""() #25, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #25, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #25, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #25, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #25, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PWM_ENABLED,%object", ""() #25, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_TIMERS_ENABLED,%object", ""() #25, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ\0A\09.equ\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,1\0A\09.type\09CONFIG_BOARD_96B_STM32_SENSOR_MEZ,%object", ""() #25, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F446XX\0A\09.equ\09CONFIG_SOC_STM32F446XX,1\0A\09.type\09CONFIG_SOC_STM32F446XX,%object", ""() #25, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,128\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #25, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !5901, !srcloc !5902
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !5903, !srcloc !5904
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !5905, !srcloc !5906
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !5907, !srcloc !5908
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !5909, !srcloc !5910
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !5911, !srcloc !5912
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !5913, !srcloc !5914
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !5915, !srcloc !5916
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !5917, !srcloc !5918
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !5919, !srcloc !5920
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !5921, !srcloc !5922
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !5923, !srcloc !5924
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !5925, !srcloc !5926
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !5927, !srcloc !5928
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !5929, !srcloc !5930
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5931, !srcloc !5932
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !5933, !srcloc !5934
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5935, !srcloc !5936
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5937, !srcloc !5938
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !5939, !srcloc !5940
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !5941, !srcloc !5942
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !5943, !srcloc !5944
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !5945, !srcloc !5946
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !5947, !srcloc !5948
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !5949, !srcloc !5950
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !5951, !srcloc !5952
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !5953, !srcloc !5954
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !5955, !srcloc !5956
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !5957, !srcloc !5958
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !5959, !srcloc !5960
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !5961, !srcloc !5962
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !5963, !srcloc !5964
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !5965, !srcloc !5966
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !5967, !srcloc !5968
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !5969, !srcloc !5970
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !5971, !srcloc !5972
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !5973, !srcloc !5974
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !5975, !srcloc !5976
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !5977, !srcloc !5978
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !5979, !srcloc !5980
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !5981, !srcloc !5982
  ret void, !dbg !5983
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5984 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5986, metadata !DIExpression()), !dbg !5988
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !5989
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !5990
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !5991, !srcloc !6000
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5991
  call void @llvm.dbg.value(metadata i32 %3, metadata !5997, metadata !DIExpression()) #25, !dbg !6001
  call void @llvm.dbg.value(metadata i32 undef, metadata !5998, metadata !DIExpression()) #25, !dbg !6001
  call void @llvm.dbg.value(metadata i32 %3, metadata !5987, metadata !DIExpression()), !dbg !5988
  call void @llvm.dbg.value(metadata i32 %3, metadata !6002, metadata !DIExpression()) #25, !dbg !6007
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !6009, !srcloc !6010
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6011
  ret i32 0, !dbg !6012
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6013 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6015
  %2 = or i32 %1, 512, !dbg !6015
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6015
  ret void, !dbg !6016
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6017 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6018
  %2 = or i32 %1, 1024, !dbg !6018
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6018
  ret void, !dbg !6019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !6020 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6022, metadata !DIExpression()), !dbg !6023
  ret i32 0, !dbg !6024
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6025 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6074, metadata !DIExpression()), !dbg !6076
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6075, metadata !DIExpression()), !dbg !6076
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !6077
  ret void, !dbg !6078
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6079 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6096, metadata !DIExpression()), !dbg !6099
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6097, metadata !DIExpression()), !dbg !6099
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6100
  %4 = load i32, i32* %3, align 4, !dbg !6100
  call void @llvm.dbg.value(metadata i32 %4, metadata !6098, metadata !DIExpression()), !dbg !6099
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6101
  ret void, !dbg !6102
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !6103 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6107, metadata !DIExpression()), !dbg !6110
  call void @llvm.dbg.value(metadata i8* %0, metadata !6108, metadata !DIExpression()), !dbg !6110
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6111
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !6111
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6109, metadata !DIExpression()), !dbg !6112
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6112
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6113
  %5 = bitcast i8* %4 to i32*, !dbg !6113
  %6 = load i32, i32* %5, align 4, !dbg !6113
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6114
  store i32 %6, i32* %7, align 4, !dbg !6115
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6116
  unreachable, !dbg !6117
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6118 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6121, metadata !DIExpression()), !dbg !6122
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6123
  ret void, !dbg !6124
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6125 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6129, metadata !DIExpression()), !dbg !6130
  %2 = icmp sgt i32 %0, -1, !dbg !6131
  br i1 %2, label %3, label %8, !dbg !6133

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6134, !srcloc !6136
  %4 = and i32 %0, 31, !dbg !6137
  %5 = shl nuw i32 1, %4, !dbg !6138
  %6 = lshr i32 %0, 5, !dbg !6139
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6140
  store volatile i32 %5, i32* %7, align 4, !dbg !6141
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6142, !srcloc !6143
  br label %8, !dbg !6144

8:                                                ; preds = %3, %1
  ret void, !dbg !6145
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6146 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6148, metadata !DIExpression()), !dbg !6149
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6150
  ret void, !dbg !6151
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6154, metadata !DIExpression()), !dbg !6155
  %2 = icmp sgt i32 %0, -1, !dbg !6156
  br i1 %2, label %3, label %8, !dbg !6158

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6159
  %5 = shl nuw i32 1, %4, !dbg !6161
  %6 = lshr i32 %0, 5, !dbg !6162
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6163
  store volatile i32 %5, i32* %7, align 4, !dbg !6164
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6165, !srcloc !6169
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6170, !srcloc !6173
  br label %8, !dbg !6174

8:                                                ; preds = %3, %1
  ret void, !dbg !6175
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6180, metadata !DIExpression()), !dbg !6181
  %2 = lshr i32 %0, 5, !dbg !6182
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6183
  %4 = load volatile i32, i32* %3, align 4, !dbg !6183
  %5 = and i32 %0, 31, !dbg !6184
  %6 = shl nuw i32 1, %5, !dbg !6184
  %7 = and i32 %4, %6, !dbg !6185
  ret i32 %7, !dbg !6186
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6187 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6191, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.value(metadata i32 %1, metadata !6192, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.value(metadata i32 %2, metadata !6193, metadata !DIExpression()), !dbg !6194
  %4 = add i32 %1, 1, !dbg !6195
  call void @llvm.dbg.value(metadata i32 %4, metadata !6192, metadata !DIExpression()), !dbg !6194
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6198
  ret void, !dbg !6199
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6200 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6204, metadata !DIExpression()), !dbg !6206
  call void @llvm.dbg.value(metadata i32 %1, metadata !6205, metadata !DIExpression()), !dbg !6206
  %3 = trunc i32 %1 to i8, !dbg !6207
  %4 = shl i8 %3, 4, !dbg !6207
  %5 = and i32 %0, 15, !dbg !6209
  %6 = add nsw i32 %5, -4, !dbg !6209
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6209
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6209
  %9 = icmp slt i32 %0, 0, !dbg !6209
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6209
  store volatile i8 %4, i8* %10, align 1, !dbg !6207
  ret void, !dbg !6210
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6211 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6213, metadata !DIExpression()), !dbg !6214
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !6215
  ret void, !dbg !6216
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6217 {
  tail call void @z_SysNmiOnReset() #27, !dbg !6219
  tail call void @z_arm_int_exit() #27, !dbg !6220
  ret void, !dbg !6221
}

; Function Attrs: optsize
declare !dbg !6222 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6223 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !6225 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6227
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6228
  tail call void @z_bss_zero() #27, !dbg !6229
  tail call void @z_data_copy() #27, !dbg !6230
  tail call void @z_arm_interrupt_init() #27, !dbg !6231
  tail call void @z_cstart() #29, !dbg !6232
  unreachable, !dbg !6232
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6233 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6234
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6235, !srcloc !6238
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6239, !srcloc !6242
  ret void, !dbg !6243
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6244 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6245
  %2 = and i32 %1, -15728641, !dbg !6245
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6245
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !6246, !srcloc !6253
  call void @llvm.dbg.value(metadata i32 %3, metadata !6251, metadata !DIExpression()) #25, !dbg !6254
  %4 = and i32 %3, -5, !dbg !6255
  call void @llvm.dbg.value(metadata i32 %4, metadata !6256, metadata !DIExpression()) #25, !dbg !6261
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !6263, !srcloc !6264
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6265, !srcloc !6242
  ret void, !dbg !6267
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6268 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6271, metadata !DIExpression()), !dbg !6272
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6273
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6274
  store i32 %0, i32* %3, align 4, !dbg !6275
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6276
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6277
  store i32 %4, i32* %5, align 4, !dbg !6278
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6279
  %7 = or i32 %6, 268435456, !dbg !6279
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6279
  call void @llvm.dbg.value(metadata i32 0, metadata !6280, metadata !DIExpression()) #25, !dbg !6283
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6285, !srcloc !6286
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6287
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6288
  %10 = load i32, i32* %9, align 4, !dbg !6288
  ret i32 %10, !dbg !6289
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6290 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6400, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6401, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata i8* %2, metadata !6402, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6403, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata i8* %4, metadata !6404, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata i8* %5, metadata !6405, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.value(metadata i8* %6, metadata !6406, metadata !DIExpression()), !dbg !6408
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6409
  call void @llvm.dbg.value(metadata i8* %8, metadata !6407, metadata !DIExpression()), !dbg !6408
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6410
  %10 = bitcast i8* %9 to i32*, !dbg !6410
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6411
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6412
  %12 = bitcast i8* %8 to i32*, !dbg !6413
  store i32 %11, i32* %12, align 4, !dbg !6414
  %13 = ptrtoint i8* %4 to i32, !dbg !6415
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6416
  %15 = bitcast i8* %14 to i32*, !dbg !6416
  store i32 %13, i32* %15, align 4, !dbg !6417
  %16 = ptrtoint i8* %5 to i32, !dbg !6418
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6419
  %18 = bitcast i8* %17 to i32*, !dbg !6419
  store i32 %16, i32* %18, align 4, !dbg !6420
  %19 = ptrtoint i8* %6 to i32, !dbg !6421
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6422
  %21 = bitcast i8* %20 to i32*, !dbg !6422
  store i32 %19, i32* %21, align 4, !dbg !6423
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6424
  %23 = bitcast i8* %22 to i32*, !dbg !6424
  store i32 16777216, i32* %23, align 4, !dbg !6425
  %24 = ptrtoint i8* %8 to i32, !dbg !6426
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6427
  store i32 %24, i32* %25, align 8, !dbg !6428
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6429
  store i32 0, i32* %26, align 4, !dbg !6430
  ret void, !dbg !6431
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6432 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6437, metadata !DIExpression()), !dbg !6443
  call void @llvm.dbg.value(metadata i32 %1, metadata !6438, metadata !DIExpression()), !dbg !6443
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6444
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6439, metadata !DIExpression()), !dbg !6443
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6445
  br i1 %4, label %19, label %5, !dbg !6447

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6442, metadata !DIExpression()), !dbg !6443
  %6 = icmp eq i32 %0, -22, !dbg !6448
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6448
  %8 = load i32, i32* %7, align 4, !dbg !6448
  br i1 %6, label %16, label %9, !dbg !6450

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6448
  %11 = icmp ule i32 %10, %0, !dbg !6448
  %12 = icmp ugt i32 %8, %0, !dbg !6448
  %13 = and i1 %12, %11, !dbg !6448
  %14 = icmp ugt i32 %8, %1, !dbg !6448
  %15 = and i1 %14, %13, !dbg !6448
  br i1 %15, label %18, label %19, !dbg !6448

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6448
  br i1 %17, label %18, label %19, !dbg !6450

18:                                               ; preds = %9, %16
  br label %19, !dbg !6451

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6443
  ret i32 %20, !dbg !6453
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !6454 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6458, metadata !DIExpression()), !dbg !6461
  call void @llvm.dbg.value(metadata i8* %1, metadata !6459, metadata !DIExpression()), !dbg !6461
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6460, metadata !DIExpression()), !dbg !6461
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6462
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !6463
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !6464, !srcloc !6465
  unreachable, !dbg !6466
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6467 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6485, metadata !DIExpression()), !dbg !6495
  call void @llvm.dbg.value(metadata i32 %1, metadata !6486, metadata !DIExpression()), !dbg !6495
  call void @llvm.dbg.value(metadata i32 %2, metadata !6487, metadata !DIExpression()), !dbg !6495
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6488, metadata !DIExpression()), !dbg !6495
  call void @llvm.dbg.value(metadata i32 0, metadata !6489, metadata !DIExpression()), !dbg !6495
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6496
  %9 = and i32 %8, 511, !dbg !6497
  call void @llvm.dbg.value(metadata i32 %9, metadata !6490, metadata !DIExpression()), !dbg !6495
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6498
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6498
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6499
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6499
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6494, metadata !DIExpression()), !dbg !6500
  call void @llvm.dbg.value(metadata i32 0, metadata !6501, metadata !DIExpression()) #25, !dbg !6504
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6506, !srcloc !6507
  call void @llvm.dbg.value(metadata i8* %6, metadata !6492, metadata !DIExpression(DW_OP_deref)), !dbg !6495
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !6508
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6493, metadata !DIExpression()), !dbg !6495
  call void @llvm.dbg.value(metadata i8* %5, metadata !6491, metadata !DIExpression(DW_OP_deref)), !dbg !6495
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !6509
  call void @llvm.dbg.value(metadata i32 %12, metadata !6489, metadata !DIExpression()), !dbg !6495
  %13 = load i8, i8* %5, align 1, !dbg !6510, !range !6512
  call void @llvm.dbg.value(metadata i8 %13, metadata !6491, metadata !DIExpression()), !dbg !6495
  %14 = icmp eq i8 %13, 0, !dbg !6510
  br i1 %14, label %15, label %32, !dbg !6513

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6514
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #27, !dbg !6515
  %18 = load i8, i8* %6, align 1, !dbg !6516, !range !6512
  call void @llvm.dbg.value(metadata i8 %18, metadata !6492, metadata !DIExpression()), !dbg !6495
  %19 = icmp eq i8 %18, 0, !dbg !6516
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6518
  %21 = load i32, i32* %20, align 4, !dbg !6518
  br i1 %19, label %27, label %22, !dbg !6519

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6520
  %24 = icmp eq i32 %23, 0, !dbg !6523
  br i1 %24, label %25, label %31, !dbg !6524

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6525
  br label %29, !dbg !6527

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6528
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6518
  br label %31, !dbg !6530

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #27, !dbg !6530
  br label %32, !dbg !6531

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6531
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6531
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6531
  ret void, !dbg !6531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6532 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6537, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.value(metadata i32 %1, metadata !6538, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.value(metadata i32 %2, metadata !6539, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.value(metadata i8* %3, metadata !6540, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.value(metadata i8 0, metadata !6541, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6542, metadata !DIExpression()), !dbg !6543
  store i8 0, i8* %3, align 1, !dbg !6544
  %5 = icmp ult i32 %2, -16777216, !dbg !6545
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6547
  br i1 %8, label %16, label %9, !dbg !6547

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6548
  %11 = icmp eq i32 %10, 0, !dbg !6548
  br i1 %11, label %12, label %13, !dbg !6550

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6542, metadata !DIExpression()), !dbg !6543
  store i8 1, i8* %3, align 1, !dbg !6553
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6543
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6542, metadata !DIExpression()), !dbg !6543
  br label %16, !dbg !6556

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6543
  ret %struct.__esf* %17, !dbg !6557
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6558 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6562, metadata !DIExpression()), !dbg !6566
  call void @llvm.dbg.value(metadata i32 %1, metadata !6563, metadata !DIExpression()), !dbg !6566
  call void @llvm.dbg.value(metadata i8* %2, metadata !6564, metadata !DIExpression()), !dbg !6566
  call void @llvm.dbg.value(metadata i32 0, metadata !6565, metadata !DIExpression()), !dbg !6566
  store i8 0, i8* %2, align 1, !dbg !6567
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6568

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !6569
  call void @llvm.dbg.value(metadata i32 %5, metadata !6565, metadata !DIExpression()), !dbg !6566
  br label %11, !dbg !6571

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6572
  call void @llvm.dbg.value(metadata i32 %7, metadata !6565, metadata !DIExpression()), !dbg !6566
  br label %11, !dbg !6573

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6574
  call void @llvm.dbg.value(metadata i32 0, metadata !6565, metadata !DIExpression()), !dbg !6566
  br label %11, !dbg !6575

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !6576
  call void @llvm.dbg.value(metadata i32 0, metadata !6565, metadata !DIExpression()), !dbg !6566
  br label %11, !dbg !6577

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !6578
  br label %11, !dbg !6579

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6580
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6581 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6585, metadata !DIExpression()), !dbg !6588
  call void @llvm.dbg.value(metadata i8* %1, metadata !6586, metadata !DIExpression()), !dbg !6588
  call void @llvm.dbg.value(metadata i32 0, metadata !6587, metadata !DIExpression()), !dbg !6588
  store i8 0, i8* %1, align 1, !dbg !6589
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6590
  %4 = and i32 %3, 2, !dbg !6592
  %5 = icmp eq i32 %4, 0, !dbg !6593
  br i1 %5, label %6, label %33, !dbg !6594

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6595
  %8 = icmp sgt i32 %7, -1, !dbg !6597
  br i1 %8, label %9, label %33, !dbg !6598

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6599
  %11 = and i32 %10, 1073741824, !dbg !6601
  %12 = icmp eq i32 %11, 0, !dbg !6602
  br i1 %12, label %33, label %13, !dbg !6603

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !6604
  br i1 %14, label %15, label %18, !dbg !6607

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6608
  %17 = load i32, i32* %16, align 4, !dbg !6608
  call void @llvm.dbg.value(metadata i32 %17, metadata !6587, metadata !DIExpression()), !dbg !6588
  br label %33, !dbg !6610

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6611
  %20 = and i32 %19, 255, !dbg !6613
  %21 = icmp eq i32 %20, 0, !dbg !6614
  br i1 %21, label %24, label %22, !dbg !6615

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6616
  call void @llvm.dbg.value(metadata i32 %23, metadata !6587, metadata !DIExpression()), !dbg !6588
  br label %33, !dbg !6618

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6619
  %26 = and i32 %25, 65280, !dbg !6621
  %27 = icmp eq i32 %26, 0, !dbg !6622
  br i1 %27, label %29, label %28, !dbg !6623

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6624
  call void @llvm.dbg.value(metadata i32 0, metadata !6587, metadata !DIExpression()), !dbg !6588
  br label %33, !dbg !6626

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6627
  %31 = icmp ult i32 %30, 65536, !dbg !6629
  br i1 %31, label %33, label %32, !dbg !6630

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !6631
  call void @llvm.dbg.value(metadata i32 0, metadata !6587, metadata !DIExpression()), !dbg !6588
  br label %33, !dbg !6633

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6588
  call void @llvm.dbg.value(metadata i32 %34, metadata !6587, metadata !DIExpression()), !dbg !6588
  ret i32 %34, !dbg !6634
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6635 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6637, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.value(metadata i32 %1, metadata !6638, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.value(metadata i8* %2, metadata !6639, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.value(metadata i32 0, metadata !6640, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.value(metadata i32 -22, metadata !6641, metadata !DIExpression()), !dbg !6650
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6651
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6653
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6655
  %7 = and i32 %6, 2, !dbg !6656
  %8 = icmp eq i32 %7, 0, !dbg !6657
  br i1 %8, label %19, label %9, !dbg !6658

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6659
  call void @llvm.dbg.value(metadata i32 %10, metadata !6642, metadata !DIExpression()), !dbg !6660
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6661
  %12 = and i32 %11, 128, !dbg !6663
  %13 = icmp eq i32 %12, 0, !dbg !6664
  br i1 %13, label %19, label %14, !dbg !6665

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6641, metadata !DIExpression()), !dbg !6650
  %15 = icmp eq i32 %1, 0, !dbg !6666
  br i1 %15, label %19, label %16, !dbg !6669

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6670
  %18 = and i32 %17, -129, !dbg !6670
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6670
  br label %19, !dbg !6672

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6650
  call void @llvm.dbg.value(metadata i32 %20, metadata !6641, metadata !DIExpression()), !dbg !6650
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6673
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6675
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6677
  %24 = and i32 %23, 16, !dbg !6678
  %25 = icmp eq i32 %24, 0, !dbg !6678
  br i1 %25, label %26, label %30, !dbg !6679

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6680
  %28 = and i32 %27, 2, !dbg !6681
  %29 = icmp eq i32 %28, 0, !dbg !6681
  br i1 %29, label %39, label %30, !dbg !6682

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6683
  %32 = and i32 %31, 2048, !dbg !6684
  %33 = icmp eq i32 %32, 0, !dbg !6684
  br i1 %33, label %39, label %34, !dbg !6685

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6686
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #27, !dbg !6687
  call void @llvm.dbg.value(metadata i32 %36, metadata !6645, metadata !DIExpression()), !dbg !6688
  %37 = icmp eq i32 %36, 0, !dbg !6689
  br i1 %37, label %39, label %38, !dbg !6691

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6692, metadata !DIExpression()) #25, !dbg !6695
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #25, !dbg !6698, !srcloc !6699
  call void @llvm.dbg.value(metadata i32 2, metadata !6640, metadata !DIExpression()), !dbg !6650
  br label %39, !dbg !6700

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !6650
  call void @llvm.dbg.value(metadata i32 %40, metadata !6640, metadata !DIExpression()), !dbg !6650
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6701
  %42 = and i32 %41, 32, !dbg !6703
  %43 = icmp eq i32 %42, 0, !dbg !6704
  br i1 %43, label %47, label %44, !dbg !6705

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6706
  %46 = and i32 %45, -8193, !dbg !6706
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6706
  br label %47, !dbg !6708

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6709
  %49 = or i32 %48, 255, !dbg !6709
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6709
  store i8 0, i8* %2, align 1, !dbg !6710
  ret i32 %40, !dbg !6711
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6712 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6716, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata i32 %0, metadata !6717, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata i8* %1, metadata !6718, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.value(metadata i32 0, metadata !6719, metadata !DIExpression()), !dbg !6723
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6724
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6726
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6728
  %6 = and i32 %5, 512, !dbg !6729
  %7 = icmp eq i32 %6, 0, !dbg !6729
  br i1 %7, label %18, label %8, !dbg !6730

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6731
  call void @llvm.dbg.value(metadata i32 %9, metadata !6720, metadata !DIExpression()), !dbg !6732
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6733
  %11 = and i32 %10, 32768, !dbg !6735
  %12 = icmp ne i32 %11, 0, !dbg !6736
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6737
  br i1 %14, label %15, label %18, !dbg !6737

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6738
  %17 = and i32 %16, -32769, !dbg !6738
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6738
  br label %18, !dbg !6742

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6743
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6745
  %21 = and i32 %20, 256, !dbg !6747
  %22 = icmp eq i32 %21, 0, !dbg !6748
  br i1 %22, label %23, label %25, !dbg !6749

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6750
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6752
  %27 = or i32 %26, 65280, !dbg !6752
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6752
  store i8 0, i8* %1, align 1, !dbg !6753
  ret void, !dbg !6754
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6755 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6761, metadata !DIExpression()), !dbg !6763
  call void @llvm.dbg.value(metadata i32 0, metadata !6762, metadata !DIExpression()), !dbg !6763
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6764
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6766
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6768
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6770
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6772
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6774
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6776
  %8 = or i32 %7, -65536, !dbg !6776
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6776
  ret void, !dbg !6777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6778 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6782, metadata !DIExpression()), !dbg !6784
  call void @llvm.dbg.value(metadata i8* %0, metadata !6783, metadata !DIExpression()), !dbg !6784
  store i8 0, i8* %0, align 1, !dbg !6785
  ret void, !dbg !6786
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6787 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6791, metadata !DIExpression()), !dbg !6794
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6795
  %3 = load i32, i32* %2, align 4, !dbg !6795
  %4 = inttoptr i32 %3 to i16*, !dbg !6796
  call void @llvm.dbg.value(metadata i16* %4, metadata !6792, metadata !DIExpression()), !dbg !6794
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6797
  %6 = or i32 %5, 256, !dbg !6797
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6797
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6798, !srcloc !6801
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6802, !srcloc !6805
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6806
  %8 = load i16, i16* %7, align 2, !dbg !6807
  call void @llvm.dbg.value(metadata i16 %8, metadata !6793, metadata !DIExpression()), !dbg !6794
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6808
  %10 = and i32 %9, -257, !dbg !6808
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6808
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6809, !srcloc !6801
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6811, !srcloc !6805
  %11 = icmp eq i16 %8, -8446, !dbg !6813
  ret i1 %11, !dbg !6815
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6816 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6817
  %2 = or i32 %1, 16, !dbg !6817
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6817
  ret void, !dbg !6818
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6819 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6822, metadata !DIExpression()), !dbg !6823
  br label %1, !dbg !6824

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6822, metadata !DIExpression()), !dbg !6823
  tail call fastcc void @__NVIC_SetPriority.12(i32 noundef %2) #26, !dbg !6826
  %3 = add nuw nsw i32 %2, 1, !dbg !6829
  call void @llvm.dbg.value(metadata i32 %3, metadata !6822, metadata !DIExpression()), !dbg !6823
  %4 = icmp eq i32 %3, 97, !dbg !6830
  br i1 %4, label %5, label %1, !dbg !6824, !llvm.loop !6831

5:                                                ; preds = %1
  ret void, !dbg !6833
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.12(i32 noundef %0) unnamed_addr #15 !dbg !6834 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6836, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i32 1, metadata !6837, metadata !DIExpression()), !dbg !6838
  %2 = and i32 %0, 15, !dbg !6839
  %3 = add nsw i32 %2, -4, !dbg !6839
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6839
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6839
  %6 = icmp slt i32 %0, 0, !dbg !6839
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6839
  store volatile i8 16, i8* %7, align 1, !dbg !6840
  ret void, !dbg !6842
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6843 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6949, metadata !DIExpression()), !dbg !6950
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6951
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6953
  br i1 %3, label %4, label %12, !dbg !6954

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !6955, !srcloc !6967
  call void @llvm.dbg.value(metadata i32 %5, metadata !6958, metadata !DIExpression()) #25, !dbg !6968
  %6 = icmp eq i32 %5, 0, !dbg !6969
  br i1 %6, label %12, label %7, !dbg !6970

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6971
  %9 = or i32 %8, 268435456, !dbg !6971
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6971
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6973
  %11 = and i32 %10, -32769, !dbg !6973
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6973
  br label %12, !dbg !6974

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !6975
  ret void, !dbg !6976
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !6977 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !6978
  ret void, !dbg !6979
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !353 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !470, metadata !DIExpression()), !dbg !6980
  call void @llvm.dbg.value(metadata i8 0, metadata !471, metadata !DIExpression()), !dbg !6980
  call void @llvm.dbg.value(metadata i32 64, metadata !473, metadata !DIExpression()), !dbg !6980
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !6981
  %3 = load i32, i32* %2, align 4, !dbg !6981
  %4 = add i32 %3, -64, !dbg !6983
  call void @llvm.dbg.value(metadata i32 %4, metadata !472, metadata !DIExpression()), !dbg !6980
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !6984
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !6985
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !6986
  call void @llvm.dbg.value(metadata i8 1, metadata !471, metadata !DIExpression()), !dbg !6980
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !6987
  ret void, !dbg !6988
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !6989 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6990
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6991, !srcloc !6994
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6995, !srcloc !6998
  ret void, !dbg !6999
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7000 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !7001, !srcloc !7004
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7005
  ret void, !dbg !7006
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !7007 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7022, metadata !DIExpression()), !dbg !7026
  call void @llvm.dbg.value(metadata i8 %1, metadata !7023, metadata !DIExpression()), !dbg !7026
  call void @llvm.dbg.value(metadata i32 %2, metadata !7024, metadata !DIExpression()), !dbg !7026
  call void @llvm.dbg.value(metadata i32 %3, metadata !7025, metadata !DIExpression()), !dbg !7026
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7027
  ret void, !dbg !7029
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7030 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7035, metadata !DIExpression()), !dbg !7040
  call void @llvm.dbg.value(metadata i8 %1, metadata !7036, metadata !DIExpression()), !dbg !7040
  call void @llvm.dbg.value(metadata i32 undef, metadata !7037, metadata !DIExpression()), !dbg !7040
  call void @llvm.dbg.value(metadata i32 undef, metadata !7038, metadata !DIExpression()), !dbg !7040
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7041
  call void @llvm.dbg.value(metadata i8 %3, metadata !7039, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7040
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !7042
  call void @llvm.dbg.value(metadata i32 %4, metadata !7039, metadata !DIExpression()), !dbg !7040
  %5 = trunc i32 %4 to i8, !dbg !7043
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7044
  ret void, !dbg !7045
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !7046 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7050, metadata !DIExpression()), !dbg !7056
  call void @llvm.dbg.value(metadata i8 %1, metadata !7051, metadata !DIExpression()), !dbg !7056
  call void @llvm.dbg.value(metadata i8 %2, metadata !7052, metadata !DIExpression()), !dbg !7056
  call void @llvm.dbg.value(metadata i1 %3, metadata !7053, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7056
  %5 = zext i8 %2 to i32, !dbg !7057
  call void @llvm.dbg.value(metadata i32 %5, metadata !7055, metadata !DIExpression()), !dbg !7056
  call void @llvm.dbg.value(metadata i32 0, metadata !7054, metadata !DIExpression()), !dbg !7056
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7055, metadata !DIExpression()), !dbg !7056
  call void @llvm.dbg.value(metadata i32 0, metadata !7054, metadata !DIExpression()), !dbg !7056
  %7 = icmp eq i8 %1, 0, !dbg !7058
  br i1 %7, label %29, label %8, !dbg !7061

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7055, metadata !DIExpression()), !dbg !7056
  call void @llvm.dbg.value(metadata i32 %10, metadata !7054, metadata !DIExpression()), !dbg !7056
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7062
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7065
  %13 = load i32, i32* %12, align 4, !dbg !7065
  %14 = icmp eq i32 %13, 0, !dbg !7066
  br i1 %14, label %25, label %15, !dbg !7067

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !7068

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7070
  %18 = icmp eq i32 %17, 0, !dbg !7070
  br i1 %18, label %29, label %19, !dbg !7071

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !7072
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !7073
  call void @llvm.dbg.value(metadata i32 %21, metadata !7055, metadata !DIExpression()), !dbg !7056
  %22 = icmp eq i32 %21, -22, !dbg !7074
  br i1 %22, label %29, label %23, !dbg !7076

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !7077
  call void @llvm.dbg.value(metadata i32 %24, metadata !7055, metadata !DIExpression()), !dbg !7056
  br label %25, !dbg !7078

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !7056
  call void @llvm.dbg.value(metadata i32 %26, metadata !7055, metadata !DIExpression()), !dbg !7056
  %27 = add nuw nsw i32 %10, 1, !dbg !7079
  call void @llvm.dbg.value(metadata i32 %27, metadata !7054, metadata !DIExpression()), !dbg !7056
  %28 = icmp eq i32 %27, %6, !dbg !7058
  br i1 %28, label %29, label %8, !dbg !7061, !llvm.loop !7080

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !7056
  ret i32 %30, !dbg !7082
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7083 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7087, metadata !DIExpression()), !dbg !7089
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7090
  %3 = load i32, i32* %2, align 4, !dbg !7090
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7091, !range !4068
  %5 = icmp ult i32 %4, 2, !dbg !7091
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7092
  br i1 %7, label %8, label %15, !dbg !7092

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7093
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7094
  %11 = load i32, i32* %10, align 4, !dbg !7094
  %12 = and i32 %11, %9, !dbg !7095
  %13 = icmp eq i32 %12, 0, !dbg !7096
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7088, metadata !DIExpression()), !dbg !7089
  ret i32 %16, !dbg !7097
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7098 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7102, metadata !DIExpression()), !dbg !7105
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7103, metadata !DIExpression()), !dbg !7105
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7106
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !7106
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7104, metadata !DIExpression()), !dbg !7107
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7108
  %6 = load i32, i32* %5, align 4, !dbg !7108
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7109
  store i32 %6, i32* %7, align 4, !dbg !7110
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7111
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7112
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7113
  %11 = load i32, i32* %10, align 4, !dbg !7113
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7114
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7115
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !7116
  ret i32 %12, !dbg !7117
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7118 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7125, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7126, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.value(metadata i32 undef, metadata !7127, metadata !DIExpression()), !dbg !7129
  call void @llvm.dbg.value(metadata i32 %2, metadata !7128, metadata !DIExpression()), !dbg !7129
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7130
  %5 = load i32, i32* %4, align 4, !dbg !7130
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7131
  %7 = or i32 %6, %5, !dbg !7132
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7133
  store i32 %7, i32* %8, align 4, !dbg !7134
  ret void, !dbg !7135
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7136 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7140, metadata !DIExpression()), !dbg !7142
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7141, metadata !DIExpression()), !dbg !7142
  %3 = zext i8 %0 to i32, !dbg !7143
  %4 = icmp ugt i8 %0, 7, !dbg !7145
  br i1 %4, label %6, label %5, !dbg !7146

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7147
  br label %6, !dbg !7148

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7142
  ret i32 %7, !dbg !7149
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7150 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7154, metadata !DIExpression()), !dbg !7156
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7155, metadata !DIExpression()), !dbg !7156
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7157
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7158
  %4 = load i32, i32* %3, align 4, !dbg !7158
  %5 = and i32 %4, -32, !dbg !7159
  %6 = or i32 %5, %0, !dbg !7160
  %7 = or i32 %6, 16, !dbg !7160
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7161
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7162
  %9 = load i32, i32* %8, align 4, !dbg !7162
  %10 = or i32 %9, 1, !dbg !7163
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7164
  ret void, !dbg !7165
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7166 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7169, metadata !DIExpression()), !dbg !7170
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7171
  ret void, !dbg !7172
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7177, metadata !DIExpression()), !dbg !7178
  %2 = icmp ult i32 %0, 33, !dbg !7179
  br i1 %2, label %11, label %3, !dbg !7181

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7182
  br i1 %4, label %11, label %5, !dbg !7184

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7185
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7186, !range !4068
  %8 = mul nsw i32 %7, -2, !dbg !7187
  %9 = add nsw i32 %8, 62, !dbg !7187
  %10 = and i32 %9, 62, !dbg !7188
  br label %11, !dbg !7189

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7178
  ret i32 %12, !dbg !7190
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7191 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7195, metadata !DIExpression()), !dbg !7197
  call void @llvm.dbg.value(metadata i8 %1, metadata !7196, metadata !DIExpression()), !dbg !7197
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7198
  ret void, !dbg !7200
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7201 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7205, metadata !DIExpression()), !dbg !7212
  call void @llvm.dbg.value(metadata i8 %1, metadata !7206, metadata !DIExpression()), !dbg !7212
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7213
  call void @llvm.dbg.value(metadata i8 %3, metadata !7207, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7212
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7214
  call void @llvm.dbg.value(metadata i32 %4, metadata !7207, metadata !DIExpression()), !dbg !7212
  %5 = icmp ne i32 %4, -22, !dbg !7215
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7216
  call void @llvm.dbg.value(metadata i32 %4, metadata !7208, metadata !DIExpression()), !dbg !7217
  br i1 %7, label %8, label %12, !dbg !7216

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7208, metadata !DIExpression()), !dbg !7217
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7218
  %10 = add i32 %9, 1, !dbg !7221
  call void @llvm.dbg.value(metadata i32 %10, metadata !7208, metadata !DIExpression()), !dbg !7217
  %11 = icmp eq i32 %10, 8, !dbg !7222
  br i1 %11, label %12, label %8, !dbg !7223, !llvm.loop !7224

12:                                               ; preds = %8, %2
  ret void, !dbg !7226
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7227 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7230, metadata !DIExpression()), !dbg !7231
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7232
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7233
  ret void, !dbg !7234
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7235 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7240
  %2 = icmp ugt i32 %1, 8, !dbg !7242
  br i1 %2, label %14, label %3, !dbg !7243

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7244
  call void @llvm.dbg.value(metadata i32 0, metadata !7239, metadata !DIExpression()), !dbg !7245
  %4 = icmp eq i32 %1, 0, !dbg !7246
  br i1 %4, label %12, label %5, !dbg !7249

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7249

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7239, metadata !DIExpression()), !dbg !7245
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7250
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7252
  %10 = add nuw i32 %8, 1, !dbg !7253
  call void @llvm.dbg.value(metadata i32 %10, metadata !7239, metadata !DIExpression()), !dbg !7245
  %11 = icmp eq i32 %10, %1, !dbg !7246
  br i1 %11, label %12, label %7, !dbg !7249, !llvm.loop !7254

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7256
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7257
  tail call void @arm_core_mpu_enable() #26, !dbg !7258
  br label %14, !dbg !7259

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7245
  ret i32 %15, !dbg !7260
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7261 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7268, metadata !DIExpression()), !dbg !7271
  call void @llvm.dbg.value(metadata i8* %1, metadata !7269, metadata !DIExpression()), !dbg !7271
  call void @llvm.dbg.value(metadata i8* %0, metadata !7270, metadata !DIExpression()), !dbg !7271
  %3 = load i8, i8* %1, align 1, !dbg !7272
  %4 = icmp eq i8 %3, 0, !dbg !7273
  br i1 %4, label %13, label %5, !dbg !7274

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7268, metadata !DIExpression()), !dbg !7271
  call void @llvm.dbg.value(metadata i8* %8, metadata !7269, metadata !DIExpression()), !dbg !7271
  store i8 %6, i8* %7, align 1, !dbg !7275
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7277
  call void @llvm.dbg.value(metadata i8* %9, metadata !7268, metadata !DIExpression()), !dbg !7271
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7278
  call void @llvm.dbg.value(metadata i8* %10, metadata !7269, metadata !DIExpression()), !dbg !7271
  %11 = load i8, i8* %10, align 1, !dbg !7272
  %12 = icmp eq i8 %11, 0, !dbg !7273
  br i1 %12, label %13, label %5, !dbg !7274, !llvm.loop !7279

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7281
  ret i8* %0, !dbg !7282
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7283 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7287, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.value(metadata i8* %1, metadata !7288, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.value(metadata i32 %2, metadata !7289, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.value(metadata i8* %0, metadata !7290, metadata !DIExpression()), !dbg !7291
  %4 = icmp eq i32 %2, 0, !dbg !7292
  br i1 %4, label %22, label %5, !dbg !7293

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7287, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.value(metadata i32 %7, metadata !7289, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.value(metadata i8* %8, metadata !7288, metadata !DIExpression()), !dbg !7291
  %9 = load i8, i8* %8, align 1, !dbg !7294
  %10 = icmp eq i8 %9, 0, !dbg !7295
  br i1 %10, label %16, label %11, !dbg !7296

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7297
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7299
  call void @llvm.dbg.value(metadata i8* %12, metadata !7288, metadata !DIExpression()), !dbg !7291
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7300
  call void @llvm.dbg.value(metadata i8* %13, metadata !7287, metadata !DIExpression()), !dbg !7291
  %14 = add i32 %7, -1, !dbg !7301
  call void @llvm.dbg.value(metadata i32 %14, metadata !7289, metadata !DIExpression()), !dbg !7291
  %15 = icmp eq i32 %14, 0, !dbg !7292
  br i1 %15, label %22, label %5, !dbg !7293, !llvm.loop !7302

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7287, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.value(metadata i32 %18, metadata !7289, metadata !DIExpression()), !dbg !7291
  store i8 0, i8* %17, align 1, !dbg !7304
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7306
  call void @llvm.dbg.value(metadata i8* %19, metadata !7287, metadata !DIExpression()), !dbg !7291
  %20 = add i32 %18, -1, !dbg !7307
  call void @llvm.dbg.value(metadata i32 %20, metadata !7289, metadata !DIExpression()), !dbg !7291
  %21 = icmp eq i32 %20, 0, !dbg !7308
  br i1 %21, label %22, label %16, !dbg !7309, !llvm.loop !7310

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7312
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7313 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7317, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.value(metadata i32 %1, metadata !7318, metadata !DIExpression()), !dbg !7320
  call void @llvm.dbg.value(metadata i32 %1, metadata !7319, metadata !DIExpression()), !dbg !7320
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7321

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7317, metadata !DIExpression()), !dbg !7320
  %6 = load i8, i8* %5, align 1, !dbg !7322
  %7 = icmp eq i8 %6, %3, !dbg !7323
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7324
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7325
  call void @llvm.dbg.value(metadata i8* %10, metadata !7317, metadata !DIExpression()), !dbg !7320
  br i1 %9, label %11, label %4, !dbg !7324, !llvm.loop !7327

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7329
  ret i8* %12, !dbg !7330
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7331 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7333, metadata !DIExpression()), !dbg !7336
  call void @llvm.dbg.value(metadata i32 %1, metadata !7334, metadata !DIExpression()), !dbg !7336
  call void @llvm.dbg.value(metadata i8* null, metadata !7335, metadata !DIExpression()), !dbg !7336
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7337

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7336
  call void @llvm.dbg.value(metadata i8* %6, metadata !7335, metadata !DIExpression()), !dbg !7336
  call void @llvm.dbg.value(metadata i8* %5, metadata !7333, metadata !DIExpression()), !dbg !7336
  %7 = load i8, i8* %5, align 1, !dbg !7338
  %8 = icmp eq i8 %7, %3, !dbg !7341
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7342
  call void @llvm.dbg.value(metadata i8* %9, metadata !7335, metadata !DIExpression()), !dbg !7336
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7343
  call void @llvm.dbg.value(metadata i8* %10, metadata !7333, metadata !DIExpression()), !dbg !7336
  %11 = icmp eq i8 %7, 0, !dbg !7344
  br i1 %11, label %12, label %4, !dbg !7344, !llvm.loop !7345

12:                                               ; preds = %4
  ret i8* %9, !dbg !7347
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7348 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7352, metadata !DIExpression()), !dbg !7354
  call void @llvm.dbg.value(metadata i32 0, metadata !7353, metadata !DIExpression()), !dbg !7354
  %2 = load i8, i8* %0, align 1, !dbg !7355
  %3 = icmp eq i8 %2, 0, !dbg !7356
  br i1 %3, label %11, label %4, !dbg !7357

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7353, metadata !DIExpression()), !dbg !7354
  call void @llvm.dbg.value(metadata i8* %6, metadata !7352, metadata !DIExpression()), !dbg !7354
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7358
  call void @llvm.dbg.value(metadata i8* %7, metadata !7352, metadata !DIExpression()), !dbg !7354
  %8 = add i32 %5, 1, !dbg !7360
  call void @llvm.dbg.value(metadata i32 %8, metadata !7353, metadata !DIExpression()), !dbg !7354
  %9 = load i8, i8* %7, align 1, !dbg !7355
  %10 = icmp eq i8 %9, 0, !dbg !7356
  br i1 %10, label %11, label %4, !dbg !7357, !llvm.loop !7361

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7354
  ret i32 %12, !dbg !7363
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7364 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7368, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.value(metadata i32 %1, metadata !7369, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.value(metadata i32 0, metadata !7370, metadata !DIExpression()), !dbg !7371
  %3 = load i8, i8* %0, align 1, !dbg !7372
  %4 = icmp ne i8 %3, 0, !dbg !7373
  %5 = icmp ne i32 %1, 0, !dbg !7374
  %6 = and i1 %4, %5, !dbg !7374
  br i1 %6, label %7, label %16, !dbg !7375

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7370, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.value(metadata i8* %9, metadata !7368, metadata !DIExpression()), !dbg !7371
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7376
  call void @llvm.dbg.value(metadata i8* %10, metadata !7368, metadata !DIExpression()), !dbg !7371
  %11 = add nuw i32 %8, 1, !dbg !7378
  call void @llvm.dbg.value(metadata i32 %11, metadata !7370, metadata !DIExpression()), !dbg !7371
  %12 = load i8, i8* %10, align 1, !dbg !7372
  %13 = icmp ne i8 %12, 0, !dbg !7373
  %14 = icmp ult i32 %11, %1, !dbg !7374
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7374
  br i1 %15, label %7, label %16, !dbg !7375, !llvm.loop !7379

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7371
  ret i32 %17, !dbg !7381
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7382 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7386, metadata !DIExpression()), !dbg !7388
  call void @llvm.dbg.value(metadata i8* %1, metadata !7387, metadata !DIExpression()), !dbg !7388
  %3 = load i8, i8* %0, align 1, !dbg !7389
  %4 = load i8, i8* %1, align 1, !dbg !7390
  %5 = icmp ne i8 %3, %4, !dbg !7391
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7392
  br i1 %7, label %18, label %8, !dbg !7392

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7387, metadata !DIExpression()), !dbg !7388
  call void @llvm.dbg.value(metadata i8* %10, metadata !7386, metadata !DIExpression()), !dbg !7388
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7393
  call void @llvm.dbg.value(metadata i8* %11, metadata !7386, metadata !DIExpression()), !dbg !7388
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7395
  call void @llvm.dbg.value(metadata i8* %12, metadata !7387, metadata !DIExpression()), !dbg !7388
  %13 = load i8, i8* %11, align 1, !dbg !7389
  %14 = load i8, i8* %12, align 1, !dbg !7390
  %15 = icmp ne i8 %13, %14, !dbg !7391
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7392
  br i1 %17, label %18, label %8, !dbg !7392, !llvm.loop !7396

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7389
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7390
  %21 = zext i8 %19 to i32, !dbg !7399
  %22 = zext i8 %20 to i32, !dbg !7400
  %23 = sub nsw i32 %21, %22, !dbg !7401
  ret i32 %23, !dbg !7402
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7403 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7407, metadata !DIExpression()), !dbg !7410
  call void @llvm.dbg.value(metadata i8* %1, metadata !7408, metadata !DIExpression()), !dbg !7410
  call void @llvm.dbg.value(metadata i32 %2, metadata !7409, metadata !DIExpression()), !dbg !7410
  %4 = icmp eq i32 %2, 0, !dbg !7411
  br i1 %4, label %23, label %5, !dbg !7411

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7409, metadata !DIExpression()), !dbg !7410
  call void @llvm.dbg.value(metadata i8* %7, metadata !7408, metadata !DIExpression()), !dbg !7410
  call void @llvm.dbg.value(metadata i8* %8, metadata !7407, metadata !DIExpression()), !dbg !7410
  %9 = load i8, i8* %8, align 1, !dbg !7412
  %10 = load i8, i8* %7, align 1, !dbg !7413
  %11 = icmp ne i8 %9, %10, !dbg !7414
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7415
  br i1 %13, label %19, label %14, !dbg !7415

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7416
  call void @llvm.dbg.value(metadata i8* %15, metadata !7407, metadata !DIExpression()), !dbg !7410
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7418
  call void @llvm.dbg.value(metadata i8* %16, metadata !7408, metadata !DIExpression()), !dbg !7410
  %17 = add i32 %6, -1, !dbg !7419
  call void @llvm.dbg.value(metadata i32 %17, metadata !7409, metadata !DIExpression()), !dbg !7410
  %18 = icmp eq i32 %17, 0, !dbg !7411
  br i1 %18, label %23, label %5, !dbg !7411, !llvm.loop !7420

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7423
  %21 = zext i8 %10 to i32, !dbg !7424
  %22 = sub nsw i32 %20, %21, !dbg !7425
  br label %23, !dbg !7426

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7426
  ret i32 %24, !dbg !7427
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7428 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7433, metadata !DIExpression()), !dbg !7438
  call void @llvm.dbg.value(metadata i8* %1, metadata !7434, metadata !DIExpression()), !dbg !7438
  call void @llvm.dbg.value(metadata i8** %2, metadata !7435, metadata !DIExpression()), !dbg !7438
  %4 = icmp eq i8* %0, null, !dbg !7439
  br i1 %4, label %5, label %7, !dbg !7439

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7440
  br label %7, !dbg !7439

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7439
  call void @llvm.dbg.value(metadata i8* %8, metadata !7436, metadata !DIExpression()), !dbg !7438
  %9 = load i8, i8* %8, align 1, !dbg !7441
  %10 = icmp eq i8 %9, 0, !dbg !7441
  br i1 %10, label %33, label %11, !dbg !7442

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7436, metadata !DIExpression()), !dbg !7438
  %14 = zext i8 %12 to i32, !dbg !7441
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !7443
  %16 = icmp eq i8* %15, null, !dbg !7442
  br i1 %16, label %21, label %17, !dbg !7444

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7445
  call void @llvm.dbg.value(metadata i8* %18, metadata !7436, metadata !DIExpression()), !dbg !7438
  %19 = load i8, i8* %18, align 1, !dbg !7441
  %20 = icmp eq i8 %19, 0, !dbg !7441
  br i1 %20, label %33, label %11, !dbg !7442, !llvm.loop !7447

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7437, metadata !DIExpression()), !dbg !7438
  %24 = zext i8 %22 to i32, !dbg !7449
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !7450
  %26 = icmp eq i8* %25, null, !dbg !7451
  br i1 %26, label %27, label %31, !dbg !7452

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7453
  call void @llvm.dbg.value(metadata i8* %28, metadata !7437, metadata !DIExpression()), !dbg !7438
  %29 = load i8, i8* %28, align 1, !dbg !7449
  %30 = icmp eq i8 %29, 0, !dbg !7449
  br i1 %30, label %33, label %21, !dbg !7455, !llvm.loop !7456

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7458
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7461
  br label %33, !dbg !7462

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7438
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7438
  store i8* %34, i8** %2, align 4, !dbg !7438
  ret i8* %35, !dbg !7463
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7464 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7466, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.value(metadata i8* %1, metadata !7467, metadata !DIExpression()), !dbg !7468
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7469
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7470
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !7471
  ret i8* %0, !dbg !7472
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7473 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7475, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i8* %1, metadata !7476, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i32 %2, metadata !7477, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i8* %0, metadata !7478, metadata !DIExpression()), !dbg !7480
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7481
  call void @llvm.dbg.value(metadata i32 %4, metadata !7479, metadata !DIExpression()), !dbg !7480
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7482
  call void @llvm.dbg.value(metadata i8* %5, metadata !7475, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i8* %1, metadata !7476, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i32 %2, metadata !7477, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i32 %2, metadata !7477, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7480
  %6 = icmp eq i32 %2, 0, !dbg !7483
  br i1 %6, label %18, label %7, !dbg !7484

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7485
  call void @llvm.dbg.value(metadata i8* %9, metadata !7475, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i8* %10, metadata !7476, metadata !DIExpression()), !dbg !7480
  %12 = load i8, i8* %10, align 1, !dbg !7486
  %13 = icmp eq i8 %12, 0, !dbg !7487
  br i1 %13, label %18, label %14, !dbg !7488

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7489
  call void @llvm.dbg.value(metadata i8* %15, metadata !7476, metadata !DIExpression()), !dbg !7480
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7491
  call void @llvm.dbg.value(metadata i8* %16, metadata !7475, metadata !DIExpression()), !dbg !7480
  store i8 %12, i8* %9, align 1, !dbg !7492
  call void @llvm.dbg.value(metadata i32 %11, metadata !7477, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.value(metadata i32 %11, metadata !7477, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7480
  %17 = icmp eq i32 %11, 0, !dbg !7483
  br i1 %17, label %18, label %7, !dbg !7484, !llvm.loop !7493

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7480
  store i8 0, i8* %19, align 1, !dbg !7495
  ret i8* %0, !dbg !7496
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7497 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7501, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.value(metadata i8* %1, metadata !7502, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.value(metadata i32 %2, metadata !7503, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.value(metadata i8* %0, metadata !7504, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.value(metadata i8* %1, metadata !7505, metadata !DIExpression()), !dbg !7506
  %4 = icmp eq i32 %2, 0, !dbg !7507
  br i1 %4, label %31, label %5, !dbg !7509

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7505, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.value(metadata i8* %0, metadata !7504, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.value(metadata i32 %2, metadata !7503, metadata !DIExpression()), !dbg !7506
  %6 = add i32 %2, -1, !dbg !7510
  call void @llvm.dbg.value(metadata i32 %6, metadata !7503, metadata !DIExpression()), !dbg !7506
  %7 = icmp eq i32 %6, 0, !dbg !7511
  br i1 %7, label %23, label %8, !dbg !7512

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7513
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7513
  br label %11, !dbg !7513

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7505, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.value(metadata i8* %14, metadata !7504, metadata !DIExpression()), !dbg !7506
  %15 = load i8, i8* %14, align 1, !dbg !7514
  %16 = load i8, i8* %13, align 1, !dbg !7515
  %17 = icmp eq i8 %15, %16, !dbg !7516
  br i1 %17, label %18, label %23, !dbg !7513

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7517
  call void @llvm.dbg.value(metadata i8* %19, metadata !7504, metadata !DIExpression()), !dbg !7506
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7519
  call void @llvm.dbg.value(metadata i8* %20, metadata !7505, metadata !DIExpression()), !dbg !7506
  call void @llvm.dbg.value(metadata i32 %12, metadata !7503, metadata !DIExpression()), !dbg !7506
  %21 = add i32 %12, -1, !dbg !7510
  call void @llvm.dbg.value(metadata i32 %21, metadata !7503, metadata !DIExpression()), !dbg !7506
  %22 = icmp eq i32 %21, 0, !dbg !7511
  br i1 %22, label %23, label %11, !dbg !7512, !llvm.loop !7520

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7506
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7506
  %26 = load i8, i8* %24, align 1, !dbg !7522
  %27 = zext i8 %26 to i32, !dbg !7522
  %28 = load i8, i8* %25, align 1, !dbg !7523
  %29 = zext i8 %28 to i32, !dbg !7523
  %30 = sub nsw i32 %27, %29, !dbg !7524
  br label %31, !dbg !7525

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7506
  ret i32 %32, !dbg !7526
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7527 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7531, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.value(metadata i8* %1, metadata !7532, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.value(metadata i32 %2, metadata !7533, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.value(metadata i8* %0, metadata !7534, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.value(metadata i8* %1, metadata !7535, metadata !DIExpression()), !dbg !7536
  %4 = ptrtoint i8* %0 to i32, !dbg !7537
  %5 = ptrtoint i8* %1 to i32, !dbg !7537
  %6 = sub i32 %4, %5, !dbg !7537
  %7 = icmp ult i32 %6, %2, !dbg !7539
  br i1 %7, label %10, label %8, !dbg !7540

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7535, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.value(metadata i8* %0, metadata !7534, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.value(metadata i32 %2, metadata !7533, metadata !DIExpression()), !dbg !7536
  %9 = icmp eq i32 %2, 0, !dbg !7541
  br i1 %9, label %26, label %17, !dbg !7543

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7533, metadata !DIExpression()), !dbg !7536
  %12 = add i32 %11, -1, !dbg !7544
  call void @llvm.dbg.value(metadata i32 %12, metadata !7533, metadata !DIExpression()), !dbg !7536
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7547
  %14 = load i8, i8* %13, align 1, !dbg !7547
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7548
  store i8 %14, i8* %15, align 1, !dbg !7549
  %16 = icmp eq i32 %12, 0, !dbg !7550
  br i1 %16, label %26, label %10, !dbg !7551, !llvm.loop !7552

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7535, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.value(metadata i8* %19, metadata !7534, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.value(metadata i32 %20, metadata !7533, metadata !DIExpression()), !dbg !7536
  %21 = load i8, i8* %18, align 1, !dbg !7554
  store i8 %21, i8* %19, align 1, !dbg !7556
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7557
  call void @llvm.dbg.value(metadata i8* %22, metadata !7534, metadata !DIExpression()), !dbg !7536
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7558
  call void @llvm.dbg.value(metadata i8* %23, metadata !7535, metadata !DIExpression()), !dbg !7536
  %24 = add i32 %20, -1, !dbg !7559
  call void @llvm.dbg.value(metadata i32 %24, metadata !7533, metadata !DIExpression()), !dbg !7536
  %25 = icmp eq i32 %24, 0, !dbg !7541
  br i1 %25, label %26, label %17, !dbg !7543, !llvm.loop !7560

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7562
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7563 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7569, metadata !DIExpression()), !dbg !7574
  call void @llvm.dbg.value(metadata i8* %1, metadata !7570, metadata !DIExpression()), !dbg !7574
  call void @llvm.dbg.value(metadata i32 %2, metadata !7571, metadata !DIExpression()), !dbg !7574
  call void @llvm.dbg.value(metadata i8* %0, metadata !7572, metadata !DIExpression()), !dbg !7574
  call void @llvm.dbg.value(metadata i8* %1, metadata !7573, metadata !DIExpression()), !dbg !7574
  %4 = icmp eq i32 %2, 0, !dbg !7575
  br i1 %4, label %14, label %5, !dbg !7576

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7573, metadata !DIExpression()), !dbg !7574
  call void @llvm.dbg.value(metadata i8* %7, metadata !7572, metadata !DIExpression()), !dbg !7574
  call void @llvm.dbg.value(metadata i32 %8, metadata !7571, metadata !DIExpression()), !dbg !7574
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7577
  call void @llvm.dbg.value(metadata i8* %9, metadata !7573, metadata !DIExpression()), !dbg !7574
  %10 = load i8, i8* %6, align 1, !dbg !7579
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7580
  call void @llvm.dbg.value(metadata i8* %11, metadata !7572, metadata !DIExpression()), !dbg !7574
  store i8 %10, i8* %7, align 1, !dbg !7581
  %12 = add i32 %8, -1, !dbg !7582
  call void @llvm.dbg.value(metadata i32 %12, metadata !7571, metadata !DIExpression()), !dbg !7574
  %13 = icmp eq i32 %12, 0, !dbg !7575
  br i1 %13, label %14, label %5, !dbg !7576, !llvm.loop !7583

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7585
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7586 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7590, metadata !DIExpression()), !dbg !7595
  call void @llvm.dbg.value(metadata i32 %1, metadata !7591, metadata !DIExpression()), !dbg !7595
  call void @llvm.dbg.value(metadata i32 %2, metadata !7592, metadata !DIExpression()), !dbg !7595
  call void @llvm.dbg.value(metadata i8* %0, metadata !7593, metadata !DIExpression()), !dbg !7595
  %4 = trunc i32 %1 to i8, !dbg !7596
  call void @llvm.dbg.value(metadata i8 %4, metadata !7594, metadata !DIExpression()), !dbg !7595
  call void @llvm.dbg.value(metadata i32 %2, metadata !7592, metadata !DIExpression()), !dbg !7595
  call void @llvm.dbg.value(metadata i8* %0, metadata !7593, metadata !DIExpression()), !dbg !7595
  %5 = icmp eq i32 %2, 0, !dbg !7597
  br i1 %5, label %12, label %6, !dbg !7598

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7592, metadata !DIExpression()), !dbg !7595
  call void @llvm.dbg.value(metadata i8* %8, metadata !7593, metadata !DIExpression()), !dbg !7595
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7599
  call void @llvm.dbg.value(metadata i8* %9, metadata !7593, metadata !DIExpression()), !dbg !7595
  store i8 %4, i8* %8, align 1, !dbg !7601
  %10 = add i32 %7, -1, !dbg !7602
  call void @llvm.dbg.value(metadata i32 %10, metadata !7592, metadata !DIExpression()), !dbg !7595
  %11 = icmp eq i32 %10, 0, !dbg !7597
  br i1 %11, label %12, label %6, !dbg !7598, !llvm.loop !7603

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7605
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7606 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7610, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata i32 %1, metadata !7611, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata i32 %2, metadata !7612, metadata !DIExpression()), !dbg !7616
  %4 = icmp eq i32 %2, 0, !dbg !7617
  br i1 %4, label %17, label %5, !dbg !7618

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7619

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7620
  call void @llvm.dbg.value(metadata i8* %9, metadata !7613, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i32 %8, metadata !7612, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.value(metadata i8* %9, metadata !7613, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7620
  %10 = load i8, i8* %9, align 1, !dbg !7621
  %11 = icmp eq i8 %10, %6, !dbg !7624
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7625
  call void @llvm.dbg.value(metadata i8* %12, metadata !7613, metadata !DIExpression()), !dbg !7620
  call void @llvm.dbg.value(metadata i32 %13, metadata !7612, metadata !DIExpression()), !dbg !7616
  br i1 %15, label %16, label %7, !dbg !7625, !llvm.loop !7626

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7628

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7616
  ret i8* %19, !dbg !7629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7630 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7632, metadata !DIExpression()), !dbg !7633
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7634
  ret void, !dbg !7635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7636 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7638, metadata !DIExpression()), !dbg !7639
  ret i32 -1, !dbg !7640
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7641 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7645, metadata !DIExpression()), !dbg !7647
  call void @llvm.dbg.value(metadata i32* %1, metadata !7646, metadata !DIExpression()), !dbg !7647
  %3 = ptrtoint i32* %1 to i32, !dbg !7648
  %4 = and i32 %3, -2, !dbg !7648
  %5 = icmp eq i32 %4, 2, !dbg !7648
  br i1 %5, label %6, label %9, !dbg !7648

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7649
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !7649
  br label %9, !dbg !7650

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7650
  ret i32 %10, !dbg !7651
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7652 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7654, metadata !DIExpression()), !dbg !7656
  call void @llvm.dbg.value(metadata i32* %1, metadata !7655, metadata !DIExpression()), !dbg !7656
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7657
  ret i32 %3, !dbg !7658
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7659 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7662, metadata !DIExpression()), !dbg !7664
  call void @llvm.dbg.value(metadata i32* %1, metadata !7663, metadata !DIExpression()), !dbg !7664
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7665, !srcloc !7667
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7668
  ret i32 %3, !dbg !7669
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7670 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7675, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata i32* %1, metadata !7676, metadata !DIExpression()), !dbg !7679
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7680
  call void @llvm.dbg.value(metadata i32 %3, metadata !7677, metadata !DIExpression()), !dbg !7679
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !7681
  call void @llvm.dbg.value(metadata i32 %4, metadata !7678, metadata !DIExpression()), !dbg !7679
  %5 = icmp ne i32 %3, %4, !dbg !7682
  %6 = sext i1 %5 to i32, !dbg !7683
  ret i32 %6, !dbg !7684
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7685 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7689, metadata !DIExpression()), !dbg !7693
  call void @llvm.dbg.value(metadata i32 %1, metadata !7690, metadata !DIExpression()), !dbg !7693
  call void @llvm.dbg.value(metadata i32 %2, metadata !7691, metadata !DIExpression()), !dbg !7693
  call void @llvm.dbg.value(metadata i32* %3, metadata !7692, metadata !DIExpression()), !dbg !7693
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7694
  ret i32 %5, !dbg !7695
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7696 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7698, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.value(metadata i32 %1, metadata !7699, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.value(metadata i32 %2, metadata !7700, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.value(metadata i32* %3, metadata !7701, metadata !DIExpression()), !dbg !7702
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7703, !srcloc !7705
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7706
  ret i32 %5, !dbg !7707
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7708 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7710, metadata !DIExpression()), !dbg !7718
  call void @llvm.dbg.value(metadata i32 %1, metadata !7711, metadata !DIExpression()), !dbg !7718
  call void @llvm.dbg.value(metadata i32 %2, metadata !7712, metadata !DIExpression()), !dbg !7718
  call void @llvm.dbg.value(metadata i32* %3, metadata !7713, metadata !DIExpression()), !dbg !7718
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7719
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7721
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7721
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7721
  br i1 %11, label %33, label %12, !dbg !7721

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7718
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7718
  call void @llvm.dbg.value(metadata i8* %14, metadata !7716, metadata !DIExpression()), !dbg !7718
  call void @llvm.dbg.value(metadata i32 %13, metadata !7714, metadata !DIExpression()), !dbg !7718
  call void @llvm.dbg.value(metadata i32 %1, metadata !7715, metadata !DIExpression()), !dbg !7718
  br label %15, !dbg !7722

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7724
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7718
  call void @llvm.dbg.value(metadata i8* %17, metadata !7716, metadata !DIExpression()), !dbg !7718
  call void @llvm.dbg.value(metadata i32 %16, metadata !7715, metadata !DIExpression()), !dbg !7718
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7725
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7728
  call void @llvm.dbg.value(metadata i8* %19, metadata !7716, metadata !DIExpression()), !dbg !7718
  %20 = load i8, i8* %17, align 1, !dbg !7729
  %21 = zext i8 %20 to i32, !dbg !7730
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !7725
  %23 = icmp eq i32 %22, -1, !dbg !7731
  br i1 %23, label %30, label %24, !dbg !7732

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7733
  call void @llvm.dbg.value(metadata i32 %25, metadata !7715, metadata !DIExpression()), !dbg !7718
  %26 = icmp eq i32 %25, 0, !dbg !7734
  br i1 %26, label %27, label %15, !dbg !7735, !llvm.loop !7736

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7738
  call void @llvm.dbg.value(metadata i32 %28, metadata !7714, metadata !DIExpression()), !dbg !7718
  %29 = icmp eq i32 %28, 0, !dbg !7739
  br i1 %29, label %30, label %12, !dbg !7740, !llvm.loop !7741

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7718
  call void @llvm.dbg.value(metadata i32 %31, metadata !7714, metadata !DIExpression()), !dbg !7718
  call void @llvm.dbg.label(metadata !7717), !dbg !7744
  %32 = sub i32 %2, %31, !dbg !7745
  br label %33, !dbg !7746

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7718
  ret i32 %34, !dbg !7747
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7748 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7752, metadata !DIExpression()), !dbg !7753
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7754
  %3 = icmp eq i32 %2, -1, !dbg !7756
  br i1 %3, label %8, label %4, !dbg !7757

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7758
  %6 = icmp eq i32 %5, -1, !dbg !7759
  %7 = sext i1 %6 to i32, !dbg !7758
  br label %8, !dbg !7760

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7753
  ret i32 %9, !dbg !7761
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7762 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7764, metadata !DIExpression()), !dbg !7765
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !7766
  ret void, !dbg !7767
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7772, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.value(metadata i32 %1, metadata !7773, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7774, metadata !DIExpression()), !dbg !7778
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7779
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7779
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7779
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7775, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.value(metadata i32 %0, metadata !7777, metadata !DIExpression()), !dbg !7778
  %7 = icmp slt i32 %0, %1, !dbg !7780
  br i1 %7, label %8, label %22, !dbg !7783

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7777, metadata !DIExpression()), !dbg !7778
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !7784
  %11 = icmp eq i32 %10, 0, !dbg !7784
  br i1 %11, label %19, label %12, !dbg !7787

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !7788
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7790
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7790
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7792
  br i1 %15, label %19, label %16, !dbg !7793

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7794
  %18 = load i8*, i8** %17, align 4, !dbg !7794
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !7795
  br label %19, !dbg !7796

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7797
  call void @llvm.dbg.value(metadata i32 %20, metadata !7777, metadata !DIExpression()), !dbg !7778
  %21 = icmp eq i32 %20, %1, !dbg !7780
  br i1 %21, label %22, label %8, !dbg !7783, !llvm.loop !7798

22:                                               ; preds = %19, %3
  ret void, !dbg !7800
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !7801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7803, metadata !DIExpression()), !dbg !7804
  %2 = shl nuw i32 1, %0, !dbg !7805
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !7808
  ret i32 %3, !dbg !7809
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !7810 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7814, metadata !DIExpression()), !dbg !7815
  %2 = shl nuw i32 1, %0, !dbg !7816
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !7819
  ret void, !dbg !7820
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7821 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7824, metadata !DIExpression()), !dbg !7825
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7826
  ret void, !dbg !7827
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7828 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7830, metadata !DIExpression()), !dbg !7831
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7832
  %3 = and i32 %2, %0, !dbg !7832
  %4 = icmp eq i32 %3, %0, !dbg !7833
  %5 = zext i1 %4 to i32, !dbg !7833
  ret i32 %5, !dbg !7834
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7835 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7837, metadata !DIExpression()), !dbg !7838
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !7839
  ret void, !dbg !7840
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7841 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7843, metadata !DIExpression()), !dbg !7844
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !7845
  ret void, !dbg !7846
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7847 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7849, metadata !DIExpression()), !dbg !7850
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !7851
  ret void, !dbg !7852
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !7853 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7855, metadata !DIExpression()), !dbg !7856
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !7857
  ret void, !dbg !7858
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !7859 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7861, metadata !DIExpression()), !dbg !7862
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !7863
  ret void, !dbg !7864
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7865 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7867, metadata !DIExpression()), !dbg !7868
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !7869
  ret void, !dbg !7870
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !7871 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7873, metadata !DIExpression()), !dbg !7874
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !7875
  ret void, !dbg !7876
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !7877 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7879, metadata !DIExpression()), !dbg !7880
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !7881
  ret void, !dbg !7882
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7883 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7885, metadata !DIExpression()), !dbg !7886
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !7887
  ret void, !dbg !7888
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7889 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7891, metadata !DIExpression()), !dbg !7892
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !7893
  ret void, !dbg !7894
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7895 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7897, metadata !DIExpression()), !dbg !7898
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !7899
  ret i32 0, !dbg !7900
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !728 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !732, metadata !DIExpression()), !dbg !7901
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !7902
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !7904
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !7906
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !7908
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !7910
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !7912
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !7914
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !7916
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !7918
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !7920
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !7922
  ret void, !dbg !7924
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7925 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7927, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.value(metadata i32 0, metadata !7928, metadata !DIExpression()), !dbg !7929
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !7930
  %3 = load i32, i32* %2, align 4, !dbg !7930
  call void @llvm.dbg.value(metadata i32 %3, metadata !7928, metadata !DIExpression()), !dbg !7929
  %4 = shl nuw i32 1, %0, !dbg !7931
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !7932
  tail call void @arch_irq_enable(i32 noundef %3) #27, !dbg !7933
  ret void, !dbg !7934
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7937, metadata !DIExpression()), !dbg !7938
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7939
  %3 = or i32 %2, %0, !dbg !7939
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7939
  ret void, !dbg !7940
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !7941 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7943, metadata !DIExpression()), !dbg !7944
  %2 = icmp slt i32 %0, 32, !dbg !7945
  br i1 %2, label %3, label %5, !dbg !7947

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !7948
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !7950
  br label %5, !dbg !7951

5:                                                ; preds = %1, %3
  ret void, !dbg !7952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7953 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7955, metadata !DIExpression()), !dbg !7956
  %2 = xor i32 %0, -1, !dbg !7957
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7957
  %4 = and i32 %3, %2, !dbg !7957
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7957
  ret void, !dbg !7958
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !7959 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7963, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.value(metadata i32 %1, metadata !7964, metadata !DIExpression()), !dbg !7965
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !7966

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !7967
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !7969
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !7970
  br label %11, !dbg !7971

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !7972
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !7973
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !7974
  br label %11, !dbg !7975

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !7976
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !7977
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !7978
  br label %11, !dbg !7979

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !7980
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !7981
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !7982
  br label %11, !dbg !7983

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !7984
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7985 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7987, metadata !DIExpression()), !dbg !7988
  %2 = xor i32 %0, -1, !dbg !7989
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7989
  %4 = and i32 %3, %2, !dbg !7989
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7989
  ret void, !dbg !7990
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7991 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7993, metadata !DIExpression()), !dbg !7994
  %2 = xor i32 %0, -1, !dbg !7995
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7995
  %4 = and i32 %3, %2, !dbg !7995
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7995
  ret void, !dbg !7996
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7997 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7999, metadata !DIExpression()), !dbg !8000
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8001
  %3 = or i32 %2, %0, !dbg !8001
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8001
  ret void, !dbg !8002
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8005, metadata !DIExpression()), !dbg !8006
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8007
  %3 = or i32 %2, %0, !dbg !8007
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8007
  ret void, !dbg !8008
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !8009 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8013, metadata !DIExpression()), !dbg !8019
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8014, metadata !DIExpression()), !dbg !8019
  call void @llvm.dbg.value(metadata i8* %2, metadata !8015, metadata !DIExpression()), !dbg !8019
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !8016, metadata !DIExpression()), !dbg !8019
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8018, metadata !DIExpression()), !dbg !8019
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8020
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8020
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8022
  br i1 %6, label %7, label %9, !dbg !8023

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8024
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8025
  store i8* %2, i8** %8, align 4, !dbg !8026
  br label %9, !dbg !8027

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8019
  ret i32 %10, !dbg !8028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !8029 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8031, metadata !DIExpression()), !dbg !8034
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_36, metadata !8032, metadata !DIExpression()), !dbg !8034
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8033, metadata !DIExpression()), !dbg !8034
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8035
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8036
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8037
  store i8* null, i8** %3, align 4, !dbg !8038
  ret void, !dbg !8039
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8040 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8042, metadata !DIExpression()), !dbg !8047
  call void @llvm.dbg.value(metadata i8* %1, metadata !8043, metadata !DIExpression()), !dbg !8047
  call void @llvm.dbg.value(metadata i8* %1, metadata !8044, metadata !DIExpression()), !dbg !8047
  %3 = bitcast i8* %1 to i32*, !dbg !8048
  %4 = load i32, i32* %3, align 4, !dbg !8048
  %5 = add i32 %4, -169, !dbg !8048
  %6 = icmp ult i32 %5, -121, !dbg !8048
  br i1 %6, label %15, label %7, !dbg !8050

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8051
  %9 = inttoptr i32 %8 to i32*, !dbg !8052
  call void @llvm.dbg.value(metadata i32* %9, metadata !8045, metadata !DIExpression()), !dbg !8047
  %10 = load volatile i32, i32* %9, align 4, !dbg !8053
  call void @llvm.dbg.value(metadata i32 %10, metadata !8046, metadata !DIExpression()), !dbg !8047
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8054
  %12 = bitcast i8* %11 to i32*, !dbg !8054
  %13 = load i32, i32* %12, align 4, !dbg !8054
  %14 = or i32 %13, %10, !dbg !8055
  call void @llvm.dbg.value(metadata i32 %14, metadata !8046, metadata !DIExpression()), !dbg !8047
  store volatile i32 %14, i32* %9, align 4, !dbg !8056
  br label %15, !dbg !8057

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8047
  ret i32 %16, !dbg !8058
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !8059 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8061, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.value(metadata i8* %1, metadata !8062, metadata !DIExpression()), !dbg !8066
  call void @llvm.dbg.value(metadata i8* %1, metadata !8063, metadata !DIExpression()), !dbg !8066
  %3 = bitcast i8* %1 to i32*, !dbg !8067
  %4 = load i32, i32* %3, align 4, !dbg !8067
  %5 = add i32 %4, -169, !dbg !8067
  %6 = icmp ult i32 %5, -121, !dbg !8067
  br i1 %6, label %16, label %7, !dbg !8069

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8070
  %9 = inttoptr i32 %8 to i32*, !dbg !8071
  call void @llvm.dbg.value(metadata i32* %9, metadata !8064, metadata !DIExpression()), !dbg !8066
  %10 = load volatile i32, i32* %9, align 4, !dbg !8072
  call void @llvm.dbg.value(metadata i32 %10, metadata !8065, metadata !DIExpression()), !dbg !8066
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8073
  %12 = bitcast i8* %11 to i32*, !dbg !8073
  %13 = load i32, i32* %12, align 4, !dbg !8073
  %14 = xor i32 %13, -1, !dbg !8074
  %15 = and i32 %10, %14, !dbg !8075
  call void @llvm.dbg.value(metadata i32 %15, metadata !8065, metadata !DIExpression()), !dbg !8066
  store volatile i32 %15, i32* %9, align 4, !dbg !8076
  br label %16, !dbg !8077

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8066
  ret i32 %17, !dbg !8078
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8079 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8081, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i8* %1, metadata !8082, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32* %2, metadata !8083, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i8* %1, metadata !8084, metadata !DIExpression()), !dbg !8089
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8090
  call void @llvm.dbg.value(metadata i32 %4, metadata !8085, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 undef, metadata !8086, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 undef, metadata !8087, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 %4, metadata !8088, metadata !DIExpression()), !dbg !8089
  %5 = bitcast i8* %1 to i32*, !dbg !8091
  %6 = load i32, i32* %5, align 4, !dbg !8091
  switch i32 %6, label %21 [
    i32 48, label %19
    i32 52, label %19
    i32 56, label %19
    i32 64, label %7
    i32 68, label %9
    i32 168, label %19
    i32 6, label %19
    i32 1, label %11
    i32 2, label %14
    i32 4, label %17
    i32 5, label %18
  ], !dbg !8092

7:                                                ; preds = %3
  %8 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 2) #26, !dbg !8093
  call void @llvm.dbg.value(metadata i32 %8, metadata !8086, metadata !DIExpression()), !dbg !8089
  br label %19, !dbg !8094

9:                                                ; preds = %3
  %10 = tail call fastcc i32 @get_bus_clock(i32 noundef %4, i32 noundef 1) #26, !dbg !8096
  call void @llvm.dbg.value(metadata i32 %10, metadata !8087, metadata !DIExpression()), !dbg !8089
  br label %19, !dbg !8097

11:                                               ; preds = %3
  %12 = tail call i32 @get_pllsrc_frequency() #27, !dbg !8098
  %13 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %12, i32 noundef 2) #26, !dbg !8099
  br label %19, !dbg !8100

14:                                               ; preds = %3
  %15 = tail call i32 @get_pllsrc_frequency() #27, !dbg !8101
  %16 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %15, i32 noundef 8) #26, !dbg !8102
  br label %19, !dbg !8103

17:                                               ; preds = %3
  br label %19, !dbg !8104

18:                                               ; preds = %3
  br label %19, !dbg !8105

19:                                               ; preds = %3, %3, %3, %3, %3, %18, %17, %14, %11, %9, %7
  %20 = phi i32 [ %8, %7 ], [ %10, %9 ], [ %13, %11 ], [ %16, %14 ], [ 0, %17 ], [ 32000, %18 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %20, i32* %2, align 4, !dbg !8106
  br label %21, !dbg !8107

21:                                               ; preds = %19, %3
  %22 = phi i32 [ -134, %3 ], [ 0, %19 ], !dbg !8089
  ret i32 %22, !dbg !8107
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8108 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8110, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i8* %1, metadata !8111, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i8* %2, metadata !8112, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.value(metadata i8* %1, metadata !8113, metadata !DIExpression()), !dbg !8118
  %4 = bitcast i8* %1 to i32*, !dbg !8119
  %5 = load i32, i32* %4, align 4, !dbg !8119
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8120
  call void @llvm.dbg.value(metadata i32 %6, metadata !8117, metadata !DIExpression()), !dbg !8118
  %7 = icmp slt i32 %6, 0, !dbg !8121
  br i1 %7, label %22, label %8, !dbg !8123

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8113, metadata !DIExpression()), !dbg !8118
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8124
  %10 = bitcast i8* %9 to i32*, !dbg !8124
  %11 = load i32, i32* %10, align 4, !dbg !8124
  %12 = lshr i32 %11, 16, !dbg !8124
  %13 = and i32 %12, 7, !dbg !8124
  %14 = lshr i32 %11, 8, !dbg !8125
  %15 = and i32 %14, 31, !dbg !8125
  %16 = shl i32 %13, %15, !dbg !8126
  call void @llvm.dbg.value(metadata i32 %16, metadata !8116, metadata !DIExpression()), !dbg !8118
  %17 = and i32 %11, 255, !dbg !8127
  %18 = or i32 %17, 1073887232, !dbg !8128
  %19 = inttoptr i32 %18 to i32*, !dbg !8129
  call void @llvm.dbg.value(metadata i32* %19, metadata !8114, metadata !DIExpression()), !dbg !8118
  %20 = load volatile i32, i32* %19, align 4, !dbg !8130
  call void @llvm.dbg.value(metadata i32 %20, metadata !8115, metadata !DIExpression()), !dbg !8118
  %21 = or i32 %16, %20, !dbg !8131
  call void @llvm.dbg.value(metadata i32 %21, metadata !8115, metadata !DIExpression()), !dbg !8118
  store volatile i32 %21, i32* %19, align 4, !dbg !8132
  br label %22, !dbg !8133

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8118
  ret i32 %23, !dbg !8134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8135 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8139, metadata !DIExpression()), !dbg !8141
  call void @llvm.dbg.value(metadata i32 0, metadata !8140, metadata !DIExpression()), !dbg !8141
  %2 = add i32 %0, -1, !dbg !8142
  %3 = icmp ult i32 %2, 6, !dbg !8142
  br i1 %3, label %4, label %7, !dbg !8142

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8142
  %6 = load i32, i32* %5, align 4, !dbg !8142
  call void @llvm.dbg.value(metadata i32 %6, metadata !8140, metadata !DIExpression()), !dbg !8141
  br label %7, !dbg !8143

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8141
  ret i32 %8, !dbg !8144
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8145 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8149, metadata !DIExpression()), !dbg !8151
  call void @llvm.dbg.value(metadata i32 %1, metadata !8150, metadata !DIExpression()), !dbg !8151
  %3 = udiv i32 %0, %1, !dbg !8152
  ret i32 %3, !dbg !8153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8154 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8158, metadata !DIExpression()), !dbg !8162
  call void @llvm.dbg.value(metadata i32 8, metadata !8159, metadata !DIExpression()), !dbg !8162
  call void @llvm.dbg.value(metadata i32 84, metadata !8160, metadata !DIExpression()), !dbg !8162
  call void @llvm.dbg.value(metadata i32 %1, metadata !8161, metadata !DIExpression()), !dbg !8162
  %3 = mul i32 %0, 84, !dbg !8163
  %4 = shl nsw i32 %1, 3, !dbg !8164
  %5 = udiv i32 %3, %4, !dbg !8165
  ret i32 %5, !dbg !8166
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8167 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8169, metadata !DIExpression()), !dbg !8172
  tail call void @config_enable_default_clocks() #27, !dbg !8173
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !8174
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8174
  %4 = lshr i32 %3, 4, !dbg !8174
  %5 = and i32 %4, 15, !dbg !8174
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8174
  %7 = load i8, i8* %6, align 1, !dbg !8174
  %8 = zext i8 %7 to i32, !dbg !8174
  %9 = lshr i32 %2, %8, !dbg !8174
  call void @llvm.dbg.value(metadata i32 %9, metadata !8170, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8171, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8172
  %10 = icmp ult i32 %9, 84000000, !dbg !8175
  br i1 %10, label %11, label %13, !dbg !8177

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !8178
  br label %13, !dbg !8180

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8181
  tail call fastcc void @set_up_plls() #26, !dbg !8182
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8183
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8186
  br label %14, !dbg !8187

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8188
  %16 = icmp eq i32 %15, 8, !dbg !8189
  br i1 %16, label %17, label %14, !dbg !8187, !llvm.loop !8190

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8192
  br i1 %18, label %19, label %21, !dbg !8194

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !8195
  br label %21, !dbg !8197

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8198
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8199
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8200
  ret i32 0, !dbg !8201
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8202 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8204
  %2 = and i32 %1, 240, !dbg !8204
  ret i32 %2, !dbg !8205
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8206 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !8207
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !8212
  br label %1, !dbg !8213

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !8214
  %3 = icmp eq i32 %2, 1, !dbg !8215
  br i1 %3, label %4, label %1, !dbg !8213, !llvm.loop !8216

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8218
  br label %5, !dbg !8221

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8222
  %7 = icmp eq i32 %6, 1, !dbg !8223
  br i1 %7, label %8, label %5, !dbg !8221, !llvm.loop !8224

8:                                                ; preds = %5
  ret void, !dbg !8226
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8227 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8228
  %2 = icmp eq i32 %1, 8, !dbg !8230
  br i1 %2, label %3, label %4, !dbg !8231

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8232
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8234
  br label %4, !dbg !8235

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8236
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8237
  %6 = and i32 %5, -196609, !dbg !8237
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8237
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8238
  %8 = and i32 %7, -251658241, !dbg !8238
  %9 = or i32 %8, 134217728, !dbg !8238
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8238
  tail call void @config_pll_sysclock() #27, !dbg !8239
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8240
  br label %10, !dbg !8241

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8242
  %12 = icmp eq i32 %11, 1, !dbg !8243
  br i1 %12, label %13, label %10, !dbg !8241, !llvm.loop !8244

13:                                               ; preds = %10
  ret void, !dbg !8246
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8247 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8249, metadata !DIExpression()), !dbg !8250
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8251
  %2 = and i32 %1, -241, !dbg !8251
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8251
  ret void, !dbg !8252
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8253 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8255, metadata !DIExpression()), !dbg !8256
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8257
  %3 = and i32 %2, -4, !dbg !8257
  %4 = or i32 %3, %0, !dbg !8257
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8257
  ret void, !dbg !8258
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8259 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8260
  %2 = and i32 %1, 12, !dbg !8260
  ret i32 %2, !dbg !8261
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8262 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8264, metadata !DIExpression()), !dbg !8265
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8266
  %2 = and i32 %1, -7169, !dbg !8266
  %3 = or i32 %2, 4096, !dbg !8266
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8266
  ret void, !dbg !8267
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8268 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8270, metadata !DIExpression()), !dbg !8271
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8272
  %2 = and i32 %1, -57345, !dbg !8272
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8272
  ret void, !dbg !8273
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8274 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8275
  %2 = icmp eq i32 %1, 1, !dbg !8277
  br i1 %2, label %7, label %3, !dbg !8278

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8279
  br label %4, !dbg !8281

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8282
  %6 = icmp eq i32 %5, 1, !dbg !8283
  br i1 %6, label %7, label %4, !dbg !8281, !llvm.loop !8284

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !8286
  br label %8, !dbg !8287

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8288
  %10 = icmp eq i32 %9, 0, !dbg !8289
  br i1 %10, label %11, label %8, !dbg !8287, !llvm.loop !8290

11:                                               ; preds = %8
  ret void, !dbg !8292
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8293 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8294
  %2 = and i32 %1, -16777217, !dbg !8294
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8294
  ret void, !dbg !8295
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8296 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8297
  %2 = or i32 %1, 16777216, !dbg !8297
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8297
  ret void, !dbg !8298
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8299 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8300
  %2 = lshr i32 %1, 25, !dbg !8301
  %3 = and i32 %2, 1, !dbg !8301
  ret i32 %3, !dbg !8302
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8303 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8304
  %2 = lshr i32 %1, 1, !dbg !8305
  %3 = and i32 %2, 1, !dbg !8305
  ret i32 %3, !dbg !8306
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8307 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8308
  %2 = or i32 %1, 1, !dbg !8308
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8308
  ret void, !dbg !8309
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8310 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8311
  %2 = and i32 %1, -262145, !dbg !8311
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8311
  ret void, !dbg !8312
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8313 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8314
  %2 = or i32 %1, 65536, !dbg !8314
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8314
  ret void, !dbg !8315
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !8316 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8317
  %2 = lshr i32 %1, 17, !dbg !8318
  %3 = and i32 %2, 1, !dbg !8318
  ret i32 %3, !dbg !8319
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8320 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8321
  %2 = or i32 %1, 1, !dbg !8321
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8321
  ret void, !dbg !8322
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8323 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8324
  %2 = lshr i32 %1, 1, !dbg !8325
  %3 = and i32 %2, 1, !dbg !8325
  ret i32 %3, !dbg !8326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8327 {
  ret i32 16000000, !dbg !8329
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8333 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8334
  ret void, !dbg !8335
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8336 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8340, metadata !DIExpression()), !dbg !8344
  call void @llvm.dbg.value(metadata i32 8, metadata !8341, metadata !DIExpression()), !dbg !8344
  call void @llvm.dbg.value(metadata i32 84, metadata !8342, metadata !DIExpression()), !dbg !8344
  call void @llvm.dbg.value(metadata i32 0, metadata !8343, metadata !DIExpression()), !dbg !8344
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8345
  %2 = and i32 %1, -4227072, !dbg !8345
  %3 = or i32 %2, 4199688, !dbg !8345
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8345
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8346
  %5 = and i32 %4, -196609, !dbg !8346
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8346
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8347
  %7 = and i32 %6, -1879048193, !dbg !8347
  store volatile i32 %7, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8347
  ret void, !dbg !8348
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8349 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !8350
  ret void, !dbg !8351
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8352 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8355, metadata !DIExpression()), !dbg !8357
  %2 = bitcast i32* %1 to i8*, !dbg !8358
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8358
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8356, metadata !DIExpression()), !dbg !8359
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8360
  %4 = or i32 %3, 268435456, !dbg !8360
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8360
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8361
  %6 = and i32 %5, 268435456, !dbg !8361
  store volatile i32 %6, i32* %1, align 4, !dbg !8362
  %7 = load volatile i32, i32* %1, align 4, !dbg !8363
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8364
  ret void, !dbg !8364
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8365 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8367, metadata !DIExpression()), !dbg !8368
  %2 = tail call fastcc zeroext i1 @device_is_ready.42() #26, !dbg !8369
  br i1 %2, label %3, label %4, !dbg !8371

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !8372
  br label %4, !dbg !8373

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8368
  ret i32 %5, !dbg !8374
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.42() unnamed_addr #1 !dbg !8375 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8379, metadata !DIExpression()), !dbg !8380
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8381, !srcloc !8383
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.45() #26, !dbg !8384
  ret i1 %1, !dbg !8385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8386 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !8387
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !8388
  ret void, !dbg !8389
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8390 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8392, metadata !DIExpression()), !dbg !8393
  %2 = icmp eq i32 %0, 10, !dbg !8394
  br i1 %2, label %3, label %4, !dbg !8396

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out.43(i8 noundef zeroext 13) #26, !dbg !8397
  br label %4, !dbg !8399

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8400
  tail call fastcc void @uart_poll_out.43(i8 noundef zeroext %5) #26, !dbg !8401
  ret i32 %0, !dbg !8402
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out.43(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8403 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8405, metadata !DIExpression()), !dbg !8407
  call void @llvm.dbg.value(metadata i8 %0, metadata !8406, metadata !DIExpression()), !dbg !8407
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8408, !srcloc !8410
  tail call fastcc void @z_impl_uart_poll_out.44(i8 noundef zeroext %0) #26, !dbg !8411
  ret void, !dbg !8412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out.44(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8413 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8415, metadata !DIExpression()), !dbg !8418
  call void @llvm.dbg.value(metadata i8 %0, metadata !8416, metadata !DIExpression()), !dbg !8418
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_48, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8419
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8417, metadata !DIExpression()), !dbg !8418
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8420
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8420
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_48, i8 noundef zeroext %0) #27, !dbg !8421
  ret void, !dbg !8422
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.45() unnamed_addr #1 !dbg !8423 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_48, metadata !8425, metadata !DIExpression()), !dbg !8426
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_48) #27, !dbg !8427
  ret i1 %1, !dbg !8428
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #11 !dbg !8429 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8476, metadata !DIExpression()), !dbg !8479
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8477, metadata !DIExpression()), !dbg !8479
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8478, metadata !DIExpression()), !dbg !8479
  ret void, !dbg !8480
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8481 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8483, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.value(metadata i8 %1, metadata !8484, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.value(metadata i32 %2, metadata !8485, metadata !DIExpression()), !dbg !8488
  %5 = bitcast i32* %4 to i8*, !dbg !8489
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8489
  call void @llvm.dbg.value(metadata i32* %4, metadata !8487, metadata !DIExpression(DW_OP_deref)), !dbg !8488
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !8490
  call void @llvm.dbg.value(metadata i32 %6, metadata !8486, metadata !DIExpression()), !dbg !8488
  %7 = icmp eq i32 %6, 0, !dbg !8491
  br i1 %7, label %8, label %31, !dbg !8493

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8486, metadata !DIExpression()), !dbg !8488
  %9 = and i32 %2, 131072, !dbg !8494
  %10 = icmp eq i32 %9, 0, !dbg !8496
  br i1 %10, label %28, label %11, !dbg !8497

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8498
  %13 = icmp eq i32 %12, 0, !dbg !8501
  br i1 %13, label %18, label %14, !dbg !8502

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8503
  %16 = shl nuw i32 1, %15, !dbg !8503
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !8505
  br label %25, !dbg !8506

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8507
  %20 = icmp eq i32 %19, 0, !dbg !8509
  %21 = zext i8 %1 to i32, !dbg !8488
  br i1 %20, label %25, label %22, !dbg !8510

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8511
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !8513
  br label %25, !dbg !8514

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8515
  %27 = load i32, i32* %4, align 4, !dbg !8516
  call void @llvm.dbg.value(metadata i32 %30, metadata !8487, metadata !DIExpression()), !dbg !8488
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !8517
  br label %31, !dbg !8518

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8515
  %30 = load i32, i32* %4, align 4, !dbg !8516
  call void @llvm.dbg.value(metadata i32 %30, metadata !8487, metadata !DIExpression()), !dbg !8488
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !8517
  call void @llvm.dbg.value(metadata i32 0, metadata !8486, metadata !DIExpression()), !dbg !8488
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8519
  ret i32 %6, !dbg !8519
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8520 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8524, metadata !DIExpression()), !dbg !8529
  call void @llvm.dbg.value(metadata i32* %1, metadata !8525, metadata !DIExpression()), !dbg !8529
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8530
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8530
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8530
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8526, metadata !DIExpression()), !dbg !8529
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8531
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8531
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8531
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8528, metadata !DIExpression()), !dbg !8529
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !8532
  store i32 %9, i32* %1, align 4, !dbg !8533
  ret i32 0, !dbg !8534
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8535 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8537, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.value(metadata i32 %1, metadata !8538, metadata !DIExpression()), !dbg !8543
  call void @llvm.dbg.value(metadata i32 %2, metadata !8539, metadata !DIExpression()), !dbg !8543
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8544
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8544
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8544
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8540, metadata !DIExpression()), !dbg !8543
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8545
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8545
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8545
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8541, metadata !DIExpression()), !dbg !8543
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !8546
  call void @llvm.dbg.value(metadata i32 %10, metadata !8542, metadata !DIExpression()), !dbg !8543
  %11 = xor i32 %1, -1, !dbg !8547
  %12 = and i32 %10, %11, !dbg !8548
  %13 = and i32 %2, %1, !dbg !8549
  %14 = or i32 %12, %13, !dbg !8550
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !8551
  ret i32 0, !dbg !8552
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8553 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8555, metadata !DIExpression()), !dbg !8559
  call void @llvm.dbg.value(metadata i32 %1, metadata !8556, metadata !DIExpression()), !dbg !8559
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8560
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8560
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8560
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8557, metadata !DIExpression()), !dbg !8559
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8561
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8561
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8561
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8558, metadata !DIExpression()), !dbg !8559
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8562
  store volatile i32 %1, i32* %9, align 4, !dbg !8562
  ret i32 0, !dbg !8563
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8564 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8566, metadata !DIExpression()), !dbg !8570
  call void @llvm.dbg.value(metadata i32 %1, metadata !8567, metadata !DIExpression()), !dbg !8570
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8571
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8571
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8571
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8568, metadata !DIExpression()), !dbg !8570
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8572
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8572
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8572
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8569, metadata !DIExpression()), !dbg !8570
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !8573
  ret i32 0, !dbg !8574
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8575 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8577, metadata !DIExpression()), !dbg !8581
  call void @llvm.dbg.value(metadata i32 %1, metadata !8578, metadata !DIExpression()), !dbg !8581
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8582
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8582
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8582
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8579, metadata !DIExpression()), !dbg !8581
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8583
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8583
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8583
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8580, metadata !DIExpression()), !dbg !8581
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8584
  %10 = load volatile i32, i32* %9, align 4, !dbg !8584
  %11 = xor i32 %10, %1, !dbg !8584
  store volatile i32 %11, i32* %9, align 4, !dbg !8584
  ret i32 0, !dbg !8585
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8586 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8588, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata i8 %1, metadata !8589, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata i32 %2, metadata !8590, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata i32 %3, metadata !8591, metadata !DIExpression()), !dbg !8598
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8599
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8599
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8599
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8592, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata i8* undef, metadata !8593, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata i32 0, metadata !8595, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.value(metadata i32 0, metadata !8596, metadata !DIExpression()), !dbg !8598
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8600

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8601
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !8605
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8606
  %12 = load i32, i32* %11, align 4, !dbg !8606
  %13 = icmp eq i32 %10, %12, !dbg !8607
  br i1 %13, label %14, label %29, !dbg !8608

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !8609
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !8611
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !8612
  br label %29, !dbg !8613

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8614
  %17 = load i8*, i8** %16, align 4, !dbg !8614
  call void @llvm.dbg.value(metadata i8* %17, metadata !8593, metadata !DIExpression()), !dbg !8598
  %18 = zext i8 %1 to i32, !dbg !8615
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !8617
  %20 = icmp eq i32 %19, 0, !dbg !8618
  br i1 %20, label %21, label %29, !dbg !8619

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8620
  %23 = load i32, i32* %22, align 4, !dbg !8620
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !8621
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8622

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8595, metadata !DIExpression()), !dbg !8598
  br label %27, !dbg !8623

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8595, metadata !DIExpression()), !dbg !8598
  br label %27, !dbg !8625

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8595, metadata !DIExpression()), !dbg !8598
  br label %27, !dbg !8626

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8598
  call void @llvm.dbg.value(metadata i32 %28, metadata !8595, metadata !DIExpression()), !dbg !8598
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !8627
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !8628
  br label %29, !dbg !8628

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8598
  call void @llvm.dbg.value(metadata i32 %30, metadata !8596, metadata !DIExpression()), !dbg !8598
  call void @llvm.dbg.label(metadata !8597), !dbg !8629
  ret i32 %30, !dbg !8630
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !8631 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8633, metadata !DIExpression()), !dbg !8637
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8634, metadata !DIExpression()), !dbg !8637
  call void @llvm.dbg.value(metadata i1 %2, metadata !8635, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8637
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8638
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8638
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8638
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8636, metadata !DIExpression()), !dbg !8637
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8639
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !8640
  ret i32 %8, !dbg !8641
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !8642 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8648, metadata !DIExpression()), !dbg !8651
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8649, metadata !DIExpression()), !dbg !8651
  call void @llvm.dbg.value(metadata i1 %2, metadata !8650, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8651
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !8652
  br i1 %4, label %10, label %5, !dbg !8654

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8655
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !8658
  %8 = or i1 %7, %2, !dbg !8659
  %9 = select i1 %8, i32 0, i32 -22, !dbg !8659
  br i1 %2, label %11, label %13, !dbg !8659

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !8660

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8661
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !8664
  br label %13, !dbg !8665

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !8651
  ret i32 %14, !dbg !8666
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8667 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8671, metadata !DIExpression()), !dbg !8672
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8673
  %3 = icmp eq %struct._snode* %2, null, !dbg !8673
  ret i1 %3, !dbg !8673
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !8674 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8678, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8679, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8680, metadata !DIExpression()), !dbg !8682
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8683
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8681, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8680, metadata !DIExpression()), !dbg !8682
  %4 = icmp eq %struct._snode* %3, null, !dbg !8685
  br i1 %4, label %15, label %5, !dbg !8683

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8681, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8680, metadata !DIExpression()), !dbg !8682
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8687
  br i1 %6, label %9, label %11, !dbg !8690

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8681, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8680, metadata !DIExpression()), !dbg !8682
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8687
  br i1 %8, label %9, label %11, !dbg !8690, !llvm.loop !8691

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !8692
  br label %15, !dbg !8692

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8681, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8680, metadata !DIExpression()), !dbg !8682
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !8685
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8681, metadata !DIExpression()), !dbg !8682
  %14 = icmp eq %struct._snode* %13, null, !dbg !8685
  br i1 %14, label %15, label %7, !dbg !8683, !llvm.loop !8691

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8694
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8695 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8699, metadata !DIExpression()), !dbg !8701
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8700, metadata !DIExpression()), !dbg !8701
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8702
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !8702
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !8702
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8703
  %5 = icmp eq %struct._snode* %4, null, !dbg !8703
  br i1 %5, label %6, label %8, !dbg !8702

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8705
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !8705
  br label %8, !dbg !8705

8:                                                ; preds = %6, %2
  ret void, !dbg !8702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8707 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8711, metadata !DIExpression()), !dbg !8712
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8713
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8713
  ret %struct._snode* %3, !dbg !8714
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8715 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8719, metadata !DIExpression()), !dbg !8721
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8720, metadata !DIExpression()), !dbg !8721
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8722
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8723
  ret void, !dbg !8724
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8725 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8727, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8728, metadata !DIExpression()), !dbg !8729
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8730
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8731
  ret void, !dbg !8732
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8733 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8735, metadata !DIExpression()), !dbg !8736
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8737
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8737
  ret %struct._snode* %3, !dbg !8738
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8739 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8741, metadata !DIExpression()), !dbg !8743
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8742, metadata !DIExpression()), !dbg !8743
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8744
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8745
  ret void, !dbg !8746
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !8747 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8751, metadata !DIExpression()), !dbg !8754
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8752, metadata !DIExpression()), !dbg !8754
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8753, metadata !DIExpression()), !dbg !8754
  %4 = icmp eq %struct._snode* %1, null, !dbg !8755
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !8757
  br i1 %4, label %6, label %11, !dbg !8758

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !8759
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8761
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8761
  br i1 %8, label %9, label %15, !dbg !8759

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8763
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !8763
  br label %15, !dbg !8763

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !8765
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8767
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8767
  br i1 %13, label %14, label %15, !dbg !8765

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !8769
  br label %15, !dbg !8769

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !8758
  ret void, !dbg !8758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !8771 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8775, metadata !DIExpression()), !dbg !8776
  %2 = icmp eq %struct._snode* %0, null, !dbg !8777
  br i1 %2, label %5, label %3, !dbg !8777

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !8777
  br label %5, !dbg !8777

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8777
  ret %struct._snode* %6, !dbg !8777
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8778 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8780, metadata !DIExpression()), !dbg !8781
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !8782
  ret %struct._snode* %2, !dbg !8782
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8783 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8785, metadata !DIExpression()), !dbg !8786
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8787
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8787
  ret %struct._snode* %3, !dbg !8788
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !8789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8791, metadata !DIExpression()), !dbg !8794
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !8795, !range !8796
  call void @llvm.dbg.value(metadata i32 %2, metadata !8792, metadata !DIExpression()), !dbg !8794
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !8797
  call void @llvm.dbg.value(metadata i32 %3, metadata !8793, metadata !DIExpression()), !dbg !8794
  ret i32 %3, !dbg !8798
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !8799 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8801, metadata !DIExpression()), !dbg !8804
  call void @llvm.dbg.value(metadata i8* %1, metadata !8802, metadata !DIExpression()), !dbg !8804
  call void @llvm.dbg.value(metadata i8* %1, metadata !8803, metadata !DIExpression()), !dbg !8804
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !8805
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !8805
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8806
  %6 = bitcast i8* %5 to %struct.device**, !dbg !8806
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !8806
  %8 = shl nuw i32 1, %0, !dbg !8807
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !8808
  ret void, !dbg !8809
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8810 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !8814, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata i32 %1, metadata !8815, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8816, metadata !DIExpression()), !dbg !8820
  %4 = bitcast i64* %3 to i8*, !dbg !8821
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !8821
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !8818, metadata !DIExpression()), !dbg !8820
  store i64 70368744177732, i64* %3, align 8, !dbg !8822
  call void @llvm.dbg.value(metadata i64* %3, metadata !8818, metadata !DIExpression(DW_OP_deref)), !dbg !8820
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !8823
  call void @llvm.dbg.value(metadata i32 %5, metadata !8819, metadata !DIExpression()), !dbg !8820
  %6 = icmp eq i32 %5, 0, !dbg !8824
  br i1 %6, label %7, label %8, !dbg !8826

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !8827
  br label %8, !dbg !8828

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !8829
  ret void, !dbg !8829
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !8830 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8832, metadata !DIExpression()), !dbg !8835
  call void @llvm.dbg.value(metadata i8* %0, metadata !8833, metadata !DIExpression()), !dbg !8835
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !8836
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !8834, metadata !DIExpression()), !dbg !8835
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !8837
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !8837
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #27, !dbg !8838
  ret i32 %5, !dbg !8839
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8840 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8842, metadata !DIExpression()), !dbg !8845
  call void @llvm.dbg.value(metadata i32 %1, metadata !8843, metadata !DIExpression()), !dbg !8845
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !8846
  call void @llvm.dbg.value(metadata i32 %3, metadata !8844, metadata !DIExpression()), !dbg !8845
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !8847
  ret void, !dbg !8848
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !8849 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8853, metadata !DIExpression()), !dbg !8854
  %2 = sdiv i32 %0, 4, !dbg !8855
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !8856
  %6 = add nsw i32 %5, 16, !dbg !8857
  %7 = shl i32 15, %6, !dbg !8858
  %8 = or i32 %7, %2, !dbg !8859
  ret i32 %8, !dbg !8860
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8861 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8865, metadata !DIExpression()), !dbg !8867
  call void @llvm.dbg.value(metadata i32 %1, metadata !8866, metadata !DIExpression()), !dbg !8867
  %3 = and i32 %1, 255, !dbg !8868
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !8868
  %5 = load volatile i32, i32* %4, align 4, !dbg !8868
  %6 = lshr i32 %1, 16, !dbg !8868
  %7 = xor i32 %6, -1, !dbg !8868
  %8 = and i32 %5, %7, !dbg !8868
  call void @llvm.dbg.value(metadata i32 %6, metadata !8869, metadata !DIExpression()) #25, !dbg !8873
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !8875, !srcloc !8876
  call void @llvm.dbg.value(metadata i32 %9, metadata !8872, metadata !DIExpression()) #25, !dbg !8873
  call void @llvm.dbg.value(metadata i32 %9, metadata !8877, metadata !DIExpression()) #25, !dbg !8882
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !8884, !range !4068
  %11 = shl i32 %0, %10, !dbg !8868
  %12 = or i32 %11, %8, !dbg !8868
  store volatile i32 %12, i32* %4, align 4, !dbg !8868
  ret void, !dbg !8885
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8886 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8890, metadata !DIExpression()), !dbg !8895
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !8891, metadata !DIExpression()), !dbg !8895
  call void @llvm.dbg.value(metadata i32 %2, metadata !8892, metadata !DIExpression()), !dbg !8895
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8896
  %5 = icmp eq %struct._snode* %4, null, !dbg !8896
  br i1 %5, label %21, label %6, !dbg !8896

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !8898
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8894, metadata !DIExpression()), !dbg !8895
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !8893, metadata !DIExpression()), !dbg !8895
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !8899
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !8899
  %11 = load i32, i32* %10, align 4, !dbg !8899
  %12 = and i32 %11, %2, !dbg !8903
  %13 = icmp eq i32 %12, 0, !dbg !8903
  br i1 %13, label %19, label %14, !dbg !8904

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !8893, metadata !DIExpression()), !dbg !8895
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !8905
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !8905
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !8905
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #27, !dbg !8907
  br label %19, !dbg !8908

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8893, metadata !DIExpression()), !dbg !8895
  %20 = icmp eq %struct._snode* %8, null, !dbg !8909
  br i1 %20, label %21, label %6, !dbg !8909

21:                                               ; preds = %19, %3
  ret void, !dbg !8910
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !8911 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8913, metadata !DIExpression()), !dbg !8914
  %2 = and i32 %0, 255, !dbg !8915
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !8915
  %4 = load volatile i32, i32* %3, align 4, !dbg !8915
  %5 = lshr i32 %0, 16, !dbg !8915
  %6 = and i32 %4, %5, !dbg !8915
  call void @llvm.dbg.value(metadata i32 %5, metadata !8869, metadata !DIExpression()) #25, !dbg !8916
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !8918, !srcloc !8876
  call void @llvm.dbg.value(metadata i32 %7, metadata !8872, metadata !DIExpression()) #25, !dbg !8916
  call void @llvm.dbg.value(metadata i32 %7, metadata !8877, metadata !DIExpression()) #25, !dbg !8919
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !8921, !range !4068
  %9 = lshr i32 %6, %8, !dbg !8922
  ret i32 %9, !dbg !8923
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8924 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8929, metadata !DIExpression()), !dbg !8931
  call void @llvm.dbg.value(metadata i32 %1, metadata !8930, metadata !DIExpression()), !dbg !8931
  %3 = shl i32 %1, 16, !dbg !8932
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !8932
  store volatile i32 %3, i32* %4, align 4, !dbg !8932
  ret void, !dbg !8933
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !8934 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8938, metadata !DIExpression()), !dbg !8939
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8940
  %3 = load volatile i32, i32* %2, align 4, !dbg !8940
  ret i32 %3, !dbg !8941
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8942 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8944, metadata !DIExpression()), !dbg !8946
  call void @llvm.dbg.value(metadata i32 %1, metadata !8945, metadata !DIExpression()), !dbg !8946
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8947
  store volatile i32 %1, i32* %3, align 4, !dbg !8947
  ret void, !dbg !8948
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !8949 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8951, metadata !DIExpression()), !dbg !8952
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !8953
  %3 = load volatile i32, i32* %2, align 4, !dbg !8953
  ret i32 %3, !dbg !8954
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !8955 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8959, metadata !DIExpression()), !dbg !8961
  call void @llvm.dbg.value(metadata i32* %1, metadata !8960, metadata !DIExpression()), !dbg !8961
  %3 = and i32 %0, 131072, !dbg !8962
  %4 = icmp eq i32 %3, 0, !dbg !8964
  br i1 %4, label %22, label %5, !dbg !8965

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !8966
  %6 = and i32 %0, 2, !dbg !8968
  %7 = icmp eq i32 %6, 0, !dbg !8970
  br i1 %7, label %11, label %8, !dbg !8971

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !8972
  %10 = icmp eq i32 %9, 0, !dbg !8972
  br i1 %10, label %33, label %11, !dbg !8975

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !8976
  store i32 %12, i32* %1, align 4, !dbg !8976
  %13 = and i32 %0, 16, !dbg !8977
  %14 = icmp eq i32 %13, 0, !dbg !8979
  br i1 %14, label %17, label %15, !dbg !8980

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !8981
  br label %31, !dbg !8983

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !8984
  %19 = icmp eq i32 %18, 0, !dbg !8986
  br i1 %19, label %33, label %20, !dbg !8987

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !8988
  br label %31, !dbg !8990

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !8991
  %24 = icmp eq i32 %23, 0, !dbg !8993
  br i1 %24, label %31, label %25, !dbg !8994

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !8995
  %27 = icmp eq i32 %26, 0, !dbg !8998
  br i1 %27, label %28, label %31, !dbg !8999

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9000
  br label %33, !dbg !9001

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !8961
  ret i32 %34, !dbg !9001
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9002 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9006, metadata !DIExpression()), !dbg !9017
  call void @llvm.dbg.value(metadata i32 %1, metadata !9007, metadata !DIExpression()), !dbg !9017
  call void @llvm.dbg.value(metadata i32 %2, metadata !9008, metadata !DIExpression()), !dbg !9017
  call void @llvm.dbg.value(metadata i32 %3, metadata !9009, metadata !DIExpression()), !dbg !9017
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9018
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9018
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9018
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9010, metadata !DIExpression()), !dbg !9017
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9019
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9019
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9019
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9011, metadata !DIExpression()), !dbg !9017
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !9020
  call void @llvm.dbg.value(metadata i32 %11, metadata !9012, metadata !DIExpression()), !dbg !9017
  %12 = and i32 %2, 48, !dbg !9021
  call void @llvm.dbg.value(metadata i32 %12, metadata !9013, metadata !DIExpression()), !dbg !9017
  call void @llvm.dbg.value(metadata i32 %2, metadata !9014, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9017
  call void @llvm.dbg.value(metadata i32 %2, metadata !9015, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9017
  call void @llvm.dbg.value(metadata i32 %2, metadata !9016, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9017
  %13 = lshr i32 %2, 6, !dbg !9022
  %14 = and i32 %13, 1, !dbg !9022
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !9023
  %15 = lshr i32 %2, 7, !dbg !9024
  %16 = and i32 %15, 3, !dbg !9024
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !9025
  %17 = lshr i32 %2, 9, !dbg !9026
  %18 = and i32 %17, 3, !dbg !9026
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !9027
  %19 = icmp eq i32 %12, 32, !dbg !9028
  br i1 %19, label %20, label %24, !dbg !9030

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9031
  br i1 %21, label %22, label %23, !dbg !9034

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9035
  br label %24, !dbg !9037

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !9038
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9040
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !9041
  ret void, !dbg !9042
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !9043 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9045, metadata !DIExpression()), !dbg !9047
  %2 = shl nuw i32 1, %0, !dbg !9048
  call void @llvm.dbg.value(metadata i32 %2, metadata !9046, metadata !DIExpression()), !dbg !9047
  ret i32 %2, !dbg !9049
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !9050 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9054, metadata !DIExpression()), !dbg !9057
  call void @llvm.dbg.value(metadata i32 %1, metadata !9055, metadata !DIExpression()), !dbg !9057
  call void @llvm.dbg.value(metadata i32 %2, metadata !9056, metadata !DIExpression()), !dbg !9057
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9058
  %5 = load volatile i32, i32* %4, align 4, !dbg !9058
  %6 = xor i32 %1, -1, !dbg !9058
  %7 = and i32 %5, %6, !dbg !9058
  %8 = mul i32 %2, %1, !dbg !9058
  %9 = or i32 %7, %8, !dbg !9058
  store volatile i32 %9, i32* %4, align 4, !dbg !9058
  ret void, !dbg !9059
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9060 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9062, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.value(metadata i32 %1, metadata !9063, metadata !DIExpression()), !dbg !9065
  call void @llvm.dbg.value(metadata i32 %2, metadata !9064, metadata !DIExpression()), !dbg !9065
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9066
  %5 = load volatile i32, i32* %4, align 4, !dbg !9066
  call void @llvm.dbg.value(metadata i32 %1, metadata !8869, metadata !DIExpression()) #25, !dbg !9067
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9069, !srcloc !8876
  call void @llvm.dbg.value(metadata i32 %6, metadata !8872, metadata !DIExpression()) #25, !dbg !9067
  call void @llvm.dbg.value(metadata i32 %6, metadata !8877, metadata !DIExpression()) #25, !dbg !9070
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9072, !range !4068
  %8 = shl nuw nsw i32 %7, 1, !dbg !9066
  %9 = shl i32 3, %8, !dbg !9066
  %10 = xor i32 %9, -1, !dbg !9066
  %11 = and i32 %5, %10, !dbg !9066
  call void @llvm.dbg.value(metadata i32 %1, metadata !8869, metadata !DIExpression()) #25, !dbg !9073
  call void @llvm.dbg.value(metadata i32 %6, metadata !8872, metadata !DIExpression()) #25, !dbg !9073
  call void @llvm.dbg.value(metadata i32 %6, metadata !8877, metadata !DIExpression()) #25, !dbg !9075
  %12 = shl i32 %2, %8, !dbg !9066
  %13 = or i32 %11, %12, !dbg !9066
  store volatile i32 %13, i32* %4, align 4, !dbg !9066
  ret void, !dbg !9077
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9078 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9080, metadata !DIExpression()), !dbg !9083
  call void @llvm.dbg.value(metadata i32 %1, metadata !9081, metadata !DIExpression()), !dbg !9083
  call void @llvm.dbg.value(metadata i32 %2, metadata !9082, metadata !DIExpression()), !dbg !9083
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9084
  %5 = load volatile i32, i32* %4, align 4, !dbg !9084
  call void @llvm.dbg.value(metadata i32 %1, metadata !8869, metadata !DIExpression()) #25, !dbg !9085
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9087, !srcloc !8876
  call void @llvm.dbg.value(metadata i32 %6, metadata !8872, metadata !DIExpression()) #25, !dbg !9085
  call void @llvm.dbg.value(metadata i32 %6, metadata !8877, metadata !DIExpression()) #25, !dbg !9088
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9090, !range !4068
  %8 = shl nuw nsw i32 %7, 1, !dbg !9084
  %9 = shl i32 3, %8, !dbg !9084
  %10 = xor i32 %9, -1, !dbg !9084
  %11 = and i32 %5, %10, !dbg !9084
  call void @llvm.dbg.value(metadata i32 %1, metadata !8869, metadata !DIExpression()) #25, !dbg !9091
  call void @llvm.dbg.value(metadata i32 %6, metadata !8872, metadata !DIExpression()) #25, !dbg !9091
  call void @llvm.dbg.value(metadata i32 %6, metadata !8877, metadata !DIExpression()) #25, !dbg !9093
  %12 = shl i32 %2, %8, !dbg !9084
  %13 = or i32 %11, %12, !dbg !9084
  store volatile i32 %13, i32* %4, align 4, !dbg !9084
  ret void, !dbg !9095
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9096 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9098, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.value(metadata i32 %1, metadata !9099, metadata !DIExpression()), !dbg !9101
  call void @llvm.dbg.value(metadata i32 %2, metadata !9100, metadata !DIExpression()), !dbg !9101
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9102
  %5 = load volatile i32, i32* %4, align 4, !dbg !9102
  call void @llvm.dbg.value(metadata i32 %1, metadata !8869, metadata !DIExpression()) #25, !dbg !9103
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9105, !srcloc !8876
  call void @llvm.dbg.value(metadata i32 %6, metadata !8872, metadata !DIExpression()) #25, !dbg !9103
  call void @llvm.dbg.value(metadata i32 %6, metadata !8877, metadata !DIExpression()) #25, !dbg !9106
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9108, !range !4068
  %8 = shl nuw nsw i32 %7, 2, !dbg !9102
  %9 = shl i32 15, %8, !dbg !9102
  %10 = xor i32 %9, -1, !dbg !9102
  %11 = and i32 %5, %10, !dbg !9102
  call void @llvm.dbg.value(metadata i32 %1, metadata !8869, metadata !DIExpression()) #25, !dbg !9109
  call void @llvm.dbg.value(metadata i32 %6, metadata !8872, metadata !DIExpression()) #25, !dbg !9109
  call void @llvm.dbg.value(metadata i32 %6, metadata !8877, metadata !DIExpression()) #25, !dbg !9111
  %12 = shl i32 %2, %8, !dbg !9102
  %13 = or i32 %11, %12, !dbg !9102
  store volatile i32 %13, i32* %4, align 4, !dbg !9102
  ret void, !dbg !9113
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9114 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9116, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.value(metadata i32 %1, metadata !9117, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.value(metadata i32 %2, metadata !9118, metadata !DIExpression()), !dbg !9119
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9120
  %5 = load volatile i32, i32* %4, align 4, !dbg !9120
  %6 = lshr i32 %1, 8, !dbg !9120
  call void @llvm.dbg.value(metadata i32 %6, metadata !8869, metadata !DIExpression()) #25, !dbg !9121
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9123, !srcloc !8876
  call void @llvm.dbg.value(metadata i32 %7, metadata !8872, metadata !DIExpression()) #25, !dbg !9121
  call void @llvm.dbg.value(metadata i32 %7, metadata !8877, metadata !DIExpression()) #25, !dbg !9124
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9126, !range !4068
  %9 = shl nuw nsw i32 %8, 2, !dbg !9120
  %10 = shl i32 15, %9, !dbg !9120
  %11 = xor i32 %10, -1, !dbg !9120
  %12 = and i32 %5, %11, !dbg !9120
  call void @llvm.dbg.value(metadata i32 %6, metadata !8869, metadata !DIExpression()) #25, !dbg !9127
  call void @llvm.dbg.value(metadata i32 %7, metadata !8872, metadata !DIExpression()) #25, !dbg !9127
  call void @llvm.dbg.value(metadata i32 %7, metadata !8877, metadata !DIExpression()) #25, !dbg !9129
  %13 = shl i32 %2, %9, !dbg !9120
  %14 = or i32 %12, %13, !dbg !9120
  store volatile i32 %14, i32* %4, align 4, !dbg !9120
  ret void, !dbg !9131
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9132 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9134, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata i32 %1, metadata !9135, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.value(metadata i32 %2, metadata !9136, metadata !DIExpression()), !dbg !9137
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9138
  %5 = load volatile i32, i32* %4, align 4, !dbg !9138
  call void @llvm.dbg.value(metadata i32 %1, metadata !8869, metadata !DIExpression()) #25, !dbg !9139
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9141, !srcloc !8876
  call void @llvm.dbg.value(metadata i32 %6, metadata !8872, metadata !DIExpression()) #25, !dbg !9139
  call void @llvm.dbg.value(metadata i32 %6, metadata !8877, metadata !DIExpression()) #25, !dbg !9142
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9144, !range !4068
  %8 = shl nuw nsw i32 %7, 1, !dbg !9138
  %9 = shl i32 3, %8, !dbg !9138
  %10 = xor i32 %9, -1, !dbg !9138
  %11 = and i32 %5, %10, !dbg !9138
  call void @llvm.dbg.value(metadata i32 %1, metadata !8869, metadata !DIExpression()) #25, !dbg !9145
  call void @llvm.dbg.value(metadata i32 %6, metadata !8872, metadata !DIExpression()) #25, !dbg !9145
  call void @llvm.dbg.value(metadata i32 %6, metadata !8877, metadata !DIExpression()) #25, !dbg !9147
  %12 = shl i32 %2, %8, !dbg !9138
  %13 = or i32 %11, %12, !dbg !9138
  store volatile i32 %13, i32* %4, align 4, !dbg !9138
  ret void, !dbg !9149
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9150 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9152, metadata !DIExpression()), !dbg !9155
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9156
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9156
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9156
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9153, metadata !DIExpression()), !dbg !9155
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9157
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9158
  %6 = tail call fastcc zeroext i1 @device_is_ready.53() #26, !dbg !9159
  br i1 %6, label %7, label %11, !dbg !9161

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !9162
  call void @llvm.dbg.value(metadata i32 %8, metadata !9154, metadata !DIExpression()), !dbg !9155
  %9 = icmp slt i32 %8, 0, !dbg !9163
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9165
  br label %11, !dbg !9165

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9155
  ret i32 %12, !dbg !9166
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.53() unnamed_addr #1 !dbg !9167 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9171, metadata !DIExpression()), !dbg !9172
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9173, !srcloc !9175
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.54() #26, !dbg !9176
  ret i1 %1, !dbg !9177
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9178 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9182, metadata !DIExpression()), !dbg !9187
  call void @llvm.dbg.value(metadata i8 1, metadata !9183, metadata !DIExpression()), !dbg !9187
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !9184, metadata !DIExpression()), !dbg !9187
  call void @llvm.dbg.value(metadata i32 0, metadata !9185, metadata !DIExpression()), !dbg !9187
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9186, metadata !DIExpression()), !dbg !9187
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9188
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9188
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9188
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9184, metadata !DIExpression()), !dbg !9187
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9189
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9192
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !9193
  call void @llvm.dbg.value(metadata i32 %7, metadata !9185, metadata !DIExpression()), !dbg !9187
  call void @llvm.dbg.value(metadata i32 %7, metadata !9185, metadata !DIExpression()), !dbg !9187
  ret i32 %7, !dbg !9194
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.54() unnamed_addr #1 !dbg !9195 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9197, metadata !DIExpression()), !dbg !9198
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #27, !dbg !9199
  ret i1 %1, !dbg !9200
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9201 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9205, metadata !DIExpression()), !dbg !9213
  call void @llvm.dbg.value(metadata i32 %1, metadata !9206, metadata !DIExpression()), !dbg !9213
  call void @llvm.dbg.value(metadata i32 %2, metadata !9207, metadata !DIExpression()), !dbg !9213
  call void @llvm.dbg.value(metadata i32 %3, metadata !9208, metadata !DIExpression()), !dbg !9213
  call void @llvm.dbg.value(metadata i32 0, metadata !9209, metadata !DIExpression()), !dbg !9213
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !9214
  %5 = icmp eq i32 %3, 17, !dbg !9215
  br i1 %5, label %6, label %14, !dbg !9216

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9217
  call void @llvm.dbg.value(metadata i32 %7, metadata !9210, metadata !DIExpression()), !dbg !9218
  %8 = icmp eq i32 %7, 0, !dbg !9219
  %9 = shl nuw i32 1, %1, !dbg !9221
  br i1 %8, label %12, label %10, !dbg !9222

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9223
  br label %14, !dbg !9225

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9226
  br label %14, !dbg !9229

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9230
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9231 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9233, metadata !DIExpression()), !dbg !9237
  call void @llvm.dbg.value(metadata i8* %1, metadata !9234, metadata !DIExpression()), !dbg !9237
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9238
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9238
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9238
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9235, metadata !DIExpression()), !dbg !9237
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9239
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9239
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !9241
  %9 = icmp eq i32 %8, 0, !dbg !9241
  br i1 %9, label %12, label %10, !dbg !9242

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9243
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !9245
  br label %12, !dbg !9246

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9247
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9249
  %15 = icmp eq i32 %14, 0, !dbg !9249
  br i1 %15, label %19, label %16, !dbg !9250

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9251
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !9252
  store i8 %18, i8* %1, align 1, !dbg !9253
  br label %19, !dbg !9254

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9237
  ret i32 %20, !dbg !9255
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9256 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9258, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.value(metadata i8 %1, metadata !9259, metadata !DIExpression()), !dbg !9262
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9263
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9263
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9263
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9260, metadata !DIExpression()), !dbg !9262
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9264

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9265
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9268
  %10 = icmp eq i32 %9, 0, !dbg !9268
  br i1 %10, label %18, label %11, !dbg !9269

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9270, !srcloc !9277
  call void @llvm.dbg.value(metadata i32 undef, metadata !9273, metadata !DIExpression()) #25, !dbg !9278
  call void @llvm.dbg.value(metadata i32 undef, metadata !9274, metadata !DIExpression()) #25, !dbg !9278
  call void @llvm.dbg.value(metadata i32 undef, metadata !9261, metadata !DIExpression()), !dbg !9262
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9279
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9281
  %15 = icmp eq i32 %14, 0, !dbg !9281
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9270
  br i1 %15, label %17, label %19, !dbg !9282

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9273, metadata !DIExpression()) #25, !dbg !9278
  call void @llvm.dbg.value(metadata i32 %16, metadata !9261, metadata !DIExpression()), !dbg !9262
  call void @llvm.dbg.value(metadata i32 undef, metadata !9283, metadata !DIExpression()) #25, !dbg !9286
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !9288, !srcloc !9289
  br label %18, !dbg !9290

18:                                               ; preds = %17, %7
  br label %7, !dbg !9265, !llvm.loop !9291

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9270
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9293
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !9294
  call void @llvm.dbg.value(metadata i32 %20, metadata !9283, metadata !DIExpression()) #25, !dbg !9295
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !9297, !srcloc !9289
  ret void, !dbg !9298
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !9299 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9301, metadata !DIExpression()), !dbg !9304
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9305
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9305
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9305
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9302, metadata !DIExpression()), !dbg !9304
  call void @llvm.dbg.value(metadata i32 0, metadata !9303, metadata !DIExpression()), !dbg !9304
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9306
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9306
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9308
  %8 = icmp ne i32 %7, 0, !dbg !9308
  %9 = zext i1 %8 to i32, !dbg !9309
  call void @llvm.dbg.value(metadata i32 %9, metadata !9303, metadata !DIExpression()), !dbg !9304
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9310
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9312
  %12 = icmp eq i32 %11, 0, !dbg !9312
  %13 = or i32 %9, 2, !dbg !9313
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9313
  call void @llvm.dbg.value(metadata i32 %14, metadata !9303, metadata !DIExpression()), !dbg !9304
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9314
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !9316
  %17 = icmp eq i32 %16, 0, !dbg !9316
  %18 = or i32 %14, 4, !dbg !9317
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9317
  call void @llvm.dbg.value(metadata i32 %19, metadata !9303, metadata !DIExpression()), !dbg !9304
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9318
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !9320
  %22 = icmp eq i32 %21, 0, !dbg !9320
  %23 = or i32 %19, 8, !dbg !9321
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9321
  call void @llvm.dbg.value(metadata i32 %24, metadata !9303, metadata !DIExpression()), !dbg !9304
  %25 = and i32 %24, 8, !dbg !9322
  %26 = icmp eq i32 %25, 0, !dbg !9322
  br i1 %26, label %29, label %27, !dbg !9324

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9325
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !9327
  br label %29, !dbg !9328

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9329
  %31 = icmp eq i32 %30, 0, !dbg !9329
  br i1 %31, label %34, label %32, !dbg !9331

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9332
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !9334
  br label %34, !dbg !9335

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9336
  %36 = icmp eq i32 %35, 0, !dbg !9336
  br i1 %36, label %39, label %37, !dbg !9338

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9339
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !9341
  br label %39, !dbg !9342

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9343
  %41 = icmp eq i32 %40, 0, !dbg !9343
  br i1 %41, label %44, label %42, !dbg !9345

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9346
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !9348
  br label %44, !dbg !9349

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9350
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !9351
  ret i32 %24, !dbg !9352
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9353 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9355, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9356, metadata !DIExpression()), !dbg !9364
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9365
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9365
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9365
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9357, metadata !DIExpression()), !dbg !9364
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9366
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9366
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9366
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9358, metadata !DIExpression()), !dbg !9364
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9367
  %10 = load i8, i8* %9, align 4, !dbg !9367
  %11 = zext i8 %10 to i32, !dbg !9368
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !9369
  call void @llvm.dbg.value(metadata i32 %12, metadata !9360, metadata !DIExpression()), !dbg !9364
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9370
  %14 = load i8, i8* %13, align 1, !dbg !9370
  %15 = zext i8 %14 to i32, !dbg !9371
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !9372
  call void @llvm.dbg.value(metadata i32 %16, metadata !9361, metadata !DIExpression()), !dbg !9364
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9373
  %18 = load i8, i8* %17, align 2, !dbg !9373
  %19 = zext i8 %18 to i32, !dbg !9374
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !9375
  call void @llvm.dbg.value(metadata i32 %20, metadata !9362, metadata !DIExpression()), !dbg !9364
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9376
  %22 = load i8, i8* %21, align 1, !dbg !9376
  %23 = zext i8 %22 to i32, !dbg !9377
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !9378
  call void @llvm.dbg.value(metadata i32 %24, metadata !9363, metadata !DIExpression()), !dbg !9364
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9379

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9381
  br i1 %26, label %69, label %27, !dbg !9383

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9384

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9385
  br i1 %29, label %65, label %30, !dbg !9385

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9387
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9364
  br i1 %31, label %38, label %34, !dbg !9389

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9390
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
    i32 1073761280, label %36
    i32 1073762304, label %36
    i32 1073812480, label %36
  ], !dbg !9390

36:                                               ; preds = %34, %34, %34, %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9393
  br i1 %37, label %38, label %69, !dbg !9394

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9395
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !9396
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !9397
  %41 = icmp eq i32 %12, %40, !dbg !9399
  br i1 %41, label %43, label %42, !dbg !9400

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !9401
  br label %43, !dbg !9403

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !9404
  %45 = icmp eq i32 %16, %44, !dbg !9406
  br i1 %45, label %47, label %46, !dbg !9407

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !9408
  br label %47, !dbg !9410

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !9411
  %49 = icmp eq i32 %20, %48, !dbg !9413
  br i1 %49, label %51, label %50, !dbg !9414

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !9415
  br label %51, !dbg !9417

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !9418
  %53 = icmp eq i32 %24, %52, !dbg !9420
  br i1 %53, label %55, label %54, !dbg !9421

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !9422
  br label %55, !dbg !9424

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9425
  %57 = load i32, i32* %56, align 4, !dbg !9425
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9427
  %59 = load i32, i32* %58, align 4, !dbg !9427
  %60 = icmp eq i32 %57, %59, !dbg !9428
  br i1 %60, label %63, label %61, !dbg !9429

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !9430
  %62 = load i32, i32* %56, align 4, !dbg !9432
  store i32 %62, i32* %58, align 4, !dbg !9433
  br label %63, !dbg !9434

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9435
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !9436
  br label %69, !dbg !9437

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9385
  %67 = and i8 %66, 1, !dbg !9385
  %68 = icmp eq i8 %67, 0, !dbg !9385
  br i1 %68, label %30, label %69, !dbg !9385

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9364
  ret i32 %70, !dbg !9438
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9439 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9441, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9442, metadata !DIExpression()), !dbg !9444
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9445
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9445
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9445
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9443, metadata !DIExpression()), !dbg !9444
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9446
  %7 = load i32, i32* %6, align 4, !dbg !9446
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9447
  store i32 %7, i32* %8, align 4, !dbg !9448
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9449, !range !9450
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !9451
  %11 = trunc i32 %10 to i8, !dbg !9451
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9452
  store i8 %11, i8* %12, align 4, !dbg !9453
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !9454, !range !9455
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !9456
  %15 = trunc i32 %14 to i8, !dbg !9456
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9457
  store i8 %15, i8* %16, align 1, !dbg !9458
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !9459
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9460, !range !9450
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !9461
  %20 = trunc i32 %19 to i8, !dbg !9461
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9462
  store i8 %20, i8* %21, align 2, !dbg !9463
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !9464, !range !9465
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !9466
  %24 = trunc i32 %23 to i8, !dbg !9466
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9467
  store i8 %24, i8* %25, align 1, !dbg !9468
  ret i32 0, !dbg !9469
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9470 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9472, metadata !DIExpression()), !dbg !9478
  call void @llvm.dbg.value(metadata i8* %1, metadata !9473, metadata !DIExpression()), !dbg !9478
  call void @llvm.dbg.value(metadata i32 %2, metadata !9474, metadata !DIExpression()), !dbg !9478
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9479
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9479
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9479
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9475, metadata !DIExpression()), !dbg !9478
  call void @llvm.dbg.value(metadata i8 0, metadata !9476, metadata !DIExpression()), !dbg !9478
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9480
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9480
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9482
  %10 = icmp eq i32 %9, 0, !dbg !9482
  br i1 %10, label %30, label %11, !dbg !9483

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9484, !srcloc !9277
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !9484
  call void @llvm.dbg.value(metadata i32 %13, metadata !9273, metadata !DIExpression()) #25, !dbg !9486
  call void @llvm.dbg.value(metadata i32 undef, metadata !9274, metadata !DIExpression()) #25, !dbg !9486
  call void @llvm.dbg.value(metadata i32 %13, metadata !9477, metadata !DIExpression()), !dbg !9478
  call void @llvm.dbg.value(metadata i8 0, metadata !9476, metadata !DIExpression()), !dbg !9478
  %14 = icmp sgt i32 %2, 0, !dbg !9487
  br i1 %14, label %15, label %28, !dbg !9488

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !9476, metadata !DIExpression()), !dbg !9478
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9489
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #26, !dbg !9490
  %20 = icmp eq i32 %19, 0, !dbg !9488
  br i1 %20, label %28, label %21, !dbg !9491

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9492
  %23 = add i8 %17, 1, !dbg !9494
  call void @llvm.dbg.value(metadata i8 %23, metadata !9476, metadata !DIExpression()), !dbg !9478
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !9495
  %25 = load i8, i8* %24, align 1, !dbg !9495
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #26, !dbg !9496
  %26 = zext i8 %23 to i32, !dbg !9497
  %27 = icmp slt i32 %26, %2, !dbg !9487
  br i1 %27, label %15, label %28, !dbg !9488, !llvm.loop !9498

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !9497
  call void @llvm.dbg.value(metadata i32 %13, metadata !9283, metadata !DIExpression()) #25, !dbg !9500
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !9502, !srcloc !9289
  br label %30, !dbg !9503

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !9478
  ret i32 %31, !dbg !9504
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #17 !dbg !9505 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9507, metadata !DIExpression()), !dbg !9512
  call void @llvm.dbg.value(metadata i8* %1, metadata !9508, metadata !DIExpression()), !dbg !9512
  call void @llvm.dbg.value(metadata i32 %2, metadata !9509, metadata !DIExpression()), !dbg !9512
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9513
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9513
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9513
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9510, metadata !DIExpression()), !dbg !9512
  call void @llvm.dbg.value(metadata i8 0, metadata !9511, metadata !DIExpression()), !dbg !9512
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9514
  call void @llvm.dbg.value(metadata i8 0, metadata !9511, metadata !DIExpression()), !dbg !9512
  %8 = icmp sgt i32 %2, 0, !dbg !9515
  br i1 %8, label %9, label %28, !dbg !9516

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !9511, metadata !DIExpression()), !dbg !9512
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9514
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #26, !dbg !9517
  %14 = icmp eq i32 %13, 0, !dbg !9516
  br i1 %14, label %28, label %15, !dbg !9518

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9519
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #26, !dbg !9521
  %18 = add i8 %11, 1, !dbg !9522
  call void @llvm.dbg.value(metadata i8 %18, metadata !9511, metadata !DIExpression()), !dbg !9512
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !9523
  store i8 %17, i8* %19, align 1, !dbg !9524
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9525
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #26, !dbg !9527
  %22 = icmp eq i32 %21, 0, !dbg !9527
  br i1 %22, label %25, label %23, !dbg !9528

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9529
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #26, !dbg !9531
  br label %25, !dbg !9532

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !9511, metadata !DIExpression()), !dbg !9512
  %26 = zext i8 %18 to i32, !dbg !9533
  %27 = icmp slt i32 %26, %2, !dbg !9515
  br i1 %27, label %9, label %28, !dbg !9516, !llvm.loop !9534

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !9533
  ret i32 %29, !dbg !9536
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9537 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9539, metadata !DIExpression()), !dbg !9541
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9542
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9542
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9542
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9540, metadata !DIExpression()), !dbg !9541
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9543
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9543
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !9544
  ret void, !dbg !9545
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9546 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9548, metadata !DIExpression()), !dbg !9550
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9551
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9551
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9551
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9549, metadata !DIExpression()), !dbg !9550
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9552
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9552
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !9553
  ret void, !dbg !9554
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !9555 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9557, metadata !DIExpression()), !dbg !9559
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9560
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9560
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9560
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9558, metadata !DIExpression()), !dbg !9559
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9561
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9561
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9562
  %8 = icmp eq i32 %7, 0, !dbg !9562
  br i1 %8, label %14, label %9, !dbg !9563

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9564
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #26, !dbg !9565
  %12 = icmp ne i32 %11, 0, !dbg !9563
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !9566
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9567 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9569, metadata !DIExpression()), !dbg !9571
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9572
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9572
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9572
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9570, metadata !DIExpression()), !dbg !9571
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9573
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9573
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9574
  ret void, !dbg !9575
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9576 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9578, metadata !DIExpression()), !dbg !9580
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9581
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9581
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9581
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9579, metadata !DIExpression()), !dbg !9580
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9582
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9582
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9583
  ret void, !dbg !9584
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #16 !dbg !9585 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9587, metadata !DIExpression()), !dbg !9589
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9590
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9590
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9590
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9588, metadata !DIExpression()), !dbg !9589
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9591
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9591
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !9592
  ret i32 %7, !dbg !9593
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !9594 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9596, metadata !DIExpression()), !dbg !9598
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9599
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9599
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9599
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9597, metadata !DIExpression()), !dbg !9598
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9600
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9600
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9601
  ret i32 %7, !dbg !9602
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9603 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9605, metadata !DIExpression()), !dbg !9607
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9608
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9608
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9608
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9606, metadata !DIExpression()), !dbg !9607
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9609
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9609
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !9610
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9611
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !9611
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073761280, label %9
    i32 1073762304, label %9
    i32 1073812480, label %9
  ], !dbg !9611

9:                                                ; preds = %1, %1, %1, %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !9613
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9615
  br label %11, !dbg !9616

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !9615
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !9617
  ret void, !dbg !9618
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9619 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9621, metadata !DIExpression()), !dbg !9623
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9624
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9624
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9624
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9622, metadata !DIExpression()), !dbg !9623
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9625
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9625
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !9626
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9627
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !9627
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073761280, label %9
    i32 1073762304, label %9
    i32 1073812480, label %9
  ], !dbg !9627

9:                                                ; preds = %1, %1, %1, %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !9629
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9631
  br label %11, !dbg !9632

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !9631
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !9633
  ret void, !dbg !9634
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !9635 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9637, metadata !DIExpression()), !dbg !9639
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9640
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9640
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9640
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9638, metadata !DIExpression()), !dbg !9639
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9641
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9641
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9642
  %8 = icmp eq i32 %7, 0, !dbg !9642
  br i1 %8, label %13, label %9, !dbg !9643

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9644
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9645
  %12 = icmp eq i32 %11, 0, !dbg !9645
  br i1 %12, label %13, label %22, !dbg !9646

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9647
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #26, !dbg !9648
  %16 = icmp eq i32 %15, 0, !dbg !9648
  br i1 %16, label %22, label %17, !dbg !9649

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9650
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #26, !dbg !9651
  %20 = icmp ne i32 %19, 0, !dbg !9649
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !9652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !9653 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9655, metadata !DIExpression()), !dbg !9656
  ret i32 1, !dbg !9657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #7 !dbg !9658 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9660, metadata !DIExpression()), !dbg !9664
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !9661, metadata !DIExpression()), !dbg !9664
  call void @llvm.dbg.value(metadata i8* %2, metadata !9662, metadata !DIExpression()), !dbg !9664
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9665
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !9665
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !9665
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !9663, metadata !DIExpression()), !dbg !9664
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !9666
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !9667
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !9668
  store i8* %2, i8** %8, align 4, !dbg !9669
  ret void, !dbg !9670
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9671 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9676, metadata !DIExpression()), !dbg !9677
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9678
  %3 = load volatile i32, i32* %2, align 4, !dbg !9678
  %4 = lshr i32 %3, 5, !dbg !9679
  %5 = and i32 %4, 1, !dbg !9679
  ret i32 %5, !dbg !9680
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9681 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9683, metadata !DIExpression()), !dbg !9684
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9685
  %3 = load volatile i32, i32* %2, align 4, !dbg !9685
  %4 = lshr i32 %3, 5, !dbg !9686
  %5 = and i32 %4, 1, !dbg !9686
  ret i32 %5, !dbg !9687
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9688 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9690, metadata !DIExpression()), !dbg !9691
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9692
  %3 = load volatile i32, i32* %2, align 4, !dbg !9692
  %4 = lshr i32 %3, 6, !dbg !9693
  %5 = and i32 %4, 1, !dbg !9693
  ret i32 %5, !dbg !9694
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9695 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9697, metadata !DIExpression()), !dbg !9698
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9699
  %3 = load volatile i32, i32* %2, align 4, !dbg !9699
  %4 = lshr i32 %3, 6, !dbg !9700
  %5 = and i32 %4, 1, !dbg !9700
  ret i32 %5, !dbg !9701
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9702 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9706, metadata !DIExpression()), !dbg !9709
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !9710

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9711, metadata !DIExpression()) #25, !dbg !9717
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9720, !srcloc !9721
  call void @llvm.dbg.value(metadata i32 %4, metadata !9716, metadata !DIExpression()) #25, !dbg !9717
  %5 = and i32 %4, -2, !dbg !9722
  call void @llvm.dbg.value(metadata i32 %5, metadata !9707, metadata !DIExpression()), !dbg !9723
  call void @llvm.dbg.value(metadata i32 %5, metadata !9724, metadata !DIExpression()) #25, !dbg !9731
  call void @llvm.dbg.value(metadata i32* %2, metadata !9729, metadata !DIExpression()) #25, !dbg !9731
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9733, !srcloc !9734
  call void @llvm.dbg.value(metadata i32 %6, metadata !9730, metadata !DIExpression()) #25, !dbg !9731
  %7 = icmp eq i32 %6, 0, !dbg !9710
  br i1 %7, label %8, label %3, !dbg !9722, !llvm.loop !9735

8:                                                ; preds = %3
  ret void, !dbg !9736
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9737 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9739, metadata !DIExpression()), !dbg !9740
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9741
  %3 = load volatile i32, i32* %2, align 4, !dbg !9741
  %4 = and i32 %3, -65, !dbg !9741
  store volatile i32 %4, i32* %2, align 4, !dbg !9741
  ret void, !dbg !9742
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9743 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9745, metadata !DIExpression()), !dbg !9748
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9749

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9711, metadata !DIExpression()) #25, !dbg !9750
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9753, !srcloc !9721
  call void @llvm.dbg.value(metadata i32 %4, metadata !9716, metadata !DIExpression()) #25, !dbg !9750
  %5 = and i32 %4, -257, !dbg !9754
  call void @llvm.dbg.value(metadata i32 %5, metadata !9746, metadata !DIExpression()), !dbg !9755
  call void @llvm.dbg.value(metadata i32 %5, metadata !9724, metadata !DIExpression()) #25, !dbg !9756
  call void @llvm.dbg.value(metadata i32* %2, metadata !9729, metadata !DIExpression()) #25, !dbg !9756
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9758, !srcloc !9734
  call void @llvm.dbg.value(metadata i32 %6, metadata !9730, metadata !DIExpression()) #25, !dbg !9756
  %7 = icmp eq i32 %6, 0, !dbg !9749
  br i1 %7, label %8, label %3, !dbg !9754, !llvm.loop !9759

8:                                                ; preds = %3
  ret void, !dbg !9760
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9761 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9763, metadata !DIExpression()), !dbg !9766
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !9767

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9711, metadata !DIExpression()) #25, !dbg !9768
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9771, !srcloc !9721
  call void @llvm.dbg.value(metadata i32 %4, metadata !9716, metadata !DIExpression()) #25, !dbg !9768
  %5 = or i32 %4, 1, !dbg !9772
  call void @llvm.dbg.value(metadata i32 %5, metadata !9764, metadata !DIExpression()), !dbg !9773
  call void @llvm.dbg.value(metadata i32 %5, metadata !9724, metadata !DIExpression()) #25, !dbg !9774
  call void @llvm.dbg.value(metadata i32* %2, metadata !9729, metadata !DIExpression()) #25, !dbg !9774
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9776, !srcloc !9734
  call void @llvm.dbg.value(metadata i32 %6, metadata !9730, metadata !DIExpression()) #25, !dbg !9774
  %7 = icmp eq i32 %6, 0, !dbg !9767
  br i1 %7, label %8, label %3, !dbg !9772, !llvm.loop !9777

8:                                                ; preds = %3
  ret void, !dbg !9778
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9779 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9781, metadata !DIExpression()), !dbg !9782
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9783
  %3 = load volatile i32, i32* %2, align 4, !dbg !9783
  %4 = or i32 %3, 64, !dbg !9783
  store volatile i32 %4, i32* %2, align 4, !dbg !9783
  ret void, !dbg !9784
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9785 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9787, metadata !DIExpression()), !dbg !9790
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9791

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9711, metadata !DIExpression()) #25, !dbg !9792
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9795, !srcloc !9721
  call void @llvm.dbg.value(metadata i32 %4, metadata !9716, metadata !DIExpression()) #25, !dbg !9792
  %5 = or i32 %4, 256, !dbg !9796
  call void @llvm.dbg.value(metadata i32 %5, metadata !9788, metadata !DIExpression()), !dbg !9797
  call void @llvm.dbg.value(metadata i32 %5, metadata !9724, metadata !DIExpression()) #25, !dbg !9798
  call void @llvm.dbg.value(metadata i32* %2, metadata !9729, metadata !DIExpression()) #25, !dbg !9798
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9800, !srcloc !9734
  call void @llvm.dbg.value(metadata i32 %6, metadata !9730, metadata !DIExpression()) #25, !dbg !9798
  %7 = icmp eq i32 %6, 0, !dbg !9791
  br i1 %7, label %8, label %3, !dbg !9796, !llvm.loop !9801

8:                                                ; preds = %3
  ret void, !dbg !9802
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9803 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9805, metadata !DIExpression()), !dbg !9808
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9809

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9711, metadata !DIExpression()) #25, !dbg !9810
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9813, !srcloc !9721
  call void @llvm.dbg.value(metadata i32 %4, metadata !9716, metadata !DIExpression()) #25, !dbg !9810
  %5 = and i32 %4, -33, !dbg !9814
  call void @llvm.dbg.value(metadata i32 %5, metadata !9806, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i32 %5, metadata !9724, metadata !DIExpression()) #25, !dbg !9816
  call void @llvm.dbg.value(metadata i32* %2, metadata !9729, metadata !DIExpression()) #25, !dbg !9816
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9818, !srcloc !9734
  call void @llvm.dbg.value(metadata i32 %6, metadata !9730, metadata !DIExpression()) #25, !dbg !9816
  %7 = icmp eq i32 %6, 0, !dbg !9809
  br i1 %7, label %8, label %3, !dbg !9814, !llvm.loop !9819

8:                                                ; preds = %3
  ret void, !dbg !9820
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9821 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9823, metadata !DIExpression()), !dbg !9826
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9827

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9711, metadata !DIExpression()) #25, !dbg !9828
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9831, !srcloc !9721
  call void @llvm.dbg.value(metadata i32 %4, metadata !9716, metadata !DIExpression()) #25, !dbg !9828
  %5 = or i32 %4, 32, !dbg !9832
  call void @llvm.dbg.value(metadata i32 %5, metadata !9824, metadata !DIExpression()), !dbg !9833
  call void @llvm.dbg.value(metadata i32 %5, metadata !9724, metadata !DIExpression()) #25, !dbg !9834
  call void @llvm.dbg.value(metadata i32* %2, metadata !9729, metadata !DIExpression()) #25, !dbg !9834
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9836, !srcloc !9734
  call void @llvm.dbg.value(metadata i32 %6, metadata !9730, metadata !DIExpression()) #25, !dbg !9834
  %7 = icmp eq i32 %6, 0, !dbg !9827
  br i1 %7, label %8, label %3, !dbg !9832, !llvm.loop !9837

8:                                                ; preds = %3
  ret void, !dbg !9838
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9839 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9841, metadata !DIExpression()), !dbg !9842
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9843
  %3 = load volatile i32, i32* %2, align 4, !dbg !9843
  %4 = lshr i32 %3, 7, !dbg !9844
  %5 = and i32 %4, 1, !dbg !9844
  ret i32 %5, !dbg !9845
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9846 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9848, metadata !DIExpression()), !dbg !9851
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9852

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9711, metadata !DIExpression()) #25, !dbg !9853
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9856, !srcloc !9721
  call void @llvm.dbg.value(metadata i32 %4, metadata !9716, metadata !DIExpression()) #25, !dbg !9853
  %5 = and i32 %4, -65, !dbg !9857
  call void @llvm.dbg.value(metadata i32 %5, metadata !9849, metadata !DIExpression()), !dbg !9858
  call void @llvm.dbg.value(metadata i32 %5, metadata !9724, metadata !DIExpression()) #25, !dbg !9859
  call void @llvm.dbg.value(metadata i32* %2, metadata !9729, metadata !DIExpression()) #25, !dbg !9859
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9861, !srcloc !9734
  call void @llvm.dbg.value(metadata i32 %6, metadata !9730, metadata !DIExpression()) #25, !dbg !9859
  %7 = icmp eq i32 %6, 0, !dbg !9852
  br i1 %7, label %8, label %3, !dbg !9857, !llvm.loop !9862

8:                                                ; preds = %3
  ret void, !dbg !9863
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9864 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9866, metadata !DIExpression()), !dbg !9869
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9870

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9711, metadata !DIExpression()) #25, !dbg !9871
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9874, !srcloc !9721
  call void @llvm.dbg.value(metadata i32 %4, metadata !9716, metadata !DIExpression()) #25, !dbg !9871
  %5 = or i32 %4, 64, !dbg !9875
  call void @llvm.dbg.value(metadata i32 %5, metadata !9867, metadata !DIExpression()), !dbg !9876
  call void @llvm.dbg.value(metadata i32 %5, metadata !9724, metadata !DIExpression()) #25, !dbg !9877
  call void @llvm.dbg.value(metadata i32* %2, metadata !9729, metadata !DIExpression()) #25, !dbg !9877
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9879, !srcloc !9734
  call void @llvm.dbg.value(metadata i32 %6, metadata !9730, metadata !DIExpression()) #25, !dbg !9877
  %7 = icmp eq i32 %6, 0, !dbg !9870
  br i1 %7, label %8, label %3, !dbg !9875, !llvm.loop !9880

8:                                                ; preds = %3
  ret void, !dbg !9881
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9882 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9886, metadata !DIExpression()), !dbg !9887
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9888
  %3 = load volatile i32, i32* %2, align 4, !dbg !9888
  %4 = trunc i32 %3 to i8, !dbg !9889
  ret i8 %4, !dbg !9890
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9891 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9893, metadata !DIExpression()), !dbg !9894
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9895
  %3 = load volatile i32, i32* %2, align 4, !dbg !9895
  %4 = lshr i32 %3, 3, !dbg !9896
  %5 = and i32 %4, 1, !dbg !9896
  ret i32 %5, !dbg !9897
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9898 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9900, metadata !DIExpression()), !dbg !9902
  %3 = bitcast i32* %2 to i8*, !dbg !9903
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9903
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9901, metadata !DIExpression()), !dbg !9904
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9905
  %5 = load volatile i32, i32* %4, align 4, !dbg !9905
  store volatile i32 %5, i32* %2, align 4, !dbg !9906
  %6 = load volatile i32, i32* %2, align 4, !dbg !9907
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9908
  %8 = load volatile i32, i32* %7, align 4, !dbg !9908
  store volatile i32 %8, i32* %2, align 4, !dbg !9909
  %9 = load volatile i32, i32* %2, align 4, !dbg !9910
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9911
  ret void, !dbg !9911
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !9912 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9916, metadata !DIExpression()), !dbg !9918
  call void @llvm.dbg.value(metadata i8 %1, metadata !9917, metadata !DIExpression()), !dbg !9918
  %3 = zext i8 %1 to i32, !dbg !9919
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9920
  store volatile i32 %3, i32* %4, align 4, !dbg !9921
  ret void, !dbg !9922
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9923 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9927, metadata !DIExpression()), !dbg !9929
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9930
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9930
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9930
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9928, metadata !DIExpression()), !dbg !9929
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9931
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9931
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !9932
  ret i32 %7, !dbg !9933
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !9934 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9938, metadata !DIExpression()), !dbg !9939
  %2 = icmp eq i32 %0, 1024, !dbg !9940
  %3 = select i1 %2, i32 2, i32 0, !dbg !9940
  %4 = icmp eq i32 %0, 1536, !dbg !9940
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9940
  ret i32 %5, !dbg !9941
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9942 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9944, metadata !DIExpression()), !dbg !9946
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9947
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9947
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9947
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9945, metadata !DIExpression()), !dbg !9946
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9948
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9948
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !9949
  ret i32 %7, !dbg !9950
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !9951 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9955, metadata !DIExpression()), !dbg !9956
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !9957
  %3 = icmp ult i32 %2, 4, !dbg !9957
  br i1 %3, label %4, label %7, !dbg !9957

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !9957
  %6 = load i32, i32* %5, align 4, !dbg !9957
  br label %7, !dbg !9957

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !9958
  ret i32 %8, !dbg !9960
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9961 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9963, metadata !DIExpression()), !dbg !9965
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9966
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9966
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9966
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9964, metadata !DIExpression()), !dbg !9965
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9967
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9967
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !9968
  ret i32 %7, !dbg !9969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9970 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9974, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.value(metadata i32 %1, metadata !9975, metadata !DIExpression()), !dbg !9976
  %3 = icmp eq i32 %0, 4096, !dbg !9977
  %4 = icmp eq i32 %1, 0, !dbg !9977
  %5 = select i1 %4, i32 4, i32 3, !dbg !9977
  %6 = select i1 %4, i32 3, i32 2, !dbg !9977
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !9977
  ret i32 %7, !dbg !9978
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9979 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9981, metadata !DIExpression()), !dbg !9983
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9984
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9984
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9984
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9982, metadata !DIExpression()), !dbg !9983
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9985
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9985
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !9986
  ret i32 %7, !dbg !9987
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9988 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9992, metadata !DIExpression()), !dbg !9993
  %2 = icmp eq i32 %0, 768, !dbg !9994
  %3 = zext i1 %2 to i32, !dbg !9993
  ret i32 %3, !dbg !9996
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9997 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9999, metadata !DIExpression()), !dbg !10000
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10001
  %3 = load volatile i32, i32* %2, align 4, !dbg !10001
  %4 = and i32 %3, 768, !dbg !10001
  ret i32 %4, !dbg !10002
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10003 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10005, metadata !DIExpression()), !dbg !10006
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10007
  %3 = load volatile i32, i32* %2, align 4, !dbg !10007
  %4 = and i32 %3, 4096, !dbg !10007
  ret i32 %4, !dbg !10008
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10009 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10011, metadata !DIExpression()), !dbg !10012
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10013
  %3 = load volatile i32, i32* %2, align 4, !dbg !10013
  %4 = and i32 %3, 12288, !dbg !10013
  ret i32 %4, !dbg !10014
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10015 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10017, metadata !DIExpression()), !dbg !10018
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10019
  %3 = load volatile i32, i32* %2, align 4, !dbg !10019
  %4 = and i32 %3, 1536, !dbg !10019
  ret i32 %4, !dbg !10020
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !10021 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10025, metadata !DIExpression()), !dbg !10026
  %2 = icmp eq i32 %0, 2, !dbg !10027
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10027
  %4 = icmp eq i32 %0, 1, !dbg !10027
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10027
  ret i32 %5, !dbg !10028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10029 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10033, metadata !DIExpression()), !dbg !10034
  %2 = icmp ult i32 %0, 3, !dbg !10035
  br i1 %2, label %3, label %6, !dbg !10035

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10035
  %5 = load i32, i32* %4, align 4, !dbg !10035
  br label %6, !dbg !10035

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10036
  ret i32 %7, !dbg !10038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !10039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10043, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.value(metadata i32 %1, metadata !10044, metadata !DIExpression()), !dbg !10045
  %3 = icmp eq i32 %0, 4, !dbg !10046
  %4 = icmp eq i32 %1, 0, !dbg !10046
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10046
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10046
  ret i32 %6, !dbg !10047
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !10048 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10052, metadata !DIExpression()), !dbg !10053
  %2 = icmp eq i32 %0, 1, !dbg !10054
  %3 = select i1 %2, i32 768, i32 0, !dbg !10053
  ret i32 %3, !dbg !10056
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10057 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10059, metadata !DIExpression()), !dbg !10060
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10061
  %3 = load volatile i32, i32* %2, align 4, !dbg !10061
  %4 = and i32 %3, -8193, !dbg !10061
  store volatile i32 %4, i32* %2, align 4, !dbg !10061
  ret void, !dbg !10062
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10063 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10067, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.value(metadata i32 %1, metadata !10068, metadata !DIExpression()), !dbg !10070
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10071
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10071
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10071
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10069, metadata !DIExpression()), !dbg !10070
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10072
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10072
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !10073
  ret void, !dbg !10074
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10075 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10077, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.value(metadata i32 %1, metadata !10078, metadata !DIExpression()), !dbg !10080
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10081
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10081
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10081
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10079, metadata !DIExpression()), !dbg !10080
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10082
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10082
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !10083
  ret void, !dbg !10084
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10085 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10087, metadata !DIExpression()), !dbg !10090
  call void @llvm.dbg.value(metadata i32 %1, metadata !10088, metadata !DIExpression()), !dbg !10090
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10091
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10091
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10091
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10089, metadata !DIExpression()), !dbg !10090
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10092
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10092
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !10093
  ret void, !dbg !10094
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10095 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10097, metadata !DIExpression()), !dbg !10100
  call void @llvm.dbg.value(metadata i32 %1, metadata !10098, metadata !DIExpression()), !dbg !10100
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10101
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10101
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10101
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10099, metadata !DIExpression()), !dbg !10100
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10102
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10102
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !10103
  ret void, !dbg !10104
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10105 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10107, metadata !DIExpression()), !dbg !10112
  call void @llvm.dbg.value(metadata i32 %1, metadata !10108, metadata !DIExpression()), !dbg !10112
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10113
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10113
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10113
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10109, metadata !DIExpression()), !dbg !10112
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10114
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10114
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10114
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10110, metadata !DIExpression()), !dbg !10112
  %10 = bitcast i32* %3 to i8*, !dbg !10115
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10115
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10116
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10116
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10120
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10120
  %15 = load i8*, i8** %14, align 4, !dbg !10120
  call void @llvm.dbg.value(metadata i32* %3, metadata !10111, metadata !DIExpression(DW_OP_deref)), !dbg !10112
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !10121
  %17 = icmp slt i32 %16, 0, !dbg !10122
  br i1 %17, label %23, label %18, !dbg !10123

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10124
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10124
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !10125
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10126
  %22 = load i32, i32* %3, align 4, !dbg !10127
  call void @llvm.dbg.value(metadata i32 %22, metadata !10111, metadata !DIExpression()), !dbg !10112
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !10128
  br label %23, !dbg !10129

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10129
  ret void, !dbg !10129
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10130 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10132, metadata !DIExpression()), !dbg !10133
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10134
  %3 = load volatile i32, i32* %2, align 4, !dbg !10134
  %4 = or i32 %3, 8192, !dbg !10134
  store volatile i32 %4, i32* %2, align 4, !dbg !10134
  ret void, !dbg !10135
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10136 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10138, metadata !DIExpression()), !dbg !10142
  call void @llvm.dbg.value(metadata i8* %1, metadata !10139, metadata !DIExpression()), !dbg !10142
  call void @llvm.dbg.value(metadata i32* %2, metadata !10140, metadata !DIExpression()), !dbg !10142
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10143
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10143
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10143
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10141, metadata !DIExpression()), !dbg !10142
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10144
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10144
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10146
  br i1 %9, label %12, label %10, !dbg !10147

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !10148
  br label %12, !dbg !10149

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10142
  ret i32 %13, !dbg !10150
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10151 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10155, metadata !DIExpression()), !dbg !10157
  call void @llvm.dbg.value(metadata i32 0, metadata !10156, metadata !DIExpression()), !dbg !10157
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10158
  %3 = load volatile i32, i32* %2, align 4, !dbg !10158
  %4 = and i32 %3, -32769, !dbg !10158
  store volatile i32 %4, i32* %2, align 4, !dbg !10158
  ret void, !dbg !10159
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10160 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10164, metadata !DIExpression()), !dbg !10168
  call void @llvm.dbg.value(metadata i32 %1, metadata !10165, metadata !DIExpression()), !dbg !10168
  call void @llvm.dbg.value(metadata i32 0, metadata !10166, metadata !DIExpression()), !dbg !10168
  call void @llvm.dbg.value(metadata i32 %2, metadata !10167, metadata !DIExpression()), !dbg !10168
  %4 = zext i32 %1 to i64, !dbg !10169
  %5 = mul nuw nsw i64 %4, 25, !dbg !10169
  %6 = zext i32 %2 to i64, !dbg !10169
  %7 = shl nuw nsw i64 %6, 2, !dbg !10169
  %8 = udiv i64 %5, %7, !dbg !10169
  %9 = trunc i64 %8 to i32, !dbg !10169
  %10 = udiv i32 %9, 100, !dbg !10169
  %11 = shl nuw nsw i32 %10, 4, !dbg !10169
  %12 = mul i32 %10, -100, !dbg !10169
  %13 = add i32 %12, %9, !dbg !10169
  %14 = shl i32 %13, 4, !dbg !10169
  %15 = add i32 %14, 50, !dbg !10169
  %16 = udiv i32 %15, 100, !dbg !10169
  %17 = and i32 %16, 240, !dbg !10169
  %18 = add nuw nsw i32 %17, %11, !dbg !10169
  %19 = and i32 %16, 15, !dbg !10169
  %20 = and i32 %18, 65520, !dbg !10172
  %21 = or i32 %20, %19, !dbg !10172
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10173
  store volatile i32 %21, i32* %22, align 4, !dbg !10174
  ret void, !dbg !10175
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10176 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10178, metadata !DIExpression()), !dbg !10180
  call void @llvm.dbg.value(metadata i32 %1, metadata !10179, metadata !DIExpression()), !dbg !10180
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10181
  %4 = load volatile i32, i32* %3, align 4, !dbg !10181
  %5 = and i32 %4, -769, !dbg !10181
  %6 = or i32 %5, %1, !dbg !10181
  store volatile i32 %6, i32* %3, align 4, !dbg !10181
  ret void, !dbg !10182
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10183 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10185, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata i32 %1, metadata !10186, metadata !DIExpression()), !dbg !10187
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10188
  %4 = load volatile i32, i32* %3, align 4, !dbg !10188
  %5 = and i32 %4, -4097, !dbg !10188
  %6 = or i32 %5, %1, !dbg !10188
  store volatile i32 %6, i32* %3, align 4, !dbg !10188
  ret void, !dbg !10189
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10190 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10192, metadata !DIExpression()), !dbg !10194
  call void @llvm.dbg.value(metadata i32 %1, metadata !10193, metadata !DIExpression()), !dbg !10194
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10195
  %4 = load volatile i32, i32* %3, align 4, !dbg !10195
  %5 = and i32 %4, -12289, !dbg !10195
  %6 = or i32 %5, %1, !dbg !10195
  store volatile i32 %6, i32* %3, align 4, !dbg !10195
  ret void, !dbg !10196
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10197 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10199, metadata !DIExpression()), !dbg !10201
  call void @llvm.dbg.value(metadata i32 %1, metadata !10200, metadata !DIExpression()), !dbg !10201
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10202
  %4 = load volatile i32, i32* %3, align 4, !dbg !10202
  %5 = and i32 %4, -1537, !dbg !10202
  %6 = or i32 %5, %1, !dbg !10202
  store volatile i32 %6, i32* %3, align 4, !dbg !10202
  ret void, !dbg !10203
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10204 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10206, metadata !DIExpression()), !dbg !10207
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10208
  %3 = load volatile i32, i32* %2, align 4, !dbg !10208
  %4 = and i32 %3, 1, !dbg !10208
  ret i32 %4, !dbg !10209
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10210 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10212, metadata !DIExpression()), !dbg !10213
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10214
  %3 = load volatile i32, i32* %2, align 4, !dbg !10214
  %4 = lshr i32 %3, 1, !dbg !10215
  %5 = and i32 %4, 1, !dbg !10215
  ret i32 %5, !dbg !10216
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10217 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10219, metadata !DIExpression()), !dbg !10220
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10221
  %3 = load volatile i32, i32* %2, align 4, !dbg !10221
  %4 = lshr i32 %3, 8, !dbg !10222
  %5 = and i32 %4, 1, !dbg !10222
  ret i32 %5, !dbg !10223
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10224 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10226, metadata !DIExpression()), !dbg !10227
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10228
  store volatile i32 -257, i32* %2, align 4, !dbg !10228
  ret void, !dbg !10229
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10230 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10232, metadata !DIExpression()), !dbg !10234
  %3 = bitcast i32* %2 to i8*, !dbg !10235
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10235
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10233, metadata !DIExpression()), !dbg !10236
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10237
  %5 = load volatile i32, i32* %4, align 4, !dbg !10237
  store volatile i32 %5, i32* %2, align 4, !dbg !10238
  %6 = load volatile i32, i32* %2, align 4, !dbg !10239
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10240
  %8 = load volatile i32, i32* %7, align 4, !dbg !10240
  store volatile i32 %8, i32* %2, align 4, !dbg !10241
  %9 = load volatile i32, i32* %2, align 4, !dbg !10242
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10243
  ret void, !dbg !10243
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10244 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10246, metadata !DIExpression()), !dbg !10248
  %3 = bitcast i32* %2 to i8*, !dbg !10249
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10249
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10247, metadata !DIExpression()), !dbg !10250
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10251
  %5 = load volatile i32, i32* %4, align 4, !dbg !10251
  store volatile i32 %5, i32* %2, align 4, !dbg !10252
  %6 = load volatile i32, i32* %2, align 4, !dbg !10253
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10254
  %8 = load volatile i32, i32* %7, align 4, !dbg !10254
  store volatile i32 %8, i32* %2, align 4, !dbg !10255
  %9 = load volatile i32, i32* %2, align 4, !dbg !10256
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10257
  ret void, !dbg !10257
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10258 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10260, metadata !DIExpression()), !dbg !10262
  %3 = bitcast i32* %2 to i8*, !dbg !10263
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10263
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10261, metadata !DIExpression()), !dbg !10264
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10265
  %5 = load volatile i32, i32* %4, align 4, !dbg !10265
  store volatile i32 %5, i32* %2, align 4, !dbg !10266
  %6 = load volatile i32, i32* %2, align 4, !dbg !10267
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10268
  %8 = load volatile i32, i32* %7, align 4, !dbg !10268
  store volatile i32 %8, i32* %2, align 4, !dbg !10269
  %9 = load volatile i32, i32* %2, align 4, !dbg !10270
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10271
  ret void, !dbg !10271
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1590 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1592, metadata !DIExpression()), !dbg !10272
  tail call void @z_arm_irq_priority_set(i32 noundef 37, i32 noundef 0, i32 noundef 0) #27, !dbg !10273
  tail call void @arch_irq_enable(i32 noundef 37) #27, !dbg !10275
  ret void, !dbg !10275
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_1(%struct.device* nocapture noundef readnone %0) #1 !dbg !1639 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1641, metadata !DIExpression()), !dbg !10276
  tail call void @z_arm_irq_priority_set(i32 noundef 38, i32 noundef 0, i32 noundef 0) #27, !dbg !10277
  tail call void @arch_irq_enable(i32 noundef 38) #27, !dbg !10279
  ret void, !dbg !10279
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_2(%struct.device* nocapture noundef readnone %0) #1 !dbg !1656 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1658, metadata !DIExpression()), !dbg !10280
  tail call void @z_arm_irq_priority_set(i32 noundef 39, i32 noundef 0, i32 noundef 0) #27, !dbg !10281
  tail call void @arch_irq_enable(i32 noundef 39) #27, !dbg !10283
  ret void, !dbg !10283
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_3(%struct.device* nocapture noundef readnone %0) #1 !dbg !1673 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1675, metadata !DIExpression()), !dbg !10284
  tail call void @z_arm_irq_priority_set(i32 noundef 52, i32 noundef 0, i32 noundef 0) #27, !dbg !10285
  tail call void @arch_irq_enable(i32 noundef 52) #27, !dbg !10287
  ret void, !dbg !10287
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !10288 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10290, metadata !DIExpression()), !dbg !10292
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10293
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10293
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10293
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10291, metadata !DIExpression()), !dbg !10292
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !10294
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !10294
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !10296
  br i1 %7, label %11, label %8, !dbg !10297

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !10298
  %10 = load i8*, i8** %9, align 4, !dbg !10298
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #27, !dbg !10300
  br label %11, !dbg !10301

11:                                               ; preds = %8, %1
  ret void, !dbg !10302
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !10303 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10305, metadata !DIExpression()), !dbg !10311
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10312
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10312
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10312
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10306, metadata !DIExpression()), !dbg !10311
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10313
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10313
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10313
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10307, metadata !DIExpression()), !dbg !10311
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !10314
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10315
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10315
  %10 = tail call fastcc zeroext i1 @device_is_ready.62(%struct.device* noundef %9) #26, !dbg !10317
  br i1 %10, label %11, label %51, !dbg !10318

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10319
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10320
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10320
  %15 = load i8*, i8** %14, align 4, !dbg !10320
  %16 = tail call fastcc i32 @clock_control_on.63(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !10321
  call void @llvm.dbg.value(metadata i32 %16, metadata !10310, metadata !DIExpression()), !dbg !10311
  %17 = icmp eq i32 %16, 0, !dbg !10322
  br i1 %17, label %18, label %51, !dbg !10324

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10325
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10325
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !10326
  call void @llvm.dbg.value(metadata i32 %21, metadata !10310, metadata !DIExpression()), !dbg !10311
  %22 = icmp slt i32 %21, 0, !dbg !10327
  br i1 %22, label %51, label %23, !dbg !10329

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10330
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10330
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !10331
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10332
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !10333
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10334
  %28 = load i32, i32* %27, align 4, !dbg !10334
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10336

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10308, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i32 4096, metadata !10309, metadata !DIExpression()), !dbg !10311
  br label %31, !dbg !10337

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10308, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i32 0, metadata !10309, metadata !DIExpression()), !dbg !10311
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10340
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10340
  call void @llvm.dbg.value(metadata i32 %33, metadata !10309, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i32 %32, metadata !10308, metadata !DIExpression()), !dbg !10311
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10341
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !10342
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10343
  %36 = load i8, i8* %35, align 4, !dbg !10343, !range !6512
  %37 = icmp eq i8 %36, 0, !dbg !10343
  br i1 %37, label %39, label %38, !dbg !10345

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !10346
  br label %39, !dbg !10348

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10349
  %41 = load i32, i32* %40, align 4, !dbg !10349
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !10350
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10351
  %43 = load i8, i8* %42, align 4, !dbg !10351, !range !6512
  %44 = icmp eq i8 %43, 0, !dbg !10351
  br i1 %44, label %47, label %45, !dbg !10353

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10354
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !10356
  br label %47, !dbg !10357

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10358
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !10359
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !10360
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !10360
  tail call void %50(%struct.device* noundef nonnull %0) #27, !dbg !10361
  br label %51, !dbg !10362

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10311
  ret i32 %52, !dbg !10363
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !10364 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10366, metadata !DIExpression()), !dbg !10370
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10371
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10371
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10371
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10367, metadata !DIExpression()), !dbg !10370
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10368, metadata !DIExpression()), !dbg !10370
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10372
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10373
  ret void, !dbg !10374
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.62(%struct.device* noundef %0) unnamed_addr #1 !dbg !10375 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10379, metadata !DIExpression()), !dbg !10380
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10381, !srcloc !10383
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.64(%struct.device* noundef %0) #26, !dbg !10384
  ret i1 %2, !dbg !10385
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.63(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10386 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10388, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.value(metadata i8* %1, metadata !10389, metadata !DIExpression()), !dbg !10391
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10392
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10392
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10392
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10390, metadata !DIExpression()), !dbg !10391
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10393
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10393
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !10394
  ret i32 %8, !dbg !10395
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10396 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10400, metadata !DIExpression()), !dbg !10404
  call void @llvm.dbg.value(metadata i8 0, metadata !10401, metadata !DIExpression()), !dbg !10404
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10405
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10405
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10403, metadata !DIExpression(DW_OP_deref)), !dbg !10404
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !10406
  call void @llvm.dbg.value(metadata i32 %4, metadata !10402, metadata !DIExpression()), !dbg !10404
  %5 = icmp slt i32 %4, 0, !dbg !10407
  br i1 %5, label %9, label %6, !dbg !10409

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10410
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10403, metadata !DIExpression()), !dbg !10404
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !10411
  br label %9, !dbg !10412

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10404
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10413
  ret i32 %10, !dbg !10413
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10414 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10416, metadata !DIExpression()), !dbg !10420
  call void @llvm.dbg.value(metadata i32 12, metadata !10417, metadata !DIExpression()), !dbg !10420
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10421

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9711, metadata !DIExpression()) #25, !dbg !10422
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10425, !srcloc !9721
  call void @llvm.dbg.value(metadata i32 %4, metadata !9716, metadata !DIExpression()) #25, !dbg !10422
  %5 = or i32 %4, 12, !dbg !10426
  call void @llvm.dbg.value(metadata i32 %5, metadata !10418, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.value(metadata i32 %5, metadata !9724, metadata !DIExpression()) #25, !dbg !10428
  call void @llvm.dbg.value(metadata i32* %2, metadata !9729, metadata !DIExpression()) #25, !dbg !10428
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10430, !srcloc !9734
  call void @llvm.dbg.value(metadata i32 %6, metadata !9730, metadata !DIExpression()) #25, !dbg !10428
  %7 = icmp eq i32 %6, 0, !dbg !10421
  br i1 %7, label %8, label %3, !dbg !10426, !llvm.loop !10431

8:                                                ; preds = %3
  ret void, !dbg !10432
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10433 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10435, metadata !DIExpression()), !dbg !10439
  call void @llvm.dbg.value(metadata i32 %1, metadata !10436, metadata !DIExpression()), !dbg !10439
  call void @llvm.dbg.value(metadata i32 %2, metadata !10437, metadata !DIExpression()), !dbg !10439
  call void @llvm.dbg.value(metadata i32 0, metadata !10438, metadata !DIExpression()), !dbg !10439
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10440
  %5 = load volatile i32, i32* %4, align 4, !dbg !10440
  %6 = and i32 %5, -5633, !dbg !10440
  %7 = or i32 %2, %1, !dbg !10440
  %8 = or i32 %7, %6, !dbg !10440
  store volatile i32 %8, i32* %4, align 4, !dbg !10440
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10441
  %10 = load volatile i32, i32* %9, align 4, !dbg !10441
  %11 = and i32 %10, -12289, !dbg !10441
  store volatile i32 %11, i32* %9, align 4, !dbg !10441
  ret void, !dbg !10442
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10443 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10445, metadata !DIExpression()), !dbg !10446
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10447
  %3 = load volatile i32, i32* %2, align 4, !dbg !10447
  %4 = or i32 %3, 8, !dbg !10447
  store volatile i32 %4, i32* %2, align 4, !dbg !10447
  ret void, !dbg !10448
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10449 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10453, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10454, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata i32 0, metadata !10455, metadata !DIExpression()), !dbg !10456
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10457
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10457
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10458
  %5 = load i8, i8* %4, align 4, !dbg !10458
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !10459
  ret i32 %6, !dbg !10460
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.64(%struct.device* noundef %0) unnamed_addr #1 !dbg !10461 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10463, metadata !DIExpression()), !dbg !10464
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !10465
  ret i1 %2, !dbg !10466
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10467 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10469, metadata !DIExpression()), !dbg !10470
  tail call fastcc void @__NVIC_SetPriority.66() #26, !dbg !10471
  store i32 8399, i32* @last_load, align 4, !dbg !10472
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10473
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10474
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10475
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10476
  %3 = or i32 %2, 7, !dbg !10476
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10476
  ret i32 0, !dbg !10477
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.66() unnamed_addr #15 !dbg !10478 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10480, metadata !DIExpression()), !dbg !10482
  call void @llvm.dbg.value(metadata i32 1, metadata !10481, metadata !DIExpression()), !dbg !10482
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10483
  ret void, !dbg !10486
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10487 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10489, metadata !DIExpression()), !dbg !10491
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !10492
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10493
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10494
  %5 = add i32 %4, %3, !dbg !10494
  store i32 %5, i32* @cycle_count, align 4, !dbg !10494
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10495
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10496
  %7 = sub i32 %5, %6, !dbg !10499
  %8 = udiv i32 %7, 8400, !dbg !10500
  call void @llvm.dbg.value(metadata i32 %8, metadata !10490, metadata !DIExpression()), !dbg !10491
  %9 = mul nuw i32 %8, 8400, !dbg !10501
  %10 = add i32 %9, %6, !dbg !10502
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10502
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !10503
  tail call void @z_arm_int_exit() #27, !dbg !10504
  ret void, !dbg !10505
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10506 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10511
  call void @llvm.dbg.value(metadata i32 %1, metadata !10508, metadata !DIExpression()), !dbg !10512
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10513
  call void @llvm.dbg.value(metadata i32 %2, metadata !10509, metadata !DIExpression()), !dbg !10512
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10514
  call void @llvm.dbg.value(metadata i32 %3, metadata !10510, metadata !DIExpression()), !dbg !10512
  %4 = and i32 %2, 65536, !dbg !10515
  %5 = icmp ne i32 %4, 0, !dbg !10515
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10517
  %8 = load i32, i32* @last_load, align 4, !dbg !10512
  br i1 %7, label %9, label %13, !dbg !10517

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10518
  %11 = add i32 %10, %8, !dbg !10518
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10518
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10520
  br label %13, !dbg !10521

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10522
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10523
  %16 = add i32 %14, %15, !dbg !10524
  ret i32 %16, !dbg !10525
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10530, metadata !DIExpression()), !dbg !10543
  call void @llvm.dbg.value(metadata i1 %1, metadata !10531, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10543
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10544
  br i1 %4, label %5, label %8, !dbg !10544

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10546
  %7 = and i32 %6, -2, !dbg !10546
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10546
  store i32 -16777216, i32* @last_load, align 4, !dbg !10548
  br label %54, !dbg !10549

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10550
  call void @llvm.dbg.value(metadata i32 %9, metadata !10535, metadata !DIExpression()), !dbg !10543
  br i1 %3, label %18, label %10, !dbg !10551

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10551
  call void @llvm.dbg.value(metadata i32 undef, metadata !10530, metadata !DIExpression()), !dbg !10543
  %12 = icmp slt i32 %11, 1, !dbg !10552
  br i1 %12, label %18, label %13, !dbg !10552

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10552
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10552
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10552
  %17 = add nuw nsw i32 %16, 8399, !dbg !10552
  br label %18, !dbg !10552

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10530, metadata !DIExpression()), !dbg !10543
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10553, metadata !DIExpression()) #25, !dbg !10560
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10562, !srcloc !10568
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10562
  call void @llvm.dbg.value(metadata i32 %21, metadata !10565, metadata !DIExpression()) #25, !dbg !10569
  call void @llvm.dbg.value(metadata i32 undef, metadata !10566, metadata !DIExpression()) #25, !dbg !10569
  call void @llvm.dbg.value(metadata i32 %21, metadata !10559, metadata !DIExpression()) #25, !dbg !10560
  call void @llvm.dbg.value(metadata i32 %21, metadata !10536, metadata !DIExpression()), !dbg !10543
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !10570
  call void @llvm.dbg.value(metadata i32 %22, metadata !10541, metadata !DIExpression()), !dbg !10543
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10571
  call void @llvm.dbg.value(metadata i32 %23, metadata !10533, metadata !DIExpression()), !dbg !10543
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10572
  %25 = add i32 %24, %22, !dbg !10572
  store i32 %25, i32* @cycle_count, align 4, !dbg !10572
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10573
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10574
  %27 = sub i32 %25, %26, !dbg !10575
  call void @llvm.dbg.value(metadata i32 %27, metadata !10542, metadata !DIExpression()), !dbg !10543
  %28 = icmp slt i32 %27, 0, !dbg !10576
  br i1 %28, label %38, label %29, !dbg !10578

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10532, metadata !DIExpression()), !dbg !10543
  call void @llvm.dbg.value(metadata i32 undef, metadata !10532, metadata !DIExpression()), !dbg !10543
  %30 = add nuw i32 %19, %27, !dbg !10579
  %31 = urem i32 %30, 8400, !dbg !10581
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10532, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10543
  %32 = sub nuw nsw i32 %19, %31, !dbg !10582
  call void @llvm.dbg.value(metadata i32 %32, metadata !10532, metadata !DIExpression()), !dbg !10543
  %33 = icmp ugt i32 %32, 1024, !dbg !10583
  br i1 %33, label %34, label %36, !dbg !10583

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10532, metadata !DIExpression()), !dbg !10543
  %35 = icmp ugt i32 %32, 16766400, !dbg !10584
  br i1 %35, label %38, label %36, !dbg !10586

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !10587
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10588
  call void @llvm.dbg.value(metadata i32 %40, metadata !10534, metadata !DIExpression()), !dbg !10543
  %41 = add nsw i32 %39, -1, !dbg !10589
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10590
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10591
  %42 = icmp ult i32 %23, %40, !dbg !10592
  br i1 %42, label %43, label %48, !dbg !10594

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !10595
  %45 = add i32 %23, %9, !dbg !10597
  %46 = sub i32 %45, %40, !dbg !10598
  %47 = add i32 %46, %44, !dbg !10595
  br label %52, !dbg !10599

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !10600
  %50 = load i32, i32* @cycle_count, align 4, !dbg !10602
  %51 = add i32 %49, %50, !dbg !10602
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !10603
  store i32 %53, i32* @cycle_count, align 4, !dbg !10603
  call void @llvm.dbg.value(metadata i32 %21, metadata !10604, metadata !DIExpression()) #25, !dbg !10610
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10609, metadata !DIExpression()) #25, !dbg !10610
  call void @llvm.dbg.value(metadata i32 %21, metadata !10612, metadata !DIExpression()) #25, !dbg !10615
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !10617, !srcloc !10618
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !10619
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10620 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10553, metadata !DIExpression()) #25, !dbg !10624
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10626, !srcloc !10568
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10626
  call void @llvm.dbg.value(metadata i32 %2, metadata !10565, metadata !DIExpression()) #25, !dbg !10628
  call void @llvm.dbg.value(metadata i32 undef, metadata !10566, metadata !DIExpression()) #25, !dbg !10628
  call void @llvm.dbg.value(metadata i32 %2, metadata !10559, metadata !DIExpression()) #25, !dbg !10624
  call void @llvm.dbg.value(metadata i32 %2, metadata !10622, metadata !DIExpression()), !dbg !10629
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10630
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10631
  %5 = add i32 %4, %3, !dbg !10632
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10633
  %7 = sub i32 %5, %6, !dbg !10634
  call void @llvm.dbg.value(metadata i32 %7, metadata !10623, metadata !DIExpression()), !dbg !10629
  call void @llvm.dbg.value(metadata i32 %2, metadata !10604, metadata !DIExpression()) #25, !dbg !10635
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10609, metadata !DIExpression()) #25, !dbg !10635
  call void @llvm.dbg.value(metadata i32 %2, metadata !10612, metadata !DIExpression()) #25, !dbg !10637
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !10639, !srcloc !10618
  %8 = udiv i32 %7, 8400, !dbg !10640
  ret i32 %8, !dbg !10641
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10642 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10553, metadata !DIExpression()) #25, !dbg !10646
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10648, !srcloc !10568
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10648
  call void @llvm.dbg.value(metadata i32 %2, metadata !10565, metadata !DIExpression()) #25, !dbg !10650
  call void @llvm.dbg.value(metadata i32 undef, metadata !10566, metadata !DIExpression()) #25, !dbg !10650
  call void @llvm.dbg.value(metadata i32 %2, metadata !10559, metadata !DIExpression()) #25, !dbg !10646
  call void @llvm.dbg.value(metadata i32 %2, metadata !10644, metadata !DIExpression()), !dbg !10651
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10652
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10653
  %5 = add i32 %4, %3, !dbg !10654
  call void @llvm.dbg.value(metadata i32 %5, metadata !10645, metadata !DIExpression()), !dbg !10651
  call void @llvm.dbg.value(metadata i32 %2, metadata !10604, metadata !DIExpression()) #25, !dbg !10655
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10609, metadata !DIExpression()) #25, !dbg !10655
  call void @llvm.dbg.value(metadata i32 %2, metadata !10612, metadata !DIExpression()) #25, !dbg !10657
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !10659, !srcloc !10618
  ret i32 %5, !dbg !10660
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10661 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10662
  %2 = icmp eq i32 %1, -16777216, !dbg !10664
  br i1 %2, label %3, label %6, !dbg !10665

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10666
  %5 = or i32 %4, 1, !dbg !10666
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10666
  br label %6, !dbg !10668

6:                                                ; preds = %3, %0
  ret void, !dbg !10669
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10670 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10671
  %2 = and i32 %1, -2, !dbg !10671
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10671
  ret void, !dbg !10672
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !10673 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10699, metadata !DIExpression()), !dbg !10702
  call void @llvm.dbg.value(metadata i8 %1, metadata !10700, metadata !DIExpression()), !dbg !10702
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10701, metadata !DIExpression()), !dbg !10702
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10703
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10703
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10702
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10704
  %8 = load i8, i8* %6, align 4, !dbg !10705
  %9 = zext i8 %8 to i32, !dbg !10706
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10706
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10707
  br i1 %11, label %18, label %24, !dbg !10708

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10702
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10704
  %14 = load i8, i8* %6, align 4, !dbg !10705
  %15 = zext i8 %14 to i32, !dbg !10706
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10706
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10707
  br i1 %17, label %18, label %24, !dbg !10708, !llvm.loop !10709

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10711
  %21 = load i8, i8* %20, align 1, !dbg !10711
  %22 = icmp eq i8 %21, %1, !dbg !10714
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10715
  br i1 %22, label %24, label %12, !dbg !10716

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10702
  ret i32 %25, !dbg !10717
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10718 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10729, metadata !DIExpression()), !dbg !10745
  call void @llvm.dbg.value(metadata i8 %1, metadata !10730, metadata !DIExpression()), !dbg !10745
  call void @llvm.dbg.value(metadata i32 %2, metadata !10731, metadata !DIExpression()), !dbg !10745
  call void @llvm.dbg.value(metadata i32 0, metadata !10734, metadata !DIExpression()), !dbg !10745
  call void @llvm.dbg.value(metadata i32 0, metadata !10735, metadata !DIExpression()), !dbg !10745
  call void @llvm.dbg.value(metadata i8 0, metadata !10736, metadata !DIExpression()), !dbg !10746
  %4 = icmp eq i8 %1, 0, !dbg !10747
  br i1 %4, label %35, label %5, !dbg !10748

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10747
  br label %9, !dbg !10748

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10736, metadata !DIExpression()), !dbg !10746
  call void @llvm.dbg.value(metadata i32 %29, metadata !10734, metadata !DIExpression()), !dbg !10745
  %8 = icmp eq i32 %34, %6, !dbg !10747
  br i1 %8, label %35, label %9, !dbg !10748, !llvm.loop !10749

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10736, metadata !DIExpression()), !dbg !10746
  call void @llvm.dbg.value(metadata i32 %11, metadata !10734, metadata !DIExpression()), !dbg !10745
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10751
  %13 = load i32, i32* %12, align 4, !dbg !10751
  call void @llvm.dbg.value(metadata i32 %13, metadata !10733, metadata !DIExpression()), !dbg !10745
  %14 = and i32 %13, 31, !dbg !10752
  %15 = icmp ult i32 %14, 16, !dbg !10753
  br i1 %15, label %16, label %20, !dbg !10754

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10755
  %18 = load i32, i32* %17, align 4, !dbg !10755
  %19 = or i32 %18, 32, !dbg !10757
  call void @llvm.dbg.value(metadata i32 %19, metadata !10734, metadata !DIExpression()), !dbg !10745
  br label %28, !dbg !10758

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10759

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10760
  %23 = load i32, i32* %22, align 4, !dbg !10760
  call void @llvm.dbg.value(metadata i32 %23, metadata !10738, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10761
  %24 = lshr i32 %23, 7, !dbg !10762
  %25 = and i32 %24, 16, !dbg !10762
  %26 = or i32 %25, %23, !dbg !10762
  call void @llvm.dbg.value(metadata i32 %26, metadata !10734, metadata !DIExpression()), !dbg !10745
  br label %28, !dbg !10763

27:                                               ; preds = %20
  br label %28, !dbg !10764

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !10745
  call void @llvm.dbg.value(metadata i32 %29, metadata !10734, metadata !DIExpression()), !dbg !10745
  %30 = lshr i32 %13, 5, !dbg !10764
  %31 = and i32 %30, 255, !dbg !10764
  call void @llvm.dbg.value(metadata i32 %31, metadata !10732, metadata !DIExpression()), !dbg !10745
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !10765
  call void @llvm.dbg.value(metadata i32 %32, metadata !10735, metadata !DIExpression()), !dbg !10745
  %33 = icmp slt i32 %32, 0, !dbg !10766
  %34 = add nuw nsw i32 %10, 1, !dbg !10768
  call void @llvm.dbg.value(metadata i32 %34, metadata !10736, metadata !DIExpression()), !dbg !10746
  br i1 %33, label %35, label %7, !dbg !10769

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10770
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10775, metadata !DIExpression()), !dbg !10779
  call void @llvm.dbg.value(metadata i32 %1, metadata !10776, metadata !DIExpression()), !dbg !10779
  call void @llvm.dbg.value(metadata i32 %2, metadata !10777, metadata !DIExpression()), !dbg !10779
  %4 = icmp ugt i32 %0, 175, !dbg !10780
  br i1 %4, label %16, label %5, !dbg !10782

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10783
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10784
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10784
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10778, metadata !DIExpression()), !dbg !10779
  %9 = add nsw i32 %6, -8, !dbg !10785
  %10 = icmp ult i32 %9, 3, !dbg !10785
  br i1 %10, label %16, label %11, !dbg !10787

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.71(%struct.device* noundef %8) #26, !dbg !10788
  br i1 %12, label %13, label %16, !dbg !10789

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !10790
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !10791
  br label %16, !dbg !10792

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !10779
  ret i32 %17, !dbg !10793
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.71(%struct.device* noundef %0) unnamed_addr #1 !dbg !10794 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10798, metadata !DIExpression()), !dbg !10799
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10800, !srcloc !10802
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.72(%struct.device* noundef %0) #26, !dbg !10803
  ret i1 %2, !dbg !10804
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.72(%struct.device* noundef %0) unnamed_addr #1 !dbg !10805 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10807, metadata !DIExpression()), !dbg !10808
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !10809
  ret i1 %2, !dbg !10810
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !10811 {
  ret void, !dbg !10812
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !10813 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10815, metadata !DIExpression()), !dbg !10820
  call void @llvm.dbg.value(metadata i32 0, metadata !10816, metadata !DIExpression()), !dbg !10820
  call void @llvm.dbg.value(metadata i32 2, metadata !10817, metadata !DIExpression()), !dbg !10820
  call void @llvm.dbg.value(metadata i32 0, metadata !10818, metadata !DIExpression()), !dbg !10820
  call void @llvm.dbg.value(metadata i32 2, metadata !10819, metadata !DIExpression()), !dbg !10820
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10821
  %2 = and i32 %1, 12, !dbg !10822
  call void @llvm.dbg.value(metadata i32 %2, metadata !10815, metadata !DIExpression()), !dbg !10820
  %3 = icmp eq i32 %2, 8, !dbg !10823
  br i1 %3, label %4, label %18, !dbg !10823

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10824
  call void @llvm.dbg.value(metadata i32 %5, metadata !10818, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !10820
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10826
  %7 = and i32 %6, 63, !dbg !10827
  call void @llvm.dbg.value(metadata i32 %7, metadata !10819, metadata !DIExpression()), !dbg !10820
  %8 = udiv i32 16000000, %7, !dbg !10828
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10828
  %10 = lshr i32 %9, 6, !dbg !10828
  %11 = and i32 %10, 511, !dbg !10828
  %12 = mul i32 %11, %8, !dbg !10828
  call void @llvm.dbg.value(metadata i32 %12, metadata !10816, metadata !DIExpression()), !dbg !10820
  call void @llvm.dbg.value(metadata i32 %12, metadata !10816, metadata !DIExpression()), !dbg !10820
  call void @llvm.dbg.value(metadata i32 %12, metadata !10816, metadata !DIExpression()), !dbg !10820
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10830
  %14 = lshr i32 %13, 15, !dbg !10831
  %15 = and i32 %14, 6, !dbg !10831
  %16 = add nuw nsw i32 %15, 2, !dbg !10831
  call void @llvm.dbg.value(metadata i32 %16, metadata !10817, metadata !DIExpression()), !dbg !10820
  %17 = udiv i32 %12, %16, !dbg !10832
  br label %18, !dbg !10833

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !10834
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10835
  %21 = lshr i32 %20, 4, !dbg !10836
  %22 = and i32 %21, 15, !dbg !10836
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !10837
  %24 = load i8, i8* %23, align 1, !dbg !10837
  %25 = zext i8 %24 to i32, !dbg !10837
  call void @llvm.dbg.value(metadata i32 %25, metadata !10815, metadata !DIExpression()), !dbg !10820
  %26 = lshr i32 %19, %25, !dbg !10838
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !10838
  ret void, !dbg !10839
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_PeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !10840 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !10882, metadata !DIExpression()), !dbg !10896
  call void @llvm.dbg.value(metadata i32 0, metadata !10883, metadata !DIExpression()), !dbg !10896
  call void @llvm.dbg.value(metadata i32 0, metadata !10884, metadata !DIExpression()), !dbg !10896
  call void @llvm.dbg.value(metadata i32 0, metadata !10885, metadata !DIExpression()), !dbg !10896
  call void @llvm.dbg.value(metadata i32 0, metadata !10886, metadata !DIExpression()), !dbg !10896
  call void @llvm.dbg.value(metadata i32 0, metadata !10887, metadata !DIExpression()), !dbg !10896
  call void @llvm.dbg.value(metadata i32 0, metadata !10888, metadata !DIExpression()), !dbg !10896
  call void @llvm.dbg.value(metadata i32 0, metadata !10889, metadata !DIExpression()), !dbg !10896
  call void @llvm.dbg.value(metadata i32 0, metadata !10890, metadata !DIExpression()), !dbg !10896
  call void @llvm.dbg.value(metadata i32 0, metadata !10891, metadata !DIExpression()), !dbg !10896
  %3 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !10897
  %4 = load i32, i32* %3, align 4, !dbg !10897
  %5 = and i32 %4, 1, !dbg !10899
  %6 = icmp eq i32 %5, 0, !dbg !10900
  br i1 %6, label %17, label %7, !dbg !10901

7:                                                ; preds = %1
  %8 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10902
  %9 = and i32 %8, -100663297, !dbg !10902
  %10 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !10902
  %11 = load i32, i32* %10, align 4, !dbg !10902
  %12 = or i32 %9, %11, !dbg !10902
  store volatile i32 %12, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10902
  %13 = load i32, i32* %10, align 4, !dbg !10904
  %14 = icmp eq i32 %13, 0, !dbg !10906
  %15 = zext i1 %14 to i32, !dbg !10907
  %16 = load i32, i32* %3, align 4, !dbg !10908
  br label %17, !dbg !10907

17:                                               ; preds = %7, %1
  %18 = phi i32 [ %4, %1 ], [ %16, %7 ], !dbg !10908
  %19 = phi i32 [ 0, %1 ], [ %15, %7 ], !dbg !10896
  call void @llvm.dbg.value(metadata i32 %19, metadata !10890, metadata !DIExpression()), !dbg !10896
  %20 = and i32 %18, 2, !dbg !10910
  %21 = icmp eq i32 %20, 0, !dbg !10911
  br i1 %21, label %32, label %22, !dbg !10912

22:                                               ; preds = %17
  %23 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10913
  %24 = and i32 %23, -402653185, !dbg !10913
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !10913
  %26 = load i32, i32* %25, align 4, !dbg !10913
  %27 = or i32 %24, %26, !dbg !10913
  store volatile i32 %27, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10913
  %28 = load i32, i32* %25, align 4, !dbg !10915
  %29 = icmp eq i32 %28, 0, !dbg !10917
  %30 = select i1 %29, i32 1, i32 %19, !dbg !10918
  %31 = load i32, i32* %3, align 4, !dbg !10919
  br label %32, !dbg !10918

32:                                               ; preds = %22, %17
  %33 = phi i32 [ %18, %17 ], [ %31, %22 ], !dbg !10919
  %34 = phi i32 [ %19, %17 ], [ %30, %22 ], !dbg !10896
  call void @llvm.dbg.value(metadata i32 %34, metadata !10890, metadata !DIExpression()), !dbg !10896
  %35 = and i32 %33, 4, !dbg !10921
  %36 = icmp eq i32 %35, 0, !dbg !10922
  br i1 %36, label %49, label %37, !dbg !10923

37:                                               ; preds = %32
  %38 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10924
  %39 = and i32 %38, -3145729, !dbg !10924
  %40 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !10924
  %41 = load i32, i32* %40, align 4, !dbg !10924
  %42 = or i32 %39, %41, !dbg !10924
  store volatile i32 %42, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10924
  %43 = load i32, i32* %40, align 4, !dbg !10926
  %44 = icmp eq i32 %43, 1048576, !dbg !10928
  %45 = select i1 %44, i32 1, i32 %34, !dbg !10929
  call void @llvm.dbg.value(metadata i32 %45, metadata !10890, metadata !DIExpression()), !dbg !10896
  %46 = icmp eq i32 %43, 0, !dbg !10930
  %47 = zext i1 %46 to i32, !dbg !10932
  %48 = load i32, i32* %3, align 4, !dbg !10933
  br label %49, !dbg !10932

49:                                               ; preds = %37, %32
  %50 = phi i32 [ %33, %32 ], [ %48, %37 ], !dbg !10933
  %51 = phi i32 [ %34, %32 ], [ %45, %37 ], !dbg !10896
  %52 = phi i32 [ 0, %32 ], [ %47, %37 ], !dbg !10896
  call void @llvm.dbg.value(metadata i32 %52, metadata !10891, metadata !DIExpression()), !dbg !10896
  call void @llvm.dbg.value(metadata i32 %51, metadata !10890, metadata !DIExpression()), !dbg !10896
  %53 = and i32 %50, 8, !dbg !10935
  %54 = icmp eq i32 %53, 0, !dbg !10936
  br i1 %54, label %67, label %55, !dbg !10937

55:                                               ; preds = %49
  %56 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10938
  %57 = and i32 %56, -12582913, !dbg !10938
  %58 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !10938
  %59 = load i32, i32* %58, align 4, !dbg !10938
  %60 = or i32 %57, %59, !dbg !10938
  store volatile i32 %60, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !10938
  %61 = load i32, i32* %58, align 4, !dbg !10940
  %62 = icmp eq i32 %61, 4194304, !dbg !10942
  %63 = select i1 %62, i32 1, i32 %51, !dbg !10943
  call void @llvm.dbg.value(metadata i32 %63, metadata !10890, metadata !DIExpression()), !dbg !10896
  %64 = icmp eq i32 %61, 0, !dbg !10944
  %65 = select i1 %64, i32 1, i32 %52, !dbg !10946
  %66 = load i32, i32* %3, align 4, !dbg !10947
  br label %67, !dbg !10946

67:                                               ; preds = %55, %49
  %68 = phi i32 [ %50, %49 ], [ %66, %55 ], !dbg !10947
  %69 = phi i32 [ %51, %49 ], [ %63, %55 ], !dbg !10896
  %70 = phi i32 [ %52, %49 ], [ %65, %55 ], !dbg !10896
  call void @llvm.dbg.value(metadata i32 %70, metadata !10891, metadata !DIExpression()), !dbg !10896
  call void @llvm.dbg.value(metadata i32 %69, metadata !10890, metadata !DIExpression()), !dbg !10896
  %71 = and i32 %68, 32, !dbg !10948
  %72 = icmp eq i32 %71, 0, !dbg !10949
  br i1 %72, label %131, label %73, !dbg !10950

73:                                               ; preds = %67
  %74 = bitcast i32* %2 to i8*, !dbg !10951
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74), !dbg !10951
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10892, metadata !DIExpression()), !dbg !10951
  store volatile i32 0, i32* %2, align 4, !dbg !10951
  %75 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10951
  %76 = or i32 %75, 268435456, !dbg !10951
  store volatile i32 %76, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10951
  %77 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10951
  %78 = and i32 %77, 268435456, !dbg !10951
  store volatile i32 %78, i32* %2, align 4, !dbg !10951
  %79 = load volatile i32, i32* %2, align 4, !dbg !10951
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74), !dbg !10952
  %80 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10953
  %81 = or i32 %80, 256, !dbg !10953
  store volatile i32 %81, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10953
  %82 = tail call i32 @HAL_GetTick() #27, !dbg !10954
  call void @llvm.dbg.value(metadata i32 %82, metadata !10883, metadata !DIExpression()), !dbg !10896
  br label %83, !dbg !10955

83:                                               ; preds = %87, %73
  %84 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10956
  %85 = and i32 %84, 256, !dbg !10957
  %86 = icmp eq i32 %85, 0, !dbg !10958
  br i1 %86, label %87, label %91, !dbg !10955

87:                                               ; preds = %83
  %88 = tail call i32 @HAL_GetTick() #27, !dbg !10959
  %89 = sub i32 %88, %82, !dbg !10962
  %90 = icmp ugt i32 %89, 2, !dbg !10963
  br i1 %90, label %439, label %83, !dbg !10964, !llvm.loop !10965

91:                                               ; preds = %83
  %92 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10967
  %93 = and i32 %92, 768, !dbg !10968
  call void @llvm.dbg.value(metadata i32 %93, metadata !10884, metadata !DIExpression()), !dbg !10896
  %94 = icmp eq i32 %93, 0, !dbg !10969
  br i1 %94, label %116, label %95, !dbg !10971

95:                                               ; preds = %91
  %96 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !10972
  %97 = load i32, i32* %96, align 4, !dbg !10972
  %98 = and i32 %97, 768, !dbg !10973
  %99 = icmp eq i32 %93, %98, !dbg !10974
  br i1 %99, label %116, label %100, !dbg !10975

100:                                              ; preds = %95
  %101 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10976
  %102 = and i32 %101, -769, !dbg !10978
  call void @llvm.dbg.value(metadata i32 %102, metadata !10884, metadata !DIExpression()), !dbg !10896
  store volatile i32 1, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !10979
  store volatile i32 0, i32* inttoptr (i32 1111952960 to i32*), align 64, !dbg !10980
  store volatile i32 %102, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10981
  %103 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10982
  %104 = and i32 %103, 1, !dbg !10982
  %105 = icmp eq i32 %104, 0, !dbg !10982
  br i1 %105, label %116, label %106, !dbg !10984

106:                                              ; preds = %100
  %107 = tail call i32 @HAL_GetTick() #27, !dbg !10985
  call void @llvm.dbg.value(metadata i32 %107, metadata !10883, metadata !DIExpression()), !dbg !10896
  br label %108, !dbg !10987

108:                                              ; preds = %112, %106
  %109 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10988
  %110 = and i32 %109, 2, !dbg !10989
  %111 = icmp eq i32 %110, 0, !dbg !10989
  br i1 %111, label %112, label %116, !dbg !10987

112:                                              ; preds = %108
  %113 = tail call i32 @HAL_GetTick() #27, !dbg !10990
  %114 = sub i32 %113, %107, !dbg !10993
  %115 = icmp ugt i32 %114, 5000, !dbg !10994
  br i1 %115, label %439, label %108, !dbg !10995, !llvm.loop !10996

116:                                              ; preds = %108, %91, %95, %100
  %117 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !10998
  %118 = load i32, i32* %117, align 4, !dbg !10998
  %119 = and i32 %118, 768, !dbg !10998
  %120 = icmp eq i32 %119, 768, !dbg !10998
  %121 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10998
  %122 = and i32 %121, -2031617, !dbg !10998
  %123 = and i32 %118, 268434687, !dbg !10998
  %124 = select i1 %120, i32 %123, i32 0, !dbg !10998
  %125 = or i32 %122, %124, !dbg !10998
  store volatile i32 %125, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10998
  %126 = load i32, i32* %117, align 4, !dbg !10998
  %127 = and i32 %126, 4095, !dbg !10998
  %128 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10998
  %129 = or i32 %128, %127, !dbg !10998
  store volatile i32 %129, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10998
  %130 = load i32, i32* %3, align 4, !dbg !11000
  br label %131, !dbg !11002

131:                                              ; preds = %116, %67
  %132 = phi i32 [ %130, %116 ], [ %68, %67 ], !dbg !11000
  %133 = and i32 %132, 16, !dbg !11003
  %134 = icmp eq i32 %133, 0, !dbg !11004
  br i1 %134, label %140, label %135, !dbg !11005

135:                                              ; preds = %131
  %136 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !11006
  %137 = load i8, i8* %136, align 4, !dbg !11006
  %138 = zext i8 %137 to i32, !dbg !11006
  store volatile i32 %138, i32* inttoptr (i32 1111953888 to i32*), align 32, !dbg !11006
  %139 = load i32, i32* %3, align 4, !dbg !11008
  br label %140, !dbg !11010

140:                                              ; preds = %135, %131
  %141 = phi i32 [ %139, %135 ], [ %132, %131 ], !dbg !11008
  %142 = and i32 %141, 128, !dbg !11011
  %143 = icmp eq i32 %142, 0, !dbg !11012
  br i1 %143, label %151, label %144, !dbg !11013

144:                                              ; preds = %140
  %145 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11014
  %146 = and i32 %145, -12582913, !dbg !11014
  %147 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !11014
  %148 = load i32, i32* %147, align 4, !dbg !11014
  %149 = or i32 %146, %148, !dbg !11014
  store volatile i32 %149, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11014
  %150 = load i32, i32* %3, align 4, !dbg !11016
  br label %151, !dbg !11018

151:                                              ; preds = %144, %140
  %152 = phi i32 [ %150, %144 ], [ %141, %140 ], !dbg !11016
  %153 = and i32 %152, 64, !dbg !11019
  %154 = icmp eq i32 %153, 0, !dbg !11020
  br i1 %154, label %162, label %155, !dbg !11021

155:                                              ; preds = %151
  %156 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11022
  %157 = and i32 %156, -67108865, !dbg !11022
  %158 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !11022
  %159 = load i32, i32* %158, align 4, !dbg !11022
  %160 = or i32 %157, %159, !dbg !11022
  store volatile i32 %160, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11022
  %161 = load i32, i32* %3, align 4, !dbg !11024
  br label %162, !dbg !11026

162:                                              ; preds = %155, %151
  %163 = phi i32 [ %161, %155 ], [ %152, %151 ], !dbg !11024
  %164 = and i32 %163, 256, !dbg !11027
  %165 = icmp eq i32 %164, 0, !dbg !11028
  br i1 %165, label %176, label %166, !dbg !11029

166:                                              ; preds = %162
  %167 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11030
  %168 = and i32 %167, -134217729, !dbg !11030
  %169 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !11030
  %170 = load i32, i32* %169, align 4, !dbg !11030
  %171 = or i32 %168, %170, !dbg !11030
  store volatile i32 %171, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11030
  %172 = load i32, i32* %169, align 4, !dbg !11032
  %173 = icmp eq i32 %172, 134217728, !dbg !11034
  %174 = select i1 %173, i32 1, i32 %70, !dbg !11035
  %175 = load i32, i32* %3, align 4, !dbg !11036
  br label %176, !dbg !11035

176:                                              ; preds = %166, %162
  %177 = phi i32 [ %163, %162 ], [ %175, %166 ], !dbg !11036
  %178 = phi i32 [ %70, %162 ], [ %174, %166 ], !dbg !10896
  call void @llvm.dbg.value(metadata i32 %178, metadata !10891, metadata !DIExpression()), !dbg !10896
  %179 = and i32 %177, 512, !dbg !11038
  %180 = icmp eq i32 %179, 0, !dbg !11039
  br i1 %180, label %188, label %181, !dbg !11040

181:                                              ; preds = %176
  %182 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11041
  %183 = and i32 %182, -268435457, !dbg !11041
  %184 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !11041
  %185 = load i32, i32* %184, align 4, !dbg !11041
  %186 = or i32 %183, %185, !dbg !11041
  store volatile i32 %186, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11041
  %187 = load i32, i32* %3, align 4, !dbg !11043
  br label %188, !dbg !11045

188:                                              ; preds = %181, %176
  %189 = phi i32 [ %187, %181 ], [ %177, %176 ], !dbg !11043
  %190 = and i32 %189, 1024, !dbg !11046
  %191 = icmp eq i32 %190, 0, !dbg !11047
  br i1 %191, label %204, label %192, !dbg !11048

192:                                              ; preds = %188
  %193 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11049
  %194 = and i32 %193, -536870913, !dbg !11049
  %195 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !11049
  %196 = load i32, i32* %195, align 4, !dbg !11049
  %197 = or i32 %194, %196, !dbg !11049
  store volatile i32 %197, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11049
  %198 = load i32, i32* %195, align 4, !dbg !11051
  %199 = icmp eq i32 %198, 536870912, !dbg !11053
  %200 = icmp eq i32 %69, 1
  %201 = select i1 %199, i1 true, i1 %200, !dbg !11054
  call void @llvm.dbg.value(metadata i32 %69, metadata !10890, metadata !DIExpression()), !dbg !10896
  br i1 %201, label %209, label %202, !dbg !11054

202:                                              ; preds = %192
  %203 = load i32, i32* %3, align 4, !dbg !11055
  br label %206, !dbg !11054

204:                                              ; preds = %188
  call void @llvm.dbg.value(metadata i32 %69, metadata !10890, metadata !DIExpression()), !dbg !10896
  %205 = icmp eq i32 %69, 1, !dbg !11057
  br i1 %205, label %209, label %206, !dbg !11058

206:                                              ; preds = %202, %204
  %207 = phi i32 [ %203, %202 ], [ %189, %204 ], !dbg !11055
  %208 = icmp eq i32 %207, 2048, !dbg !11059
  br i1 %208, label %209, label %356, !dbg !11060

209:                                              ; preds = %192, %206, %204
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11061
  %210 = tail call i32 @HAL_GetTick() #27, !dbg !11063
  call void @llvm.dbg.value(metadata i32 %210, metadata !10883, metadata !DIExpression()), !dbg !10896
  br label %211, !dbg !11064

211:                                              ; preds = %215, %209
  %212 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11065
  %213 = and i32 %212, 134217728, !dbg !11065
  %214 = icmp eq i32 %213, 0, !dbg !11065
  br i1 %214, label %219, label %215, !dbg !11064

215:                                              ; preds = %211
  %216 = tail call i32 @HAL_GetTick() #27, !dbg !11066
  %217 = sub i32 %216, %210, !dbg !11069
  %218 = icmp ugt i32 %217, 2, !dbg !11070
  br i1 %218, label %439, label %211, !dbg !11071, !llvm.loop !11072

219:                                              ; preds = %211
  %220 = load i32, i32* %3, align 4, !dbg !11074
  %221 = and i32 %220, 1, !dbg !11076
  %222 = icmp eq i32 %221, 0, !dbg !11077
  br i1 %222, label %227, label %223, !dbg !11078

223:                                              ; preds = %219
  %224 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !11079
  %225 = load i32, i32* %224, align 4, !dbg !11079
  %226 = icmp eq i32 %225, 0, !dbg !11080
  br i1 %226, label %234, label %227, !dbg !11081

227:                                              ; preds = %223, %219
  %228 = and i32 %220, 2, !dbg !11082
  %229 = icmp eq i32 %228, 0, !dbg !11083
  br i1 %229, label %252, label %230, !dbg !11084

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !11085
  %232 = load i32, i32* %231, align 4, !dbg !11085
  %233 = icmp eq i32 %232, 0, !dbg !11086
  br i1 %233, label %234, label %252, !dbg !11087

234:                                              ; preds = %230, %223
  %235 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11088
  %236 = and i32 %235, 196608, !dbg !11090
  call void @llvm.dbg.value(metadata i32 %236, metadata !10885, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !10896
  %237 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11091
  %238 = and i32 %237, 251658240, !dbg !11092
  call void @llvm.dbg.value(metadata i32 %238, metadata !10886, metadata !DIExpression()), !dbg !10896
  %239 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11093
  %240 = load i32, i32* %239, align 4, !dbg !11093
  %241 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11093
  %242 = load i32, i32* %241, align 4, !dbg !11093
  %243 = shl i32 %242, 6, !dbg !11093
  %244 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11093
  %245 = load i32, i32* %244, align 4, !dbg !11093
  %246 = shl i32 %245, 28, !dbg !11093
  %247 = or i32 %240, %236, !dbg !11093
  %248 = or i32 %247, %238, !dbg !11093
  %249 = or i32 %248, %243, !dbg !11093
  %250 = or i32 %249, %246, !dbg !11093
  store volatile i32 %250, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11093
  %251 = load i32, i32* %3, align 4, !dbg !11094
  br label %252, !dbg !11096

252:                                              ; preds = %234, %230, %227
  %253 = phi i32 [ %251, %234 ], [ %220, %230 ], [ %220, %227 ], !dbg !11094
  %254 = and i32 %253, 4, !dbg !11097
  %255 = icmp eq i32 %254, 0, !dbg !11098
  br i1 %255, label %260, label %256, !dbg !11099

256:                                              ; preds = %252
  %257 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11100
  %258 = load i32, i32* %257, align 4, !dbg !11100
  %259 = icmp eq i32 %258, 1048576, !dbg !11101
  br i1 %259, label %267, label %260, !dbg !11102

260:                                              ; preds = %256, %252
  %261 = and i32 %253, 8, !dbg !11103
  %262 = icmp eq i32 %261, 0, !dbg !11104
  br i1 %262, label %291, label %263, !dbg !11105

263:                                              ; preds = %260
  %264 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11106
  %265 = load i32, i32* %264, align 4, !dbg !11106
  %266 = icmp eq i32 %265, 4194304, !dbg !11107
  br i1 %266, label %267, label %291, !dbg !11108

267:                                              ; preds = %263, %256
  %268 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11109
  %269 = and i32 %268, 196608, !dbg !11111
  call void @llvm.dbg.value(metadata i32 %269, metadata !10885, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !10896
  %270 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11112
  %271 = and i32 %270, 1879048192, !dbg !11113
  call void @llvm.dbg.value(metadata i32 %271, metadata !10887, metadata !DIExpression()), !dbg !10896
  %272 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11114
  %273 = load i32, i32* %272, align 4, !dbg !11114
  %274 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11114
  %275 = load i32, i32* %274, align 4, !dbg !11114
  %276 = shl i32 %275, 6, !dbg !11114
  %277 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11114
  %278 = load i32, i32* %277, align 4, !dbg !11114
  %279 = shl i32 %278, 24, !dbg !11114
  %280 = or i32 %273, %269, !dbg !11114
  %281 = or i32 %280, %271, !dbg !11114
  %282 = or i32 %281, %276, !dbg !11114
  %283 = or i32 %282, %279, !dbg !11114
  store volatile i32 %283, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11114
  %284 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11115
  %285 = and i32 %284, -32, !dbg !11115
  %286 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !11115
  %287 = load i32, i32* %286, align 4, !dbg !11115
  %288 = add i32 %287, -1, !dbg !11115
  %289 = or i32 %288, %285, !dbg !11115
  store volatile i32 %289, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11115
  %290 = load i32, i32* %3, align 4, !dbg !11116
  br label %291, !dbg !11118

291:                                              ; preds = %267, %263, %260
  %292 = phi i32 [ %290, %267 ], [ %253, %263 ], [ %253, %260 ], !dbg !11116
  %293 = and i32 %292, 1024, !dbg !11119
  %294 = icmp eq i32 %293, 0, !dbg !11120
  br i1 %294, label %321, label %295, !dbg !11121

295:                                              ; preds = %291
  %296 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !11122
  %297 = load i32, i32* %296, align 4, !dbg !11122
  %298 = icmp eq i32 %297, 536870912, !dbg !11123
  br i1 %298, label %299, label %321, !dbg !11124

299:                                              ; preds = %295
  %300 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11125
  call void @llvm.dbg.value(metadata i32 %300, metadata !10886, metadata !DIExpression(DW_OP_constu, 15, DW_OP_shr, DW_OP_constu, 6, DW_OP_and, DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !10896
  %301 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11127
  %302 = and i32 %301, 1879048192, !dbg !11128
  call void @llvm.dbg.value(metadata i32 %302, metadata !10887, metadata !DIExpression()), !dbg !10896
  %303 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11129
  %304 = load i32, i32* %303, align 4, !dbg !11129
  %305 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11129
  %306 = load i32, i32* %305, align 4, !dbg !11129
  %307 = shl i32 %306, 6, !dbg !11129
  %308 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11129
  %309 = load i32, i32* %308, align 4, !dbg !11129
  %310 = shl i32 %309, 15, !dbg !11129
  %311 = add i32 %310, -65536, !dbg !11129
  %312 = and i32 %311, -65536, !dbg !11129
  %313 = shl i32 %300, 9, !dbg !11129
  %314 = and i32 %313, 100663296, !dbg !11129
  %315 = add nuw nsw i32 %314, 33554432, !dbg !11129
  %316 = or i32 %302, %304, !dbg !11129
  %317 = or i32 %316, %315, !dbg !11129
  %318 = or i32 %317, %307, !dbg !11129
  %319 = or i32 %318, %312, !dbg !11129
  store volatile i32 %319, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11129
  %320 = load i32, i32* %3, align 4, !dbg !11130
  br label %321, !dbg !11132

321:                                              ; preds = %299, %295, %291
  %322 = phi i32 [ %320, %299 ], [ %292, %295 ], [ %292, %291 ], !dbg !11130
  %323 = and i32 %322, 2048, !dbg !11133
  %324 = icmp eq i32 %323, 0, !dbg !11134
  br i1 %324, label %346, label %325, !dbg !11135

325:                                              ; preds = %321
  %326 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11136
  %327 = load i32, i32* %326, align 4, !dbg !11136
  %328 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11136
  %329 = load i32, i32* %328, align 4, !dbg !11136
  %330 = shl i32 %329, 6, !dbg !11136
  %331 = or i32 %330, %327, !dbg !11136
  %332 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11136
  %333 = load i32, i32* %332, align 4, !dbg !11136
  %334 = shl i32 %333, 15, !dbg !11136
  %335 = add i32 %334, -65536, !dbg !11136
  %336 = and i32 %335, -65536, !dbg !11136
  %337 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11136
  %338 = load i32, i32* %337, align 4, !dbg !11136
  %339 = shl i32 %338, 24, !dbg !11136
  %340 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11136
  %341 = load i32, i32* %340, align 4, !dbg !11136
  %342 = shl i32 %341, 28, !dbg !11136
  %343 = or i32 %331, %339, !dbg !11136
  %344 = or i32 %343, %336, !dbg !11136
  %345 = or i32 %344, %342, !dbg !11136
  store volatile i32 %345, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11136
  br label %346, !dbg !11138

346:                                              ; preds = %325, %321
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11139
  %347 = tail call i32 @HAL_GetTick() #27, !dbg !11140
  call void @llvm.dbg.value(metadata i32 %347, metadata !10883, metadata !DIExpression()), !dbg !10896
  br label %348, !dbg !11141

348:                                              ; preds = %352, %346
  %349 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11142
  %350 = and i32 %349, 134217728, !dbg !11143
  %351 = icmp eq i32 %350, 0, !dbg !11143
  br i1 %351, label %352, label %356, !dbg !11141

352:                                              ; preds = %348
  %353 = tail call i32 @HAL_GetTick() #27, !dbg !11144
  %354 = sub i32 %353, %347, !dbg !11147
  %355 = icmp ugt i32 %354, 2, !dbg !11148
  br i1 %355, label %439, label %348, !dbg !11149, !llvm.loop !11150

356:                                              ; preds = %348, %206
  %357 = icmp eq i32 %178, 1, !dbg !11152
  br i1 %357, label %358, label %439, !dbg !11154

358:                                              ; preds = %356
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11155
  %359 = tail call i32 @HAL_GetTick() #27, !dbg !11157
  call void @llvm.dbg.value(metadata i32 %359, metadata !10883, metadata !DIExpression()), !dbg !10896
  br label %360, !dbg !11158

360:                                              ; preds = %364, %358
  %361 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11159
  %362 = and i32 %361, 536870912, !dbg !11159
  %363 = icmp eq i32 %362, 0, !dbg !11159
  br i1 %363, label %368, label %364, !dbg !11158

364:                                              ; preds = %360
  %365 = tail call i32 @HAL_GetTick() #27, !dbg !11160
  %366 = sub i32 %365, %359, !dbg !11163
  %367 = icmp ugt i32 %366, 2, !dbg !11164
  br i1 %367, label %439, label %360, !dbg !11165, !llvm.loop !11166

368:                                              ; preds = %360
  %369 = load i32, i32* %3, align 4, !dbg !11168
  %370 = and i32 %369, 4, !dbg !11170
  %371 = icmp eq i32 %370, 0, !dbg !11171
  br i1 %371, label %376, label %372, !dbg !11172

372:                                              ; preds = %368
  %373 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11173
  %374 = load i32, i32* %373, align 4, !dbg !11173
  %375 = icmp eq i32 %374, 0, !dbg !11174
  br i1 %375, label %383, label %376, !dbg !11175

376:                                              ; preds = %372, %368
  %377 = and i32 %369, 8, !dbg !11176
  %378 = icmp eq i32 %377, 0, !dbg !11177
  br i1 %378, label %405, label %379, !dbg !11178

379:                                              ; preds = %376
  %380 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11179
  %381 = load i32, i32* %380, align 4, !dbg !11179
  %382 = icmp eq i32 %381, 0, !dbg !11180
  br i1 %382, label %383, label %405, !dbg !11181

383:                                              ; preds = %379, %372
  %384 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11182
  %385 = and i32 %384, 196608, !dbg !11184
  call void @llvm.dbg.value(metadata i32 %385, metadata !10888, metadata !DIExpression(DW_OP_plus_uconst, 2, DW_OP_stack_value)), !dbg !10896
  %386 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11185
  %387 = load i32, i32* %386, align 4, !dbg !11185
  %388 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11185
  %389 = load i32, i32* %388, align 4, !dbg !11185
  %390 = shl i32 %389, 6, !dbg !11185
  %391 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !11185
  %392 = load i32, i32* %391, align 4, !dbg !11185
  %393 = shl i32 %392, 24, !dbg !11185
  %394 = or i32 %385, %387, !dbg !11185
  %395 = or i32 %394, %390, !dbg !11185
  %396 = or i32 %395, %393, !dbg !11185
  store volatile i32 %396, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11185
  %397 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11186
  %398 = and i32 %397, -7937, !dbg !11186
  %399 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !11186
  %400 = load i32, i32* %399, align 4, !dbg !11186
  %401 = shl i32 %400, 8, !dbg !11186
  %402 = add i32 %401, -256, !dbg !11186
  %403 = or i32 %402, %398, !dbg !11186
  store volatile i32 %403, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11186
  %404 = load i32, i32* %3, align 4, !dbg !11187
  br label %405, !dbg !11189

405:                                              ; preds = %383, %379, %376
  %406 = phi i32 [ %404, %383 ], [ %369, %379 ], [ %369, %376 ], !dbg !11187
  %407 = and i32 %406, 256, !dbg !11190
  %408 = icmp eq i32 %407, 0, !dbg !11191
  br i1 %408, label %429, label %409, !dbg !11192

409:                                              ; preds = %405
  %410 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !11193
  %411 = load i32, i32* %410, align 4, !dbg !11193
  %412 = icmp eq i32 %411, 134217728, !dbg !11194
  br i1 %412, label %413, label %429, !dbg !11195

413:                                              ; preds = %409
  %414 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11196
  %415 = and i32 %414, 251658240, !dbg !11198
  call void @llvm.dbg.value(metadata i32 %415, metadata !10889, metadata !DIExpression()), !dbg !10896
  %416 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11199
  %417 = load i32, i32* %416, align 4, !dbg !11199
  %418 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11199
  %419 = load i32, i32* %418, align 4, !dbg !11199
  %420 = shl i32 %419, 6, !dbg !11199
  %421 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !11199
  %422 = load i32, i32* %421, align 4, !dbg !11199
  %423 = shl i32 %422, 15, !dbg !11199
  %424 = add i32 %423, -65536, !dbg !11199
  %425 = and i32 %424, -65536, !dbg !11199
  %426 = or i32 %415, %417, !dbg !11199
  %427 = or i32 %426, %420, !dbg !11199
  %428 = or i32 %427, %425, !dbg !11199
  store volatile i32 %428, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11199
  br label %429, !dbg !11200

429:                                              ; preds = %413, %409, %405
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11201
  %430 = tail call i32 @HAL_GetTick() #27, !dbg !11202
  call void @llvm.dbg.value(metadata i32 %430, metadata !10883, metadata !DIExpression()), !dbg !10896
  br label %431, !dbg !11203

431:                                              ; preds = %435, %429
  %432 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11204
  %433 = and i32 %432, 536870912, !dbg !11205
  %434 = icmp eq i32 %433, 0, !dbg !11205
  br i1 %434, label %435, label %439, !dbg !11203

435:                                              ; preds = %431
  %436 = tail call i32 @HAL_GetTick() #27, !dbg !11206
  %437 = sub i32 %436, %430, !dbg !11209
  %438 = icmp ugt i32 %437, 2, !dbg !11210
  br i1 %438, label %439, label %431, !dbg !11211, !llvm.loop !11212

439:                                              ; preds = %87, %112, %215, %352, %364, %431, %435, %356
  %440 = phi i32 [ 0, %356 ], [ 0, %431 ], [ 3, %435 ], [ 3, %364 ], [ 3, %352 ], [ 3, %215 ], [ 3, %112 ], [ 3, %87 ], !dbg !10896
  ret i32 %440, !dbg !11214
}

; Function Attrs: optsize
declare !dbg !11215 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCCEx_GetPeriphCLKConfig(%struct.RCC_PeriphCLKInitTypeDef* noundef writeonly %0) local_unnamed_addr #16 !dbg !11217 {
  call void @llvm.dbg.value(metadata %struct.RCC_PeriphCLKInitTypeDef* %0, metadata !11221, metadata !DIExpression()), !dbg !11223
  %2 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 0, !dbg !11224
  store i32 2047, i32* %2, align 4, !dbg !11225
  %3 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11226
  %4 = and i32 %3, 63, !dbg !11227
  %5 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 0, !dbg !11228
  store i32 %4, i32* %5, align 4, !dbg !11229
  %6 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11230
  %7 = lshr i32 %6, 6, !dbg !11231
  %8 = and i32 %7, 511, !dbg !11231
  %9 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 1, !dbg !11232
  store i32 %8, i32* %9, align 4, !dbg !11233
  %10 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11234
  %11 = lshr i32 %10, 15, !dbg !11235
  %12 = and i32 %11, 6, !dbg !11235
  %13 = add nuw nsw i32 %12, 2, !dbg !11235
  %14 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 2, !dbg !11236
  store i32 %13, i32* %14, align 4, !dbg !11237
  %15 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11238
  %16 = lshr i32 %15, 24, !dbg !11239
  %17 = and i32 %16, 15, !dbg !11239
  %18 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 3, !dbg !11240
  store i32 %17, i32* %18, align 4, !dbg !11241
  %19 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11242
  %20 = lshr i32 %19, 28, !dbg !11243
  %21 = and i32 %20, 7, !dbg !11243
  %22 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 1, i32 4, !dbg !11244
  store i32 %21, i32* %22, align 4, !dbg !11245
  %23 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11246
  %24 = and i32 %23, 63, !dbg !11247
  %25 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 0, !dbg !11248
  store i32 %24, i32* %25, align 4, !dbg !11249
  %26 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11250
  %27 = lshr i32 %26, 6, !dbg !11251
  %28 = and i32 %27, 511, !dbg !11251
  %29 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 1, !dbg !11252
  store i32 %28, i32* %29, align 4, !dbg !11253
  %30 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11254
  %31 = lshr i32 %30, 15, !dbg !11255
  %32 = and i32 %31, 6, !dbg !11255
  %33 = add nuw nsw i32 %32, 2, !dbg !11255
  %34 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 2, !dbg !11256
  store i32 %33, i32* %34, align 4, !dbg !11257
  %35 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11258
  %36 = lshr i32 %35, 24, !dbg !11259
  %37 = and i32 %36, 15, !dbg !11259
  %38 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 2, i32 3, !dbg !11260
  store i32 %37, i32* %38, align 4, !dbg !11261
  %39 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11262
  %40 = and i32 %39, 31, !dbg !11263
  %41 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 3, !dbg !11264
  store i32 %40, i32* %41, align 4, !dbg !11265
  %42 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11266
  %43 = lshr i32 %42, 8, !dbg !11267
  %44 = and i32 %43, 31, !dbg !11267
  %45 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 4, !dbg !11268
  store i32 %44, i32* %45, align 4, !dbg !11269
  %46 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11270
  %47 = and i32 %46, 3145728, !dbg !11270
  %48 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 5, !dbg !11271
  store i32 %47, i32* %48, align 4, !dbg !11272
  %49 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11273
  %50 = and i32 %49, 12582912, !dbg !11273
  %51 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 6, !dbg !11274
  store i32 %50, i32* %51, align 4, !dbg !11275
  %52 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11276
  %53 = and i32 %52, 100663296, !dbg !11276
  %54 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 7, !dbg !11277
  store i32 %53, i32* %54, align 4, !dbg !11278
  %55 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11279
  %56 = and i32 %55, 402653184, !dbg !11279
  %57 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 8, !dbg !11280
  store i32 %56, i32* %57, align 4, !dbg !11281
  %58 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11282
  %59 = and i32 %58, 2031616, !dbg !11283
  call void @llvm.dbg.value(metadata i32 %59, metadata !11222, metadata !DIExpression()), !dbg !11223
  %60 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11284
  %61 = and i32 %60, 768, !dbg !11285
  %62 = or i32 %61, %59, !dbg !11286
  %63 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 9, !dbg !11287
  store i32 %62, i32* %63, align 4, !dbg !11288
  %64 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11289
  %65 = and i32 %64, 67108864, !dbg !11289
  %66 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 11, !dbg !11290
  store i32 %65, i32* %66, align 4, !dbg !11291
  %67 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11292
  %68 = and i32 %67, 12582912, !dbg !11292
  %69 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 12, !dbg !11293
  store i32 %68, i32* %69, align 4, !dbg !11294
  %70 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11295
  %71 = and i32 %70, 134217728, !dbg !11295
  %72 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 14, !dbg !11296
  store i32 %71, i32* %72, align 4, !dbg !11297
  %73 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11298
  %74 = and i32 %73, 268435456, !dbg !11298
  %75 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 10, !dbg !11299
  store i32 %74, i32* %75, align 4, !dbg !11300
  %76 = load volatile i32, i32* inttoptr (i32 1073887380 to i32*), align 4, !dbg !11301
  %77 = and i32 %76, 536870912, !dbg !11301
  %78 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 13, !dbg !11302
  store i32 %77, i32* %78, align 4, !dbg !11303
  %79 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11304
  %80 = lshr i32 %79, 24, !dbg !11306
  %81 = trunc i32 %80 to i8, !dbg !11306
  %82 = and i8 %81, 1, !dbg !11306
  %83 = getelementptr inbounds %struct.RCC_PeriphCLKInitTypeDef, %struct.RCC_PeriphCLKInitTypeDef* %0, i32 0, i32 15, !dbg !11307
  store i8 %82, i8* %83, align 4, !dbg !11309
  ret void, !dbg !11310
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCCEx_GetPeriphCLKFreq(i32 noundef %0) local_unnamed_addr #16 !dbg !11311 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11313, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 0, metadata !11314, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 0, metadata !11315, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 0, metadata !11316, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 0, metadata !11317, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 0, metadata !11318, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 0, metadata !11319, metadata !DIExpression()), !dbg !11320
  switch i32 %0, label %123 [
    i32 4, label %2
    i32 8, label %2
    i32 1, label %57
    i32 2, label %90
  ], !dbg !11321

2:                                                ; preds = %1, %1
  %3 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11322
  call void @llvm.dbg.value(metadata i32 %3, metadata !11317, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 %3, metadata !11317, metadata !DIExpression(DW_OP_constu, 15728640, DW_OP_and, DW_OP_stack_value)), !dbg !11320
  %4 = lshr i32 %3, 20, !dbg !11325
  %5 = and i32 %4, 15, !dbg !11325
  switch i32 %5, label %123 [
    i32 0, label %6
    i32 1, label %24
    i32 4, label %24
    i32 2, label %41
    i32 8, label %41
    i32 3, label %54
    i32 12, label %55
  ], !dbg !11325

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11326
  call void @llvm.dbg.value(metadata i32 undef, metadata !11316, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 undef, metadata !11316, metadata !DIExpression()), !dbg !11320
  %8 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11330
  %9 = and i32 %8, 63, !dbg !11330
  %10 = udiv i32 16000000, %9, !dbg !11330
  call void @llvm.dbg.value(metadata i32 %10, metadata !11316, metadata !DIExpression()), !dbg !11320
  %11 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11331
  %12 = lshr i32 %11, 24, !dbg !11332
  %13 = and i32 %12, 15, !dbg !11332
  call void @llvm.dbg.value(metadata i32 %13, metadata !11314, metadata !DIExpression()), !dbg !11320
  %14 = load volatile i32, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11333
  %15 = lshr i32 %14, 6, !dbg !11334
  %16 = and i32 %15, 511, !dbg !11334
  %17 = mul i32 %16, %10, !dbg !11335
  %18 = udiv i32 %17, %13, !dbg !11336
  call void @llvm.dbg.value(metadata i32 %18, metadata !11315, metadata !DIExpression()), !dbg !11320
  %19 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11337
  %20 = lshr i32 %19, 8, !dbg !11338
  %21 = and i32 %20, 31, !dbg !11338
  %22 = add nuw nsw i32 %21, 1, !dbg !11339
  call void @llvm.dbg.value(metadata i32 %22, metadata !11314, metadata !DIExpression()), !dbg !11320
  %23 = udiv i32 %18, %22, !dbg !11340
  call void @llvm.dbg.value(metadata i32 %23, metadata !11315, metadata !DIExpression()), !dbg !11320
  br label %123, !dbg !11341

24:                                               ; preds = %2, %2
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11342
  call void @llvm.dbg.value(metadata i32 undef, metadata !11316, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 undef, metadata !11316, metadata !DIExpression()), !dbg !11320
  %26 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11345
  %27 = and i32 %26, 63, !dbg !11345
  %28 = udiv i32 16000000, %27, !dbg !11345
  call void @llvm.dbg.value(metadata i32 %28, metadata !11316, metadata !DIExpression()), !dbg !11320
  %29 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11346
  %30 = lshr i32 %29, 24, !dbg !11347
  %31 = and i32 %30, 15, !dbg !11347
  call void @llvm.dbg.value(metadata i32 %31, metadata !11314, metadata !DIExpression()), !dbg !11320
  %32 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11348
  %33 = lshr i32 %32, 6, !dbg !11349
  %34 = and i32 %33, 511, !dbg !11349
  %35 = mul i32 %34, %28, !dbg !11350
  %36 = udiv i32 %35, %31, !dbg !11351
  call void @llvm.dbg.value(metadata i32 %36, metadata !11315, metadata !DIExpression()), !dbg !11320
  %37 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11352
  %38 = and i32 %37, 31, !dbg !11353
  %39 = add nuw nsw i32 %38, 1, !dbg !11354
  call void @llvm.dbg.value(metadata i32 %39, metadata !11314, metadata !DIExpression()), !dbg !11320
  %40 = udiv i32 %36, %39, !dbg !11355
  call void @llvm.dbg.value(metadata i32 %40, metadata !11315, metadata !DIExpression()), !dbg !11320
  br label %123, !dbg !11356

41:                                               ; preds = %2, %2
  %42 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11357
  call void @llvm.dbg.value(metadata i32 undef, metadata !11316, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 undef, metadata !11316, metadata !DIExpression()), !dbg !11320
  %43 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11360
  %44 = and i32 %43, 63, !dbg !11360
  %45 = udiv i32 16000000, %44, !dbg !11360
  call void @llvm.dbg.value(metadata i32 %45, metadata !11316, metadata !DIExpression()), !dbg !11320
  %46 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11361
  %47 = lshr i32 %46, 28, !dbg !11362
  %48 = and i32 %47, 7, !dbg !11362
  call void @llvm.dbg.value(metadata i32 %48, metadata !11314, metadata !DIExpression()), !dbg !11320
  %49 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11363
  %50 = lshr i32 %49, 6, !dbg !11364
  %51 = and i32 %50, 511, !dbg !11364
  %52 = mul i32 %51, %45, !dbg !11365
  %53 = udiv i32 %52, %48, !dbg !11366
  call void @llvm.dbg.value(metadata i32 %53, metadata !11315, metadata !DIExpression()), !dbg !11320
  br label %123, !dbg !11367

54:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 12288000, metadata !11315, metadata !DIExpression()), !dbg !11320
  br label %123, !dbg !11368

55:                                               ; preds = %2
  %56 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11370
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11315, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11315, metadata !DIExpression()), !dbg !11320
  br label %123

57:                                               ; preds = %1
  %58 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11373
  call void @llvm.dbg.value(metadata i32 %58, metadata !11318, metadata !DIExpression(DW_OP_constu, 100663296, DW_OP_and, DW_OP_stack_value)), !dbg !11320
  %59 = lshr i32 %58, 25, !dbg !11375
  %60 = and i32 %59, 3, !dbg !11375
  switch i32 %60, label %89 [
    i32 1, label %123
    i32 0, label %61
    i32 2, label %74
    i32 3, label %87
  ], !dbg !11375

61:                                               ; preds = %57
  %62 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11376
  call void @llvm.dbg.value(metadata i32 undef, metadata !11316, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 undef, metadata !11316, metadata !DIExpression()), !dbg !11320
  %63 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11380
  %64 = and i32 %63, 63, !dbg !11380
  %65 = udiv i32 16000000, %64, !dbg !11380
  call void @llvm.dbg.value(metadata i32 %65, metadata !11316, metadata !DIExpression()), !dbg !11320
  %66 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11381
  %67 = lshr i32 %66, 6, !dbg !11382
  %68 = and i32 %67, 511, !dbg !11382
  %69 = mul i32 %68, %65, !dbg !11383
  call void @llvm.dbg.value(metadata i32 %69, metadata !11319, metadata !DIExpression()), !dbg !11320
  %70 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11384
  %71 = lshr i32 %70, 28, !dbg !11385
  %72 = and i32 %71, 7, !dbg !11385
  %73 = udiv i32 %69, %72, !dbg !11386
  call void @llvm.dbg.value(metadata i32 %73, metadata !11315, metadata !DIExpression()), !dbg !11320
  br label %123, !dbg !11387

74:                                               ; preds = %57
  %75 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11388
  call void @llvm.dbg.value(metadata i32 undef, metadata !11316, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 undef, metadata !11316, metadata !DIExpression()), !dbg !11320
  %76 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11391
  %77 = and i32 %76, 63, !dbg !11391
  %78 = udiv i32 16000000, %77, !dbg !11391
  call void @llvm.dbg.value(metadata i32 %78, metadata !11316, metadata !DIExpression()), !dbg !11320
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11392
  %80 = lshr i32 %79, 6, !dbg !11393
  %81 = and i32 %80, 511, !dbg !11393
  %82 = mul i32 %81, %78, !dbg !11394
  call void @llvm.dbg.value(metadata i32 %82, metadata !11319, metadata !DIExpression()), !dbg !11320
  %83 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11395
  %84 = lshr i32 %83, 28, !dbg !11396
  %85 = and i32 %84, 7, !dbg !11396
  %86 = udiv i32 %82, %85, !dbg !11397
  call void @llvm.dbg.value(metadata i32 %86, metadata !11315, metadata !DIExpression()), !dbg !11320
  br label %123, !dbg !11398

87:                                               ; preds = %57
  %88 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11399
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11315, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11315, metadata !DIExpression()), !dbg !11320
  br label %123

89:                                               ; preds = %57
  unreachable

90:                                               ; preds = %1
  %91 = load volatile i32, i32* inttoptr (i32 1073887372 to i32*), align 4, !dbg !11402
  call void @llvm.dbg.value(metadata i32 %91, metadata !11318, metadata !DIExpression(DW_OP_constu, 402653184, DW_OP_and, DW_OP_stack_value)), !dbg !11320
  %92 = lshr i32 %91, 27, !dbg !11404
  %93 = and i32 %92, 3, !dbg !11404
  switch i32 %93, label %122 [
    i32 1, label %123
    i32 0, label %94
    i32 2, label %107
    i32 3, label %120
  ], !dbg !11404

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11405
  call void @llvm.dbg.value(metadata i32 undef, metadata !11316, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 undef, metadata !11316, metadata !DIExpression()), !dbg !11320
  %96 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11409
  %97 = and i32 %96, 63, !dbg !11409
  %98 = udiv i32 16000000, %97, !dbg !11409
  call void @llvm.dbg.value(metadata i32 %98, metadata !11316, metadata !DIExpression()), !dbg !11320
  %99 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11410
  %100 = lshr i32 %99, 6, !dbg !11411
  %101 = and i32 %100, 511, !dbg !11411
  %102 = mul i32 %101, %98, !dbg !11412
  call void @llvm.dbg.value(metadata i32 %102, metadata !11319, metadata !DIExpression()), !dbg !11320
  %103 = load volatile i32, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11413
  %104 = lshr i32 %103, 28, !dbg !11414
  %105 = and i32 %104, 7, !dbg !11414
  %106 = udiv i32 %102, %105, !dbg !11415
  call void @llvm.dbg.value(metadata i32 %106, metadata !11315, metadata !DIExpression()), !dbg !11320
  br label %123, !dbg !11416

107:                                              ; preds = %90
  %108 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11417
  call void @llvm.dbg.value(metadata i32 undef, metadata !11316, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 undef, metadata !11316, metadata !DIExpression()), !dbg !11320
  %109 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11420
  %110 = and i32 %109, 63, !dbg !11420
  %111 = udiv i32 16000000, %110, !dbg !11420
  call void @llvm.dbg.value(metadata i32 %111, metadata !11316, metadata !DIExpression()), !dbg !11320
  %112 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11421
  %113 = lshr i32 %112, 6, !dbg !11422
  %114 = and i32 %113, 511, !dbg !11422
  %115 = mul i32 %114, %111, !dbg !11423
  call void @llvm.dbg.value(metadata i32 %115, metadata !11319, metadata !DIExpression()), !dbg !11320
  %116 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11424
  %117 = lshr i32 %116, 28, !dbg !11425
  %118 = and i32 %117, 7, !dbg !11425
  %119 = udiv i32 %115, %118, !dbg !11426
  call void @llvm.dbg.value(metadata i32 %119, metadata !11315, metadata !DIExpression()), !dbg !11320
  br label %123, !dbg !11427

120:                                              ; preds = %90
  %121 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11428
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11315, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.value(metadata i32 16000000, metadata !11315, metadata !DIExpression()), !dbg !11320
  br label %123

122:                                              ; preds = %90
  unreachable

123:                                              ; preds = %120, %90, %87, %57, %55, %94, %107, %61, %74, %6, %24, %41, %54, %2, %1
  %124 = phi i32 [ 0, %1 ], [ %119, %107 ], [ %106, %94 ], [ %86, %74 ], [ %73, %61 ], [ 0, %2 ], [ 12288000, %54 ], [ %53, %41 ], [ %40, %24 ], [ %23, %6 ], [ 16000000, %55 ], [ 12288000, %57 ], [ 16000000, %87 ], [ 12288000, %90 ], [ 16000000, %120 ], !dbg !11320
  call void @llvm.dbg.value(metadata i32 %124, metadata !11315, metadata !DIExpression()), !dbg !11320
  ret i32 %124, !dbg !11431
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCCEx_SelectLSEMode(i8 noundef zeroext %0) local_unnamed_addr #15 !dbg !11432 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !11436, metadata !DIExpression()), !dbg !11437
  %2 = icmp eq i8 %0, 1, !dbg !11438
  %3 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11440
  %4 = and i32 %3, -9, !dbg !11441
  %5 = select i1 %2, i32 8, i32 0, !dbg !11441
  %6 = or i32 %4, %5, !dbg !11441
  store volatile i32 %6, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11440
  ret void, !dbg !11442
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLI2S(%struct.RCC_PLLI2SInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11443 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLI2SInitTypeDef* %0, metadata !11448, metadata !DIExpression()), !dbg !11450
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11451
  %2 = tail call i32 @HAL_GetTick() #27, !dbg !11452
  call void @llvm.dbg.value(metadata i32 %2, metadata !11449, metadata !DIExpression()), !dbg !11450
  br label %3, !dbg !11453

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11454
  %5 = and i32 %4, 134217728, !dbg !11454
  %6 = icmp eq i32 %5, 0, !dbg !11454
  br i1 %6, label %11, label %7, !dbg !11453

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #27, !dbg !11455
  %9 = sub i32 %8, %2, !dbg !11458
  %10 = icmp ugt i32 %9, 2, !dbg !11459
  br i1 %10, label %41, label %3, !dbg !11460, !llvm.loop !11461

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 0, !dbg !11463
  %13 = load i32, i32* %12, align 4, !dbg !11463
  %14 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 1, !dbg !11463
  %15 = load i32, i32* %14, align 4, !dbg !11463
  %16 = shl i32 %15, 6, !dbg !11463
  %17 = or i32 %16, %13, !dbg !11463
  %18 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 2, !dbg !11463
  %19 = load i32, i32* %18, align 4, !dbg !11463
  %20 = shl i32 %19, 15, !dbg !11463
  %21 = add i32 %20, -65536, !dbg !11463
  %22 = and i32 %21, -65536, !dbg !11463
  %23 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 3, !dbg !11463
  %24 = load i32, i32* %23, align 4, !dbg !11463
  %25 = shl i32 %24, 24, !dbg !11463
  %26 = getelementptr inbounds %struct.RCC_PLLI2SInitTypeDef, %struct.RCC_PLLI2SInitTypeDef* %0, i32 0, i32 4, !dbg !11463
  %27 = load i32, i32* %26, align 4, !dbg !11463
  %28 = shl i32 %27, 28, !dbg !11463
  %29 = or i32 %17, %25, !dbg !11463
  %30 = or i32 %29, %22, !dbg !11463
  %31 = or i32 %30, %28, !dbg !11463
  store volatile i32 %31, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11463
  store volatile i32 1, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11464
  %32 = tail call i32 @HAL_GetTick() #27, !dbg !11465
  call void @llvm.dbg.value(metadata i32 %32, metadata !11449, metadata !DIExpression()), !dbg !11450
  br label %33, !dbg !11466

33:                                               ; preds = %37, %11
  %34 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11467
  %35 = and i32 %34, 134217728, !dbg !11468
  %36 = icmp eq i32 %35, 0, !dbg !11468
  br i1 %36, label %37, label %41, !dbg !11466

37:                                               ; preds = %33
  %38 = tail call i32 @HAL_GetTick() #27, !dbg !11469
  %39 = sub i32 %38, %32, !dbg !11472
  %40 = icmp ugt i32 %39, 2, !dbg !11473
  br i1 %40, label %41, label %33, !dbg !11474, !llvm.loop !11475

41:                                               ; preds = %7, %33, %37
  %42 = phi i32 [ 0, %33 ], [ 3, %37 ], [ 3, %7 ], !dbg !11450
  ret i32 %42, !dbg !11477
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLI2S() local_unnamed_addr #1 !dbg !11478 {
  store volatile i32 0, i32* inttoptr (i32 1111949416 to i32*), align 8, !dbg !11483
  %1 = tail call i32 @HAL_GetTick() #27, !dbg !11484
  call void @llvm.dbg.value(metadata i32 %1, metadata !11482, metadata !DIExpression()), !dbg !11485
  br label %2, !dbg !11486

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11487
  %4 = and i32 %3, 134217728, !dbg !11487
  %5 = icmp eq i32 %4, 0, !dbg !11488
  br i1 %5, label %10, label %6, !dbg !11486

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #27, !dbg !11489
  %8 = sub i32 %7, %1, !dbg !11492
  %9 = icmp ugt i32 %8, 2, !dbg !11493
  br i1 %9, label %10, label %2, !dbg !11494, !llvm.loop !11495

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !11485
  ret i32 %11, !dbg !11497
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_EnablePLLSAI(%struct.RCC_PLLSAIInitTypeDef* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !11498 {
  call void @llvm.dbg.value(metadata %struct.RCC_PLLSAIInitTypeDef* %0, metadata !11503, metadata !DIExpression()), !dbg !11505
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11506
  %2 = tail call i32 @HAL_GetTick() #27, !dbg !11507
  call void @llvm.dbg.value(metadata i32 %2, metadata !11504, metadata !DIExpression()), !dbg !11505
  br label %3, !dbg !11508

3:                                                ; preds = %7, %1
  %4 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11509
  %5 = and i32 %4, 536870912, !dbg !11509
  %6 = icmp eq i32 %5, 0, !dbg !11509
  br i1 %6, label %11, label %7, !dbg !11508

7:                                                ; preds = %3
  %8 = tail call i32 @HAL_GetTick() #27, !dbg !11510
  %9 = sub i32 %8, %2, !dbg !11513
  %10 = icmp ugt i32 %9, 2, !dbg !11514
  br i1 %10, label %37, label %3, !dbg !11515, !llvm.loop !11516

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 0, !dbg !11518
  %13 = load i32, i32* %12, align 4, !dbg !11518
  %14 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 1, !dbg !11518
  %15 = load i32, i32* %14, align 4, !dbg !11518
  %16 = shl i32 %15, 6, !dbg !11518
  %17 = or i32 %16, %13, !dbg !11518
  %18 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 2, !dbg !11518
  %19 = load i32, i32* %18, align 4, !dbg !11518
  %20 = shl i32 %19, 15, !dbg !11518
  %21 = add i32 %20, -65536, !dbg !11518
  %22 = and i32 %21, -65536, !dbg !11518
  %23 = getelementptr inbounds %struct.RCC_PLLSAIInitTypeDef, %struct.RCC_PLLSAIInitTypeDef* %0, i32 0, i32 3, !dbg !11518
  %24 = load i32, i32* %23, align 4, !dbg !11518
  %25 = shl i32 %24, 24, !dbg !11518
  %26 = or i32 %17, %25, !dbg !11518
  %27 = or i32 %26, %22, !dbg !11518
  store volatile i32 %27, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11518
  store volatile i32 1, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11519
  %28 = tail call i32 @HAL_GetTick() #27, !dbg !11520
  call void @llvm.dbg.value(metadata i32 %28, metadata !11504, metadata !DIExpression()), !dbg !11505
  br label %29, !dbg !11521

29:                                               ; preds = %33, %11
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11522
  %31 = and i32 %30, 536870912, !dbg !11523
  %32 = icmp eq i32 %31, 0, !dbg !11523
  br i1 %32, label %33, label %37, !dbg !11521

33:                                               ; preds = %29
  %34 = tail call i32 @HAL_GetTick() #27, !dbg !11524
  %35 = sub i32 %34, %28, !dbg !11527
  %36 = icmp ugt i32 %35, 2, !dbg !11528
  br i1 %36, label %37, label %29, !dbg !11529, !llvm.loop !11530

37:                                               ; preds = %7, %29, %33
  %38 = phi i32 [ 0, %29 ], [ 3, %33 ], [ 3, %7 ], !dbg !11505
  ret i32 %38, !dbg !11532
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCCEx_DisablePLLSAI() local_unnamed_addr #1 !dbg !11533 {
  store volatile i32 0, i32* inttoptr (i32 1111949424 to i32*), align 16, !dbg !11536
  %1 = tail call i32 @HAL_GetTick() #27, !dbg !11537
  call void @llvm.dbg.value(metadata i32 %1, metadata !11535, metadata !DIExpression()), !dbg !11538
  br label %2, !dbg !11539

2:                                                ; preds = %6, %0
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11540
  %4 = and i32 %3, 536870912, !dbg !11540
  %5 = icmp eq i32 %4, 0, !dbg !11540
  br i1 %5, label %10, label %6, !dbg !11539

6:                                                ; preds = %2
  %7 = tail call i32 @HAL_GetTick() #27, !dbg !11541
  %8 = sub i32 %7, %1, !dbg !11544
  %9 = icmp ugt i32 %8, 2, !dbg !11545
  br i1 %9, label %10, label %2, !dbg !11546, !llvm.loop !11547

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 3, %6 ], [ 0, %2 ], !dbg !11538
  ret i32 %11, !dbg !11549
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #16 !dbg !11550 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11552, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata i32 0, metadata !11553, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata i32 0, metadata !11554, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata i32 0, metadata !11555, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata i32 0, metadata !11556, metadata !DIExpression()), !dbg !11557
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11558
  %2 = lshr i32 %1, 2, !dbg !11559
  %3 = and i32 %2, 3, !dbg !11559
  switch i32 %3, label %37 [
    i32 0, label %38
    i32 1, label %38
    i32 2, label %4
    i32 3, label %21
  ], !dbg !11559

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11560
  %6 = and i32 %5, 63, !dbg !11563
  call void @llvm.dbg.value(metadata i32 %6, metadata !11552, metadata !DIExpression()), !dbg !11557
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11564
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11566
  %9 = lshr i32 %8, 6, !dbg !11566
  %10 = and i32 %9, 511, !dbg !11566
  %11 = zext i32 %10 to i64, !dbg !11566
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11566
  %13 = zext i32 %6 to i64, !dbg !11566
  %14 = udiv i64 %12, %13, !dbg !11566
  %15 = trunc i64 %14 to i32, !dbg !11566
  call void @llvm.dbg.value(metadata i32 %15, metadata !11553, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata i32 %15, metadata !11553, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata i32 %15, metadata !11553, metadata !DIExpression()), !dbg !11557
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11567
  %17 = lshr i32 %16, 15, !dbg !11568
  %18 = and i32 %17, 6, !dbg !11568
  %19 = add nuw nsw i32 %18, 2, !dbg !11568
  call void @llvm.dbg.value(metadata i32 %19, metadata !11554, metadata !DIExpression()), !dbg !11557
  %20 = udiv i32 %15, %19, !dbg !11569
  call void @llvm.dbg.value(metadata i32 %20, metadata !11556, metadata !DIExpression()), !dbg !11557
  br label %38, !dbg !11570

21:                                               ; preds = %0
  %22 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11571
  %23 = and i32 %22, 63, !dbg !11573
  call void @llvm.dbg.value(metadata i32 %23, metadata !11552, metadata !DIExpression()), !dbg !11557
  %24 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11574
  %25 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11576
  %26 = lshr i32 %25, 6, !dbg !11576
  %27 = and i32 %26, 511, !dbg !11576
  %28 = zext i32 %27 to i64, !dbg !11576
  %29 = mul nuw nsw i64 %28, 16000000, !dbg !11576
  %30 = zext i32 %23 to i64, !dbg !11576
  %31 = udiv i64 %29, %30, !dbg !11576
  %32 = trunc i64 %31 to i32, !dbg !11576
  call void @llvm.dbg.value(metadata i32 %32, metadata !11553, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata i32 %32, metadata !11553, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.value(metadata i32 %32, metadata !11553, metadata !DIExpression()), !dbg !11557
  %33 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11577
  %34 = lshr i32 %33, 28, !dbg !11578
  %35 = and i32 %34, 7, !dbg !11578
  call void @llvm.dbg.value(metadata i32 %35, metadata !11555, metadata !DIExpression()), !dbg !11557
  %36 = udiv i32 %32, %35, !dbg !11579
  call void @llvm.dbg.value(metadata i32 %36, metadata !11556, metadata !DIExpression()), !dbg !11557
  br label %38, !dbg !11580

37:                                               ; preds = %0
  unreachable

38:                                               ; preds = %0, %0, %21, %4
  %39 = phi i32 [ %36, %21 ], [ %20, %4 ], [ 16000000, %0 ], [ 16000000, %0 ], !dbg !11581
  call void @llvm.dbg.value(metadata i32 %39, metadata !11556, metadata !DIExpression()), !dbg !11557
  ret i32 %39, !dbg !11582
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11583 {
  %1 = tail call i32 @HAL_GetTick() #27, !dbg !11586
  call void @llvm.dbg.value(metadata i32 %1, metadata !11585, metadata !DIExpression()), !dbg !11587
  %2 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11588
  %3 = or i32 %2, 1, !dbg !11588
  store volatile i32 %3, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11588
  br label %4, !dbg !11589

4:                                                ; preds = %8, %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11590
  %6 = and i32 %5, 2, !dbg !11590
  %7 = icmp eq i32 %6, 0, !dbg !11591
  br i1 %7, label %8, label %12, !dbg !11589

8:                                                ; preds = %4
  %9 = tail call i32 @HAL_GetTick() #27, !dbg !11592
  %10 = sub i32 %9, %1, !dbg !11595
  %11 = icmp ugt i32 %10, 2, !dbg !11596
  br i1 %11, label %89, label %4, !dbg !11597, !llvm.loop !11598

12:                                               ; preds = %4
  %13 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11600
  %14 = or i32 %13, 128, !dbg !11600
  store volatile i32 %14, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11600
  %15 = tail call i32 @HAL_GetTick() #27, !dbg !11601
  call void @llvm.dbg.value(metadata i32 %15, metadata !11585, metadata !DIExpression()), !dbg !11587
  store volatile i32 0, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11602
  br label %16, !dbg !11603

16:                                               ; preds = %21, %12
  %17 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11604
  %18 = and i32 %17, 12, !dbg !11604
  %19 = icmp eq i32 %18, 0, !dbg !11605
  %20 = tail call i32 @HAL_GetTick() #27, !dbg !11587
  br i1 %19, label %24, label %21, !dbg !11603

21:                                               ; preds = %16
  %22 = sub i32 %20, %15, !dbg !11606
  %23 = icmp ugt i32 %22, 5000, !dbg !11609
  br i1 %23, label %89, label %16, !dbg !11610, !llvm.loop !11611

24:                                               ; preds = %16
  call void @llvm.dbg.value(metadata i32 %20, metadata !11585, metadata !DIExpression()), !dbg !11587
  %25 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11613
  %26 = and i32 %25, -851969, !dbg !11613
  store volatile i32 %26, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11613
  br label %27, !dbg !11614

27:                                               ; preds = %32, %24
  %28 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11615
  %29 = and i32 %28, 131072, !dbg !11615
  %30 = icmp eq i32 %29, 0, !dbg !11616
  %31 = tail call i32 @HAL_GetTick() #27, !dbg !11587
  br i1 %30, label %35, label %32, !dbg !11614

32:                                               ; preds = %27
  %33 = sub i32 %31, %20, !dbg !11617
  %34 = icmp ugt i32 %33, 100, !dbg !11620
  br i1 %34, label %89, label %27, !dbg !11621, !llvm.loop !11622

35:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %31, metadata !11585, metadata !DIExpression()), !dbg !11587
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11624
  %37 = and i32 %36, -16777217, !dbg !11624
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11624
  br label %38, !dbg !11625

38:                                               ; preds = %43, %35
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11626
  %40 = and i32 %39, 33554432, !dbg !11626
  %41 = icmp eq i32 %40, 0, !dbg !11627
  %42 = tail call i32 @HAL_GetTick() #27, !dbg !11587
  br i1 %41, label %46, label %43, !dbg !11625

43:                                               ; preds = %38
  %44 = sub i32 %42, %31, !dbg !11628
  %45 = icmp ugt i32 %44, 2, !dbg !11631
  br i1 %45, label %89, label %38, !dbg !11632, !llvm.loop !11633

46:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %42, metadata !11585, metadata !DIExpression()), !dbg !11587
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11635
  %48 = and i32 %47, -67108865, !dbg !11635
  store volatile i32 %48, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11635
  br label %49, !dbg !11636

49:                                               ; preds = %54, %46
  %50 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11637
  %51 = and i32 %50, 134217728, !dbg !11637
  %52 = icmp eq i32 %51, 0, !dbg !11638
  %53 = tail call i32 @HAL_GetTick() #27, !dbg !11587
  br i1 %52, label %57, label %54, !dbg !11636

54:                                               ; preds = %49
  %55 = sub i32 %53, %42, !dbg !11639
  %56 = icmp ugt i32 %55, 2, !dbg !11642
  br i1 %56, label %89, label %49, !dbg !11643, !llvm.loop !11644

57:                                               ; preds = %49
  call void @llvm.dbg.value(metadata i32 %53, metadata !11585, metadata !DIExpression()), !dbg !11587
  %58 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11646
  %59 = and i32 %58, -268435457, !dbg !11646
  store volatile i32 %59, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11646
  br label %60, !dbg !11647

60:                                               ; preds = %64, %57
  %61 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11648
  %62 = and i32 %61, 536870912, !dbg !11648
  %63 = icmp eq i32 %62, 0, !dbg !11649
  br i1 %63, label %68, label %64, !dbg !11647

64:                                               ; preds = %60
  %65 = tail call i32 @HAL_GetTick() #27, !dbg !11650
  %66 = sub i32 %65, %53, !dbg !11653
  %67 = icmp ugt i32 %66, 2, !dbg !11654
  br i1 %67, label %89, label %60, !dbg !11655, !llvm.loop !11656

68:                                               ; preds = %60
  store volatile i32 603992080, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11658
  store volatile i32 603992080, i32* inttoptr (i32 1073887364 to i32*), align 4, !dbg !11659
  store volatile i32 67121168, i32* inttoptr (i32 1073887368 to i32*), align 8, !dbg !11660
  %69 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11661
  %70 = and i32 %69, -7937, !dbg !11661
  store volatile i32 %70, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11661
  %71 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11662
  %72 = and i32 %71, -8193, !dbg !11662
  store volatile i32 %72, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11662
  %73 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11663
  %74 = and i32 %73, -16385, !dbg !11663
  store volatile i32 %74, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11663
  %75 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11664
  %76 = or i32 %75, 10420224, !dbg !11664
  store volatile i32 %76, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11664
  %77 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11665
  %78 = or i32 %77, 2097152, !dbg !11665
  store volatile i32 %78, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11665
  %79 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11666
  %80 = or i32 %79, 4194304, !dbg !11666
  store volatile i32 %80, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11666
  %81 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11667
  %82 = and i32 %81, -2, !dbg !11667
  store volatile i32 %82, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11667
  %83 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11668
  %84 = or i32 %83, 16777216, !dbg !11668
  store volatile i32 %84, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11668
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !11669
  %85 = load i32, i32* @uwTickPrio, align 4, !dbg !11670
  %86 = tail call i32 @HAL_InitTick(i32 noundef %85) #27, !dbg !11672
  %87 = icmp ne i32 %86, 0, !dbg !11673
  %88 = zext i1 %87 to i32, !dbg !11674
  br label %89, !dbg !11674

89:                                               ; preds = %8, %21, %32, %43, %54, %64, %68
  %90 = phi i32 [ %88, %68 ], [ 3, %64 ], [ 3, %54 ], [ 3, %43 ], [ 3, %32 ], [ 3, %21 ], [ 3, %8 ], !dbg !11587
  ret i32 %90, !dbg !11675
}

; Function Attrs: optsize
declare !dbg !11676 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef readonly %0) local_unnamed_addr #1 !dbg !11679 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11705, metadata !DIExpression()), !dbg !11716
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11717
  br i1 %3, label %337, label %4, !dbg !11719

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11720
  %6 = load i32, i32* %5, align 4, !dbg !11720
  %7 = and i32 %6, 1, !dbg !11722
  %8 = icmp eq i32 %7, 0, !dbg !11723
  br i1 %8, label %74, label %9, !dbg !11724

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11725
  %11 = and i32 %10, 12, !dbg !11725
  %12 = icmp eq i32 %11, 4, !dbg !11728
  br i1 %12, label %29, label %13, !dbg !11729

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11730
  %15 = and i32 %14, 12, !dbg !11730
  %16 = icmp eq i32 %15, 8, !dbg !11731
  br i1 %16, label %17, label %21, !dbg !11732

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11733
  %19 = and i32 %18, 4194304, !dbg !11734
  %20 = icmp eq i32 %19, 0, !dbg !11735
  br i1 %20, label %21, label %29, !dbg !11736

21:                                               ; preds = %17, %13
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11737
  %23 = and i32 %22, 12, !dbg !11737
  %24 = icmp eq i32 %23, 12, !dbg !11738
  br i1 %24, label %25, label %37, !dbg !11739

25:                                               ; preds = %21
  %26 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11740
  %27 = and i32 %26, 4194304, !dbg !11741
  %28 = icmp eq i32 %27, 0, !dbg !11742
  br i1 %28, label %37, label %29, !dbg !11743

29:                                               ; preds = %25, %17, %9
  %30 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11744
  %31 = and i32 %30, 131072, !dbg !11744
  %32 = icmp eq i32 %31, 0, !dbg !11744
  br i1 %32, label %74, label %33, !dbg !11747

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11748
  %35 = load i32, i32* %34, align 4, !dbg !11748
  %36 = icmp eq i32 %35, 0, !dbg !11749
  br i1 %36, label %337, label %74, !dbg !11750

37:                                               ; preds = %21, %25
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11751
  %39 = load i32, i32* %38, align 4, !dbg !11751
  switch i32 %39, label %48 [
    i32 65536, label %40
    i32 327680, label %43
  ], !dbg !11755

40:                                               ; preds = %37
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11756
  %42 = or i32 %41, 65536, !dbg !11756
  br label %53, !dbg !11756

43:                                               ; preds = %37
  %44 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11758
  %45 = or i32 %44, 262144, !dbg !11758
  store volatile i32 %45, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11758
  %46 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11758
  %47 = or i32 %46, 65536, !dbg !11758
  br label %53, !dbg !11758

48:                                               ; preds = %37
  %49 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11761
  %50 = and i32 %49, -65537, !dbg !11761
  store volatile i32 %50, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11761
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11761
  %52 = and i32 %51, -262145, !dbg !11761
  br label %53

53:                                               ; preds = %43, %48, %40
  %54 = phi i32 [ %47, %43 ], [ %52, %48 ], [ %42, %40 ]
  store volatile i32 %54, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11763
  %55 = load i32, i32* %38, align 4, !dbg !11764
  %56 = icmp eq i32 %55, 0, !dbg !11766
  %57 = tail call i32 @HAL_GetTick() #27, !dbg !11767
  call void @llvm.dbg.value(metadata i32 %57, metadata !11706, metadata !DIExpression()), !dbg !11716
  call void @llvm.dbg.value(metadata i32 %57, metadata !11706, metadata !DIExpression()), !dbg !11716
  br i1 %56, label %66, label %58, !dbg !11768

58:                                               ; preds = %53, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11769
  %60 = and i32 %59, 131072, !dbg !11771
  %61 = icmp eq i32 %60, 0, !dbg !11771
  br i1 %61, label %62, label %74, !dbg !11772

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !11773
  %64 = sub i32 %63, %57, !dbg !11776
  %65 = icmp ugt i32 %64, 100, !dbg !11777
  br i1 %65, label %337, label %58, !dbg !11778, !llvm.loop !11779

66:                                               ; preds = %53, %70
  %67 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11781
  %68 = and i32 %67, 131072, !dbg !11781
  %69 = icmp eq i32 %68, 0, !dbg !11781
  br i1 %69, label %74, label %70, !dbg !11783

70:                                               ; preds = %66
  %71 = tail call i32 @HAL_GetTick() #27, !dbg !11784
  %72 = sub i32 %71, %57, !dbg !11787
  %73 = icmp ugt i32 %72, 100, !dbg !11788
  br i1 %73, label %337, label %66, !dbg !11789, !llvm.loop !11790

74:                                               ; preds = %58, %66, %33, %29, %4
  %75 = load i32, i32* %5, align 4, !dbg !11792
  %76 = and i32 %75, 2, !dbg !11794
  %77 = icmp eq i32 %76, 0, !dbg !11795
  br i1 %77, label %137, label %78, !dbg !11796

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11797
  %80 = and i32 %79, 12, !dbg !11797
  %81 = icmp eq i32 %80, 0, !dbg !11800
  br i1 %81, label %98, label %82, !dbg !11801

82:                                               ; preds = %78
  %83 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11802
  %84 = and i32 %83, 12, !dbg !11802
  %85 = icmp eq i32 %84, 8, !dbg !11803
  br i1 %85, label %86, label %90, !dbg !11804

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11805
  %88 = and i32 %87, 4194304, !dbg !11806
  %89 = icmp eq i32 %88, 0, !dbg !11807
  br i1 %89, label %98, label %90, !dbg !11808

90:                                               ; preds = %86, %82
  %91 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11809
  %92 = and i32 %91, 12, !dbg !11809
  %93 = icmp eq i32 %92, 12, !dbg !11810
  br i1 %93, label %94, label %106, !dbg !11811

94:                                               ; preds = %90
  %95 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11812
  %96 = and i32 %95, 4194304, !dbg !11813
  %97 = icmp eq i32 %96, 0, !dbg !11814
  br i1 %97, label %98, label %106, !dbg !11815

98:                                               ; preds = %94, %86, %78
  %99 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11816
  %100 = and i32 %99, 2, !dbg !11816
  %101 = icmp eq i32 %100, 0, !dbg !11816
  br i1 %101, label %130, label %102, !dbg !11819

102:                                              ; preds = %98
  %103 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11820
  %104 = load i32, i32* %103, align 4, !dbg !11820
  %105 = icmp eq i32 %104, 1, !dbg !11821
  br i1 %105, label %130, label %337, !dbg !11822

106:                                              ; preds = %94, %90
  %107 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11823
  %108 = load i32, i32* %107, align 4, !dbg !11823
  %109 = icmp eq i32 %108, 0, !dbg !11826
  br i1 %109, label %120, label %110, !dbg !11827

110:                                              ; preds = %106
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11828
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !11830
  call void @llvm.dbg.value(metadata i32 %111, metadata !11706, metadata !DIExpression()), !dbg !11716
  br label %112, !dbg !11831

112:                                              ; preds = %116, %110
  %113 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11832
  %114 = and i32 %113, 2, !dbg !11833
  %115 = icmp eq i32 %114, 0, !dbg !11833
  br i1 %115, label %116, label %130, !dbg !11831

116:                                              ; preds = %112
  %117 = tail call i32 @HAL_GetTick() #27, !dbg !11834
  %118 = sub i32 %117, %111, !dbg !11837
  %119 = icmp ugt i32 %118, 2, !dbg !11838
  br i1 %119, label %337, label %112, !dbg !11839, !llvm.loop !11840

120:                                              ; preds = %106
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11842
  %121 = tail call i32 @HAL_GetTick() #27, !dbg !11844
  call void @llvm.dbg.value(metadata i32 %121, metadata !11706, metadata !DIExpression()), !dbg !11716
  br label %122, !dbg !11845

122:                                              ; preds = %126, %120
  %123 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11846
  %124 = and i32 %123, 2, !dbg !11846
  %125 = icmp eq i32 %124, 0, !dbg !11846
  br i1 %125, label %137, label %126, !dbg !11845

126:                                              ; preds = %122
  %127 = tail call i32 @HAL_GetTick() #27, !dbg !11847
  %128 = sub i32 %127, %121, !dbg !11850
  %129 = icmp ugt i32 %128, 2, !dbg !11851
  br i1 %129, label %337, label %122, !dbg !11852, !llvm.loop !11853

130:                                              ; preds = %112, %98, %102
  %131 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11855
  %132 = and i32 %131, -249, !dbg !11855
  %133 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11855
  %134 = load i32, i32* %133, align 4, !dbg !11855
  %135 = shl i32 %134, 3, !dbg !11855
  %136 = or i32 %135, %132, !dbg !11855
  store volatile i32 %136, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11855
  br label %137, !dbg !11856

137:                                              ; preds = %122, %130, %74
  %138 = load i32, i32* %5, align 4, !dbg !11856
  %139 = and i32 %138, 8, !dbg !11858
  %140 = icmp eq i32 %139, 0, !dbg !11859
  br i1 %140, label %165, label %141, !dbg !11860

141:                                              ; preds = %137
  %142 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11861
  %143 = load i32, i32* %142, align 4, !dbg !11861
  %144 = icmp eq i32 %143, 0, !dbg !11864
  br i1 %144, label %155, label %145, !dbg !11865

145:                                              ; preds = %141
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11866
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !11868
  call void @llvm.dbg.value(metadata i32 %146, metadata !11706, metadata !DIExpression()), !dbg !11716
  br label %147, !dbg !11869

147:                                              ; preds = %151, %145
  %148 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11870
  %149 = and i32 %148, 2, !dbg !11871
  %150 = icmp eq i32 %149, 0, !dbg !11871
  br i1 %150, label %151, label %165, !dbg !11869

151:                                              ; preds = %147
  %152 = tail call i32 @HAL_GetTick() #27, !dbg !11872
  %153 = sub i32 %152, %146, !dbg !11875
  %154 = icmp ugt i32 %153, 2, !dbg !11876
  br i1 %154, label %337, label %147, !dbg !11877, !llvm.loop !11878

155:                                              ; preds = %141
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11880
  %156 = tail call i32 @HAL_GetTick() #27, !dbg !11882
  call void @llvm.dbg.value(metadata i32 %156, metadata !11706, metadata !DIExpression()), !dbg !11716
  br label %157, !dbg !11883

157:                                              ; preds = %161, %155
  %158 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11884
  %159 = and i32 %158, 2, !dbg !11884
  %160 = icmp eq i32 %159, 0, !dbg !11884
  br i1 %160, label %165, label %161, !dbg !11883

161:                                              ; preds = %157
  %162 = tail call i32 @HAL_GetTick() #27, !dbg !11885
  %163 = sub i32 %162, %156, !dbg !11888
  %164 = icmp ugt i32 %163, 2, !dbg !11889
  br i1 %164, label %337, label %157, !dbg !11890, !llvm.loop !11891

165:                                              ; preds = %147, %157, %137
  %166 = load i32, i32* %5, align 4, !dbg !11893
  %167 = and i32 %166, 4, !dbg !11894
  %168 = icmp eq i32 %167, 0, !dbg !11895
  br i1 %168, label %237, label %169, !dbg !11896

169:                                              ; preds = %165
  call void @llvm.dbg.value(metadata i32 0, metadata !11708, metadata !DIExpression()), !dbg !11897
  %170 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11898
  %171 = and i32 %170, 268435456, !dbg !11898
  %172 = icmp eq i32 %171, 0, !dbg !11898
  br i1 %172, label %173, label %180, !dbg !11899

173:                                              ; preds = %169
  %174 = bitcast i32* %2 to i8*, !dbg !11900
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174), !dbg !11900
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11712, metadata !DIExpression()), !dbg !11900
  store volatile i32 0, i32* %2, align 4, !dbg !11900
  %175 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11900
  %176 = or i32 %175, 268435456, !dbg !11900
  store volatile i32 %176, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11900
  %177 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11900
  %178 = and i32 %177, 268435456, !dbg !11900
  store volatile i32 %178, i32* %2, align 4, !dbg !11900
  %179 = load volatile i32, i32* %2, align 4, !dbg !11900
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174), !dbg !11901
  call void @llvm.dbg.value(metadata i32 1, metadata !11708, metadata !DIExpression()), !dbg !11897
  br label %180, !dbg !11902

180:                                              ; preds = %173, %169
  call void @llvm.dbg.value(metadata i32 undef, metadata !11708, metadata !DIExpression()), !dbg !11897
  %181 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11903
  %182 = and i32 %181, 256, !dbg !11903
  %183 = icmp eq i32 %182, 0, !dbg !11903
  br i1 %183, label %184, label %196, !dbg !11905

184:                                              ; preds = %180
  %185 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11906
  %186 = or i32 %185, 256, !dbg !11906
  store volatile i32 %186, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11906
  %187 = tail call i32 @HAL_GetTick() #27, !dbg !11908
  call void @llvm.dbg.value(metadata i32 %187, metadata !11706, metadata !DIExpression()), !dbg !11716
  br label %188, !dbg !11909

188:                                              ; preds = %192, %184
  %189 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11910
  %190 = and i32 %189, 256, !dbg !11910
  %191 = icmp eq i32 %190, 0, !dbg !11910
  br i1 %191, label %192, label %196, !dbg !11909

192:                                              ; preds = %188
  %193 = tail call i32 @HAL_GetTick() #27, !dbg !11911
  %194 = sub i32 %193, %187, !dbg !11914
  %195 = icmp ugt i32 %194, 2, !dbg !11915
  br i1 %195, label %337, label %188, !dbg !11916, !llvm.loop !11917

196:                                              ; preds = %188, %180
  %197 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11919
  %198 = load i32, i32* %197, align 4, !dbg !11919
  switch i32 %198, label %207 [
    i32 1, label %199
    i32 5, label %202
  ], !dbg !11922

199:                                              ; preds = %196
  %200 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11923
  %201 = or i32 %200, 1, !dbg !11923
  br label %212, !dbg !11923

202:                                              ; preds = %196
  %203 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11925
  %204 = or i32 %203, 4, !dbg !11925
  store volatile i32 %204, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11925
  %205 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11925
  %206 = or i32 %205, 1, !dbg !11925
  br label %212, !dbg !11925

207:                                              ; preds = %196
  %208 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11928
  %209 = and i32 %208, -2, !dbg !11928
  store volatile i32 %209, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11928
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11928
  %211 = and i32 %210, -5, !dbg !11928
  br label %212

212:                                              ; preds = %202, %207, %199
  %213 = phi i32 [ %206, %202 ], [ %211, %207 ], [ %201, %199 ]
  store volatile i32 %213, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11930
  %214 = load i32, i32* %197, align 4, !dbg !11931
  %215 = icmp eq i32 %214, 0, !dbg !11933
  %216 = tail call i32 @HAL_GetTick() #27, !dbg !11934
  call void @llvm.dbg.value(metadata i32 %216, metadata !11706, metadata !DIExpression()), !dbg !11716
  call void @llvm.dbg.value(metadata i32 %216, metadata !11706, metadata !DIExpression()), !dbg !11716
  br i1 %215, label %225, label %217, !dbg !11935

217:                                              ; preds = %212, %221
  %218 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11936
  %219 = and i32 %218, 2, !dbg !11938
  %220 = icmp eq i32 %219, 0, !dbg !11938
  br i1 %220, label %221, label %233, !dbg !11939

221:                                              ; preds = %217
  %222 = tail call i32 @HAL_GetTick() #27, !dbg !11940
  %223 = sub i32 %222, %216, !dbg !11943
  %224 = icmp ugt i32 %223, 5000, !dbg !11944
  br i1 %224, label %337, label %217, !dbg !11945, !llvm.loop !11946

225:                                              ; preds = %212, %229
  %226 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11948
  %227 = and i32 %226, 2, !dbg !11948
  %228 = icmp eq i32 %227, 0, !dbg !11948
  br i1 %228, label %233, label %229, !dbg !11950

229:                                              ; preds = %225
  %230 = tail call i32 @HAL_GetTick() #27, !dbg !11951
  %231 = sub i32 %230, %216, !dbg !11954
  %232 = icmp ugt i32 %231, 5000, !dbg !11955
  br i1 %232, label %337, label %225, !dbg !11956, !llvm.loop !11957

233:                                              ; preds = %217, %225
  br i1 %172, label %234, label %237, !dbg !11959

234:                                              ; preds = %233
  %235 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11960
  %236 = and i32 %235, -268435457, !dbg !11960
  store volatile i32 %236, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11960
  br label %237, !dbg !11963

237:                                              ; preds = %234, %233, %165
  %238 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11964
  %239 = load i32, i32* %238, align 4, !dbg !11964
  %240 = icmp eq i32 %239, 0, !dbg !11966
  br i1 %240, label %336, label %241, !dbg !11967

241:                                              ; preds = %237
  %242 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11968
  %243 = and i32 %242, 12, !dbg !11968
  %244 = icmp eq i32 %243, 8, !dbg !11971
  br i1 %244, label %297, label %245, !dbg !11972

245:                                              ; preds = %241
  %246 = icmp eq i32 %239, 2, !dbg !11973
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11976
  %247 = tail call i32 @HAL_GetTick() #27, !dbg !11976
  call void @llvm.dbg.value(metadata i32 %247, metadata !11706, metadata !DIExpression()), !dbg !11716
  call void @llvm.dbg.value(metadata i32 %247, metadata !11706, metadata !DIExpression()), !dbg !11716
  br i1 %246, label %248, label %289, !dbg !11977

248:                                              ; preds = %245, %252
  %249 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11978
  %250 = and i32 %249, 33554432, !dbg !11978
  %251 = icmp eq i32 %250, 0, !dbg !11978
  br i1 %251, label %256, label %252, !dbg !11980

252:                                              ; preds = %248
  %253 = tail call i32 @HAL_GetTick() #27, !dbg !11981
  %254 = sub i32 %253, %247, !dbg !11984
  %255 = icmp ugt i32 %254, 2, !dbg !11985
  br i1 %255, label %337, label %248, !dbg !11986, !llvm.loop !11987

256:                                              ; preds = %248
  %257 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11989
  %258 = load i32, i32* %257, align 4, !dbg !11989
  %259 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11989
  %260 = load i32, i32* %259, align 4, !dbg !11989
  %261 = or i32 %260, %258, !dbg !11989
  %262 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11989
  %263 = load i32, i32* %262, align 4, !dbg !11989
  %264 = shl i32 %263, 6, !dbg !11989
  %265 = or i32 %261, %264, !dbg !11989
  %266 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11989
  %267 = load i32, i32* %266, align 4, !dbg !11989
  %268 = shl i32 %267, 15, !dbg !11989
  %269 = add i32 %268, -65536, !dbg !11989
  %270 = and i32 %269, -65536, !dbg !11989
  %271 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11989
  %272 = load i32, i32* %271, align 4, !dbg !11989
  %273 = shl i32 %272, 24, !dbg !11989
  %274 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !11989
  %275 = load i32, i32* %274, align 4, !dbg !11989
  %276 = shl i32 %275, 28, !dbg !11989
  %277 = or i32 %265, %273, !dbg !11989
  %278 = or i32 %277, %270, !dbg !11989
  %279 = or i32 %278, %276, !dbg !11989
  store volatile i32 %279, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11989
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11990
  %280 = tail call i32 @HAL_GetTick() #27, !dbg !11991
  call void @llvm.dbg.value(metadata i32 %280, metadata !11706, metadata !DIExpression()), !dbg !11716
  br label %281, !dbg !11992

281:                                              ; preds = %285, %256
  %282 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11993
  %283 = and i32 %282, 33554432, !dbg !11994
  %284 = icmp eq i32 %283, 0, !dbg !11994
  br i1 %284, label %285, label %336, !dbg !11992

285:                                              ; preds = %281
  %286 = tail call i32 @HAL_GetTick() #27, !dbg !11995
  %287 = sub i32 %286, %280, !dbg !11998
  %288 = icmp ugt i32 %287, 2, !dbg !11999
  br i1 %288, label %337, label %281, !dbg !12000, !llvm.loop !12001

289:                                              ; preds = %245, %293
  %290 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12003
  %291 = and i32 %290, 33554432, !dbg !12003
  %292 = icmp eq i32 %291, 0, !dbg !12003
  br i1 %292, label %336, label %293, !dbg !12005

293:                                              ; preds = %289
  %294 = tail call i32 @HAL_GetTick() #27, !dbg !12006
  %295 = sub i32 %294, %247, !dbg !12009
  %296 = icmp ugt i32 %295, 2, !dbg !12010
  br i1 %296, label %337, label %289, !dbg !12011, !llvm.loop !12012

297:                                              ; preds = %241
  %298 = icmp eq i32 %239, 1, !dbg !12014
  br i1 %298, label %337, label %299, !dbg !12017

299:                                              ; preds = %297
  %300 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12018
  call void @llvm.dbg.value(metadata i32 %300, metadata !11707, metadata !DIExpression()), !dbg !11716
  %301 = and i32 %300, 4194304, !dbg !12020
  %302 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12022
  %303 = load i32, i32* %302, align 4, !dbg !12022
  %304 = icmp eq i32 %301, %303, !dbg !12023
  br i1 %304, label %305, label %337, !dbg !12024

305:                                              ; preds = %299
  %306 = and i32 %300, 63, !dbg !12025
  %307 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12026
  %308 = load i32, i32* %307, align 4, !dbg !12026
  %309 = icmp eq i32 %306, %308, !dbg !12027
  br i1 %309, label %310, label %337, !dbg !12028

310:                                              ; preds = %305
  %311 = and i32 %300, 32704, !dbg !12029
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12030
  %313 = load i32, i32* %312, align 4, !dbg !12030
  %314 = shl i32 %313, 6, !dbg !12031
  %315 = icmp eq i32 %311, %314, !dbg !12032
  br i1 %315, label %316, label %337, !dbg !12033

316:                                              ; preds = %310
  %317 = and i32 %300, 196608, !dbg !12034
  %318 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12035
  %319 = load i32, i32* %318, align 4, !dbg !12035
  %320 = shl i32 %319, 15, !dbg !12036
  %321 = add i32 %320, -65536, !dbg !12036
  %322 = and i32 %321, -65536, !dbg !12036
  %323 = icmp eq i32 %317, %322, !dbg !12037
  br i1 %323, label %324, label %337, !dbg !12038

324:                                              ; preds = %316
  %325 = and i32 %300, 251658240, !dbg !12039
  %326 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12040
  %327 = load i32, i32* %326, align 4, !dbg !12040
  %328 = shl i32 %327, 24, !dbg !12041
  %329 = icmp eq i32 %325, %328, !dbg !12042
  br i1 %329, label %330, label %337, !dbg !12043

330:                                              ; preds = %324
  %331 = and i32 %300, 1879048192, !dbg !12044
  %332 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12045
  %333 = load i32, i32* %332, align 4, !dbg !12045
  %334 = shl i32 %333, 28, !dbg !12046
  %335 = icmp eq i32 %331, %334, !dbg !12047
  br i1 %335, label %336, label %337, !dbg !12048

336:                                              ; preds = %289, %281, %330, %237
  br label %337, !dbg !12049

337:                                              ; preds = %62, %70, %116, %126, %151, %161, %192, %221, %229, %293, %252, %285, %299, %305, %310, %316, %324, %330, %297, %102, %33, %1, %336
  %338 = phi i32 [ 0, %336 ], [ 1, %1 ], [ 1, %33 ], [ 1, %102 ], [ 1, %297 ], [ 1, %330 ], [ 1, %324 ], [ 1, %316 ], [ 1, %310 ], [ 1, %305 ], [ 1, %299 ], [ 3, %285 ], [ 3, %252 ], [ 3, %293 ], [ 3, %229 ], [ 3, %221 ], [ 3, %192 ], [ 3, %161 ], [ 3, %151 ], [ 3, %126 ], [ 3, %116 ], [ 3, %70 ], [ 3, %62 ], !dbg !11716
  ret i32 %338, !dbg !12050
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* nocapture noundef writeonly %0) local_unnamed_addr #16 !dbg !12051 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !12055, metadata !DIExpression()), !dbg !12056
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !12057
  store i32 15, i32* %2, align 4, !dbg !12058
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12059
  %4 = and i32 %3, 262144, !dbg !12061
  %5 = icmp eq i32 %4, 0, !dbg !12062
  br i1 %5, label %8, label %6, !dbg !12063

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12064
  store i32 327680, i32* %7, align 4, !dbg !12066
  br label %15, !dbg !12067

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12068
  %10 = and i32 %9, 65536, !dbg !12070
  %11 = icmp eq i32 %10, 0, !dbg !12071
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !12072
  br i1 %11, label %14, label %13, !dbg !12073

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !12074
  br label %15, !dbg !12076

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !12077
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12079
  %17 = and i32 %16, 1, !dbg !12081
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !12082
  store i32 %17, i32* %18, align 4, !dbg !12084
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12085
  %20 = lshr i32 %19, 3, !dbg !12086
  %21 = and i32 %20, 31, !dbg !12086
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !12087
  store i32 %21, i32* %22, align 4, !dbg !12088
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12089
  %24 = and i32 %23, 4, !dbg !12091
  %25 = icmp eq i32 %24, 0, !dbg !12092
  br i1 %25, label %28, label %26, !dbg !12093

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12094
  store i32 5, i32* %27, align 4, !dbg !12096
  br label %35, !dbg !12097

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !12098
  %30 = and i32 %29, 1, !dbg !12100
  %31 = icmp eq i32 %30, 0, !dbg !12101
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !12102
  br i1 %31, label %34, label %33, !dbg !12103

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !12104
  br label %35, !dbg !12106

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !12107
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !12109
  %37 = and i32 %36, 1, !dbg !12111
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !12112
  store i32 %37, i32* %38, align 4, !dbg !12114
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12115
  %40 = and i32 %39, 16777216, !dbg !12117
  %41 = icmp eq i32 %40, 0, !dbg !12118
  %42 = select i1 %41, i32 1, i32 2, !dbg !12119
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !12120
  store i32 %42, i32* %43, align 4, !dbg !12122
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12123
  %45 = and i32 %44, 4194304, !dbg !12124
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !12125
  store i32 %45, i32* %46, align 4, !dbg !12126
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12127
  %48 = and i32 %47, 63, !dbg !12128
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !12129
  store i32 %48, i32* %49, align 4, !dbg !12130
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12131
  %51 = lshr i32 %50, 6, !dbg !12132
  %52 = and i32 %51, 511, !dbg !12132
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !12133
  store i32 %52, i32* %53, align 4, !dbg !12134
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12135
  %55 = shl i32 %54, 1, !dbg !12136
  %56 = and i32 %55, 393216, !dbg !12136
  %57 = add nuw nsw i32 %56, 131072, !dbg !12136
  %58 = lshr exact i32 %57, 16, !dbg !12137
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !12138
  store i32 %58, i32* %59, align 4, !dbg !12139
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12140
  %61 = lshr i32 %60, 24, !dbg !12141
  %62 = and i32 %61, 15, !dbg !12141
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !12142
  store i32 %62, i32* %63, align 4, !dbg !12143
  %64 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12144
  %65 = lshr i32 %64, 28, !dbg !12145
  %66 = and i32 %65, 7, !dbg !12145
  %67 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !12146
  store i32 %66, i32* %67, align 4, !dbg !12147
  ret void, !dbg !12148
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !12149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12152, metadata !DIExpression()), !dbg !12153
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !12154
  ret void, !dbg !12155
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !12156 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12159, metadata !DIExpression()), !dbg !12161
  call void @llvm.dbg.value(metadata i32 1000, metadata !12160, metadata !DIExpression()), !dbg !12161
  %2 = udiv i32 %0, 1000, !dbg !12162
  %3 = add nsw i32 %2, -1, !dbg !12163
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12164
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12165
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12166
  ret void, !dbg !12167
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !12168 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12170, metadata !DIExpression()), !dbg !12172
  %3 = bitcast i32* %2 to i8*, !dbg !12173
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12173
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12171, metadata !DIExpression()), !dbg !12174
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12175
  store volatile i32 %4, i32* %2, align 4, !dbg !12174
  %5 = load volatile i32, i32* %2, align 4, !dbg !12176
  %6 = icmp eq i32 %0, -1, !dbg !12177
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !12170, metadata !DIExpression()), !dbg !12172
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !12172
  call void @llvm.dbg.value(metadata i32 %8, metadata !12170, metadata !DIExpression()), !dbg !12172
  br label %9, !dbg !12179

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !12170, metadata !DIExpression()), !dbg !12172
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12180
  call void @llvm.dbg.value(metadata i32 undef, metadata !12170, metadata !DIExpression()), !dbg !12172
  %12 = shl i32 %11, 15, !dbg !12172
  %13 = ashr i32 %12, 31, !dbg !12172
  %14 = add i32 %13, %10, !dbg !12172
  call void @llvm.dbg.value(metadata i32 %14, metadata !12170, metadata !DIExpression()), !dbg !12172
  %15 = icmp eq i32 %14, 0, !dbg !12179
  br i1 %15, label %16, label %9, !dbg !12179

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12183
  ret void, !dbg !12183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !12184 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12186, metadata !DIExpression()), !dbg !12187
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !12188
  ret void, !dbg !12189
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !12190 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12195, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i32 0, metadata !12198, metadata !DIExpression()), !dbg !12200
  call void @llvm.dbg.value(metadata i32 0, metadata !12199, metadata !DIExpression()), !dbg !12200
  %2 = icmp eq i32 %0, 0, !dbg !12201
  br i1 %2, label %72, label %3, !dbg !12203

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12204
  %5 = icmp eq i32 %4, 49152, !dbg !12207
  br i1 %5, label %6, label %21, !dbg !12208

6:                                                ; preds = %3
  %7 = icmp ult i32 %0, 150000001, !dbg !12209
  %8 = select i1 %7, i32 0, i32 5, !dbg !12212
  call void @llvm.dbg.value(metadata i32 %8, metadata !12198, metadata !DIExpression()), !dbg !12200
  %9 = add i32 %0, -120000001, !dbg !12213
  %10 = icmp ult i32 %9, 30000000, !dbg !12213
  %11 = select i1 %10, i32 4, i32 %8, !dbg !12213
  call void @llvm.dbg.value(metadata i32 %11, metadata !12198, metadata !DIExpression()), !dbg !12200
  %12 = icmp ult i32 %9, -30000000, !dbg !12215
  %13 = select i1 %12, i32 %11, i32 3, !dbg !12215
  call void @llvm.dbg.value(metadata i32 %13, metadata !12198, metadata !DIExpression()), !dbg !12200
  %14 = icmp ugt i32 %0, 60000000, !dbg !12217
  %15 = icmp eq i32 %13, 0
  %16 = and i1 %14, %15, !dbg !12219
  br i1 %16, label %21, label %17, !dbg !12219

17:                                               ; preds = %6
  %18 = icmp ugt i32 %0, 30000000, !dbg !12220
  %19 = and i1 %18, %15, !dbg !12223
  %20 = select i1 %19, i32 1, i32 %13, !dbg !12223
  br label %21, !dbg !12223

21:                                               ; preds = %17, %6, %3
  %22 = phi i32 [ 0, %3 ], [ 2, %6 ], [ %20, %17 ], !dbg !12200
  call void @llvm.dbg.value(metadata i32 %22, metadata !12198, metadata !DIExpression()), !dbg !12200
  %23 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12224
  %24 = icmp eq i32 %23, 32768, !dbg !12226
  br i1 %24, label %25, label %45, !dbg !12227

25:                                               ; preds = %21
  %26 = icmp ugt i32 %0, 150000000, !dbg !12228
  %27 = icmp eq i32 %22, 0
  %28 = and i1 %26, %27, !dbg !12231
  %29 = select i1 %28, i32 5, i32 %22, !dbg !12231
  call void @llvm.dbg.value(metadata i32 %29, metadata !12198, metadata !DIExpression()), !dbg !12200
  %30 = icmp ugt i32 %0, 12000000, !dbg !12232
  %31 = icmp eq i32 %29, 0
  %32 = and i1 %30, %31, !dbg !12234
  %33 = select i1 %32, i32 4, i32 %29, !dbg !12234
  call void @llvm.dbg.value(metadata i32 %33, metadata !12198, metadata !DIExpression()), !dbg !12200
  %34 = icmp ugt i32 %0, 90000000, !dbg !12235
  %35 = icmp eq i32 %33, 0
  %36 = and i1 %34, %35, !dbg !12237
  %37 = select i1 %36, i32 3, i32 %33, !dbg !12237
  call void @llvm.dbg.value(metadata i32 %37, metadata !12198, metadata !DIExpression()), !dbg !12200
  %38 = icmp ugt i32 %0, 60000000, !dbg !12238
  %39 = icmp eq i32 %37, 0
  %40 = select i1 %38, i1 %39, i1 false, !dbg !12240
  br i1 %40, label %45, label %41, !dbg !12240

41:                                               ; preds = %25
  %42 = icmp ugt i32 %0, 30000000, !dbg !12241
  %43 = select i1 %42, i1 %39, i1 false, !dbg !12244
  %44 = select i1 %43, i32 1, i32 %37, !dbg !12244
  br label %45, !dbg !12244

45:                                               ; preds = %41, %25, %21
  %46 = phi i32 [ %22, %21 ], [ 2, %25 ], [ %44, %41 ], !dbg !12245
  call void @llvm.dbg.value(metadata i32 %46, metadata !12198, metadata !DIExpression()), !dbg !12200
  %47 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !12246
  %48 = icmp eq i32 %47, 16384, !dbg !12248
  br i1 %48, label %49, label %61, !dbg !12249

49:                                               ; preds = %45
  %50 = icmp ugt i32 %0, 90000000, !dbg !12250
  %51 = icmp eq i32 %46, 0
  %52 = select i1 %50, i1 %51, i1 false, !dbg !12253
  %53 = select i1 %52, i32 3, i32 %46, !dbg !12253
  call void @llvm.dbg.value(metadata i32 %53, metadata !12198, metadata !DIExpression()), !dbg !12200
  %54 = icmp ugt i32 %0, 60000000, !dbg !12254
  %55 = icmp eq i32 %53, 0
  %56 = select i1 %54, i1 %55, i1 false, !dbg !12256
  br i1 %56, label %61, label %57, !dbg !12256

57:                                               ; preds = %49
  %58 = icmp ugt i32 %0, 30000000, !dbg !12257
  %59 = select i1 %58, i1 %55, i1 false, !dbg !12260
  %60 = select i1 %59, i32 1, i32 %53, !dbg !12260
  br label %61, !dbg !12260

61:                                               ; preds = %57, %49, %45
  %62 = phi i32 [ %46, %45 ], [ 2, %49 ], [ %60, %57 ], !dbg !12245
  call void @llvm.dbg.value(metadata i32 %62, metadata !12198, metadata !DIExpression()), !dbg !12200
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %62) #26, !dbg !12261
  call void @llvm.dbg.value(metadata i32 2, metadata !12196, metadata !DIExpression()), !dbg !12200
  br label %63, !dbg !12262

63:                                               ; preds = %63, %61
  %64 = phi i32 [ 2, %61 ], [ %66, %63 ], !dbg !12245
  call void @llvm.dbg.value(metadata i32 %64, metadata !12196, metadata !DIExpression()), !dbg !12200
  %65 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !12263
  call void @llvm.dbg.value(metadata i32 %65, metadata !12197, metadata !DIExpression()), !dbg !12200
  %66 = add nsw i32 %64, -1, !dbg !12265
  call void @llvm.dbg.value(metadata i32 %66, metadata !12196, metadata !DIExpression()), !dbg !12200
  %67 = icmp ne i32 %65, %62, !dbg !12266
  %68 = icmp ne i32 %66, 0, !dbg !12267
  %69 = select i1 %67, i1 %68, i1 false, !dbg !12267
  br i1 %69, label %63, label %70, !dbg !12268, !llvm.loop !12269

70:                                               ; preds = %63
  %71 = zext i1 %67 to i32
  br label %72

72:                                               ; preds = %70, %1
  %73 = phi i32 [ 1, %1 ], [ %71, %70 ], !dbg !12271
  call void @llvm.dbg.value(metadata i32 %73, metadata !12199, metadata !DIExpression()), !dbg !12200
  ret i32 %73, !dbg !12272
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !12273 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !12275
  %2 = and i32 %1, 49152, !dbg !12275
  ret i32 %2, !dbg !12276
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !12277 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12279, metadata !DIExpression()), !dbg !12280
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12281
  %3 = and i32 %2, -16, !dbg !12281
  %4 = or i32 %3, %0, !dbg !12281
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12281
  ret void, !dbg !12282
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !12283 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !12284
  %2 = and i32 %1, 15, !dbg !12284
  ret i32 %2, !dbg !12285
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !12286 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !12304, metadata !DIExpression()), !dbg !12308
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12305, metadata !DIExpression()), !dbg !12308
  call void @llvm.dbg.value(metadata i32 0, metadata !12306, metadata !DIExpression()), !dbg !12308
  call void @llvm.dbg.value(metadata i32 0, metadata !12307, metadata !DIExpression()), !dbg !12308
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !12309
  %4 = icmp eq i32 %3, 0, !dbg !12311
  br i1 %4, label %5, label %21, !dbg !12312

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !12313
  call void @llvm.dbg.value(metadata i32 %6, metadata !12307, metadata !DIExpression()), !dbg !12308
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.81() #26, !dbg !12315
  %8 = icmp eq i32 %7, 1, !dbg !12317
  br i1 %8, label %13, label %9, !dbg !12318

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.82() #26, !dbg !12319
  br label %10, !dbg !12321

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.81() #26, !dbg !12322
  %12 = icmp eq i32 %11, 1, !dbg !12323
  br i1 %12, label %13, label %10, !dbg !12321, !llvm.loop !12324

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !12326
  %15 = load i32, i32* %14, align 4, !dbg !12326
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !12327
  %17 = load i32, i32* %16, align 4, !dbg !12327
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !12328
  %19 = load i32, i32* %18, align 4, !dbg !12328
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.83(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !12329
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !12330
  call void @llvm.dbg.value(metadata i32 %20, metadata !12306, metadata !DIExpression()), !dbg !12308
  br label %21, !dbg !12331

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !12332
  call void @llvm.dbg.value(metadata i32 %22, metadata !12306, metadata !DIExpression()), !dbg !12308
  ret i32 %22, !dbg !12333
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !12334 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12338, metadata !DIExpression()), !dbg !12339
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.85() #26, !dbg !12340
  %2 = icmp ne i32 %1, 0, !dbg !12342
  call void @llvm.dbg.value(metadata i1 %2, metadata !12338, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12339
  %3 = tail call fastcc i32 @LL_RCC_PLLSAI_IsReady() #26, !dbg !12343
  %4 = icmp ne i32 %3, 0, !dbg !12345
  call void @llvm.dbg.value(metadata i1 undef, metadata !12338, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12339
  %5 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !12346
  %6 = icmp ne i32 %5, 0, !dbg !12348
  %7 = select i1 %6, i1 true, i1 %4, !dbg !12349
  %8 = select i1 %7, i1 true, i1 %2, !dbg !12349
  %9 = zext i1 %8 to i32, !dbg !12349
  call void @llvm.dbg.value(metadata i32 %9, metadata !12338, metadata !DIExpression()), !dbg !12339
  ret i32 %9, !dbg !12350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !12351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12355, metadata !DIExpression()), !dbg !12358
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12356, metadata !DIExpression()), !dbg !12358
  call void @llvm.dbg.value(metadata i32 0, metadata !12357, metadata !DIExpression()), !dbg !12358
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12359
  %4 = load i32, i32* %3, align 4, !dbg !12359
  %5 = and i32 %4, 63, !dbg !12360
  %6 = udiv i32 %0, %5, !dbg !12361
  call void @llvm.dbg.value(metadata i32 %6, metadata !12357, metadata !DIExpression()), !dbg !12358
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12362
  %8 = load i32, i32* %7, align 4, !dbg !12362
  %9 = and i32 %8, 511, !dbg !12363
  %10 = mul i32 %9, %6, !dbg !12364
  call void @llvm.dbg.value(metadata i32 %10, metadata !12357, metadata !DIExpression()), !dbg !12358
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12365
  %12 = load i32, i32* %11, align 4, !dbg !12365
  %13 = lshr i32 %12, 15, !dbg !12366
  %14 = and i32 %13, 131070, !dbg !12366
  %15 = add nuw nsw i32 %14, 2, !dbg !12366
  %16 = udiv i32 %10, %15, !dbg !12367
  call void @llvm.dbg.value(metadata i32 %16, metadata !12357, metadata !DIExpression()), !dbg !12358
  ret i32 %16, !dbg !12368
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.81() unnamed_addr #16 !dbg !12369 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12370
  %2 = lshr i32 %1, 1, !dbg !12371
  %3 = and i32 %2, 1, !dbg !12371
  ret i32 %3, !dbg !12372
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.82() unnamed_addr #15 !dbg !12373 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12374
  %2 = or i32 %1, 1, !dbg !12374
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12374
  ret void, !dbg !12375
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.83(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !12376 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12378, metadata !DIExpression()), !dbg !12382
  call void @llvm.dbg.value(metadata i32 %1, metadata !12379, metadata !DIExpression()), !dbg !12382
  call void @llvm.dbg.value(metadata i32 %2, metadata !12380, metadata !DIExpression()), !dbg !12382
  call void @llvm.dbg.value(metadata i32 %3, metadata !12381, metadata !DIExpression()), !dbg !12382
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12383
  %6 = and i32 %5, -4227072, !dbg !12383
  %7 = or i32 %1, %0, !dbg !12383
  %8 = shl i32 %2, 6, !dbg !12383
  %9 = or i32 %7, %8, !dbg !12383
  %10 = or i32 %9, %6, !dbg !12383
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12383
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12384
  %12 = and i32 %11, -196609, !dbg !12384
  %13 = or i32 %12, %3, !dbg !12384
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12384
  %14 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12385
  %15 = and i32 %14, -1879048193, !dbg !12385
  %16 = or i32 %15, %3, !dbg !12385
  store volatile i32 %16, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12385
  ret void, !dbg !12386
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !12387 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12391, metadata !DIExpression()), !dbg !12395
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12392, metadata !DIExpression()), !dbg !12395
  call void @llvm.dbg.value(metadata i32 0, metadata !12393, metadata !DIExpression()), !dbg !12395
  call void @llvm.dbg.value(metadata i32 0, metadata !12394, metadata !DIExpression()), !dbg !12395
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12396
  %4 = load i32, i32* %3, align 4, !dbg !12396
  %5 = lshr i32 %4, 4, !dbg !12396
  %6 = and i32 %5, 15, !dbg !12396
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12396
  %8 = load i8, i8* %7, align 1, !dbg !12396
  %9 = zext i8 %8 to i32, !dbg !12396
  %10 = lshr i32 %0, %9, !dbg !12396
  call void @llvm.dbg.value(metadata i32 %10, metadata !12394, metadata !DIExpression()), !dbg !12395
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12397
  %12 = icmp ult i32 %11, %10, !dbg !12399
  br i1 %12, label %13, label %16, !dbg !12400

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !12401
  call void @llvm.dbg.value(metadata i32 %14, metadata !12393, metadata !DIExpression()), !dbg !12395
  %15 = icmp eq i32 %14, 0, !dbg !12403
  br i1 %15, label %16, label %30, !dbg !12405

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.84() #26, !dbg !12406
  br label %17, !dbg !12408

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.85() #26, !dbg !12409
  %19 = icmp eq i32 %18, 1, !dbg !12410
  br i1 %19, label %20, label %17, !dbg !12408, !llvm.loop !12411

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12413
  tail call fastcc void @LL_RCC_SetAHBPrescaler.86(i32 noundef %21) #26, !dbg !12414
  tail call fastcc void @LL_RCC_SetSysClkSource.87() #26, !dbg !12415
  br label %22, !dbg !12416

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.88() #26, !dbg !12417
  %24 = icmp eq i32 %23, 8, !dbg !12418
  br i1 %24, label %25, label %22, !dbg !12416, !llvm.loop !12419

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12421
  %27 = load i32, i32* %26, align 4, !dbg !12421
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.89(i32 noundef %27) #26, !dbg !12422
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12423
  %29 = load i32, i32* %28, align 4, !dbg !12423
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.90(i32 noundef %29) #26, !dbg !12424
  br label %30, !dbg !12425

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12426
  %33 = icmp ugt i32 %32, %10, !dbg !12428
  br i1 %33, label %34, label %36, !dbg !12429

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !12430
  call void @llvm.dbg.value(metadata i32 %35, metadata !12393, metadata !DIExpression()), !dbg !12395
  br label %36, !dbg !12432

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12395
  call void @llvm.dbg.value(metadata i32 %37, metadata !12393, metadata !DIExpression()), !dbg !12395
  %38 = icmp eq i32 %37, 0, !dbg !12433
  br i1 %38, label %39, label %40, !dbg !12435

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !12436
  br label %40, !dbg !12438

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12439
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.84() unnamed_addr #15 !dbg !12440 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12441
  %2 = or i32 %1, 16777216, !dbg !12441
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12441
  ret void, !dbg !12442
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.85() unnamed_addr #16 !dbg !12443 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12444
  %2 = lshr i32 %1, 25, !dbg !12445
  %3 = and i32 %2, 1, !dbg !12445
  ret i32 %3, !dbg !12446
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.86(i32 noundef %0) unnamed_addr #15 !dbg !12447 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12449, metadata !DIExpression()), !dbg !12450
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12451
  %3 = and i32 %2, -241, !dbg !12451
  %4 = or i32 %3, %0, !dbg !12451
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12451
  ret void, !dbg !12452
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.87() unnamed_addr #15 !dbg !12453 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12455, metadata !DIExpression()), !dbg !12456
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12457
  %2 = and i32 %1, -4, !dbg !12457
  %3 = or i32 %2, 2, !dbg !12457
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12457
  ret void, !dbg !12458
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.88() unnamed_addr #16 !dbg !12459 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12460
  %2 = and i32 %1, 12, !dbg !12460
  ret i32 %2, !dbg !12461
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.89(i32 noundef %0) unnamed_addr #15 !dbg !12462 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12464, metadata !DIExpression()), !dbg !12465
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12466
  %3 = and i32 %2, -7169, !dbg !12466
  %4 = or i32 %3, %0, !dbg !12466
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12466
  ret void, !dbg !12467
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.90(i32 noundef %0) unnamed_addr #15 !dbg !12468 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12470, metadata !DIExpression()), !dbg !12471
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12472
  %3 = and i32 %2, -57345, !dbg !12472
  %4 = or i32 %3, %0, !dbg !12472
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12472
  ret void, !dbg !12473
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLSAI_IsReady() unnamed_addr #16 !dbg !12474 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12475
  %2 = lshr i32 %1, 29, !dbg !12476
  %3 = and i32 %2, 1, !dbg !12476
  ret i32 %3, !dbg !12477
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !12478 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12479
  %2 = lshr i32 %1, 27, !dbg !12480
  %3 = and i32 %2, 1, !dbg !12480
  ret i32 %3, !dbg !12481
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !12482 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12486, metadata !DIExpression()), !dbg !12492
  call void @llvm.dbg.value(metadata i32 %1, metadata !12487, metadata !DIExpression()), !dbg !12492
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12488, metadata !DIExpression()), !dbg !12492
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12489, metadata !DIExpression()), !dbg !12492
  call void @llvm.dbg.value(metadata i32 0, metadata !12490, metadata !DIExpression()), !dbg !12492
  call void @llvm.dbg.value(metadata i32 0, metadata !12491, metadata !DIExpression()), !dbg !12492
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !12493
  %6 = icmp eq i32 %5, 0, !dbg !12495
  br i1 %6, label %7, label %27, !dbg !12496

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !12497
  call void @llvm.dbg.value(metadata i32 %8, metadata !12491, metadata !DIExpression()), !dbg !12492
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.91() #26, !dbg !12499
  %10 = icmp eq i32 %9, 1, !dbg !12501
  br i1 %10, label %19, label %11, !dbg !12502

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12503
  br i1 %12, label %13, label %14, !dbg !12506

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !12507
  br label %15, !dbg !12509

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.92() #26, !dbg !12510
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.93() #26, !dbg !12512
  br label %16, !dbg !12513

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.91() #26, !dbg !12514
  %18 = icmp eq i32 %17, 1, !dbg !12515
  br i1 %18, label %19, label %16, !dbg !12513, !llvm.loop !12516

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12518
  %21 = load i32, i32* %20, align 4, !dbg !12518
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12519
  %23 = load i32, i32* %22, align 4, !dbg !12519
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12520
  %25 = load i32, i32* %24, align 4, !dbg !12520
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.83(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !12521
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !12522
  call void @llvm.dbg.value(metadata i32 %26, metadata !12490, metadata !DIExpression()), !dbg !12492
  br label %27, !dbg !12523

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12524
  call void @llvm.dbg.value(metadata i32 %28, metadata !12490, metadata !DIExpression()), !dbg !12492
  ret i32 %28, !dbg !12525
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.91() unnamed_addr #16 !dbg !12526 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12527
  %2 = lshr i32 %1, 17, !dbg !12528
  %3 = and i32 %2, 1, !dbg !12528
  ret i32 %3, !dbg !12529
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !12530 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12531
  %2 = or i32 %1, 262144, !dbg !12531
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12531
  ret void, !dbg !12532
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.92() unnamed_addr #15 !dbg !12533 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12534
  %2 = and i32 %1, -262145, !dbg !12534
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12534
  ret void, !dbg !12535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.93() unnamed_addr #15 !dbg !12536 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12537
  %2 = or i32 %1, 65536, !dbg !12537
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12537
  ret void, !dbg !12538
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !12539 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12542, metadata !DIExpression()), !dbg !12558
  call void @llvm.dbg.value(metadata i32 undef, metadata !12542, metadata !DIExpression()), !dbg !12558
  call void @llvm.dbg.value(metadata i32 undef, metadata !12542, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12558
  ret void, !dbg !12559
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12560 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12564, metadata !DIExpression()), !dbg !12566
  %2 = icmp eq i8* %0, null, !dbg !12567
  br i1 %2, label %29, label %3, !dbg !12569

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12570
  %5 = icmp eq i8 %4, 0, !dbg !12571
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12572
  br i1 %6, label %29, label %8, !dbg !12572

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12565, metadata !DIExpression()), !dbg !12566
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12573

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12565, metadata !DIExpression()), !dbg !12566
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !12575
  br i1 %10, label %11, label %15, !dbg !12580

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12581
  %13 = load i8*, i8** %12, align 4, !dbg !12581
  %14 = icmp eq i8* %13, %0, !dbg !12582
  br i1 %14, label %29, label %15, !dbg !12583

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12584
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12565, metadata !DIExpression()), !dbg !12566
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12585
  br i1 %17, label %7, label %8, !dbg !12586, !llvm.loop !12587

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12565, metadata !DIExpression()), !dbg !12566
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !12589
  br i1 %20, label %21, label %26, !dbg !12593

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12594
  %23 = load i8*, i8** %22, align 4, !dbg !12594
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !12595
  %25 = icmp eq i32 %24, 0, !dbg !12596
  br i1 %25, label %29, label %26, !dbg !12597

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12598
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12565, metadata !DIExpression()), !dbg !12566
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12599
  br i1 %28, label %29, label %18, !dbg !12573, !llvm.loop !12600

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12566
  ret %struct.device* %30, !dbg !12602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !12603 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12607, metadata !DIExpression()), !dbg !12608
  %2 = icmp eq %struct.device* %0, null, !dbg !12609
  br i1 %2, label %14, label %3, !dbg !12611

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12612
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12612
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12613
  %7 = load i8, i8* %6, align 1, !dbg !12613
  %8 = and i8 %7, 1, !dbg !12613
  %9 = icmp eq i8 %8, 0, !dbg !12613
  br i1 %9, label %14, label %10, !dbg !12614

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12615
  %12 = load i8, i8* %11, align 1, !dbg !12615
  %13 = icmp eq i8 %12, 0, !dbg !12616
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12608
  ret i1 %15, !dbg !12617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !12618 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12623, metadata !DIExpression()), !dbg !12624
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12625
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12626
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12627 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12635, metadata !DIExpression()), !dbg !12640
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12636, metadata !DIExpression()), !dbg !12640
  call void @llvm.dbg.value(metadata i8* %2, metadata !12637, metadata !DIExpression()), !dbg !12640
  %5 = bitcast i32* %4 to i8*, !dbg !12641
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12641
  call void @llvm.dbg.value(metadata i32 0, metadata !12638, metadata !DIExpression()), !dbg !12640
  store i32 0, i32* %4, align 4, !dbg !12642
  call void @llvm.dbg.value(metadata i32* %4, metadata !12638, metadata !DIExpression(DW_OP_deref)), !dbg !12640
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !12643
  call void @llvm.dbg.value(metadata i16* %6, metadata !12639, metadata !DIExpression()), !dbg !12640
  %7 = load i32, i32* %4, align 4, !dbg !12644
  call void @llvm.dbg.value(metadata i32 %7, metadata !12638, metadata !DIExpression()), !dbg !12640
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !12645
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12646
  ret i32 %8, !dbg !12647
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12648 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12652, metadata !DIExpression()), !dbg !12658
  call void @llvm.dbg.value(metadata i32* %1, metadata !12653, metadata !DIExpression()), !dbg !12658
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12659
  %4 = load i16*, i16** %3, align 4, !dbg !12659
  call void @llvm.dbg.value(metadata i16* %4, metadata !12654, metadata !DIExpression()), !dbg !12658
  %5 = icmp eq i16* %4, null, !dbg !12660
  br i1 %5, label %14, label %6, !dbg !12661

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12662
  call void @llvm.dbg.value(metadata i32 %7, metadata !12655, metadata !DIExpression()), !dbg !12662
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12663
  %9 = load i16, i16* %8, align 2, !dbg !12663
  %10 = add i16 %9, -32767, !dbg !12664
  %11 = icmp ult i16 %10, 2, !dbg !12664
  %12 = add i32 %7, 1, !dbg !12665
  call void @llvm.dbg.value(metadata i32 %12, metadata !12655, metadata !DIExpression()), !dbg !12662
  br i1 %11, label %13, label %6, !dbg !12664, !llvm.loop !12667

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12670
  br label %14, !dbg !12671

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12672
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12673 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12677, metadata !DIExpression()), !dbg !12688
  call void @llvm.dbg.value(metadata i32 %1, metadata !12678, metadata !DIExpression()), !dbg !12688
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12679, metadata !DIExpression()), !dbg !12688
  call void @llvm.dbg.value(metadata i8* %3, metadata !12680, metadata !DIExpression()), !dbg !12688
  call void @llvm.dbg.value(metadata i32 0, metadata !12681, metadata !DIExpression()), !dbg !12689
  %5 = icmp eq i32 %1, 0, !dbg !12690
  br i1 %5, label %16, label %8, !dbg !12691

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12681, metadata !DIExpression()), !dbg !12689
  %7 = icmp eq i32 %15, %1, !dbg !12690
  br i1 %7, label %16, label %8, !dbg !12691, !llvm.loop !12692

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12681, metadata !DIExpression()), !dbg !12689
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12694
  %11 = load i16, i16* %10, align 2, !dbg !12694
  call void @llvm.dbg.value(metadata i16 %11, metadata !12683, metadata !DIExpression()), !dbg !12695
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !12696
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12686, metadata !DIExpression()), !dbg !12695
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !12697
  call void @llvm.dbg.value(metadata i32 %13, metadata !12687, metadata !DIExpression()), !dbg !12695
  %14 = icmp slt i32 %13, 0, !dbg !12698
  %15 = add nuw i32 %9, 1, !dbg !12700
  call void @llvm.dbg.value(metadata i32 %15, metadata !12681, metadata !DIExpression()), !dbg !12689
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !12702 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12706, metadata !DIExpression()), !dbg !12709
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12707, metadata !DIExpression()), !dbg !12709
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12708, metadata !DIExpression()), !dbg !12709
  %2 = sext i16 %0 to i32, !dbg !12710
  %3 = icmp slt i16 %0, 1, !dbg !12712
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12713
  %6 = add nsw i32 %2, -1, !dbg !12713
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12713
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12713
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12707, metadata !DIExpression()), !dbg !12709
  ret %struct.device* %8, !dbg !12714
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12715 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12717, metadata !DIExpression()), !dbg !12722
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12718, metadata !DIExpression()), !dbg !12722
  call void @llvm.dbg.value(metadata i8* %2, metadata !12719, metadata !DIExpression()), !dbg !12722
  %5 = bitcast i32* %4 to i8*, !dbg !12723
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12723
  call void @llvm.dbg.value(metadata i32 0, metadata !12720, metadata !DIExpression()), !dbg !12722
  store i32 0, i32* %4, align 4, !dbg !12724
  call void @llvm.dbg.value(metadata i32* %4, metadata !12720, metadata !DIExpression(DW_OP_deref)), !dbg !12722
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !12725
  call void @llvm.dbg.value(metadata i16* %6, metadata !12721, metadata !DIExpression()), !dbg !12722
  %7 = load i32, i32* %4, align 4, !dbg !12726
  call void @llvm.dbg.value(metadata i32 %7, metadata !12720, metadata !DIExpression()), !dbg !12722
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !12727
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12728
  ret i32 %8, !dbg !12729
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12730 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12732, metadata !DIExpression()), !dbg !12737
  call void @llvm.dbg.value(metadata i32* %1, metadata !12733, metadata !DIExpression()), !dbg !12737
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12738
  %4 = load i16*, i16** %3, align 4, !dbg !12738
  call void @llvm.dbg.value(metadata i16* %4, metadata !12734, metadata !DIExpression()), !dbg !12737
  call void @llvm.dbg.value(metadata i32 0, metadata !12735, metadata !DIExpression()), !dbg !12737
  call void @llvm.dbg.value(metadata i32 0, metadata !12736, metadata !DIExpression()), !dbg !12737
  %5 = icmp eq i16* %4, null, !dbg !12739
  br i1 %5, label %22, label %6, !dbg !12741

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12735, metadata !DIExpression()), !dbg !12737
  call void @llvm.dbg.value(metadata i16* %8, metadata !12734, metadata !DIExpression()), !dbg !12737
  %9 = load i16, i16* %8, align 2, !dbg !12742
  %10 = icmp eq i16 %9, -32768, !dbg !12746
  call void @llvm.dbg.value(metadata i32 undef, metadata !12735, metadata !DIExpression()), !dbg !12737
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12747
  call void @llvm.dbg.value(metadata i16* %11, metadata !12734, metadata !DIExpression()), !dbg !12737
  %12 = zext i1 %10 to i32, !dbg !12748
  %13 = add i32 %7, %12, !dbg !12748
  call void @llvm.dbg.value(metadata i32 %13, metadata !12735, metadata !DIExpression()), !dbg !12737
  %14 = icmp eq i32 %13, 2, !dbg !12749
  br i1 %14, label %15, label %6, !dbg !12750

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12737
  call void @llvm.dbg.value(metadata i32 %16, metadata !12736, metadata !DIExpression()), !dbg !12737
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12751
  %18 = load i16, i16* %17, align 2, !dbg !12751
  %19 = icmp eq i16 %18, 32767, !dbg !12752
  %20 = add i32 %16, 1, !dbg !12753
  call void @llvm.dbg.value(metadata i32 %20, metadata !12736, metadata !DIExpression()), !dbg !12737
  br i1 %19, label %21, label %15, !dbg !12755, !llvm.loop !12756

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12758
  br label %22, !dbg !12759

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12760
  call void @llvm.dbg.value(metadata i16* %23, metadata !12734, metadata !DIExpression()), !dbg !12737
  ret i16* %23, !dbg !12761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !12762 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12765
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12766
  ret i32* %2, !dbg !12767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !12768 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12916, metadata !DIExpression()), !dbg !12919
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12917, metadata !DIExpression()), !dbg !12919
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12918, metadata !DIExpression()), !dbg !12919
  ret void, !dbg !12920
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12921 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12925, metadata !DIExpression()), !dbg !12927
  call void @llvm.dbg.value(metadata i32 %1, metadata !12926, metadata !DIExpression()), !dbg !12927
  ret void, !dbg !12928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12929 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12933, metadata !DIExpression()), !dbg !12935
  call void @llvm.dbg.value(metadata i32 %1, metadata !12934, metadata !DIExpression()), !dbg !12935
  ret void, !dbg !12936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12937 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12941, metadata !DIExpression()), !dbg !12943
  call void @llvm.dbg.value(metadata i8* %1, metadata !12942, metadata !DIExpression()), !dbg !12943
  ret i32 -134, !dbg !12944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12945 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12949, metadata !DIExpression()), !dbg !12951
  call void @llvm.dbg.value(metadata i8* %1, metadata !12950, metadata !DIExpression()), !dbg !12951
  ret i32 -134, !dbg !12952
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12953 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12956, metadata !DIExpression()), !dbg !12957
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12958, !srcloc !12964
  call void @llvm.dbg.value(metadata i32 undef, metadata !12961, metadata !DIExpression()) #25, !dbg !12965
  call void @llvm.dbg.value(metadata i32 undef, metadata !12962, metadata !DIExpression()) #25, !dbg !12965
  br label %3, !dbg !12966

3:                                                ; preds = %3, %1
  br label %3, !dbg !12967, !llvm.loop !12970
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12973 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12977, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12978, metadata !DIExpression()), !dbg !12979
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12980
  unreachable, !dbg !12980
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12983, metadata !DIExpression()), !dbg !12984
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12985
  unreachable, !dbg !12985
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12986 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12988, metadata !DIExpression()), !dbg !12992
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12989, metadata !DIExpression()), !dbg !12992
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12993, !srcloc !12964
  call void @llvm.dbg.value(metadata i32 undef, metadata !12961, metadata !DIExpression()) #25, !dbg !12995
  call void @llvm.dbg.value(metadata i32 undef, metadata !12962, metadata !DIExpression()) #25, !dbg !12995
  call void @llvm.dbg.value(metadata i32 undef, metadata !12990, metadata !DIExpression()), !dbg !12992
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12991, metadata !DIExpression()), !dbg !12992
  %4 = icmp eq %struct.__esf* %1, null, !dbg !12996
  br i1 %4, label %6, label %5, !dbg !12998

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !12999
  br label %7, !dbg !13000

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !12999
  br label %7, !dbg !13003

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !12993
  call void @llvm.dbg.value(metadata i32 %8, metadata !12961, metadata !DIExpression()) #25, !dbg !12995
  call void @llvm.dbg.value(metadata i32 %8, metadata !12990, metadata !DIExpression()), !dbg !12992
  %9 = tail call fastcc %struct.k_thread* @k_current_get.100() #28, !dbg !13005
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12991, metadata !DIExpression()), !dbg !12992
  call void @llvm.dbg.value(metadata i32 undef, metadata !13006, metadata !DIExpression()) #25, !dbg !13009
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !13011, !srcloc !13012
  tail call fastcc void @k_thread_abort.101(%struct.k_thread* noundef %9) #26, !dbg !13013
  ret void, !dbg !13016
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.100() unnamed_addr #9 !dbg !13017 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.102() #28, !dbg !13021
  ret %struct.k_thread* %1, !dbg !13022
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.101(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13023 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13027, metadata !DIExpression()), !dbg !13028
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13029, !srcloc !13031
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !13032
  ret void, !dbg !13033
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.102() unnamed_addr #9 !dbg !13034 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13035, !srcloc !13037
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !13038
  ret %struct.k_thread* %1, !dbg !13039
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13040 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13044, metadata !DIExpression()), !dbg !13047
  call void @llvm.dbg.value(metadata i32 %1, metadata !13045, metadata !DIExpression()), !dbg !13047
  call void @llvm.dbg.value(metadata i32 %2, metadata !13046, metadata !DIExpression()), !dbg !13047
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !13048
  ret void, !dbg !13049
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13050 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13054, metadata !DIExpression()), !dbg !13057
  call void @llvm.dbg.value(metadata i8* %1, metadata !13055, metadata !DIExpression()), !dbg !13057
  call void @llvm.dbg.value(metadata i32 %2, metadata !13056, metadata !DIExpression()), !dbg !13057
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !13058
  ret void, !dbg !13059
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !13060 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !13061
  ret void, !dbg !13062
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !13063 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13065, metadata !DIExpression()), !dbg !13066
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !13067
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13068
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !13069
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !13070
  %4 = trunc i32 %0 to i8, !dbg !13071
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !13072
  store i8 %4, i8* %5, align 4, !dbg !13073
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !13074
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !13075
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !13076
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !13077
  store i8* %8, i8** %9, align 4, !dbg !13078
  ret void, !dbg !13079
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !13080 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13082, metadata !DIExpression()), !dbg !13088
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !13089
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13083, metadata !DIExpression()), !dbg !13088
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !13090
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !13084, metadata !DIExpression()), !dbg !13088
  call void @llvm.dbg.value(metadata i8* null, metadata !13087, metadata !DIExpression()), !dbg !13088
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !13091
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !13092
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !13093
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !13094
  ret void, !dbg !13095
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !13096 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13100, metadata !DIExpression()), !dbg !13101
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13102
  ret i8* %2, !dbg !13103
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !13104 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13109, metadata !DIExpression()), !dbg !13110
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13111
  %3 = load i8, i8* %2, align 1, !dbg !13112
  %4 = and i8 %3, -5, !dbg !13112
  store i8 %4, i8* %2, align 1, !dbg !13112
  ret void, !dbg !13113
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !13114 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !13117
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !13118
  %3 = ptrtoint i8* %2 to i32, !dbg !13127
  %4 = add i32 %3, 2048, !dbg !13128
  call void @llvm.dbg.value(metadata i32 %4, metadata !13122, metadata !DIExpression()) #25, !dbg !13129
  call void @llvm.dbg.value(metadata i32 %4, metadata !13130, metadata !DIExpression()) #25, !dbg !13133
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !13135, !srcloc !13136
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13137
  %6 = or i32 %5, 512, !dbg !13137
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !13137
  tail call fastcc void @__NVIC_SetPriority.109(i32 noundef -2, i32 noundef 255) #27, !dbg !13138
  tail call fastcc void @__NVIC_SetPriority.109(i32 noundef -5, i32 noundef 0) #27, !dbg !13141
  tail call fastcc void @__NVIC_SetPriority.109(i32 noundef -12, i32 noundef 0) #27, !dbg !13142
  tail call fastcc void @__NVIC_SetPriority.109(i32 noundef -11, i32 noundef 0) #27, !dbg !13143
  tail call fastcc void @__NVIC_SetPriority.109(i32 noundef -10, i32 noundef 0) #27, !dbg !13144
  tail call fastcc void @__NVIC_SetPriority.109(i32 noundef -4, i32 noundef 0) #27, !dbg !13145
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13146
  %8 = or i32 %7, 458752, !dbg !13146
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !13146
  tail call void @z_arm_fault_init() #27, !dbg !13147
  tail call void @z_arm_cpu_idle_init() #27, !dbg !13148
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !13149
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !13152
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !13153
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !13154
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !13155
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !13155
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !13116, metadata !DIExpression()), !dbg !13156
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !13157
  call void @z_device_state_init() #27, !dbg !13158
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !13159
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !13160
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !13161
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !13162
  unreachable, !dbg !13162
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2172 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2176, metadata !DIExpression()), !dbg !13163
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !13164
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !13164
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2177, metadata !DIExpression()), !dbg !13163
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2177, metadata !DIExpression()), !dbg !13163
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !13165
  br i1 %7, label %8, label %35, !dbg !13166

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2177, metadata !DIExpression()), !dbg !13163
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !13167
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !13167
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2187, metadata !DIExpression()), !dbg !13168
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !13169
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !13169
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !13170
  call void @llvm.dbg.value(metadata i32 %14, metadata !2191, metadata !DIExpression()), !dbg !13168
  %15 = icmp eq %struct.device* %11, null, !dbg !13171
  br i1 %15, label %32, label %16, !dbg !13173

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !13174
  br i1 %17, label %26, label %18, !dbg !13177

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !13178
  call void @llvm.dbg.value(metadata i32 %19, metadata !2191, metadata !DIExpression()), !dbg !13168
  %20 = icmp ult i32 %19, 255, !dbg !13180
  %21 = select i1 %20, i32 %19, i32 255, !dbg !13180
  call void @llvm.dbg.value(metadata i32 %21, metadata !2191, metadata !DIExpression()), !dbg !13168
  %22 = trunc i32 %21 to i8, !dbg !13181
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13182
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !13182
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !13183
  store i8 %22, i8* %25, align 1, !dbg !13184
  br label %26, !dbg !13185

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !13186
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !13186
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !13187
  %30 = load i8, i8* %29, align 1, !dbg !13188
  %31 = or i8 %30, 1, !dbg !13188
  store i8 %31, i8* %29, align 1, !dbg !13188
  br label %32, !dbg !13189

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !13190
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2177, metadata !DIExpression()), !dbg !13163
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !13165
  br i1 %34, label %8, label %35, !dbg !13166, !llvm.loop !13191

35:                                               ; preds = %32, %1
  ret void, !dbg !13193
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.109(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !13194 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13196, metadata !DIExpression()), !dbg !13198
  call void @llvm.dbg.value(metadata i32 %1, metadata !13197, metadata !DIExpression()), !dbg !13198
  %3 = trunc i32 %1 to i8, !dbg !13199
  %4 = shl i8 %3, 4, !dbg !13199
  %5 = and i32 %0, 15, !dbg !13202
  %6 = add nsw i32 %5, -4, !dbg !13203
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !13204
  store volatile i8 %4, i8* %7, align 1, !dbg !13205
  ret void, !dbg !13206
}

; Function Attrs: optsize
declare !dbg !13207 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !13208 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13211, metadata !DIExpression()), !dbg !13212
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13213
  store i8 1, i8* %2, align 1, !dbg !13214
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !13215
  store i8 1, i8* %3, align 4, !dbg !13216
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13217
  store i32 0, i32* %4, align 4, !dbg !13218
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13219
  store i32 0, i32* %5, align 4, !dbg !13220
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13221
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !13222
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13223
  ret void, !dbg !13224
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !13225 {
  tail call void @z_sched_init() #27, !dbg !13230
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13231
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.110, i32 0, i32 0)) #27, !dbg !13232
  call void @llvm.dbg.value(metadata i8* %1, metadata !13229, metadata !DIExpression()), !dbg !13233
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !13234
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !13235
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !13236
  ret i8* %1, !dbg !13237
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !13238 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13240, metadata !DIExpression()), !dbg !13241
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !13242
  unreachable, !dbg !13243
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !13244 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13246, metadata !DIExpression()), !dbg !13249
  call void @llvm.dbg.value(metadata i8* %1, metadata !13247, metadata !DIExpression()), !dbg !13249
  call void @llvm.dbg.value(metadata i8* %2, metadata !13248, metadata !DIExpression()), !dbg !13249
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !13250
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !13251
  tail call void @boot_banner() #27, !dbg !13252
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !13253
  tail call void @z_init_static_threads() #27, !dbg !13254
  tail call void @main() #27, !dbg !13255
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13256
  %5 = and i8 %4, -2, !dbg !13256
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !13256
  ret void, !dbg !13257
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13258 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13268, metadata !DIExpression()), !dbg !13270
  call void @llvm.dbg.value(metadata i8* %1, metadata !13269, metadata !DIExpression()), !dbg !13270
  ret void, !dbg !13271
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !13272 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !13274, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.value(metadata i8* %1, metadata !13275, metadata !DIExpression()), !dbg !13276
  ret void, !dbg !13277
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !13278 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !13279, !srcloc !13286
  call void @llvm.dbg.value(metadata i32 %1, metadata !13282, metadata !DIExpression()) #25, !dbg !13287
  %2 = icmp ne i32 %1, 0, !dbg !13288
  ret i1 %2, !dbg !13289
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !13290 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13291
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13292
  %3 = load i8, i8* %2, align 4, !dbg !13293
  %4 = or i8 %3, 1, !dbg !13293
  store i8 %4, i8* %2, align 4, !dbg !13293
  ret void, !dbg !13294
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !13295 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13296
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13297
  %3 = load i8, i8* %2, align 4, !dbg !13298
  %4 = and i8 %3, -2, !dbg !13298
  store i8 %4, i8* %2, align 4, !dbg !13298
  ret void, !dbg !13299
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !13300 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13301
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13302
  %3 = load i8, i8* %2, align 4, !dbg !13302
  %4 = and i8 %3, 1, !dbg !13303
  %5 = icmp ne i8 %4, 0, !dbg !13304
  ret i1 %5, !dbg !13305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !13306 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13310, metadata !DIExpression()), !dbg !13312
  call void @llvm.dbg.value(metadata i8* %1, metadata !13311, metadata !DIExpression()), !dbg !13312
  ret i32 -88, !dbg !13313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13314 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13318, metadata !DIExpression()), !dbg !13319
  ret i8* null, !dbg !13320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !13321 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13325, metadata !DIExpression()), !dbg !13328
  call void @llvm.dbg.value(metadata i8* %1, metadata !13326, metadata !DIExpression()), !dbg !13328
  call void @llvm.dbg.value(metadata i32 %2, metadata !13327, metadata !DIExpression()), !dbg !13328
  ret i32 -88, !dbg !13329
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2200 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2314, metadata !DIExpression()), !dbg !13330
  call void @llvm.dbg.value(metadata i8* %1, metadata !2315, metadata !DIExpression()), !dbg !13330
  call void @llvm.dbg.value(metadata i32 %2, metadata !2316, metadata !DIExpression()), !dbg !13330
  call void @llvm.dbg.value(metadata i32 0, metadata !2317, metadata !DIExpression()), !dbg !13330
  call void @llvm.dbg.value(metadata i8 undef, metadata !2319, metadata !DIExpression()), !dbg !13330
  %4 = icmp eq i8* %1, null, !dbg !13331
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13333
  br i1 %6, label %46, label %7, !dbg !13333

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13334
  %9 = load i8, i8* %8, align 1, !dbg !13334
  call void @llvm.dbg.value(metadata i8 %9, metadata !2319, metadata !DIExpression()), !dbg !13330
  %10 = add i32 %2, -1, !dbg !13335
  call void @llvm.dbg.value(metadata i32 %10, metadata !2316, metadata !DIExpression()), !dbg !13330
  call void @llvm.dbg.value(metadata i8 0, metadata !2320, metadata !DIExpression()), !dbg !13336
  call void @llvm.dbg.value(metadata i8 %9, metadata !2319, metadata !DIExpression()), !dbg !13330
  call void @llvm.dbg.value(metadata i32 0, metadata !2317, metadata !DIExpression()), !dbg !13330
  %11 = icmp eq i8 %9, 0, !dbg !13337
  br i1 %11, label %12, label %15, !dbg !13339

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13340
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13341
  store i8 0, i8* %14, align 1, !dbg !13342
  br label %46, !dbg !13343

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2320, metadata !DIExpression()), !dbg !13336
  call void @llvm.dbg.value(metadata i8 %17, metadata !2319, metadata !DIExpression()), !dbg !13330
  call void @llvm.dbg.value(metadata i32 %18, metadata !2317, metadata !DIExpression()), !dbg !13330
  %19 = zext i8 %17 to i32, !dbg !13344
  %20 = zext i8 %16 to i32, !dbg !13345
  %21 = shl nuw i32 1, %20, !dbg !13345
  call void @llvm.dbg.value(metadata i32 %21, metadata !2318, metadata !DIExpression()), !dbg !13330
  %22 = and i32 %21, %19, !dbg !13347
  %23 = icmp eq i32 %22, 0, !dbg !13349
  br i1 %23, label %42, label %24, !dbg !13350

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13351
  %26 = sub i32 %10, %18, !dbg !13352
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13353
  %28 = load i8*, i8** %27, align 4, !dbg !13353
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13354
  %30 = load i32, i32* %29, align 4, !dbg !13354
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !13355
  %32 = add i32 %31, %18, !dbg !13356
  call void @llvm.dbg.value(metadata i32 %32, metadata !2317, metadata !DIExpression()), !dbg !13330
  %33 = trunc i32 %21 to i8, !dbg !13357
  %34 = xor i8 %33, -1, !dbg !13357
  %35 = and i8 %17, %34, !dbg !13357
  call void @llvm.dbg.value(metadata i8 %35, metadata !2319, metadata !DIExpression()), !dbg !13330
  %36 = icmp eq i8 %35, 0, !dbg !13358
  br i1 %36, label %12, label %37, !dbg !13360

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13361
  %39 = sub i32 %10, %32, !dbg !13363
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #26, !dbg !13364
  %41 = add i32 %40, %32, !dbg !13365
  call void @llvm.dbg.value(metadata i32 %41, metadata !2317, metadata !DIExpression()), !dbg !13330
  br label %42, !dbg !13366

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13330
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13330
  call void @llvm.dbg.value(metadata i8 %44, metadata !2319, metadata !DIExpression()), !dbg !13330
  call void @llvm.dbg.value(metadata i32 %43, metadata !2317, metadata !DIExpression()), !dbg !13330
  %45 = add i8 %16, 1, !dbg !13367
  call void @llvm.dbg.value(metadata i8 %45, metadata !2320, metadata !DIExpression()), !dbg !13336
  br label %15, !dbg !13339

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.111, i32 0, i32 0), %3 ], !dbg !13330
  ret i8* %47, !dbg !13368
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13369 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13373, metadata !DIExpression()), !dbg !13378
  call void @llvm.dbg.value(metadata i32 %1, metadata !13374, metadata !DIExpression()), !dbg !13378
  call void @llvm.dbg.value(metadata i8* %2, metadata !13375, metadata !DIExpression()), !dbg !13378
  call void @llvm.dbg.value(metadata i32 %3, metadata !13376, metadata !DIExpression()), !dbg !13378
  %5 = icmp ult i32 %1, %3, !dbg !13379
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13379
  call void @llvm.dbg.value(metadata i32 %6, metadata !13377, metadata !DIExpression()), !dbg !13378
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !13380
  ret i32 %6, !dbg !13381
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13382 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13386, metadata !DIExpression()), !dbg !13387
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !13388
  ret void, !dbg !13389
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !13390 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13399, metadata !DIExpression()), !dbg !13410
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13400, metadata !DIExpression()), !dbg !13410
  call void @llvm.dbg.value(metadata i32 %2, metadata !13401, metadata !DIExpression()), !dbg !13410
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13402, metadata !DIExpression()), !dbg !13410
  call void @llvm.dbg.value(metadata i8* %4, metadata !13403, metadata !DIExpression()), !dbg !13410
  call void @llvm.dbg.value(metadata i8* %5, metadata !13404, metadata !DIExpression()), !dbg !13410
  call void @llvm.dbg.value(metadata i8* %6, metadata !13405, metadata !DIExpression()), !dbg !13410
  call void @llvm.dbg.value(metadata i32 %7, metadata !13406, metadata !DIExpression()), !dbg !13410
  call void @llvm.dbg.value(metadata i32 %8, metadata !13407, metadata !DIExpression()), !dbg !13410
  call void @llvm.dbg.value(metadata i8* undef, metadata !13408, metadata !DIExpression()), !dbg !13410
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13411
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #26, !dbg !13412
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13413
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !13414
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !13415
  call void @llvm.dbg.value(metadata i8* %13, metadata !13409, metadata !DIExpression()), !dbg !13410
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !13416
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13417
  store i8* null, i8** %14, align 4, !dbg !13418
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13419
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !13419
  br i1 %16, label %20, label %17, !dbg !13421

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !13422
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !13422
  br label %20, !dbg !13423

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !13410
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !13424
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !13426
  ret i8* %13, !dbg !13427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #4 !dbg !13428 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13433, metadata !DIExpression()), !dbg !13434
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13435
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !13436
  ret void, !dbg !13437
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !13438 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13443, metadata !DIExpression()), !dbg !13447
  call void @llvm.dbg.value(metadata i32 %1, metadata !13444, metadata !DIExpression()), !dbg !13447
  call void @llvm.dbg.value(metadata i32 %2, metadata !13445, metadata !DIExpression()), !dbg !13447
  call void @llvm.dbg.value(metadata i32 %3, metadata !13446, metadata !DIExpression()), !dbg !13447
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13448
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !13449
  %6 = trunc i32 %3 to i8, !dbg !13450
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13451
  store i8 %6, i8* %7, align 4, !dbg !13452
  %8 = trunc i32 %2 to i8, !dbg !13453
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13454
  store i8 %8, i8* %9, align 1, !dbg !13455
  %10 = trunc i32 %1 to i8, !dbg !13456
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13457
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13457
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13457
  store i8 %10, i8* %13, align 2, !dbg !13458
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13459
  store i8 0, i8* %14, align 1, !dbg !13460
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !13461
  ret void, !dbg !13462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !13463 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13467, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13468, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata i32 %2, metadata !13469, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata i32 0, metadata !13474, metadata !DIExpression()), !dbg !13475
  %4 = add i32 %2, 7, !dbg !13476
  %5 = and i32 %4, -8, !dbg !13476
  %6 = add i32 %5, 64, !dbg !13476
  call void @llvm.dbg.value(metadata i32 %6, metadata !13470, metadata !DIExpression()), !dbg !13475
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.121(%struct.z_thread_stack_element* noundef %1) #26, !dbg !13478
  call void @llvm.dbg.value(metadata i8* %7, metadata !13473, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata i32 %5, metadata !13471, metadata !DIExpression()), !dbg !13475
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13479
  call void @llvm.dbg.value(metadata i8* %8, metadata !13472, metadata !DIExpression()), !dbg !13475
  call void @llvm.dbg.value(metadata i32 0, metadata !13474, metadata !DIExpression()), !dbg !13475
  %9 = ptrtoint i8* %7 to i32, !dbg !13480
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !13481
  store i32 %9, i32* %10, align 4, !dbg !13482
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !13483
  store i32 %5, i32* %11, align 4, !dbg !13484
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !13485
  store i32 0, i32* %12, align 4, !dbg !13486
  call void @llvm.dbg.value(metadata i8* %8, metadata !13472, metadata !DIExpression()), !dbg !13475
  ret i8* %8, !dbg !13487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.121(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !13488 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13492, metadata !DIExpression()), !dbg !13493
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13494
  ret i8* %2, !dbg !13495
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13496 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13501, metadata !DIExpression()), !dbg !13502
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13503
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !13504
  ret void, !dbg !13505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13506 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13508, metadata !DIExpression()), !dbg !13509
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13510
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !13511
  ret void, !dbg !13512
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !13513 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13517, metadata !DIExpression()), !dbg !13518
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13519
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13520
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13521
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13522
  ret void, !dbg !13523
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13524 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13529, metadata !DIExpression()), !dbg !13530
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13531
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13532
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13533
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13534
  ret void, !dbg !13535
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13536 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !13553, metadata !DIExpression()), !dbg !13554
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13544, metadata !DIExpression()), !dbg !13554
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13545, metadata !DIExpression()), !dbg !13554
  call void @llvm.dbg.value(metadata i32 %2, metadata !13546, metadata !DIExpression()), !dbg !13554
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13547, metadata !DIExpression()), !dbg !13554
  call void @llvm.dbg.value(metadata i8* %4, metadata !13548, metadata !DIExpression()), !dbg !13554
  call void @llvm.dbg.value(metadata i8* %5, metadata !13549, metadata !DIExpression()), !dbg !13554
  call void @llvm.dbg.value(metadata i8* %6, metadata !13550, metadata !DIExpression()), !dbg !13554
  call void @llvm.dbg.value(metadata i32 %7, metadata !13551, metadata !DIExpression()), !dbg !13554
  call void @llvm.dbg.value(metadata i32 %8, metadata !13552, metadata !DIExpression()), !dbg !13554
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !13555
  %13 = icmp eq i64 %11, -1, !dbg !13556
  br i1 %13, label %15, label %14, !dbg !13558

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !13559
  br label %15, !dbg !13561

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !13562
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13563 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13568, metadata !DIExpression()), !dbg !13569
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13567, metadata !DIExpression()), !dbg !13569
  %4 = icmp eq i64 %3, 0, !dbg !13570
  br i1 %4, label %5, label %6, !dbg !13572

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !13573
  br label %7, !dbg !13575

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !13576
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13579 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13583, metadata !DIExpression()), !dbg !13584
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13585, !srcloc !13587
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !13588
  ret void, !dbg !13589
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13590 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13593, metadata !DIExpression()), !dbg !13594
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13592, metadata !DIExpression()), !dbg !13594
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13595
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !13596
  ret void, !dbg !13597
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13598 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13600, metadata !DIExpression()), !dbg !13620
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !13621

1:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !13622
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13618, metadata !DIExpression()), !dbg !13623
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !13624

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13600, metadata !DIExpression()), !dbg !13620
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13625
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13625
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13628
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !13628
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13629
  %9 = load i32, i32* %8, align 4, !dbg !13629
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13630
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !13630
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13631
  %13 = load i8*, i8** %12, align 4, !dbg !13631
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13632
  %15 = load i8*, i8** %14, align 4, !dbg !13632
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13633
  %17 = load i8*, i8** %16, align 4, !dbg !13633
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13634
  %19 = load i32, i32* %18, align 4, !dbg !13634
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13635
  %21 = load i32, i32* %20, align 4, !dbg !13635
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !13636
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !13637
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !13638
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !13639
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !13639
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13640
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !13600, metadata !DIExpression()), !dbg !13620
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13641
  br i1 %27, label %2, label %1, !dbg !13621, !llvm.loop !13643

28:                                               ; preds = %0
  tail call void @k_sched_lock() #27, !dbg !13622
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13618, metadata !DIExpression()), !dbg !13623
  br label %29, !dbg !13624

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #27, !dbg !13645
  ret void, !dbg !13646

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13618, metadata !DIExpression()), !dbg !13623
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !13647
  %33 = load i32, i32* %32, align 4, !dbg !13647
  %34 = icmp eq i32 %33, -1, !dbg !13651
  br i1 %34, label %43, label %35, !dbg !13652

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !13653
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !13653
  %38 = icmp sgt i32 %33, 0, !dbg !13655
  %39 = select i1 %38, i32 %33, i32 0, !dbg !13655
  %40 = zext i32 %39 to i64, !dbg !13655
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #26, !dbg !13655
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !13656
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !13656
  br label %43, !dbg !13657

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !13658
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !13618, metadata !DIExpression()), !dbg !13623
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13659
  br i1 %45, label %30, label %29, !dbg !13624, !llvm.loop !13661
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !13663 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13668, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.value(metadata i64 %0, metadata !13670, metadata !DIExpression()), !dbg !13687
  call void @llvm.dbg.value(metadata i32 1000, metadata !13675, metadata !DIExpression()), !dbg !13687
  call void @llvm.dbg.value(metadata i32 10000, metadata !13676, metadata !DIExpression()), !dbg !13687
  call void @llvm.dbg.value(metadata i8 1, metadata !13677, metadata !DIExpression()), !dbg !13687
  call void @llvm.dbg.value(metadata i8 0, metadata !13678, metadata !DIExpression()), !dbg !13687
  call void @llvm.dbg.value(metadata i8 1, metadata !13679, metadata !DIExpression()), !dbg !13687
  call void @llvm.dbg.value(metadata i8 0, metadata !13680, metadata !DIExpression()), !dbg !13687
  call void @llvm.dbg.value(metadata i8 1, metadata !13681, metadata !DIExpression()), !dbg !13687
  call void @llvm.dbg.value(metadata i8 0, metadata !13682, metadata !DIExpression()), !dbg !13687
  call void @llvm.dbg.value(metadata i64 0, metadata !13683, metadata !DIExpression()), !dbg !13687
  call void @llvm.dbg.value(metadata i64 0, metadata !13683, metadata !DIExpression()), !dbg !13687
  %2 = mul i64 %0, 10, !dbg !13689
  ret i64 %2, !dbg !13695
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !13696 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13698, metadata !DIExpression()), !dbg !13702
  call void @llvm.dbg.value(metadata i8* %1, metadata !13699, metadata !DIExpression()), !dbg !13702
  call void @llvm.dbg.value(metadata i8* %2, metadata !13700, metadata !DIExpression()), !dbg !13702
  call void @llvm.dbg.value(metadata i8* %3, metadata !13701, metadata !DIExpression()), !dbg !13702
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13703
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13704
  %7 = load i8, i8* %6, align 4, !dbg !13705
  %8 = or i8 %7, 4, !dbg !13705
  store i8 %8, i8* %6, align 4, !dbg !13705
  tail call void @z_thread_essential_clear() #26, !dbg !13706
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !13707
  unreachable, !dbg !13707
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13708 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13712, metadata !DIExpression()), !dbg !13713
  ret i32 -134, !dbg !13714
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13715 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13719, metadata !DIExpression()), !dbg !13721
  call void @llvm.dbg.value(metadata i32 %1, metadata !13720, metadata !DIExpression()), !dbg !13721
  ret i32 -134, !dbg !13722
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !13723 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13730, metadata !DIExpression()), !dbg !13732
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !13731, metadata !DIExpression()), !dbg !13732
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13733
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !13735
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13732
  ret i32 %6, !dbg !13736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !13737 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13741, metadata !DIExpression()), !dbg !13742
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !13743
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13742
  ret i32 %3, !dbg !13745
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13746 {
  tail call void @sys_clock_idle_exit() #27, !dbg !13748
  ret void, !dbg !13749
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !13750 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13752, metadata !DIExpression()), !dbg !13755
  call void @llvm.dbg.value(metadata i8* %1, metadata !13753, metadata !DIExpression()), !dbg !13755
  call void @llvm.dbg.value(metadata i8* %2, metadata !13754, metadata !DIExpression()), !dbg !13755
  br label %4, !dbg !13756

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13757, !srcloc !13764
  call void @llvm.dbg.value(metadata i32 undef, metadata !13760, metadata !DIExpression()) #25, !dbg !13765
  call void @llvm.dbg.value(metadata i32 undef, metadata !13761, metadata !DIExpression()) #25, !dbg !13765
  tail call fastcc void @k_cpu_idle() #26, !dbg !13766
  br label %4, !dbg !13756, !llvm.loop !13767
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13769 {
  tail call void @arch_cpu_idle() #27, !dbg !13770
  ret void, !dbg !13771
}

; Function Attrs: optsize
declare !dbg !13772 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !13773 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13791, metadata !DIExpression()), !dbg !13795
  call void @llvm.dbg.value(metadata i8* %1, metadata !13792, metadata !DIExpression()), !dbg !13795
  call void @llvm.dbg.value(metadata i32 %2, metadata !13793, metadata !DIExpression()), !dbg !13795
  call void @llvm.dbg.value(metadata i32 %3, metadata !13794, metadata !DIExpression()), !dbg !13795
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13796
  store i32 %2, i32* %5, align 4, !dbg !13797
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13798
  store i32 %3, i32* %6, align 4, !dbg !13799
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13800
  store i8* %1, i8** %7, align 4, !dbg !13801
  %8 = mul i32 %3, %2, !dbg !13802
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !13803
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13804
  store i8* %9, i8** %10, align 4, !dbg !13805
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13806
  store i8* %1, i8** %11, align 4, !dbg !13807
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13808
  store i8* %1, i8** %12, align 4, !dbg !13809
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13810
  store i32 0, i32* %13, align 4, !dbg !13811
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13812
  store i8 0, i8* %14, align 4, !dbg !13813
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13814
  tail call fastcc void @z_waitq_init.126(%struct._wait_q_t* noundef %15) #26, !dbg !13815
  ret void, !dbg !13816
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.126(%struct._wait_q_t* noundef %0) unnamed_addr #4 !dbg !13817 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13821, metadata !DIExpression()), !dbg !13822
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13823
  tail call fastcc void @sys_dlist_init.127(%struct._dnode* noundef %2) #26, !dbg !13824
  ret void, !dbg !13825
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.127(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13826 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13831, metadata !DIExpression()), !dbg !13832
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13833
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13834
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13835
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13836
  ret void, !dbg !13837
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13838 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13842, metadata !DIExpression()), !dbg !13848
  call void @llvm.dbg.value(metadata i32 %1, metadata !13843, metadata !DIExpression()), !dbg !13848
  call void @llvm.dbg.value(metadata i32 %2, metadata !13844, metadata !DIExpression()), !dbg !13848
  %5 = bitcast i32* %4 to i8*, !dbg !13849
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13849
  call void @llvm.dbg.value(metadata i32* %4, metadata !13847, metadata !DIExpression(DW_OP_deref)), !dbg !13848
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !13850
  br i1 %6, label %13, label %7, !dbg !13852

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !13853
  call void @llvm.dbg.value(metadata i32 %8, metadata !13847, metadata !DIExpression()), !dbg !13848
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #26, !dbg !13855
  call void @llvm.dbg.value(metadata i8* %9, metadata !13845, metadata !DIExpression()), !dbg !13848
  %10 = icmp eq i8* %9, null, !dbg !13856
  br i1 %10, label %13, label %11, !dbg !13858

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #26, !dbg !13859
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13861
  store i8 1, i8* %12, align 4, !dbg !13862
  call void @llvm.dbg.value(metadata i32 0, metadata !13846, metadata !DIExpression()), !dbg !13848
  br label %13, !dbg !13863

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !13864
  call void @llvm.dbg.value(metadata i32 %14, metadata !13846, metadata !DIExpression()), !dbg !13848
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13865
  ret i32 %14, !dbg !13866
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !13867 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13872, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i32 %1, metadata !13873, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.value(metadata i32* %2, metadata !13874, metadata !DIExpression()), !dbg !13875
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !13876
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !13876
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !13876
  store i32 %6, i32* %2, align 4, !dbg !13876
  ret i1 %5, !dbg !13877
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !13878 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13882, metadata !DIExpression()), !dbg !13883
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #27, !dbg !13884
  ret i8* %2, !dbg !13885
}

; Function Attrs: optsize
declare !dbg !13886 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !13889 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13893, metadata !DIExpression()), !dbg !13894
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13895
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #26, !dbg !13895
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !13895
  br i1 %4, label %5, label %15, !dbg !13897

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13898
  %7 = load i8, i8* %6, align 4, !dbg !13898
  %8 = and i8 %7, 1, !dbg !13900
  %9 = icmp eq i8 %8, 0, !dbg !13901
  br i1 %9, label %15, label %10, !dbg !13902

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13903
  %12 = load i8*, i8** %11, align 4, !dbg !13903
  tail call void @k_free(i8* noundef %12) #27, !dbg !13905
  %13 = load i8, i8* %6, align 4, !dbg !13906
  %14 = and i8 %13, -2, !dbg !13906
  store i8 %14, i8* %6, align 4, !dbg !13906
  br label %15, !dbg !13907

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !13894
  ret i32 %16, !dbg !13908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #5 !dbg !13909 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13913, metadata !DIExpression()), !dbg !13914
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13915
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !13916
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13917
  ret %struct.k_thread* %4, !dbg !13918
}

; Function Attrs: optsize
declare !dbg !13919 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13920 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13924, metadata !DIExpression()), !dbg !13925
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !13926
  br i1 %2, label %6, label %3, !dbg !13926

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13927
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13927
  br label %6, !dbg !13926

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13926
  ret %struct._dnode* %7, !dbg !13928
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13929 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13933, metadata !DIExpression()), !dbg !13934
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13935
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13935
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13936
  ret i1 %4, !dbg !13937
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13938 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13948, metadata !DIExpression()), !dbg !13956
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13946, metadata !DIExpression()), !dbg !13956
  call void @llvm.dbg.value(metadata i8* %1, metadata !13947, metadata !DIExpression()), !dbg !13956
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13957
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13958, metadata !DIExpression()) #25, !dbg !13965
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13967, !srcloc !13973
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !13967
  call void @llvm.dbg.value(metadata i32 %6, metadata !13970, metadata !DIExpression()) #25, !dbg !13974
  call void @llvm.dbg.value(metadata i32 undef, metadata !13971, metadata !DIExpression()) #25, !dbg !13974
  call void @llvm.dbg.value(metadata i32 %6, metadata !13964, metadata !DIExpression()) #25, !dbg !13965
  call void @llvm.dbg.value(metadata i32 %6, metadata !13950, metadata !DIExpression()), !dbg !13956
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13975
  %8 = load i32, i32* %7, align 4, !dbg !13975
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13977
  %10 = load i32, i32* %9, align 4, !dbg !13977
  %11 = icmp ult i32 %8, %10, !dbg !13978
  br i1 %11, label %12, label %42, !dbg !13979

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13980
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %13) #27, !dbg !13982
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13949, metadata !DIExpression()), !dbg !13956
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !13983
  br i1 %15, label %24, label %16, !dbg !13985

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 0, i32 6, !dbg !13986
  %18 = load i8*, i8** %17, align 4, !dbg !13986
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13988
  %20 = load i32, i32* %19, align 4, !dbg !13988
  %21 = tail call i8* @memcpy(i8* noundef %18, i8* noundef %1, i32 noundef %20) #27, !dbg !13989
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13990, metadata !DIExpression()), !dbg !13996
  call void @llvm.dbg.value(metadata i32 0, metadata !13995, metadata !DIExpression()), !dbg !13996
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 7, i32 1, !dbg !13998
  store i32 0, i32* %22, align 4, !dbg !13999
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %14) #27, !dbg !14000
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14001
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %23) #27, !dbg !14001
  br label %53, !dbg !14002

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14003
  %26 = load i8*, i8** %25, align 4, !dbg !14003
  %27 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14005
  %28 = load i32, i32* %27, align 4, !dbg !14005
  %29 = tail call i8* @memcpy(i8* noundef %26, i8* noundef %1, i32 noundef %28) #27, !dbg !14006
  %30 = load i32, i32* %27, align 4, !dbg !14007
  %31 = load i8*, i8** %25, align 4, !dbg !14008
  %32 = getelementptr inbounds i8, i8* %31, i32 %30, !dbg !14008
  store i8* %32, i8** %25, align 4, !dbg !14008
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14009
  %34 = load i8*, i8** %33, align 4, !dbg !14009
  %35 = icmp eq i8* %32, %34, !dbg !14011
  br i1 %35, label %36, label %39, !dbg !14012

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14013
  %38 = load i8*, i8** %37, align 4, !dbg !14013
  store i8* %38, i8** %25, align 4, !dbg !14015
  br label %39, !dbg !14016

39:                                               ; preds = %36, %24
  %40 = load i32, i32* %7, align 4, !dbg !14017
  %41 = add i32 %40, 1, !dbg !14017
  store i32 %41, i32* %7, align 4, !dbg !14017
  call void @llvm.dbg.value(metadata i32 0, metadata !13955, metadata !DIExpression()), !dbg !13956
  br label %51, !dbg !14018

42:                                               ; preds = %3
  %43 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %43, metadata !13948, metadata !DIExpression()), !dbg !13956
  %44 = icmp eq i64 %43, 0, !dbg !14019
  br i1 %44, label %51, label %45, !dbg !14021

45:                                               ; preds = %42
  %46 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14022
  %47 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %46, i32 0, i32 0, i32 6, !dbg !14024
  store i8* %1, i8** %47, align 4, !dbg !14025
  %48 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14026
  %49 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14027
  %50 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %49, %struct._wait_q_t* noundef %48, [1 x i64] %2) #27, !dbg !14027
  call void @llvm.dbg.value(metadata i32 %50, metadata !13955, metadata !DIExpression()), !dbg !13956
  br label %53, !dbg !14028

51:                                               ; preds = %42, %39
  %52 = phi i32 [ 0, %39 ], [ -35, %42 ], !dbg !14029
  call void @llvm.dbg.value(metadata i32 %52, metadata !13955, metadata !DIExpression()), !dbg !13956
  call void @llvm.dbg.value(metadata i32 %6, metadata !14030, metadata !DIExpression()) #25, !dbg !14036
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14036
  call void @llvm.dbg.value(metadata i32 %6, metadata !14038, metadata !DIExpression()) #25, !dbg !14041
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !14043, !srcloc !14044
  br label %53, !dbg !14045

53:                                               ; preds = %51, %45, %16
  %54 = phi i32 [ 0, %16 ], [ %52, %51 ], [ %50, %45 ], !dbg !13956
  ret i32 %54, !dbg !14046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !14047 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14057, metadata !DIExpression()), !dbg !14059
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14058, metadata !DIExpression()), !dbg !14059
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14060
  %4 = load i32, i32* %3, align 4, !dbg !14060
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14061
  store i32 %4, i32* %5, align 4, !dbg !14062
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !14063
  %7 = load i32, i32* %6, align 4, !dbg !14063
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14064
  store i32 %7, i32* %8, align 4, !dbg !14065
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14066
  %10 = load i32, i32* %9, align 4, !dbg !14066
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14067
  store i32 %10, i32* %11, align 4, !dbg !14068
  ret void, !dbg !14069
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14070 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14076, metadata !DIExpression()), !dbg !14080
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14074, metadata !DIExpression()), !dbg !14080
  call void @llvm.dbg.value(metadata i8* %1, metadata !14075, metadata !DIExpression()), !dbg !14080
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !14081
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13958, metadata !DIExpression()) #25, !dbg !14082
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14084, !srcloc !13973
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !14084
  call void @llvm.dbg.value(metadata i32 %6, metadata !13970, metadata !DIExpression()) #25, !dbg !14086
  call void @llvm.dbg.value(metadata i32 undef, metadata !13971, metadata !DIExpression()) #25, !dbg !14086
  call void @llvm.dbg.value(metadata i32 %6, metadata !13964, metadata !DIExpression()) #25, !dbg !14082
  call void @llvm.dbg.value(metadata i32 %6, metadata !14077, metadata !DIExpression()), !dbg !14080
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14087
  %8 = load i32, i32* %7, align 4, !dbg !14087
  %9 = icmp eq i32 %8, 0, !dbg !14089
  br i1 %9, label %51, label %10, !dbg !14090

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14091
  %12 = load i8*, i8** %11, align 4, !dbg !14091
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14093
  %14 = load i32, i32* %13, align 4, !dbg !14093
  %15 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %12, i32 noundef %14) #27, !dbg !14094
  %16 = load i32, i32* %13, align 4, !dbg !14095
  %17 = load i8*, i8** %11, align 4, !dbg !14096
  %18 = getelementptr inbounds i8, i8* %17, i32 %16, !dbg !14096
  store i8* %18, i8** %11, align 4, !dbg !14096
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !14097
  %20 = load i8*, i8** %19, align 4, !dbg !14097
  %21 = icmp eq i8* %18, %20, !dbg !14099
  br i1 %21, label %22, label %25, !dbg !14100

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14101
  %24 = load i8*, i8** %23, align 4, !dbg !14101
  store i8* %24, i8** %11, align 4, !dbg !14103
  br label %25, !dbg !14104

25:                                               ; preds = %22, %10
  %26 = load i32, i32* %7, align 4, !dbg !14105
  %27 = add i32 %26, -1, !dbg !14105
  store i32 %27, i32* %7, align 4, !dbg !14105
  %28 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14106
  %29 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %28) #27, !dbg !14107
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !14078, metadata !DIExpression()), !dbg !14080
  %30 = icmp eq %struct.k_thread* %29, null, !dbg !14108
  br i1 %30, label %60, label %31, !dbg !14110

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14111
  %33 = load i8*, i8** %32, align 4, !dbg !14111
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 0, i32 6, !dbg !14113
  %35 = load i8*, i8** %34, align 4, !dbg !14113
  %36 = load i32, i32* %13, align 4, !dbg !14114
  %37 = tail call i8* @memcpy(i8* noundef %33, i8* noundef %35, i32 noundef %36) #27, !dbg !14115
  %38 = load i32, i32* %13, align 4, !dbg !14116
  %39 = load i8*, i8** %32, align 4, !dbg !14117
  %40 = getelementptr inbounds i8, i8* %39, i32 %38, !dbg !14117
  store i8* %40, i8** %32, align 4, !dbg !14117
  %41 = load i8*, i8** %19, align 4, !dbg !14118
  %42 = icmp eq i8* %40, %41, !dbg !14120
  br i1 %42, label %43, label %46, !dbg !14121

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !14122
  %45 = load i8*, i8** %44, align 4, !dbg !14122
  store i8* %45, i8** %32, align 4, !dbg !14124
  br label %46, !dbg !14125

46:                                               ; preds = %43, %31
  %47 = load i32, i32* %7, align 4, !dbg !14126
  %48 = add i32 %47, 1, !dbg !14126
  store i32 %48, i32* %7, align 4, !dbg !14126
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !13990, metadata !DIExpression()), !dbg !14127
  call void @llvm.dbg.value(metadata i32 0, metadata !13995, metadata !DIExpression()), !dbg !14127
  %49 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 7, i32 1, !dbg !14129
  store i32 0, i32* %49, align 4, !dbg !14130
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %29) #27, !dbg !14131
  %50 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14132
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %50) #27, !dbg !14132
  br label %62, !dbg !14133

51:                                               ; preds = %3
  %52 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %52, metadata !14076, metadata !DIExpression()), !dbg !14080
  %53 = icmp eq i64 %52, 0, !dbg !14134
  br i1 %53, label %60, label %54, !dbg !14136

54:                                               ; preds = %51
  %55 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14137
  %56 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %55, i32 0, i32 0, i32 6, !dbg !14139
  store i8* %1, i8** %56, align 4, !dbg !14140
  %57 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !14141
  %58 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14142
  %59 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %58, %struct._wait_q_t* noundef %57, [1 x i64] %2) #27, !dbg !14142
  call void @llvm.dbg.value(metadata i32 %59, metadata !14079, metadata !DIExpression()), !dbg !14080
  br label %62, !dbg !14143

60:                                               ; preds = %51, %25
  %61 = phi i32 [ 0, %25 ], [ -35, %51 ], !dbg !14144
  call void @llvm.dbg.value(metadata i32 %61, metadata !14079, metadata !DIExpression()), !dbg !14080
  call void @llvm.dbg.value(metadata i32 %6, metadata !14030, metadata !DIExpression()) #25, !dbg !14145
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14145
  call void @llvm.dbg.value(metadata i32 %6, metadata !14038, metadata !DIExpression()) #25, !dbg !14147
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !14149, !srcloc !14044
  br label %62, !dbg !14150

62:                                               ; preds = %60, %54, %46
  %63 = phi i32 [ 0, %46 ], [ %61, %60 ], [ %59, %54 ], !dbg !14080
  ret i32 %63, !dbg !14151
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !14152 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14156, metadata !DIExpression()), !dbg !14160
  call void @llvm.dbg.value(metadata i8* %1, metadata !14157, metadata !DIExpression()), !dbg !14160
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13958, metadata !DIExpression()) #25, !dbg !14161
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14163, !srcloc !13973
  call void @llvm.dbg.value(metadata i32 undef, metadata !13970, metadata !DIExpression()) #25, !dbg !14165
  call void @llvm.dbg.value(metadata i32 undef, metadata !13971, metadata !DIExpression()) #25, !dbg !14165
  call void @llvm.dbg.value(metadata i32 undef, metadata !13964, metadata !DIExpression()) #25, !dbg !14161
  call void @llvm.dbg.value(metadata i32 undef, metadata !14158, metadata !DIExpression()), !dbg !14160
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14166
  %5 = load i32, i32* %4, align 4, !dbg !14166
  %6 = icmp eq i32 %5, 0, !dbg !14168
  br i1 %6, label %13, label %7, !dbg !14169

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14170
  %9 = load i8*, i8** %8, align 4, !dbg !14170
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !14172
  %11 = load i32, i32* %10, align 4, !dbg !14172
  %12 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %9, i32 noundef %11) #27, !dbg !14173
  call void @llvm.dbg.value(metadata i32 0, metadata !14159, metadata !DIExpression()), !dbg !14160
  br label %13, !dbg !14174

13:                                               ; preds = %2, %7
  %14 = phi i32 [ 0, %7 ], [ -35, %2 ], !dbg !14175
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14163
  call void @llvm.dbg.value(metadata i32 %15, metadata !13970, metadata !DIExpression()) #25, !dbg !14165
  call void @llvm.dbg.value(metadata i32 %15, metadata !13964, metadata !DIExpression()) #25, !dbg !14161
  call void @llvm.dbg.value(metadata i32 %15, metadata !14158, metadata !DIExpression()), !dbg !14160
  call void @llvm.dbg.value(metadata i32 %14, metadata !14159, metadata !DIExpression()), !dbg !14160
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #25, !dbg !14176
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14035, metadata !DIExpression()) #25, !dbg !14176
  call void @llvm.dbg.value(metadata i32 undef, metadata !14038, metadata !DIExpression()) #25, !dbg !14178
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !14180, !srcloc !14044
  ret i32 %14, !dbg !14181
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !14182 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !14186, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13958, metadata !DIExpression()) #25, !dbg !14190
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14192, !srcloc !13973
  call void @llvm.dbg.value(metadata i32 undef, metadata !13970, metadata !DIExpression()) #25, !dbg !14194
  call void @llvm.dbg.value(metadata i32 undef, metadata !13971, metadata !DIExpression()) #25, !dbg !14194
  call void @llvm.dbg.value(metadata i32 undef, metadata !13964, metadata !DIExpression()) #25, !dbg !14190
  call void @llvm.dbg.value(metadata i32 undef, metadata !14187, metadata !DIExpression()), !dbg !14189
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !14195
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14188, metadata !DIExpression()), !dbg !14189
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14196
  br i1 %5, label %11, label %6, !dbg !14197

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13990, metadata !DIExpression()), !dbg !14198
  call void @llvm.dbg.value(metadata i32 -35, metadata !13995, metadata !DIExpression()), !dbg !14198
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !14201
  store i32 -35, i32* %8, align 4, !dbg !14202
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #27, !dbg !14203
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !14195
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14188, metadata !DIExpression()), !dbg !14189
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !14196
  br i1 %10, label %11, label %6, !dbg !14197, !llvm.loop !14204

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !14192
  call void @llvm.dbg.value(metadata i32 %12, metadata !13970, metadata !DIExpression()) #25, !dbg !14194
  call void @llvm.dbg.value(metadata i32 %12, metadata !13964, metadata !DIExpression()) #25, !dbg !14190
  call void @llvm.dbg.value(metadata i32 %12, metadata !14187, metadata !DIExpression()), !dbg !14189
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !14206
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !14207
  store i32 0, i32* %14, align 4, !dbg !14208
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !14209
  %16 = load i8*, i8** %15, align 4, !dbg !14209
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !14210
  store i8* %16, i8** %17, align 4, !dbg !14211
  %18 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !14212
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %13, [1 x i32] %18) #27, !dbg !14212
  ret void, !dbg !14213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14214 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14218, metadata !DIExpression()), !dbg !14222
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14219, metadata !DIExpression()), !dbg !14222
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14223
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !14223
  %5 = load i8, i8* %4, align 2, !dbg !14223
  call void @llvm.dbg.value(metadata i8 %5, metadata !14220, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14222
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14224
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !14224
  %8 = load i8, i8* %7, align 2, !dbg !14224
  call void @llvm.dbg.value(metadata i8 %8, metadata !14221, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !14222
  %9 = icmp eq i8 %8, %5, !dbg !14225
  %10 = sext i8 %5 to i32, !dbg !14227
  %11 = sext i8 %8 to i32, !dbg !14227
  %12 = sub nsw i32 %11, %10, !dbg !14227
  %13 = select i1 %9, i32 0, i32 %12, !dbg !14227
  ret i32 %13, !dbg !14228
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !14229 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14233, metadata !DIExpression()), !dbg !14234
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !14235
  %3 = icmp eq i32 %2, 0, !dbg !14237
  br i1 %3, label %8, label %4, !dbg !14238

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !14239
  %6 = add i32 %5, %2, !dbg !14241
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14242
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !14243
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !14244
  br label %8, !dbg !14245

8:                                                ; preds = %4, %1
  ret void, !dbg !14246
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !14247 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14251, metadata !DIExpression()), !dbg !14253
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14254
  call void @llvm.dbg.value(metadata i32 %1, metadata !14252, metadata !DIExpression()), !dbg !14253
  ret i32 %1, !dbg !14255
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14256 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14260, metadata !DIExpression()), !dbg !14269
  call void @llvm.dbg.value(metadata i32 %1, metadata !14261, metadata !DIExpression()), !dbg !14269
  call void @llvm.dbg.value(metadata i32 0, metadata !14262, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !14278
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14280, !srcloc !14286
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14280
  call void @llvm.dbg.value(metadata i32 %4, metadata !14283, metadata !DIExpression()) #25, !dbg !14287
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !14287
  call void @llvm.dbg.value(metadata i32 %4, metadata !14277, metadata !DIExpression()) #25, !dbg !14278
  call void @llvm.dbg.value(metadata i32 %4, metadata !14268, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata i32 undef, metadata !14262, metadata !DIExpression()), !dbg !14270
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14288
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !14291
  %6 = icmp sgt i32 %0, 0, !dbg !14292
  %7 = icmp sgt i32 %5, 2, !dbg !14294
  %8 = select i1 %7, i32 %5, i32 2, !dbg !14294
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !14294
  store i32 %9, i32* @slice_ticks, align 4, !dbg !14295
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14296
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14297
  call void @llvm.dbg.value(metadata i32 %4, metadata !14298, metadata !DIExpression()) #25, !dbg !14304
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !14304
  call void @llvm.dbg.value(metadata i32 %4, metadata !14306, metadata !DIExpression()) #25, !dbg !14309
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !14311, !srcloc !14312
  call void @llvm.dbg.value(metadata i32 1, metadata !14262, metadata !DIExpression()), !dbg !14270
  call void @llvm.dbg.value(metadata i32 undef, metadata !14262, metadata !DIExpression()), !dbg !14270
  ret void, !dbg !14313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !14314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14316, metadata !DIExpression()), !dbg !14317
  call void @llvm.dbg.value(metadata i32 %0, metadata !14318, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14333
  call void @llvm.dbg.value(metadata i32 1000, metadata !14321, metadata !DIExpression()), !dbg !14333
  call void @llvm.dbg.value(metadata i32 10000, metadata !14322, metadata !DIExpression()), !dbg !14333
  call void @llvm.dbg.value(metadata i8 1, metadata !14323, metadata !DIExpression()), !dbg !14333
  call void @llvm.dbg.value(metadata i1 true, metadata !14324, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14333
  call void @llvm.dbg.value(metadata i1 true, metadata !14325, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14333
  call void @llvm.dbg.value(metadata i8 0, metadata !14326, metadata !DIExpression()), !dbg !14333
  call void @llvm.dbg.value(metadata i1 true, metadata !14327, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14333
  call void @llvm.dbg.value(metadata i1 false, metadata !14328, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14333
  call void @llvm.dbg.value(metadata i64 0, metadata !14329, metadata !DIExpression()), !dbg !14333
  call void @llvm.dbg.value(metadata i64 0, metadata !14329, metadata !DIExpression()), !dbg !14333
  %2 = mul i32 %0, 10, !dbg !14335
  ret i32 %2, !dbg !14341
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14342 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14344, metadata !DIExpression()), !dbg !14346
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !14347
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14349, !srcloc !14286
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14349
  call void @llvm.dbg.value(metadata i32 %3, metadata !14283, metadata !DIExpression()) #25, !dbg !14351
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !14351
  call void @llvm.dbg.value(metadata i32 %3, metadata !14277, metadata !DIExpression()) #25, !dbg !14347
  call void @llvm.dbg.value(metadata i32 %3, metadata !14345, metadata !DIExpression()), !dbg !14346
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14352
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14354
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !14355
  br i1 %6, label %7, label %8, !dbg !14356

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14357
  call void @llvm.dbg.value(metadata i32 %3, metadata !14298, metadata !DIExpression()) #25, !dbg !14359
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !14359
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()) #25, !dbg !14361
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14363, !srcloc !14312
  br label %24, !dbg !14364

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14365
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !14366
  %10 = icmp eq i32 %9, 0, !dbg !14366
  br i1 %10, label %21, label %11, !dbg !14368

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !14369
  br i1 %12, label %13, label %21, !dbg !14370

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14371
  %15 = icmp sgt i32 %14, %0, !dbg !14374
  br i1 %15, label %19, label %16, !dbg !14375

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14376
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !14376
  call void @llvm.dbg.value(metadata i32 %18, metadata !14345, metadata !DIExpression()), !dbg !14346
  br label %22, !dbg !14378

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !14379
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14379
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14381
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !14346
  call void @llvm.dbg.value(metadata i32 %23, metadata !14345, metadata !DIExpression()), !dbg !14346
  call void @llvm.dbg.value(metadata i32 %23, metadata !14298, metadata !DIExpression()) #25, !dbg !14383
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !14383
  call void @llvm.dbg.value(metadata i32 %23, metadata !14306, metadata !DIExpression()) #25, !dbg !14385
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !14387, !srcloc !14312
  br label %24, !dbg !14388

24:                                               ; preds = %22, %7
  ret void, !dbg !14388
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !14389 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14393, metadata !DIExpression()), !dbg !14395
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !14396
  %3 = icmp eq i32 %2, 0, !dbg !14396
  br i1 %3, label %16, label %4, !dbg !14397

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14398
  br i1 %5, label %16, label %6, !dbg !14399

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14400
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14400
  %9 = load i8, i8* %8, align 2, !dbg !14400
  %10 = sext i8 %9 to i32, !dbg !14401
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14402
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !14403
  br i1 %12, label %16, label %13, !dbg !14404

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !14405
  %15 = xor i1 %14, true, !dbg !14406
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14395
  call void @llvm.dbg.value(metadata i1 %17, metadata !14394, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14395
  ret i1 %17, !dbg !14407
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14408 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14412, metadata !DIExpression()), !dbg !14414
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14415
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14413, metadata !DIExpression()), !dbg !14414
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !14416
  br i1 %3, label %5, label %4, !dbg !14418

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !14419
  br label %5, !dbg !14421

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14412, metadata !DIExpression()), !dbg !14414
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14422
  ret i32 %6, !dbg !14423
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14424 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14426, metadata !DIExpression()), !dbg !14428
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14429
  %3 = load i8, i8* %2, align 1, !dbg !14429
  call void @llvm.dbg.value(metadata i8 %3, metadata !14427, metadata !DIExpression()), !dbg !14428
  %4 = and i8 %3, 31, !dbg !14430
  %5 = icmp ne i8 %4, 0, !dbg !14431
  ret i1 %5, !dbg !14432
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14433 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14435, metadata !DIExpression()), !dbg !14436
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14437
  br i1 %2, label %3, label %7, !dbg !14439

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14440, metadata !DIExpression()) #25, !dbg !14443
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14446
  %5 = load i8, i8* %4, align 1, !dbg !14447
  %6 = and i8 %5, 127, !dbg !14447
  store i8 %6, i8* %4, align 1, !dbg !14447
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14448, metadata !DIExpression()) #25, !dbg !14451
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14455
  br label %7, !dbg !14456

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14457, metadata !DIExpression()) #25, !dbg !14460
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14462
  %9 = load i8, i8* %8, align 1, !dbg !14463
  %10 = or i8 %9, -128, !dbg !14463
  store i8 %10, i8* %8, align 1, !dbg !14463
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14464, metadata !DIExpression()) #25, !dbg !14467
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14471, metadata !DIExpression()) #25, !dbg !14479
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14477, metadata !DIExpression()) #25, !dbg !14479
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.132(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14481
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !14478, metadata !DIExpression()) #25, !dbg !14479
  %12 = icmp eq %struct._dnode* %11, null, !dbg !14483
  br i1 %12, label %23, label %13, !dbg !14481

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14478, metadata !DIExpression()) #25, !dbg !14479
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !14485
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !14478, metadata !DIExpression()) #25, !dbg !14479
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #27, !dbg !14486
  %17 = icmp sgt i32 %16, 0, !dbg !14489
  br i1 %17, label %18, label %20, !dbg !14490

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14491
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #27, !dbg !14493
  br label %25, !dbg !14494

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #27, !dbg !14483
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14478, metadata !DIExpression()) #25, !dbg !14479
  %22 = icmp eq %struct._dnode* %21, null, !dbg !14483
  br i1 %22, label %23, label %13, !dbg !14481, !llvm.loop !14495

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14497
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #27, !dbg !14498
  br label %25, !dbg !14499

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14500
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !14501
  %28 = zext i1 %27 to i32, !dbg !14501
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !14502
  ret void, !dbg !14503
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14504 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14506, metadata !DIExpression()), !dbg !14507
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !14508
  ret i1 %2, !dbg !14509
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !14510 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14512, metadata !DIExpression()), !dbg !14514
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14513, metadata !DIExpression()), !dbg !14514
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14515
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !14516
  ret void, !dbg !14517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.132(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !14518 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14522, metadata !DIExpression()), !dbg !14523
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.133(%struct._dnode* noundef %0) #26, !dbg !14524
  br i1 %2, label %6, label %3, !dbg !14524

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14525
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14525
  br label %6, !dbg !14524

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14524
  ret %struct._dnode* %7, !dbg !14526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !14527 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14531, metadata !DIExpression()), !dbg !14535
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14532, metadata !DIExpression()), !dbg !14535
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14536
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14536
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14533, metadata !DIExpression()), !dbg !14535
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14537
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14538
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14539
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14540
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14541
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14542
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14543
  ret void, !dbg !14544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14545 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14549, metadata !DIExpression()), !dbg !14551
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14550, metadata !DIExpression()), !dbg !14551
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14552
  br i1 %3, label %6, label %4, !dbg !14553

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !14554
  br label %6, !dbg !14553

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14553
  ret %struct._dnode* %7, !dbg !14555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !14556 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14560, metadata !DIExpression()), !dbg !14563
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14561, metadata !DIExpression()), !dbg !14563
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14564
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14564
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14562, metadata !DIExpression()), !dbg !14563
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14565
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14566
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14567
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14568
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14569
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14570
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14571
  ret void, !dbg !14572
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14575, metadata !DIExpression()), !dbg !14577
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14578
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14585, metadata !DIExpression()) #25, !dbg !14587
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14588
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14589
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14589
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14576, metadata !DIExpression()), !dbg !14577
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14590, metadata !DIExpression()) #25, !dbg !14596
  call void @llvm.dbg.value(metadata i32 %0, metadata !14595, metadata !DIExpression()) #25, !dbg !14596
  %6 = icmp eq i32 %0, 0, !dbg !14599
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14601
  br i1 %6, label %8, label %15, !dbg !14602

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #27, !dbg !14603
  br i1 %9, label %15, label %10, !dbg !14605

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !14606
  br i1 %11, label %15, label %12, !dbg !14608

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #27, !dbg !14609
  %14 = icmp eq i32 %13, 0, !dbg !14609
  br i1 %14, label %18, label %15, !dbg !14611

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !14612
  br i1 %16, label %18, label %17, !dbg !14615

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !14616
  br label %18, !dbg !14618

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !14601
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14601
  ret void, !dbg !14619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !14620 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14624, metadata !DIExpression()), !dbg !14627
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14625, metadata !DIExpression()), !dbg !14627
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.132(%struct._dnode* noundef %0) #26, !dbg !14628
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14626, metadata !DIExpression()), !dbg !14627
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14625, metadata !DIExpression()), !dbg !14627
  ret %struct.k_thread* %3, !dbg !14629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14630 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14632, metadata !DIExpression()), !dbg !14633
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14634
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !14635
  %4 = xor i1 %3, true, !dbg !14636
  ret i1 %4, !dbg !14637
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14638 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14640, metadata !DIExpression()), !dbg !14641
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14642
  %3 = load i16, i16* %2, align 2, !dbg !14642
  %4 = icmp ult i16 %3, 128, !dbg !14643
  %5 = zext i1 %4 to i32, !dbg !14643
  ret i32 %5, !dbg !14644
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14645 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14651, metadata !DIExpression()), !dbg !14652
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14653
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !14654
  %4 = xor i1 %3, true, !dbg !14655
  ret i1 %4, !dbg !14656
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14657 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14663, metadata !DIExpression()), !dbg !14664
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14665
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14665
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14666
  ret i1 %4, !dbg !14667
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !14668 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14670, metadata !DIExpression()), !dbg !14672
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14671, metadata !DIExpression()), !dbg !14672
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14673
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14673
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14674
  br i1 %5, label %9, label %6, !dbg !14675

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14676
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14676
  br label %9, !dbg !14675

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14675
  ret %struct._dnode* %10, !dbg !14677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.133(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !14678 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14682, metadata !DIExpression()), !dbg !14683
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14684
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14684
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14685
  ret i1 %4, !dbg !14686
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !14687 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14691, metadata !DIExpression()), !dbg !14694
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14695
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14695
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14692, metadata !DIExpression()), !dbg !14694
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14696
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14696
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14693, metadata !DIExpression()), !dbg !14694
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14697
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14698
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14699
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14700
  tail call fastcc void @sys_dnode_init.134(%struct._dnode* noundef %0) #26, !dbg !14701
  ret void, !dbg !14702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.134(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14703 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14705, metadata !DIExpression()), !dbg !14706
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14707
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14708
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14709
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14710
  ret void, !dbg !14711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14712 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14716, metadata !DIExpression()), !dbg !14718
  call void @llvm.dbg.value(metadata i32 128, metadata !14717, metadata !DIExpression()), !dbg !14718
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14719
  %3 = load i8, i8* %2, align 1, !dbg !14719
  %4 = icmp slt i8 %3, 0, !dbg !14720
  ret i1 %4, !dbg !14721
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14726, metadata !DIExpression()), !dbg !14728
  call void @llvm.dbg.value(metadata i32 %1, metadata !14727, metadata !DIExpression()), !dbg !14728
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !14729
  ret i1 %3, !dbg !14730
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !14731 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14733, metadata !DIExpression()), !dbg !14734
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14735
  ret i1 %2, !dbg !14736
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14737 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14739, metadata !DIExpression()), !dbg !14741
  call void @llvm.dbg.value(metadata i32 %1, metadata !14740, metadata !DIExpression()), !dbg !14741
  %3 = icmp slt i32 %0, %1, !dbg !14742
  ret i1 %3, !dbg !14743
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14744 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14746, metadata !DIExpression()), !dbg !14750
  call void @llvm.dbg.value(metadata i32 0, metadata !14747, metadata !DIExpression()), !dbg !14751
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !14752
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14754, !srcloc !14286
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14754
  call void @llvm.dbg.value(metadata i32 %3, metadata !14283, metadata !DIExpression()) #25, !dbg !14756
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !14756
  call void @llvm.dbg.value(metadata i32 %3, metadata !14277, metadata !DIExpression()) #25, !dbg !14752
  call void @llvm.dbg.value(metadata i32 %3, metadata !14749, metadata !DIExpression()), !dbg !14751
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()), !dbg !14751
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14757
  call void @llvm.dbg.value(metadata i32 %3, metadata !14298, metadata !DIExpression()) #25, !dbg !14762
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !14762
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()) #25, !dbg !14764
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14766, !srcloc !14312
  call void @llvm.dbg.value(metadata i32 1, metadata !14747, metadata !DIExpression()), !dbg !14751
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()), !dbg !14751
  ret void, !dbg !14767
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14768 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14770, metadata !DIExpression()), !dbg !14771
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14772
  br i1 %2, label %24, label %3, !dbg !14774

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14775
  br i1 %4, label %5, label %24, !dbg !14776

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14457, metadata !DIExpression()) #25, !dbg !14777
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14780
  %7 = load i8, i8* %6, align 1, !dbg !14781
  %8 = or i8 %7, -128, !dbg !14781
  store i8 %8, i8* %6, align 1, !dbg !14781
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14464, metadata !DIExpression()) #25, !dbg !14782
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14471, metadata !DIExpression()) #25, !dbg !14784
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14477, metadata !DIExpression()) #25, !dbg !14784
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.132(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14786
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !14478, metadata !DIExpression()) #25, !dbg !14784
  %10 = icmp eq %struct._dnode* %9, null, !dbg !14787
  br i1 %10, label %21, label %11, !dbg !14786

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14478, metadata !DIExpression()) #25, !dbg !14784
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !14788
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14478, metadata !DIExpression()) #25, !dbg !14784
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #27, !dbg !14789
  %15 = icmp sgt i32 %14, 0, !dbg !14790
  br i1 %15, label %16, label %18, !dbg !14791

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14792
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #27, !dbg !14793
  br label %23, !dbg !14794

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #27, !dbg !14787
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !14478, metadata !DIExpression()) #25, !dbg !14784
  %20 = icmp eq %struct._dnode* %19, null, !dbg !14787
  br i1 %20, label %21, label %11, !dbg !14786, !llvm.loop !14795

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14797
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #27, !dbg !14798
  br label %23, !dbg !14799

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14800
  br label %24, !dbg !14801

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !14802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14803 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14805, metadata !DIExpression()), !dbg !14806
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14807
  br i1 %2, label %6, label %3, !dbg !14808

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !14809
  %5 = xor i1 %4, true, !dbg !14808
  br label %6, !dbg !14808

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14810
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14811 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14813, metadata !DIExpression()), !dbg !14817
  call void @llvm.dbg.value(metadata i32 0, metadata !14814, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !14819
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14821, !srcloc !14286
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14821
  call void @llvm.dbg.value(metadata i32 %3, metadata !14283, metadata !DIExpression()) #25, !dbg !14823
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !14823
  call void @llvm.dbg.value(metadata i32 %3, metadata !14277, metadata !DIExpression()) #25, !dbg !14819
  call void @llvm.dbg.value(metadata i32 %3, metadata !14816, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()), !dbg !14818
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !14824
  call void @llvm.dbg.value(metadata i32 %3, metadata !14298, metadata !DIExpression()) #25, !dbg !14827
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !14827
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()) #25, !dbg !14829
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14831, !srcloc !14312
  call void @llvm.dbg.value(metadata i32 1, metadata !14814, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.value(metadata i32 undef, metadata !14814, metadata !DIExpression()), !dbg !14818
  ret void, !dbg !14832
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14833 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14835, metadata !DIExpression()), !dbg !14837
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !14838
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14840, !srcloc !14286
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14840
  call void @llvm.dbg.value(metadata i32 %3, metadata !14283, metadata !DIExpression()) #25, !dbg !14842
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !14842
  call void @llvm.dbg.value(metadata i32 %3, metadata !14277, metadata !DIExpression()) #25, !dbg !14838
  call void @llvm.dbg.value(metadata i32 %3, metadata !14836, metadata !DIExpression()), !dbg !14837
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !14843
  br i1 %4, label %5, label %6, !dbg !14845

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14298, metadata !DIExpression()) #25, !dbg !14846
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !14846
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()) #25, !dbg !14849
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14851, !srcloc !14312
  br label %8, !dbg !14852

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.139(%struct.k_thread* noundef %0) #26, !dbg !14853
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14854
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14855
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !14855
  br label %8, !dbg !14856

8:                                                ; preds = %6, %5
  ret void, !dbg !14856
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14857 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14859, metadata !DIExpression()), !dbg !14860
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14861
  %3 = load i8, i8* %2, align 1, !dbg !14861
  %4 = and i8 %3, 4, !dbg !14862
  %5 = icmp eq i8 %4, 0, !dbg !14863
  ret i1 %5, !dbg !14864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.139(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14865 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14867, metadata !DIExpression()), !dbg !14868
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14869
  %3 = load i8, i8* %2, align 1, !dbg !14870
  %4 = and i8 %3, -5, !dbg !14870
  store i8 %4, i8* %2, align 1, !dbg !14870
  ret void, !dbg !14871
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14872 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14875, metadata !DIExpression()), !dbg !14876
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14874, metadata !DIExpression()), !dbg !14876
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !14877
  br i1 %4, label %5, label %9, !dbg !14879

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !14880
  br i1 %6, label %7, label %9, !dbg !14881

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !14882, metadata !DIExpression()) #25, !dbg !14888
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14887, metadata !DIExpression()) #25, !dbg !14888
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !14891
  br label %10, !dbg !14892

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !14298, metadata !DIExpression()) #25, !dbg !14893
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !14893
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()) #25, !dbg !14896
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14898, !srcloc !14312
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !14899
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14904, metadata !DIExpression()), !dbg !14905
  call void @llvm.dbg.value(metadata i32 %0, metadata !14906, metadata !DIExpression()), !dbg !14911
  %2 = icmp eq i32 %0, 0, !dbg !14913
  br i1 %2, label %3, label %6, !dbg !14914

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !14915, !srcloc !14922
  call void @llvm.dbg.value(metadata i32 %4, metadata !14918, metadata !DIExpression()) #25, !dbg !14923
  %5 = icmp eq i32 %4, 0, !dbg !14924
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14905
  ret i1 %7, !dbg !14925
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !14926 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14929
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14928, metadata !DIExpression()), !dbg !14930
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14931
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14932
  ret i1 %3, !dbg !14933
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14934 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14936, metadata !DIExpression()), !dbg !14938
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !14939
  call void @llvm.dbg.value(metadata i32 %2, metadata !14937, metadata !DIExpression()), !dbg !14938
  ret i32 %2, !dbg !14940
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14941 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14943, metadata !DIExpression()), !dbg !14947
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14948
  call void @llvm.dbg.value(metadata i32 0, metadata !14944, metadata !DIExpression()), !dbg !14949
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !14950
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14952, !srcloc !14286
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14952
  call void @llvm.dbg.value(metadata i32 %4, metadata !14283, metadata !DIExpression()) #25, !dbg !14954
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !14954
  call void @llvm.dbg.value(metadata i32 %4, metadata !14277, metadata !DIExpression()) #25, !dbg !14950
  call void @llvm.dbg.value(metadata i32 %4, metadata !14946, metadata !DIExpression()), !dbg !14949
  call void @llvm.dbg.value(metadata i32 undef, metadata !14944, metadata !DIExpression()), !dbg !14949
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14955
  br i1 %5, label %6, label %10, !dbg !14959

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14440, metadata !DIExpression()) #25, !dbg !14960
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14963
  %8 = load i8, i8* %7, align 1, !dbg !14964
  %9 = and i8 %8, 127, !dbg !14964
  store i8 %9, i8* %7, align 1, !dbg !14964
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14448, metadata !DIExpression()) #25, !dbg !14965
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14967
  br label %10, !dbg !14968

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !14969
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14970
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !14971
  %13 = zext i1 %12 to i32, !dbg !14971
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !14972
  call void @llvm.dbg.value(metadata i32 %4, metadata !14298, metadata !DIExpression()) #25, !dbg !14973
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !14973
  call void @llvm.dbg.value(metadata i32 %4, metadata !14306, metadata !DIExpression()) #25, !dbg !14975
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !14977, !srcloc !14312
  call void @llvm.dbg.value(metadata i32 1, metadata !14944, metadata !DIExpression()), !dbg !14949
  call void @llvm.dbg.value(metadata i32 undef, metadata !14944, metadata !DIExpression()), !dbg !14949
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14978
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14980
  br i1 %15, label %16, label %17, !dbg !14981

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14982
  br label %17, !dbg !14984

17:                                               ; preds = %16, %10
  ret void, !dbg !14985
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14986 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14988, metadata !DIExpression()), !dbg !14989
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14990
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !14991
  ret i32 %3, !dbg !14992
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14993 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14995, metadata !DIExpression()), !dbg !14996
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14997
  %3 = load i8, i8* %2, align 1, !dbg !14998
  %4 = or i8 %3, 16, !dbg !14998
  store i8 %4, i8* %2, align 1, !dbg !14998
  ret void, !dbg !14999
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !15000 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15001, !srcloc !14286
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15001
  call void @llvm.dbg.value(metadata i32 %2, metadata !14283, metadata !DIExpression()) #25, !dbg !15003
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !15003
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !15004
  ret void, !dbg !15005
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !15006 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15008, metadata !DIExpression()), !dbg !15009
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !15010
  br i1 %2, label %3, label %5, !dbg !15012

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15013
  br label %6, !dbg !15015

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14306, metadata !DIExpression()) #25, !dbg !15016
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !15019, !srcloc !14312
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !15020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15021 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15023, metadata !DIExpression()), !dbg !15025
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !15026
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15028, !srcloc !14286
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15028
  call void @llvm.dbg.value(metadata i32 %3, metadata !14283, metadata !DIExpression()) #25, !dbg !15030
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !15030
  call void @llvm.dbg.value(metadata i32 %3, metadata !14277, metadata !DIExpression()) #25, !dbg !15026
  call void @llvm.dbg.value(metadata i32 %3, metadata !15024, metadata !DIExpression()), !dbg !15025
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !15031
  br i1 %4, label %6, label %5, !dbg !15033

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14298, metadata !DIExpression()) #25, !dbg !15034
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !15034
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()) #25, !dbg !15037
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15039, !srcloc !14312
  br label %8, !dbg !15040

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !15041
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15042
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15043
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !15043
  br label %8, !dbg !15044

8:                                                ; preds = %6, %5
  ret void, !dbg !15044
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15045 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15047, metadata !DIExpression()), !dbg !15048
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15049
  %3 = load i8, i8* %2, align 1, !dbg !15049
  %4 = and i8 %3, 16, !dbg !15050
  %5 = icmp ne i8 %4, 0, !dbg !15051
  ret i1 %5, !dbg !15052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !15053 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15055, metadata !DIExpression()), !dbg !15056
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15057
  %3 = load i8, i8* %2, align 1, !dbg !15058
  %4 = and i8 %3, -17, !dbg !15058
  store i8 %4, i8* %2, align 1, !dbg !15058
  ret void, !dbg !15059
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15060 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15070, metadata !DIExpression()), !dbg !15074
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15068, metadata !DIExpression()), !dbg !15074
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15069, metadata !DIExpression()), !dbg !15074
  call void @llvm.dbg.value(metadata i32 0, metadata !15071, metadata !DIExpression()), !dbg !15075
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !15076
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15078, !srcloc !14286
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !15078
  call void @llvm.dbg.value(metadata i32 %5, metadata !14283, metadata !DIExpression()) #25, !dbg !15080
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !15080
  call void @llvm.dbg.value(metadata i32 %5, metadata !14277, metadata !DIExpression()) #25, !dbg !15076
  call void @llvm.dbg.value(metadata i32 %5, metadata !15073, metadata !DIExpression()), !dbg !15075
  call void @llvm.dbg.value(metadata i32 undef, metadata !15071, metadata !DIExpression()), !dbg !15075
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !15081
  call void @llvm.dbg.value(metadata i32 %5, metadata !14298, metadata !DIExpression()) #25, !dbg !15084
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !15084
  call void @llvm.dbg.value(metadata i32 %5, metadata !14306, metadata !DIExpression()) #25, !dbg !15086
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !15088, !srcloc !14312
  call void @llvm.dbg.value(metadata i32 1, metadata !15071, metadata !DIExpression()), !dbg !15075
  call void @llvm.dbg.value(metadata i32 undef, metadata !15071, metadata !DIExpression()), !dbg !15075
  ret void, !dbg !15089
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !15090 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15094, metadata !DIExpression()), !dbg !15095
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15092, metadata !DIExpression()), !dbg !15095
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15093, metadata !DIExpression()), !dbg !15095
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #26, !dbg !15096
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !15097
  ret void, !dbg !15098
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !15099 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15103, metadata !DIExpression()), !dbg !15105
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15104, metadata !DIExpression()), !dbg !15105
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !15106
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !15107
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !15108
  br i1 %3, label %21, label %4, !dbg !15110

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15111
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !15113
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !15114
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14471, metadata !DIExpression()) #25, !dbg !15115
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14477, metadata !DIExpression()) #25, !dbg !15115
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.132(%struct._dnode* noundef nonnull %6) #27, !dbg !15117
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14478, metadata !DIExpression()) #25, !dbg !15115
  %8 = icmp eq %struct._dnode* %7, null, !dbg !15118
  br i1 %8, label %19, label %9, !dbg !15117

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14478, metadata !DIExpression()) #25, !dbg !15115
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !15119
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !14478, metadata !DIExpression()) #25, !dbg !15115
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #27, !dbg !15120
  %13 = icmp sgt i32 %12, 0, !dbg !15121
  br i1 %13, label %14, label %16, !dbg !15122

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15123
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #27, !dbg !15124
  br label %21, !dbg !15125

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #27, !dbg !15118
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14478, metadata !DIExpression()) #25, !dbg !15115
  %18 = icmp eq %struct._dnode* %17, null, !dbg !15118
  br i1 %18, label %19, label %9, !dbg !15117, !llvm.loop !15126

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15128
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #27, !dbg !15129
  br label %21, !dbg !15130

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !15131
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15132 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15137, metadata !DIExpression()), !dbg !15138
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15136, metadata !DIExpression()), !dbg !15138
  %4 = icmp eq i64 %3, -1, !dbg !15139
  br i1 %4, label %6, label %5, !dbg !15141

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.142(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !15142
  br label %6, !dbg !15144

6:                                                ; preds = %5, %2
  ret void, !dbg !15145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.142(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15146 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15149, metadata !DIExpression()), !dbg !15150
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15148, metadata !DIExpression()), !dbg !15150
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15151
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !15152
  ret void, !dbg !15153
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15154 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15156, metadata !DIExpression()), !dbg !15164
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15165
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15165
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15157, metadata !DIExpression()), !dbg !15164
  call void @llvm.dbg.value(metadata i32 0, metadata !15158, metadata !DIExpression()), !dbg !15166
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !15167
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15169, !srcloc !14286
  call void @llvm.dbg.value(metadata i32 undef, metadata !14283, metadata !DIExpression()) #25, !dbg !15171
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !15171
  call void @llvm.dbg.value(metadata i32 undef, metadata !14277, metadata !DIExpression()) #25, !dbg !15167
  call void @llvm.dbg.value(metadata i32 undef, metadata !15160, metadata !DIExpression()), !dbg !15166
  call void @llvm.dbg.value(metadata i32 undef, metadata !15158, metadata !DIExpression()), !dbg !15166
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15172
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !15173
  %7 = load i8, i8* %6, align 1, !dbg !15173
  %8 = and i8 %7, 40, !dbg !15174
  %9 = icmp eq i8 %8, 0, !dbg !15174
  call void @llvm.dbg.value(metadata i1 %9, metadata !15161, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15175
  br i1 %9, label %10, label %17, !dbg !15176

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15177
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !15177
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !15177
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !15181
  br i1 %14, label %16, label %15, !dbg !15182

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !15183
  br label %16, !dbg !15185

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.139(%struct.k_thread* noundef nonnull %3) #26, !dbg !15186
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !15187
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !15188
  br label %17, !dbg !15189

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !15169
  call void @llvm.dbg.value(metadata i32 %18, metadata !14283, metadata !DIExpression()) #25, !dbg !15171
  call void @llvm.dbg.value(metadata i32 %18, metadata !14277, metadata !DIExpression()) #25, !dbg !15167
  call void @llvm.dbg.value(metadata i32 %18, metadata !15160, metadata !DIExpression()), !dbg !15166
  call void @llvm.dbg.value(metadata i32 undef, metadata !14298, metadata !DIExpression()) #25, !dbg !15190
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !15190
  call void @llvm.dbg.value(metadata i32 undef, metadata !14306, metadata !DIExpression()) #25, !dbg !15192
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !15194, !srcloc !14312
  call void @llvm.dbg.value(metadata i32 1, metadata !15158, metadata !DIExpression()), !dbg !15166
  call void @llvm.dbg.value(metadata i32 undef, metadata !15158, metadata !DIExpression()), !dbg !15166
  ret void, !dbg !15195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !15196 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15198, metadata !DIExpression()), !dbg !15199
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !15200
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !15201
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15202
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !15203
  ret void, !dbg !15204
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !15205 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15207, metadata !DIExpression()), !dbg !15208
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15209
  %3 = load i8, i8* %2, align 1, !dbg !15210
  %4 = and i8 %3, -3, !dbg !15210
  store i8 %4, i8* %2, align 1, !dbg !15210
  ret void, !dbg !15211
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15212 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15214, metadata !DIExpression()), !dbg !15215
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15216
  br i1 %2, label %3, label %7, !dbg !15218

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14440, metadata !DIExpression()) #25, !dbg !15219
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15222
  %5 = load i8, i8* %4, align 1, !dbg !15223
  %6 = and i8 %5, 127, !dbg !15223
  store i8 %6, i8* %4, align 1, !dbg !15223
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14448, metadata !DIExpression()) #25, !dbg !15224
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15226
  br label %7, !dbg !15227

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15228
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15229
  %10 = zext i1 %9 to i32, !dbg !15229
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !15230
  ret void, !dbg !15231
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !15232 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15234, metadata !DIExpression()), !dbg !15235
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15236
  %3 = load i8, i8* %2, align 1, !dbg !15237
  %4 = or i8 %3, 2, !dbg !15237
  store i8 %4, i8* %2, align 1, !dbg !15237
  ret void, !dbg !15238
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #24 !dbg !15239 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15241, metadata !DIExpression()), !dbg !15245
  call void @llvm.dbg.value(metadata i32 0, metadata !15242, metadata !DIExpression()), !dbg !15246
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !15247
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15249, !srcloc !14286
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15249
  call void @llvm.dbg.value(metadata i32 %3, metadata !14283, metadata !DIExpression()) #25, !dbg !15251
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !15251
  call void @llvm.dbg.value(metadata i32 %3, metadata !14277, metadata !DIExpression()) #25, !dbg !15247
  call void @llvm.dbg.value(metadata i32 %3, metadata !15244, metadata !DIExpression()), !dbg !15246
  call void @llvm.dbg.value(metadata i32 undef, metadata !15242, metadata !DIExpression()), !dbg !15246
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !15252
  call void @llvm.dbg.value(metadata i32 %3, metadata !14298, metadata !DIExpression()) #25, !dbg !15255
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !15255
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()) #25, !dbg !15257
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15259, !srcloc !14312
  call void @llvm.dbg.value(metadata i32 1, metadata !15242, metadata !DIExpression()), !dbg !15246
  call void @llvm.dbg.value(metadata i32 undef, metadata !15242, metadata !DIExpression()), !dbg !15246
  ret void, !dbg !15260
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15261 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15267, metadata !DIExpression()), !dbg !15272
  call void @llvm.dbg.value(metadata i32 %0, metadata !15265, metadata !DIExpression()), !dbg !15272
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15266, metadata !DIExpression()), !dbg !15272
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15273
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !15274
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15275
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15276
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !15277
  call void @llvm.dbg.value(metadata i32 %6, metadata !15268, metadata !DIExpression()), !dbg !15272
  call void @llvm.dbg.value(metadata i32 0, metadata !15269, metadata !DIExpression()), !dbg !15278
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !15279
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15281, !srcloc !14286
  call void @llvm.dbg.value(metadata i32 undef, metadata !14283, metadata !DIExpression()) #25, !dbg !15283
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !15283
  call void @llvm.dbg.value(metadata i32 undef, metadata !14277, metadata !DIExpression()) #25, !dbg !15279
  call void @llvm.dbg.value(metadata i32 undef, metadata !15271, metadata !DIExpression()), !dbg !15278
  call void @llvm.dbg.value(metadata i32 undef, metadata !15269, metadata !DIExpression()), !dbg !15278
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15284
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15288
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !15289
  br i1 %10, label %11, label %12, !dbg !15290

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15291
  br label %12, !dbg !15293

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !15281
  call void @llvm.dbg.value(metadata i32 %13, metadata !14283, metadata !DIExpression()) #25, !dbg !15283
  call void @llvm.dbg.value(metadata i32 %13, metadata !14277, metadata !DIExpression()) #25, !dbg !15279
  call void @llvm.dbg.value(metadata i32 %13, metadata !15271, metadata !DIExpression()), !dbg !15278
  call void @llvm.dbg.value(metadata i32 undef, metadata !14298, metadata !DIExpression()) #25, !dbg !15294
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !15294
  call void @llvm.dbg.value(metadata i32 undef, metadata !14306, metadata !DIExpression()) #25, !dbg !15296
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !15298, !srcloc !14312
  call void @llvm.dbg.value(metadata i32 1, metadata !15269, metadata !DIExpression()), !dbg !15278
  call void @llvm.dbg.value(metadata i32 undef, metadata !15269, metadata !DIExpression()), !dbg !15278
  ret i32 %6, !dbg !15299
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15300 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15305, metadata !DIExpression()), !dbg !15308
  call void @llvm.dbg.value(metadata i64 undef, metadata !15307, metadata !DIExpression()), !dbg !15308
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15304, metadata !DIExpression()), !dbg !15308
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15306, metadata !DIExpression()), !dbg !15308
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15309
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15310
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !15311
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15313, !srcloc !14286
  call void @llvm.dbg.value(metadata i32 undef, metadata !14283, metadata !DIExpression()) #25, !dbg !15315
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !15315
  call void @llvm.dbg.value(metadata i32 undef, metadata !14277, metadata !DIExpression()) #25, !dbg !15311
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15316
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !15317
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !14882, metadata !DIExpression()) #25, !dbg !15318
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14887, metadata !DIExpression()) #25, !dbg !15318
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #27, !dbg !15320
  ret i32 %9, !dbg !15321
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15322 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15326, metadata !DIExpression()), !dbg !15331
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15327, metadata !DIExpression()), !dbg !15331
  call void @llvm.dbg.value(metadata i32 0, metadata !15328, metadata !DIExpression()), !dbg !15332
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !15333
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15335, !srcloc !14286
  call void @llvm.dbg.value(metadata i32 undef, metadata !14283, metadata !DIExpression()) #25, !dbg !15337
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !15337
  call void @llvm.dbg.value(metadata i32 undef, metadata !14277, metadata !DIExpression()) #25, !dbg !15333
  call void @llvm.dbg.value(metadata i32 undef, metadata !15330, metadata !DIExpression()), !dbg !15332
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15327, metadata !DIExpression()), !dbg !15331
  call void @llvm.dbg.value(metadata i32 undef, metadata !15328, metadata !DIExpression()), !dbg !15332
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !15338
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15327, metadata !DIExpression()), !dbg !15331
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15341
  br i1 %5, label %7, label %6, !dbg !15343

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15344
  br label %7, !dbg !15346

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15335
  call void @llvm.dbg.value(metadata i32 %8, metadata !14283, metadata !DIExpression()) #25, !dbg !15337
  call void @llvm.dbg.value(metadata i32 %8, metadata !14277, metadata !DIExpression()) #25, !dbg !15333
  call void @llvm.dbg.value(metadata i32 %8, metadata !15330, metadata !DIExpression()), !dbg !15332
  call void @llvm.dbg.value(metadata i32 undef, metadata !14298, metadata !DIExpression()) #25, !dbg !15347
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !15347
  call void @llvm.dbg.value(metadata i32 undef, metadata !14306, metadata !DIExpression()) #25, !dbg !15349
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !15351, !srcloc !14312
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15327, metadata !DIExpression()), !dbg !15331
  call void @llvm.dbg.value(metadata i32 undef, metadata !15328, metadata !DIExpression()), !dbg !15332
  ret %struct.k_thread* %4, !dbg !15352
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15353 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15355, metadata !DIExpression()), !dbg !15360
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15356, metadata !DIExpression()), !dbg !15360
  call void @llvm.dbg.value(metadata i32 0, metadata !15357, metadata !DIExpression()), !dbg !15361
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !15362
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15364, !srcloc !14286
  call void @llvm.dbg.value(metadata i32 undef, metadata !14283, metadata !DIExpression()) #25, !dbg !15366
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !15366
  call void @llvm.dbg.value(metadata i32 undef, metadata !14277, metadata !DIExpression()) #25, !dbg !15362
  call void @llvm.dbg.value(metadata i32 undef, metadata !15359, metadata !DIExpression()), !dbg !15361
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15356, metadata !DIExpression()), !dbg !15360
  call void @llvm.dbg.value(metadata i32 undef, metadata !15357, metadata !DIExpression()), !dbg !15361
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !15367
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15356, metadata !DIExpression()), !dbg !15360
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !15370
  br i1 %5, label %8, label %6, !dbg !15372

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15373
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !15375
  br label %8, !dbg !15376

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15364
  call void @llvm.dbg.value(metadata i32 %9, metadata !14283, metadata !DIExpression()) #25, !dbg !15366
  call void @llvm.dbg.value(metadata i32 %9, metadata !14277, metadata !DIExpression()) #25, !dbg !15362
  call void @llvm.dbg.value(metadata i32 %9, metadata !15359, metadata !DIExpression()), !dbg !15361
  call void @llvm.dbg.value(metadata i32 undef, metadata !14298, metadata !DIExpression()) #25, !dbg !15377
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !15377
  call void @llvm.dbg.value(metadata i32 undef, metadata !14306, metadata !DIExpression()) #25, !dbg !15379
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15381, !srcloc !14312
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15356, metadata !DIExpression()), !dbg !15360
  call void @llvm.dbg.value(metadata i32 undef, metadata !15357, metadata !DIExpression()), !dbg !15361
  ret %struct.k_thread* %4, !dbg !15382
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15383 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15385, metadata !DIExpression()), !dbg !15386
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15241, metadata !DIExpression()) #25, !dbg !15387
  call void @llvm.dbg.value(metadata i32 0, metadata !15242, metadata !DIExpression()) #25, !dbg !15389
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !15390
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15392, !srcloc !14286
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15392
  call void @llvm.dbg.value(metadata i32 %3, metadata !14283, metadata !DIExpression()) #25, !dbg !15394
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !15394
  call void @llvm.dbg.value(metadata i32 %3, metadata !14277, metadata !DIExpression()) #25, !dbg !15390
  call void @llvm.dbg.value(metadata i32 %3, metadata !15244, metadata !DIExpression()) #25, !dbg !15389
  call void @llvm.dbg.value(metadata i32 undef, metadata !15242, metadata !DIExpression()) #25, !dbg !15389
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !15395
  call void @llvm.dbg.value(metadata i32 %3, metadata !14298, metadata !DIExpression()) #25, !dbg !15396
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !15396
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()) #25, !dbg !15398
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15400, !srcloc !14312
  call void @llvm.dbg.value(metadata i32 1, metadata !15242, metadata !DIExpression()) #25, !dbg !15389
  call void @llvm.dbg.value(metadata i32 undef, metadata !15242, metadata !DIExpression()) #25, !dbg !15389
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15401
  ret void, !dbg !15402
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15403 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15405, metadata !DIExpression()), !dbg !15411
  call void @llvm.dbg.value(metadata i32 %1, metadata !15406, metadata !DIExpression()), !dbg !15411
  call void @llvm.dbg.value(metadata i8 0, metadata !15407, metadata !DIExpression()), !dbg !15411
  call void @llvm.dbg.value(metadata i32 0, metadata !15408, metadata !DIExpression()), !dbg !15412
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !15413
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15415, !srcloc !14286
  call void @llvm.dbg.value(metadata i32 undef, metadata !14283, metadata !DIExpression()) #25, !dbg !15417
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !15417
  call void @llvm.dbg.value(metadata i32 undef, metadata !14277, metadata !DIExpression()) #25, !dbg !15413
  call void @llvm.dbg.value(metadata i32 undef, metadata !15410, metadata !DIExpression()), !dbg !15412
  call void @llvm.dbg.value(metadata i8 poison, metadata !15407, metadata !DIExpression()), !dbg !15411
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()), !dbg !15412
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !15418
  call void @llvm.dbg.value(metadata i1 %6, metadata !15407, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15411
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !15421

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14440, metadata !DIExpression()) #25, !dbg !15422
  %11 = load i8, i8* %4, align 1, !dbg !15428
  %12 = and i8 %11, 127, !dbg !15428
  store i8 %12, i8* %4, align 1, !dbg !15428
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14448, metadata !DIExpression()) #25, !dbg !15429
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15431
  store i8 %9, i8* %8, align 2, !dbg !15432
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14457, metadata !DIExpression()) #25, !dbg !15433
  %13 = load i8, i8* %4, align 1, !dbg !15435
  %14 = or i8 %13, -128, !dbg !15435
  store i8 %14, i8* %4, align 1, !dbg !15435
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14464, metadata !DIExpression()) #25, !dbg !15436
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14471, metadata !DIExpression()) #25, !dbg !15438
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14477, metadata !DIExpression()) #25, !dbg !15438
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.132(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15440
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14478, metadata !DIExpression()) #25, !dbg !15438
  %16 = icmp eq %struct._dnode* %15, null, !dbg !15441
  br i1 %16, label %26, label %17, !dbg !15440

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !14478, metadata !DIExpression()) #25, !dbg !15438
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !15442
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !14478, metadata !DIExpression()) #25, !dbg !15438
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #27, !dbg !15443
  %21 = icmp sgt i32 %20, 0, !dbg !15444
  br i1 %21, label %22, label %23, !dbg !15445

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #27, !dbg !15446
  br label %27, !dbg !15447

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #27, !dbg !15441
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14478, metadata !DIExpression()) #25, !dbg !15438
  %25 = icmp eq %struct._dnode* %24, null, !dbg !15441
  br i1 %25, label %26, label %17, !dbg !15440, !llvm.loop !15448

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #27, !dbg !15450
  br label %27, !dbg !15451

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15452
  br label %29, !dbg !15453

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !15454
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !15415
  call void @llvm.dbg.value(metadata i32 %30, metadata !14283, metadata !DIExpression()) #25, !dbg !15417
  call void @llvm.dbg.value(metadata i32 %30, metadata !14277, metadata !DIExpression()) #25, !dbg !15413
  call void @llvm.dbg.value(metadata i32 %30, metadata !15410, metadata !DIExpression()), !dbg !15412
  call void @llvm.dbg.value(metadata i32 undef, metadata !14298, metadata !DIExpression()) #25, !dbg !15456
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !15456
  call void @llvm.dbg.value(metadata i32 undef, metadata !14306, metadata !DIExpression()) #25, !dbg !15458
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !15460, !srcloc !14312
  call void @llvm.dbg.value(metadata i8 poison, metadata !15407, metadata !DIExpression()), !dbg !15411
  call void @llvm.dbg.value(metadata i32 undef, metadata !15408, metadata !DIExpression()), !dbg !15412
  ret i1 %6, !dbg !15461
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15462 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15466, metadata !DIExpression()), !dbg !15469
  call void @llvm.dbg.value(metadata i32 %1, metadata !15467, metadata !DIExpression()), !dbg !15469
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15470
  call void @llvm.dbg.value(metadata i1 %3, metadata !15468, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15469
  br i1 %3, label %4, label %12, !dbg !15471

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15473
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15474
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15474
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15474
  %9 = load i8, i8* %8, align 1, !dbg !15474
  %10 = icmp eq i8 %9, 0, !dbg !15475
  br i1 %10, label %11, label %12, !dbg !15476

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15477
  br label %12, !dbg !15479

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15480
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15481 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15483, metadata !DIExpression()), !dbg !15486
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !15487
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15489, !srcloc !14286
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15489
  call void @llvm.dbg.value(metadata i32 %2, metadata !14283, metadata !DIExpression()) #25, !dbg !15491
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !15491
  call void @llvm.dbg.value(metadata i32 %2, metadata !14277, metadata !DIExpression()) #25, !dbg !15487
  call void @llvm.dbg.value(metadata i32 %2, metadata !15485, metadata !DIExpression()), !dbg !15486
  call void @llvm.dbg.value(metadata i32 undef, metadata !15483, metadata !DIExpression()), !dbg !15486
  tail call fastcc void @z_sched_lock() #26, !dbg !15492
  call void @llvm.dbg.value(metadata i32 %2, metadata !14298, metadata !DIExpression()) #25, !dbg !15495
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !15495
  call void @llvm.dbg.value(metadata i32 %2, metadata !14306, metadata !DIExpression()) #25, !dbg !15497
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !15499, !srcloc !14312
  call void @llvm.dbg.value(metadata i32 1, metadata !15483, metadata !DIExpression()), !dbg !15486
  call void @llvm.dbg.value(metadata i32 undef, metadata !15483, metadata !DIExpression()), !dbg !15486
  ret void, !dbg !15500
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15501 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15502
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15503
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !15503
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !15503
  %5 = load i8, i8* %4, align 1, !dbg !15504
  %6 = add i8 %5, -1, !dbg !15504
  store i8 %6, i8* %4, align 1, !dbg !15504
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15505, !srcloc !15507
  ret void, !dbg !15508
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15509 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15511, metadata !DIExpression()), !dbg !15514
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !15515
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15517, !srcloc !14286
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15517
  call void @llvm.dbg.value(metadata i32 %2, metadata !14283, metadata !DIExpression()) #25, !dbg !15519
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !15519
  call void @llvm.dbg.value(metadata i32 %2, metadata !14277, metadata !DIExpression()) #25, !dbg !15515
  call void @llvm.dbg.value(metadata i32 %2, metadata !15513, metadata !DIExpression()), !dbg !15514
  call void @llvm.dbg.value(metadata i32 undef, metadata !15511, metadata !DIExpression()), !dbg !15514
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15520
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !15523
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !15523
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !15523
  %7 = load i8, i8* %6, align 1, !dbg !15524
  %8 = add i8 %7, 1, !dbg !15524
  store i8 %8, i8* %6, align 1, !dbg !15524
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !15525
  call void @llvm.dbg.value(metadata i32 %2, metadata !14298, metadata !DIExpression()) #25, !dbg !15526
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !15526
  call void @llvm.dbg.value(metadata i32 %2, metadata !14306, metadata !DIExpression()) #25, !dbg !15528
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !15530, !srcloc !14312
  call void @llvm.dbg.value(metadata i32 1, metadata !15511, metadata !DIExpression()), !dbg !15514
  call void @llvm.dbg.value(metadata i32 undef, metadata !15511, metadata !DIExpression()), !dbg !15514
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15531
  ret void, !dbg !15532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !15533 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15534
  ret %struct.k_thread* %1, !dbg !15535
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !15536 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15540, metadata !DIExpression()), !dbg !15545
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15541, metadata !DIExpression()), !dbg !15545
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15546
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15542, metadata !DIExpression()), !dbg !15545
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15547
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15543, metadata !DIExpression()), !dbg !15545
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !15548
  call void @llvm.dbg.value(metadata i32 %5, metadata !15544, metadata !DIExpression()), !dbg !15545
  %6 = icmp sgt i32 %5, 0, !dbg !15549
  br i1 %6, label %17, label %7, !dbg !15551

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15552
  br i1 %8, label %17, label %9, !dbg !15554

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15555
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15555
  %12 = load i32, i32* %11, align 8, !dbg !15555
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15557
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15557
  %15 = load i32, i32* %14, align 8, !dbg !15557
  %16 = icmp ult i32 %12, %15, !dbg !15558
  br label %17, !dbg !15559

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15560
  ret i1 %18, !dbg !15561
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15562 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15579, metadata !DIExpression()), !dbg !15594
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15580, metadata !DIExpression()), !dbg !15594
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15595
  %5 = load i32, i32* %4, align 4, !dbg !15596
  %6 = add nsw i32 %5, 1, !dbg !15596
  store i32 %6, i32* %4, align 4, !dbg !15596
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15597
  store i32 %5, i32* %7, align 8, !dbg !15598
  %8 = load i32, i32* %4, align 4, !dbg !15599
  %9 = icmp eq i32 %8, 0, !dbg !15600
  br i1 %9, label %10, label %32, !dbg !15601

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15602
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !15602
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15582, metadata !DIExpression()), !dbg !15602
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15602
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15602
  %14 = load i32, i32* %13, align 4, !dbg !15602
  %15 = shl i32 %14, 2, !dbg !15602
  %16 = alloca i8, i32 %15, align 8, !dbg !15602
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15602
  store i8* %16, i8** %17, align 4, !dbg !15602
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15602
  %19 = alloca i8, i32 %14, align 8, !dbg !15602
  store i8* %19, i8** %18, align 4, !dbg !15602
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15602
  store i32 -1, i32* %20, align 4, !dbg !15602
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !15603
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15591, metadata !DIExpression()), !dbg !15604
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !15581, metadata !DIExpression()), !dbg !15594
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !15605
  br i1 %22, label %23, label %24, !dbg !15602

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !15605
  br label %32, !dbg !15606

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !15581, metadata !DIExpression()), !dbg !15594
  %26 = load i32, i32* %4, align 4, !dbg !15607
  %27 = add nsw i32 %26, 1, !dbg !15607
  store i32 %27, i32* %4, align 4, !dbg !15607
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !15609
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !15609
  store i32 %26, i32* %29, align 8, !dbg !15610
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !15603
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15591, metadata !DIExpression()), !dbg !15604
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !15581, metadata !DIExpression()), !dbg !15594
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !15605
  br i1 %31, label %23, label %24, !dbg !15602, !llvm.loop !15611

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15613
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15614
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #27, !dbg !15615
  ret void, !dbg !15616
}

; Function Attrs: optsize
declare !dbg !15617 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15622 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15625 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15627, metadata !DIExpression()), !dbg !15629
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15628, metadata !DIExpression()), !dbg !15629
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15630
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15631
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #27, !dbg !15632
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15633
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !15633
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !15635
  br i1 %7, label %8, label %10, !dbg !15636

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15637
  store i32 0, i32* %9, align 4, !dbg !15639
  br label %10, !dbg !15640

10:                                               ; preds = %8, %2
  ret void, !dbg !15641
}

; Function Attrs: optsize
declare !dbg !15642 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15643 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15647, metadata !DIExpression()), !dbg !15650
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15648, metadata !DIExpression()), !dbg !15650
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15651
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !15652
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15649, metadata !DIExpression()), !dbg !15650
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15648, metadata !DIExpression()), !dbg !15650
  ret %struct.k_thread* %4, !dbg !15653
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15654 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15658, metadata !DIExpression()), !dbg !15659
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !15660
  ret %struct.rbnode* %2, !dbg !15661
}

; Function Attrs: optsize
declare !dbg !15662 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !15665 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15675, metadata !DIExpression()), !dbg !15679
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15680
  %3 = load i32, i32* %2, align 4, !dbg !15680
  %4 = icmp eq i32 %3, 0, !dbg !15682
  br i1 %4, label %10, label %5, !dbg !15683

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15676, metadata !DIExpression()), !dbg !15679
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15684, !range !4068
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15685
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15677, metadata !DIExpression()), !dbg !15679
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.132(%struct._dnode* noundef %7) #26, !dbg !15686
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15678, metadata !DIExpression()), !dbg !15679
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15676, metadata !DIExpression()), !dbg !15679
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15679
  ret %struct.k_thread* %11, !dbg !15687
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15688 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15692, metadata !DIExpression()), !dbg !15695
  call void @llvm.dbg.value(metadata i32 0, metadata !15693, metadata !DIExpression()), !dbg !15695
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.153(%struct._wait_q_t* noundef %0) #26, !dbg !15696
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15694, metadata !DIExpression()), !dbg !15695
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15697
  br i1 %3, label %8, label %4, !dbg !15698

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15699
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15701
  call void @llvm.dbg.value(metadata i32 1, metadata !15693, metadata !DIExpression()), !dbg !15695
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.153(%struct._wait_q_t* noundef %0) #26, !dbg !15696
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15694, metadata !DIExpression()), !dbg !15695
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15697
  br i1 %7, label %8, label %4, !dbg !15698, !llvm.loop !15702

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15695
  ret i32 %9, !dbg !15704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.153(%struct._wait_q_t* noundef readonly %0) unnamed_addr #5 !dbg !15705 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15707, metadata !DIExpression()), !dbg !15708
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15709
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.132(%struct._dnode* noundef %2) #26, !dbg !15710
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15711
  ret %struct.k_thread* %4, !dbg !15712
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !15713 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15722, metadata !DIExpression()), !dbg !15723
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15724
  tail call fastcc void @sys_dlist_init.154(%struct._dnode* noundef nonnull %2) #26, !dbg !15725
  ret void, !dbg !15726
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.154(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15727 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15731, metadata !DIExpression()), !dbg !15732
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15733
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15734
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15735
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15736
  ret void, !dbg !15737
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15738 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !15739
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !15740
  ret void, !dbg !15741
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !15742 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15747, metadata !DIExpression()), !dbg !15748
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15749
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15749
  %4 = load i8, i8* %3, align 2, !dbg !15749
  %5 = sext i8 %4 to i32, !dbg !15750
  ret i32 %5, !dbg !15751
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15752 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15756, metadata !DIExpression()), !dbg !15759
  call void @llvm.dbg.value(metadata i32 %1, metadata !15757, metadata !DIExpression()), !dbg !15759
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15758, metadata !DIExpression()), !dbg !15759
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15760
  ret void, !dbg !15761
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15762 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !15763
  br i1 %1, label %8, label %2, !dbg !15764

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !15765
  br i1 %3, label %8, label %4, !dbg !15766

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15767
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !15768
  %7 = xor i1 %6, true, !dbg !15766
  br label %8, !dbg !15766

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !15770 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15771, !range !6512
  %2 = icmp eq i8 %1, 0, !dbg !15771
  ret i1 %2, !dbg !15772
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15773 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !15776
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15778, !srcloc !14286
  call void @llvm.dbg.value(metadata i32 undef, metadata !14283, metadata !DIExpression()) #25, !dbg !15780
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !15780
  call void @llvm.dbg.value(metadata i32 undef, metadata !14277, metadata !DIExpression()) #25, !dbg !15776
  call void @llvm.dbg.value(metadata i32 undef, metadata !15775, metadata !DIExpression()), !dbg !15781
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15782
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14440, metadata !DIExpression()) #25, !dbg !15785
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !15787
  %4 = load i8, i8* %3, align 1, !dbg !15788
  %5 = and i8 %4, 127, !dbg !15788
  store i8 %5, i8* %3, align 1, !dbg !15788
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14448, metadata !DIExpression()) #25, !dbg !15789
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #27, !dbg !15791
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15792
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14457, metadata !DIExpression()) #25, !dbg !15793
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !15795
  %8 = load i8, i8* %7, align 1, !dbg !15796
  %9 = or i8 %8, -128, !dbg !15796
  store i8 %9, i8* %7, align 1, !dbg !15796
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14464, metadata !DIExpression()) #25, !dbg !15797
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14471, metadata !DIExpression()) #25, !dbg !15799
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14477, metadata !DIExpression()) #25, !dbg !15799
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.132(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15801
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14478, metadata !DIExpression()) #25, !dbg !15799
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15802
  br i1 %11, label %22, label %12, !dbg !15801

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14478, metadata !DIExpression()) #25, !dbg !15799
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15803
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14478, metadata !DIExpression()) #25, !dbg !15799
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #27, !dbg !15804
  %16 = icmp sgt i32 %15, 0, !dbg !15805
  br i1 %16, label %17, label %19, !dbg !15806

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15807
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !15808
  br label %24, !dbg !15809

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #27, !dbg !15802
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14478, metadata !DIExpression()) #25, !dbg !15799
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15802
  br i1 %21, label %22, label %12, !dbg !15801, !llvm.loop !15810

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15812
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #27, !dbg !15813
  br label %24, !dbg !15814

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !15778
  call void @llvm.dbg.value(metadata i32 %25, metadata !14283, metadata !DIExpression()) #25, !dbg !15780
  call void @llvm.dbg.value(metadata i32 %25, metadata !14277, metadata !DIExpression()) #25, !dbg !15776
  call void @llvm.dbg.value(metadata i32 %25, metadata !15775, metadata !DIExpression()), !dbg !15781
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15815
  call void @llvm.dbg.value(metadata i32 undef, metadata !14882, metadata !DIExpression()) #25, !dbg !15816
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14887, metadata !DIExpression()) #25, !dbg !15816
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #27, !dbg !15818
  ret void, !dbg !15819
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15820 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15824, metadata !DIExpression()), !dbg !15827
  %3 = icmp eq i64 %2, -1, !dbg !15828
  br i1 %3, label %4, label %6, !dbg !15830

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15831
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !15833
  br label %11, !dbg !15834

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15825, metadata !DIExpression()), !dbg !15827
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !15835
  %8 = sext i32 %7 to i64, !dbg !15835
  call void @llvm.dbg.value(metadata i64 %8, metadata !15825, metadata !DIExpression()), !dbg !15827
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !15836
  %10 = trunc i64 %9 to i32, !dbg !15836
  call void @llvm.dbg.value(metadata i32 %10, metadata !15826, metadata !DIExpression()), !dbg !15827
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !15827
  ret i32 %12, !dbg !15837
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15838 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15842, metadata !DIExpression()), !dbg !15843
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15844, !srcloc !15846
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !15847
  ret void, !dbg !15848
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15849 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15853, metadata !DIExpression()), !dbg !15857
  %2 = icmp eq i64 %0, 0, !dbg !15858
  br i1 %2, label %3, label %4, !dbg !15860

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !15861
  br label %29, !dbg !15863

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !15855, metadata !DIExpression()), !dbg !15857
  %5 = icmp sgt i64 %0, -3, !dbg !15864
  br i1 %5, label %6, label %10, !dbg !15866

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !15867
  %8 = trunc i64 %0 to i32, !dbg !15869
  %9 = add i32 %7, %8, !dbg !15869
  call void @llvm.dbg.value(metadata i32 %9, metadata !15854, metadata !DIExpression()), !dbg !15857
  br label %13, !dbg !15870

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !15871
  %12 = sub i32 -2, %11, !dbg !15871
  call void @llvm.dbg.value(metadata i32 %12, metadata !15854, metadata !DIExpression()), !dbg !15857
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !15873
  call void @llvm.dbg.value(metadata i32 %14, metadata !15854, metadata !DIExpression()), !dbg !15857
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !15874
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15876, !srcloc !14286
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15876
  call void @llvm.dbg.value(metadata i32 %16, metadata !14283, metadata !DIExpression()) #25, !dbg !15878
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !15878
  call void @llvm.dbg.value(metadata i32 %16, metadata !14277, metadata !DIExpression()) #25, !dbg !15874
  call void @llvm.dbg.value(metadata i32 %16, metadata !15856, metadata !DIExpression()), !dbg !15857
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15879
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !15880
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !15881
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15882
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15883
  tail call fastcc void @z_add_thread_timeout.142(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !15883
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15884
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !15885
  call void @llvm.dbg.value(metadata i32 %16, metadata !14882, metadata !DIExpression()) #25, !dbg !15886
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14887, metadata !DIExpression()) #25, !dbg !15886
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #27, !dbg !15888
  %22 = zext i32 %14 to i64, !dbg !15889
  %23 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !15890
  %24 = zext i32 %23 to i64, !dbg !15890
  %25 = sub nsw i64 %22, %24, !dbg !15891
  call void @llvm.dbg.value(metadata i64 %25, metadata !15853, metadata !DIExpression()), !dbg !15857
  %26 = icmp sgt i64 %25, 0, !dbg !15892
  %27 = select i1 %26, i64 %25, i64 0, !dbg !15892
  %28 = trunc i64 %27 to i32, !dbg !15892
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !15857
  ret i32 %30, !dbg !15893
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !15894 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15896, metadata !DIExpression()), !dbg !15897
  call void @llvm.dbg.value(metadata i64 %0, metadata !14318, metadata !DIExpression()), !dbg !15898
  call void @llvm.dbg.value(metadata i32 10000, metadata !14321, metadata !DIExpression()), !dbg !15898
  call void @llvm.dbg.value(metadata i32 1000, metadata !14322, metadata !DIExpression()), !dbg !15898
  call void @llvm.dbg.value(metadata i8 1, metadata !14323, metadata !DIExpression()), !dbg !15898
  call void @llvm.dbg.value(metadata i1 false, metadata !14324, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15898
  call void @llvm.dbg.value(metadata i1 false, metadata !14325, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15898
  call void @llvm.dbg.value(metadata i8 0, metadata !14326, metadata !DIExpression()), !dbg !15898
  call void @llvm.dbg.value(metadata i1 false, metadata !14327, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15898
  call void @llvm.dbg.value(metadata i1 true, metadata !14328, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15898
  call void @llvm.dbg.value(metadata i64 0, metadata !14329, metadata !DIExpression()), !dbg !15898
  call void @llvm.dbg.value(metadata i64 0, metadata !14329, metadata !DIExpression()), !dbg !15898
  call void @llvm.dbg.value(metadata i64 %0, metadata !14318, metadata !DIExpression()), !dbg !15898
  %2 = udiv i64 %0, 10, !dbg !15900
  ret i64 %2, !dbg !15904
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15905 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15906, !srcloc !15908
  tail call void @z_impl_k_yield() #26, !dbg !15909
  ret void, !dbg !15910
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15911 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15915, metadata !DIExpression()), !dbg !15917
  %2 = sext i32 %0 to i64, !dbg !15918
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !15919
  call void @llvm.dbg.value(metadata i64 %3, metadata !15916, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15917
  %4 = shl i64 %3, 32, !dbg !15920
  %5 = ashr exact i64 %4, 32, !dbg !15920
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !15921
  call void @llvm.dbg.value(metadata i32 %6, metadata !15916, metadata !DIExpression()), !dbg !15917
  %7 = sext i32 %6 to i64, !dbg !15922
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !15923
  %9 = trunc i64 %8 to i32, !dbg !15923
  ret i32 %9, !dbg !15924
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !15925 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15927, metadata !DIExpression()), !dbg !15928
  call void @llvm.dbg.value(metadata i64 %0, metadata !14318, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14321, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata i32 10000, metadata !14322, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata i8 1, metadata !14323, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata i1 false, metadata !14324, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15929
  call void @llvm.dbg.value(metadata i1 true, metadata !14325, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15929
  call void @llvm.dbg.value(metadata i8 0, metadata !14326, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata i1 false, metadata !14327, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15929
  call void @llvm.dbg.value(metadata i1 true, metadata !14328, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15929
  call void @llvm.dbg.value(metadata i64 0, metadata !14329, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.value(metadata i64 0, metadata !14329, metadata !DIExpression()), !dbg !15929
  %2 = add i64 %0, 99, !dbg !15931
  call void @llvm.dbg.value(metadata i64 %2, metadata !14318, metadata !DIExpression()), !dbg !15929
  %3 = udiv i64 %2, 100, !dbg !15932
  ret i64 %3, !dbg !15933
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !15934 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15936, metadata !DIExpression()), !dbg !15937
  call void @llvm.dbg.value(metadata i64 %0, metadata !14318, metadata !DIExpression()), !dbg !15938
  call void @llvm.dbg.value(metadata i32 10000, metadata !14321, metadata !DIExpression()), !dbg !15938
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14322, metadata !DIExpression()), !dbg !15938
  call void @llvm.dbg.value(metadata i8 1, metadata !14323, metadata !DIExpression()), !dbg !15938
  call void @llvm.dbg.value(metadata i1 false, metadata !14324, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15938
  call void @llvm.dbg.value(metadata i1 false, metadata !14325, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15938
  call void @llvm.dbg.value(metadata i8 0, metadata !14326, metadata !DIExpression()), !dbg !15938
  call void @llvm.dbg.value(metadata i1 true, metadata !14327, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15938
  call void @llvm.dbg.value(metadata i1 false, metadata !14328, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15938
  call void @llvm.dbg.value(metadata i64 0, metadata !14329, metadata !DIExpression()), !dbg !15938
  call void @llvm.dbg.value(metadata i64 0, metadata !14329, metadata !DIExpression()), !dbg !15938
  %2 = mul i64 %0, 100, !dbg !15940
  ret i64 %2, !dbg !15942
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15943 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15945, metadata !DIExpression()), !dbg !15946
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !15947
  br i1 %2, label %14, label %3, !dbg !15949

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15950
  %5 = icmp slt i32 %4, 0, !dbg !15952
  br i1 %5, label %6, label %10, !dbg !15953

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15954
  %8 = load i8, i8* %7, align 1, !dbg !15954
  %9 = icmp eq i8 %8, 16, !dbg !15957
  br i1 %9, label %10, label %14, !dbg !15958

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !15959
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15960
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15961, !srcloc !14922
  call void @llvm.dbg.value(metadata i32 %11, metadata !14918, metadata !DIExpression()) #25, !dbg !15965
  %12 = icmp eq i32 %11, 0, !dbg !15966
  br i1 %12, label %13, label %14, !dbg !15967

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15968
  br label %14, !dbg !15970

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !15971
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15972 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15974, metadata !DIExpression()), !dbg !15975
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15976
  %3 = load i8, i8* %2, align 1, !dbg !15976
  %4 = and i8 %3, 2, !dbg !15977
  %5 = icmp ne i8 %4, 0, !dbg !15978
  ret i1 %5, !dbg !15979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !15980 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15985
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15984, metadata !DIExpression()), !dbg !15986
  ret %struct.k_thread* %1, !dbg !15987
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !15988 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15989, !srcloc !14922
  call void @llvm.dbg.value(metadata i32 %1, metadata !14918, metadata !DIExpression()) #25, !dbg !15992
  %2 = icmp eq i32 %1, 0, !dbg !15993
  br i1 %2, label %3, label %8, !dbg !15994

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15995
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !15996
  %6 = icmp ne i32 %5, 0, !dbg !15994
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !15997
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15998 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16000, metadata !DIExpression()), !dbg !16002
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !16003
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16005, !srcloc !14286
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16005
  call void @llvm.dbg.value(metadata i32 %3, metadata !14283, metadata !DIExpression()) #25, !dbg !16007
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !16007
  call void @llvm.dbg.value(metadata i32 %3, metadata !14277, metadata !DIExpression()) #25, !dbg !16003
  call void @llvm.dbg.value(metadata i32 %3, metadata !16001, metadata !DIExpression()), !dbg !16002
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16008
  %5 = load i8, i8* %4, align 4, !dbg !16008
  %6 = and i8 %5, 1, !dbg !16010
  %7 = icmp eq i8 %6, 0, !dbg !16011
  br i1 %7, label %9, label %8, !dbg !16012

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !14298, metadata !DIExpression()) #25, !dbg !16013
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !16013
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()) #25, !dbg !16016
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16018, !srcloc !14312
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !16019, !srcloc !16021
  br label %24, !dbg !16022

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16023
  %11 = load i8, i8* %10, align 1, !dbg !16023
  %12 = and i8 %11, 8, !dbg !16025
  %13 = icmp eq i8 %12, 0, !dbg !16026
  br i1 %13, label %15, label %14, !dbg !16027

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !14298, metadata !DIExpression()) #25, !dbg !16028
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !16028
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()) #25, !dbg !16031
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16033, !srcloc !14312
  br label %24, !dbg !16034

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !16035
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16036
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16038
  br i1 %17, label %18, label %23, !dbg !16039

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16040, !srcloc !14922
  call void @llvm.dbg.value(metadata i32 %19, metadata !14918, metadata !DIExpression()) #25, !dbg !16043
  %20 = icmp eq i32 %19, 0, !dbg !16044
  br i1 %20, label %21, label %23, !dbg !16045

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !14882, metadata !DIExpression()) #25, !dbg !16046
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14887, metadata !DIExpression()) #25, !dbg !16046
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !16049
  br label %23, !dbg !16050

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !14298, metadata !DIExpression()) #25, !dbg !16051
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !16051
  call void @llvm.dbg.value(metadata i32 %3, metadata !14306, metadata !DIExpression()) #25, !dbg !16053
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16055, !srcloc !14312
  br label %24, !dbg !16056

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !16056
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16057 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16059, metadata !DIExpression()), !dbg !16060
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16061
  %3 = load i8, i8* %2, align 1, !dbg !16061
  %4 = and i8 %3, 8, !dbg !16063
  %5 = icmp eq i8 %4, 0, !dbg !16064
  br i1 %5, label %6, label %20, !dbg !16065

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16066
  %8 = or i8 %7, 8, !dbg !16066
  store i8 %8, i8* %2, align 1, !dbg !16066
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !16068
  br i1 %9, label %10, label %12, !dbg !16070

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14440, metadata !DIExpression()) #25, !dbg !16071
  %11 = and i8 %8, 95, !dbg !16074
  store i8 %11, i8* %2, align 1, !dbg !16074
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14448, metadata !DIExpression()) #25, !dbg !16075
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !16077
  br label %12, !dbg !16078

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16079
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16079
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16081
  br i1 %15, label %17, label %16, !dbg !16082

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16083
  br label %17, !dbg !16085

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !16086
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16087
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #26, !dbg !16088
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16089
  br label %20, !dbg !16090

20:                                               ; preds = %17, %1
  ret void, !dbg !16091
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16092 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16096, metadata !DIExpression()), !dbg !16098
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.153(%struct._wait_q_t* noundef %0) #26, !dbg !16099
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16097, metadata !DIExpression()), !dbg !16098
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16100
  br i1 %3, label %10, label %4, !dbg !16101

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16102
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !16104
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16105, metadata !DIExpression()), !dbg !16111
  call void @llvm.dbg.value(metadata i32 0, metadata !16110, metadata !DIExpression()), !dbg !16111
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !16113
  store i32 0, i32* %7, align 4, !dbg !16114
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !16115
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.153(%struct._wait_q_t* noundef %0) #26, !dbg !16099
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16097, metadata !DIExpression()), !dbg !16098
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16100
  br i1 %9, label %10, label %4, !dbg !16101, !llvm.loop !16116

10:                                               ; preds = %4, %1
  ret void, !dbg !16118
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16119 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16124, metadata !DIExpression()), !dbg !16127
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16123, metadata !DIExpression()), !dbg !16127
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !16128
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16130, !srcloc !14286
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16130
  call void @llvm.dbg.value(metadata i32 %4, metadata !14283, metadata !DIExpression()) #25, !dbg !16132
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !16132
  call void @llvm.dbg.value(metadata i32 %4, metadata !14277, metadata !DIExpression()) #25, !dbg !16128
  call void @llvm.dbg.value(metadata i32 %4, metadata !16125, metadata !DIExpression()), !dbg !16127
  call void @llvm.dbg.value(metadata i32 0, metadata !16126, metadata !DIExpression()), !dbg !16127
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16133
  %6 = load i8, i8* %5, align 1, !dbg !16133
  %7 = and i8 %6, 8, !dbg !16135
  %8 = icmp eq i8 %7, 0, !dbg !16136
  br i1 %8, label %9, label %24, !dbg !16137

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !16124, metadata !DIExpression()), !dbg !16127
  %11 = icmp eq i64 %10, 0, !dbg !16138
  br i1 %11, label %24, label %12, !dbg !16140

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16141
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !16143
  br i1 %14, label %24, label %15, !dbg !16144

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16145
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !16145
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !16146
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !16147
  br i1 %19, label %24, label %20, !dbg !16148

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16149
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #26, !dbg !16151
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16152
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !16153
  call void @llvm.dbg.value(metadata i32 %4, metadata !14882, metadata !DIExpression()) #25, !dbg !16154
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14887, metadata !DIExpression()) #25, !dbg !16154
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #27, !dbg !16156
  call void @llvm.dbg.value(metadata i32 %23, metadata !16126, metadata !DIExpression()), !dbg !16127
  br label %26, !dbg !16157

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !16158
  call void @llvm.dbg.value(metadata i32 %25, metadata !16126, metadata !DIExpression()), !dbg !16127
  call void @llvm.dbg.value(metadata i32 %4, metadata !14298, metadata !DIExpression()) #25, !dbg !16159
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !16159
  call void @llvm.dbg.value(metadata i32 %4, metadata !14306, metadata !DIExpression()) #25, !dbg !16161
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16163, !srcloc !14312
  br label %26, !dbg !16164

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !16127
  ret i32 %27, !dbg !16165
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16166 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16170, metadata !DIExpression()), !dbg !16178
  call void @llvm.dbg.value(metadata i32 %1, metadata !16171, metadata !DIExpression()), !dbg !16178
  call void @llvm.dbg.value(metadata i8* %2, metadata !16172, metadata !DIExpression()), !dbg !16178
  call void @llvm.dbg.value(metadata i8 0, metadata !16174, metadata !DIExpression()), !dbg !16178
  call void @llvm.dbg.value(metadata i32 0, metadata !16175, metadata !DIExpression()), !dbg !16179
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14271, metadata !DIExpression()) #25, !dbg !16180
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16182, !srcloc !14286
  call void @llvm.dbg.value(metadata i32 undef, metadata !14283, metadata !DIExpression()) #25, !dbg !16184
  call void @llvm.dbg.value(metadata i32 undef, metadata !14284, metadata !DIExpression()) #25, !dbg !16184
  call void @llvm.dbg.value(metadata i32 undef, metadata !14277, metadata !DIExpression()) #25, !dbg !16180
  call void @llvm.dbg.value(metadata i32 undef, metadata !16177, metadata !DIExpression()), !dbg !16179
  call void @llvm.dbg.value(metadata i8 poison, metadata !16174, metadata !DIExpression()), !dbg !16178
  call void @llvm.dbg.value(metadata i32 undef, metadata !16175, metadata !DIExpression()), !dbg !16179
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !16185
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16173, metadata !DIExpression()), !dbg !16178
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !16188
  br i1 %7, label %12, label %8, !dbg !16190

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16191, metadata !DIExpression()), !dbg !16198
  call void @llvm.dbg.value(metadata i32 %1, metadata !16196, metadata !DIExpression()), !dbg !16198
  call void @llvm.dbg.value(metadata i8* %2, metadata !16197, metadata !DIExpression()), !dbg !16198
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !16105, metadata !DIExpression()), !dbg !16201
  call void @llvm.dbg.value(metadata i32 %1, metadata !16110, metadata !DIExpression()), !dbg !16201
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !16203
  store i32 %1, i32* %9, align 4, !dbg !16204
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !16205
  store i8* %2, i8** %10, align 4, !dbg !16206
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !16207
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !16208
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !16209
  call void @llvm.dbg.value(metadata i8 1, metadata !16174, metadata !DIExpression()), !dbg !16178
  br label %12, !dbg !16210

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !16182
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !16182
  call void @llvm.dbg.value(metadata i32 %14, metadata !14283, metadata !DIExpression()) #25, !dbg !16184
  call void @llvm.dbg.value(metadata i32 %14, metadata !14277, metadata !DIExpression()) #25, !dbg !16180
  call void @llvm.dbg.value(metadata i32 %14, metadata !16177, metadata !DIExpression()), !dbg !16179
  call void @llvm.dbg.value(metadata i8 poison, metadata !16174, metadata !DIExpression()), !dbg !16178
  call void @llvm.dbg.value(metadata i32 undef, metadata !14298, metadata !DIExpression()) #25, !dbg !16211
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14303, metadata !DIExpression()) #25, !dbg !16211
  call void @llvm.dbg.value(metadata i32 undef, metadata !14306, metadata !DIExpression()) #25, !dbg !16213
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16215, !srcloc !14312
  call void @llvm.dbg.value(metadata i32 undef, metadata !16175, metadata !DIExpression()), !dbg !16179
  ret i1 %13, !dbg !16216
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16217 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16223, metadata !DIExpression()), !dbg !16228
  call void @llvm.dbg.value(metadata i64 undef, metadata !16225, metadata !DIExpression()), !dbg !16228
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16222, metadata !DIExpression()), !dbg !16228
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16224, metadata !DIExpression()), !dbg !16228
  call void @llvm.dbg.value(metadata i8** %4, metadata !16226, metadata !DIExpression()), !dbg !16228
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !16229
  call void @llvm.dbg.value(metadata i32 %6, metadata !16227, metadata !DIExpression()), !dbg !16228
  %7 = icmp eq i8** %4, null, !dbg !16230
  br i1 %7, label %12, label %8, !dbg !16232

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16233
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16235
  %11 = load i8*, i8** %10, align 4, !dbg !16235
  store i8* %11, i8** %4, align 4, !dbg !16236
  br label %12, !dbg !16237

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16238
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16239 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !16241
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !16242
  ret void, !dbg !16243
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16244 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16254, metadata !DIExpression()), !dbg !16271
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16252, metadata !DIExpression()), !dbg !16271
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16253, metadata !DIExpression()), !dbg !16271
  %5 = icmp eq i64 %4, -1, !dbg !16272
  br i1 %5, label %55, label %6, !dbg !16274

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16275
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !16276
  call void @llvm.dbg.value(metadata i32 0, metadata !16255, metadata !DIExpression()), !dbg !16277
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16278, metadata !DIExpression()) #25, !dbg !16285
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16287, !srcloc !16293
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !16287
  call void @llvm.dbg.value(metadata i32 %9, metadata !16290, metadata !DIExpression()) #25, !dbg !16294
  call void @llvm.dbg.value(metadata i32 undef, metadata !16291, metadata !DIExpression()) #25, !dbg !16294
  call void @llvm.dbg.value(metadata i32 %9, metadata !16284, metadata !DIExpression()) #25, !dbg !16285
  call void @llvm.dbg.value(metadata i32 %9, metadata !16261, metadata !DIExpression()), !dbg !16277
  call void @llvm.dbg.value(metadata i32 undef, metadata !16255, metadata !DIExpression()), !dbg !16277
  %10 = icmp slt i64 %4, -1, !dbg !16295
  br i1 %10, label %11, label %17, !dbg !16296

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !16297
  %13 = add i64 %4, %12, !dbg !16298
  %14 = sub i64 -2, %13, !dbg !16298
  call void @llvm.dbg.value(metadata i64 %14, metadata !16265, metadata !DIExpression()), !dbg !16299
  %15 = icmp sgt i64 %14, 1, !dbg !16300
  %16 = select i1 %15, i64 %14, i64 1, !dbg !16300
  br label %22, !dbg !16301

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !16302
  %19 = tail call fastcc i32 @elapsed.165() #26, !dbg !16304
  %20 = sext i32 %19 to i64, !dbg !16304
  %21 = add nsw i64 %18, %20, !dbg !16305
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !16306
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16307
  store i64 %23, i64* %24, align 8, !dbg !16308
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !16309
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !16262, metadata !DIExpression()), !dbg !16311
  %26 = icmp eq %struct._timeout* %25, null, !dbg !16312
  br i1 %26, label %42, label %27, !dbg !16312

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !16313
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !16262, metadata !DIExpression()), !dbg !16311
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16317
  %31 = load i64, i64* %30, align 8, !dbg !16317
  %32 = icmp slt i64 %28, %31, !dbg !16318
  br i1 %32, label %33, label %38, !dbg !16319

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !16317
  %35 = sub nsw i64 %31, %28, !dbg !16320
  store i64 %35, i64* %34, align 8, !dbg !16320
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !16322
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16323
  tail call fastcc void @sys_dlist_insert.166(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !16324
  br label %44, !dbg !16325

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !16326
  store i64 %39, i64* %24, align 8, !dbg !16326
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !16327
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !16262, metadata !DIExpression()), !dbg !16311
  %41 = icmp eq %struct._timeout* %40, null, !dbg !16312
  br i1 %41, label %42, label %27, !dbg !16312, !llvm.loop !16328

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16330
  tail call fastcc void @sys_dlist_append.167(%struct._dnode* noundef %43) #26, !dbg !16333
  br label %44, !dbg !16334

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !16335
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !16336
  br i1 %46, label %47, label %54, !dbg !16337

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !16338
  call void @llvm.dbg.value(metadata i32 %48, metadata !16268, metadata !DIExpression()), !dbg !16339
  %49 = icmp ne i32 %48, 0, !dbg !16340
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !16342
  br i1 %52, label %54, label %53, !dbg !16342

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #27, !dbg !16343
  br label %54, !dbg !16345

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !16346, metadata !DIExpression()) #25, !dbg !16352
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16351, metadata !DIExpression()) #25, !dbg !16352
  call void @llvm.dbg.value(metadata i32 %9, metadata !16354, metadata !DIExpression()) #25, !dbg !16357
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16359, !srcloc !16360
  call void @llvm.dbg.value(metadata i32 undef, metadata !16255, metadata !DIExpression()), !dbg !16277
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !16361
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.165() unnamed_addr #1 !dbg !16362 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16365
  %2 = icmp eq i32 %1, 0, !dbg !16366
  br i1 %2, label %3, label %5, !dbg !16365

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !16367
  br label %5, !dbg !16365

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16365
  ret i32 %6, !dbg !16368
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !16369 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.170() #26, !dbg !16375
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16373, metadata !DIExpression()), !dbg !16376
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16377
  ret %struct._timeout* %2, !dbg !16378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.166(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !16379 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16383, metadata !DIExpression()), !dbg !16387
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16384, metadata !DIExpression()), !dbg !16387
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16388
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16388
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16385, metadata !DIExpression()), !dbg !16387
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16389
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16390
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16391
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16392
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16393
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16394
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16395
  ret void, !dbg !16396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !16397 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16401, metadata !DIExpression()), !dbg !16403
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16404
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.168(%struct._dnode* noundef %2) #26, !dbg !16405
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16402, metadata !DIExpression()), !dbg !16403
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16406
  ret %struct._timeout* %4, !dbg !16407
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.167(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16408 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16413, metadata !DIExpression()), !dbg !16416
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16414, metadata !DIExpression()), !dbg !16416
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16417
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16415, metadata !DIExpression()), !dbg !16416
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16418
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16419
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16420
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16421
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16422
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16423
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16424
  ret void, !dbg !16425
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16426 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !16431
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16428, metadata !DIExpression()), !dbg !16432
  %2 = tail call fastcc i32 @elapsed.165() #26, !dbg !16433
  call void @llvm.dbg.value(metadata i32 %2, metadata !16429, metadata !DIExpression()), !dbg !16432
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16434
  br i1 %3, label %14, label %4, !dbg !16436

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16437
  %6 = load i64, i64* %5, align 8, !dbg !16437
  %7 = sext i32 %2 to i64, !dbg !16438
  %8 = sub nsw i64 %6, %7, !dbg !16439
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16440
  br i1 %9, label %14, label %10, !dbg !16441

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16442
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16442
  %13 = trunc i64 %12 to i32, !dbg !16442
  call void @llvm.dbg.value(metadata i32 %13, metadata !16430, metadata !DIExpression()), !dbg !16432
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16444
  call void @llvm.dbg.value(metadata i32 %15, metadata !16430, metadata !DIExpression()), !dbg !16432
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16445
  %17 = icmp ne i32 %16, 0, !dbg !16447
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16448
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16448
  call void @llvm.dbg.value(metadata i32 %20, metadata !16430, metadata !DIExpression()), !dbg !16432
  ret i32 %20, !dbg !16449
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.168(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16450 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16454, metadata !DIExpression()), !dbg !16456
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16455, metadata !DIExpression()), !dbg !16456
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16457
  br i1 %2, label %5, label %3, !dbg !16458

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.169(%struct._dnode* noundef nonnull %0) #26, !dbg !16459
  br label %5, !dbg !16458

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16458
  ret %struct._dnode* %6, !dbg !16460
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.169(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !16461 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16463, metadata !DIExpression()), !dbg !16465
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16464, metadata !DIExpression()), !dbg !16465
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16466
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16467
  br i1 %3, label %7, label %4, !dbg !16468

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16469
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16469
  br label %7, !dbg !16468

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16468
  ret %struct._dnode* %8, !dbg !16470
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.170() unnamed_addr #5 !dbg !16471 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16475, metadata !DIExpression()), !dbg !16476
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.171() #26, !dbg !16477
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16477
  ret %struct._dnode* %3, !dbg !16478
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.171() unnamed_addr #5 !dbg !16479 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16483, metadata !DIExpression()), !dbg !16484
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16485
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16486
  ret i1 %2, !dbg !16487
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16488 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16492, metadata !DIExpression()), !dbg !16497
  call void @llvm.dbg.value(metadata i32 -22, metadata !16493, metadata !DIExpression()), !dbg !16497
  call void @llvm.dbg.value(metadata i32 0, metadata !16494, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16278, metadata !DIExpression()) #25, !dbg !16499
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16501, !srcloc !16293
  call void @llvm.dbg.value(metadata i32 undef, metadata !16290, metadata !DIExpression()) #25, !dbg !16503
  call void @llvm.dbg.value(metadata i32 undef, metadata !16291, metadata !DIExpression()) #25, !dbg !16503
  call void @llvm.dbg.value(metadata i32 undef, metadata !16284, metadata !DIExpression()) #25, !dbg !16499
  call void @llvm.dbg.value(metadata i32 undef, metadata !16496, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.value(metadata i32 -22, metadata !16493, metadata !DIExpression()), !dbg !16497
  call void @llvm.dbg.value(metadata i32 undef, metadata !16494, metadata !DIExpression()), !dbg !16498
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16493, metadata !DIExpression()), !dbg !16497
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.174(%struct._dnode* noundef %3) #26, !dbg !16504
  br i1 %4, label %5, label %6, !dbg !16508

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !16509
  call void @llvm.dbg.value(metadata i32 0, metadata !16493, metadata !DIExpression()), !dbg !16497
  br label %6, !dbg !16511

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !16497
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16501
  call void @llvm.dbg.value(metadata i32 %8, metadata !16290, metadata !DIExpression()) #25, !dbg !16503
  call void @llvm.dbg.value(metadata i32 %8, metadata !16284, metadata !DIExpression()) #25, !dbg !16499
  call void @llvm.dbg.value(metadata i32 %8, metadata !16496, metadata !DIExpression()), !dbg !16498
  call void @llvm.dbg.value(metadata i32 %7, metadata !16493, metadata !DIExpression()), !dbg !16497
  call void @llvm.dbg.value(metadata i32 undef, metadata !16346, metadata !DIExpression()) #25, !dbg !16512
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16351, metadata !DIExpression()) #25, !dbg !16512
  call void @llvm.dbg.value(metadata i32 undef, metadata !16354, metadata !DIExpression()) #25, !dbg !16514
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !16516, !srcloc !16360
  call void @llvm.dbg.value(metadata i32 undef, metadata !16494, metadata !DIExpression()), !dbg !16498
  ret i32 %7, !dbg !16517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.174(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16518 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16524, metadata !DIExpression()), !dbg !16525
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16526
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16526
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16527
  ret i1 %4, !dbg !16528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !16529 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16531, metadata !DIExpression()), !dbg !16532
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !16533
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16535
  br i1 %3, label %10, label %4, !dbg !16536

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16537
  %6 = load i64, i64* %5, align 8, !dbg !16537
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16539
  %8 = load i64, i64* %7, align 8, !dbg !16540
  %9 = add nsw i64 %8, %6, !dbg !16540
  store i64 %9, i64* %7, align 8, !dbg !16540
  br label %10, !dbg !16541

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16542
  tail call fastcc void @sys_dlist_remove.175(%struct._dnode* noundef %11) #26, !dbg !16543
  ret void, !dbg !16544
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.175(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !16545 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16549, metadata !DIExpression()), !dbg !16552
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16553
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16553
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16550, metadata !DIExpression()), !dbg !16552
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16554
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16554
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16551, metadata !DIExpression()), !dbg !16552
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16555
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16556
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16557
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16558
  tail call fastcc void @sys_dnode_init.176(%struct._dnode* noundef %0) #26, !dbg !16559
  ret void, !dbg !16560
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.176(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !16561 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16563, metadata !DIExpression()), !dbg !16564
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16565
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16566
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16567
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16568
  ret void, !dbg !16569
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16570 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16576, metadata !DIExpression()), !dbg !16581
  call void @llvm.dbg.value(metadata i64 0, metadata !16577, metadata !DIExpression()), !dbg !16581
  call void @llvm.dbg.value(metadata i32 0, metadata !16578, metadata !DIExpression()), !dbg !16582
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16278, metadata !DIExpression()) #25, !dbg !16583
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16585, !srcloc !16293
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16585
  call void @llvm.dbg.value(metadata i32 %3, metadata !16290, metadata !DIExpression()) #25, !dbg !16587
  call void @llvm.dbg.value(metadata i32 undef, metadata !16291, metadata !DIExpression()) #25, !dbg !16587
  call void @llvm.dbg.value(metadata i32 %3, metadata !16284, metadata !DIExpression()) #25, !dbg !16583
  call void @llvm.dbg.value(metadata i32 %3, metadata !16580, metadata !DIExpression()), !dbg !16582
  call void @llvm.dbg.value(metadata i64 0, metadata !16577, metadata !DIExpression()), !dbg !16581
  call void @llvm.dbg.value(metadata i32 undef, metadata !16578, metadata !DIExpression()), !dbg !16582
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !16588
  call void @llvm.dbg.value(metadata i64 %4, metadata !16577, metadata !DIExpression()), !dbg !16581
  call void @llvm.dbg.value(metadata i32 %3, metadata !16346, metadata !DIExpression()) #25, !dbg !16591
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16351, metadata !DIExpression()) #25, !dbg !16591
  call void @llvm.dbg.value(metadata i32 %3, metadata !16354, metadata !DIExpression()) #25, !dbg !16593
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16595, !srcloc !16360
  call void @llvm.dbg.value(metadata i32 undef, metadata !16578, metadata !DIExpression()), !dbg !16582
  ret i64 %4, !dbg !16596
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !16597 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16599, metadata !DIExpression()), !dbg !16603
  call void @llvm.dbg.value(metadata i64 0, metadata !16600, metadata !DIExpression()), !dbg !16603
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.177(%struct._timeout* noundef %0) #26, !dbg !16604
  br i1 %2, label %21, label %3, !dbg !16606

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !16607
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !16601, metadata !DIExpression()), !dbg !16608
  call void @llvm.dbg.value(metadata i64 0, metadata !16600, metadata !DIExpression()), !dbg !16603
  %5 = icmp eq %struct._timeout* %4, null, !dbg !16609
  br i1 %5, label %16, label %6, !dbg !16611

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !16601, metadata !DIExpression()), !dbg !16608
  call void @llvm.dbg.value(metadata i64 %8, metadata !16600, metadata !DIExpression()), !dbg !16603
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !16612
  %10 = load i64, i64* %9, align 8, !dbg !16612
  %11 = add nsw i64 %10, %8, !dbg !16614
  call void @llvm.dbg.value(metadata i64 %11, metadata !16600, metadata !DIExpression()), !dbg !16603
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !16615
  br i1 %12, label %16, label %13, !dbg !16617

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !16618
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !16601, metadata !DIExpression()), !dbg !16608
  call void @llvm.dbg.value(metadata i64 %11, metadata !16600, metadata !DIExpression()), !dbg !16603
  %15 = icmp eq %struct._timeout* %14, null, !dbg !16609
  br i1 %15, label %16, label %6, !dbg !16611, !llvm.loop !16619

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !16603
  call void @llvm.dbg.value(metadata i64 %17, metadata !16600, metadata !DIExpression()), !dbg !16603
  %18 = tail call fastcc i32 @elapsed.165() #26, !dbg !16621
  %19 = sext i32 %18 to i64, !dbg !16621
  %20 = sub nsw i64 %17, %19, !dbg !16622
  br label %21, !dbg !16623

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !16603
  ret i64 %22, !dbg !16624
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.177(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !16625 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16629, metadata !DIExpression()), !dbg !16630
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16631
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.174(%struct._dnode* noundef %2) #26, !dbg !16632
  %4 = xor i1 %3, true, !dbg !16633
  ret i1 %4, !dbg !16634
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16635 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16637, metadata !DIExpression()), !dbg !16642
  call void @llvm.dbg.value(metadata i64 0, metadata !16638, metadata !DIExpression()), !dbg !16642
  call void @llvm.dbg.value(metadata i32 0, metadata !16639, metadata !DIExpression()), !dbg !16643
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16278, metadata !DIExpression()) #25, !dbg !16644
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16646, !srcloc !16293
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16646
  call void @llvm.dbg.value(metadata i32 %3, metadata !16290, metadata !DIExpression()) #25, !dbg !16648
  call void @llvm.dbg.value(metadata i32 undef, metadata !16291, metadata !DIExpression()) #25, !dbg !16648
  call void @llvm.dbg.value(metadata i32 %3, metadata !16284, metadata !DIExpression()) #25, !dbg !16644
  call void @llvm.dbg.value(metadata i32 %3, metadata !16641, metadata !DIExpression()), !dbg !16643
  call void @llvm.dbg.value(metadata i64 0, metadata !16638, metadata !DIExpression()), !dbg !16642
  call void @llvm.dbg.value(metadata i32 undef, metadata !16639, metadata !DIExpression()), !dbg !16643
  %4 = load i64, i64* @curr_tick, align 8, !dbg !16649
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !16652
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !16638, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16642
  call void @llvm.dbg.value(metadata i32 %3, metadata !16346, metadata !DIExpression()) #25, !dbg !16653
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16351, metadata !DIExpression()) #25, !dbg !16653
  call void @llvm.dbg.value(metadata i32 %3, metadata !16354, metadata !DIExpression()) #25, !dbg !16655
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16657, !srcloc !16360
  call void @llvm.dbg.value(metadata i32 undef, metadata !16639, metadata !DIExpression()), !dbg !16643
  %6 = add i64 %5, %4, !dbg !16658
  ret i64 %6, !dbg !16659
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !16660 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !16662, metadata !DIExpression()), !dbg !16666
  call void @llvm.dbg.value(metadata i32 0, metadata !16663, metadata !DIExpression()), !dbg !16667
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16278, metadata !DIExpression()) #25, !dbg !16668
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16670, !srcloc !16293
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16670
  call void @llvm.dbg.value(metadata i32 %2, metadata !16290, metadata !DIExpression()) #25, !dbg !16672
  call void @llvm.dbg.value(metadata i32 undef, metadata !16291, metadata !DIExpression()) #25, !dbg !16672
  call void @llvm.dbg.value(metadata i32 %2, metadata !16284, metadata !DIExpression()) #25, !dbg !16668
  call void @llvm.dbg.value(metadata i32 %2, metadata !16665, metadata !DIExpression()), !dbg !16667
  call void @llvm.dbg.value(metadata i32 -1, metadata !16662, metadata !DIExpression()), !dbg !16666
  call void @llvm.dbg.value(metadata i32 undef, metadata !16663, metadata !DIExpression()), !dbg !16667
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !16673
  call void @llvm.dbg.value(metadata i32 %3, metadata !16662, metadata !DIExpression()), !dbg !16666
  call void @llvm.dbg.value(metadata i32 %2, metadata !16346, metadata !DIExpression()) #25, !dbg !16676
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16351, metadata !DIExpression()) #25, !dbg !16676
  call void @llvm.dbg.value(metadata i32 %2, metadata !16354, metadata !DIExpression()) #25, !dbg !16678
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16680, !srcloc !16360
  call void @llvm.dbg.value(metadata i32 undef, metadata !16663, metadata !DIExpression()), !dbg !16667
  ret i32 %3, !dbg !16681
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !16682 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16684, metadata !DIExpression()), !dbg !16694
  call void @llvm.dbg.value(metadata i1 %1, metadata !16685, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16694
  call void @llvm.dbg.value(metadata i32 0, metadata !16686, metadata !DIExpression()), !dbg !16695
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16278, metadata !DIExpression()) #25, !dbg !16696
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16698, !srcloc !16293
  call void @llvm.dbg.value(metadata i32 undef, metadata !16290, metadata !DIExpression()) #25, !dbg !16700
  call void @llvm.dbg.value(metadata i32 undef, metadata !16291, metadata !DIExpression()) #25, !dbg !16700
  call void @llvm.dbg.value(metadata i32 undef, metadata !16284, metadata !DIExpression()) #25, !dbg !16696
  call void @llvm.dbg.value(metadata i32 undef, metadata !16688, metadata !DIExpression()), !dbg !16695
  call void @llvm.dbg.value(metadata i32 undef, metadata !16686, metadata !DIExpression()), !dbg !16695
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !16701
  call void @llvm.dbg.value(metadata i32 %4, metadata !16689, metadata !DIExpression()), !dbg !16702
  call void @llvm.dbg.value(metadata i1 undef, metadata !16692, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16702
  %5 = icmp slt i32 %4, 2, !dbg !16703
  call void @llvm.dbg.value(metadata i1 %5, metadata !16693, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16702
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !16704
  call void @llvm.dbg.value(metadata i1 %6, metadata !16692, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16702
  br i1 %7, label %11, label %8, !dbg !16704

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !16706
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !16706
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #27, !dbg !16708
  br label %11, !dbg !16709

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !16698
  call void @llvm.dbg.value(metadata i32 %12, metadata !16290, metadata !DIExpression()) #25, !dbg !16700
  call void @llvm.dbg.value(metadata i32 %12, metadata !16284, metadata !DIExpression()) #25, !dbg !16696
  call void @llvm.dbg.value(metadata i32 %12, metadata !16688, metadata !DIExpression()), !dbg !16695
  call void @llvm.dbg.value(metadata i32 undef, metadata !16346, metadata !DIExpression()) #25, !dbg !16710
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16351, metadata !DIExpression()) #25, !dbg !16710
  call void @llvm.dbg.value(metadata i32 undef, metadata !16354, metadata !DIExpression()) #25, !dbg !16712
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !16714, !srcloc !16360
  call void @llvm.dbg.value(metadata i32 1, metadata !16686, metadata !DIExpression()), !dbg !16695
  call void @llvm.dbg.value(metadata i32 undef, metadata !16686, metadata !DIExpression()), !dbg !16695
  ret void, !dbg !16715
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16716 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16720, metadata !DIExpression()), !dbg !16725
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !16726
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16278, metadata !DIExpression()) #25, !dbg !16727
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16729, !srcloc !16293
  call void @llvm.dbg.value(metadata i32 undef, metadata !16290, metadata !DIExpression()) #25, !dbg !16731
  call void @llvm.dbg.value(metadata i32 undef, metadata !16291, metadata !DIExpression()) #25, !dbg !16731
  call void @llvm.dbg.value(metadata i32 undef, metadata !16284, metadata !DIExpression()) #25, !dbg !16727
  call void @llvm.dbg.value(metadata i32 undef, metadata !16721, metadata !DIExpression()), !dbg !16725
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16725
  call void @llvm.dbg.value(metadata i32 undef, metadata !16721, metadata !DIExpression()), !dbg !16725
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !16732
  %4 = icmp eq %struct._timeout* %3, null, !dbg !16733
  br i1 %4, label %28, label %5, !dbg !16734

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !16735
  %10 = load i64, i64* %9, align 8, !dbg !16735
  %11 = sext i32 %8 to i64, !dbg !16736
  %12 = icmp sgt i64 %10, %11, !dbg !16737
  br i1 %12, label %26, label %13, !dbg !16738

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !16725
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !16722, metadata !DIExpression()), !dbg !16739
  %15 = trunc i64 %10 to i32, !dbg !16740
  call void @llvm.dbg.value(metadata i32 %15, metadata !16724, metadata !DIExpression()), !dbg !16739
  %16 = sext i32 %15 to i64, !dbg !16741
  %17 = load i64, i64* @curr_tick, align 8, !dbg !16742
  %18 = add i64 %17, %16, !dbg !16742
  store i64 %18, i64* @curr_tick, align 8, !dbg !16742
  store i64 0, i64* %9, align 8, !dbg !16743
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !16744
  call void @llvm.dbg.value(metadata i32 %14, metadata !16346, metadata !DIExpression()) #25, !dbg !16745
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16351, metadata !DIExpression()) #25, !dbg !16745
  call void @llvm.dbg.value(metadata i32 %14, metadata !16354, metadata !DIExpression()) #25, !dbg !16747
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16749, !srcloc !16360
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !16750
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !16750
  tail call void %20(%struct._timeout* noundef nonnull %6) #27, !dbg !16751
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16278, metadata !DIExpression()) #25, !dbg !16752
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16754, !srcloc !16293
  call void @llvm.dbg.value(metadata i32 undef, metadata !16290, metadata !DIExpression()) #25, !dbg !16756
  call void @llvm.dbg.value(metadata i32 undef, metadata !16291, metadata !DIExpression()) #25, !dbg !16756
  call void @llvm.dbg.value(metadata i32 undef, metadata !16284, metadata !DIExpression()) #25, !dbg !16752
  call void @llvm.dbg.value(metadata i32 undef, metadata !16721, metadata !DIExpression()), !dbg !16725
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !16757
  %23 = sub nsw i32 %22, %15, !dbg !16757
  store i32 %23, i32* @announce_remaining, align 4, !dbg !16725
  call void @llvm.dbg.value(metadata i32 undef, metadata !16721, metadata !DIExpression()), !dbg !16725
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !16732
  %25 = icmp eq %struct._timeout* %24, null, !dbg !16733
  br i1 %25, label %28, label %5, !dbg !16734, !llvm.loop !16758

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !16760
  store i64 %27, i64* %9, align 8, !dbg !16760
  br label %32, !dbg !16763

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !16725
  %31 = sext i32 %30 to i64, !dbg !16764
  br label %32, !dbg !16764

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !16764
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !16725
  %36 = load i64, i64* @curr_tick, align 8, !dbg !16765
  %37 = add i64 %36, %33, !dbg !16765
  store i64 %37, i64* @curr_tick, align 8, !dbg !16765
  store i32 0, i32* @announce_remaining, align 4, !dbg !16766
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !16767
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #27, !dbg !16768
  call void @llvm.dbg.value(metadata i32 %35, metadata !16346, metadata !DIExpression()) #25, !dbg !16769
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16351, metadata !DIExpression()) #25, !dbg !16769
  call void @llvm.dbg.value(metadata i32 %35, metadata !16354, metadata !DIExpression()) #25, !dbg !16771
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !16773, !srcloc !16360
  ret void, !dbg !16774
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16775 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16779, metadata !DIExpression()), !dbg !16783
  call void @llvm.dbg.value(metadata i32 0, metadata !16780, metadata !DIExpression()), !dbg !16784
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16278, metadata !DIExpression()) #25, !dbg !16785
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16787, !srcloc !16293
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16787
  call void @llvm.dbg.value(metadata i32 %2, metadata !16290, metadata !DIExpression()) #25, !dbg !16789
  call void @llvm.dbg.value(metadata i32 undef, metadata !16291, metadata !DIExpression()) #25, !dbg !16789
  call void @llvm.dbg.value(metadata i32 %2, metadata !16284, metadata !DIExpression()) #25, !dbg !16785
  call void @llvm.dbg.value(metadata i32 %2, metadata !16782, metadata !DIExpression()), !dbg !16784
  call void @llvm.dbg.value(metadata i64 0, metadata !16779, metadata !DIExpression()), !dbg !16783
  call void @llvm.dbg.value(metadata i32 undef, metadata !16780, metadata !DIExpression()), !dbg !16784
  %3 = load i64, i64* @curr_tick, align 8, !dbg !16790
  %4 = tail call fastcc i32 @elapsed.165() #26, !dbg !16793
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !16779, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16783
  call void @llvm.dbg.value(metadata i32 %2, metadata !16346, metadata !DIExpression()) #25, !dbg !16794
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16351, metadata !DIExpression()) #25, !dbg !16794
  call void @llvm.dbg.value(metadata i32 %2, metadata !16354, metadata !DIExpression()) #25, !dbg !16796
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16798, !srcloc !16360
  call void @llvm.dbg.value(metadata i32 undef, metadata !16780, metadata !DIExpression()), !dbg !16784
  %5 = sext i32 %4 to i64, !dbg !16793
  %6 = add i64 %3, %5, !dbg !16799
  ret i64 %6, !dbg !16800
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16801 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !16802
  %2 = trunc i64 %1 to i32, !dbg !16803
  ret i32 %2, !dbg !16804
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16805 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !16806
  ret i64 %1, !dbg !16807
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16808 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16810, metadata !DIExpression()), !dbg !16817
  %2 = icmp eq i32 %0, 0, !dbg !16818
  br i1 %2, label %10, label %3, !dbg !16820

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !16821
  call void @llvm.dbg.value(metadata i32 %4, metadata !16811, metadata !DIExpression()), !dbg !16817
  %5 = mul i32 %0, 84, !dbg !16822
  call void @llvm.dbg.value(metadata i32 %5, metadata !16812, metadata !DIExpression()), !dbg !16817
  br label %6, !dbg !16823

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !16824
  call void @llvm.dbg.value(metadata i32 %7, metadata !16813, metadata !DIExpression()), !dbg !16825
  %8 = sub i32 %7, %4, !dbg !16826
  %9 = icmp ult i32 %8, %5, !dbg !16828
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16829
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !16830 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !16831
  ret i32 %1, !dbg !16832
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !16833 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !16835
  ret i32 %1, !dbg !16836
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16837 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16841, metadata !DIExpression()), !dbg !16843
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16844

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !16845
  br label %14, !dbg !16849

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16842, metadata !DIExpression()), !dbg !16843
  %6 = icmp slt i64 %2, -1, !dbg !16850
  br i1 %6, label %7, label %9, !dbg !16853

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16854
  br label %14, !dbg !16855

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !16857
  %11 = icmp ugt i64 %2, 1, !dbg !16858
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16858
  %13 = add nsw i64 %10, %12, !dbg !16859
  br label %14, !dbg !16860

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16861
  ret i64 %15, !dbg !16862
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16863 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.186, i32 0, i32 0)) #27, !dbg !16865
  ret void, !dbg !16866
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !16867 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !16869, metadata !DIExpression()), !dbg !16889
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !16870, metadata !DIExpression()), !dbg !16890
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !16891

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !16892

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !16870, metadata !DIExpression()), !dbg !16890
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !16893
  %6 = load i8*, i8** %5, align 4, !dbg !16893
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !16897
  %8 = load i32, i32* %7, align 4, !dbg !16897
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !16898
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !16899
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !16870, metadata !DIExpression()), !dbg !16890
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !16900
  br i1 %10, label %3, label %2, !dbg !16891, !llvm.loop !16902
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !16904 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16908, metadata !DIExpression()), !dbg !16911
  call void @llvm.dbg.value(metadata i8* %1, metadata !16909, metadata !DIExpression()), !dbg !16911
  call void @llvm.dbg.value(metadata i32 %2, metadata !16910, metadata !DIExpression()), !dbg !16911
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !16912
  tail call fastcc void @z_waitq_init.188(%struct._wait_q_t* noundef nonnull %4) #26, !dbg !16913
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !16914
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !16915
  ret void, !dbg !16916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.188(%struct._wait_q_t* noundef %0) unnamed_addr #4 !dbg !16917 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16922, metadata !DIExpression()), !dbg !16923
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16924
  tail call fastcc void @sys_dlist_init.189(%struct._dnode* noundef %2) #26, !dbg !16925
  ret void, !dbg !16926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.189(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !16927 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16932, metadata !DIExpression()), !dbg !16933
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16934
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16935
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16936
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16937
  ret void, !dbg !16938
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16939 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !16950, metadata !DIExpression()), !dbg !16960
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16947, metadata !DIExpression()), !dbg !16960
  call void @llvm.dbg.value(metadata i32 %1, metadata !16948, metadata !DIExpression()), !dbg !16960
  call void @llvm.dbg.value(metadata i32 %2, metadata !16949, metadata !DIExpression()), !dbg !16960
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !16961
  call void @llvm.dbg.value(metadata i64 %6, metadata !16952, metadata !DIExpression()), !dbg !16960
  call void @llvm.dbg.value(metadata i8* null, metadata !16953, metadata !DIExpression()), !dbg !16960
  %7 = icmp eq i64 %5, -1, !dbg !16962
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !16962
  call void @llvm.dbg.value(metadata i64 %8, metadata !16952, metadata !DIExpression()), !dbg !16960
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !16963
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16964, metadata !DIExpression()) #25, !dbg !16971
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16973, !srcloc !16979
  call void @llvm.dbg.value(metadata i32 undef, metadata !16976, metadata !DIExpression()) #25, !dbg !16980
  call void @llvm.dbg.value(metadata i32 undef, metadata !16977, metadata !DIExpression()) #25, !dbg !16980
  call void @llvm.dbg.value(metadata i32 undef, metadata !16970, metadata !DIExpression()) #25, !dbg !16971
  call void @llvm.dbg.value(metadata i32 undef, metadata !16954, metadata !DIExpression()), !dbg !16960
  call void @llvm.dbg.value(metadata i8 0, metadata !16959, metadata !DIExpression()), !dbg !16960
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !16953, metadata !DIExpression()), !dbg !16960
  call void @llvm.dbg.value(metadata i8 0, metadata !16959, metadata !DIExpression()), !dbg !16960
  call void @llvm.dbg.value(metadata i32 undef, metadata !16954, metadata !DIExpression()), !dbg !16960
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !16981
  call void @llvm.dbg.value(metadata i8* %12, metadata !16953, metadata !DIExpression()), !dbg !16960
  %13 = tail call i64 @sys_clock_tick_get() #27, !dbg !16983
  call void @llvm.dbg.value(metadata i64 %13, metadata !16951, metadata !DIExpression()), !dbg !16960
  %14 = icmp eq i8* %12, null, !dbg !16984
  br i1 %14, label %15, label %31, !dbg !16986

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !16954, metadata !DIExpression()), !dbg !16960
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !16986

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !16959, metadata !DIExpression()), !dbg !16960
  %20 = sub nsw i64 %8, %18, !dbg !16987
  %21 = icmp slt i64 %20, 1, !dbg !16988
  br i1 %21, label %31, label %22, !dbg !16989

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !16960
  call void @llvm.dbg.value(metadata i8 undef, metadata !16959, metadata !DIExpression()), !dbg !16960
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !16990
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !16990
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %struct._wait_q_t* noundef nonnull %16, [1 x i64] %25) #27, !dbg !16990
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16964, metadata !DIExpression()) #25, !dbg !16991
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16993, !srcloc !16979
  call void @llvm.dbg.value(metadata i32 undef, metadata !16976, metadata !DIExpression()) #25, !dbg !16995
  call void @llvm.dbg.value(metadata i32 undef, metadata !16977, metadata !DIExpression()) #25, !dbg !16995
  call void @llvm.dbg.value(metadata i32 undef, metadata !16970, metadata !DIExpression()) #25, !dbg !16991
  call void @llvm.dbg.value(metadata i32 undef, metadata !16954, metadata !DIExpression()), !dbg !16960
  call void @llvm.dbg.value(metadata i8* null, metadata !16953, metadata !DIExpression()), !dbg !16960
  call void @llvm.dbg.value(metadata i32 undef, metadata !16954, metadata !DIExpression()), !dbg !16960
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !16981
  call void @llvm.dbg.value(metadata i8* %28, metadata !16953, metadata !DIExpression()), !dbg !16960
  %29 = tail call i64 @sys_clock_tick_get() #27, !dbg !16983
  call void @llvm.dbg.value(metadata i64 %29, metadata !16951, metadata !DIExpression()), !dbg !16960
  %30 = icmp eq i8* %28, null, !dbg !16984
  br i1 %30, label %17, label %31, !dbg !16986, !llvm.loop !16996

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !16981
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !16960
  call void @llvm.dbg.value(metadata i8* %33, metadata !16953, metadata !DIExpression()), !dbg !16960
  call void @llvm.dbg.value(metadata i32 %34, metadata !16999, metadata !DIExpression()) #25, !dbg !17005
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17004, metadata !DIExpression()) #25, !dbg !17005
  call void @llvm.dbg.value(metadata i32 %34, metadata !17007, metadata !DIExpression()) #25, !dbg !17010
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #25, !dbg !17012, !srcloc !17013
  ret i8* %33, !dbg !17014
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17015 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17021, metadata !DIExpression()), !dbg !17023
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17019, metadata !DIExpression()), !dbg !17023
  call void @llvm.dbg.value(metadata i32 %1, metadata !17020, metadata !DIExpression()), !dbg !17023
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !17024
  call void @llvm.dbg.value(metadata i8* %4, metadata !17022, metadata !DIExpression()), !dbg !17023
  ret i8* %4, !dbg !17025
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !17026 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !17030, metadata !DIExpression()), !dbg !17033
  call void @llvm.dbg.value(metadata i8* %1, metadata !17031, metadata !DIExpression()), !dbg !17033
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16964, metadata !DIExpression()) #25, !dbg !17034
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17036, !srcloc !16979
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17036
  call void @llvm.dbg.value(metadata i32 %4, metadata !16976, metadata !DIExpression()) #25, !dbg !17038
  call void @llvm.dbg.value(metadata i32 undef, metadata !16977, metadata !DIExpression()) #25, !dbg !17038
  call void @llvm.dbg.value(metadata i32 %4, metadata !16970, metadata !DIExpression()) #25, !dbg !17034
  call void @llvm.dbg.value(metadata i32 %4, metadata !17032, metadata !DIExpression()), !dbg !17033
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !17039
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #27, !dbg !17040
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !17041
  %7 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %6) #27, !dbg !17043
  %8 = icmp eq i32 %7, 0, !dbg !17044
  br i1 %8, label %12, label %9, !dbg !17045

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !17046
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !17047
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #27, !dbg !17047
  br label %13, !dbg !17049

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !16999, metadata !DIExpression()) #25, !dbg !17050
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17004, metadata !DIExpression()) #25, !dbg !17050
  call void @llvm.dbg.value(metadata i32 %4, metadata !17007, metadata !DIExpression()) #25, !dbg !17053
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !17055, !srcloc !17013
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !17056
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!765, !2, !2510, !27, !264, !2512, !2514, !2547, !2585, !274, !318, !2587, !2598, !2644, !2646, !2674, !2702, !2745, !2816, !2861, !347, !492, !2889, !528, !538, !563, !803, !2894, !942, !1036, !1341, !1680, !2935, !1793, !1883, !2937, !3000, !3067, !1936, !3070, !1942, !2305, !3088, !3090, !2325, !3194, !2440, !3197, !2479}
!llvm.ident = !{!3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199, !3199}
!llvm.module.flags = !{!3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "uart_msgq", scope: !27, file: !209, line: 19, type: !223, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !206, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/drivers/uart/echo_bot/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !107, !108}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !104, line: 46, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !106)
!106 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !111, line: 336, size: 608, elements: !112)
!111 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!112 = !{!113, !145, !149, !153, !167, !172, !178, !184, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198}
!113 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !110, file: !111, line: 365, baseType: !114, size: 32)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DISubroutineType(types: !116)
!116 = !{!107, !117, !144}
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !121)
!120 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!121 = !{!122, !126, !127, !128, !137, !138}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !119, file: !120, line: 380, baseType: !123, size: 32)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!125 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !119, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !119, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !119, file: !120, line: 386, baseType: !129, size: 32, offset: 96)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 32)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !131)
!131 = !{!132, !135}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !130, file: !120, line: 359, baseType: !133, size: 8)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !134)
!134 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !130, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!136 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !119, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !119, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !120, line: 43, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !143)
!143 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !110, file: !111, line: 366, baseType: !146, size: 32, offset: 32)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = !DISubroutineType(types: !148)
!148 = !{null, !117, !134}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !110, file: !111, line: 374, baseType: !150, size: 32, offset: 64)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = !DISubroutineType(types: !152)
!152 = !{!107, !117}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !110, file: !111, line: 377, baseType: !154, size: 32, offset: 96)
!154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!155 = !DISubroutineType(types: !156)
!156 = !{!107, !117, !157}
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 32)
!158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !159)
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !111, line: 122, size: 64, elements: !160)
!160 = !{!161, !163, !164, !165, !166}
!161 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !159, file: !111, line: 123, baseType: !162, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !159, file: !111, line: 124, baseType: !133, size: 8, offset: 32)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !159, file: !111, line: 125, baseType: !133, size: 8, offset: 40)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !159, file: !111, line: 126, baseType: !133, size: 8, offset: 48)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !159, file: !111, line: 127, baseType: !133, size: 8, offset: 56)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !110, file: !111, line: 379, baseType: !168, size: 32, offset: 128)
!168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!169 = !DISubroutineType(types: !170)
!170 = !{!107, !117, !171}
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !110, file: !111, line: 384, baseType: !173, size: 32, offset: 160)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!174 = !DISubroutineType(types: !175)
!175 = !{!107, !117, !176, !107}
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !133)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !110, file: !111, line: 393, baseType: !179, size: 32, offset: 192)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DISubroutineType(types: !181)
!181 = !{!107, !117, !182, !183}
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 32)
!183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !110, file: !111, line: 402, baseType: !185, size: 32, offset: 224)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!186 = !DISubroutineType(types: !187)
!187 = !{null, !117}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !110, file: !111, line: 405, baseType: !185, size: 32, offset: 256)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !110, file: !111, line: 408, baseType: !150, size: 32, offset: 288)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !110, file: !111, line: 411, baseType: !185, size: 32, offset: 320)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !110, file: !111, line: 414, baseType: !185, size: 32, offset: 352)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !110, file: !111, line: 417, baseType: !150, size: 32, offset: 384)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !110, file: !111, line: 420, baseType: !150, size: 32, offset: 416)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !110, file: !111, line: 423, baseType: !185, size: 32, offset: 448)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !110, file: !111, line: 426, baseType: !185, size: 32, offset: 480)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !110, file: !111, line: 429, baseType: !150, size: 32, offset: 512)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !110, file: !111, line: 432, baseType: !150, size: 32, offset: 544)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !110, file: !111, line: 435, baseType: !199, size: 32, offset: 576)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DISubroutineType(types: !201)
!201 = !{null, !117, !202, !102}
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !111, line: 142, baseType: !203)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!204 = !DISubroutineType(types: !205)
!205 = !{null, !117, !102}
!206 = !{!25, !207, !211, !216, !221}
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "uart_dev", scope: !27, file: !209, line: 21, type: !210, isLocal: true, isDefinition: true)
!209 = !DIFile(filename: "zephyr/samples/drivers/uart/echo_bot/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !117)
!211 = !DIGlobalVariableExpression(var: !212, expr: !DIExpression())
!212 = distinct !DIGlobalVariable(name: "_k_fifo_buf_uart_msgq", scope: !27, file: !209, line: 19, type: !213, isLocal: true, isDefinition: true, align: 32)
!213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 2560, elements: !214)
!214 = !{!215}
!215 = !DISubrange(count: 320)
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "rx_buf", scope: !27, file: !209, line: 24, type: !218, isLocal: true, isDefinition: true)
!218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 256, elements: !219)
!219 = !{!220}
!220 = !DISubrange(count: 32)
!221 = !DIGlobalVariableExpression(var: !222, expr: !DIExpression())
!222 = distinct !DIGlobalVariable(name: "rx_buf_pos", scope: !27, file: !209, line: 25, type: !107, isLocal: true, isDefinition: true)
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !224, line: 4204, size: 320, elements: !225)
!224 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!225 = !{!226, !247, !251, !254, !255, !257, !258, !259, !260, !261}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !223, file: !224, line: 4206, baseType: !227, size: 64)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !229)
!228 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !230)
!230 = !{!231}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !229, file: !228, line: 232, baseType: !232, size: 64)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !234)
!233 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !235)
!235 = !{!236, !242}
!236 = !DIDerivedType(tag: DW_TAG_member, scope: !234, file: !233, line: 38, baseType: !237, size: 32)
!237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !234, file: !233, line: 38, size: 32, elements: !238)
!238 = !{!239, !241}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !237, file: !233, line: 39, baseType: !240, size: 32)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !237, file: !233, line: 40, baseType: !240, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_member, scope: !234, file: !233, line: 42, baseType: !243, size: 32, offset: 32)
!243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !234, file: !233, line: 42, size: 32, elements: !244)
!244 = !{!245, !246}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !243, file: !233, line: 43, baseType: !240, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !243, file: !233, line: 44, baseType: !240, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !223, file: !224, line: 4208, baseType: !248, offset: 64)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!249 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!250 = !{}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !223, file: !224, line: 4210, baseType: !252, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !253, line: 214, baseType: !32)
!253 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!254 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !223, file: !224, line: 4212, baseType: !162, size: 32, offset: 96)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !223, file: !224, line: 4214, baseType: !256, size: 32, offset: 128)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !223, file: !224, line: 4216, baseType: !256, size: 32, offset: 160)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !223, file: !224, line: 4218, baseType: !256, size: 32, offset: 192)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !223, file: !224, line: 4220, baseType: !256, size: 32, offset: 224)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !223, file: !224, line: 4222, baseType: !162, size: 32, offset: 256)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !223, file: !224, line: 4227, baseType: !133, size: 8, offset: 288)
!262 = !DIGlobalVariableExpression(var: !263, expr: !DIExpression())
!263 = distinct !DIGlobalVariable(name: "_char_out", scope: !264, file: !268, line: 54, type: !269, isLocal: false, isDefinition: true)
!264 = distinct !DICompileUnit(language: DW_LANG_C99, file: !265, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, globals: !267, splitDebugInlining: false, nameTableKind: None)
!265 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!266 = !{!102, !107}
!267 = !{!262}
!268 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = !DISubroutineType(types: !271)
!271 = !{!107, !107}
!272 = !DIGlobalVariableExpression(var: !273, expr: !DIExpression())
!273 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !274, file: !291, line: 56, type: !292, isLocal: true, isDefinition: true, align: 32)
!274 = distinct !DICompileUnit(language: DW_LANG_C99, file: !275, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !276, globals: !290, splitDebugInlining: false, nameTableKind: None)
!275 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!276 = !{!277}
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !279, line: 407, baseType: !280)
!279 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f446xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 398, size: 224, elements: !281)
!281 = !{!282, !284, !285, !286, !287, !288, !289}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !280, file: !279, line: 400, baseType: !283, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !162)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !280, file: !279, line: 401, baseType: !283, size: 32, offset: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !280, file: !279, line: 402, baseType: !283, size: 32, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !280, file: !279, line: 403, baseType: !283, size: 32, offset: 96)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !280, file: !279, line: 404, baseType: !283, size: 32, offset: 128)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !280, file: !279, line: 405, baseType: !283, size: 32, offset: 160)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !280, file: !279, line: 406, baseType: !283, size: 32, offset: 192)
!290 = !{!272}
!291 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !293)
!293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !295)
!294 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!295 = !{!296, !315}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !293, file: !294, line: 60, baseType: !297, size: 32)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 32)
!298 = !DISubroutineType(types: !299)
!299 = !{!107, !300}
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !302)
!302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !303)
!303 = !{!304, !305, !306, !307, !313, !314}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !302, file: !120, line: 380, baseType: !123, size: 32)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !302, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !302, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !302, file: !120, line: 386, baseType: !308, size: 32, offset: 96)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !310)
!310 = !{!311, !312}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !309, file: !120, line: 359, baseType: !133, size: 8)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !309, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !302, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !302, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !293, file: !294, line: 65, baseType: !300, size: 32, offset: 32)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !318, file: !321, line: 71, type: !322, isLocal: true, isDefinition: true, align: 32)
!318 = distinct !DICompileUnit(language: DW_LANG_C99, file: !319, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !320, splitDebugInlining: false, nameTableKind: None)
!319 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!320 = !{!316}
!321 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !323)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !324)
!324 = !{!325, !344}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !323, file: !294, line: 60, baseType: !326, size: 32)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 32)
!327 = !DISubroutineType(types: !328)
!328 = !{!107, !329}
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 32)
!330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !331)
!331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !332)
!332 = !{!333, !334, !335, !336, !342, !343}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !331, file: !120, line: 380, baseType: !123, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !331, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !331, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !331, file: !120, line: 386, baseType: !337, size: 32, offset: 96)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 32)
!338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !339)
!339 = !{!340, !341}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !338, file: !120, line: 359, baseType: !133, size: 8)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !338, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !331, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !331, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !323, file: !294, line: 65, baseType: !329, size: 32, offset: 32)
!345 = !DIGlobalVariableExpression(var: !346, expr: !DIExpression())
!346 = distinct !DIGlobalVariable(name: "static_regions", scope: !347, file: !354, line: 62, type: !488, isLocal: true, isDefinition: true)
!347 = distinct !DICompileUnit(language: DW_LANG_C99, file: !348, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !349, globals: !350, splitDebugInlining: false, nameTableKind: None)
!348 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!349 = !{!252, !107, !162, !102}
!350 = !{!351, !345}
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !353, file: !354, line: 198, type: !474, isLocal: true, isDefinition: true)
!353 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !354, file: !354, line: 175, type: !355, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !347, retainedNodes: !469)
!354 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!355 = !DISubroutineType(types: !356)
!356 = !{null, !357}
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 32)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !360)
!359 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!360 = !{!361, !426, !439, !440, !441, !442, !448, !464}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !358, file: !359, line: 247, baseType: !362, size: 384)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !363)
!363 = !{!364, !391, !398, !399, !400, !413, !414, !415}
!364 = !DIDerivedType(tag: DW_TAG_member, scope: !362, file: !359, line: 60, baseType: !365, size: 64)
!365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !362, file: !359, line: 60, size: 64, elements: !366)
!366 = !{!367, !382}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !365, file: !359, line: 61, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !369)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !370)
!370 = !{!371, !377}
!371 = !DIDerivedType(tag: DW_TAG_member, scope: !369, file: !233, line: 38, baseType: !372, size: 32)
!372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !369, file: !233, line: 38, size: 32, elements: !373)
!373 = !{!374, !376}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !372, file: !233, line: 39, baseType: !375, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !372, file: !233, line: 40, baseType: !375, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, scope: !369, file: !233, line: 42, baseType: !378, size: 32, offset: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !369, file: !233, line: 42, size: 32, elements: !379)
!379 = !{!380, !381}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !378, file: !233, line: 43, baseType: !375, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !378, file: !233, line: 44, baseType: !375, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !365, file: !359, line: 62, baseType: !383, size: 64)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !385)
!384 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!385 = !{!386}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !383, file: !384, line: 50, baseType: !387, size: 64)
!387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 64, elements: !389)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 32)
!389 = !{!390}
!390 = !DISubrange(count: 2)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !362, file: !359, line: 68, baseType: !392, size: 32, offset: 64)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !394)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !395)
!395 = !{!396}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !394, file: !228, line: 232, baseType: !397, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !369)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !362, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !362, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!400 = !DIDerivedType(tag: DW_TAG_member, scope: !362, file: !359, line: 90, baseType: !401, size: 16, offset: 112)
!401 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !362, file: !359, line: 90, size: 16, elements: !402)
!402 = !{!403, !410}
!403 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !359, line: 91, baseType: !404, size: 16)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !401, file: !359, line: 91, size: 16, elements: !405)
!405 = !{!406, !409}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !404, file: !359, line: 96, baseType: !407, size: 8)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !408)
!408 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !404, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !401, file: !359, line: 100, baseType: !411, size: 16)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !412)
!412 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !362, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !362, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !362, file: !359, line: 131, baseType: !416, size: 192, offset: 192)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !417)
!417 = !{!418, !419, !425}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !416, file: !228, line: 245, baseType: !368, size: 64)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !416, file: !228, line: 246, baseType: !420, size: 32, offset: 64)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !421)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!422 = !DISubroutineType(types: !423)
!423 = !{null, !424}
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !416, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !358, file: !359, line: 250, baseType: !427, size: 288, offset: 384)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !429)
!428 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!429 = !{!430, !431, !432, !433, !434, !435, !436, !437, !438}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !427, file: !428, line: 26, baseType: !162, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !427, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !427, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !427, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !427, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !427, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !427, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !427, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !427, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !358, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !358, file: !359, line: 256, baseType: !393, size: 64, offset: 704)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !358, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !358, file: !359, line: 300, baseType: !443, size: 96, offset: 800)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !444)
!444 = !{!445, !446, !447}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !443, file: !359, line: 153, baseType: !22, size: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !443, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !443, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !358, file: !359, line: 325, baseType: !449, size: 32, offset: 896)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 32)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !451)
!451 = !{!452, !461, !462}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !450, file: !224, line: 5074, baseType: !453, size: 96)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !455)
!454 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!455 = !{!456, !459, !460}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !453, file: !454, line: 57, baseType: !457, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 32)
!458 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !454, line: 57, flags: DIFlagFwdDecl)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !453, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !453, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !450, file: !224, line: 5075, baseType: !393, size: 64, offset: 96)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !450, file: !224, line: 5076, baseType: !463, offset: 160)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !358, file: !359, line: 343, baseType: !465, size: 64, offset: 928)
!465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !466)
!466 = !{!467, !468}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !465, file: !428, line: 63, baseType: !162, size: 32)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !465, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!469 = !{!470, !471, !472, !473}
!470 = !DILocalVariable(name: "thread", arg: 1, scope: !353, file: !354, line: 175, type: !357)
!471 = !DILocalVariable(name: "region_num", scope: !353, file: !354, line: 200, type: !133)
!472 = !DILocalVariable(name: "guard_start", scope: !353, file: !354, line: 265, type: !22)
!473 = !DILocalVariable(name: "guard_size", scope: !353, file: !354, line: 266, type: !252)
!474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !475, size: 96, elements: !486)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !476, line: 52, size: 96, elements: !477)
!476 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!477 = !{!478, !479, !480}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !475, file: !476, line: 53, baseType: !22, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !475, file: !476, line: 54, baseType: !252, size: 32, offset: 32)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !475, file: !476, line: 55, baseType: !481, size: 32, offset: 64)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !482, line: 151, baseType: !483)
!482 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !482, line: 149, size: 32, elements: !484)
!484 = !{!485}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !483, file: !482, line: 150, baseType: !162, size: 32)
!486 = !{!487}
!487 = !DISubrange(count: 1)
!488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !489, size: 96, elements: !486)
!489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !475)
!490 = !DIGlobalVariableExpression(var: !491, expr: !DIExpression())
!491 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !492, file: !525, line: 39, type: !133, isLocal: true, isDefinition: true)
!492 = distinct !DICompileUnit(language: DW_LANG_C99, file: !493, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !494, globals: !524, splitDebugInlining: false, nameTableKind: None)
!493 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!494 = !{!495, !102, !107, !512, !133}
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 32)
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !497, line: 1226, baseType: !498)
!497 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 1213, size: 352, elements: !499)
!499 = !{!500, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !498, file: !497, line: 1215, baseType: !501, size: 32)
!501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !283)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !498, file: !497, line: 1216, baseType: !283, size: 32, offset: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !498, file: !497, line: 1217, baseType: !283, size: 32, offset: 64)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !498, file: !497, line: 1218, baseType: !283, size: 32, offset: 96)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !498, file: !497, line: 1219, baseType: !283, size: 32, offset: 128)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !498, file: !497, line: 1220, baseType: !283, size: 32, offset: 160)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !498, file: !497, line: 1221, baseType: !283, size: 32, offset: 192)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !498, file: !497, line: 1222, baseType: !283, size: 32, offset: 224)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !498, file: !497, line: 1223, baseType: !283, size: 32, offset: 256)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !498, file: !497, line: 1224, baseType: !283, size: 32, offset: 288)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !498, file: !497, line: 1225, baseType: !283, size: 32, offset: 320)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 32)
!513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !514)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !515, line: 27, size: 96, elements: !516)
!515 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!516 = !{!517, !518, !519}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !514, file: !515, line: 29, baseType: !162, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !514, file: !515, line: 31, baseType: !123, size: 32, offset: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !514, file: !515, line: 37, baseType: !520, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !482, line: 146, baseType: !521)
!521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !482, line: 141, size: 32, elements: !522)
!522 = !{!523}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !521, file: !482, line: 143, baseType: !162, size: 32)
!524 = !{!490}
!525 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !528, file: !535, line: 21, type: !269, isLocal: true, isDefinition: true)
!528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !530, globals: !534, splitDebugInlining: false, nameTableKind: None)
!529 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!530 = !{!531, !107, !102}
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !533, line: 22, baseType: !107)
!533 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!526}
!535 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !538, file: !543, line: 13, type: !560, isLocal: true, isDefinition: true)
!538 = distinct !DICompileUnit(language: DW_LANG_C99, file: !539, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !540, splitDebugInlining: false, nameTableKind: None)
!539 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!540 = !{!541, !536}
!541 = !DIGlobalVariableExpression(var: !542, expr: !DIExpression())
!542 = distinct !DIGlobalVariable(name: "mpu_config", scope: !538, file: !543, line: 37, type: !544, isLocal: false, isDefinition: true)
!543 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !545)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !515, line: 41, size: 64, elements: !546)
!546 = !{!547, !548}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !545, file: !515, line: 43, baseType: !162, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !545, file: !515, line: 45, baseType: !549, size: 32, offset: 32)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !551)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !515, line: 27, size: 96, elements: !552)
!552 = !{!553, !554, !555}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !551, file: !515, line: 29, baseType: !162, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !551, file: !515, line: 31, baseType: !123, size: 32, offset: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !551, file: !515, line: 37, baseType: !556, size: 32, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !482, line: 146, baseType: !557)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !482, line: 141, size: 32, elements: !558)
!558 = !{!559}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !557, file: !482, line: 143, baseType: !162, size: 32)
!560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 192, elements: !389)
!561 = !DIGlobalVariableExpression(var: !562, expr: !DIExpression())
!562 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !563, file: !676, line: 72, type: !760, isLocal: true, isDefinition: true)
!563 = distinct !DICompileUnit(language: DW_LANG_C99, file: !564, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !565, retainedTypes: !662, globals: !673, splitDebugInlining: false, nameTableKind: None)
!564 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!565 = !{!30, !566}
!566 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !279, line: 65, baseType: !107, size: 32, elements: !567)
!567 = !{!568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661}
!568 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!569 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!570 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!571 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!572 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!573 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!574 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!575 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!576 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!577 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!578 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!579 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!580 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!581 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!582 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!583 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!584 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!585 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!586 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!587 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!588 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!589 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!590 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!591 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!592 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!593 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!594 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!595 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!596 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!597 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!598 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!599 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!600 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!601 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!602 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!603 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!604 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!605 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!606 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!607 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!608 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!609 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!610 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!611 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!612 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!613 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!614 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!615 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!616 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!617 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!618 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!619 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!620 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!621 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!622 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!623 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!624 = !DIEnumerator(name: "FMC_IRQn", value: 48)
!625 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!626 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!627 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!628 = !DIEnumerator(name: "UART4_IRQn", value: 52)
!629 = !DIEnumerator(name: "UART5_IRQn", value: 53)
!630 = !DIEnumerator(name: "TIM6_DAC_IRQn", value: 54)
!631 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!632 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!633 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!634 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!635 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!636 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!637 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!638 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!639 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!640 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!641 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!642 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!643 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!644 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!645 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!646 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!647 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!648 = !DIEnumerator(name: "OTG_HS_EP1_OUT_IRQn", value: 74)
!649 = !DIEnumerator(name: "OTG_HS_EP1_IN_IRQn", value: 75)
!650 = !DIEnumerator(name: "OTG_HS_WKUP_IRQn", value: 76)
!651 = !DIEnumerator(name: "OTG_HS_IRQn", value: 77)
!652 = !DIEnumerator(name: "DCMI_IRQn", value: 78)
!653 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!654 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!655 = !DIEnumerator(name: "SAI1_IRQn", value: 87)
!656 = !DIEnumerator(name: "SAI2_IRQn", value: 91)
!657 = !DIEnumerator(name: "QUADSPI_IRQn", value: 92)
!658 = !DIEnumerator(name: "CEC_IRQn", value: 93)
!659 = !DIEnumerator(name: "SPDIF_RX_IRQn", value: 94)
!660 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!661 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!662 = !{!252, !107, !102, !663}
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 32)
!664 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !279, line: 392, baseType: !665)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 384, size: 192, elements: !666)
!666 = !{!667, !668, !669, !670, !671, !672}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !665, file: !279, line: 386, baseType: !283, size: 32)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !665, file: !279, line: 387, baseType: !283, size: 32, offset: 32)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !665, file: !279, line: 388, baseType: !283, size: 32, offset: 64)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !665, file: !279, line: 389, baseType: !283, size: 32, offset: 96)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !665, file: !279, line: 390, baseType: !283, size: 32, offset: 128)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !665, file: !279, line: 391, baseType: !283, size: 32, offset: 160)
!673 = !{!674, !680, !696, !707, !724, !561, !726, !740, !742, !744, !746, !748, !750, !752, !754, !756, !758}
!674 = !DIGlobalVariableExpression(var: !675, expr: !DIExpression())
!675 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !563, file: !676, line: 424, type: !677, isLocal: false, isDefinition: true, align: 16)
!676 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !678)
!678 = !{!679}
!679 = !DISubrange(count: 4)
!680 = !DIGlobalVariableExpression(var: !681, expr: !DIExpression())
!681 = distinct !DIGlobalVariable(name: "__device_dts_ord_36", scope: !563, file: !676, line: 424, type: !682, isLocal: false, isDefinition: true, align: 32)
!682 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !683)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !684)
!684 = !{!685, !686, !687, !688, !694, !695}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !683, file: !120, line: 380, baseType: !123, size: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !683, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !683, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !683, file: !120, line: 386, baseType: !689, size: 32, offset: 96)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 32)
!690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !691)
!691 = !{!692, !693}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !690, file: !120, line: 359, baseType: !133, size: 8)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !690, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !683, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !683, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!696 = !DIGlobalVariableExpression(var: !697, expr: !DIExpression())
!697 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_36", scope: !563, file: !676, line: 424, type: !698, isLocal: true, isDefinition: true, align: 32)
!698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !699)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !700)
!700 = !{!701, !706}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !699, file: !294, line: 60, baseType: !702, size: 32)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 32)
!703 = !DISubroutineType(types: !704)
!704 = !{!107, !705}
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 32)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !699, file: !294, line: 65, baseType: !705, size: 32, offset: 32)
!707 = !DIGlobalVariableExpression(var: !708, expr: !DIExpression())
!708 = distinct !DIGlobalVariable(name: "exti_data", scope: !563, file: !676, line: 423, type: !709, isLocal: true, isDefinition: true)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !676, line: 107, size: 1472, elements: !710)
!710 = !{!711}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !709, file: !676, line: 109, baseType: !712, size: 1472)
!712 = !DICompositeType(tag: DW_TAG_array_type, baseType: !713, size: 1472, elements: !722)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !676, line: 101, size: 64, elements: !714)
!714 = !{!715, !721}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !713, file: !676, line: 102, baseType: !716, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !717, line: 63, baseType: !718)
!717 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 32)
!719 = !DISubroutineType(types: !720)
!720 = !{null, !107, !102}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !713, file: !676, line: 103, baseType: !102, size: 32, offset: 32)
!722 = !{!723}
!723 = !DISubrange(count: 23)
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_36", scope: !563, file: !676, line: 424, type: !690, isLocal: true, isDefinition: true, align: 8)
!726 = !DIGlobalVariableExpression(var: !727, expr: !DIExpression())
!727 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !728, file: !676, line: 493, type: !733, isLocal: true, isDefinition: true, align: 32)
!728 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !676, file: !676, line: 460, type: !729, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !731)
!729 = !DISubroutineType(types: !730)
!730 = !{null, !705}
!731 = !{!732}
!732 = !DILocalVariable(name: "dev", arg: 1, scope: !728, file: !676, line: 460, type: !705)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !734)
!734 = !{!735, !737, !738, !739}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !733, file: !10, line: 55, baseType: !736, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !733, file: !10, line: 57, baseType: !736, size: 32, offset: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !733, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !733, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!740 = !DIGlobalVariableExpression(var: !741, expr: !DIExpression())
!741 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !728, file: !676, line: 497, type: !733, isLocal: true, isDefinition: true, align: 32)
!742 = !DIGlobalVariableExpression(var: !743, expr: !DIExpression())
!743 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !728, file: !676, line: 507, type: !733, isLocal: true, isDefinition: true, align: 32)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !728, file: !676, line: 512, type: !733, isLocal: true, isDefinition: true, align: 32)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !728, file: !676, line: 516, type: !733, isLocal: true, isDefinition: true, align: 32)
!748 = !DIGlobalVariableExpression(var: !749, expr: !DIExpression())
!749 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !728, file: !676, line: 523, type: !733, isLocal: true, isDefinition: true, align: 32)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !728, file: !676, line: 527, type: !733, isLocal: true, isDefinition: true, align: 32)
!752 = !DIGlobalVariableExpression(var: !753, expr: !DIExpression())
!753 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !728, file: !676, line: 581, type: !733, isLocal: true, isDefinition: true, align: 32)
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !728, file: !676, line: 586, type: !733, isLocal: true, isDefinition: true, align: 32)
!756 = !DIGlobalVariableExpression(var: !757, expr: !DIExpression())
!757 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !728, file: !676, line: 591, type: !733, isLocal: true, isDefinition: true, align: 32)
!758 = !DIGlobalVariableExpression(var: !759, expr: !DIExpression())
!759 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !728, file: !676, line: 595, type: !733, isLocal: true, isDefinition: true, align: 32)
!760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !761, size: 736, elements: !722)
!761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !762)
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !279, line: 163, baseType: !566)
!763 = !DIGlobalVariableExpression(var: !764, expr: !DIExpression())
!764 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_36", scope: !765, file: !770, line: 25, type: !798, isLocal: false, isDefinition: true, align: 16)
!765 = distinct !DICompileUnit(language: DW_LANG_C99, file: !766, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !767, splitDebugInlining: false, nameTableKind: None)
!766 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!767 = !{!768, !763, !774, !776, !778, !780, !782, !784, !786, !788, !790, !792, !794, !796}
!768 = !DIGlobalVariableExpression(var: !769, expr: !DIExpression())
!769 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !765, file: !770, line: 20, type: !771, isLocal: false, isDefinition: true, align: 16)
!770 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 240, elements: !772)
!772 = !{!773}
!773 = !DISubrange(count: 15)
!774 = !DIGlobalVariableExpression(var: !775, expr: !DIExpression())
!775 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !765, file: !770, line: 32, type: !677, isLocal: false, isDefinition: true, align: 16)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !765, file: !770, line: 39, type: !677, isLocal: false, isDefinition: true, align: 16)
!778 = !DIGlobalVariableExpression(var: !779, expr: !DIExpression())
!779 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !765, file: !770, line: 46, type: !677, isLocal: false, isDefinition: true, align: 16)
!780 = !DIGlobalVariableExpression(var: !781, expr: !DIExpression())
!781 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !765, file: !770, line: 53, type: !677, isLocal: false, isDefinition: true, align: 16)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !765, file: !770, line: 60, type: !677, isLocal: false, isDefinition: true, align: 16)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!785 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !765, file: !770, line: 67, type: !677, isLocal: false, isDefinition: true, align: 16)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !765, file: !770, line: 74, type: !677, isLocal: false, isDefinition: true, align: 16)
!788 = !DIGlobalVariableExpression(var: !789, expr: !DIExpression())
!789 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !765, file: !770, line: 81, type: !677, isLocal: false, isDefinition: true, align: 16)
!790 = !DIGlobalVariableExpression(var: !791, expr: !DIExpression())
!791 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !765, file: !770, line: 88, type: !677, isLocal: false, isDefinition: true, align: 16)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !765, file: !770, line: 95, type: !677, isLocal: false, isDefinition: true, align: 16)
!794 = !DIGlobalVariableExpression(var: !795, expr: !DIExpression())
!795 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !765, file: !770, line: 102, type: !677, isLocal: false, isDefinition: true, align: 16)
!796 = !DIGlobalVariableExpression(var: !797, expr: !DIExpression())
!797 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !765, file: !770, line: 109, type: !677, isLocal: false, isDefinition: true, align: 16)
!798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 48, elements: !799)
!799 = !{!800}
!800 = !DISubrange(count: 3)
!801 = !DIGlobalVariableExpression(var: !802, expr: !DIExpression())
!802 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !803, file: !868, line: 398, type: !901, isLocal: true, isDefinition: true)
!803 = distinct !DICompileUnit(language: DW_LANG_C99, file: !804, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !805, retainedTypes: !818, globals: !865, splitDebugInlining: false, nameTableKind: None)
!804 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!805 = !{!806, !30, !811}
!806 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !807, line: 197, baseType: !32, size: 32, elements: !808)
!807 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!808 = !{!809, !810}
!809 = !DIEnumerator(name: "SUCCESS", value: 0)
!810 = !DIEnumerator(name: "ERROR", value: 1)
!811 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !812, line: 44, baseType: !32, size: 32, elements: !813)
!812 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!813 = !{!814, !815, !816, !817}
!814 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!815 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!816 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!817 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!818 = !{!102, !107, !162, !819, !858, !864}
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 32)
!820 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 586, baseType: !821)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 550, size: 1216, elements: !822)
!822 = !{!823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !821, file: !279, line: 552, baseType: !283, size: 32)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !821, file: !279, line: 553, baseType: !283, size: 32, offset: 32)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !821, file: !279, line: 554, baseType: !283, size: 32, offset: 64)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !821, file: !279, line: 555, baseType: !283, size: 32, offset: 96)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !821, file: !279, line: 556, baseType: !283, size: 32, offset: 128)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !821, file: !279, line: 557, baseType: !283, size: 32, offset: 160)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !821, file: !279, line: 558, baseType: !283, size: 32, offset: 192)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !821, file: !279, line: 559, baseType: !162, size: 32, offset: 224)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !821, file: !279, line: 560, baseType: !283, size: 32, offset: 256)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !821, file: !279, line: 561, baseType: !283, size: 32, offset: 288)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !821, file: !279, line: 562, baseType: !834, size: 64, offset: 320)
!834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 64, elements: !389)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !821, file: !279, line: 563, baseType: !283, size: 32, offset: 384)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !821, file: !279, line: 564, baseType: !283, size: 32, offset: 416)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !821, file: !279, line: 565, baseType: !283, size: 32, offset: 448)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !821, file: !279, line: 566, baseType: !162, size: 32, offset: 480)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !821, file: !279, line: 567, baseType: !283, size: 32, offset: 512)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !821, file: !279, line: 568, baseType: !283, size: 32, offset: 544)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !821, file: !279, line: 569, baseType: !834, size: 64, offset: 576)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !821, file: !279, line: 570, baseType: !283, size: 32, offset: 640)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !821, file: !279, line: 571, baseType: !283, size: 32, offset: 672)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !821, file: !279, line: 572, baseType: !283, size: 32, offset: 704)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !821, file: !279, line: 573, baseType: !162, size: 32, offset: 736)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !821, file: !279, line: 574, baseType: !283, size: 32, offset: 768)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !821, file: !279, line: 575, baseType: !283, size: 32, offset: 800)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !821, file: !279, line: 576, baseType: !834, size: 64, offset: 832)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !821, file: !279, line: 577, baseType: !283, size: 32, offset: 896)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !821, file: !279, line: 578, baseType: !283, size: 32, offset: 928)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !821, file: !279, line: 579, baseType: !834, size: 64, offset: 960)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !821, file: !279, line: 580, baseType: !283, size: 32, offset: 1024)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !821, file: !279, line: 581, baseType: !283, size: 32, offset: 1056)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !821, file: !279, line: 582, baseType: !283, size: 32, offset: 1088)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !821, file: !279, line: 583, baseType: !283, size: 32, offset: 1120)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !821, file: !279, line: 584, baseType: !283, size: 32, offset: 1152)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !821, file: !279, line: 585, baseType: !283, size: 32, offset: 1184)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 32)
!859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !860, line: 343, size: 64, elements: !861)
!860 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!861 = !{!862, !863}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !859, file: !860, line: 344, baseType: !162, size: 32)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !859, file: !860, line: 345, baseType: !162, size: 32, offset: 32)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!865 = !{!866, !872, !888, !899, !801}
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !803, file: !868, line: 752, type: !869, isLocal: false, isDefinition: true, align: 16)
!868 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 800, elements: !870)
!870 = !{!871}
!871 = !DISubrange(count: 50)
!872 = !DIGlobalVariableExpression(var: !873, expr: !DIExpression())
!873 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !803, file: !868, line: 752, type: !874, isLocal: false, isDefinition: true, align: 32)
!874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !875)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !876)
!876 = !{!877, !878, !879, !880, !886, !887}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !875, file: !120, line: 380, baseType: !123, size: 32)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !875, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !875, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !875, file: !120, line: 386, baseType: !881, size: 32, offset: 96)
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 32)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !883)
!883 = !{!884, !885}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !882, file: !120, line: 359, baseType: !133, size: 8)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !882, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !875, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !875, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!888 = !DIGlobalVariableExpression(var: !889, expr: !DIExpression())
!889 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !803, file: !868, line: 752, type: !890, isLocal: true, isDefinition: true, align: 32)
!890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !891)
!891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !892)
!892 = !{!893, !898}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !891, file: !294, line: 60, baseType: !894, size: 32)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 32)
!895 = !DISubroutineType(types: !896)
!896 = !{!107, !897}
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 32)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !891, file: !294, line: 65, baseType: !897, size: 32, offset: 32)
!899 = !DIGlobalVariableExpression(var: !900, expr: !DIExpression())
!900 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !803, file: !868, line: 752, type: !882, isLocal: true, isDefinition: true, align: 8)
!901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !812, line: 100, size: 224, elements: !902)
!902 = !{!903, !909, !910, !919, !924, !929, !935}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !901, file: !812, line: 101, baseType: !904, size: 32)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !812, line: 76, baseType: !905)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 32)
!906 = !DISubroutineType(types: !907)
!907 = !{!107, !897, !908}
!908 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !812, line: 56, baseType: !102)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !901, file: !812, line: 102, baseType: !904, size: 32, offset: 32)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !901, file: !812, line: 103, baseType: !911, size: 32, offset: 64)
!911 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !812, line: 83, baseType: !912)
!912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !913, size: 32)
!913 = !DISubroutineType(types: !914)
!914 = !{!107, !897, !908, !915, !102}
!915 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !812, line: 72, baseType: !916)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 32)
!917 = !DISubroutineType(types: !918)
!918 = !{null, !897, !908, !102}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !901, file: !812, line: 104, baseType: !920, size: 32, offset: 96)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !812, line: 79, baseType: !921)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 32)
!922 = !DISubroutineType(types: !923)
!923 = !{!107, !897, !908, !864}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !901, file: !812, line: 105, baseType: !925, size: 32, offset: 128)
!925 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !812, line: 88, baseType: !926)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 32)
!927 = !DISubroutineType(types: !928)
!928 = !{!811, !897, !908}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !901, file: !812, line: 106, baseType: !930, size: 32, offset: 160)
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !812, line: 92, baseType: !931)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 32)
!932 = !DISubroutineType(types: !933)
!933 = !{!107, !897, !908, !934}
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !812, line: 64, baseType: !102)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !901, file: !812, line: 107, baseType: !936, size: 32, offset: 192)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !812, line: 96, baseType: !937)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 32)
!938 = !DISubroutineType(types: !939)
!939 = !{!107, !897, !908, !102}
!940 = !DIGlobalVariableExpression(var: !941, expr: !DIExpression())
!941 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !942, file: !1027, line: 603, type: !1029, isLocal: true, isDefinition: true, align: 32)
!942 = distinct !DICompileUnit(language: DW_LANG_C99, file: !943, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !944, globals: !1024, splitDebugInlining: false, nameTableKind: None)
!943 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!944 = !{!102, !107, !945}
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !947)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !111, line: 336, size: 608, elements: !948)
!948 = !{!949, !968, !972, !976, !989, !994, !998, !1002, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !947, file: !111, line: 365, baseType: !950, size: 32)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 32)
!951 = !DISubroutineType(types: !952)
!952 = !{!107, !953, !144}
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 32)
!954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !955)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !956)
!956 = !{!957, !958, !959, !960, !966, !967}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !955, file: !120, line: 380, baseType: !123, size: 32)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !955, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !955, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !955, file: !120, line: 386, baseType: !961, size: 32, offset: 96)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 32)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !963)
!963 = !{!964, !965}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !962, file: !120, line: 359, baseType: !133, size: 8)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !962, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !955, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !955, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !947, file: !111, line: 366, baseType: !969, size: 32, offset: 32)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 32)
!970 = !DISubroutineType(types: !971)
!971 = !{null, !953, !134}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !947, file: !111, line: 374, baseType: !973, size: 32, offset: 64)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 32)
!974 = !DISubroutineType(types: !975)
!975 = !{!107, !953}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !947, file: !111, line: 377, baseType: !977, size: 32, offset: 96)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 32)
!978 = !DISubroutineType(types: !979)
!979 = !{!107, !953, !980}
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !982)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !111, line: 122, size: 64, elements: !983)
!983 = !{!984, !985, !986, !987, !988}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !982, file: !111, line: 123, baseType: !162, size: 32)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !982, file: !111, line: 124, baseType: !133, size: 8, offset: 32)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !982, file: !111, line: 125, baseType: !133, size: 8, offset: 40)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !982, file: !111, line: 126, baseType: !133, size: 8, offset: 48)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !982, file: !111, line: 127, baseType: !133, size: 8, offset: 56)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !947, file: !111, line: 379, baseType: !990, size: 32, offset: 128)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 32)
!991 = !DISubroutineType(types: !992)
!992 = !{!107, !953, !993}
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 32)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !947, file: !111, line: 384, baseType: !995, size: 32, offset: 160)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!996 = !DISubroutineType(types: !997)
!997 = !{!107, !953, !176, !107}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !947, file: !111, line: 393, baseType: !999, size: 32, offset: 192)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 32)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!107, !953, !182, !183}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !947, file: !111, line: 402, baseType: !1003, size: 32, offset: 224)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{null, !953}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !947, file: !111, line: 405, baseType: !1003, size: 32, offset: 256)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !947, file: !111, line: 408, baseType: !973, size: 32, offset: 288)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !947, file: !111, line: 411, baseType: !1003, size: 32, offset: 320)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !947, file: !111, line: 414, baseType: !1003, size: 32, offset: 352)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !947, file: !111, line: 417, baseType: !973, size: 32, offset: 384)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !947, file: !111, line: 420, baseType: !973, size: 32, offset: 416)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !947, file: !111, line: 423, baseType: !1003, size: 32, offset: 448)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !947, file: !111, line: 426, baseType: !1003, size: 32, offset: 480)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !947, file: !111, line: 429, baseType: !973, size: 32, offset: 512)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !947, file: !111, line: 432, baseType: !973, size: 32, offset: 544)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !947, file: !111, line: 435, baseType: !1017, size: 32, offset: 576)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 32)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{null, !953, !1020, !102}
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !111, line: 142, baseType: !1021)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1022 = !DISubroutineType(types: !1023)
!1023 = !{null, !953, !102}
!1024 = !{!940, !1025}
!1025 = !DIGlobalVariableExpression(var: !1026, expr: !DIExpression())
!1026 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !942, file: !1027, line: 38, type: !1028, isLocal: true, isDefinition: true)
!1027 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1028 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !953)
!1029 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1030)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !1031)
!1031 = !{!1032, !1033}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1030, file: !294, line: 60, baseType: !973, size: 32)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1030, file: !294, line: 65, baseType: !953, size: 32, offset: 32)
!1034 = !DIGlobalVariableExpression(var: !1035, expr: !DIExpression())
!1035 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1036, file: !1207, line: 762, type: !1316, isLocal: true, isDefinition: true)
!1036 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1037, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1038, retainedTypes: !1056, globals: !1204, splitDebugInlining: false, nameTableKind: None)
!1037 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!1038 = !{!30, !1039, !1045, !1050, !811}
!1039 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1040, line: 506, baseType: !32, size: 32, elements: !1041)
!1040 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1041 = !{!1042, !1043, !1044}
!1042 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1043 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1044 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1045 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1040, line: 512, baseType: !32, size: 32, elements: !1046)
!1046 = !{!1047, !1048, !1049}
!1047 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1048 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1049 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1050 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !717, line: 43, baseType: !32, size: 32, elements: !1051)
!1051 = !{!1052, !1053, !1054, !1055}
!1052 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1053 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1054 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1055 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1056 = !{!102, !107, !1057, !1127, !1132, !1092, !1045, !1039, !1137, !1138, !162, !1152, !1107, !256, !1164, !1165}
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1059)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1040, line: 523, size: 288, elements: !1060)
!1060 = !{!1061, !1082, !1088, !1093, !1097, !1098, !1099, !1103, !1123}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1059, file: !1040, line: 524, baseType: !1062, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 32)
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!107, !1065, !1080, !1081}
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 32)
!1066 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1067)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1068)
!1068 = !{!1069, !1070, !1071, !1072, !1078, !1079}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1067, file: !120, line: 380, baseType: !123, size: 32)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1067, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1067, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1067, file: !120, line: 386, baseType: !1073, size: 32, offset: 96)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 32)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1075)
!1075 = !{!1076, !1077}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1074, file: !120, line: 359, baseType: !133, size: 8)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1074, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1067, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1067, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1080 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1040, line: 237, baseType: !133)
!1081 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1040, line: 257, baseType: !162)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1059, file: !1040, line: 530, baseType: !1083, size: 32, offset: 32)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 32)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!107, !1065, !1086}
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1040, line: 229, baseType: !162)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1059, file: !1040, line: 532, baseType: !1089, size: 32, offset: 64)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 32)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!107, !1065, !1092, !1087}
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1040, line: 216, baseType: !162)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1059, file: !1040, line: 535, baseType: !1094, size: 32, offset: 96)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!107, !1065, !1092}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1059, file: !1040, line: 537, baseType: !1094, size: 32, offset: 128)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1059, file: !1040, line: 539, baseType: !1094, size: 32, offset: 160)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1059, file: !1040, line: 541, baseType: !1100, size: 32, offset: 192)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 32)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!107, !1065, !1080, !1039, !1045}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1059, file: !1040, line: 544, baseType: !1104, size: 32, offset: 224)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 32)
!1105 = !DISubroutineType(types: !1106)
!1106 = !{!107, !1065, !1107, !136}
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 32)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1040, line: 478, size: 96, elements: !1109)
!1109 = !{!1110, !1117, !1122}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1108, file: !1040, line: 482, baseType: !1111, size: 32)
!1111 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1112, line: 33, baseType: !1113)
!1112 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1112, line: 29, size: 32, elements: !1114)
!1114 = !{!1115}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1113, file: !1112, line: 30, baseType: !1116, size: 32)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 32)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1108, file: !1040, line: 485, baseType: !1118, size: 32, offset: 32)
!1118 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1040, line: 464, baseType: !1119)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 32)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{null, !1065, !1107, !1092}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1108, file: !1040, line: 493, baseType: !1092, size: 32, offset: 64)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1059, file: !1040, line: 547, baseType: !1124, size: 32, offset: 256)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 32)
!1125 = !DISubroutineType(types: !1126)
!1126 = !{!162, !1065}
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 32)
!1128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1129)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1040, line: 428, size: 32, elements: !1130)
!1130 = !{!1131}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1129, file: !1040, line: 434, baseType: !1092, size: 32)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 32)
!1133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1134)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1040, line: 441, size: 32, elements: !1135)
!1135 = !{!1136}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1134, file: !1040, line: 447, baseType: !1092, size: 32)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 32)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 32)
!1139 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !279, line: 469, baseType: !1140)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 458, size: 320, elements: !1141)
!1141 = !{!1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1140, file: !279, line: 460, baseType: !283, size: 32)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1140, file: !279, line: 461, baseType: !283, size: 32, offset: 32)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1140, file: !279, line: 462, baseType: !283, size: 32, offset: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1140, file: !279, line: 463, baseType: !283, size: 32, offset: 96)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1140, file: !279, line: 464, baseType: !283, size: 32, offset: 128)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1140, file: !279, line: 465, baseType: !283, size: 32, offset: 160)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1140, file: !279, line: 466, baseType: !283, size: 32, offset: 192)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1140, file: !279, line: 467, baseType: !283, size: 32, offset: 224)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1140, file: !279, line: 468, baseType: !1151, size: 64, offset: 256)
!1151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 64, elements: !389)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 32)
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !279, line: 484, baseType: !1154)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 475, size: 384, elements: !1155)
!1155 = !{!1156, !1157, !1158, !1160, !1161, !1162, !1163}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1154, file: !279, line: 477, baseType: !283, size: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1154, file: !279, line: 478, baseType: !283, size: 32, offset: 32)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1154, file: !279, line: 479, baseType: !1159, size: 128, offset: 64)
!1159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 128, elements: !678)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1154, file: !279, line: 480, baseType: !834, size: 64, offset: 192)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1154, file: !279, line: 481, baseType: !283, size: 32, offset: 256)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1154, file: !279, line: 482, baseType: !834, size: 64, offset: 288)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1154, file: !279, line: 483, baseType: !283, size: 32, offset: 352)
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 32)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 32)
!1166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1167)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !812, line: 100, size: 224, elements: !1168)
!1168 = !{!1169, !1174, !1175, !1184, !1189, !1194, !1199}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1167, file: !812, line: 101, baseType: !1170, size: 32)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !812, line: 76, baseType: !1171)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 32)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{!107, !1065, !908}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1167, file: !812, line: 102, baseType: !1170, size: 32, offset: 32)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1167, file: !812, line: 103, baseType: !1176, size: 32, offset: 64)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !812, line: 83, baseType: !1177)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 32)
!1178 = !DISubroutineType(types: !1179)
!1179 = !{!107, !1065, !908, !1180, !102}
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !812, line: 72, baseType: !1181)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 32)
!1182 = !DISubroutineType(types: !1183)
!1183 = !{null, !1065, !908, !102}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1167, file: !812, line: 104, baseType: !1185, size: 32, offset: 96)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !812, line: 79, baseType: !1186)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 32)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{!107, !1065, !908, !864}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1167, file: !812, line: 105, baseType: !1190, size: 32, offset: 128)
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !812, line: 88, baseType: !1191)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 32)
!1192 = !DISubroutineType(types: !1193)
!1193 = !{!811, !1065, !908}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1167, file: !812, line: 106, baseType: !1195, size: 32, offset: 160)
!1195 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !812, line: 92, baseType: !1196)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 32)
!1197 = !DISubroutineType(types: !1198)
!1198 = !{!107, !1065, !908, !934}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1167, file: !812, line: 107, baseType: !1200, size: 32, offset: 192)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !812, line: 96, baseType: !1201)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!107, !1065, !908, !102}
!1204 = !{!1205, !1211, !1213, !1223, !1225, !1227, !1229, !1231, !1233, !1235, !1240, !1242, !1244, !1246, !1248, !1250, !1252, !1254, !1256, !1258, !1260, !1262, !1264, !1266, !1268, !1282, !1284, !1286, !1288, !1290, !1292, !1294, !1296, !1298, !1300, !1302, !1304, !1306, !1308, !1310, !1034, !1312, !1314, !1327, !1329, !1331, !1333, !1335, !1337}
!1205 = !DIGlobalVariableExpression(var: !1206, expr: !DIExpression())
!1206 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_90", scope: !1036, file: !1207, line: 762, type: !1208, isLocal: false, isDefinition: true, align: 16)
!1207 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 80, elements: !1209)
!1209 = !{!1210}
!1210 = !DISubrange(count: 5)
!1211 = !DIGlobalVariableExpression(var: !1212, expr: !DIExpression())
!1212 = distinct !DIGlobalVariable(name: "__device_dts_ord_90", scope: !1036, file: !1207, line: 762, type: !1066, isLocal: false, isDefinition: true, align: 32)
!1213 = !DIGlobalVariableExpression(var: !1214, expr: !DIExpression())
!1214 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_90", scope: !1036, file: !1207, line: 762, type: !1215, isLocal: true, isDefinition: true, align: 32)
!1215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1216)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !1217)
!1217 = !{!1218, !1222}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1216, file: !294, line: 60, baseType: !1219, size: 32)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 32)
!1220 = !DISubroutineType(types: !1221)
!1221 = !{!107, !1065}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1216, file: !294, line: 65, baseType: !1065, size: 32, offset: 32)
!1223 = !DIGlobalVariableExpression(var: !1224, expr: !DIExpression())
!1224 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_91", scope: !1036, file: !1207, line: 766, type: !1208, isLocal: false, isDefinition: true, align: 16)
!1225 = !DIGlobalVariableExpression(var: !1226, expr: !DIExpression())
!1226 = distinct !DIGlobalVariable(name: "__device_dts_ord_91", scope: !1036, file: !1207, line: 766, type: !1066, isLocal: false, isDefinition: true, align: 32)
!1227 = !DIGlobalVariableExpression(var: !1228, expr: !DIExpression())
!1228 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_91", scope: !1036, file: !1207, line: 766, type: !1215, isLocal: true, isDefinition: true, align: 32)
!1229 = !DIGlobalVariableExpression(var: !1230, expr: !DIExpression())
!1230 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_92", scope: !1036, file: !1207, line: 770, type: !1208, isLocal: false, isDefinition: true, align: 16)
!1231 = !DIGlobalVariableExpression(var: !1232, expr: !DIExpression())
!1232 = distinct !DIGlobalVariable(name: "__device_dts_ord_92", scope: !1036, file: !1207, line: 770, type: !1066, isLocal: false, isDefinition: true, align: 32)
!1233 = !DIGlobalVariableExpression(var: !1234, expr: !DIExpression())
!1234 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_92", scope: !1036, file: !1207, line: 770, type: !1215, isLocal: true, isDefinition: true, align: 32)
!1235 = !DIGlobalVariableExpression(var: !1236, expr: !DIExpression())
!1236 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1036, file: !1207, line: 774, type: !1237, isLocal: false, isDefinition: true, align: 16)
!1237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 144, elements: !1238)
!1238 = !{!1239}
!1239 = !DISubrange(count: 9)
!1240 = !DIGlobalVariableExpression(var: !1241, expr: !DIExpression())
!1241 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1036, file: !1207, line: 774, type: !1066, isLocal: false, isDefinition: true, align: 32)
!1242 = !DIGlobalVariableExpression(var: !1243, expr: !DIExpression())
!1243 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1036, file: !1207, line: 774, type: !1215, isLocal: true, isDefinition: true, align: 32)
!1244 = !DIGlobalVariableExpression(var: !1245, expr: !DIExpression())
!1245 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_93", scope: !1036, file: !1207, line: 778, type: !1208, isLocal: false, isDefinition: true, align: 16)
!1246 = !DIGlobalVariableExpression(var: !1247, expr: !DIExpression())
!1247 = distinct !DIGlobalVariable(name: "__device_dts_ord_93", scope: !1036, file: !1207, line: 778, type: !1066, isLocal: false, isDefinition: true, align: 32)
!1248 = !DIGlobalVariableExpression(var: !1249, expr: !DIExpression())
!1249 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_93", scope: !1036, file: !1207, line: 778, type: !1215, isLocal: true, isDefinition: true, align: 32)
!1250 = !DIGlobalVariableExpression(var: !1251, expr: !DIExpression())
!1251 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_94", scope: !1036, file: !1207, line: 782, type: !1208, isLocal: false, isDefinition: true, align: 16)
!1252 = !DIGlobalVariableExpression(var: !1253, expr: !DIExpression())
!1253 = distinct !DIGlobalVariable(name: "__device_dts_ord_94", scope: !1036, file: !1207, line: 782, type: !1066, isLocal: false, isDefinition: true, align: 32)
!1254 = !DIGlobalVariableExpression(var: !1255, expr: !DIExpression())
!1255 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_94", scope: !1036, file: !1207, line: 782, type: !1215, isLocal: true, isDefinition: true, align: 32)
!1256 = !DIGlobalVariableExpression(var: !1257, expr: !DIExpression())
!1257 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_95", scope: !1036, file: !1207, line: 786, type: !1208, isLocal: false, isDefinition: true, align: 16)
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "__device_dts_ord_95", scope: !1036, file: !1207, line: 786, type: !1066, isLocal: false, isDefinition: true, align: 32)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_95", scope: !1036, file: !1207, line: 786, type: !1215, isLocal: true, isDefinition: true, align: 32)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_96", scope: !1036, file: !1207, line: 790, type: !1208, isLocal: false, isDefinition: true, align: 16)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "__device_dts_ord_96", scope: !1036, file: !1207, line: 790, type: !1066, isLocal: false, isDefinition: true, align: 32)
!1266 = !DIGlobalVariableExpression(var: !1267, expr: !DIExpression())
!1267 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_96", scope: !1036, file: !1207, line: 790, type: !1215, isLocal: true, isDefinition: true, align: 32)
!1268 = !DIGlobalVariableExpression(var: !1269, expr: !DIExpression())
!1269 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1036, file: !1207, line: 762, type: !1270, isLocal: true, isDefinition: true)
!1270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1271, line: 237, size: 128, elements: !1272)
!1271 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1272 = !{!1273, !1274, !1275}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1270, file: !1271, line: 239, baseType: !1134, size: 32)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1270, file: !1271, line: 241, baseType: !1065, size: 32, offset: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1270, file: !1271, line: 243, baseType: !1276, size: 64, offset: 64)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1112, line: 40, baseType: !1277)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1112, line: 35, size: 64, elements: !1278)
!1278 = !{!1279, !1281}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1277, file: !1112, line: 36, baseType: !1280, size: 32)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1277, file: !1112, line: 37, baseType: !1280, size: 32, offset: 32)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_90", scope: !1036, file: !1207, line: 762, type: !1074, isLocal: true, isDefinition: true, align: 8)
!1284 = !DIGlobalVariableExpression(var: !1285, expr: !DIExpression())
!1285 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1036, file: !1207, line: 766, type: !1270, isLocal: true, isDefinition: true)
!1286 = !DIGlobalVariableExpression(var: !1287, expr: !DIExpression())
!1287 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_91", scope: !1036, file: !1207, line: 766, type: !1074, isLocal: true, isDefinition: true, align: 8)
!1288 = !DIGlobalVariableExpression(var: !1289, expr: !DIExpression())
!1289 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1036, file: !1207, line: 770, type: !1270, isLocal: true, isDefinition: true)
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_92", scope: !1036, file: !1207, line: 770, type: !1074, isLocal: true, isDefinition: true, align: 8)
!1292 = !DIGlobalVariableExpression(var: !1293, expr: !DIExpression())
!1293 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1036, file: !1207, line: 774, type: !1270, isLocal: true, isDefinition: true)
!1294 = !DIGlobalVariableExpression(var: !1295, expr: !DIExpression())
!1295 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1036, file: !1207, line: 774, type: !1074, isLocal: true, isDefinition: true, align: 8)
!1296 = !DIGlobalVariableExpression(var: !1297, expr: !DIExpression())
!1297 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1036, file: !1207, line: 778, type: !1270, isLocal: true, isDefinition: true)
!1298 = !DIGlobalVariableExpression(var: !1299, expr: !DIExpression())
!1299 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_93", scope: !1036, file: !1207, line: 778, type: !1074, isLocal: true, isDefinition: true, align: 8)
!1300 = !DIGlobalVariableExpression(var: !1301, expr: !DIExpression())
!1301 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1036, file: !1207, line: 782, type: !1270, isLocal: true, isDefinition: true)
!1302 = !DIGlobalVariableExpression(var: !1303, expr: !DIExpression())
!1303 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_94", scope: !1036, file: !1207, line: 782, type: !1074, isLocal: true, isDefinition: true, align: 8)
!1304 = !DIGlobalVariableExpression(var: !1305, expr: !DIExpression())
!1305 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1036, file: !1207, line: 786, type: !1270, isLocal: true, isDefinition: true)
!1306 = !DIGlobalVariableExpression(var: !1307, expr: !DIExpression())
!1307 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_95", scope: !1036, file: !1207, line: 786, type: !1074, isLocal: true, isDefinition: true, align: 8)
!1308 = !DIGlobalVariableExpression(var: !1309, expr: !DIExpression())
!1309 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1036, file: !1207, line: 790, type: !1270, isLocal: true, isDefinition: true)
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_96", scope: !1036, file: !1207, line: 790, type: !1074, isLocal: true, isDefinition: true, align: 8)
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1036, file: !1207, line: 656, type: !1058, isLocal: true, isDefinition: true)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1036, file: !1207, line: 766, type: !1316, isLocal: true, isDefinition: true)
!1316 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1317)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1271, line: 224, size: 160, elements: !1318)
!1318 = !{!1319, !1320, !1321, !1322}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1317, file: !1271, line: 226, baseType: !1129, size: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1317, file: !1271, line: 228, baseType: !864, size: 32, offset: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1317, file: !1271, line: 230, baseType: !107, size: 32, offset: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1317, file: !1271, line: 231, baseType: !1323, size: 64, offset: 96)
!1323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !860, line: 343, size: 64, elements: !1324)
!1324 = !{!1325, !1326}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1323, file: !860, line: 344, baseType: !162, size: 32)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1323, file: !860, line: 345, baseType: !162, size: 32, offset: 32)
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1036, file: !1207, line: 770, type: !1316, isLocal: true, isDefinition: true)
!1329 = !DIGlobalVariableExpression(var: !1330, expr: !DIExpression())
!1330 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1036, file: !1207, line: 774, type: !1316, isLocal: true, isDefinition: true)
!1331 = !DIGlobalVariableExpression(var: !1332, expr: !DIExpression())
!1332 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1036, file: !1207, line: 778, type: !1316, isLocal: true, isDefinition: true)
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1036, file: !1207, line: 782, type: !1316, isLocal: true, isDefinition: true)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1036, file: !1207, line: 786, type: !1316, isLocal: true, isDefinition: true)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1036, file: !1207, line: 790, type: !1316, isLocal: true, isDefinition: true)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1341, file: !1512, line: 1914, type: !1612, isLocal: true, isDefinition: true)
!1341 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1342, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1343, retainedTypes: !1376, globals: !1509, splitDebugInlining: false, nameTableKind: None)
!1342 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!1343 = !{!30, !1344, !1351, !1358, !1365, !1371, !811}
!1344 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !111, line: 47, baseType: !32, size: 32, elements: !1345)
!1345 = !{!1346, !1347, !1348, !1349, !1350}
!1346 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1347 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1348 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1349 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1350 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1351 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !111, line: 75, baseType: !32, size: 32, elements: !1352)
!1352 = !{!1353, !1354, !1355, !1356, !1357}
!1353 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1354 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1355 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1356 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1357 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1358 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !111, line: 92, baseType: !32, size: 32, elements: !1359)
!1359 = !{!1360, !1361, !1362, !1363, !1364}
!1360 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1361 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1362 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1363 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1364 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1365 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !111, line: 84, baseType: !32, size: 32, elements: !1366)
!1366 = !{!1367, !1368, !1369, !1370}
!1367 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1368 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1369 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1370 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1371 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !111, line: 107, baseType: !32, size: 32, elements: !1372)
!1372 = !{!1373, !1374, !1375}
!1373 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1374 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1375 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1376 = !{!102, !107, !1377, !134, !133, !1456, !162, !908, !1467, !411, !1506, !1508}
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 32)
!1378 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1379)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !111, line: 336, size: 608, elements: !1380)
!1380 = !{!1381, !1400, !1404, !1408, !1421, !1426, !1430, !1434, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1379, file: !111, line: 365, baseType: !1382, size: 32)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 32)
!1383 = !DISubroutineType(types: !1384)
!1384 = !{!107, !1385, !144}
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 32)
!1386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1387)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1388)
!1388 = !{!1389, !1390, !1391, !1392, !1398, !1399}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1387, file: !120, line: 380, baseType: !123, size: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1387, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1387, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1387, file: !120, line: 386, baseType: !1393, size: 32, offset: 96)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 32)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1395)
!1395 = !{!1396, !1397}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1394, file: !120, line: 359, baseType: !133, size: 8)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1394, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1387, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1387, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1379, file: !111, line: 366, baseType: !1401, size: 32, offset: 32)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 32)
!1402 = !DISubroutineType(types: !1403)
!1403 = !{null, !1385, !134}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1379, file: !111, line: 374, baseType: !1405, size: 32, offset: 64)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 32)
!1406 = !DISubroutineType(types: !1407)
!1407 = !{!107, !1385}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1379, file: !111, line: 377, baseType: !1409, size: 32, offset: 96)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 32)
!1410 = !DISubroutineType(types: !1411)
!1411 = !{!107, !1385, !1412}
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 32)
!1413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1414)
!1414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !111, line: 122, size: 64, elements: !1415)
!1415 = !{!1416, !1417, !1418, !1419, !1420}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1414, file: !111, line: 123, baseType: !162, size: 32)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1414, file: !111, line: 124, baseType: !133, size: 8, offset: 32)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1414, file: !111, line: 125, baseType: !133, size: 8, offset: 40)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1414, file: !111, line: 126, baseType: !133, size: 8, offset: 48)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1414, file: !111, line: 127, baseType: !133, size: 8, offset: 56)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1379, file: !111, line: 379, baseType: !1422, size: 32, offset: 128)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 32)
!1423 = !DISubroutineType(types: !1424)
!1424 = !{!107, !1385, !1425}
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1379, file: !111, line: 384, baseType: !1427, size: 32, offset: 160)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 32)
!1428 = !DISubroutineType(types: !1429)
!1429 = !{!107, !1385, !176, !107}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1379, file: !111, line: 393, baseType: !1431, size: 32, offset: 192)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 32)
!1432 = !DISubroutineType(types: !1433)
!1433 = !{!107, !1385, !182, !183}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1379, file: !111, line: 402, baseType: !1435, size: 32, offset: 224)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 32)
!1436 = !DISubroutineType(types: !1437)
!1437 = !{null, !1385}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1379, file: !111, line: 405, baseType: !1435, size: 32, offset: 256)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1379, file: !111, line: 408, baseType: !1405, size: 32, offset: 288)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1379, file: !111, line: 411, baseType: !1435, size: 32, offset: 320)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1379, file: !111, line: 414, baseType: !1435, size: 32, offset: 352)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1379, file: !111, line: 417, baseType: !1405, size: 32, offset: 384)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1379, file: !111, line: 420, baseType: !1405, size: 32, offset: 416)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1379, file: !111, line: 423, baseType: !1435, size: 32, offset: 448)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1379, file: !111, line: 426, baseType: !1435, size: 32, offset: 480)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1379, file: !111, line: 429, baseType: !1405, size: 32, offset: 512)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1379, file: !111, line: 432, baseType: !1405, size: 32, offset: 544)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1379, file: !111, line: 435, baseType: !1449, size: 32, offset: 576)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 32)
!1450 = !DISubroutineType(types: !1451)
!1451 = !{null, !1385, !1452, !102}
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !111, line: 142, baseType: !1453)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 32)
!1454 = !DISubroutineType(types: !1455)
!1455 = !{null, !1385, !102}
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 32)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !279, line: 783, baseType: !1458)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 774, size: 224, elements: !1459)
!1459 = !{!1460, !1461, !1462, !1463, !1464, !1465, !1466}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1458, file: !279, line: 776, baseType: !283, size: 32)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1458, file: !279, line: 777, baseType: !283, size: 32, offset: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1458, file: !279, line: 778, baseType: !283, size: 32, offset: 64)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1458, file: !279, line: 779, baseType: !283, size: 32, offset: 96)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1458, file: !279, line: 780, baseType: !283, size: 32, offset: 128)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1458, file: !279, line: 781, baseType: !283, size: 32, offset: 160)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1458, file: !279, line: 782, baseType: !283, size: 32, offset: 192)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 32)
!1468 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1469)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !812, line: 100, size: 224, elements: !1470)
!1470 = !{!1471, !1476, !1477, !1486, !1491, !1496, !1501}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1469, file: !812, line: 101, baseType: !1472, size: 32)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !812, line: 76, baseType: !1473)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 32)
!1474 = !DISubroutineType(types: !1475)
!1475 = !{!107, !1385, !908}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1469, file: !812, line: 102, baseType: !1472, size: 32, offset: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1469, file: !812, line: 103, baseType: !1478, size: 32, offset: 64)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !812, line: 83, baseType: !1479)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 32)
!1480 = !DISubroutineType(types: !1481)
!1481 = !{!107, !1385, !908, !1482, !102}
!1482 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !812, line: 72, baseType: !1483)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 32)
!1484 = !DISubroutineType(types: !1485)
!1485 = !{null, !1385, !908, !102}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1469, file: !812, line: 104, baseType: !1487, size: 32, offset: 96)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !812, line: 79, baseType: !1488)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!107, !1385, !908, !864}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1469, file: !812, line: 105, baseType: !1492, size: 32, offset: 128)
!1492 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !812, line: 88, baseType: !1493)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1494, size: 32)
!1494 = !DISubroutineType(types: !1495)
!1495 = !{!811, !1385, !908}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1469, file: !812, line: 106, baseType: !1497, size: 32, offset: 160)
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !812, line: 92, baseType: !1498)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{!107, !1385, !908, !934}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1469, file: !812, line: 107, baseType: !1502, size: 32, offset: 192)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !812, line: 96, baseType: !1503)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 32)
!1504 = !DISubroutineType(types: !1505)
!1505 = !{!107, !1385, !908, !102}
!1506 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1507)
!1507 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 32)
!1509 = !{!1510, !1516, !1518, !1525, !1527, !1529, !1531, !1533, !1535, !1537, !1539, !1541, !1543, !1545, !1547, !1549, !1339, !1551, !1559, !1582, !1585, !1588, !1599, !1601, !1610, !1629, !1631, !1633, !1635, !1637, !1642, !1644, !1646, !1648, !1650, !1652, !1654, !1659, !1661, !1663, !1665, !1667, !1669, !1671, !1676}
!1510 = !DIGlobalVariableExpression(var: !1511, expr: !DIExpression())
!1511 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_52", scope: !1341, file: !1512, line: 1914, type: !1513, isLocal: false, isDefinition: true, align: 16)
!1512 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 128, elements: !1514)
!1514 = !{!1515}
!1515 = !DISubrange(count: 8)
!1516 = !DIGlobalVariableExpression(var: !1517, expr: !DIExpression())
!1517 = distinct !DIGlobalVariable(name: "__device_dts_ord_52", scope: !1341, file: !1512, line: 1914, type: !1386, isLocal: false, isDefinition: true, align: 32)
!1518 = !DIGlobalVariableExpression(var: !1519, expr: !DIExpression())
!1519 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_52", scope: !1341, file: !1512, line: 1914, type: !1520, isLocal: true, isDefinition: true, align: 32)
!1520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1521)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !1522)
!1522 = !{!1523, !1524}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1521, file: !294, line: 60, baseType: !1405, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1521, file: !294, line: 65, baseType: !1385, size: 32, offset: 32)
!1525 = !DIGlobalVariableExpression(var: !1526, expr: !DIExpression())
!1526 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_42", scope: !1341, file: !1512, line: 1914, type: !1513, isLocal: false, isDefinition: true, align: 16)
!1527 = !DIGlobalVariableExpression(var: !1528, expr: !DIExpression())
!1528 = distinct !DIGlobalVariable(name: "__device_dts_ord_42", scope: !1341, file: !1512, line: 1914, type: !1386, isLocal: false, isDefinition: true, align: 32)
!1529 = !DIGlobalVariableExpression(var: !1530, expr: !DIExpression())
!1530 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_42", scope: !1341, file: !1512, line: 1914, type: !1520, isLocal: true, isDefinition: true, align: 32)
!1531 = !DIGlobalVariableExpression(var: !1532, expr: !DIExpression())
!1532 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_45", scope: !1341, file: !1512, line: 1914, type: !1513, isLocal: false, isDefinition: true, align: 16)
!1533 = !DIGlobalVariableExpression(var: !1534, expr: !DIExpression())
!1534 = distinct !DIGlobalVariable(name: "__device_dts_ord_45", scope: !1341, file: !1512, line: 1914, type: !1386, isLocal: false, isDefinition: true, align: 32)
!1535 = !DIGlobalVariableExpression(var: !1536, expr: !DIExpression())
!1536 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_45", scope: !1341, file: !1512, line: 1914, type: !1520, isLocal: true, isDefinition: true, align: 32)
!1537 = !DIGlobalVariableExpression(var: !1538, expr: !DIExpression())
!1538 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_48", scope: !1341, file: !1512, line: 1914, type: !1513, isLocal: false, isDefinition: true, align: 16)
!1539 = !DIGlobalVariableExpression(var: !1540, expr: !DIExpression())
!1540 = distinct !DIGlobalVariable(name: "__device_dts_ord_48", scope: !1341, file: !1512, line: 1914, type: !1386, isLocal: false, isDefinition: true, align: 32)
!1541 = !DIGlobalVariableExpression(var: !1542, expr: !DIExpression())
!1542 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_48", scope: !1341, file: !1512, line: 1914, type: !1520, isLocal: true, isDefinition: true, align: 32)
!1543 = !DIGlobalVariableExpression(var: !1544, expr: !DIExpression())
!1544 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_52", scope: !1341, file: !1512, line: 1914, type: !1394, isLocal: true, isDefinition: true, align: 8)
!1545 = !DIGlobalVariableExpression(var: !1546, expr: !DIExpression())
!1546 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_42", scope: !1341, file: !1512, line: 1914, type: !1394, isLocal: true, isDefinition: true, align: 8)
!1547 = !DIGlobalVariableExpression(var: !1548, expr: !DIExpression())
!1548 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_45", scope: !1341, file: !1512, line: 1914, type: !1394, isLocal: true, isDefinition: true, align: 8)
!1549 = !DIGlobalVariableExpression(var: !1550, expr: !DIExpression())
!1550 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_48", scope: !1341, file: !1512, line: 1914, type: !1394, isLocal: true, isDefinition: true, align: 8)
!1551 = !DIGlobalVariableExpression(var: !1552, expr: !DIExpression())
!1552 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1341, file: !1512, line: 1914, type: !1553, isLocal: true, isDefinition: true)
!1553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1554, size: 64, elements: !486)
!1554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1555)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !860, line: 343, size: 64, elements: !1556)
!1556 = !{!1557, !1558}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1555, file: !860, line: 344, baseType: !162, size: 32)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1555, file: !860, line: 345, baseType: !162, size: 32, offset: 32)
!1559 = !DIGlobalVariableExpression(var: !1560, expr: !DIExpression())
!1560 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_52", scope: !1341, file: !1512, line: 1914, type: !1561, isLocal: true, isDefinition: true)
!1561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1562)
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1563, line: 60, size: 64, elements: !1564)
!1563 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1564 = !{!1565, !1581}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1562, file: !1563, line: 69, baseType: !1566, size: 32)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 32)
!1567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1568)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1563, line: 50, size: 64, elements: !1569)
!1569 = !{!1570, !1579, !1580}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1568, file: !1563, line: 52, baseType: !1571, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 32)
!1572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1573)
!1573 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1574, line: 37, baseType: !1575)
!1574 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1574, line: 32, size: 64, elements: !1576)
!1576 = !{!1577, !1578}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1575, file: !1574, line: 34, baseType: !162, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1575, file: !1574, line: 36, baseType: !162, size: 32, offset: 32)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1568, file: !1563, line: 54, baseType: !133, size: 8, offset: 32)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1568, file: !1563, line: 56, baseType: !133, size: 8, offset: 40)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1562, file: !1563, line: 71, baseType: !133, size: 8, offset: 32)
!1582 = !DIGlobalVariableExpression(var: !1583, expr: !DIExpression())
!1583 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_52", scope: !1341, file: !1512, line: 1914, type: !1584, isLocal: true, isDefinition: true)
!1584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1567, size: 64, elements: !486)
!1585 = !DIGlobalVariableExpression(var: !1586, expr: !DIExpression())
!1586 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_52", scope: !1341, file: !1512, line: 1914, type: !1587, isLocal: true, isDefinition: true)
!1587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1572, size: 128, elements: !389)
!1588 = !DIGlobalVariableExpression(var: !1589, expr: !DIExpression())
!1589 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1590, file: !1512, line: 1914, type: !1593, isLocal: true, isDefinition: true, align: 32)
!1590 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1512, file: !1512, line: 1914, type: !1436, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !1591)
!1591 = !{!1592}
!1592 = !DILocalVariable(name: "dev", arg: 1, scope: !1590, file: !1512, line: 1914, type: !1385)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1594)
!1594 = !{!1595, !1596, !1597, !1598}
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1593, file: !10, line: 55, baseType: !736, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1593, file: !10, line: 57, baseType: !736, size: 32, offset: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1593, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1593, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1599 = !DIGlobalVariableExpression(var: !1600, expr: !DIExpression())
!1600 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1341, file: !1512, line: 1539, type: !1378, isLocal: true, isDefinition: true)
!1601 = !DIGlobalVariableExpression(var: !1602, expr: !DIExpression())
!1602 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1341, file: !1512, line: 1914, type: !1603, isLocal: true, isDefinition: true)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1604, line: 74, size: 128, elements: !1605)
!1604 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1605 = !{!1606, !1607, !1608, !1609}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1603, file: !1604, line: 76, baseType: !162, size: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1603, file: !1604, line: 78, baseType: !1385, size: 32, offset: 32)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1603, file: !1604, line: 80, baseType: !1452, size: 32, offset: 64)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1603, file: !1604, line: 81, baseType: !102, size: 32, offset: 96)
!1610 = !DIGlobalVariableExpression(var: !1611, expr: !DIExpression())
!1611 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_1", scope: !1341, file: !1512, line: 1914, type: !1612, isLocal: true, isDefinition: true)
!1612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1613)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1604, line: 22, size: 256, elements: !1614)
!1614 = !{!1615, !1616, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1627}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1613, file: !1604, line: 24, baseType: !1456, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1613, file: !1604, line: 26, baseType: !1617, size: 32, offset: 32)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1554, size: 32)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1613, file: !1604, line: 28, baseType: !252, size: 32, offset: 64)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1613, file: !1604, line: 30, baseType: !136, size: 8, offset: 96)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1613, file: !1604, line: 32, baseType: !107, size: 32, offset: 128)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1613, file: !1604, line: 34, baseType: !136, size: 8, offset: 160)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1613, file: !1604, line: 36, baseType: !136, size: 8, offset: 168)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1613, file: !1604, line: 38, baseType: !136, size: 8, offset: 176)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1613, file: !1604, line: 40, baseType: !136, size: 8, offset: 184)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1613, file: !1604, line: 41, baseType: !1626, size: 32, offset: 192)
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1613, file: !1604, line: 44, baseType: !1628, size: 32, offset: 224)
!1628 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !111, line: 150, baseType: !1435)
!1629 = !DIGlobalVariableExpression(var: !1630, expr: !DIExpression())
!1630 = distinct !DIGlobalVariable(name: "pclken_1", scope: !1341, file: !1512, line: 1914, type: !1553, isLocal: true, isDefinition: true)
!1631 = !DIGlobalVariableExpression(var: !1632, expr: !DIExpression())
!1632 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_42", scope: !1341, file: !1512, line: 1914, type: !1561, isLocal: true, isDefinition: true)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_42", scope: !1341, file: !1512, line: 1914, type: !1584, isLocal: true, isDefinition: true)
!1635 = !DIGlobalVariableExpression(var: !1636, expr: !DIExpression())
!1636 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_42", scope: !1341, file: !1512, line: 1914, type: !1587, isLocal: true, isDefinition: true)
!1637 = !DIGlobalVariableExpression(var: !1638, expr: !DIExpression())
!1638 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_1", scope: !1639, file: !1512, line: 1914, type: !1593, isLocal: true, isDefinition: true, align: 32)
!1639 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_1", scope: !1512, file: !1512, line: 1914, type: !1436, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !1640)
!1640 = !{!1641}
!1641 = !DILocalVariable(name: "dev", arg: 1, scope: !1639, file: !1512, line: 1914, type: !1385)
!1642 = !DIGlobalVariableExpression(var: !1643, expr: !DIExpression())
!1643 = distinct !DIGlobalVariable(name: "uart_stm32_data_1", scope: !1341, file: !1512, line: 1914, type: !1603, isLocal: true, isDefinition: true)
!1644 = !DIGlobalVariableExpression(var: !1645, expr: !DIExpression())
!1645 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_2", scope: !1341, file: !1512, line: 1914, type: !1612, isLocal: true, isDefinition: true)
!1646 = !DIGlobalVariableExpression(var: !1647, expr: !DIExpression())
!1647 = distinct !DIGlobalVariable(name: "pclken_2", scope: !1341, file: !1512, line: 1914, type: !1553, isLocal: true, isDefinition: true)
!1648 = !DIGlobalVariableExpression(var: !1649, expr: !DIExpression())
!1649 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_45", scope: !1341, file: !1512, line: 1914, type: !1561, isLocal: true, isDefinition: true)
!1650 = !DIGlobalVariableExpression(var: !1651, expr: !DIExpression())
!1651 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_45", scope: !1341, file: !1512, line: 1914, type: !1584, isLocal: true, isDefinition: true)
!1652 = !DIGlobalVariableExpression(var: !1653, expr: !DIExpression())
!1653 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_45", scope: !1341, file: !1512, line: 1914, type: !1587, isLocal: true, isDefinition: true)
!1654 = !DIGlobalVariableExpression(var: !1655, expr: !DIExpression())
!1655 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_2", scope: !1656, file: !1512, line: 1914, type: !1593, isLocal: true, isDefinition: true, align: 32)
!1656 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_2", scope: !1512, file: !1512, line: 1914, type: !1436, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !1657)
!1657 = !{!1658}
!1658 = !DILocalVariable(name: "dev", arg: 1, scope: !1656, file: !1512, line: 1914, type: !1385)
!1659 = !DIGlobalVariableExpression(var: !1660, expr: !DIExpression())
!1660 = distinct !DIGlobalVariable(name: "uart_stm32_data_2", scope: !1341, file: !1512, line: 1914, type: !1603, isLocal: true, isDefinition: true)
!1661 = !DIGlobalVariableExpression(var: !1662, expr: !DIExpression())
!1662 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_3", scope: !1341, file: !1512, line: 1914, type: !1612, isLocal: true, isDefinition: true)
!1663 = !DIGlobalVariableExpression(var: !1664, expr: !DIExpression())
!1664 = distinct !DIGlobalVariable(name: "pclken_3", scope: !1341, file: !1512, line: 1914, type: !1553, isLocal: true, isDefinition: true)
!1665 = !DIGlobalVariableExpression(var: !1666, expr: !DIExpression())
!1666 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_48", scope: !1341, file: !1512, line: 1914, type: !1561, isLocal: true, isDefinition: true)
!1667 = !DIGlobalVariableExpression(var: !1668, expr: !DIExpression())
!1668 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_48", scope: !1341, file: !1512, line: 1914, type: !1584, isLocal: true, isDefinition: true)
!1669 = !DIGlobalVariableExpression(var: !1670, expr: !DIExpression())
!1670 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_48", scope: !1341, file: !1512, line: 1914, type: !1587, isLocal: true, isDefinition: true)
!1671 = !DIGlobalVariableExpression(var: !1672, expr: !DIExpression())
!1672 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_3", scope: !1673, file: !1512, line: 1914, type: !1593, isLocal: true, isDefinition: true, align: 32)
!1673 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_3", scope: !1512, file: !1512, line: 1914, type: !1436, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !1674)
!1674 = !{!1675}
!1675 = !DILocalVariable(name: "dev", arg: 1, scope: !1673, file: !1512, line: 1914, type: !1385)
!1676 = !DIGlobalVariableExpression(var: !1677, expr: !DIExpression())
!1677 = distinct !DIGlobalVariable(name: "uart_stm32_data_3", scope: !1341, file: !1512, line: 1914, type: !1603, isLocal: true, isDefinition: true)
!1678 = !DIGlobalVariableExpression(var: !1679, expr: !DIExpression())
!1679 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1680, file: !1758, line: 65, type: !283, isLocal: true, isDefinition: true)
!1680 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1681, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1682, retainedTypes: !1683, globals: !1755, splitDebugInlining: false, nameTableKind: None)
!1681 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!1682 = !{!566}
!1683 = !{!103, !1684, !736, !133, !162, !1692, !1723}
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 32)
!1685 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !497, line: 770, baseType: !1686)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 764, size: 128, elements: !1687)
!1687 = !{!1688, !1689, !1690, !1691}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1686, file: !497, line: 766, baseType: !283, size: 32)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1686, file: !497, line: 767, baseType: !283, size: 32, offset: 32)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1686, file: !497, line: 768, baseType: !283, size: 32, offset: 64)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1686, file: !497, line: 769, baseType: !501, size: 32, offset: 96)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 32)
!1693 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !497, line: 426, baseType: !1694)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 411, size: 28704, elements: !1695)
!1695 = !{!1696, !1698, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1713, !1718, !1722}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1694, file: !497, line: 413, baseType: !1697, size: 256)
!1697 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 256, elements: !1514)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1694, file: !497, line: 414, baseType: !1699, size: 768, offset: 256)
!1699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 768, elements: !1700)
!1700 = !{!1701}
!1701 = !DISubrange(count: 24)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1694, file: !497, line: 415, baseType: !1697, size: 256, offset: 1024)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1694, file: !497, line: 416, baseType: !1699, size: 768, offset: 1280)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1694, file: !497, line: 417, baseType: !1697, size: 256, offset: 2048)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1694, file: !497, line: 418, baseType: !1699, size: 768, offset: 2304)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1694, file: !497, line: 419, baseType: !1697, size: 256, offset: 3072)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1694, file: !497, line: 420, baseType: !1699, size: 768, offset: 3328)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1694, file: !497, line: 421, baseType: !1697, size: 256, offset: 4096)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1694, file: !497, line: 422, baseType: !1710, size: 1792, offset: 4352)
!1710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 1792, elements: !1711)
!1711 = !{!1712}
!1712 = !DISubrange(count: 56)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1694, file: !497, line: 423, baseType: !1714, size: 1920, offset: 6144)
!1714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1715, size: 1920, elements: !1716)
!1715 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !133)
!1716 = !{!1717}
!1717 = !DISubrange(count: 240)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1694, file: !497, line: 424, baseType: !1719, size: 20608, offset: 8064)
!1719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 20608, elements: !1720)
!1720 = !{!1721}
!1721 = !DISubrange(count: 644)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1694, file: !497, line: 425, baseType: !283, size: 32, offset: 28672)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 32)
!1724 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !1725)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !1726)
!1726 = !{!1727, !1728, !1729, !1730, !1731, !1732, !1733, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1746, !1747, !1748, !1750, !1752, !1754}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1725, file: !497, line: 447, baseType: !501, size: 32)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1725, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1725, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1725, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1725, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1725, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1725, file: !497, line: 453, baseType: !1734, size: 96, offset: 192)
!1734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1715, size: 96, elements: !1735)
!1735 = !{!1736}
!1736 = !DISubrange(count: 12)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1725, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1725, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1725, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1725, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1725, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1725, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1725, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1725, file: !497, line: 461, baseType: !1745, size: 64, offset: 512)
!1745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 64, elements: !389)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1725, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1725, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1725, file: !497, line: 464, baseType: !1749, size: 128, offset: 640)
!1749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 128, elements: !678)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1725, file: !497, line: 465, baseType: !1751, size: 160, offset: 768)
!1751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 160, elements: !1209)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1725, file: !497, line: 466, baseType: !1753, size: 160, offset: 928)
!1753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 160, elements: !1209)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1725, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!1755 = !{!1756, !1782, !1785, !1787, !1789, !1678}
!1756 = !DIGlobalVariableExpression(var: !1757, expr: !DIExpression())
!1757 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1680, file: !1758, line: 285, type: !1759, isLocal: true, isDefinition: true, align: 32)
!1758 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1760)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !1761)
!1761 = !{!1762, !1781}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1760, file: !294, line: 60, baseType: !1763, size: 32)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 32)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{!107, !1766}
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1768)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1769)
!1769 = !{!1770, !1771, !1772, !1773, !1779, !1780}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1768, file: !120, line: 380, baseType: !123, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1768, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1768, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1768, file: !120, line: 386, baseType: !1774, size: 32, offset: 96)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 32)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1776)
!1776 = !{!1777, !1778}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1775, file: !120, line: 359, baseType: !133, size: 8)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1775, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1768, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1768, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1760, file: !294, line: 65, baseType: !1766, size: 32, offset: 32)
!1782 = !DIGlobalVariableExpression(var: !1783, expr: !DIExpression())
!1783 = distinct !DIGlobalVariable(name: "lock", scope: !1680, file: !1758, line: 34, type: !1784, isLocal: true, isDefinition: true)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!1785 = !DIGlobalVariableExpression(var: !1786, expr: !DIExpression())
!1786 = distinct !DIGlobalVariable(name: "last_load", scope: !1680, file: !1758, line: 36, type: !162, isLocal: true, isDefinition: true)
!1787 = !DIGlobalVariableExpression(var: !1788, expr: !DIExpression())
!1788 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1680, file: !1758, line: 48, type: !162, isLocal: true, isDefinition: true)
!1789 = !DIGlobalVariableExpression(var: !1790, expr: !DIExpression())
!1790 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1680, file: !1758, line: 54, type: !162, isLocal: true, isDefinition: true)
!1791 = !DIGlobalVariableExpression(var: !1792, expr: !DIExpression())
!1792 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1793, file: !1875, line: 22, type: !1877, isLocal: true, isDefinition: true)
!1793 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1794, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1795, retainedTypes: !1796, globals: !1872, splitDebugInlining: false, nameTableKind: None)
!1794 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!1795 = !{!1039, !1045}
!1796 = !{!1797, !1861, !1866, !1092, !1045, !1039, !1871, !102}
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 32)
!1798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1799)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1040, line: 523, size: 288, elements: !1800)
!1800 = !{!1801, !1820, !1824, !1828, !1832, !1833, !1834, !1838, !1857}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1799, file: !1040, line: 524, baseType: !1802, size: 32)
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 32)
!1803 = !DISubroutineType(types: !1804)
!1804 = !{!107, !1805, !1080, !1081}
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1807)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1808)
!1808 = !{!1809, !1810, !1811, !1812, !1818, !1819}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1807, file: !120, line: 380, baseType: !123, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1807, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1807, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1807, file: !120, line: 386, baseType: !1813, size: 32, offset: 96)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 32)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1815)
!1815 = !{!1816, !1817}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1814, file: !120, line: 359, baseType: !133, size: 8)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1814, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1807, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1807, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1799, file: !1040, line: 530, baseType: !1821, size: 32, offset: 32)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 32)
!1822 = !DISubroutineType(types: !1823)
!1823 = !{!107, !1805, !1086}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1799, file: !1040, line: 532, baseType: !1825, size: 32, offset: 64)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 32)
!1826 = !DISubroutineType(types: !1827)
!1827 = !{!107, !1805, !1092, !1087}
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1799, file: !1040, line: 535, baseType: !1829, size: 32, offset: 96)
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1830, size: 32)
!1830 = !DISubroutineType(types: !1831)
!1831 = !{!107, !1805, !1092}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1799, file: !1040, line: 537, baseType: !1829, size: 32, offset: 128)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1799, file: !1040, line: 539, baseType: !1829, size: 32, offset: 160)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1799, file: !1040, line: 541, baseType: !1835, size: 32, offset: 192)
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 32)
!1836 = !DISubroutineType(types: !1837)
!1837 = !{!107, !1805, !1080, !1039, !1045}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1799, file: !1040, line: 544, baseType: !1839, size: 32, offset: 224)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 32)
!1840 = !DISubroutineType(types: !1841)
!1841 = !{!107, !1805, !1842, !136}
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 32)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1040, line: 478, size: 96, elements: !1844)
!1844 = !{!1845, !1851, !1856}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1843, file: !1040, line: 482, baseType: !1846, size: 32)
!1846 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1112, line: 33, baseType: !1847)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1112, line: 29, size: 32, elements: !1848)
!1848 = !{!1849}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1847, file: !1112, line: 30, baseType: !1850, size: 32)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 32)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1843, file: !1040, line: 485, baseType: !1852, size: 32, offset: 32)
!1852 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1040, line: 464, baseType: !1853)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 32)
!1854 = !DISubroutineType(types: !1855)
!1855 = !{null, !1805, !1842, !1092}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1843, file: !1040, line: 493, baseType: !1092, size: 32, offset: 64)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1799, file: !1040, line: 547, baseType: !1858, size: 32, offset: 256)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 32)
!1859 = !DISubroutineType(types: !1860)
!1860 = !{!162, !1805}
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 32)
!1862 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1863)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1040, line: 428, size: 32, elements: !1864)
!1864 = !{!1865}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1863, file: !1040, line: 434, baseType: !1092, size: 32)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 32)
!1867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1868)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1040, line: 441, size: 32, elements: !1869)
!1869 = !{!1870}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1868, file: !1040, line: 447, baseType: !1092, size: 32)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 32)
!1872 = !{!1873, !1791}
!1873 = !DIGlobalVariableExpression(var: !1874, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1874 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1793, file: !1875, line: 37, type: !1876, isLocal: true, isDefinition: true)
!1875 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1876 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !252)
!1877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1878, size: 352, elements: !1879)
!1878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1805)
!1879 = !{!1880}
!1880 = !DISubrange(count: 11)
!1881 = !DIGlobalVariableExpression(var: !1882, expr: !DIExpression())
!1882 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1883, file: !1927, line: 139, type: !1933, isLocal: false, isDefinition: true)
!1883 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1884, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1885, globals: !1924, splitDebugInlining: false, nameTableKind: None)
!1884 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!1885 = !{!1886}
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 586, baseType: !1888)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 550, size: 1216, elements: !1889)
!1889 = !{!1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1888, file: !279, line: 552, baseType: !283, size: 32)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1888, file: !279, line: 553, baseType: !283, size: 32, offset: 32)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1888, file: !279, line: 554, baseType: !283, size: 32, offset: 64)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1888, file: !279, line: 555, baseType: !283, size: 32, offset: 96)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1888, file: !279, line: 556, baseType: !283, size: 32, offset: 128)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1888, file: !279, line: 557, baseType: !283, size: 32, offset: 160)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !1888, file: !279, line: 558, baseType: !283, size: 32, offset: 192)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1888, file: !279, line: 559, baseType: !162, size: 32, offset: 224)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1888, file: !279, line: 560, baseType: !283, size: 32, offset: 256)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1888, file: !279, line: 561, baseType: !283, size: 32, offset: 288)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1888, file: !279, line: 562, baseType: !834, size: 64, offset: 320)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1888, file: !279, line: 563, baseType: !283, size: 32, offset: 384)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1888, file: !279, line: 564, baseType: !283, size: 32, offset: 416)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !1888, file: !279, line: 565, baseType: !283, size: 32, offset: 448)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1888, file: !279, line: 566, baseType: !162, size: 32, offset: 480)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1888, file: !279, line: 567, baseType: !283, size: 32, offset: 512)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1888, file: !279, line: 568, baseType: !283, size: 32, offset: 544)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1888, file: !279, line: 569, baseType: !834, size: 64, offset: 576)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1888, file: !279, line: 570, baseType: !283, size: 32, offset: 640)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1888, file: !279, line: 571, baseType: !283, size: 32, offset: 672)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !1888, file: !279, line: 572, baseType: !283, size: 32, offset: 704)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1888, file: !279, line: 573, baseType: !162, size: 32, offset: 736)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1888, file: !279, line: 574, baseType: !283, size: 32, offset: 768)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1888, file: !279, line: 575, baseType: !283, size: 32, offset: 800)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1888, file: !279, line: 576, baseType: !834, size: 64, offset: 832)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1888, file: !279, line: 577, baseType: !283, size: 32, offset: 896)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1888, file: !279, line: 578, baseType: !283, size: 32, offset: 928)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1888, file: !279, line: 579, baseType: !834, size: 64, offset: 960)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1888, file: !279, line: 580, baseType: !283, size: 32, offset: 1024)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1888, file: !279, line: 581, baseType: !283, size: 32, offset: 1056)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !1888, file: !279, line: 582, baseType: !283, size: 32, offset: 1088)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1888, file: !279, line: 583, baseType: !283, size: 32, offset: 1120)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1888, file: !279, line: 584, baseType: !283, size: 32, offset: 1152)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1888, file: !279, line: 585, baseType: !283, size: 32, offset: 1184)
!1924 = !{!1925, !1928, !1881}
!1925 = !DIGlobalVariableExpression(var: !1926, expr: !DIExpression())
!1926 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1883, file: !1927, line: 137, type: !162, isLocal: false, isDefinition: true)
!1927 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1928 = !DIGlobalVariableExpression(var: !1929, expr: !DIExpression())
!1929 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1883, file: !1927, line: 138, type: !1930, isLocal: false, isDefinition: true)
!1930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 128, elements: !1931)
!1931 = !{!1932}
!1932 = !DISubrange(count: 16)
!1933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 64, elements: !1514)
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1936, file: !1939, line: 23, type: !183, isLocal: false, isDefinition: true)
!1936 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1937, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, globals: !1938, splitDebugInlining: false, nameTableKind: None)
!1937 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!1938 = !{!1934}
!1939 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1940 = !DIGlobalVariableExpression(var: !1941, expr: !DIExpression())
!1941 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1942, file: !1946, line: 86, type: !2195, isLocal: false, isDefinition: true, align: 512)
!1942 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1943, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1944, retainedTypes: !1953, globals: !2026, splitDebugInlining: false, nameTableKind: None)
!1943 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!1944 = !{!1945, !30, !566}
!1945 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1946, line: 63, baseType: !32, size: 32, elements: !1947)
!1946 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1947 = !{!1948, !1949, !1950, !1951, !1952}
!1948 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1949 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1950 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1951 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1952 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1953 = !{!252, !102, !107, !1954, !256, !162, !1984, !736, !133, !2009}
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 32)
!1955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1956)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1957, line: 51, size: 64, elements: !1958)
!1957 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1958 = !{!1959, !1979}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1956, file: !1957, line: 52, baseType: !1960, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1957, line: 38, baseType: !1961)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 32)
!1962 = !DISubroutineType(types: !1963)
!1963 = !{!107, !1964, !182, !411}
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 32)
!1965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1966)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1967)
!1967 = !{!1968, !1969, !1970, !1971, !1977, !1978}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1966, file: !120, line: 380, baseType: !123, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1966, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1966, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1966, file: !120, line: 386, baseType: !1972, size: 32, offset: 96)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 32)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1974)
!1974 = !{!1975, !1976}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1973, file: !120, line: 359, baseType: !133, size: 8)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1973, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1966, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1966, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1956, file: !1957, line: 53, baseType: !1980, size: 32, offset: 32)
!1980 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1957, line: 47, baseType: !1981)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 32)
!1982 = !DISubroutineType(types: !1983)
!1983 = !{!107, !1964, !182, !411, !162}
!1984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1985, size: 32)
!1985 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !1986)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !1987)
!1987 = !{!1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1986, file: !497, line: 447, baseType: !501, size: 32)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1986, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1986, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1986, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1986, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1986, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1986, file: !497, line: 453, baseType: !1734, size: 96, offset: 192)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1986, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1986, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1986, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1986, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1986, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1986, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1986, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1986, file: !497, line: 461, baseType: !1745, size: 64, offset: 512)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1986, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1986, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1986, file: !497, line: 464, baseType: !1749, size: 128, offset: 640)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1986, file: !497, line: 465, baseType: !1751, size: 160, offset: 768)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1986, file: !497, line: 466, baseType: !1753, size: 160, offset: 928)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1986, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 32)
!2010 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !497, line: 426, baseType: !2011)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 411, size: 28704, elements: !2012)
!2012 = !{!2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2011, file: !497, line: 413, baseType: !1697, size: 256)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2011, file: !497, line: 414, baseType: !1699, size: 768, offset: 256)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2011, file: !497, line: 415, baseType: !1697, size: 256, offset: 1024)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2011, file: !497, line: 416, baseType: !1699, size: 768, offset: 1280)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2011, file: !497, line: 417, baseType: !1697, size: 256, offset: 2048)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2011, file: !497, line: 418, baseType: !1699, size: 768, offset: 2304)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2011, file: !497, line: 419, baseType: !1697, size: 256, offset: 3072)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2011, file: !497, line: 420, baseType: !1699, size: 768, offset: 3328)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2011, file: !497, line: 421, baseType: !1697, size: 256, offset: 4096)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2011, file: !497, line: 422, baseType: !1710, size: 1792, offset: 4352)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2011, file: !497, line: 423, baseType: !1714, size: 1920, offset: 6144)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2011, file: !497, line: 424, baseType: !1719, size: 20608, offset: 8064)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2011, file: !497, line: 425, baseType: !283, size: 32, offset: 28672)
!2026 = !{!2027, !2149, !2158, !2160, !1940, !2163, !2165, !2170}
!2027 = !DIGlobalVariableExpression(var: !2028, expr: !DIExpression())
!2028 = distinct !DIGlobalVariable(name: "_kernel", scope: !1942, file: !1946, line: 40, type: !2029, isLocal: false, isDefinition: true)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !228, line: 158, size: 288, elements: !2030)
!2030 = !{!2031, !2144}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2029, file: !228, line: 159, baseType: !2032, size: 192)
!2032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2033, size: 192, elements: !486)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !228, line: 100, size: 192, elements: !2034)
!2034 = !{!2035, !2036, !2037, !2138, !2139, !2140, !2141}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2033, file: !228, line: 102, baseType: !162, size: 32)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2033, file: !228, line: 105, baseType: !256, size: 32, offset: 32)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2033, file: !228, line: 108, baseType: !2038, size: 32, offset: 64)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 32)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !2040)
!2040 = !{!2041, !2099, !2111, !2112, !2113, !2114, !2120, !2133}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2039, file: !359, line: 247, baseType: !2042, size: 384)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !2043)
!2043 = !{!2044, !2068, !2075, !2076, !2077, !2086, !2087, !2088}
!2044 = !DIDerivedType(tag: DW_TAG_member, scope: !2042, file: !359, line: 60, baseType: !2045, size: 64)
!2045 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2042, file: !359, line: 60, size: 64, elements: !2046)
!2046 = !{!2047, !2062}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2045, file: !359, line: 61, baseType: !2048, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2049)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2050)
!2050 = !{!2051, !2057}
!2051 = !DIDerivedType(tag: DW_TAG_member, scope: !2049, file: !233, line: 38, baseType: !2052, size: 32)
!2052 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2049, file: !233, line: 38, size: 32, elements: !2053)
!2053 = !{!2054, !2056}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2052, file: !233, line: 39, baseType: !2055, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2052, file: !233, line: 40, baseType: !2055, size: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, scope: !2049, file: !233, line: 42, baseType: !2058, size: 32, offset: 32)
!2058 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2049, file: !233, line: 42, size: 32, elements: !2059)
!2059 = !{!2060, !2061}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2058, file: !233, line: 43, baseType: !2055, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2058, file: !233, line: 44, baseType: !2055, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2045, file: !359, line: 62, baseType: !2063, size: 64)
!2063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !2064)
!2064 = !{!2065}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2063, file: !384, line: 50, baseType: !2066, size: 64)
!2066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2067, size: 64, elements: !389)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 32)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2042, file: !359, line: 68, baseType: !2069, size: 32, offset: 64)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 32)
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !2071)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !2072)
!2072 = !{!2073}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2071, file: !228, line: 232, baseType: !2074, size: 64)
!2074 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2049)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2042, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2042, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!2077 = !DIDerivedType(tag: DW_TAG_member, scope: !2042, file: !359, line: 90, baseType: !2078, size: 16, offset: 112)
!2078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2042, file: !359, line: 90, size: 16, elements: !2079)
!2079 = !{!2080, !2085}
!2080 = !DIDerivedType(tag: DW_TAG_member, scope: !2078, file: !359, line: 91, baseType: !2081, size: 16)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2078, file: !359, line: 91, size: 16, elements: !2082)
!2082 = !{!2083, !2084}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2081, file: !359, line: 96, baseType: !407, size: 8)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2081, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2078, file: !359, line: 100, baseType: !411, size: 16)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2042, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2042, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2042, file: !359, line: 131, baseType: !2089, size: 192, offset: 192)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2090)
!2090 = !{!2091, !2092, !2098}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2089, file: !228, line: 245, baseType: !2048, size: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2089, file: !228, line: 246, baseType: !2093, size: 32, offset: 64)
!2093 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2094)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 32)
!2095 = !DISubroutineType(types: !2096)
!2096 = !{null, !2097}
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2089, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2039, file: !359, line: 250, baseType: !2100, size: 288, offset: 384)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !2101)
!2101 = !{!2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2100, file: !428, line: 26, baseType: !162, size: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2100, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2100, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2100, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2100, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2100, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2100, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2100, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2100, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2039, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2039, file: !359, line: 256, baseType: !2070, size: 64, offset: 704)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2039, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2039, file: !359, line: 300, baseType: !2115, size: 96, offset: 800)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !2116)
!2116 = !{!2117, !2118, !2119}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2115, file: !359, line: 153, baseType: !22, size: 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2115, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2115, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2039, file: !359, line: 325, baseType: !2121, size: 32, offset: 896)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 32)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !2123)
!2123 = !{!2124, !2130, !2131}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2122, file: !224, line: 5074, baseType: !2125, size: 96)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !2126)
!2126 = !{!2127, !2128, !2129}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2125, file: !454, line: 57, baseType: !457, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2125, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2125, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2122, file: !224, line: 5075, baseType: !2070, size: 64, offset: 96)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2122, file: !224, line: 5076, baseType: !2132, offset: 160)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2039, file: !359, line: 343, baseType: !2134, size: 64, offset: 928)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !2135)
!2135 = !{!2136, !2137}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2134, file: !428, line: 63, baseType: !162, size: 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2134, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2033, file: !228, line: 111, baseType: !2038, size: 32, offset: 96)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2033, file: !228, line: 124, baseType: !107, size: 32, offset: 128)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2033, file: !228, line: 127, baseType: !133, size: 8, offset: 160)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2033, file: !228, line: 153, baseType: !2142, offset: 168)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2143, line: 33, elements: !250)
!2143 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2029, file: !228, line: 170, baseType: !2145, size: 96, offset: 192)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !228, line: 83, size: 96, elements: !2146)
!2146 = !{!2147, !2148}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2145, file: !228, line: 86, baseType: !2038, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2145, file: !228, line: 90, baseType: !2074, size: 64, offset: 32)
!2149 = !DIGlobalVariableExpression(var: !2150, expr: !DIExpression())
!2150 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1942, file: !1946, line: 43, type: !2151, isLocal: false, isDefinition: true, align: 512)
!2151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2152, size: 8704, elements: !2156)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2153, line: 47, size: 8, elements: !2154)
!2153 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2154 = !{!2155}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2152, file: !2153, line: 48, baseType: !125, size: 8)
!2156 = !{!2157}
!2157 = !DISubrange(count: 1088)
!2158 = !DIGlobalVariableExpression(var: !2159, expr: !DIExpression())
!2159 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1942, file: !1946, line: 44, type: !2039, isLocal: false, isDefinition: true)
!2160 = !DIGlobalVariableExpression(var: !2161, expr: !DIExpression())
!2161 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1942, file: !1946, line: 48, type: !2162, isLocal: false, isDefinition: true)
!2162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2039, size: 1024, elements: !486)
!2163 = !DIGlobalVariableExpression(var: !2164, expr: !DIExpression())
!2164 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1942, file: !1946, line: 217, type: !136, isLocal: false, isDefinition: true)
!2165 = !DIGlobalVariableExpression(var: !2166, expr: !DIExpression())
!2166 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1942, file: !1946, line: 50, type: !2167, isLocal: true, isDefinition: true, align: 512)
!2167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2152, size: 3072, elements: !2168)
!2168 = !{!487, !2169}
!2169 = !DISubrange(count: 384)
!2170 = !DIGlobalVariableExpression(var: !2171, expr: !DIExpression())
!2171 = distinct !DIGlobalVariable(name: "levels", scope: !2172, file: !1946, line: 232, type: !2192, isLocal: true, isDefinition: true)
!2172 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1946, file: !1946, line: 230, type: !2173, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !2175)
!2173 = !DISubroutineType(types: !2174)
!2174 = !{null, !1945}
!2175 = !{!2176, !2177, !2187, !2191}
!2176 = !DILocalVariable(name: "level", arg: 1, scope: !2172, file: !1946, line: 230, type: !1945)
!2177 = !DILocalVariable(name: "entry", scope: !2172, file: !1946, line: 244, type: !2178)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 32)
!2179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2180)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !2181)
!2181 = !{!2182, !2186}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2180, file: !294, line: 60, baseType: !2183, size: 32)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 32)
!2184 = !DISubroutineType(types: !2185)
!2185 = !{!107, !1964}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2180, file: !294, line: 65, baseType: !1964, size: 32, offset: 32)
!2187 = !DILocalVariable(name: "dev", scope: !2188, file: !1946, line: 247, type: !1964)
!2188 = distinct !DILexicalBlock(scope: !2189, file: !1946, line: 246, column: 64)
!2189 = distinct !DILexicalBlock(scope: !2190, file: !1946, line: 246, column: 2)
!2190 = distinct !DILexicalBlock(scope: !2172, file: !1946, line: 246, column: 2)
!2191 = !DILocalVariable(name: "rc", scope: !2188, file: !1946, line: 248, type: !107)
!2192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2178, size: 192, elements: !2193)
!2193 = !{!2194}
!2194 = !DISubrange(count: 6)
!2195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2152, size: 16896, elements: !2196)
!2196 = !{!487, !2197}
!2197 = !DISubrange(count: 2112)
!2198 = !DIGlobalVariableExpression(var: !2199, expr: !DIExpression())
!2199 = distinct !DIGlobalVariable(name: "states_str", scope: !2200, file: !2201, line: 276, type: !2322, isLocal: true, isDefinition: true)
!2200 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2201, file: !2201, line: 271, type: !2202, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !2313)
!2201 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2202 = !DISubroutineType(types: !2203)
!2203 = !{!123, !2204, !256, !252}
!2204 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !2205)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 32)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !2207)
!2207 = !{!2208, !2266, !2278, !2279, !2280, !2281, !2287, !2300}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2206, file: !359, line: 247, baseType: !2209, size: 384)
!2209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !2210)
!2210 = !{!2211, !2235, !2242, !2243, !2244, !2253, !2254, !2255}
!2211 = !DIDerivedType(tag: DW_TAG_member, scope: !2209, file: !359, line: 60, baseType: !2212, size: 64)
!2212 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2209, file: !359, line: 60, size: 64, elements: !2213)
!2213 = !{!2214, !2229}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2212, file: !359, line: 61, baseType: !2215, size: 64)
!2215 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2216)
!2216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2217)
!2217 = !{!2218, !2224}
!2218 = !DIDerivedType(tag: DW_TAG_member, scope: !2216, file: !233, line: 38, baseType: !2219, size: 32)
!2219 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2216, file: !233, line: 38, size: 32, elements: !2220)
!2220 = !{!2221, !2223}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2219, file: !233, line: 39, baseType: !2222, size: 32)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 32)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2219, file: !233, line: 40, baseType: !2222, size: 32)
!2224 = !DIDerivedType(tag: DW_TAG_member, scope: !2216, file: !233, line: 42, baseType: !2225, size: 32, offset: 32)
!2225 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2216, file: !233, line: 42, size: 32, elements: !2226)
!2226 = !{!2227, !2228}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2225, file: !233, line: 43, baseType: !2222, size: 32)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2225, file: !233, line: 44, baseType: !2222, size: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2212, file: !359, line: 62, baseType: !2230, size: 64)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !2231)
!2231 = !{!2232}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2230, file: !384, line: 50, baseType: !2233, size: 64)
!2233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2234, size: 64, elements: !389)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2209, file: !359, line: 68, baseType: !2236, size: 32, offset: 64)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !2238)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !2239)
!2239 = !{!2240}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2238, file: !228, line: 232, baseType: !2241, size: 64)
!2241 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2216)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2209, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2209, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!2244 = !DIDerivedType(tag: DW_TAG_member, scope: !2209, file: !359, line: 90, baseType: !2245, size: 16, offset: 112)
!2245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2209, file: !359, line: 90, size: 16, elements: !2246)
!2246 = !{!2247, !2252}
!2247 = !DIDerivedType(tag: DW_TAG_member, scope: !2245, file: !359, line: 91, baseType: !2248, size: 16)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2245, file: !359, line: 91, size: 16, elements: !2249)
!2249 = !{!2250, !2251}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2248, file: !359, line: 96, baseType: !407, size: 8)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2248, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2245, file: !359, line: 100, baseType: !411, size: 16)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2209, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2209, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2209, file: !359, line: 131, baseType: !2256, size: 192, offset: 192)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2257)
!2257 = !{!2258, !2259, !2265}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2256, file: !228, line: 245, baseType: !2215, size: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2256, file: !228, line: 246, baseType: !2260, size: 32, offset: 64)
!2260 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2261)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 32)
!2262 = !DISubroutineType(types: !2263)
!2263 = !{null, !2264}
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2256, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2206, file: !359, line: 250, baseType: !2267, size: 288, offset: 384)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !2268)
!2268 = !{!2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2267, file: !428, line: 26, baseType: !162, size: 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2267, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2267, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2267, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2267, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2267, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2267, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2267, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2267, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2206, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2206, file: !359, line: 256, baseType: !2237, size: 64, offset: 704)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2206, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2206, file: !359, line: 300, baseType: !2282, size: 96, offset: 800)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !2283)
!2283 = !{!2284, !2285, !2286}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2282, file: !359, line: 153, baseType: !22, size: 32)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2282, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2282, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2206, file: !359, line: 325, baseType: !2288, size: 32, offset: 896)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 32)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !2290)
!2290 = !{!2291, !2297, !2298}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2289, file: !224, line: 5074, baseType: !2292, size: 96)
!2292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !2293)
!2293 = !{!2294, !2295, !2296}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2292, file: !454, line: 57, baseType: !457, size: 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2292, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2292, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2289, file: !224, line: 5075, baseType: !2237, size: 64, offset: 96)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2289, file: !224, line: 5076, baseType: !2299, offset: 160)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2206, file: !359, line: 343, baseType: !2301, size: 64, offset: 928)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !2302)
!2302 = !{!2303, !2304}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2301, file: !428, line: 63, baseType: !162, size: 32)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2301, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!2305 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2306, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2307, globals: !2309, splitDebugInlining: false, nameTableKind: None)
!2306 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2307 = !{!102, !123, !103, !133, !107, !2308, !24, !252, !256, !22, !162, !1506}
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2215, size: 32)
!2309 = !{!2198, !2310}
!2310 = !DIGlobalVariableExpression(var: !2311, expr: !DIExpression())
!2311 = distinct !DIGlobalVariable(name: "states_sz", scope: !2200, file: !2201, line: 279, type: !2312, isLocal: true, isDefinition: true)
!2312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1876, size: 256, elements: !1514)
!2313 = !{!2314, !2315, !2316, !2317, !2318, !2319, !2320}
!2314 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2200, file: !2201, line: 271, type: !2204)
!2315 = !DILocalVariable(name: "buf", arg: 2, scope: !2200, file: !2201, line: 271, type: !256)
!2316 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2200, file: !2201, line: 271, type: !252)
!2317 = !DILocalVariable(name: "off", scope: !2200, file: !2201, line: 273, type: !252)
!2318 = !DILocalVariable(name: "bit", scope: !2200, file: !2201, line: 274, type: !133)
!2319 = !DILocalVariable(name: "thread_state", scope: !2200, file: !2201, line: 275, type: !133)
!2320 = !DILocalVariable(name: "index", scope: !2321, file: !2201, line: 293, type: !133)
!2321 = distinct !DILexicalBlock(scope: !2200, file: !2201, line: 293, column: 2)
!2322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 256, elements: !1514)
!2323 = !DIGlobalVariableExpression(var: !2324, expr: !DIExpression())
!2324 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2325, file: !2433, line: 56, type: !2422, isLocal: false, isDefinition: true)
!2325 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2326, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2327, globals: !2430, splitDebugInlining: false, nameTableKind: None)
!2326 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2327 = !{!2328, !256, !102, !2428, !182, !103, !736, !107, !162, !1506, !2429}
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 32)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !2330)
!2330 = !{!2331, !2389, !2401, !2402, !2403, !2404, !2410, !2423}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2329, file: !359, line: 247, baseType: !2332, size: 384)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !2333)
!2333 = !{!2334, !2358, !2365, !2366, !2367, !2376, !2377, !2378}
!2334 = !DIDerivedType(tag: DW_TAG_member, scope: !2332, file: !359, line: 60, baseType: !2335, size: 64)
!2335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2332, file: !359, line: 60, size: 64, elements: !2336)
!2336 = !{!2337, !2352}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2335, file: !359, line: 61, baseType: !2338, size: 64)
!2338 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2339)
!2339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2340)
!2340 = !{!2341, !2347}
!2341 = !DIDerivedType(tag: DW_TAG_member, scope: !2339, file: !233, line: 38, baseType: !2342, size: 32)
!2342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2339, file: !233, line: 38, size: 32, elements: !2343)
!2343 = !{!2344, !2346}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2342, file: !233, line: 39, baseType: !2345, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 32)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2342, file: !233, line: 40, baseType: !2345, size: 32)
!2347 = !DIDerivedType(tag: DW_TAG_member, scope: !2339, file: !233, line: 42, baseType: !2348, size: 32, offset: 32)
!2348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2339, file: !233, line: 42, size: 32, elements: !2349)
!2349 = !{!2350, !2351}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2348, file: !233, line: 43, baseType: !2345, size: 32)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2348, file: !233, line: 44, baseType: !2345, size: 32)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2335, file: !359, line: 62, baseType: !2353, size: 64)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !2354)
!2354 = !{!2355}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2353, file: !384, line: 50, baseType: !2356, size: 64)
!2356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2357, size: 64, elements: !389)
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2332, file: !359, line: 68, baseType: !2359, size: 32, offset: 64)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 32)
!2360 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !2361)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !2362)
!2362 = !{!2363}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2361, file: !228, line: 232, baseType: !2364, size: 64)
!2364 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2339)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2332, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2332, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!2367 = !DIDerivedType(tag: DW_TAG_member, scope: !2332, file: !359, line: 90, baseType: !2368, size: 16, offset: 112)
!2368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2332, file: !359, line: 90, size: 16, elements: !2369)
!2369 = !{!2370, !2375}
!2370 = !DIDerivedType(tag: DW_TAG_member, scope: !2368, file: !359, line: 91, baseType: !2371, size: 16)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2368, file: !359, line: 91, size: 16, elements: !2372)
!2372 = !{!2373, !2374}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2371, file: !359, line: 96, baseType: !407, size: 8)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2371, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2368, file: !359, line: 100, baseType: !411, size: 16)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2332, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2332, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2332, file: !359, line: 131, baseType: !2379, size: 192, offset: 192)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2380)
!2380 = !{!2381, !2382, !2388}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2379, file: !228, line: 245, baseType: !2338, size: 64)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2379, file: !228, line: 246, baseType: !2383, size: 32, offset: 64)
!2383 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2384)
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 32)
!2385 = !DISubroutineType(types: !2386)
!2386 = !{null, !2387}
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2379, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2329, file: !359, line: 250, baseType: !2390, size: 288, offset: 384)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !2391)
!2391 = !{!2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2390, file: !428, line: 26, baseType: !162, size: 32)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2390, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2390, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2390, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2390, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2390, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2390, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2390, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2390, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2329, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2329, file: !359, line: 256, baseType: !2360, size: 64, offset: 704)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2329, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2329, file: !359, line: 300, baseType: !2405, size: 96, offset: 800)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !2406)
!2406 = !{!2407, !2408, !2409}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2405, file: !359, line: 153, baseType: !22, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2405, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2405, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2329, file: !359, line: 325, baseType: !2411, size: 32, offset: 896)
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 32)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !2413)
!2413 = !{!2414, !2420, !2421}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2412, file: !224, line: 5074, baseType: !2415, size: 96)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !2416)
!2416 = !{!2417, !2418, !2419}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2415, file: !454, line: 57, baseType: !457, size: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2415, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2415, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2412, file: !224, line: 5075, baseType: !2360, size: 64, offset: 96)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2412, file: !224, line: 5076, baseType: !2422, offset: 160)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2329, file: !359, line: 343, baseType: !2424, size: 64, offset: 928)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !2425)
!2425 = !{!2426, !2427}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2424, file: !428, line: 63, baseType: !162, size: 32)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2424, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 32)
!2430 = !{!2323, !2431, !2434, !2436}
!2431 = !DIGlobalVariableExpression(var: !2432, expr: !DIExpression())
!2432 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2325, file: !2433, line: 404, type: !107, isLocal: true, isDefinition: true)
!2433 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2434 = !DIGlobalVariableExpression(var: !2435, expr: !DIExpression())
!2435 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2325, file: !2433, line: 405, type: !107, isLocal: true, isDefinition: true)
!2436 = !DIGlobalVariableExpression(var: !2437, expr: !DIExpression())
!2437 = distinct !DIGlobalVariable(name: "pending_current", scope: !2325, file: !2433, line: 425, type: !2328, isLocal: true, isDefinition: true)
!2438 = !DIGlobalVariableExpression(var: !2439, expr: !DIExpression())
!2439 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2440, file: !2470, line: 15, type: !1506, isLocal: true, isDefinition: true)
!2440 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2441, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2442, globals: !2467, splitDebugInlining: false, nameTableKind: None)
!2441 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2442 = !{!103, !102, !736, !162, !1506, !107, !2443, !256, !105}
!2443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 32)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2445)
!2445 = !{!2446, !2461, !2466}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2444, file: !228, line: 245, baseType: !2447, size: 64)
!2447 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2448)
!2448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2449)
!2449 = !{!2450, !2456}
!2450 = !DIDerivedType(tag: DW_TAG_member, scope: !2448, file: !233, line: 38, baseType: !2451, size: 32)
!2451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2448, file: !233, line: 38, size: 32, elements: !2452)
!2452 = !{!2453, !2455}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2451, file: !233, line: 39, baseType: !2454, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2451, file: !233, line: 40, baseType: !2454, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, scope: !2448, file: !233, line: 42, baseType: !2457, size: 32, offset: 32)
!2457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2448, file: !233, line: 42, size: 32, elements: !2458)
!2458 = !{!2459, !2460}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2457, file: !233, line: 43, baseType: !2454, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2457, file: !233, line: 44, baseType: !2454, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2444, file: !228, line: 246, baseType: !2462, size: 32, offset: 64)
!2462 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2463)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 32)
!2464 = !DISubroutineType(types: !2465)
!2465 = !{null, !2443}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2444, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2467 = !{!2438, !2468, !2472, !2474}
!2468 = !DIGlobalVariableExpression(var: !2469, expr: !DIExpression())
!2469 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2440, file: !2470, line: 19, type: !2471, isLocal: true, isDefinition: true)
!2470 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2472 = !DIGlobalVariableExpression(var: !2473, expr: !DIExpression())
!2473 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2440, file: !2470, line: 25, type: !107, isLocal: true, isDefinition: true)
!2474 = !DIGlobalVariableExpression(var: !2475, expr: !DIExpression())
!2475 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2440, file: !2470, line: 17, type: !2476, isLocal: true, isDefinition: true)
!2476 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2448)
!2477 = !DIGlobalVariableExpression(var: !2478, expr: !DIExpression())
!2478 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2479, file: !2498, line: 55, type: !2499, isLocal: true, isDefinition: true, align: 32)
!2479 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2480, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2481, globals: !2497, splitDebugInlining: false, nameTableKind: None)
!2480 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2481 = !{!102, !103, !107, !2482}
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 32)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2484)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2485)
!2485 = !{!2486, !2492}
!2486 = !DIDerivedType(tag: DW_TAG_member, scope: !2484, file: !233, line: 38, baseType: !2487, size: 32)
!2487 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2484, file: !233, line: 38, size: 32, elements: !2488)
!2488 = !{!2489, !2491}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2487, file: !233, line: 39, baseType: !2490, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2487, file: !233, line: 40, baseType: !2490, size: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, scope: !2484, file: !233, line: 42, baseType: !2493, size: 32, offset: 32)
!2493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2484, file: !233, line: 42, size: 32, elements: !2494)
!2494 = !{!2495, !2496}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2493, file: !233, line: 43, baseType: !2490, size: 32)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2493, file: !233, line: 44, baseType: !2490, size: 32)
!2497 = !{!2477}
!2498 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2500)
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !2501)
!2501 = !{!2502, !2509}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2500, file: !294, line: 60, baseType: !2503, size: 32)
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 32)
!2504 = !DISubroutineType(types: !2505)
!2505 = !{!107, !2506}
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2508)
!2508 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !294, line: 48, flags: DIFlagFwdDecl)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2500, file: !294, line: 65, baseType: !2506, size: 32, offset: 32)
!2510 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2511, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2511 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2512 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2513, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2513 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2514 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2515, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2516, retainedTypes: !2524, splitDebugInlining: false, nameTableKind: None)
!2515 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2516 = !{!30, !2517}
!2517 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2518, line: 54, baseType: !32, size: 32, elements: !2519)
!2518 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2519 = !{!2520, !2521, !2522, !2523}
!2520 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2521 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2522 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2523 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2524 = !{!102, !252, !182, !24, !2525, !22, !2531, !107, !864, !2546}
!2525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2518, line: 58, baseType: !2527)
!2527 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2518, line: 58, size: 64, elements: !2528)
!2528 = !{!2529}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2527, file: !2518, line: 58, baseType: !2530, size: 64)
!2530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 64, elements: !1514)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 32)
!2532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2518, line: 68, size: 128, elements: !2533)
!2533 = !{!2534, !2537, !2538, !2539}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2532, file: !2518, line: 69, baseType: !2535, size: 64)
!2535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2536, size: 64, elements: !389)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2518, line: 61, baseType: !162)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2532, file: !2518, line: 70, baseType: !2536, size: 32, offset: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2532, file: !2518, line: 71, baseType: !162, size: 32, offset: 96)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2532, file: !2518, line: 77, baseType: !2540, offset: 128)
!2540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2541, elements: !2544)
!2541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2518, line: 64, size: 32, elements: !2542)
!2542 = !{!2543}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2541, file: !2518, line: 65, baseType: !2536, size: 32)
!2544 = !{!2545}
!2545 = !DISubrange(count: 0)
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 32)
!2547 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2548, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2549, retainedTypes: !2569, splitDebugInlining: false, nameTableKind: None)
!2548 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2549 = !{!2550, !2558}
!2550 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2551, line: 69, baseType: !32, size: 32, elements: !2552)
!2551 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2552 = !{!2553, !2554, !2555, !2556, !2557}
!2553 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2554 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2555 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2556 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2557 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2558 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2551, line: 56, baseType: !32, size: 32, elements: !2559)
!2559 = !{!2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568}
!2560 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2561 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2562 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2563 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2564 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2565 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2566 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2567 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2568 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2569 = !{!107, !2550, !2558, !2570, !408, !143, !2572, !2573, !134, !412, !123, !252, !102, !22, !32, !2575, !2576, !2577, !2578, !2579, !106, !2580, !2571, !2581, !2582, !2583, !2584}
!2570 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2551, line: 31, baseType: !2571)
!2571 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !106)
!2572 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !253, line: 329, baseType: !32)
!2573 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2551, line: 32, baseType: !2574)
!2574 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1507)
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 32)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!2578 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 32)
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !253, line: 145, baseType: !107)
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 32)
!2585 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2586, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2586 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2587 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2588, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2589, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2588 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2589 = !{!2590, !30}
!2590 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2591, line: 27, baseType: !32, size: 32, elements: !2592)
!2591 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2592 = !{!2593, !2594, !2595, !2596, !2597}
!2593 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2594 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2595 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2596 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2597 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2598 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2599, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2600, retainedTypes: !2601, splitDebugInlining: false, nameTableKind: None)
!2599 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2600 = !{!566, !2590, !30}
!2601 = !{!762, !2602, !102, !107, !736, !162, !133, !2619}
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 32)
!2603 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !497, line: 426, baseType: !2604)
!2604 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 411, size: 28704, elements: !2605)
!2605 = !{!2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2604, file: !497, line: 413, baseType: !1697, size: 256)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2604, file: !497, line: 414, baseType: !1699, size: 768, offset: 256)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2604, file: !497, line: 415, baseType: !1697, size: 256, offset: 1024)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2604, file: !497, line: 416, baseType: !1699, size: 768, offset: 1280)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2604, file: !497, line: 417, baseType: !1697, size: 256, offset: 2048)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2604, file: !497, line: 418, baseType: !1699, size: 768, offset: 2304)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2604, file: !497, line: 419, baseType: !1697, size: 256, offset: 3072)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2604, file: !497, line: 420, baseType: !1699, size: 768, offset: 3328)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2604, file: !497, line: 421, baseType: !1697, size: 256, offset: 4096)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2604, file: !497, line: 422, baseType: !1710, size: 1792, offset: 4352)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2604, file: !497, line: 423, baseType: !1714, size: 1920, offset: 6144)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2604, file: !497, line: 424, baseType: !1719, size: 20608, offset: 8064)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2604, file: !497, line: 425, baseType: !283, size: 32, offset: 28672)
!2619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2620, size: 32)
!2620 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2621)
!2621 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2622)
!2622 = !{!2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2621, file: !497, line: 447, baseType: !501, size: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2621, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2621, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2621, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2621, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2621, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2621, file: !497, line: 453, baseType: !1734, size: 96, offset: 192)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2621, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2621, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2621, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2621, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2621, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2621, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2621, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2621, file: !497, line: 461, baseType: !1745, size: 64, offset: 512)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2621, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2621, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2621, file: !497, line: 464, baseType: !1749, size: 128, offset: 640)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2621, file: !497, line: 465, baseType: !1751, size: 160, offset: 768)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2621, file: !497, line: 466, baseType: !1753, size: 160, offset: 928)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2621, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2644 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2645, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2645 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2646 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2647, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2648, splitDebugInlining: false, nameTableKind: None)
!2647 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2648 = !{!102, !107, !22, !2649}
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2651)
!2651 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2652)
!2652 = !{!2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2651, file: !497, line: 447, baseType: !501, size: 32)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2651, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2651, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2651, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2651, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2651, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2651, file: !497, line: 453, baseType: !1734, size: 96, offset: 192)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2651, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2651, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2651, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2651, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2651, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2651, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2651, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2651, file: !497, line: 461, baseType: !1745, size: 64, offset: 512)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2651, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2651, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2651, file: !497, line: 464, baseType: !1749, size: 128, offset: 640)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2651, file: !497, line: 465, baseType: !1751, size: 160, offset: 768)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2651, file: !497, line: 466, baseType: !1753, size: 160, offset: 928)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2651, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2674 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2675, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2676, splitDebugInlining: false, nameTableKind: None)
!2675 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2676 = !{!2677, !102, !107}
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2679)
!2679 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2680)
!2680 = !{!2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701}
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2679, file: !497, line: 447, baseType: !501, size: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2679, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2679, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2679, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2679, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2679, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2679, file: !497, line: 453, baseType: !1734, size: 96, offset: 192)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2679, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2679, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2679, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2679, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2679, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2679, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2679, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2679, file: !497, line: 461, baseType: !1745, size: 64, offset: 512)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2679, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2679, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2679, file: !497, line: 464, baseType: !1749, size: 128, offset: 640)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2679, file: !497, line: 465, baseType: !1751, size: 160, offset: 768)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2679, file: !497, line: 466, baseType: !1753, size: 160, offset: 928)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2679, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2702 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2703, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2704, splitDebugInlining: false, nameTableKind: None)
!2703 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2704 = !{!2705, !162, !102, !107}
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 32)
!2706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2707, line: 98, size: 256, elements: !2708)
!2707 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2708 = !{!2709, !2714, !2719, !2724, !2729, !2734, !2739, !2744}
!2709 = !DIDerivedType(tag: DW_TAG_member, scope: !2706, file: !2707, line: 99, baseType: !2710, size: 32)
!2710 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2706, file: !2707, line: 99, size: 32, elements: !2711)
!2711 = !{!2712, !2713}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2710, file: !2707, line: 99, baseType: !162, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2710, file: !2707, line: 99, baseType: !162, size: 32)
!2714 = !DIDerivedType(tag: DW_TAG_member, scope: !2706, file: !2707, line: 100, baseType: !2715, size: 32, offset: 32)
!2715 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2706, file: !2707, line: 100, size: 32, elements: !2716)
!2716 = !{!2717, !2718}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2715, file: !2707, line: 100, baseType: !162, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2715, file: !2707, line: 100, baseType: !162, size: 32)
!2719 = !DIDerivedType(tag: DW_TAG_member, scope: !2706, file: !2707, line: 101, baseType: !2720, size: 32, offset: 64)
!2720 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2706, file: !2707, line: 101, size: 32, elements: !2721)
!2721 = !{!2722, !2723}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2720, file: !2707, line: 101, baseType: !162, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2720, file: !2707, line: 101, baseType: !162, size: 32)
!2724 = !DIDerivedType(tag: DW_TAG_member, scope: !2706, file: !2707, line: 102, baseType: !2725, size: 32, offset: 96)
!2725 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2706, file: !2707, line: 102, size: 32, elements: !2726)
!2726 = !{!2727, !2728}
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2725, file: !2707, line: 102, baseType: !162, size: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2725, file: !2707, line: 102, baseType: !162, size: 32)
!2729 = !DIDerivedType(tag: DW_TAG_member, scope: !2706, file: !2707, line: 103, baseType: !2730, size: 32, offset: 128)
!2730 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2706, file: !2707, line: 103, size: 32, elements: !2731)
!2731 = !{!2732, !2733}
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2730, file: !2707, line: 103, baseType: !162, size: 32)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2730, file: !2707, line: 103, baseType: !162, size: 32)
!2734 = !DIDerivedType(tag: DW_TAG_member, scope: !2706, file: !2707, line: 104, baseType: !2735, size: 32, offset: 160)
!2735 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2706, file: !2707, line: 104, size: 32, elements: !2736)
!2736 = !{!2737, !2738}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2735, file: !2707, line: 104, baseType: !162, size: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2735, file: !2707, line: 104, baseType: !162, size: 32)
!2739 = !DIDerivedType(tag: DW_TAG_member, scope: !2706, file: !2707, line: 105, baseType: !2740, size: 32, offset: 192)
!2740 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2706, file: !2707, line: 105, size: 32, elements: !2741)
!2741 = !{!2742, !2743}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2740, file: !2707, line: 105, baseType: !162, size: 32)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2740, file: !2707, line: 105, baseType: !162, size: 32)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2706, file: !2707, line: 106, baseType: !162, size: 32, offset: 224)
!2745 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2746, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2589, retainedTypes: !2747, splitDebugInlining: false, nameTableKind: None)
!2746 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2747 = !{!2748, !102, !107, !2773, !2546, !162}
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 32)
!2749 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2750)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2751)
!2751 = !{!2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2750, file: !497, line: 447, baseType: !501, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2750, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2750, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2750, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2750, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2750, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2750, file: !497, line: 453, baseType: !1734, size: 96, offset: 192)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2750, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2750, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2750, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2750, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2750, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2750, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2750, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2750, file: !497, line: 461, baseType: !1745, size: 64, offset: 512)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2750, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2750, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2750, file: !497, line: 464, baseType: !1749, size: 128, offset: 640)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2750, file: !497, line: 465, baseType: !1751, size: 160, offset: 768)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2750, file: !497, line: 466, baseType: !1753, size: 160, offset: 928)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2750, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2774, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2707, line: 141, baseType: !2775)
!2775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2707, line: 97, size: 256, elements: !2776)
!2776 = !{!2777}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2775, file: !2707, line: 107, baseType: !2778, size: 256)
!2778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2707, line: 98, size: 256, elements: !2779)
!2779 = !{!2780, !2785, !2790, !2795, !2800, !2805, !2810, !2815}
!2780 = !DIDerivedType(tag: DW_TAG_member, scope: !2778, file: !2707, line: 99, baseType: !2781, size: 32)
!2781 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2778, file: !2707, line: 99, size: 32, elements: !2782)
!2782 = !{!2783, !2784}
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2781, file: !2707, line: 99, baseType: !162, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2781, file: !2707, line: 99, baseType: !162, size: 32)
!2785 = !DIDerivedType(tag: DW_TAG_member, scope: !2778, file: !2707, line: 100, baseType: !2786, size: 32, offset: 32)
!2786 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2778, file: !2707, line: 100, size: 32, elements: !2787)
!2787 = !{!2788, !2789}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2786, file: !2707, line: 100, baseType: !162, size: 32)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2786, file: !2707, line: 100, baseType: !162, size: 32)
!2790 = !DIDerivedType(tag: DW_TAG_member, scope: !2778, file: !2707, line: 101, baseType: !2791, size: 32, offset: 64)
!2791 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2778, file: !2707, line: 101, size: 32, elements: !2792)
!2792 = !{!2793, !2794}
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2791, file: !2707, line: 101, baseType: !162, size: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2791, file: !2707, line: 101, baseType: !162, size: 32)
!2795 = !DIDerivedType(tag: DW_TAG_member, scope: !2778, file: !2707, line: 102, baseType: !2796, size: 32, offset: 96)
!2796 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2778, file: !2707, line: 102, size: 32, elements: !2797)
!2797 = !{!2798, !2799}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2796, file: !2707, line: 102, baseType: !162, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2796, file: !2707, line: 102, baseType: !162, size: 32)
!2800 = !DIDerivedType(tag: DW_TAG_member, scope: !2778, file: !2707, line: 103, baseType: !2801, size: 32, offset: 128)
!2801 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2778, file: !2707, line: 103, size: 32, elements: !2802)
!2802 = !{!2803, !2804}
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2801, file: !2707, line: 103, baseType: !162, size: 32)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2801, file: !2707, line: 103, baseType: !162, size: 32)
!2805 = !DIDerivedType(tag: DW_TAG_member, scope: !2778, file: !2707, line: 104, baseType: !2806, size: 32, offset: 160)
!2806 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2778, file: !2707, line: 104, size: 32, elements: !2807)
!2807 = !{!2808, !2809}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2806, file: !2707, line: 104, baseType: !162, size: 32)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2806, file: !2707, line: 104, baseType: !162, size: 32)
!2810 = !DIDerivedType(tag: DW_TAG_member, scope: !2778, file: !2707, line: 105, baseType: !2811, size: 32, offset: 192)
!2811 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2778, file: !2707, line: 105, size: 32, elements: !2812)
!2812 = !{!2813, !2814}
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2811, file: !2707, line: 105, baseType: !162, size: 32)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2811, file: !2707, line: 105, baseType: !162, size: 32)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2778, file: !2707, line: 106, baseType: !162, size: 32, offset: 224)
!2816 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2817, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1682, retainedTypes: !2818, splitDebugInlining: false, nameTableKind: None)
!2817 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2818 = !{!762, !736, !133, !162, !2819, !2836}
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 32)
!2820 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !497, line: 426, baseType: !2821)
!2821 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 411, size: 28704, elements: !2822)
!2822 = !{!2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2821, file: !497, line: 413, baseType: !1697, size: 256)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2821, file: !497, line: 414, baseType: !1699, size: 768, offset: 256)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2821, file: !497, line: 415, baseType: !1697, size: 256, offset: 1024)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2821, file: !497, line: 416, baseType: !1699, size: 768, offset: 1280)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2821, file: !497, line: 417, baseType: !1697, size: 256, offset: 2048)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2821, file: !497, line: 418, baseType: !1699, size: 768, offset: 2304)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2821, file: !497, line: 419, baseType: !1697, size: 256, offset: 3072)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2821, file: !497, line: 420, baseType: !1699, size: 768, offset: 3328)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2821, file: !497, line: 421, baseType: !1697, size: 256, offset: 4096)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2821, file: !497, line: 422, baseType: !1710, size: 1792, offset: 4352)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2821, file: !497, line: 423, baseType: !1714, size: 1920, offset: 6144)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2821, file: !497, line: 424, baseType: !1719, size: 20608, offset: 8064)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2821, file: !497, line: 425, baseType: !283, size: 32, offset: 28672)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 32)
!2837 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2838)
!2838 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2839)
!2839 = !{!2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860}
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2838, file: !497, line: 447, baseType: !501, size: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2838, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2838, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2838, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2838, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2838, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2838, file: !497, line: 453, baseType: !1734, size: 96, offset: 192)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2838, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2838, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2838, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2838, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2838, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2838, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2838, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2838, file: !497, line: 461, baseType: !1745, size: 64, offset: 512)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2838, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2838, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2838, file: !497, line: 464, baseType: !1749, size: 128, offset: 640)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2838, file: !497, line: 465, baseType: !1751, size: 160, offset: 768)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2838, file: !497, line: 466, baseType: !1753, size: 160, offset: 928)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2838, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2861 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2862, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2863, splitDebugInlining: false, nameTableKind: None)
!2862 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2863 = !{!2864, !102, !107}
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 32)
!2865 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2866)
!2866 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2867)
!2867 = !{!2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2866, file: !497, line: 447, baseType: !501, size: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2866, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2866, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2866, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2866, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2866, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2866, file: !497, line: 453, baseType: !1734, size: 96, offset: 192)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2866, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2866, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2866, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2866, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2866, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2866, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2866, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2866, file: !497, line: 461, baseType: !1745, size: 64, offset: 512)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2866, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2866, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2866, file: !497, line: 464, baseType: !1749, size: 128, offset: 640)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2866, file: !497, line: 465, baseType: !1751, size: 160, offset: 768)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2866, file: !497, line: 466, baseType: !1753, size: 160, offset: 928)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2866, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2889 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2890, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2891, splitDebugInlining: false, nameTableKind: None)
!2890 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2891 = !{!125, !256, !252, !144, !2892, !134, !102}
!2892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2893, size: 32)
!2893 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !134)
!2894 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2895, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2896, splitDebugInlining: false, nameTableKind: None)
!2895 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2896 = !{!2897}
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 32)
!2898 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 586, baseType: !2899)
!2899 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 550, size: 1216, elements: !2900)
!2900 = !{!2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934}
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2899, file: !279, line: 552, baseType: !283, size: 32)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2899, file: !279, line: 553, baseType: !283, size: 32, offset: 32)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2899, file: !279, line: 554, baseType: !283, size: 32, offset: 64)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2899, file: !279, line: 555, baseType: !283, size: 32, offset: 96)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2899, file: !279, line: 556, baseType: !283, size: 32, offset: 128)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2899, file: !279, line: 557, baseType: !283, size: 32, offset: 160)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2899, file: !279, line: 558, baseType: !283, size: 32, offset: 192)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2899, file: !279, line: 559, baseType: !162, size: 32, offset: 224)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2899, file: !279, line: 560, baseType: !283, size: 32, offset: 256)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2899, file: !279, line: 561, baseType: !283, size: 32, offset: 288)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2899, file: !279, line: 562, baseType: !834, size: 64, offset: 320)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2899, file: !279, line: 563, baseType: !283, size: 32, offset: 384)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2899, file: !279, line: 564, baseType: !283, size: 32, offset: 416)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2899, file: !279, line: 565, baseType: !283, size: 32, offset: 448)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2899, file: !279, line: 566, baseType: !162, size: 32, offset: 480)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2899, file: !279, line: 567, baseType: !283, size: 32, offset: 512)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2899, file: !279, line: 568, baseType: !283, size: 32, offset: 544)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2899, file: !279, line: 569, baseType: !834, size: 64, offset: 576)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2899, file: !279, line: 570, baseType: !283, size: 32, offset: 640)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2899, file: !279, line: 571, baseType: !283, size: 32, offset: 672)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2899, file: !279, line: 572, baseType: !283, size: 32, offset: 704)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2899, file: !279, line: 573, baseType: !162, size: 32, offset: 736)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2899, file: !279, line: 574, baseType: !283, size: 32, offset: 768)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2899, file: !279, line: 575, baseType: !283, size: 32, offset: 800)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2899, file: !279, line: 576, baseType: !834, size: 64, offset: 832)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2899, file: !279, line: 577, baseType: !283, size: 32, offset: 896)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2899, file: !279, line: 578, baseType: !283, size: 32, offset: 928)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2899, file: !279, line: 579, baseType: !834, size: 64, offset: 960)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2899, file: !279, line: 580, baseType: !283, size: 32, offset: 1024)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2899, file: !279, line: 581, baseType: !283, size: 32, offset: 1056)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2899, file: !279, line: 582, baseType: !283, size: 32, offset: 1088)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2899, file: !279, line: 583, baseType: !283, size: 32, offset: 1120)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2899, file: !279, line: 584, baseType: !283, size: 32, offset: 1152)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2899, file: !279, line: 585, baseType: !283, size: 32, offset: 1184)
!2935 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2936, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2936 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2937 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2938, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2939, retainedTypes: !2955, splitDebugInlining: false, nameTableKind: None)
!2938 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!2939 = !{!2940, !2947, !2951}
!2940 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2941, line: 38, baseType: !32, size: 32, elements: !2942)
!2941 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2942 = !{!2943, !2944, !2945, !2946}
!2943 = !DIEnumerator(name: "HAL_OK", value: 0)
!2944 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2945 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2946 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2947 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !807, line: 184, baseType: !32, size: 32, elements: !2948)
!2948 = !{!2949, !2950}
!2949 = !DIEnumerator(name: "RESET", value: 0)
!2950 = !DIEnumerator(name: "SET", value: 1)
!2951 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !807, line: 190, baseType: !32, size: 32, elements: !2952)
!2952 = !{!2953, !2954}
!2953 = !DIEnumerator(name: "DISABLE", value: 0)
!2954 = !DIEnumerator(name: "ENABLE", value: 1)
!2955 = !{!2956, !162, !2994, !1508, !133, !1506, !102}
!2956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2957, size: 32)
!2957 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 586, baseType: !2958)
!2958 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 550, size: 1216, elements: !2959)
!2959 = !{!2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993}
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2958, file: !279, line: 552, baseType: !283, size: 32)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2958, file: !279, line: 553, baseType: !283, size: 32, offset: 32)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2958, file: !279, line: 554, baseType: !283, size: 32, offset: 64)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2958, file: !279, line: 555, baseType: !283, size: 32, offset: 96)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2958, file: !279, line: 556, baseType: !283, size: 32, offset: 128)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2958, file: !279, line: 557, baseType: !283, size: 32, offset: 160)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !2958, file: !279, line: 558, baseType: !283, size: 32, offset: 192)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2958, file: !279, line: 559, baseType: !162, size: 32, offset: 224)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2958, file: !279, line: 560, baseType: !283, size: 32, offset: 256)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2958, file: !279, line: 561, baseType: !283, size: 32, offset: 288)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2958, file: !279, line: 562, baseType: !834, size: 64, offset: 320)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2958, file: !279, line: 563, baseType: !283, size: 32, offset: 384)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2958, file: !279, line: 564, baseType: !283, size: 32, offset: 416)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !2958, file: !279, line: 565, baseType: !283, size: 32, offset: 448)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2958, file: !279, line: 566, baseType: !162, size: 32, offset: 480)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2958, file: !279, line: 567, baseType: !283, size: 32, offset: 512)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2958, file: !279, line: 568, baseType: !283, size: 32, offset: 544)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2958, file: !279, line: 569, baseType: !834, size: 64, offset: 576)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2958, file: !279, line: 570, baseType: !283, size: 32, offset: 640)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2958, file: !279, line: 571, baseType: !283, size: 32, offset: 672)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !2958, file: !279, line: 572, baseType: !283, size: 32, offset: 704)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2958, file: !279, line: 573, baseType: !162, size: 32, offset: 736)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2958, file: !279, line: 574, baseType: !283, size: 32, offset: 768)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2958, file: !279, line: 575, baseType: !283, size: 32, offset: 800)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2958, file: !279, line: 576, baseType: !834, size: 64, offset: 832)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2958, file: !279, line: 577, baseType: !283, size: 32, offset: 896)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2958, file: !279, line: 578, baseType: !283, size: 32, offset: 928)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2958, file: !279, line: 579, baseType: !834, size: 64, offset: 960)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2958, file: !279, line: 580, baseType: !283, size: 32, offset: 1024)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2958, file: !279, line: 581, baseType: !283, size: 32, offset: 1056)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !2958, file: !279, line: 582, baseType: !283, size: 32, offset: 1088)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2958, file: !279, line: 583, baseType: !283, size: 32, offset: 1120)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2958, file: !279, line: 584, baseType: !283, size: 32, offset: 1152)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2958, file: !279, line: 585, baseType: !283, size: 32, offset: 1184)
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2995, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !279, line: 544, baseType: !2996)
!2996 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 540, size: 64, elements: !2997)
!2997 = !{!2998, !2999}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2996, file: !279, line: 542, baseType: !283, size: 32)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2996, file: !279, line: 543, baseType: !283, size: 32, offset: 32)
!3000 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3001, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3002, retainedTypes: !3003, splitDebugInlining: false, nameTableKind: None)
!3001 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!3002 = !{!806}
!3003 = !{!3004, !162, !3012, !3018, !3029}
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !497, line: 770, baseType: !3006)
!3006 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 764, size: 128, elements: !3007)
!3007 = !{!3008, !3009, !3010, !3011}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3006, file: !497, line: 766, baseType: !283, size: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3006, file: !497, line: 767, baseType: !283, size: 32, offset: 32)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3006, file: !497, line: 768, baseType: !283, size: 32, offset: 64)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3006, file: !497, line: 769, baseType: !501, size: 32, offset: 96)
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3013, size: 32)
!3013 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !279, line: 544, baseType: !3014)
!3014 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 540, size: 64, elements: !3015)
!3015 = !{!3016, !3017}
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3014, file: !279, line: 542, baseType: !283, size: 32)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3014, file: !279, line: 543, baseType: !283, size: 32, offset: 32)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 32)
!3019 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !279, line: 407, baseType: !3020)
!3020 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 398, size: 224, elements: !3021)
!3021 = !{!3022, !3023, !3024, !3025, !3026, !3027, !3028}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3020, file: !279, line: 400, baseType: !283, size: 32)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3020, file: !279, line: 401, baseType: !283, size: 32, offset: 32)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3020, file: !279, line: 402, baseType: !283, size: 32, offset: 64)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3020, file: !279, line: 403, baseType: !283, size: 32, offset: 96)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3020, file: !279, line: 404, baseType: !283, size: 32, offset: 128)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3020, file: !279, line: 405, baseType: !283, size: 32, offset: 160)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3020, file: !279, line: 406, baseType: !283, size: 32, offset: 192)
!3029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3030, size: 32)
!3030 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 586, baseType: !3031)
!3031 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 550, size: 1216, elements: !3032)
!3032 = !{!3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066}
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3031, file: !279, line: 552, baseType: !283, size: 32)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3031, file: !279, line: 553, baseType: !283, size: 32, offset: 32)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3031, file: !279, line: 554, baseType: !283, size: 32, offset: 64)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3031, file: !279, line: 555, baseType: !283, size: 32, offset: 96)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3031, file: !279, line: 556, baseType: !283, size: 32, offset: 128)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3031, file: !279, line: 557, baseType: !283, size: 32, offset: 160)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3RSTR", scope: !3031, file: !279, line: 558, baseType: !283, size: 32, offset: 192)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3031, file: !279, line: 559, baseType: !162, size: 32, offset: 224)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3031, file: !279, line: 560, baseType: !283, size: 32, offset: 256)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3031, file: !279, line: 561, baseType: !283, size: 32, offset: 288)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3031, file: !279, line: 562, baseType: !834, size: 64, offset: 320)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3031, file: !279, line: 563, baseType: !283, size: 32, offset: 384)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3031, file: !279, line: 564, baseType: !283, size: 32, offset: 416)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3ENR", scope: !3031, file: !279, line: 565, baseType: !283, size: 32, offset: 448)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3031, file: !279, line: 566, baseType: !162, size: 32, offset: 480)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3031, file: !279, line: 567, baseType: !283, size: 32, offset: 512)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3031, file: !279, line: 568, baseType: !283, size: 32, offset: 544)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3031, file: !279, line: 569, baseType: !834, size: 64, offset: 576)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3031, file: !279, line: 570, baseType: !283, size: 32, offset: 640)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3031, file: !279, line: 571, baseType: !283, size: 32, offset: 672)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "AHB3LPENR", scope: !3031, file: !279, line: 572, baseType: !283, size: 32, offset: 704)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3031, file: !279, line: 573, baseType: !162, size: 32, offset: 736)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3031, file: !279, line: 574, baseType: !283, size: 32, offset: 768)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3031, file: !279, line: 575, baseType: !283, size: 32, offset: 800)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3031, file: !279, line: 576, baseType: !834, size: 64, offset: 832)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3031, file: !279, line: 577, baseType: !283, size: 32, offset: 896)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3031, file: !279, line: 578, baseType: !283, size: 32, offset: 928)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3031, file: !279, line: 579, baseType: !834, size: 64, offset: 960)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3031, file: !279, line: 580, baseType: !283, size: 32, offset: 1024)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3031, file: !279, line: 581, baseType: !283, size: 32, offset: 1056)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAICFGR", scope: !3031, file: !279, line: 582, baseType: !283, size: 32, offset: 1088)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3031, file: !279, line: 583, baseType: !283, size: 32, offset: 1120)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3031, file: !279, line: 584, baseType: !283, size: 32, offset: 1152)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3031, file: !279, line: 585, baseType: !283, size: 32, offset: 1184)
!3067 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3068, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3069, splitDebugInlining: false, nameTableKind: None)
!3068 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!3069 = !{!102, !252}
!3070 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3071, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3072, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!3071 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!3072 = !{!3073, !3080, !30}
!3073 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3074, line: 14, baseType: !32, size: 32, elements: !3075)
!3074 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3075 = !{!3076, !3077, !3078, !3079}
!3076 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3077 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3078 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3079 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3080 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3074, line: 42, baseType: !32, size: 32, elements: !3081)
!3081 = !{!3082, !3083, !3084, !3085, !3086, !3087}
!3082 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3083 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3084 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3085 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3086 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3087 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3088 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3089, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!3089 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!3090 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3091, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3092, splitDebugInlining: false, nameTableKind: None)
!3091 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!3092 = !{!102, !107, !3093, !3108}
!3093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3094, size: 32)
!3094 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !3095)
!3095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !3096)
!3096 = !{!3097, !3103}
!3097 = !DIDerivedType(tag: DW_TAG_member, scope: !3095, file: !233, line: 38, baseType: !3098, size: 32)
!3098 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3095, file: !233, line: 38, size: 32, elements: !3099)
!3099 = !{!3100, !3102}
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3098, file: !233, line: 39, baseType: !3101, size: 32)
!3101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 32)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3098, file: !233, line: 40, baseType: !3101, size: 32)
!3103 = !DIDerivedType(tag: DW_TAG_member, scope: !3095, file: !233, line: 42, baseType: !3104, size: 32, offset: 32)
!3104 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3095, file: !233, line: 42, size: 32, elements: !3105)
!3105 = !{!3106, !3107}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3104, file: !233, line: 43, baseType: !3101, size: 32)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3104, file: !233, line: 44, baseType: !3101, size: 32)
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3109, size: 32)
!3109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !3110)
!3110 = !{!3111, !3155, !3167, !3168, !3169, !3170, !3176, !3189}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3109, file: !359, line: 247, baseType: !3112, size: 384)
!3112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !3113)
!3113 = !{!3114, !3124, !3131, !3132, !3133, !3142, !3143, !3144}
!3114 = !DIDerivedType(tag: DW_TAG_member, scope: !3112, file: !359, line: 60, baseType: !3115, size: 64)
!3115 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3112, file: !359, line: 60, size: 64, elements: !3116)
!3116 = !{!3117, !3118}
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3115, file: !359, line: 61, baseType: !3094, size: 64)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3115, file: !359, line: 62, baseType: !3119, size: 64)
!3119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !3120)
!3120 = !{!3121}
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3119, file: !384, line: 50, baseType: !3122, size: 64)
!3122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3123, size: 64, elements: !389)
!3123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3119, size: 32)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3112, file: !359, line: 68, baseType: !3125, size: 32, offset: 64)
!3125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3126, size: 32)
!3126 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !3127)
!3127 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !3128)
!3128 = !{!3129}
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3127, file: !228, line: 232, baseType: !3130, size: 64)
!3130 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !3095)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3112, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3112, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!3133 = !DIDerivedType(tag: DW_TAG_member, scope: !3112, file: !359, line: 90, baseType: !3134, size: 16, offset: 112)
!3134 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3112, file: !359, line: 90, size: 16, elements: !3135)
!3135 = !{!3136, !3141}
!3136 = !DIDerivedType(tag: DW_TAG_member, scope: !3134, file: !359, line: 91, baseType: !3137, size: 16)
!3137 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3134, file: !359, line: 91, size: 16, elements: !3138)
!3138 = !{!3139, !3140}
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3137, file: !359, line: 96, baseType: !407, size: 8)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3137, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3134, file: !359, line: 100, baseType: !411, size: 16)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3112, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3112, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3112, file: !359, line: 131, baseType: !3145, size: 192, offset: 192)
!3145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !3146)
!3146 = !{!3147, !3148, !3154}
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3145, file: !228, line: 245, baseType: !3094, size: 64)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3145, file: !228, line: 246, baseType: !3149, size: 32, offset: 64)
!3149 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !3150)
!3150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3151, size: 32)
!3151 = !DISubroutineType(types: !3152)
!3152 = !{null, !3153}
!3153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3145, size: 32)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3145, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3109, file: !359, line: 250, baseType: !3156, size: 288, offset: 384)
!3156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !3157)
!3157 = !{!3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166}
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3156, file: !428, line: 26, baseType: !162, size: 32)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3156, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3156, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3156, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3156, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3156, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3156, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3156, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3156, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3109, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3109, file: !359, line: 256, baseType: !3126, size: 64, offset: 704)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3109, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3109, file: !359, line: 300, baseType: !3171, size: 96, offset: 800)
!3171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !3172)
!3172 = !{!3173, !3174, !3175}
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3171, file: !359, line: 153, baseType: !22, size: 32)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3171, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3171, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3109, file: !359, line: 325, baseType: !3177, size: 32, offset: 896)
!3177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3178, size: 32)
!3178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !3179)
!3179 = !{!3180, !3186, !3187}
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3178, file: !224, line: 5074, baseType: !3181, size: 96)
!3181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !3182)
!3182 = !{!3183, !3184, !3185}
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3181, file: !454, line: 57, baseType: !457, size: 32)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3181, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3181, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3178, file: !224, line: 5075, baseType: !3126, size: 64, offset: 96)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3178, file: !224, line: 5076, baseType: !3188, offset: 160)
!3188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3109, file: !359, line: 343, baseType: !3190, size: 64, offset: 928)
!3190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !3191)
!3191 = !{!3192, !3193}
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3190, file: !428, line: 63, baseType: !162, size: 32)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3190, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!3194 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3195, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3196, splitDebugInlining: false, nameTableKind: None)
!3195 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!3196 = !{!22, !102, !107}
!3197 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3198, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!3198 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!3199 = !{!"Ubuntu clang version 14.0.6"}
!3200 = !{i32 7, !"Dwarf Version", i32 4}
!3201 = !{i32 2, !"Debug Info Version", i32 3}
!3202 = !{i32 1, !"wchar_size", i32 4}
!3203 = !{i32 1, !"min_enum_size", i32 4}
!3204 = !{i32 1, !"branch-target-enforcement", i32 0}
!3205 = !{i32 1, !"sign-return-address", i32 0}
!3206 = !{i32 1, !"sign-return-address-all", i32 0}
!3207 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3208 = !{i32 7, !"frame-pointer", i32 2}
!3209 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3210, file: !3210, line: 26, type: !3211, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2510, retainedNodes: !250)
!3210 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3211 = !DISubroutineType(types: !3212)
!3212 = !{null}
!3213 = !DILocation(line: 28, column: 1, scope: !3209)
!3214 = !{i64 2155360470, i64 2155360490, i64 2155360553}
!3215 = !DILocation(line: 29, column: 1, scope: !3209)
!3216 = !{i64 2155360885, i64 2155360905, i64 2155360968}
!3217 = !DILocation(line: 30, column: 1, scope: !3209)
!3218 = !{i64 2155361304, i64 2155361324, i64 2155361387}
!3219 = !DILocation(line: 31, column: 1, scope: !3209)
!3220 = !{i64 2155361723, i64 2155361743, i64 2155361806}
!3221 = !DILocation(line: 33, column: 1, scope: !3209)
!3222 = !{i64 2155362015, i64 2155362035, i64 2155362098}
!3223 = !DILocation(line: 35, column: 1, scope: !3209)
!3224 = !{i64 2155362340, i64 2155362360, i64 2155362423}
!3225 = !DILocation(line: 50, column: 1, scope: !3209)
!3226 = !{i64 2155362767, i64 2155362787, i64 2155362850}
!3227 = !DILocation(line: 54, column: 1, scope: !3209)
!3228 = !{i64 2155367267, i64 2155367287, i64 2155367350}
!3229 = !DILocation(line: 61, column: 1, scope: !3209)
!3230 = !{i64 2155367584, i64 2155367604, i64 2155367667}
!3231 = !DILocation(line: 63, column: 1, scope: !3209)
!3232 = !{i64 2155367964, i64 2155367984, i64 2155368047}
!3233 = !DILocation(line: 64, column: 1, scope: !3209)
!3234 = !{i64 2155368486, i64 2155368506, i64 2155368569}
!3235 = !DILocation(line: 65, column: 1, scope: !3209)
!3236 = !{i64 2155368984, i64 2155369004, i64 2155369067}
!3237 = !DILocation(line: 66, column: 1, scope: !3209)
!3238 = !{i64 2155369466, i64 2155369486, i64 2155369549}
!3239 = !DILocation(line: 67, column: 1, scope: !3209)
!3240 = !{i64 2155369973, i64 2155369993, i64 2155370056}
!3241 = !DILocation(line: 68, column: 1, scope: !3209)
!3242 = !{i64 2155370461, i64 2155370481, i64 2155370544}
!3243 = !DILocation(line: 70, column: 1, scope: !3209)
!3244 = !{i64 2155370929, i64 2155370949, i64 2155371012}
!3245 = !DILocation(line: 71, column: 1, scope: !3209)
!3246 = !{i64 2155371371, i64 2155371391, i64 2155371454}
!3247 = !DILocation(line: 72, column: 1, scope: !3209)
!3248 = !{i64 2155371829, i64 2155371849, i64 2155371912}
!3249 = !DILocation(line: 79, column: 1, scope: !3209)
!3250 = !{i64 2155372283, i64 2155372303, i64 2155372366}
!3251 = !DILocation(line: 80, column: 1, scope: !3209)
!3252 = !{i64 2155372794, i64 2155372814, i64 2155372877}
!3253 = !DILocation(line: 82, column: 1, scope: !3209)
!3254 = !{i64 2155373285, i64 2155373305, i64 2155373368}
!3255 = !DILocation(line: 97, column: 1, scope: !3209)
!3256 = !{i64 2155373622, i64 2155373642, i64 2155373705}
!3257 = !DILocation(line: 99, column: 1, scope: !3209)
!3258 = !{i64 2155373840, i64 2155373860, i64 2155373923}
!3259 = !DILocation(line: 102, column: 1, scope: !3209)
!3260 = !{i64 2155374097, i64 2155374117, i64 2155374180}
!3261 = !DILocation(line: 105, column: 1, scope: !3209)
!3262 = !{i64 2155374337, i64 2155374357, i64 2155374420}
!3263 = !DILocation(line: 115, column: 1, scope: !3209)
!3264 = !{i64 2155374676, i64 2155374696, i64 2155374759}
!3265 = !DILocation(line: 118, column: 1, scope: !3209)
!3266 = !{i64 2155375020, i64 2155375040, i64 2155375103}
!3267 = !DILocation(line: 32, column: 1, scope: !3268)
!3268 = !DILexicalBlockFile(scope: !3209, file: !3269, discriminator: 0)
!3269 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3270 = !{i64 2155375376, i64 2155375396, i64 2155375459}
!3271 = !DILocation(line: 33, column: 1, scope: !3268)
!3272 = !{i64 2155375888, i64 2155375908, i64 2155375971}
!3273 = !DILocation(line: 53, column: 1, scope: !3268)
!3274 = !{i64 2155376396, i64 2155376416, i64 2155376479}
!3275 = !DILocation(line: 54, column: 1, scope: !3268)
!3276 = !{i64 2155380875, i64 2155380895, i64 2155380958}
!3277 = !DILocation(line: 55, column: 1, scope: !3268)
!3278 = !{i64 2155381293, i64 2155381313, i64 2155381376}
!3279 = !DILocation(line: 56, column: 1, scope: !3268)
!3280 = !{i64 2155381711, i64 2155381731, i64 2155381794}
!3281 = !DILocation(line: 57, column: 1, scope: !3268)
!3282 = !{i64 2155382129, i64 2155382149, i64 2155382212}
!3283 = !DILocation(line: 58, column: 1, scope: !3268)
!3284 = !{i64 2155382547, i64 2155382567, i64 2155382630}
!3285 = !DILocation(line: 59, column: 1, scope: !3268)
!3286 = !{i64 2155382965, i64 2155382985, i64 2155383048}
!3287 = !DILocation(line: 60, column: 1, scope: !3268)
!3288 = !{i64 2155383389, i64 2155383409, i64 2155383472}
!3289 = !DILocation(line: 61, column: 1, scope: !3268)
!3290 = !{i64 2155383706, i64 2155383726, i64 2155383789}
!3291 = !DILocation(line: 70, column: 1, scope: !3268)
!3292 = !{i64 2155383935, i64 2155383955, i64 2155384018}
!3293 = !DILocation(line: 72, column: 1, scope: !3268)
!3294 = !{i64 2155384267, i64 2155384287, i64 2155384350}
!3295 = !DILocation(line: 73, column: 1, scope: !3268)
!3296 = !{i64 2155384717, i64 2155384737, i64 2155384800}
!3297 = !DILocation(line: 74, column: 1, scope: !3268)
!3298 = !{i64 2155385167, i64 2155385187, i64 2155385250}
!3299 = !DILocation(line: 75, column: 1, scope: !3268)
!3300 = !{i64 2155385617, i64 2155385637, i64 2155385700}
!3301 = !DILocation(line: 76, column: 1, scope: !3268)
!3302 = !{i64 2155386067, i64 2155386087, i64 2155386150}
!3303 = !DILocation(line: 77, column: 1, scope: !3268)
!3304 = !{i64 2155386517, i64 2155386537, i64 2155386600}
!3305 = !DILocation(line: 78, column: 1, scope: !3268)
!3306 = !{i64 2155386967, i64 2155386987, i64 2155387050}
!3307 = !DILocation(line: 79, column: 1, scope: !3268)
!3308 = !{i64 2155387417, i64 2155387437, i64 2155387500}
!3309 = !DILocation(line: 80, column: 1, scope: !3268)
!3310 = !{i64 2155387870, i64 2155387890, i64 2155387953}
!3311 = !DILocation(line: 84, column: 1, scope: !3268)
!3312 = !{i64 2155388202, i64 2155388222, i64 2155388285}
!3313 = !DILocation(line: 91, column: 1, scope: !3268)
!3314 = !{i64 2155388599, i64 2155388619, i64 2155388682}
!3315 = !DILocation(line: 93, column: 1, scope: !3268)
!3316 = !{i64 2155388966, i64 2155388986, i64 2155389049}
!3317 = !DILocation(line: 106, column: 1, scope: !3268)
!3318 = !{i64 2155389236, i64 2155389256, i64 2155389319}
!3319 = !DILocation(line: 11, column: 1, scope: !3320)
!3320 = !DILexicalBlockFile(scope: !3209, file: !3321, discriminator: 0)
!3321 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3322 = distinct !DISubprogram(name: "serial_cb", scope: !209, file: !209, line: 31, type: !204, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3323)
!3323 = !{!3324, !3325, !3326}
!3324 = !DILocalVariable(name: "dev", arg: 1, scope: !3322, file: !209, line: 31, type: !117)
!3325 = !DILocalVariable(name: "user_data", arg: 2, scope: !3322, file: !209, line: 31, type: !102)
!3326 = !DILocalVariable(name: "c", scope: !3322, file: !209, line: 33, type: !133)
!3327 = !DILocation(line: 0, scope: !3322)
!3328 = !DILocation(line: 33, column: 2, scope: !3322)
!3329 = !DILocation(line: 35, column: 7, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3322, file: !209, line: 35, column: 6)
!3331 = !DILocation(line: 35, column: 6, scope: !3322)
!3332 = !DILocation(line: 39, column: 9, scope: !3322)
!3333 = !DILocation(line: 39, column: 2, scope: !3322)
!3334 = !DILocation(line: 41, column: 3, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3322, file: !209, line: 39, column: 38)
!3336 = !DILocation(line: 43, column: 8, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3335, file: !209, line: 43, column: 7)
!3338 = !DILocation(line: 43, column: 10, scope: !3337)
!3339 = !DILocation(line: 43, column: 18, scope: !3337)
!3340 = !DILocation(line: 45, column: 4, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3337, file: !209, line: 43, column: 51)
!3342 = !DILocation(line: 45, column: 23, scope: !3341)
!3343 = !DILocation(line: 48, column: 4, scope: !3341)
!3344 = !DILocation(line: 51, column: 15, scope: !3341)
!3345 = !DILocation(line: 52, column: 3, scope: !3341)
!3346 = !DILocation(line: 52, column: 25, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3337, file: !209, line: 52, column: 14)
!3348 = !DILocation(line: 52, column: 14, scope: !3337)
!3349 = !DILocation(line: 53, column: 21, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3347, file: !209, line: 52, column: 49)
!3351 = !DILocation(line: 53, column: 4, scope: !3350)
!3352 = !DILocation(line: 53, column: 25, scope: !3350)
!3353 = !DILocation(line: 54, column: 3, scope: !3350)
!3354 = distinct !{!3354, !3333, !3355}
!3355 = !DILocation(line: 56, column: 2, scope: !3322)
!3356 = !DILocation(line: 57, column: 1, scope: !3322)
!3357 = distinct !DISubprogram(name: "uart_irq_update", scope: !3358, file: !3358, line: 360, type: !151, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3359)
!3358 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!3359 = !{!3360}
!3360 = !DILocalVariable(name: "dev", arg: 1, scope: !3357, file: !3358, line: 360, type: !117)
!3361 = !DILocation(line: 0, scope: !3357)
!3362 = !DILocation(line: 368, column: 2, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3357, file: !3358, line: 368, column: 2)
!3364 = !{i64 2155342776}
!3365 = !DILocation(line: 369, column: 9, scope: !3357)
!3366 = !DILocation(line: 369, column: 2, scope: !3357)
!3367 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !111, file: !111, line: 1024, type: !151, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3368)
!3368 = !{!3369, !3370}
!3369 = !DILocalVariable(name: "dev", arg: 1, scope: !3367, file: !111, line: 1024, type: !117)
!3370 = !DILocalVariable(name: "api", scope: !3367, file: !111, line: 1027, type: !108)
!3371 = !DILocation(line: 0, scope: !3367)
!3372 = !DILocation(line: 1028, column: 40, scope: !3367)
!3373 = !DILocation(line: 1030, column: 11, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3367, file: !111, line: 1030, column: 6)
!3375 = !DILocation(line: 1030, column: 24, scope: !3374)
!3376 = !DILocation(line: 1030, column: 6, scope: !3367)
!3377 = !DILocation(line: 1033, column: 9, scope: !3367)
!3378 = !DILocation(line: 1033, column: 2, scope: !3367)
!3379 = !DILocation(line: 1038, column: 1, scope: !3367)
!3380 = distinct !DISubprogram(name: "uart_fifo_read", scope: !111, file: !111, line: 785, type: !180, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3381)
!3381 = !{!3382, !3383, !3384, !3385}
!3382 = !DILocalVariable(name: "dev", arg: 1, scope: !3380, file: !111, line: 785, type: !117)
!3383 = !DILocalVariable(name: "rx_data", arg: 2, scope: !3380, file: !111, line: 785, type: !182)
!3384 = !DILocalVariable(name: "size", arg: 3, scope: !3380, file: !111, line: 786, type: !183)
!3385 = !DILocalVariable(name: "api", scope: !3380, file: !111, line: 789, type: !108)
!3386 = !DILocation(line: 0, scope: !3380)
!3387 = !DILocation(line: 790, column: 40, scope: !3380)
!3388 = !DILocation(line: 792, column: 11, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3380, file: !111, line: 792, column: 6)
!3390 = !DILocation(line: 792, column: 21, scope: !3389)
!3391 = !DILocation(line: 792, column: 6, scope: !3380)
!3392 = !DILocation(line: 796, column: 9, scope: !3380)
!3393 = !DILocation(line: 796, column: 2, scope: !3380)
!3394 = !DILocation(line: 803, column: 1, scope: !3380)
!3395 = distinct !DISubprogram(name: "k_msgq_put", scope: !3396, file: !3396, line: 1129, type: !3397, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3404)
!3396 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!3397 = !DISubroutineType(types: !3398)
!3398 = !{!107, !3399, !13, !3400}
!3399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 32)
!3400 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !3401)
!3401 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !3402)
!3402 = !{!3403}
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3401, file: !104, line: 66, baseType: !103, size: 64)
!3404 = !{!3405, !3406, !3407}
!3405 = !DILocalVariable(name: "msgq", arg: 1, scope: !3395, file: !3396, line: 1129, type: !3399)
!3406 = !DILocalVariable(name: "data", arg: 2, scope: !3395, file: !3396, line: 1129, type: !13)
!3407 = !DILocalVariable(name: "timeout", arg: 3, scope: !3395, file: !3396, line: 1129, type: !3400)
!3408 = !DILocation(line: 0, scope: !3395)
!3409 = !DILocation(line: 1139, column: 2, scope: !3410)
!3410 = distinct !DILexicalBlock(scope: !3395, file: !3396, line: 1139, column: 2)
!3411 = !{i64 2155062543}
!3412 = !DILocation(line: 1140, column: 9, scope: !3395)
!3413 = !DILocation(line: 1140, column: 2, scope: !3395)
!3414 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !111, file: !111, line: 1136, type: !151, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3415)
!3415 = !{!3416, !3417}
!3416 = !DILocalVariable(name: "dev", arg: 1, scope: !3414, file: !111, line: 1136, type: !117)
!3417 = !DILocalVariable(name: "api", scope: !3414, file: !111, line: 1139, type: !108)
!3418 = !DILocation(line: 0, scope: !3414)
!3419 = !DILocation(line: 1140, column: 40, scope: !3414)
!3420 = !DILocation(line: 1142, column: 11, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3414, file: !111, line: 1142, column: 6)
!3422 = !DILocation(line: 1142, column: 22, scope: !3421)
!3423 = !DILocation(line: 1142, column: 6, scope: !3414)
!3424 = !DILocation(line: 1145, column: 9, scope: !3414)
!3425 = !DILocation(line: 1145, column: 2, scope: !3414)
!3426 = !DILocation(line: 1150, column: 1, scope: !3414)
!3427 = distinct !DISubprogram(name: "print_uart", scope: !209, file: !209, line: 62, type: !3428, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3430)
!3428 = !DISubroutineType(types: !3429)
!3429 = !{null, !256}
!3430 = !{!3431, !3432, !3433}
!3431 = !DILocalVariable(name: "buf", arg: 1, scope: !3427, file: !209, line: 62, type: !256)
!3432 = !DILocalVariable(name: "msg_len", scope: !3427, file: !209, line: 64, type: !107)
!3433 = !DILocalVariable(name: "i", scope: !3434, file: !209, line: 66, type: !107)
!3434 = distinct !DILexicalBlock(scope: !3427, file: !209, line: 66, column: 2)
!3435 = !DILocation(line: 0, scope: !3427)
!3436 = !DILocation(line: 64, column: 16, scope: !3427)
!3437 = !DILocation(line: 0, scope: !3434)
!3438 = !DILocation(line: 66, column: 20, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3434, file: !209, line: 66, column: 2)
!3440 = !DILocation(line: 66, column: 2, scope: !3434)
!3441 = !DILocation(line: 69, column: 1, scope: !3427)
!3442 = !DILocation(line: 67, column: 27, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3439, file: !209, line: 66, column: 36)
!3444 = !DILocation(line: 67, column: 3, scope: !3443)
!3445 = !DILocation(line: 66, column: 32, scope: !3439)
!3446 = distinct !{!3446, !3440, !3447}
!3447 = !DILocation(line: 68, column: 2, scope: !3434)
!3448 = distinct !DISubprogram(name: "uart_poll_out", scope: !3358, file: !3358, line: 95, type: !147, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3449)
!3449 = !{!3450, !3451}
!3450 = !DILocalVariable(name: "dev", arg: 1, scope: !3448, file: !3358, line: 95, type: !117)
!3451 = !DILocalVariable(name: "out_char", arg: 2, scope: !3448, file: !3358, line: 95, type: !134)
!3452 = !DILocation(line: 0, scope: !3448)
!3453 = !DILocation(line: 105, column: 2, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3448, file: !3358, line: 105, column: 2)
!3455 = !{i64 2155342028}
!3456 = !DILocation(line: 106, column: 2, scope: !3448)
!3457 = !DILocation(line: 107, column: 1, scope: !3448)
!3458 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !111, file: !111, line: 574, type: !147, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3459)
!3459 = !{!3460, !3461, !3462}
!3460 = !DILocalVariable(name: "dev", arg: 1, scope: !3458, file: !111, line: 574, type: !117)
!3461 = !DILocalVariable(name: "out_char", arg: 2, scope: !3458, file: !111, line: 575, type: !134)
!3462 = !DILocalVariable(name: "api", scope: !3458, file: !111, line: 577, type: !108)
!3463 = !DILocation(line: 0, scope: !3458)
!3464 = !DILocation(line: 578, column: 40, scope: !3458)
!3465 = !DILocation(line: 580, column: 7, scope: !3458)
!3466 = !DILocation(line: 580, column: 2, scope: !3458)
!3467 = !DILocation(line: 581, column: 1, scope: !3458)
!3468 = distinct !DISubprogram(name: "main", scope: !209, file: !209, line: 71, type: !3211, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3469)
!3469 = !{!3470}
!3470 = !DILocalVariable(name: "tx_buf", scope: !3468, file: !209, line: 73, type: !218)
!3471 = !DILocation(line: 73, column: 2, scope: !3468)
!3472 = !DILocation(line: 73, column: 7, scope: !3468)
!3473 = !DILocation(line: 75, column: 7, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3468, file: !209, line: 75, column: 6)
!3475 = !DILocation(line: 75, column: 6, scope: !3468)
!3476 = !DILocation(line: 76, column: 3, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3474, file: !209, line: 75, column: 34)
!3478 = !DILocation(line: 77, column: 3, scope: !3477)
!3479 = !DILocation(line: 81, column: 2, scope: !3468)
!3480 = !DILocation(line: 82, column: 2, scope: !3468)
!3481 = !DILocation(line: 84, column: 2, scope: !3468)
!3482 = !DILocation(line: 85, column: 2, scope: !3468)
!3483 = !DILocation(line: 88, column: 9, scope: !3468)
!3484 = !DILocation(line: 88, column: 52, scope: !3468)
!3485 = !DILocation(line: 88, column: 2, scope: !3468)
!3486 = !DILocation(line: 89, column: 3, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3468, file: !209, line: 88, column: 58)
!3488 = !DILocation(line: 90, column: 3, scope: !3487)
!3489 = !DILocation(line: 91, column: 3, scope: !3487)
!3490 = distinct !{!3490, !3485, !3491}
!3491 = !DILocation(line: 92, column: 2, scope: !3468)
!3492 = !DILocation(line: 93, column: 1, scope: !3468)
!3493 = distinct !DISubprogram(name: "device_is_ready", scope: !3494, file: !3494, line: 47, type: !3495, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3497)
!3494 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!3495 = !DISubroutineType(types: !3496)
!3496 = !{!136, !117}
!3497 = !{!3498}
!3498 = !DILocalVariable(name: "dev", arg: 1, scope: !3493, file: !3494, line: 47, type: !117)
!3499 = !DILocation(line: 0, scope: !3493)
!3500 = !DILocation(line: 55, column: 2, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3493, file: !3494, line: 55, column: 2)
!3502 = !{i64 2155258783}
!3503 = !DILocation(line: 56, column: 9, scope: !3493)
!3504 = !DILocation(line: 56, column: 2, scope: !3493)
!3505 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !111, file: !111, line: 1163, type: !200, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3506)
!3506 = !{!3507, !3508, !3509, !3510}
!3507 = !DILocalVariable(name: "dev", arg: 1, scope: !3505, file: !111, line: 1163, type: !117)
!3508 = !DILocalVariable(name: "cb", arg: 2, scope: !3505, file: !111, line: 1164, type: !202)
!3509 = !DILocalVariable(name: "user_data", arg: 3, scope: !3505, file: !111, line: 1165, type: !102)
!3510 = !DILocalVariable(name: "api", scope: !3505, file: !111, line: 1168, type: !108)
!3511 = !DILocation(line: 0, scope: !3505)
!3512 = !DILocation(line: 1169, column: 40, scope: !3505)
!3513 = !DILocation(line: 1171, column: 11, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3505, file: !111, line: 1171, column: 6)
!3515 = !DILocation(line: 1171, column: 20, scope: !3514)
!3516 = !DILocation(line: 1171, column: 29, scope: !3514)
!3517 = !DILocation(line: 1171, column: 46, scope: !3514)
!3518 = !DILocation(line: 1171, column: 6, scope: !3505)
!3519 = !DILocation(line: 1172, column: 3, scope: !3520)
!3520 = distinct !DILexicalBlock(scope: !3514, file: !111, line: 1171, column: 56)
!3521 = !DILocation(line: 1173, column: 2, scope: !3520)
!3522 = !DILocation(line: 1179, column: 1, scope: !3505)
!3523 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !3358, file: !3358, line: 241, type: !186, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3524)
!3524 = !{!3525}
!3525 = !DILocalVariable(name: "dev", arg: 1, scope: !3523, file: !3358, line: 241, type: !117)
!3526 = !DILocation(line: 0, scope: !3523)
!3527 = !DILocation(line: 250, column: 2, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3523, file: !3358, line: 250, column: 2)
!3529 = !{i64 2155342436}
!3530 = !DILocation(line: 251, column: 2, scope: !3523)
!3531 = !DILocation(line: 252, column: 1, scope: !3523)
!3532 = distinct !DISubprogram(name: "k_msgq_get", scope: !3396, file: !3396, line: 1147, type: !3533, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3535)
!3533 = !DISubroutineType(types: !3534)
!3534 = !{!107, !3399, !102, !3400}
!3535 = !{!3536, !3537, !3538}
!3536 = !DILocalVariable(name: "msgq", arg: 1, scope: !3532, file: !3396, line: 1147, type: !3399)
!3537 = !DILocalVariable(name: "data", arg: 2, scope: !3532, file: !3396, line: 1147, type: !102)
!3538 = !DILocalVariable(name: "timeout", arg: 3, scope: !3532, file: !3396, line: 1147, type: !3400)
!3539 = !DILocation(line: 0, scope: !3532)
!3540 = !DILocation(line: 1157, column: 2, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3532, file: !3396, line: 1157, column: 2)
!3542 = !{i64 2155062611}
!3543 = !DILocation(line: 1158, column: 9, scope: !3532)
!3544 = !DILocation(line: 1158, column: 2, scope: !3532)
!3545 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !111, file: !111, line: 934, type: !186, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3546)
!3546 = !{!3547, !3548}
!3547 = !DILocalVariable(name: "dev", arg: 1, scope: !3545, file: !111, line: 934, type: !117)
!3548 = !DILocalVariable(name: "api", scope: !3545, file: !111, line: 937, type: !108)
!3549 = !DILocation(line: 0, scope: !3545)
!3550 = !DILocation(line: 938, column: 40, scope: !3545)
!3551 = !DILocation(line: 940, column: 11, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3545, file: !111, line: 940, column: 6)
!3553 = !DILocation(line: 940, column: 25, scope: !3552)
!3554 = !DILocation(line: 940, column: 6, scope: !3545)
!3555 = !DILocation(line: 941, column: 3, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3552, file: !111, line: 940, column: 34)
!3557 = !DILocation(line: 942, column: 2, scope: !3556)
!3558 = !DILocation(line: 946, column: 1, scope: !3545)
!3559 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !3495, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3560)
!3560 = !{!3561}
!3561 = !DILocalVariable(name: "dev", arg: 1, scope: !3559, file: !120, line: 730, type: !117)
!3562 = !DILocation(line: 0, scope: !3559)
!3563 = !DILocation(line: 732, column: 9, scope: !3559)
!3564 = !DILocation(line: 732, column: 2, scope: !3559)
!3565 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !268, file: !268, line: 45, type: !270, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3566)
!3566 = !{!3567}
!3567 = !DILocalVariable(name: "c", arg: 1, scope: !3565, file: !268, line: 45, type: !107)
!3568 = !DILocation(line: 0, scope: !3565)
!3569 = !DILocation(line: 50, column: 2, scope: !3565)
!3570 = distinct !DISubprogram(name: "__printk_hook_install", scope: !268, file: !268, line: 63, type: !3571, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3573)
!3571 = !DISubroutineType(types: !3572)
!3572 = !{null, !269}
!3573 = !{!3574}
!3574 = !DILocalVariable(name: "fn", arg: 1, scope: !3570, file: !268, line: 63, type: !269)
!3575 = !DILocation(line: 0, scope: !3570)
!3576 = !DILocation(line: 65, column: 12, scope: !3570)
!3577 = !DILocation(line: 66, column: 1, scope: !3570)
!3578 = distinct !DISubprogram(name: "__printk_get_hook", scope: !268, file: !268, line: 76, type: !3579, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !250)
!3579 = !DISubroutineType(types: !3580)
!3580 = !{!102}
!3581 = !DILocation(line: 78, column: 9, scope: !3578)
!3582 = !DILocation(line: 78, column: 2, scope: !3578)
!3583 = distinct !DISubprogram(name: "vprintk", scope: !268, file: !268, line: 113, type: !3584, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3593)
!3584 = !DISubroutineType(types: !3585)
!3585 = !{null, !123, !3586}
!3586 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3587, line: 99, baseType: !3588)
!3587 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3588 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3587, line: 40, baseType: !3589)
!3589 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !268, baseType: !3590)
!3590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3591)
!3591 = !{!3592}
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3590, file: !268, line: 79, baseType: !102, size: 32)
!3593 = !{!3594, !3595, !3596}
!3594 = !DILocalVariable(name: "fmt", arg: 1, scope: !3583, file: !268, line: 113, type: !123)
!3595 = !DILocalVariable(name: "ap", arg: 2, scope: !3583, file: !268, line: 113, type: !3586)
!3596 = !DILocalVariable(name: "ctx", scope: !3597, file: !268, line: 121, type: !3599)
!3597 = distinct !DILexicalBlock(scope: !3598, file: !268, line: 120, column: 27)
!3598 = distinct !DILexicalBlock(scope: !3583, file: !268, line: 120, column: 6)
!3599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !268, line: 81, size: 32, elements: !3600)
!3600 = !{!3601, !3602}
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3599, file: !268, line: 85, baseType: !32, size: 32)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3599, file: !268, line: 86, baseType: !3603, offset: 32)
!3603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, elements: !2544)
!3604 = !DILocation(line: 0, scope: !3583)
!3605 = !DILocation(line: 148, column: 3, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3598, file: !268, line: 138, column: 9)
!3607 = !DILocation(line: 155, column: 1, scope: !3583)
!3608 = distinct !DISubprogram(name: "char_out", scope: !268, file: !268, line: 107, type: !3609, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3611)
!3609 = !DISubroutineType(types: !3610)
!3610 = !{!107, !107, !102}
!3611 = !{!3612, !3613}
!3612 = !DILocalVariable(name: "c", arg: 1, scope: !3608, file: !268, line: 107, type: !107)
!3613 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3608, file: !268, line: 107, type: !102)
!3614 = !DILocation(line: 0, scope: !3608)
!3615 = !DILocation(line: 110, column: 9, scope: !3608)
!3616 = !DILocation(line: 110, column: 2, scope: !3608)
!3617 = distinct !DISubprogram(name: "cbvprintf", scope: !3618, file: !3618, line: 739, type: !3619, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3625)
!3618 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3619 = !DISubroutineType(types: !3620)
!3620 = !{!107, !3621, !102, !123, !3586}
!3621 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3618, line: 297, baseType: !3622)
!3622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3623, size: 32)
!3623 = !DISubroutineType(types: !3624)
!3624 = !{!107, null}
!3625 = !{!3626, !3627, !3628, !3629}
!3626 = !DILocalVariable(name: "out", arg: 1, scope: !3617, file: !3618, line: 739, type: !3621)
!3627 = !DILocalVariable(name: "ctx", arg: 2, scope: !3617, file: !3618, line: 739, type: !102)
!3628 = !DILocalVariable(name: "format", arg: 3, scope: !3617, file: !3618, line: 739, type: !123)
!3629 = !DILocalVariable(name: "ap", arg: 4, scope: !3617, file: !3618, line: 739, type: !3586)
!3630 = !DILocation(line: 0, scope: !3617)
!3631 = !DILocation(line: 741, column: 9, scope: !3617)
!3632 = !DILocation(line: 741, column: 2, scope: !3617)
!3633 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !268, file: !268, line: 157, type: !3634, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3636)
!3634 = !DISubroutineType(types: !3635)
!3635 = !{null, !256, !252}
!3636 = !{!3637, !3638, !3639}
!3637 = !DILocalVariable(name: "c", arg: 1, scope: !3633, file: !268, line: 157, type: !256)
!3638 = !DILocalVariable(name: "n", arg: 2, scope: !3633, file: !268, line: 157, type: !252)
!3639 = !DILocalVariable(name: "i", scope: !3633, file: !268, line: 159, type: !252)
!3640 = !DILocation(line: 0, scope: !3633)
!3641 = !DILocation(line: 164, column: 16, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3643, file: !268, line: 164, column: 2)
!3643 = distinct !DILexicalBlock(scope: !3633, file: !268, line: 164, column: 2)
!3644 = !DILocation(line: 164, column: 2, scope: !3643)
!3645 = !DILocation(line: 165, column: 3, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3642, file: !268, line: 164, column: 26)
!3647 = !DILocation(line: 165, column: 13, scope: !3646)
!3648 = !DILocation(line: 164, column: 22, scope: !3642)
!3649 = distinct !{!3649, !3644, !3650}
!3650 = !DILocation(line: 166, column: 2, scope: !3643)
!3651 = !DILocation(line: 171, column: 1, scope: !3633)
!3652 = distinct !DISubprogram(name: "printk", scope: !268, file: !268, line: 203, type: !3653, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3655)
!3653 = !DISubroutineType(types: !3654)
!3654 = !{null, !123, null}
!3655 = !{!3656, !3657}
!3656 = !DILocalVariable(name: "fmt", arg: 1, scope: !3652, file: !268, line: 203, type: !123)
!3657 = !DILocalVariable(name: "ap", scope: !3652, file: !268, line: 205, type: !3586)
!3658 = !DILocation(line: 0, scope: !3652)
!3659 = !DILocation(line: 205, column: 2, scope: !3652)
!3660 = !DILocation(line: 205, column: 10, scope: !3652)
!3661 = !DILocation(line: 207, column: 2, scope: !3652)
!3662 = !DILocation(line: 209, column: 2, scope: !3652)
!3663 = !DILocation(line: 211, column: 2, scope: !3652)
!3664 = !DILocation(line: 212, column: 1, scope: !3652)
!3665 = distinct !DISubprogram(name: "snprintk", scope: !268, file: !268, line: 239, type: !3666, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3668)
!3666 = !DISubroutineType(types: !3667)
!3667 = !{!107, !256, !252, !123, null}
!3668 = !{!3669, !3670, !3671, !3672, !3673}
!3669 = !DILocalVariable(name: "str", arg: 1, scope: !3665, file: !268, line: 239, type: !256)
!3670 = !DILocalVariable(name: "size", arg: 2, scope: !3665, file: !268, line: 239, type: !252)
!3671 = !DILocalVariable(name: "fmt", arg: 3, scope: !3665, file: !268, line: 239, type: !123)
!3672 = !DILocalVariable(name: "ap", scope: !3665, file: !268, line: 241, type: !3586)
!3673 = !DILocalVariable(name: "ret", scope: !3665, file: !268, line: 242, type: !107)
!3674 = !DILocation(line: 0, scope: !3665)
!3675 = !DILocation(line: 241, column: 2, scope: !3665)
!3676 = !DILocation(line: 241, column: 10, scope: !3665)
!3677 = !DILocation(line: 244, column: 2, scope: !3665)
!3678 = !DILocation(line: 245, column: 8, scope: !3665)
!3679 = !DILocation(line: 246, column: 2, scope: !3665)
!3680 = !DILocation(line: 249, column: 1, scope: !3665)
!3681 = !DILocation(line: 248, column: 2, scope: !3665)
!3682 = distinct !DISubprogram(name: "vsnprintk", scope: !268, file: !268, line: 251, type: !3683, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3685)
!3683 = !DISubroutineType(types: !3684)
!3684 = !{!107, !256, !252, !123, !3586}
!3685 = !{!3686, !3687, !3688, !3689, !3690}
!3686 = !DILocalVariable(name: "str", arg: 1, scope: !3682, file: !268, line: 251, type: !256)
!3687 = !DILocalVariable(name: "size", arg: 2, scope: !3682, file: !268, line: 251, type: !252)
!3688 = !DILocalVariable(name: "fmt", arg: 3, scope: !3682, file: !268, line: 251, type: !123)
!3689 = !DILocalVariable(name: "ap", arg: 4, scope: !3682, file: !268, line: 251, type: !3586)
!3690 = !DILocalVariable(name: "ctx", scope: !3682, file: !268, line: 253, type: !3691)
!3691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !268, line: 217, size: 96, elements: !3692)
!3692 = !{!3693, !3694, !3695}
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3691, file: !268, line: 218, baseType: !256, size: 32)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3691, file: !268, line: 219, baseType: !107, size: 32, offset: 32)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3691, file: !268, line: 220, baseType: !107, size: 32, offset: 64)
!3696 = !DILocation(line: 0, scope: !3682)
!3697 = !DILocation(line: 253, column: 2, scope: !3682)
!3698 = !DILocation(line: 253, column: 21, scope: !3682)
!3699 = !DILocation(line: 253, column: 27, scope: !3682)
!3700 = !DILocation(line: 255, column: 2, scope: !3682)
!3701 = !DILocation(line: 257, column: 10, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3682, file: !268, line: 257, column: 6)
!3703 = !DILocation(line: 257, column: 22, scope: !3702)
!3704 = !DILocation(line: 257, column: 16, scope: !3702)
!3705 = !DILocation(line: 257, column: 6, scope: !3682)
!3706 = !DILocation(line: 258, column: 3, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3702, file: !268, line: 257, column: 27)
!3708 = !DILocation(line: 258, column: 18, scope: !3707)
!3709 = !DILocation(line: 259, column: 2, scope: !3707)
!3710 = !DILocation(line: 262, column: 1, scope: !3682)
!3711 = !DILocation(line: 261, column: 2, scope: !3682)
!3712 = distinct !DISubprogram(name: "str_out", scope: !268, file: !268, line: 223, type: !3713, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3716)
!3713 = !DISubroutineType(types: !3714)
!3714 = !{!107, !107, !3715}
!3715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 32)
!3716 = !{!3717, !3718}
!3717 = !DILocalVariable(name: "c", arg: 1, scope: !3712, file: !268, line: 223, type: !107)
!3718 = !DILocalVariable(name: "ctx", arg: 2, scope: !3712, file: !268, line: 223, type: !3715)
!3719 = !DILocation(line: 0, scope: !3712)
!3720 = !DILocation(line: 225, column: 11, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3712, file: !268, line: 225, column: 6)
!3722 = !DILocation(line: 225, column: 15, scope: !3721)
!3723 = !DILocation(line: 0, scope: !3721)
!3724 = !DILocation(line: 225, column: 23, scope: !3721)
!3725 = !DILocation(line: 225, column: 45, scope: !3721)
!3726 = !DILocation(line: 225, column: 37, scope: !3721)
!3727 = !DILocation(line: 225, column: 6, scope: !3712)
!3728 = !DILocation(line: 226, column: 8, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3721, file: !268, line: 225, column: 50)
!3730 = !DILocation(line: 226, column: 13, scope: !3729)
!3731 = !DILocation(line: 227, column: 3, scope: !3729)
!3732 = !DILocation(line: 230, column: 29, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3712, file: !268, line: 230, column: 6)
!3734 = !DILocation(line: 230, column: 17, scope: !3733)
!3735 = !DILocation(line: 230, column: 6, scope: !3712)
!3736 = !DILocation(line: 231, column: 22, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3733, file: !268, line: 230, column: 34)
!3738 = !DILocation(line: 231, column: 3, scope: !3737)
!3739 = !DILocation(line: 231, column: 26, scope: !3737)
!3740 = !DILocation(line: 232, column: 2, scope: !3737)
!3741 = !DILocation(line: 233, column: 28, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3733, file: !268, line: 232, column: 9)
!3743 = !DILocation(line: 233, column: 22, scope: !3742)
!3744 = !DILocation(line: 233, column: 3, scope: !3742)
!3745 = !DILocation(line: 233, column: 26, scope: !3742)
!3746 = !DILocation(line: 237, column: 1, scope: !3712)
!3747 = distinct !DISubprogram(name: "z_thread_entry", scope: !3748, file: !3748, line: 30, type: !3749, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !3756)
!3748 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3749 = !DISubroutineType(types: !3750)
!3750 = !{null, !3751, !102, !102, !102}
!3751 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3752, line: 46, baseType: !3753)
!3752 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3754, size: 32)
!3754 = !DISubroutineType(types: !3755)
!3755 = !{null, !102, !102, !102}
!3756 = !{!3757, !3758, !3759, !3760}
!3757 = !DILocalVariable(name: "entry", arg: 1, scope: !3747, file: !3748, line: 30, type: !3751)
!3758 = !DILocalVariable(name: "p1", arg: 2, scope: !3747, file: !3748, line: 31, type: !102)
!3759 = !DILocalVariable(name: "p2", arg: 3, scope: !3747, file: !3748, line: 31, type: !102)
!3760 = !DILocalVariable(name: "p3", arg: 4, scope: !3747, file: !3748, line: 31, type: !102)
!3761 = !DILocation(line: 0, scope: !3747)
!3762 = !DILocation(line: 36, column: 2, scope: !3747)
!3763 = !DILocation(line: 38, column: 17, scope: !3747)
!3764 = !DILocation(line: 38, column: 2, scope: !3747)
!3765 = !DILocation(line: 45, column: 2, scope: !3747)
!3766 = distinct !DISubprogram(name: "k_current_get", scope: !224, file: !224, line: 530, type: !3767, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !250)
!3767 = !DISubroutineType(types: !3768)
!3768 = !{!3769}
!3769 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !3770)
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 32)
!3771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !3772)
!3772 = !{!3773, !3831, !3843, !3844, !3845, !3846, !3852, !3865}
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3771, file: !359, line: 247, baseType: !3774, size: 384)
!3774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !3775)
!3775 = !{!3776, !3800, !3807, !3808, !3809, !3818, !3819, !3820}
!3776 = !DIDerivedType(tag: DW_TAG_member, scope: !3774, file: !359, line: 60, baseType: !3777, size: 64)
!3777 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3774, file: !359, line: 60, size: 64, elements: !3778)
!3778 = !{!3779, !3794}
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3777, file: !359, line: 61, baseType: !3780, size: 64)
!3780 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !3781)
!3781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !3782)
!3782 = !{!3783, !3789}
!3783 = !DIDerivedType(tag: DW_TAG_member, scope: !3781, file: !233, line: 38, baseType: !3784, size: 32)
!3784 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3781, file: !233, line: 38, size: 32, elements: !3785)
!3785 = !{!3786, !3788}
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3784, file: !233, line: 39, baseType: !3787, size: 32)
!3787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 32)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3784, file: !233, line: 40, baseType: !3787, size: 32)
!3789 = !DIDerivedType(tag: DW_TAG_member, scope: !3781, file: !233, line: 42, baseType: !3790, size: 32, offset: 32)
!3790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3781, file: !233, line: 42, size: 32, elements: !3791)
!3791 = !{!3792, !3793}
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3790, file: !233, line: 43, baseType: !3787, size: 32)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3790, file: !233, line: 44, baseType: !3787, size: 32)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3777, file: !359, line: 62, baseType: !3795, size: 64)
!3795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !3796)
!3796 = !{!3797}
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3795, file: !384, line: 50, baseType: !3798, size: 64)
!3798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3799, size: 64, elements: !389)
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3795, size: 32)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3774, file: !359, line: 68, baseType: !3801, size: 32, offset: 64)
!3801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3802, size: 32)
!3802 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !3803)
!3803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !3804)
!3804 = !{!3805}
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3803, file: !228, line: 232, baseType: !3806, size: 64)
!3806 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !3781)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3774, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3774, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!3809 = !DIDerivedType(tag: DW_TAG_member, scope: !3774, file: !359, line: 90, baseType: !3810, size: 16, offset: 112)
!3810 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3774, file: !359, line: 90, size: 16, elements: !3811)
!3811 = !{!3812, !3817}
!3812 = !DIDerivedType(tag: DW_TAG_member, scope: !3810, file: !359, line: 91, baseType: !3813, size: 16)
!3813 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3810, file: !359, line: 91, size: 16, elements: !3814)
!3814 = !{!3815, !3816}
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3813, file: !359, line: 96, baseType: !407, size: 8)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3813, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3810, file: !359, line: 100, baseType: !411, size: 16)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3774, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3774, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3774, file: !359, line: 131, baseType: !3821, size: 192, offset: 192)
!3821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !3822)
!3822 = !{!3823, !3824, !3830}
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3821, file: !228, line: 245, baseType: !3780, size: 64)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3821, file: !228, line: 246, baseType: !3825, size: 32, offset: 64)
!3825 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !3826)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 32)
!3827 = !DISubroutineType(types: !3828)
!3828 = !{null, !3829}
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3821, size: 32)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3821, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3771, file: !359, line: 250, baseType: !3832, size: 288, offset: 384)
!3832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !3833)
!3833 = !{!3834, !3835, !3836, !3837, !3838, !3839, !3840, !3841, !3842}
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3832, file: !428, line: 26, baseType: !162, size: 32)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3832, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3832, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3832, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3832, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3832, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3832, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3832, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3832, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3771, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3771, file: !359, line: 256, baseType: !3802, size: 64, offset: 704)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3771, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3771, file: !359, line: 300, baseType: !3847, size: 96, offset: 800)
!3847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !3848)
!3848 = !{!3849, !3850, !3851}
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3847, file: !359, line: 153, baseType: !22, size: 32)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3847, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3847, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3771, file: !359, line: 325, baseType: !3853, size: 32, offset: 896)
!3853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3854, size: 32)
!3854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !3855)
!3855 = !{!3856, !3862, !3863}
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3854, file: !224, line: 5074, baseType: !3857, size: 96)
!3857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !3858)
!3858 = !{!3859, !3860, !3861}
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3857, file: !454, line: 57, baseType: !457, size: 32)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3857, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3857, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3854, file: !224, line: 5075, baseType: !3802, size: 64, offset: 96)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3854, file: !224, line: 5076, baseType: !3864, offset: 160)
!3864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3771, file: !359, line: 343, baseType: !3866, size: 64, offset: 928)
!3866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !3867)
!3867 = !{!3868, !3869}
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3866, file: !428, line: 63, baseType: !162, size: 32)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3866, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!3870 = !DILocation(line: 535, column: 9, scope: !3766)
!3871 = !DILocation(line: 535, column: 2, scope: !3766)
!3872 = distinct !DISubprogram(name: "k_thread_abort", scope: !3396, file: !3396, line: 188, type: !3873, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !3875)
!3873 = !DISubroutineType(types: !3874)
!3874 = !{null, !3769}
!3875 = !{!3876}
!3876 = !DILocalVariable(name: "thread", arg: 1, scope: !3872, file: !3396, line: 188, type: !3769)
!3877 = !DILocation(line: 0, scope: !3872)
!3878 = !DILocation(line: 197, column: 2, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3872, file: !3396, line: 197, column: 2)
!3880 = !{i64 2155057735}
!3881 = !DILocation(line: 198, column: 2, scope: !3872)
!3882 = !DILocation(line: 199, column: 1, scope: !3872)
!3883 = distinct !DISubprogram(name: "z_current_get", scope: !3396, file: !3396, line: 173, type: !3767, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2512, retainedNodes: !250)
!3884 = !DILocation(line: 180, column: 2, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3883, file: !3396, line: 180, column: 2)
!3886 = !{i64 2155057667}
!3887 = !DILocation(line: 181, column: 9, scope: !3883)
!3888 = !DILocation(line: 181, column: 2, scope: !3883)
!3889 = distinct !DISubprogram(name: "sys_heap_free", scope: !3890, file: !3890, line: 163, type: !3891, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !3899)
!3890 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3891 = !DISubroutineType(types: !3892)
!3892 = !{null, !3893, !102}
!3893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3894, size: 32)
!3894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !3895)
!3895 = !{!3896, !3897, !3898}
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3894, file: !454, line: 57, baseType: !2531, size: 32)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3894, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3894, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!3899 = !{!3900, !3901, !3902, !3903}
!3900 = !DILocalVariable(name: "heap", arg: 1, scope: !3889, file: !3890, line: 163, type: !3893)
!3901 = !DILocalVariable(name: "mem", arg: 2, scope: !3889, file: !3890, line: 163, type: !102)
!3902 = !DILocalVariable(name: "h", scope: !3889, file: !3890, line: 168, type: !2531)
!3903 = !DILocalVariable(name: "c", scope: !3889, file: !3890, line: 169, type: !2536)
!3904 = !DILocation(line: 0, scope: !3889)
!3905 = !DILocation(line: 165, column: 10, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3889, file: !3890, line: 165, column: 6)
!3907 = !DILocation(line: 165, column: 6, scope: !3889)
!3908 = !DILocation(line: 168, column: 27, scope: !3889)
!3909 = !DILocation(line: 169, column: 16, scope: !3889)
!3910 = !{i32 0, i32 536870912}
!3911 = !DILocation(line: 187, column: 2, scope: !3889)
!3912 = !DILocation(line: 197, column: 2, scope: !3889)
!3913 = !DILocation(line: 198, column: 1, scope: !3889)
!3914 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3890, file: !3890, line: 157, type: !3915, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !3917)
!3915 = !DISubroutineType(types: !3916)
!3916 = !{!2536, !2531, !102}
!3917 = !{!3918, !3919, !3920, !3921}
!3918 = !DILocalVariable(name: "h", arg: 1, scope: !3914, file: !3890, line: 157, type: !2531)
!3919 = !DILocalVariable(name: "p", arg: 2, scope: !3914, file: !3890, line: 157, type: !102)
!3920 = !DILocalVariable(name: "mem", scope: !3914, file: !3890, line: 159, type: !182)
!3921 = !DILocalVariable(name: "base", scope: !3914, file: !3890, line: 159, type: !182)
!3922 = !DILocation(line: 0, scope: !3914)
!3923 = !DILocation(line: 159, column: 39, scope: !3914)
!3924 = !DILocation(line: 160, column: 14, scope: !3914)
!3925 = !DILocation(line: 160, column: 38, scope: !3914)
!3926 = !DILocation(line: 160, column: 46, scope: !3914)
!3927 = !DILocation(line: 160, column: 2, scope: !3914)
!3928 = distinct !DISubprogram(name: "set_chunk_used", scope: !2518, file: !2518, line: 147, type: !3929, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !3931)
!3929 = !DISubroutineType(types: !3930)
!3930 = !{null, !2531, !2536, !136}
!3931 = !{!3932, !3933, !3934, !3935, !3936}
!3932 = !DILocalVariable(name: "h", arg: 1, scope: !3928, file: !2518, line: 147, type: !2531)
!3933 = !DILocalVariable(name: "c", arg: 2, scope: !3928, file: !2518, line: 147, type: !2536)
!3934 = !DILocalVariable(name: "used", arg: 3, scope: !3928, file: !2518, line: 147, type: !136)
!3935 = !DILocalVariable(name: "buf", scope: !3928, file: !2518, line: 149, type: !2525)
!3936 = !DILocalVariable(name: "cmem", scope: !3928, file: !2518, line: 150, type: !102)
!3937 = !DILocation(line: 0, scope: !3928)
!3938 = !DILocation(line: 149, column: 22, scope: !3928)
!3939 = !DILocation(line: 0, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !2518, line: 159, column: 7)
!3941 = distinct !DILexicalBlock(scope: !3942, file: !2518, line: 158, column: 9)
!3942 = distinct !DILexicalBlock(scope: !3928, file: !2518, line: 152, column: 6)
!3943 = !DILocation(line: 159, column: 7, scope: !3941)
!3944 = !DILocation(line: 165, column: 1, scope: !3928)
!3945 = distinct !DISubprogram(name: "free_chunk", scope: !3890, file: !3890, line: 133, type: !3946, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !3948)
!3946 = !DISubroutineType(types: !3947)
!3947 = !{null, !2531, !2536}
!3948 = !{!3949, !3950}
!3949 = !DILocalVariable(name: "h", arg: 1, scope: !3945, file: !3890, line: 133, type: !2531)
!3950 = !DILocalVariable(name: "c", arg: 2, scope: !3945, file: !3890, line: 133, type: !2536)
!3951 = !DILocation(line: 0, scope: !3945)
!3952 = !DILocation(line: 136, column: 21, scope: !3953)
!3953 = distinct !DILexicalBlock(scope: !3945, file: !3890, line: 136, column: 6)
!3954 = !DILocation(line: 136, column: 7, scope: !3953)
!3955 = !DILocation(line: 136, column: 6, scope: !3945)
!3956 = !DILocation(line: 137, column: 3, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3953, file: !3890, line: 136, column: 41)
!3958 = !DILocation(line: 138, column: 22, scope: !3957)
!3959 = !DILocation(line: 138, column: 3, scope: !3957)
!3960 = !DILocation(line: 139, column: 2, scope: !3957)
!3961 = !DILocation(line: 142, column: 21, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3945, file: !3890, line: 142, column: 6)
!3963 = !{i32 -65535, i32 536903678}
!3964 = !DILocation(line: 142, column: 7, scope: !3962)
!3965 = !DILocation(line: 142, column: 6, scope: !3945)
!3966 = !DILocation(line: 143, column: 3, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3962, file: !3890, line: 142, column: 40)
!3968 = !DILocation(line: 144, column: 19, scope: !3967)
!3969 = !DILocation(line: 144, column: 3, scope: !3967)
!3970 = !DILocation(line: 145, column: 7, scope: !3967)
!3971 = !DILocation(line: 146, column: 2, scope: !3967)
!3972 = !DILocation(line: 148, column: 2, scope: !3945)
!3973 = !DILocation(line: 149, column: 1, scope: !3945)
!3974 = distinct !DISubprogram(name: "right_chunk", scope: !2518, file: !2518, line: 204, type: !3975, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !3977)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{!2536, !2531, !2536}
!3977 = !{!3978, !3979}
!3978 = !DILocalVariable(name: "h", arg: 1, scope: !3974, file: !2518, line: 204, type: !2531)
!3979 = !DILocalVariable(name: "c", arg: 2, scope: !3974, file: !2518, line: 204, type: !2536)
!3980 = !DILocation(line: 0, scope: !3974)
!3981 = !DILocation(line: 206, column: 13, scope: !3974)
!3982 = !DILocation(line: 206, column: 11, scope: !3974)
!3983 = !DILocation(line: 206, column: 2, scope: !3974)
!3984 = distinct !DISubprogram(name: "chunk_used", scope: !2518, file: !2518, line: 137, type: !3985, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !3987)
!3985 = !DISubroutineType(types: !3986)
!3986 = !{!136, !2531, !2536}
!3987 = !{!3988, !3989}
!3988 = !DILocalVariable(name: "h", arg: 1, scope: !3984, file: !2518, line: 137, type: !2531)
!3989 = !DILocalVariable(name: "c", arg: 2, scope: !3984, file: !2518, line: 137, type: !2536)
!3990 = !DILocation(line: 0, scope: !3984)
!3991 = !DILocation(line: 139, column: 9, scope: !3984)
!3992 = !DILocation(line: 139, column: 42, scope: !3984)
!3993 = !DILocation(line: 139, column: 2, scope: !3984)
!3994 = distinct !DISubprogram(name: "free_list_remove", scope: !3890, file: !3890, line: 60, type: !3946, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !3995)
!3995 = !{!3996, !3997, !3998}
!3996 = !DILocalVariable(name: "h", arg: 1, scope: !3994, file: !3890, line: 60, type: !2531)
!3997 = !DILocalVariable(name: "c", arg: 2, scope: !3994, file: !3890, line: 60, type: !2536)
!3998 = !DILocalVariable(name: "bidx", scope: !3999, file: !3890, line: 63, type: !107)
!3999 = distinct !DILexicalBlock(scope: !4000, file: !3890, line: 62, column: 31)
!4000 = distinct !DILexicalBlock(scope: !3994, file: !3890, line: 62, column: 6)
!4001 = !DILocation(line: 0, scope: !3994)
!4002 = !DILocation(line: 63, column: 28, scope: !3999)
!4003 = !{i32 0, i32 32768}
!4004 = !DILocation(line: 63, column: 14, scope: !3999)
!4005 = !DILocation(line: 0, scope: !3999)
!4006 = !DILocation(line: 64, column: 3, scope: !3999)
!4007 = !DILocation(line: 66, column: 1, scope: !3994)
!4008 = distinct !DISubprogram(name: "merge_chunks", scope: !3890, file: !3890, line: 125, type: !4009, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4011)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{null, !2531, !2536, !2536}
!4011 = !{!4012, !4013, !4014, !4015}
!4012 = !DILocalVariable(name: "h", arg: 1, scope: !4008, file: !3890, line: 125, type: !2531)
!4013 = !DILocalVariable(name: "lc", arg: 2, scope: !4008, file: !3890, line: 125, type: !2536)
!4014 = !DILocalVariable(name: "rc", arg: 3, scope: !4008, file: !3890, line: 125, type: !2536)
!4015 = !DILocalVariable(name: "newsz", scope: !4008, file: !3890, line: 127, type: !4016)
!4016 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2518, line: 62, baseType: !162)
!4017 = !DILocation(line: 0, scope: !4008)
!4018 = !DILocation(line: 127, column: 20, scope: !4008)
!4019 = !DILocation(line: 127, column: 40, scope: !4008)
!4020 = !DILocation(line: 127, column: 38, scope: !4008)
!4021 = !DILocation(line: 129, column: 2, scope: !4008)
!4022 = !DILocation(line: 130, column: 25, scope: !4008)
!4023 = !DILocation(line: 130, column: 2, scope: !4008)
!4024 = !DILocation(line: 131, column: 1, scope: !4008)
!4025 = distinct !DISubprogram(name: "left_chunk", scope: !2518, file: !2518, line: 199, type: !3975, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4026)
!4026 = !{!4027, !4028}
!4027 = !DILocalVariable(name: "h", arg: 1, scope: !4025, file: !2518, line: 199, type: !2531)
!4028 = !DILocalVariable(name: "c", arg: 2, scope: !4025, file: !2518, line: 199, type: !2536)
!4029 = !DILocation(line: 0, scope: !4025)
!4030 = !DILocation(line: 201, column: 13, scope: !4025)
!4031 = !DILocation(line: 201, column: 11, scope: !4025)
!4032 = !DILocation(line: 201, column: 2, scope: !4025)
!4033 = distinct !DISubprogram(name: "free_list_add", scope: !3890, file: !3890, line: 98, type: !3946, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4034)
!4034 = !{!4035, !4036, !4037}
!4035 = !DILocalVariable(name: "h", arg: 1, scope: !4033, file: !3890, line: 98, type: !2531)
!4036 = !DILocalVariable(name: "c", arg: 2, scope: !4033, file: !3890, line: 98, type: !2536)
!4037 = !DILocalVariable(name: "bidx", scope: !4038, file: !3890, line: 101, type: !107)
!4038 = distinct !DILexicalBlock(scope: !4039, file: !3890, line: 100, column: 31)
!4039 = distinct !DILexicalBlock(scope: !4033, file: !3890, line: 100, column: 6)
!4040 = !DILocation(line: 0, scope: !4033)
!4041 = !DILocation(line: 101, column: 28, scope: !4038)
!4042 = !DILocation(line: 101, column: 14, scope: !4038)
!4043 = !DILocation(line: 0, scope: !4038)
!4044 = !DILocation(line: 102, column: 3, scope: !4038)
!4045 = !DILocation(line: 104, column: 1, scope: !4033)
!4046 = distinct !DISubprogram(name: "chunk_size", scope: !2518, file: !2518, line: 142, type: !4047, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4049)
!4047 = !DISubroutineType(types: !4048)
!4048 = !{!4016, !2531, !2536}
!4049 = !{!4050, !4051}
!4050 = !DILocalVariable(name: "h", arg: 1, scope: !4046, file: !2518, line: 142, type: !2531)
!4051 = !DILocalVariable(name: "c", arg: 2, scope: !4046, file: !2518, line: 142, type: !2536)
!4052 = !DILocation(line: 0, scope: !4046)
!4053 = !DILocation(line: 144, column: 9, scope: !4046)
!4054 = !DILocation(line: 144, column: 42, scope: !4046)
!4055 = !DILocation(line: 144, column: 2, scope: !4046)
!4056 = distinct !DISubprogram(name: "bucket_idx", scope: !2518, file: !2518, line: 250, type: !4057, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4059)
!4057 = !DISubroutineType(types: !4058)
!4058 = !{!107, !2531, !4016}
!4059 = !{!4060, !4061, !4062}
!4060 = !DILocalVariable(name: "h", arg: 1, scope: !4056, file: !2518, line: 250, type: !2531)
!4061 = !DILocalVariable(name: "sz", arg: 2, scope: !4056, file: !2518, line: 250, type: !4016)
!4062 = !DILocalVariable(name: "usable_sz", scope: !4056, file: !2518, line: 252, type: !32)
!4063 = !DILocation(line: 0, scope: !4056)
!4064 = !DILocation(line: 252, column: 32, scope: !4056)
!4065 = !DILocation(line: 252, column: 30, scope: !4056)
!4066 = !DILocation(line: 252, column: 50, scope: !4056)
!4067 = !DILocation(line: 253, column: 14, scope: !4056)
!4068 = !{i32 0, i32 33}
!4069 = !DILocation(line: 253, column: 12, scope: !4056)
!4070 = !DILocation(line: 253, column: 2, scope: !4056)
!4071 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3890, file: !3890, line: 68, type: !4072, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4074)
!4072 = !DISubroutineType(types: !4073)
!4073 = !{null, !2531, !2536, !107}
!4074 = !{!4075, !4076, !4077, !4078, !4080, !4083}
!4075 = !DILocalVariable(name: "h", arg: 1, scope: !4071, file: !3890, line: 68, type: !2531)
!4076 = !DILocalVariable(name: "c", arg: 2, scope: !4071, file: !3890, line: 68, type: !2536)
!4077 = !DILocalVariable(name: "bidx", arg: 3, scope: !4071, file: !3890, line: 68, type: !107)
!4078 = !DILocalVariable(name: "b", scope: !4071, file: !3890, line: 70, type: !4079)
!4079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 32)
!4080 = !DILocalVariable(name: "second", scope: !4081, file: !3890, line: 84, type: !2536)
!4081 = distinct !DILexicalBlock(scope: !4082, file: !3890, line: 80, column: 9)
!4082 = distinct !DILexicalBlock(scope: !4071, file: !3890, line: 72, column: 6)
!4083 = !DILocalVariable(name: "first", scope: !4081, file: !3890, line: 85, type: !2536)
!4084 = !DILocation(line: 0, scope: !4071)
!4085 = !DILocation(line: 72, column: 9, scope: !4082)
!4086 = !DILocation(line: 72, column: 14, scope: !4082)
!4087 = !DILocation(line: 72, column: 6, scope: !4071)
!4088 = !DILocation(line: 76, column: 23, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4082, file: !3890, line: 72, column: 21)
!4090 = !DILocation(line: 76, column: 6, scope: !4089)
!4091 = !DILocation(line: 76, column: 20, scope: !4089)
!4092 = !DILocation(line: 77, column: 11, scope: !4089)
!4093 = !DILocation(line: 78, column: 3, scope: !4089)
!4094 = !DILocation(line: 79, column: 3, scope: !4089)
!4095 = !DILocation(line: 80, column: 2, scope: !4089)
!4096 = !DILocation(line: 0, scope: !4081)
!4097 = !DILocation(line: 85, column: 21, scope: !4081)
!4098 = !{i32 0, i32 65536}
!4099 = !DILocation(line: 87, column: 3, scope: !4081)
!4100 = !DILocation(line: 88, column: 3, scope: !4081)
!4101 = !DILocation(line: 89, column: 3, scope: !4081)
!4102 = !DILocation(line: 90, column: 3, scope: !4081)
!4103 = !DILocation(line: 96, column: 1, scope: !4071)
!4104 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2518, file: !2518, line: 187, type: !4009, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4105)
!4105 = !{!4106, !4107, !4108}
!4106 = !DILocalVariable(name: "h", arg: 1, scope: !4104, file: !2518, line: 187, type: !2531)
!4107 = !DILocalVariable(name: "c", arg: 2, scope: !4104, file: !2518, line: 187, type: !2536)
!4108 = !DILocalVariable(name: "prev", arg: 3, scope: !4104, file: !2518, line: 188, type: !2536)
!4109 = !DILocation(line: 0, scope: !4104)
!4110 = !DILocation(line: 190, column: 2, scope: !4104)
!4111 = !DILocation(line: 191, column: 1, scope: !4104)
!4112 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2518, file: !2518, line: 193, type: !4009, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4113)
!4113 = !{!4114, !4115, !4116}
!4114 = !DILocalVariable(name: "h", arg: 1, scope: !4112, file: !2518, line: 193, type: !2531)
!4115 = !DILocalVariable(name: "c", arg: 2, scope: !4112, file: !2518, line: 193, type: !2536)
!4116 = !DILocalVariable(name: "next", arg: 3, scope: !4112, file: !2518, line: 194, type: !2536)
!4117 = !DILocation(line: 0, scope: !4112)
!4118 = !DILocation(line: 196, column: 2, scope: !4112)
!4119 = !DILocation(line: 197, column: 1, scope: !4112)
!4120 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2518, file: !2518, line: 177, type: !3975, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4121)
!4121 = !{!4122, !4123}
!4122 = !DILocalVariable(name: "h", arg: 1, scope: !4120, file: !2518, line: 177, type: !2531)
!4123 = !DILocalVariable(name: "c", arg: 2, scope: !4120, file: !2518, line: 177, type: !2536)
!4124 = !DILocation(line: 0, scope: !4120)
!4125 = !DILocation(line: 179, column: 9, scope: !4120)
!4126 = !DILocation(line: 179, column: 2, scope: !4120)
!4127 = distinct !DISubprogram(name: "chunk_field", scope: !2518, file: !2518, line: 107, type: !4128, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4130)
!4128 = !DISubroutineType(types: !4129)
!4129 = !{!2536, !2531, !2536, !2517}
!4130 = !{!4131, !4132, !4133, !4134, !4135}
!4131 = !DILocalVariable(name: "h", arg: 1, scope: !4127, file: !2518, line: 107, type: !2531)
!4132 = !DILocalVariable(name: "c", arg: 2, scope: !4127, file: !2518, line: 107, type: !2536)
!4133 = !DILocalVariable(name: "f", arg: 3, scope: !4127, file: !2518, line: 108, type: !2517)
!4134 = !DILocalVariable(name: "buf", scope: !4127, file: !2518, line: 110, type: !2525)
!4135 = !DILocalVariable(name: "cmem", scope: !4127, file: !2518, line: 111, type: !102)
!4136 = !DILocation(line: 0, scope: !4127)
!4137 = !DILocation(line: 110, column: 22, scope: !4127)
!4138 = !DILocation(line: 111, column: 15, scope: !4127)
!4139 = !DILocation(line: 116, column: 11, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4141, file: !2518, line: 115, column: 9)
!4141 = distinct !DILexicalBlock(scope: !4127, file: !2518, line: 113, column: 6)
!4142 = !DILocation(line: 116, column: 10, scope: !4140)
!4143 = !DILocation(line: 118, column: 1, scope: !4127)
!4144 = distinct !DISubprogram(name: "chunk_buf", scope: !2518, file: !2518, line: 101, type: !4145, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4147)
!4145 = !DISubroutineType(types: !4146)
!4146 = !{!2525, !2531}
!4147 = !{!4148}
!4148 = !DILocalVariable(name: "h", arg: 1, scope: !4144, file: !2518, line: 101, type: !2531)
!4149 = !DILocation(line: 0, scope: !4144)
!4150 = !DILocation(line: 104, column: 9, scope: !4144)
!4151 = !DILocation(line: 104, column: 2, scope: !4144)
!4152 = distinct !DISubprogram(name: "chunk_set", scope: !2518, file: !2518, line: 120, type: !4153, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4155)
!4153 = !DISubroutineType(types: !4154)
!4154 = !{null, !2531, !2536, !2517, !2536}
!4155 = !{!4156, !4157, !4158, !4159, !4160, !4161}
!4156 = !DILocalVariable(name: "h", arg: 1, scope: !4152, file: !2518, line: 120, type: !2531)
!4157 = !DILocalVariable(name: "c", arg: 2, scope: !4152, file: !2518, line: 120, type: !2536)
!4158 = !DILocalVariable(name: "f", arg: 3, scope: !4152, file: !2518, line: 121, type: !2517)
!4159 = !DILocalVariable(name: "val", arg: 4, scope: !4152, file: !2518, line: 121, type: !2536)
!4160 = !DILocalVariable(name: "buf", scope: !4152, file: !2518, line: 125, type: !2525)
!4161 = !DILocalVariable(name: "cmem", scope: !4152, file: !2518, line: 126, type: !102)
!4162 = !DILocation(line: 0, scope: !4152)
!4163 = !DILocation(line: 125, column: 22, scope: !4152)
!4164 = !DILocation(line: 126, column: 15, scope: !4152)
!4165 = !DILocation(line: 133, column: 27, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4167, file: !2518, line: 131, column: 9)
!4167 = distinct !DILexicalBlock(scope: !4152, file: !2518, line: 128, column: 6)
!4168 = !DILocation(line: 133, column: 4, scope: !4166)
!4169 = !DILocation(line: 133, column: 3, scope: !4166)
!4170 = !DILocation(line: 133, column: 25, scope: !4166)
!4171 = !DILocation(line: 135, column: 1, scope: !4152)
!4172 = distinct !DISubprogram(name: "min_chunk_size", scope: !2518, file: !2518, line: 240, type: !4173, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4175)
!4173 = !DISubroutineType(types: !4174)
!4174 = !{!4016, !2531}
!4175 = !{!4176}
!4176 = !DILocalVariable(name: "h", arg: 1, scope: !4172, file: !2518, line: 240, type: !2531)
!4177 = !DILocation(line: 0, scope: !4172)
!4178 = !DILocation(line: 242, column: 9, scope: !4172)
!4179 = !DILocation(line: 242, column: 2, scope: !4172)
!4180 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2518, file: !2518, line: 235, type: !4181, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4183)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{!4016, !2531, !252}
!4183 = !{!4184, !4185}
!4184 = !DILocalVariable(name: "h", arg: 1, scope: !4180, file: !2518, line: 235, type: !2531)
!4185 = !DILocalVariable(name: "bytes", arg: 2, scope: !4180, file: !2518, line: 235, type: !252)
!4186 = !DILocation(line: 0, scope: !4180)
!4187 = !DILocation(line: 237, column: 39, scope: !4180)
!4188 = !DILocation(line: 237, column: 9, scope: !4180)
!4189 = !DILocation(line: 237, column: 2, scope: !4180)
!4190 = distinct !DISubprogram(name: "chunksz", scope: !2518, file: !2518, line: 230, type: !4191, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4193)
!4191 = !DISubroutineType(types: !4192)
!4192 = !{!4016, !252}
!4193 = !{!4194}
!4194 = !DILocalVariable(name: "bytes", arg: 1, scope: !4190, file: !2518, line: 230, type: !252)
!4195 = !DILocation(line: 0, scope: !4190)
!4196 = !DILocation(line: 232, column: 29, scope: !4190)
!4197 = !DILocation(line: 232, column: 35, scope: !4190)
!4198 = !DILocation(line: 232, column: 2, scope: !4190)
!4199 = distinct !DISubprogram(name: "set_chunk_size", scope: !2518, file: !2518, line: 172, type: !4200, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4202)
!4200 = !DISubroutineType(types: !4201)
!4201 = !{null, !2531, !2536, !4016}
!4202 = !{!4203, !4204, !4205}
!4203 = !DILocalVariable(name: "h", arg: 1, scope: !4199, file: !2518, line: 172, type: !2531)
!4204 = !DILocalVariable(name: "c", arg: 2, scope: !4199, file: !2518, line: 172, type: !2536)
!4205 = !DILocalVariable(name: "size", arg: 3, scope: !4199, file: !2518, line: 172, type: !4016)
!4206 = !DILocation(line: 0, scope: !4199)
!4207 = !DILocation(line: 174, column: 38, scope: !4199)
!4208 = !DILocation(line: 174, column: 2, scope: !4199)
!4209 = !DILocation(line: 175, column: 1, scope: !4199)
!4210 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2518, file: !2518, line: 209, type: !4200, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4211)
!4211 = !{!4212, !4213, !4214}
!4212 = !DILocalVariable(name: "h", arg: 1, scope: !4210, file: !2518, line: 209, type: !2531)
!4213 = !DILocalVariable(name: "c", arg: 2, scope: !4210, file: !2518, line: 209, type: !2536)
!4214 = !DILocalVariable(name: "size", arg: 3, scope: !4210, file: !2518, line: 210, type: !4016)
!4215 = !DILocation(line: 0, scope: !4210)
!4216 = !DILocation(line: 212, column: 2, scope: !4210)
!4217 = !DILocation(line: 213, column: 1, scope: !4210)
!4218 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3890, file: !3890, line: 34, type: !4072, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4219)
!4219 = !{!4220, !4221, !4222, !4223, !4224, !4227}
!4220 = !DILocalVariable(name: "h", arg: 1, scope: !4218, file: !3890, line: 34, type: !2531)
!4221 = !DILocalVariable(name: "c", arg: 2, scope: !4218, file: !3890, line: 34, type: !2536)
!4222 = !DILocalVariable(name: "bidx", arg: 3, scope: !4218, file: !3890, line: 34, type: !107)
!4223 = !DILocalVariable(name: "b", scope: !4218, file: !3890, line: 36, type: !4079)
!4224 = !DILocalVariable(name: "first", scope: !4225, file: !3890, line: 47, type: !2536)
!4225 = distinct !DILexicalBlock(scope: !4226, file: !3890, line: 46, column: 9)
!4226 = distinct !DILexicalBlock(scope: !4218, file: !3890, line: 42, column: 6)
!4227 = !DILocalVariable(name: "second", scope: !4225, file: !3890, line: 48, type: !2536)
!4228 = !DILocation(line: 0, scope: !4218)
!4229 = !DILocation(line: 36, column: 29, scope: !4218)
!4230 = !DILocation(line: 42, column: 6, scope: !4226)
!4231 = !DILocation(line: 42, column: 28, scope: !4226)
!4232 = !DILocation(line: 42, column: 6, scope: !4218)
!4233 = !DILocation(line: 44, column: 24, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4226, file: !3890, line: 42, column: 34)
!4235 = !DILocation(line: 44, column: 23, scope: !4234)
!4236 = !DILocation(line: 44, column: 6, scope: !4234)
!4237 = !DILocation(line: 44, column: 20, scope: !4234)
!4238 = !DILocation(line: 45, column: 6, scope: !4234)
!4239 = !DILocation(line: 45, column: 11, scope: !4234)
!4240 = !DILocation(line: 46, column: 2, scope: !4234)
!4241 = !DILocation(line: 47, column: 21, scope: !4225)
!4242 = !DILocation(line: 0, scope: !4225)
!4243 = !DILocation(line: 50, column: 6, scope: !4225)
!4244 = !DILocation(line: 50, column: 11, scope: !4225)
!4245 = !DILocation(line: 51, column: 3, scope: !4225)
!4246 = !DILocation(line: 52, column: 3, scope: !4225)
!4247 = !DILocation(line: 58, column: 1, scope: !4218)
!4248 = distinct !DISubprogram(name: "next_free_chunk", scope: !2518, file: !2518, line: 182, type: !3975, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4249)
!4249 = !{!4250, !4251}
!4250 = !DILocalVariable(name: "h", arg: 1, scope: !4248, file: !2518, line: 182, type: !2531)
!4251 = !DILocalVariable(name: "c", arg: 2, scope: !4248, file: !2518, line: 182, type: !2536)
!4252 = !DILocation(line: 0, scope: !4248)
!4253 = !DILocation(line: 184, column: 9, scope: !4248)
!4254 = !DILocation(line: 184, column: 2, scope: !4248)
!4255 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3890, file: !3890, line: 200, type: !4256, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4258)
!4256 = !DISubroutineType(types: !4257)
!4257 = !{!252, !3893, !102}
!4258 = !{!4259, !4260, !4261, !4262, !4263, !4264, !4265}
!4259 = !DILocalVariable(name: "heap", arg: 1, scope: !4255, file: !3890, line: 200, type: !3893)
!4260 = !DILocalVariable(name: "mem", arg: 2, scope: !4255, file: !3890, line: 200, type: !102)
!4261 = !DILocalVariable(name: "h", scope: !4255, file: !3890, line: 202, type: !2531)
!4262 = !DILocalVariable(name: "c", scope: !4255, file: !3890, line: 203, type: !2536)
!4263 = !DILocalVariable(name: "addr", scope: !4255, file: !3890, line: 204, type: !252)
!4264 = !DILocalVariable(name: "chunk_base", scope: !4255, file: !3890, line: 205, type: !252)
!4265 = !DILocalVariable(name: "chunk_sz", scope: !4255, file: !3890, line: 206, type: !252)
!4266 = !DILocation(line: 0, scope: !4255)
!4267 = !DILocation(line: 202, column: 27, scope: !4255)
!4268 = !DILocation(line: 203, column: 16, scope: !4255)
!4269 = !DILocation(line: 204, column: 16, scope: !4255)
!4270 = !DILocation(line: 205, column: 31, scope: !4255)
!4271 = !DILocation(line: 205, column: 22, scope: !4255)
!4272 = !DILocation(line: 206, column: 20, scope: !4255)
!4273 = !DILocation(line: 206, column: 37, scope: !4255)
!4274 = !DILocation(line: 208, column: 26, scope: !4255)
!4275 = !DILocation(line: 208, column: 18, scope: !4255)
!4276 = !DILocation(line: 208, column: 2, scope: !4255)
!4277 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3890, file: !3890, line: 263, type: !4278, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4280)
!4278 = !DISubroutineType(types: !4279)
!4279 = !{!102, !3893, !252}
!4280 = !{!4281, !4282, !4283, !4284, !4285, !4286}
!4281 = !DILocalVariable(name: "heap", arg: 1, scope: !4277, file: !3890, line: 263, type: !3893)
!4282 = !DILocalVariable(name: "bytes", arg: 2, scope: !4277, file: !3890, line: 263, type: !252)
!4283 = !DILocalVariable(name: "h", scope: !4277, file: !3890, line: 265, type: !2531)
!4284 = !DILocalVariable(name: "mem", scope: !4277, file: !3890, line: 266, type: !102)
!4285 = !DILocalVariable(name: "chunk_sz", scope: !4277, file: !3890, line: 272, type: !4016)
!4286 = !DILocalVariable(name: "c", scope: !4277, file: !3890, line: 273, type: !2536)
!4287 = !DILocation(line: 0, scope: !4277)
!4288 = !DILocation(line: 265, column: 27, scope: !4277)
!4289 = !DILocation(line: 268, column: 12, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4277, file: !3890, line: 268, column: 6)
!4291 = !DILocation(line: 268, column: 18, scope: !4290)
!4292 = !DILocation(line: 268, column: 21, scope: !4290)
!4293 = !DILocation(line: 268, column: 6, scope: !4277)
!4294 = !DILocation(line: 272, column: 23, scope: !4277)
!4295 = !DILocation(line: 273, column: 16, scope: !4277)
!4296 = !DILocation(line: 274, column: 8, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4277, file: !3890, line: 274, column: 6)
!4298 = !DILocation(line: 274, column: 6, scope: !4277)
!4299 = !DILocation(line: 279, column: 6, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4277, file: !3890, line: 279, column: 6)
!4301 = !DILocation(line: 279, column: 23, scope: !4300)
!4302 = !DILocation(line: 279, column: 6, scope: !4277)
!4303 = !DILocation(line: 280, column: 24, scope: !4304)
!4304 = distinct !DILexicalBlock(scope: !4300, file: !3890, line: 279, column: 35)
!4305 = !DILocation(line: 280, column: 3, scope: !4304)
!4306 = !DILocation(line: 281, column: 3, scope: !4304)
!4307 = !DILocation(line: 282, column: 2, scope: !4304)
!4308 = !DILocation(line: 284, column: 2, scope: !4277)
!4309 = !DILocation(line: 286, column: 8, scope: !4277)
!4310 = !DILocation(line: 298, column: 2, scope: !4277)
!4311 = !DILocation(line: 299, column: 1, scope: !4277)
!4312 = distinct !DISubprogram(name: "size_too_big", scope: !2518, file: !2518, line: 256, type: !4313, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4315)
!4313 = !DISubroutineType(types: !4314)
!4314 = !{!136, !2531, !252}
!4315 = !{!4316, !4317}
!4316 = !DILocalVariable(name: "h", arg: 1, scope: !4312, file: !2518, line: 256, type: !2531)
!4317 = !DILocalVariable(name: "bytes", arg: 2, scope: !4312, file: !2518, line: 256, type: !252)
!4318 = !DILocation(line: 0, scope: !4312)
!4319 = !DILocation(line: 262, column: 16, scope: !4312)
!4320 = !DILocation(line: 262, column: 36, scope: !4312)
!4321 = !DILocation(line: 262, column: 30, scope: !4312)
!4322 = !DILocation(line: 262, column: 2, scope: !4312)
!4323 = distinct !DISubprogram(name: "alloc_chunk", scope: !3890, file: !3890, line: 211, type: !4324, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4326)
!4324 = !DISubroutineType(types: !4325)
!4325 = !{!2536, !2531, !4016}
!4326 = !{!4327, !4328, !4329, !4330, !4331, !4334, !4335, !4337, !4338, !4341}
!4327 = !DILocalVariable(name: "h", arg: 1, scope: !4323, file: !3890, line: 211, type: !2531)
!4328 = !DILocalVariable(name: "sz", arg: 2, scope: !4323, file: !3890, line: 211, type: !4016)
!4329 = !DILocalVariable(name: "bi", scope: !4323, file: !3890, line: 213, type: !107)
!4330 = !DILocalVariable(name: "b", scope: !4323, file: !3890, line: 214, type: !4079)
!4331 = !DILocalVariable(name: "first", scope: !4332, file: !3890, line: 233, type: !2536)
!4332 = distinct !DILexicalBlock(scope: !4333, file: !3890, line: 232, column: 15)
!4333 = distinct !DILexicalBlock(scope: !4323, file: !3890, line: 232, column: 6)
!4334 = !DILocalVariable(name: "i", scope: !4332, file: !3890, line: 234, type: !107)
!4335 = !DILocalVariable(name: "c", scope: !4336, file: !3890, line: 236, type: !2536)
!4336 = distinct !DILexicalBlock(scope: !4332, file: !3890, line: 235, column: 6)
!4337 = !DILocalVariable(name: "bmask", scope: !4323, file: !3890, line: 249, type: !162)
!4338 = !DILocalVariable(name: "minbucket", scope: !4339, file: !3890, line: 252, type: !107)
!4339 = distinct !DILexicalBlock(scope: !4340, file: !3890, line: 251, column: 19)
!4340 = distinct !DILexicalBlock(scope: !4323, file: !3890, line: 251, column: 6)
!4341 = !DILocalVariable(name: "c", scope: !4339, file: !3890, line: 253, type: !2536)
!4342 = !DILocation(line: 0, scope: !4323)
!4343 = !DILocation(line: 213, column: 11, scope: !4323)
!4344 = !DILocation(line: 232, column: 9, scope: !4333)
!4345 = !DILocation(line: 232, column: 6, scope: !4333)
!4346 = !DILocation(line: 232, column: 6, scope: !4323)
!4347 = !DILocation(line: 236, column: 21, scope: !4336)
!4348 = !DILocation(line: 0, scope: !4332)
!4349 = !DILocation(line: 0, scope: !4336)
!4350 = !DILocation(line: 237, column: 8, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4336, file: !3890, line: 237, column: 8)
!4352 = !DILocation(line: 237, column: 25, scope: !4351)
!4353 = !DILocation(line: 237, column: 8, scope: !4336)
!4354 = !DILocation(line: 238, column: 5, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4351, file: !3890, line: 237, column: 32)
!4356 = !DILocation(line: 241, column: 14, scope: !4336)
!4357 = !DILocation(line: 241, column: 12, scope: !4336)
!4358 = !DILocation(line: 243, column: 12, scope: !4332)
!4359 = !DILocation(line: 243, column: 16, scope: !4332)
!4360 = distinct !{!4360, !4361, !4362}
!4361 = !DILocation(line: 235, column: 3, scope: !4332)
!4362 = !DILocation(line: 243, column: 35, scope: !4332)
!4363 = !DILocation(line: 249, column: 22, scope: !4323)
!4364 = !DILocation(line: 249, column: 39, scope: !4323)
!4365 = !DILocation(line: 249, column: 36, scope: !4323)
!4366 = !DILocation(line: 251, column: 12, scope: !4340)
!4367 = !DILocation(line: 251, column: 6, scope: !4323)
!4368 = !DILocation(line: 252, column: 19, scope: !4339)
!4369 = !DILocation(line: 0, scope: !4339)
!4370 = !DILocation(line: 253, column: 39, scope: !4339)
!4371 = !DILocation(line: 255, column: 3, scope: !4339)
!4372 = !DILocation(line: 261, column: 1, scope: !4323)
!4373 = distinct !DISubprogram(name: "split_chunks", scope: !3890, file: !3890, line: 109, type: !4009, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4374)
!4374 = !{!4375, !4376, !4377, !4378, !4379, !4380}
!4375 = !DILocalVariable(name: "h", arg: 1, scope: !4373, file: !3890, line: 109, type: !2531)
!4376 = !DILocalVariable(name: "lc", arg: 2, scope: !4373, file: !3890, line: 109, type: !2536)
!4377 = !DILocalVariable(name: "rc", arg: 3, scope: !4373, file: !3890, line: 109, type: !2536)
!4378 = !DILocalVariable(name: "sz0", scope: !4373, file: !3890, line: 114, type: !4016)
!4379 = !DILocalVariable(name: "lsz", scope: !4373, file: !3890, line: 115, type: !4016)
!4380 = !DILocalVariable(name: "rsz", scope: !4373, file: !3890, line: 116, type: !4016)
!4381 = !DILocation(line: 0, scope: !4373)
!4382 = !DILocation(line: 114, column: 18, scope: !4373)
!4383 = !DILocation(line: 115, column: 21, scope: !4373)
!4384 = !DILocation(line: 116, column: 22, scope: !4373)
!4385 = !DILocation(line: 118, column: 2, scope: !4373)
!4386 = !DILocation(line: 119, column: 2, scope: !4373)
!4387 = !DILocation(line: 120, column: 2, scope: !4373)
!4388 = !DILocation(line: 121, column: 25, scope: !4373)
!4389 = !DILocation(line: 121, column: 2, scope: !4373)
!4390 = !DILocation(line: 122, column: 1, scope: !4373)
!4391 = distinct !DISubprogram(name: "chunk_mem", scope: !3890, file: !3890, line: 24, type: !4392, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4394)
!4392 = !DISubroutineType(types: !4393)
!4393 = !{!102, !2531, !2536}
!4394 = !{!4395, !4396, !4397, !4398}
!4395 = !DILocalVariable(name: "h", arg: 1, scope: !4391, file: !3890, line: 24, type: !2531)
!4396 = !DILocalVariable(name: "c", arg: 2, scope: !4391, file: !3890, line: 24, type: !2536)
!4397 = !DILocalVariable(name: "buf", scope: !4391, file: !3890, line: 26, type: !2525)
!4398 = !DILocalVariable(name: "ret", scope: !4391, file: !3890, line: 27, type: !182)
!4399 = !DILocation(line: 0, scope: !4391)
!4400 = !DILocation(line: 26, column: 22, scope: !4391)
!4401 = !DILocation(line: 27, column: 38, scope: !4391)
!4402 = !DILocation(line: 31, column: 2, scope: !4391)
!4403 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3890, file: !3890, line: 301, type: !4404, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4406)
!4404 = !DISubroutineType(types: !4405)
!4405 = !{!102, !3893, !252, !252}
!4406 = !{!4407, !4408, !4409, !4410, !4411, !4412, !4413, !4414, !4415, !4416, !4417, !4418}
!4407 = !DILocalVariable(name: "heap", arg: 1, scope: !4403, file: !3890, line: 301, type: !3893)
!4408 = !DILocalVariable(name: "align", arg: 2, scope: !4403, file: !3890, line: 301, type: !252)
!4409 = !DILocalVariable(name: "bytes", arg: 3, scope: !4403, file: !3890, line: 301, type: !252)
!4410 = !DILocalVariable(name: "h", scope: !4403, file: !3890, line: 303, type: !2531)
!4411 = !DILocalVariable(name: "gap", scope: !4403, file: !3890, line: 304, type: !252)
!4412 = !DILocalVariable(name: "rew", scope: !4403, file: !3890, line: 304, type: !252)
!4413 = !DILocalVariable(name: "padded_sz", scope: !4403, file: !3890, line: 335, type: !4016)
!4414 = !DILocalVariable(name: "c0", scope: !4403, file: !3890, line: 336, type: !2536)
!4415 = !DILocalVariable(name: "mem", scope: !4403, file: !3890, line: 341, type: !182)
!4416 = !DILocalVariable(name: "end", scope: !4403, file: !3890, line: 345, type: !2525)
!4417 = !DILocalVariable(name: "c", scope: !4403, file: !3890, line: 348, type: !2536)
!4418 = !DILocalVariable(name: "c_end", scope: !4403, file: !3890, line: 349, type: !2536)
!4419 = !DILocation(line: 0, scope: !4403)
!4420 = !DILocation(line: 303, column: 27, scope: !4403)
!4421 = !DILocation(line: 313, column: 16, scope: !4403)
!4422 = !DILocation(line: 313, column: 14, scope: !4403)
!4423 = !DILocation(line: 314, column: 12, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4403, file: !3890, line: 314, column: 6)
!4425 = !DILocation(line: 314, column: 6, scope: !4403)
!4426 = !DILocation(line: 315, column: 9, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4424, file: !3890, line: 314, column: 20)
!4428 = !DILocation(line: 316, column: 9, scope: !4427)
!4429 = !DILocation(line: 318, column: 13, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4431, file: !3890, line: 318, column: 7)
!4431 = distinct !DILexicalBlock(scope: !4424, file: !3890, line: 317, column: 9)
!4432 = !DILocation(line: 318, column: 7, scope: !4431)
!4433 = !DILocation(line: 319, column: 11, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4430, file: !3890, line: 318, column: 39)
!4435 = !DILocation(line: 319, column: 4, scope: !4434)
!4436 = !DILocation(line: 0, scope: !4424)
!4437 = !DILocation(line: 326, column: 12, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4403, file: !3890, line: 326, column: 6)
!4439 = !DILocation(line: 326, column: 17, scope: !4438)
!4440 = !DILocation(line: 326, column: 20, scope: !4438)
!4441 = !DILocation(line: 326, column: 6, scope: !4403)
!4442 = !DILocation(line: 335, column: 50, scope: !4403)
!4443 = !DILocation(line: 335, column: 58, scope: !4403)
!4444 = !DILocation(line: 335, column: 24, scope: !4403)
!4445 = !DILocation(line: 336, column: 17, scope: !4403)
!4446 = !DILocation(line: 338, column: 9, scope: !4447)
!4447 = distinct !DILexicalBlock(scope: !4403, file: !3890, line: 338, column: 6)
!4448 = !DILocation(line: 338, column: 6, scope: !4403)
!4449 = !DILocation(line: 341, column: 17, scope: !4403)
!4450 = !DILocation(line: 344, column: 20, scope: !4403)
!4451 = !DILocation(line: 344, column: 8, scope: !4403)
!4452 = !DILocation(line: 344, column: 47, scope: !4403)
!4453 = !DILocation(line: 345, column: 39, scope: !4403)
!4454 = !DILocation(line: 348, column: 16, scope: !4403)
!4455 = !DILocation(line: 349, column: 26, scope: !4403)
!4456 = !DILocation(line: 349, column: 24, scope: !4403)
!4457 = !DILocation(line: 353, column: 8, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4403, file: !3890, line: 353, column: 6)
!4459 = !DILocation(line: 353, column: 6, scope: !4403)
!4460 = !DILocation(line: 354, column: 3, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4458, file: !3890, line: 353, column: 14)
!4462 = !DILocation(line: 355, column: 3, scope: !4461)
!4463 = !DILocation(line: 356, column: 2, scope: !4461)
!4464 = !DILocation(line: 359, column: 6, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4403, file: !3890, line: 359, column: 6)
!4466 = !DILocation(line: 359, column: 24, scope: !4465)
!4467 = !DILocation(line: 359, column: 6, scope: !4403)
!4468 = !DILocation(line: 360, column: 3, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4465, file: !3890, line: 359, column: 33)
!4470 = !DILocation(line: 361, column: 3, scope: !4469)
!4471 = !DILocation(line: 362, column: 2, scope: !4469)
!4472 = !DILocation(line: 364, column: 2, scope: !4403)
!4473 = !DILocation(line: 377, column: 1, scope: !4403)
!4474 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3890, file: !3890, line: 379, type: !4475, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4477)
!4475 = !DISubroutineType(types: !4476)
!4476 = !{!102, !3893, !102, !252, !252}
!4477 = !{!4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487, !4493, !4494}
!4478 = !DILocalVariable(name: "heap", arg: 1, scope: !4474, file: !3890, line: 379, type: !3893)
!4479 = !DILocalVariable(name: "ptr", arg: 2, scope: !4474, file: !3890, line: 379, type: !102)
!4480 = !DILocalVariable(name: "align", arg: 3, scope: !4474, file: !3890, line: 380, type: !252)
!4481 = !DILocalVariable(name: "bytes", arg: 4, scope: !4474, file: !3890, line: 380, type: !252)
!4482 = !DILocalVariable(name: "h", scope: !4474, file: !3890, line: 382, type: !2531)
!4483 = !DILocalVariable(name: "c", scope: !4474, file: !3890, line: 399, type: !2536)
!4484 = !DILocalVariable(name: "rc", scope: !4474, file: !3890, line: 400, type: !2536)
!4485 = !DILocalVariable(name: "align_gap", scope: !4474, file: !3890, line: 401, type: !252)
!4486 = !DILocalVariable(name: "chunks_need", scope: !4474, file: !3890, line: 402, type: !4016)
!4487 = !DILocalVariable(name: "split_size", scope: !4488, file: !3890, line: 435, type: !4016)
!4488 = distinct !DILexicalBlock(scope: !4489, file: !3890, line: 433, column: 61)
!4489 = distinct !DILexicalBlock(scope: !4490, file: !3890, line: 432, column: 13)
!4490 = distinct !DILexicalBlock(scope: !4491, file: !3890, line: 409, column: 13)
!4491 = distinct !DILexicalBlock(scope: !4492, file: !3890, line: 406, column: 13)
!4492 = distinct !DILexicalBlock(scope: !4474, file: !3890, line: 404, column: 6)
!4493 = !DILocalVariable(name: "ptr2", scope: !4474, file: !3890, line: 474, type: !102)
!4494 = !DILocalVariable(name: "prev_size", scope: !4495, file: !3890, line: 477, type: !252)
!4495 = distinct !DILexicalBlock(scope: !4496, file: !3890, line: 476, column: 20)
!4496 = distinct !DILexicalBlock(scope: !4474, file: !3890, line: 476, column: 6)
!4497 = !DILocation(line: 0, scope: !4474)
!4498 = !DILocation(line: 382, column: 27, scope: !4474)
!4499 = !DILocation(line: 385, column: 10, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4474, file: !3890, line: 385, column: 6)
!4501 = !DILocation(line: 385, column: 6, scope: !4474)
!4502 = !DILocation(line: 386, column: 10, scope: !4503)
!4503 = distinct !DILexicalBlock(scope: !4500, file: !3890, line: 385, column: 19)
!4504 = !DILocation(line: 386, column: 3, scope: !4503)
!4505 = !DILocation(line: 388, column: 12, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4474, file: !3890, line: 388, column: 6)
!4507 = !DILocation(line: 388, column: 6, scope: !4474)
!4508 = !DILocation(line: 389, column: 3, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4506, file: !3890, line: 388, column: 18)
!4510 = !DILocation(line: 390, column: 3, scope: !4509)
!4511 = !DILocation(line: 395, column: 6, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4474, file: !3890, line: 395, column: 6)
!4513 = !DILocation(line: 395, column: 6, scope: !4474)
!4514 = !DILocation(line: 399, column: 16, scope: !4474)
!4515 = !DILocation(line: 400, column: 17, scope: !4474)
!4516 = !DILocation(line: 401, column: 49, scope: !4474)
!4517 = !DILocation(line: 401, column: 36, scope: !4474)
!4518 = !DILocation(line: 402, column: 52, scope: !4474)
!4519 = !DILocation(line: 402, column: 26, scope: !4474)
!4520 = !DILocation(line: 404, column: 6, scope: !4492)
!4521 = !DILocation(line: 404, column: 12, scope: !4492)
!4522 = !DILocation(line: 404, column: 40, scope: !4492)
!4523 = !DILocation(line: 404, column: 31, scope: !4492)
!4524 = !DILocation(line: 404, column: 6, scope: !4474)
!4525 = !DILocation(line: 406, column: 13, scope: !4491)
!4526 = !DILocation(line: 406, column: 30, scope: !4491)
!4527 = !DILocation(line: 406, column: 13, scope: !4492)
!4528 = !DILocation(line: 409, column: 30, scope: !4490)
!4529 = !DILocation(line: 409, column: 13, scope: !4491)
!4530 = !DILocation(line: 420, column: 24, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4490, file: !3890, line: 409, column: 45)
!4532 = !DILocation(line: 420, column: 3, scope: !4531)
!4533 = !DILocation(line: 421, column: 3, scope: !4531)
!4534 = !DILocation(line: 422, column: 3, scope: !4531)
!4535 = !DILocation(line: 431, column: 3, scope: !4531)
!4536 = !DILocation(line: 432, column: 14, scope: !4489)
!4537 = !DILocation(line: 432, column: 32, scope: !4489)
!4538 = !DILocation(line: 433, column: 26, scope: !4489)
!4539 = !DILocation(line: 433, column: 24, scope: !4489)
!4540 = !DILocation(line: 433, column: 44, scope: !4489)
!4541 = !DILocation(line: 432, column: 13, scope: !4490)
!4542 = !DILocation(line: 435, column: 38, scope: !4488)
!4543 = !DILocation(line: 0, scope: !4488)
!4544 = !DILocation(line: 445, column: 3, scope: !4488)
!4545 = !DILocation(line: 447, column: 20, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4488, file: !3890, line: 447, column: 7)
!4547 = !DILocation(line: 447, column: 18, scope: !4546)
!4548 = !DILocation(line: 447, column: 7, scope: !4488)
!4549 = !DILocation(line: 448, column: 27, scope: !4550)
!4550 = distinct !DILexicalBlock(scope: !4546, file: !3890, line: 447, column: 39)
!4551 = !DILocation(line: 448, column: 4, scope: !4550)
!4552 = !DILocation(line: 449, column: 4, scope: !4550)
!4553 = !DILocation(line: 450, column: 3, scope: !4550)
!4554 = !DILocation(line: 452, column: 3, scope: !4488)
!4555 = !DILocation(line: 453, column: 3, scope: !4488)
!4556 = !DILocation(line: 474, column: 15, scope: !4474)
!4557 = !DILocation(line: 476, column: 11, scope: !4496)
!4558 = !DILocation(line: 476, column: 6, scope: !4474)
!4559 = !DILocation(line: 477, column: 42, scope: !4495)
!4560 = !DILocation(line: 477, column: 22, scope: !4495)
!4561 = !DILocation(line: 477, column: 60, scope: !4495)
!4562 = !DILocation(line: 0, scope: !4495)
!4563 = !DILocation(line: 479, column: 21, scope: !4495)
!4564 = !DILocation(line: 479, column: 3, scope: !4495)
!4565 = !DILocation(line: 480, column: 3, scope: !4495)
!4566 = !DILocation(line: 481, column: 2, scope: !4495)
!4567 = !DILocation(line: 483, column: 1, scope: !4474)
!4568 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2518, file: !2518, line: 245, type: !4569, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4571)
!4569 = !DISubroutineType(types: !4570)
!4570 = !{!252, !2531, !4016}
!4571 = !{!4572, !4573}
!4572 = !DILocalVariable(name: "h", arg: 1, scope: !4568, file: !2518, line: 245, type: !2531)
!4573 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4568, file: !2518, line: 245, type: !4016)
!4574 = !DILocation(line: 0, scope: !4568)
!4575 = !DILocation(line: 247, column: 20, scope: !4568)
!4576 = !DILocation(line: 247, column: 33, scope: !4568)
!4577 = !DILocation(line: 247, column: 2, scope: !4568)
!4578 = distinct !DISubprogram(name: "sys_heap_init", scope: !3890, file: !3890, line: 485, type: !4579, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2514, retainedNodes: !4581)
!4579 = !DISubroutineType(types: !4580)
!4580 = !{null, !3893, !102, !252}
!4581 = !{!4582, !4583, !4584, !4585, !4586, !4587, !4588, !4589, !4590, !4591}
!4582 = !DILocalVariable(name: "heap", arg: 1, scope: !4578, file: !3890, line: 485, type: !3893)
!4583 = !DILocalVariable(name: "mem", arg: 2, scope: !4578, file: !3890, line: 485, type: !102)
!4584 = !DILocalVariable(name: "bytes", arg: 3, scope: !4578, file: !3890, line: 485, type: !252)
!4585 = !DILocalVariable(name: "addr", scope: !4578, file: !3890, line: 502, type: !22)
!4586 = !DILocalVariable(name: "end", scope: !4578, file: !3890, line: 503, type: !22)
!4587 = !DILocalVariable(name: "heap_sz", scope: !4578, file: !3890, line: 504, type: !4016)
!4588 = !DILocalVariable(name: "h", scope: !4578, file: !3890, line: 509, type: !2531)
!4589 = !DILocalVariable(name: "nb_buckets", scope: !4578, file: !3890, line: 520, type: !107)
!4590 = !DILocalVariable(name: "chunk0_size", scope: !4578, file: !3890, line: 521, type: !4016)
!4591 = !DILocalVariable(name: "i", scope: !4592, file: !3890, line: 526, type: !107)
!4592 = distinct !DILexicalBlock(scope: !4578, file: !3890, line: 526, column: 2)
!4593 = !DILocation(line: 0, scope: !4578)
!4594 = !DILocation(line: 499, column: 8, scope: !4578)
!4595 = !DILocation(line: 502, column: 19, scope: !4578)
!4596 = !DILocation(line: 503, column: 18, scope: !4578)
!4597 = !DILocation(line: 504, column: 27, scope: !4578)
!4598 = !DILocation(line: 504, column: 35, scope: !4578)
!4599 = !DILocation(line: 509, column: 21, scope: !4578)
!4600 = !DILocation(line: 510, column: 8, scope: !4578)
!4601 = !DILocation(line: 510, column: 13, scope: !4578)
!4602 = !DILocation(line: 511, column: 5, scope: !4578)
!4603 = !DILocation(line: 511, column: 15, scope: !4578)
!4604 = !DILocation(line: 512, column: 5, scope: !4578)
!4605 = !DILocation(line: 512, column: 19, scope: !4578)
!4606 = !DILocation(line: 520, column: 19, scope: !4578)
!4607 = !DILocation(line: 522, column: 21, scope: !4578)
!4608 = !DILocation(line: 521, column: 56, scope: !4578)
!4609 = !DILocation(line: 521, column: 26, scope: !4578)
!4610 = !DILocation(line: 0, scope: !4592)
!4611 = !DILocation(line: 526, column: 20, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4592, file: !3890, line: 526, column: 2)
!4613 = !DILocation(line: 526, column: 2, scope: !4592)
!4614 = !DILocation(line: 531, column: 2, scope: !4578)
!4615 = !DILocation(line: 532, column: 2, scope: !4578)
!4616 = !DILocation(line: 533, column: 2, scope: !4578)
!4617 = !DILocation(line: 536, column: 41, scope: !4578)
!4618 = !DILocation(line: 536, column: 2, scope: !4578)
!4619 = !DILocation(line: 537, column: 2, scope: !4578)
!4620 = !DILocation(line: 540, column: 2, scope: !4578)
!4621 = !DILocation(line: 541, column: 2, scope: !4578)
!4622 = !DILocation(line: 542, column: 2, scope: !4578)
!4623 = !DILocation(line: 544, column: 2, scope: !4578)
!4624 = !DILocation(line: 545, column: 1, scope: !4578)
!4625 = !DILocation(line: 527, column: 17, scope: !4626)
!4626 = distinct !DILexicalBlock(scope: !4612, file: !3890, line: 526, column: 39)
!4627 = !DILocation(line: 527, column: 22, scope: !4626)
!4628 = !DILocation(line: 526, column: 35, scope: !4612)
!4629 = distinct !{!4629, !4613, !4630}
!4630 = !DILocation(line: 528, column: 2, scope: !4592)
!4631 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2551, file: !2551, line: 1338, type: !4632, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !4640)
!4632 = !DISubroutineType(types: !4633)
!4633 = !{!107, !3621, !102, !123, !4634, !162}
!4634 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3587, line: 99, baseType: !4635)
!4635 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3587, line: 40, baseType: !4636)
!4636 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2551, baseType: !4637)
!4637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4638)
!4638 = !{!4639}
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4637, file: !2551, baseType: !102, size: 32)
!4640 = !{!4641, !4642, !4643, !4644, !4645, !4646, !4650, !4651, !4652, !4654, !4659, !4704, !4707, !4710, !4711, !4712, !4713, !4714, !4715, !4716, !4719, !4720, !4721, !4725, !4728, !4730, !4733, !4734, !4735, !4740, !4746, !4749, !4753, !4759, !4763, !4766, !4768, !4771}
!4641 = !DILocalVariable(name: "out", arg: 1, scope: !4631, file: !2551, line: 1338, type: !3621)
!4642 = !DILocalVariable(name: "ctx", arg: 2, scope: !4631, file: !2551, line: 1338, type: !102)
!4643 = !DILocalVariable(name: "fp", arg: 3, scope: !4631, file: !2551, line: 1338, type: !123)
!4644 = !DILocalVariable(name: "ap", arg: 4, scope: !4631, file: !2551, line: 1339, type: !4634)
!4645 = !DILocalVariable(name: "flags", arg: 5, scope: !4631, file: !2551, line: 1339, type: !162)
!4646 = !DILocalVariable(name: "buf", scope: !4631, file: !2551, line: 1341, type: !4647)
!4647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 176, elements: !4648)
!4648 = !{!4649}
!4649 = !DISubrange(count: 22)
!4650 = !DILocalVariable(name: "count", scope: !4631, file: !2551, line: 1342, type: !252)
!4651 = !DILocalVariable(name: "sint", scope: !4631, file: !2551, line: 1343, type: !2570)
!4652 = !DILocalVariable(name: "tagged_ap", scope: !4631, file: !2551, line: 1345, type: !4653)
!4653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !136)
!4654 = !DILocalVariable(name: "rc", scope: !4655, file: !2551, line: 1377, type: !107)
!4655 = distinct !DILexicalBlock(scope: !4656, file: !2551, line: 1377, column: 4)
!4656 = distinct !DILexicalBlock(scope: !4657, file: !2551, line: 1376, column: 19)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !2551, line: 1376, column: 7)
!4658 = distinct !DILexicalBlock(scope: !4631, file: !2551, line: 1375, column: 19)
!4659 = !DILocalVariable(name: "state", scope: !4658, file: !2551, line: 1395, type: !4660)
!4660 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4631, file: !2551, line: 1392, size: 192, elements: !4661)
!4661 = !{!4662, !4672}
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4660, file: !2551, line: 1393, baseType: !4663, size: 64)
!4663 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2551, line: 166, size: 64, elements: !4664)
!4664 = !{!4665, !4666, !4667, !4669, !4671}
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4663, file: !2551, line: 168, baseType: !2570, size: 64)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4663, file: !2551, line: 171, baseType: !2573, size: 64)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4663, file: !2551, line: 174, baseType: !4668, size: 64)
!4668 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4663, file: !2551, line: 177, baseType: !4670, size: 64)
!4670 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4663, file: !2551, line: 180, baseType: !102, size: 32)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4660, file: !2551, line: 1394, baseType: !4673, size: 96, offset: 64)
!4673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2551, line: 189, size: 96, elements: !4674)
!4674 = !{!4675, !4676, !4677, !4678, !4679, !4680, !4681, !4682, !4683, !4684, !4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4693, !4694, !4699}
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4673, file: !2551, line: 191, baseType: !136, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4673, file: !2551, line: 194, baseType: !136, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4673, file: !2551, line: 197, baseType: !136, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4673, file: !2551, line: 200, baseType: !136, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4673, file: !2551, line: 203, baseType: !136, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4673, file: !2551, line: 206, baseType: !136, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4673, file: !2551, line: 209, baseType: !136, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4673, file: !2551, line: 212, baseType: !136, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4673, file: !2551, line: 219, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4673, file: !2551, line: 222, baseType: !136, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4673, file: !2551, line: 229, baseType: !136, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4673, file: !2551, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4673, file: !2551, line: 238, baseType: !136, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4673, file: !2551, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4673, file: !2551, line: 244, baseType: !136, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4673, file: !2551, line: 247, baseType: !136, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4673, file: !2551, line: 252, baseType: !136, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4673, file: !2551, line: 257, baseType: !136, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4673, file: !2551, line: 260, baseType: !134, size: 8, offset: 24)
!4694 = !DIDerivedType(tag: DW_TAG_member, scope: !4673, file: !2551, line: 262, baseType: !4695, size: 32, offset: 32)
!4695 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4673, file: !2551, line: 262, size: 32, elements: !4696)
!4696 = !{!4697, !4698}
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4695, file: !2551, line: 267, baseType: !107, size: 32)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4695, file: !2551, line: 289, baseType: !107, size: 32)
!4699 = !DIDerivedType(tag: DW_TAG_member, scope: !4673, file: !2551, line: 292, baseType: !4700, size: 32, offset: 64)
!4700 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4673, file: !2551, line: 292, size: 32, elements: !4701)
!4701 = !{!4702, !4703}
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4700, file: !2551, line: 297, baseType: !107, size: 32)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4700, file: !2551, line: 306, baseType: !107, size: 32)
!4704 = !DILocalVariable(name: "conv", scope: !4658, file: !2551, line: 1400, type: !4705)
!4705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4706)
!4706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4673, size: 32)
!4707 = !DILocalVariable(name: "value", scope: !4658, file: !2551, line: 1401, type: !4708)
!4708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4709)
!4709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4663, size: 32)
!4710 = !DILocalVariable(name: "sp", scope: !4658, file: !2551, line: 1402, type: !123)
!4711 = !DILocalVariable(name: "width", scope: !4658, file: !2551, line: 1403, type: !107)
!4712 = !DILocalVariable(name: "precision", scope: !4658, file: !2551, line: 1404, type: !107)
!4713 = !DILocalVariable(name: "bps", scope: !4658, file: !2551, line: 1405, type: !123)
!4714 = !DILocalVariable(name: "bpe", scope: !4658, file: !2551, line: 1406, type: !123)
!4715 = !DILocalVariable(name: "sign", scope: !4658, file: !2551, line: 1407, type: !125)
!4716 = !DILocalVariable(name: "arg", scope: !4717, file: !2551, line: 1432, type: !107)
!4717 = distinct !DILexicalBlock(scope: !4718, file: !2551, line: 1431, column: 24)
!4718 = distinct !DILexicalBlock(scope: !4658, file: !2551, line: 1431, column: 7)
!4719 = !DILocalVariable(name: "specifier_cat", scope: !4658, file: !2551, line: 1468, type: !2550)
!4720 = !DILocalVariable(name: "length_mod", scope: !4658, file: !2551, line: 1470, type: !2558)
!4721 = !DILocalVariable(name: "rc", scope: !4722, file: !2551, line: 1575, type: !107)
!4722 = distinct !DILexicalBlock(scope: !4723, file: !2551, line: 1575, column: 4)
!4723 = distinct !DILexicalBlock(scope: !4724, file: !2551, line: 1574, column: 43)
!4724 = distinct !DILexicalBlock(scope: !4658, file: !2551, line: 1574, column: 7)
!4725 = !DILocalVariable(name: "rc", scope: !4726, file: !2551, line: 1584, type: !107)
!4726 = distinct !DILexicalBlock(scope: !4727, file: !2551, line: 1584, column: 4)
!4727 = distinct !DILexicalBlock(scope: !4658, file: !2551, line: 1582, column: 28)
!4728 = !DILocalVariable(name: "len", scope: !4729, file: !2551, line: 1589, type: !252)
!4729 = distinct !DILexicalBlock(scope: !4727, file: !2551, line: 1586, column: 13)
!4730 = !DILocalVariable(name: "len", scope: !4731, file: !2551, line: 1641, type: !252)
!4731 = distinct !DILexicalBlock(scope: !4732, file: !2551, line: 1640, column: 24)
!4732 = distinct !DILexicalBlock(scope: !4727, file: !2551, line: 1640, column: 8)
!4733 = !DILocalVariable(name: "nj_len", scope: !4658, file: !2551, line: 1722, type: !252)
!4734 = !DILocalVariable(name: "pad_len", scope: !4658, file: !2551, line: 1723, type: !107)
!4735 = !DILocalVariable(name: "pad", scope: !4736, file: !2551, line: 1751, type: !125)
!4736 = distinct !DILexicalBlock(scope: !4737, file: !2551, line: 1750, column: 26)
!4737 = distinct !DILexicalBlock(scope: !4738, file: !2551, line: 1750, column: 8)
!4738 = distinct !DILexicalBlock(scope: !4739, file: !2551, line: 1747, column: 18)
!4739 = distinct !DILexicalBlock(scope: !4658, file: !2551, line: 1747, column: 7)
!4740 = !DILocalVariable(name: "rc", scope: !4741, file: !2551, line: 1758, type: !107)
!4741 = distinct !DILexicalBlock(scope: !4742, file: !2551, line: 1758, column: 7)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !2551, line: 1757, column: 21)
!4743 = distinct !DILexicalBlock(scope: !4744, file: !2551, line: 1757, column: 10)
!4744 = distinct !DILexicalBlock(scope: !4745, file: !2551, line: 1756, column: 26)
!4745 = distinct !DILexicalBlock(scope: !4736, file: !2551, line: 1756, column: 9)
!4746 = !DILocalVariable(name: "rc", scope: !4747, file: !2551, line: 1765, type: !107)
!4747 = distinct !DILexicalBlock(scope: !4748, file: !2551, line: 1765, column: 6)
!4748 = distinct !DILexicalBlock(scope: !4736, file: !2551, line: 1764, column: 25)
!4749 = !DILocalVariable(name: "rc", scope: !4750, file: !2551, line: 1774, type: !107)
!4750 = distinct !DILexicalBlock(scope: !4751, file: !2551, line: 1774, column: 4)
!4751 = distinct !DILexicalBlock(scope: !4752, file: !2551, line: 1773, column: 18)
!4752 = distinct !DILexicalBlock(scope: !4658, file: !2551, line: 1773, column: 7)
!4753 = !DILocalVariable(name: "rc", scope: !4754, file: !2551, line: 1819, type: !107)
!4754 = distinct !DILexicalBlock(scope: !4755, file: !2551, line: 1819, column: 5)
!4755 = distinct !DILexicalBlock(scope: !4756, file: !2551, line: 1818, column: 44)
!4756 = distinct !DILexicalBlock(scope: !4757, file: !2551, line: 1818, column: 8)
!4757 = distinct !DILexicalBlock(scope: !4758, file: !2551, line: 1817, column: 10)
!4758 = distinct !DILexicalBlock(scope: !4658, file: !2551, line: 1777, column: 7)
!4759 = !DILocalVariable(name: "rc", scope: !4760, file: !2551, line: 1823, type: !107)
!4760 = distinct !DILexicalBlock(scope: !4761, file: !2551, line: 1823, column: 5)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !2551, line: 1822, column: 26)
!4762 = distinct !DILexicalBlock(scope: !4757, file: !2551, line: 1822, column: 8)
!4763 = !DILocalVariable(name: "rc", scope: !4764, file: !2551, line: 1828, type: !107)
!4764 = distinct !DILexicalBlock(scope: !4765, file: !2551, line: 1828, column: 5)
!4765 = distinct !DILexicalBlock(scope: !4757, file: !2551, line: 1827, column: 26)
!4766 = !DILocalVariable(name: "rc", scope: !4767, file: !2551, line: 1831, type: !107)
!4767 = distinct !DILexicalBlock(scope: !4757, file: !2551, line: 1831, column: 4)
!4768 = !DILocalVariable(name: "rc", scope: !4769, file: !2551, line: 1836, type: !107)
!4769 = distinct !DILexicalBlock(scope: !4770, file: !2551, line: 1836, column: 4)
!4770 = distinct !DILexicalBlock(scope: !4658, file: !2551, line: 1835, column: 21)
!4771 = !DILabel(scope: !4727, name: "prec_int_pad0", file: !2551, line: 1634)
!4772 = !DILocation(line: 0, scope: !4631)
!4773 = !DILocation(line: 1341, column: 2, scope: !4631)
!4774 = !DILocation(line: 1341, column: 7, scope: !4631)
!4775 = !DILocation(line: 1375, column: 2, scope: !4631)
!4776 = !DILocation(line: 1342, column: 9, scope: !4631)
!4777 = !DILocation(line: 1375, column: 9, scope: !4631)
!4778 = !DILocation(line: 1377, column: 4, scope: !4655)
!4779 = !DILocation(line: 0, scope: !4655)
!4780 = !DILocation(line: 1377, column: 4, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4655, file: !2551, line: 1377, column: 4)
!4782 = distinct !{!4782, !4775, !4783}
!4783 = !DILocation(line: 1839, column: 2, scope: !4631)
!4784 = !DILocation(line: 1392, column: 3, scope: !4658)
!4785 = !DILocation(line: 1395, column: 5, scope: !4658)
!4786 = !DILocation(line: 0, scope: !4658)
!4787 = !DILocation(line: 1409, column: 8, scope: !4658)
!4788 = !DILocation(line: 1414, column: 13, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4658, file: !2551, line: 1414, column: 7)
!4790 = !DILocation(line: 1414, column: 7, scope: !4658)
!4791 = !DILocation(line: 1415, column: 12, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4789, file: !2551, line: 1414, column: 25)
!4793 = !DILocation(line: 1417, column: 14, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4792, file: !2551, line: 1417, column: 8)
!4795 = !DILocation(line: 1417, column: 8, scope: !4792)
!4796 = !DILocation(line: 1418, column: 21, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4794, file: !2551, line: 1417, column: 19)
!4798 = !DILocation(line: 1419, column: 13, scope: !4797)
!4799 = !DILocation(line: 1420, column: 4, scope: !4797)
!4800 = !DILocation(line: 1421, column: 20, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4789, file: !2551, line: 1421, column: 14)
!4802 = !DILocation(line: 1421, column: 14, scope: !4789)
!4803 = !DILocation(line: 1431, column: 13, scope: !4718)
!4804 = !DILocation(line: 1431, column: 7, scope: !4658)
!4805 = !DILocation(line: 1432, column: 14, scope: !4717)
!4806 = !DILocation(line: 0, scope: !4717)
!4807 = !DILocation(line: 1434, column: 12, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4717, file: !2551, line: 1434, column: 8)
!4809 = !DILocation(line: 1434, column: 8, scope: !4717)
!4810 = !DILocation(line: 1435, column: 24, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4808, file: !2551, line: 1434, column: 17)
!4812 = !DILocation(line: 1436, column: 4, scope: !4811)
!4813 = !DILocation(line: 1439, column: 20, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4718, file: !2551, line: 1439, column: 14)
!4815 = !DILocation(line: 1439, column: 14, scope: !4718)
!4816 = !DILocation(line: 1469, column: 37, scope: !4658)
!4817 = !DILocation(line: 1448, column: 20, scope: !4658)
!4818 = !DILocation(line: 1449, column: 22, scope: !4658)
!4819 = !DILocation(line: 1471, column: 34, scope: !4658)
!4820 = !DILocation(line: 1478, column: 7, scope: !4658)
!4821 = !DILocation(line: 1479, column: 4, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4823, file: !2551, line: 1478, column: 40)
!4823 = distinct !DILexicalBlock(scope: !4658, file: !2551, line: 1478, column: 7)
!4824 = !DILocation(line: 1484, column: 19, scope: !4825)
!4825 = distinct !DILexicalBlock(scope: !4822, file: !2551, line: 1479, column: 24)
!4826 = !DILocation(line: 1484, column: 17, scope: !4825)
!4827 = !DILocation(line: 1485, column: 5, scope: !4825)
!4828 = !DILocation(line: 1492, column: 20, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4830, file: !2551, line: 1491, column: 12)
!4830 = distinct !DILexicalBlock(scope: !4825, file: !2551, line: 1487, column: 9)
!4831 = !DILocation(line: 1492, column: 18, scope: !4829)
!4832 = !DILocation(line: 1494, column: 5, scope: !4825)
!4833 = !DILocation(line: 1497, column: 23, scope: !4825)
!4834 = !DILocation(line: 1496, column: 17, scope: !4825)
!4835 = !DILocation(line: 1498, column: 5, scope: !4825)
!4836 = !DILocation(line: 1501, column: 23, scope: !4825)
!4837 = !DILocation(line: 1500, column: 17, scope: !4825)
!4838 = !DILocation(line: 1502, column: 5, scope: !4825)
!4839 = !DILocation(line: 1513, column: 23, scope: !4825)
!4840 = !DILocation(line: 1513, column: 6, scope: !4825)
!4841 = !DILocation(line: 1512, column: 17, scope: !4825)
!4842 = !DILocation(line: 1514, column: 5, scope: !4825)
!4843 = !DILocation(line: 0, scope: !4825)
!4844 = !DILocation(line: 1516, column: 8, scope: !4822)
!4845 = !DILocation(line: 1517, column: 19, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4847, file: !2551, line: 1516, column: 33)
!4847 = distinct !DILexicalBlock(scope: !4822, file: !2551, line: 1516, column: 8)
!4848 = !DILocation(line: 1517, column: 17, scope: !4846)
!4849 = !DILocation(line: 1518, column: 4, scope: !4846)
!4850 = !DILocation(line: 1519, column: 19, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4852, file: !2551, line: 1518, column: 39)
!4852 = distinct !DILexicalBlock(scope: !4847, file: !2551, line: 1518, column: 15)
!4853 = !DILocation(line: 1519, column: 17, scope: !4851)
!4854 = !DILocation(line: 1520, column: 4, scope: !4851)
!4855 = !DILocation(line: 1522, column: 4, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4857, file: !2551, line: 1521, column: 47)
!4857 = distinct !DILexicalBlock(scope: !4823, file: !2551, line: 1521, column: 14)
!4858 = !DILocation(line: 1527, column: 19, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4856, file: !2551, line: 1522, column: 24)
!4860 = !DILocation(line: 1527, column: 17, scope: !4859)
!4861 = !DILocation(line: 1528, column: 5, scope: !4859)
!4862 = !DILocation(line: 0, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4859, file: !2551, line: 1530, column: 9)
!4864 = !DILocation(line: 1540, column: 23, scope: !4859)
!4865 = !DILocation(line: 1539, column: 17, scope: !4859)
!4866 = !DILocation(line: 1542, column: 5, scope: !4859)
!4867 = !DILocation(line: 1545, column: 23, scope: !4859)
!4868 = !DILocation(line: 1544, column: 17, scope: !4859)
!4869 = !DILocation(line: 1547, column: 5, scope: !4859)
!4870 = !DILocation(line: 1551, column: 23, scope: !4859)
!4871 = !DILocation(line: 1551, column: 6, scope: !4859)
!4872 = !DILocation(line: 1550, column: 17, scope: !4859)
!4873 = !DILocation(line: 1552, column: 5, scope: !4859)
!4874 = !DILocation(line: 0, scope: !4859)
!4875 = !DILocation(line: 1554, column: 8, scope: !4856)
!4876 = !DILocation(line: 1555, column: 19, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4878, file: !2551, line: 1554, column: 33)
!4878 = distinct !DILexicalBlock(scope: !4856, file: !2551, line: 1554, column: 8)
!4879 = !DILocation(line: 1555, column: 17, scope: !4877)
!4880 = !DILocation(line: 1556, column: 4, scope: !4877)
!4881 = !DILocation(line: 1557, column: 19, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4883, file: !2551, line: 1556, column: 39)
!4883 = distinct !DILexicalBlock(scope: !4878, file: !2551, line: 1556, column: 15)
!4884 = !DILocation(line: 1557, column: 17, scope: !4882)
!4885 = !DILocation(line: 1558, column: 4, scope: !4882)
!4886 = !DILocation(line: 0, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4888, file: !2551, line: 1560, column: 8)
!4888 = distinct !DILexicalBlock(scope: !4889, file: !2551, line: 1559, column: 45)
!4889 = distinct !DILexicalBlock(scope: !4857, file: !2551, line: 1559, column: 14)
!4890 = !DILocation(line: 1566, column: 17, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4892, file: !2551, line: 1565, column: 46)
!4892 = distinct !DILexicalBlock(scope: !4889, file: !2551, line: 1565, column: 14)
!4893 = !DILocation(line: 1566, column: 15, scope: !4891)
!4894 = !DILocation(line: 1567, column: 3, scope: !4891)
!4895 = !DILocation(line: 1574, column: 21, scope: !4724)
!4896 = !DILocation(line: 1575, column: 4, scope: !4722)
!4897 = !DILocation(line: 0, scope: !4722)
!4898 = !DILocation(line: 1575, column: 4, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4722, file: !2551, line: 1575, column: 4)
!4900 = !DILocation(line: 1582, column: 17, scope: !4658)
!4901 = !DILocation(line: 1582, column: 3, scope: !4658)
!4902 = !DILocation(line: 1584, column: 4, scope: !4726)
!4903 = !DILocation(line: 0, scope: !4726)
!4904 = !DILocation(line: 1584, column: 4, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4726, file: !2551, line: 1584, column: 4)
!4906 = !DILocation(line: 1587, column: 31, scope: !4729)
!4907 = !DILocation(line: 1591, column: 18, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4729, file: !2551, line: 1591, column: 8)
!4909 = !DILocation(line: 1591, column: 8, scope: !4729)
!4910 = !DILocation(line: 1592, column: 11, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4908, file: !2551, line: 1591, column: 24)
!4912 = !DILocation(line: 0, scope: !4729)
!4913 = !DILocation(line: 1593, column: 4, scope: !4911)
!4914 = !DILocation(line: 1594, column: 11, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4908, file: !2551, line: 1593, column: 11)
!4916 = !DILocation(line: 1604, column: 51, scope: !4727)
!4917 = !DILocation(line: 1604, column: 13, scope: !4727)
!4918 = !DILocation(line: 1604, column: 11, scope: !4727)
!4919 = !DILocation(line: 1606, column: 4, scope: !4727)
!4920 = !DILocation(line: 1609, column: 14, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4727, file: !2551, line: 1609, column: 8)
!4922 = !DILocation(line: 1609, column: 8, scope: !4727)
!4923 = !DILocation(line: 1619, column: 18, scope: !4727)
!4924 = !DILocation(line: 1620, column: 13, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4727, file: !2551, line: 1620, column: 8)
!4926 = !DILocation(line: 1620, column: 8, scope: !4727)
!4927 = !DILocation(line: 1622, column: 36, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4925, file: !2551, line: 1620, column: 18)
!4929 = !DILocation(line: 1622, column: 17, scope: !4928)
!4930 = !DILocation(line: 1623, column: 4, scope: !4928)
!4931 = !DILocation(line: 1632, column: 29, scope: !4727)
!4932 = !DILocation(line: 1632, column: 10, scope: !4727)
!4933 = !DILocation(line: 1632, column: 4, scope: !4727)
!4934 = !DILocation(line: 1407, column: 8, scope: !4658)
!4935 = !DILocation(line: 0, scope: !4727)
!4936 = !DILocation(line: 1634, column: 3, scope: !4727)
!4937 = !DILocation(line: 1640, column: 18, scope: !4732)
!4938 = !DILocation(line: 1640, column: 8, scope: !4727)
!4939 = !DILocation(line: 1729, column: 13, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4658, file: !2551, line: 1729, column: 7)
!4941 = !DILocation(line: 1641, column: 22, scope: !4731)
!4942 = !DILocation(line: 0, scope: !4731)
!4943 = !DILocation(line: 1646, column: 21, scope: !4731)
!4944 = !DILocation(line: 1649, column: 13, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4731, file: !2551, line: 1649, column: 9)
!4946 = !DILocation(line: 1649, column: 9, scope: !4731)
!4947 = !DILocation(line: 1650, column: 35, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4945, file: !2551, line: 1649, column: 34)
!4949 = !DILocation(line: 1650, column: 23, scope: !4948)
!4950 = !DILocation(line: 1651, column: 5, scope: !4948)
!4951 = !DILocation(line: 1660, column: 15, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4727, file: !2551, line: 1660, column: 8)
!4953 = !DILocation(line: 1660, column: 19, scope: !4952)
!4954 = !DILocation(line: 1660, column: 8, scope: !4727)
!4955 = !DILocation(line: 1661, column: 23, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4952, file: !2551, line: 1660, column: 28)
!4957 = !DILocation(line: 1661, column: 11, scope: !4956)
!4958 = !DILocation(line: 1665, column: 22, scope: !4956)
!4959 = !DILocation(line: 1666, column: 21, scope: !4956)
!4960 = !DILocation(line: 1668, column: 5, scope: !4956)
!4961 = !DILocation(line: 1677, column: 30, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4963, file: !2551, line: 1676, column: 49)
!4963 = distinct !DILexicalBlock(scope: !4727, file: !2551, line: 1676, column: 8)
!4964 = !DILocation(line: 1677, column: 5, scope: !4962)
!4965 = !DILocation(line: 1680, column: 4, scope: !4727)
!4966 = !DILocation(line: 0, scope: !4908)
!4967 = !DILocation(line: 1597, column: 14, scope: !4729)
!4968 = !DILocation(line: 1699, column: 11, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4658, file: !2551, line: 1699, column: 7)
!4970 = !DILocation(line: 1699, column: 7, scope: !4658)
!4971 = !DILocation(line: 1725, column: 7, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4658, file: !2551, line: 1725, column: 7)
!4973 = !DILocation(line: 1725, column: 12, scope: !4972)
!4974 = !DILocation(line: 1747, column: 13, scope: !4739)
!4975 = !DILocation(line: 1747, column: 7, scope: !4658)
!4976 = !DILocation(line: 1722, column: 24, scope: !4658)
!4977 = !DILocation(line: 1725, column: 7, scope: !4658)
!4978 = !DILocation(line: 1729, column: 7, scope: !4658)
!4979 = !DILocation(line: 1736, column: 13, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4658, file: !2551, line: 1736, column: 7)
!4981 = !DILocation(line: 1735, column: 19, scope: !4658)
!4982 = !DILocation(line: 1736, column: 7, scope: !4658)
!4983 = !DILocation(line: 1748, column: 10, scope: !4738)
!4984 = !DILocation(line: 1750, column: 15, scope: !4737)
!4985 = !DILocation(line: 1750, column: 8, scope: !4738)
!4986 = !DILocation(line: 0, scope: !4736)
!4987 = !DILocation(line: 1756, column: 15, scope: !4745)
!4988 = !DILocation(line: 1756, column: 9, scope: !4736)
!4989 = !DILocation(line: 1758, column: 7, scope: !4741)
!4990 = !DILocation(line: 0, scope: !4741)
!4991 = !DILocation(line: 1758, column: 7, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4741, file: !2551, line: 1758, column: 7)
!4993 = !DILocation(line: 1764, column: 5, scope: !4736)
!4994 = !DILocation(line: 0, scope: !4738)
!4995 = !DILocation(line: 1764, column: 20, scope: !4736)
!4996 = !DILocation(line: 1764, column: 17, scope: !4736)
!4997 = !DILocation(line: 1765, column: 6, scope: !4747)
!4998 = !DILocation(line: 0, scope: !4747)
!4999 = !DILocation(line: 1765, column: 6, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4747, file: !2551, line: 1765, column: 6)
!5001 = distinct !{!5001, !4993, !5002}
!5002 = !DILocation(line: 1766, column: 5, scope: !4736)
!5003 = !DILocation(line: 1773, column: 12, scope: !4752)
!5004 = !DILocation(line: 1773, column: 7, scope: !4658)
!5005 = !DILocation(line: 1773, column: 7, scope: !4752)
!5006 = !DILocation(line: 1774, column: 4, scope: !4750)
!5007 = !DILocation(line: 0, scope: !4750)
!5008 = !DILocation(line: 1774, column: 4, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !4750, file: !2551, line: 1774, column: 4)
!5010 = !DILocation(line: 1818, column: 8, scope: !4756)
!5011 = !DILocation(line: 1818, column: 27, scope: !4756)
!5012 = !DILocation(line: 1818, column: 25, scope: !4756)
!5013 = !DILocation(line: 1818, column: 8, scope: !4757)
!5014 = !DILocation(line: 1819, column: 5, scope: !4754)
!5015 = !DILocation(line: 0, scope: !4754)
!5016 = !DILocation(line: 1819, column: 5, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !4754, file: !2551, line: 1819, column: 5)
!5018 = !DILocation(line: 1822, column: 14, scope: !4762)
!5019 = !DILocation(line: 1822, column: 8, scope: !4757)
!5020 = !DILocation(line: 1823, column: 5, scope: !4760)
!5021 = !DILocation(line: 0, scope: !4760)
!5022 = !DILocation(line: 1823, column: 5, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !4760, file: !2551, line: 1823, column: 5)
!5024 = !DILocation(line: 1826, column: 20, scope: !4757)
!5025 = !DILocation(line: 1827, column: 4, scope: !4757)
!5026 = !DILocation(line: 0, scope: !4757)
!5027 = !DILocation(line: 1827, column: 21, scope: !4757)
!5028 = !DILocation(line: 1827, column: 18, scope: !4757)
!5029 = !DILocation(line: 1828, column: 5, scope: !4764)
!5030 = !DILocation(line: 0, scope: !4764)
!5031 = !DILocation(line: 1828, column: 5, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !4764, file: !2551, line: 1828, column: 5)
!5033 = distinct !{!5033, !5025, !5034}
!5034 = !DILocation(line: 1829, column: 4, scope: !4757)
!5035 = !DILocation(line: 1831, column: 4, scope: !4767)
!5036 = !DILocation(line: 0, scope: !4767)
!5037 = !DILocation(line: 1831, column: 4, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !4767, file: !2551, line: 1831, column: 4)
!5039 = !DILocation(line: 1835, column: 16, scope: !4658)
!5040 = !DILocation(line: 1835, column: 3, scope: !4658)
!5041 = !DILocation(line: 1836, column: 4, scope: !4769)
!5042 = !DILocation(line: 0, scope: !4769)
!5043 = !DILocation(line: 1836, column: 4, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !4769, file: !2551, line: 1836, column: 4)
!5045 = !DILocation(line: 1837, column: 4, scope: !4770)
!5046 = distinct !{!5046, !5040, !5047}
!5047 = !DILocation(line: 1838, column: 3, scope: !4658)
!5048 = !DILocation(line: 1844, column: 1, scope: !4631)
!5049 = distinct !DISubprogram(name: "extract_conversion", scope: !2551, file: !2551, line: 642, type: !5050, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !5052)
!5050 = !DISubroutineType(types: !5051)
!5051 = !{!123, !4706, !123}
!5052 = !{!5053, !5054}
!5053 = !DILocalVariable(name: "conv", arg: 1, scope: !5049, file: !2551, line: 642, type: !4706)
!5054 = !DILocalVariable(name: "sp", arg: 2, scope: !5049, file: !2551, line: 643, type: !123)
!5055 = !DILocation(line: 0, scope: !5049)
!5056 = !DILocation(line: 645, column: 10, scope: !5049)
!5057 = !DILocation(line: 653, column: 2, scope: !5049)
!5058 = !DILocation(line: 654, column: 6, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5049, file: !2551, line: 654, column: 6)
!5060 = !DILocation(line: 654, column: 10, scope: !5059)
!5061 = !DILocation(line: 654, column: 6, scope: !5049)
!5062 = !DILocation(line: 655, column: 24, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5059, file: !2551, line: 654, column: 18)
!5064 = !DILocation(line: 655, column: 19, scope: !5063)
!5065 = !DILocation(line: 656, column: 3, scope: !5063)
!5066 = !DILocation(line: 659, column: 7, scope: !5049)
!5067 = !DILocation(line: 660, column: 7, scope: !5049)
!5068 = !DILocation(line: 661, column: 7, scope: !5049)
!5069 = !DILocation(line: 662, column: 7, scope: !5049)
!5070 = !DILocation(line: 663, column: 7, scope: !5049)
!5071 = !DILocation(line: 665, column: 2, scope: !5049)
!5072 = !DILocation(line: 666, column: 1, scope: !5049)
!5073 = distinct !DISubprogram(name: "outs", scope: !2551, file: !2551, line: 1319, type: !5074, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !5076)
!5074 = !DISubroutineType(types: !5075)
!5075 = !{!107, !3621, !102, !123, !123}
!5076 = !{!5077, !5078, !5079, !5080, !5081, !5082}
!5077 = !DILocalVariable(name: "out", arg: 1, scope: !5073, file: !2551, line: 1319, type: !3621)
!5078 = !DILocalVariable(name: "ctx", arg: 2, scope: !5073, file: !2551, line: 1320, type: !102)
!5079 = !DILocalVariable(name: "sp", arg: 3, scope: !5073, file: !2551, line: 1321, type: !123)
!5080 = !DILocalVariable(name: "ep", arg: 4, scope: !5073, file: !2551, line: 1322, type: !123)
!5081 = !DILocalVariable(name: "count", scope: !5073, file: !2551, line: 1324, type: !252)
!5082 = !DILocalVariable(name: "rc", scope: !5083, file: !2551, line: 1327, type: !107)
!5083 = distinct !DILexicalBlock(scope: !5073, file: !2551, line: 1326, column: 45)
!5084 = !DILocation(line: 0, scope: !5073)
!5085 = !DILocation(line: 1326, column: 2, scope: !5073)
!5086 = !DILocation(line: 1324, column: 9, scope: !5073)
!5087 = !DILocation(line: 1326, column: 13, scope: !5073)
!5088 = !DILocation(line: 1326, column: 19, scope: !5073)
!5089 = !DILocation(line: 1327, column: 21, scope: !5083)
!5090 = !DILocation(line: 1326, column: 36, scope: !5073)
!5091 = !DILocation(line: 1326, column: 39, scope: !5073)
!5092 = !DILocation(line: 1327, column: 24, scope: !5083)
!5093 = !DILocation(line: 1327, column: 16, scope: !5083)
!5094 = !DILocation(line: 1327, column: 12, scope: !5083)
!5095 = !DILocation(line: 0, scope: !5083)
!5096 = !DILocation(line: 1329, column: 10, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5083, file: !2551, line: 1329, column: 7)
!5098 = !DILocation(line: 1329, column: 7, scope: !5083)
!5099 = distinct !{!5099, !5085, !5100}
!5100 = !DILocation(line: 1333, column: 2, scope: !5073)
!5101 = !DILocation(line: 1336, column: 1, scope: !5073)
!5102 = distinct !DISubprogram(name: "encode_uint", scope: !2551, file: !2551, line: 788, type: !5103, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !5105)
!5103 = !DISubroutineType(types: !5104)
!5104 = !{!256, !2573, !4706, !256, !123}
!5105 = !{!5106, !5107, !5108, !5109, !5110, !5111, !5113, !5114}
!5106 = !DILocalVariable(name: "value", arg: 1, scope: !5102, file: !2551, line: 788, type: !2573)
!5107 = !DILocalVariable(name: "conv", arg: 2, scope: !5102, file: !2551, line: 789, type: !4706)
!5108 = !DILocalVariable(name: "bps", arg: 3, scope: !5102, file: !2551, line: 790, type: !256)
!5109 = !DILocalVariable(name: "bpe", arg: 4, scope: !5102, file: !2551, line: 791, type: !123)
!5110 = !DILocalVariable(name: "upcase", scope: !5102, file: !2551, line: 793, type: !136)
!5111 = !DILocalVariable(name: "radix", scope: !5102, file: !2551, line: 794, type: !5112)
!5112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5113 = !DILocalVariable(name: "bp", scope: !5102, file: !2551, line: 795, type: !256)
!5114 = !DILocalVariable(name: "lsv", scope: !5115, file: !2551, line: 798, type: !32)
!5115 = distinct !DILexicalBlock(scope: !5102, file: !2551, line: 797, column: 5)
!5116 = !DILocation(line: 0, scope: !5102)
!5117 = !DILocation(line: 793, column: 35, scope: !5102)
!5118 = !DILocation(line: 793, column: 24, scope: !5102)
!5119 = !DILocation(line: 793, column: 16, scope: !5102)
!5120 = !DILocation(line: 794, column: 29, scope: !5102)
!5121 = !DILocation(line: 795, column: 24, scope: !5102)
!5122 = !DILocation(line: 795, column: 17, scope: !5102)
!5123 = !DILocation(line: 797, column: 2, scope: !5102)
!5124 = !DILocation(line: 802, column: 9, scope: !5115)
!5125 = !DILocation(line: 798, column: 22, scope: !5115)
!5126 = !DILocation(line: 0, scope: !5115)
!5127 = !DILocation(line: 800, column: 16, scope: !5115)
!5128 = !DILocation(line: 800, column: 11, scope: !5115)
!5129 = !DILocation(line: 800, column: 4, scope: !5115)
!5130 = !DILocation(line: 800, column: 9, scope: !5115)
!5131 = !DILocation(line: 803, column: 18, scope: !5102)
!5132 = !DILocation(line: 803, column: 24, scope: !5102)
!5133 = !DILocation(line: 803, column: 2, scope: !5115)
!5134 = distinct !{!5134, !5123, !5135}
!5135 = !DILocation(line: 803, column: 37, scope: !5102)
!5136 = !DILocation(line: 808, column: 12, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5102, file: !2551, line: 808, column: 6)
!5138 = !DILocation(line: 808, column: 6, scope: !5102)
!5139 = !DILocation(line: 809, column: 7, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5137, file: !2551, line: 808, column: 23)
!5141 = !DILocation(line: 813, column: 3, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5143, file: !2551, line: 811, column: 27)
!5143 = distinct !DILexicalBlock(scope: !5144, file: !2551, line: 811, column: 14)
!5144 = distinct !DILexicalBlock(scope: !5140, file: !2551, line: 809, column: 7)
!5145 = !DILocation(line: 0, scope: !5144)
!5146 = !DILocation(line: 818, column: 2, scope: !5102)
!5147 = distinct !DISubprogram(name: "store_count", scope: !2551, file: !2551, line: 1280, type: !5148, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !5152)
!5148 = !DISubroutineType(types: !5149)
!5149 = !{null, !5150, !102, !107}
!5150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5151, size: 32)
!5151 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4673)
!5152 = !{!5153, !5154, !5155}
!5153 = !DILocalVariable(name: "conv", arg: 1, scope: !5147, file: !2551, line: 1280, type: !5150)
!5154 = !DILocalVariable(name: "dp", arg: 2, scope: !5147, file: !2551, line: 1281, type: !102)
!5155 = !DILocalVariable(name: "count", arg: 3, scope: !5147, file: !2551, line: 1282, type: !107)
!5156 = !DILocation(line: 0, scope: !5147)
!5157 = !DILocation(line: 1284, column: 38, scope: !5147)
!5158 = !DILocation(line: 1284, column: 2, scope: !5147)
!5159 = !DILocation(line: 1286, column: 4, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5147, file: !2551, line: 1284, column: 50)
!5161 = !DILocation(line: 1286, column: 14, scope: !5160)
!5162 = !DILocation(line: 1287, column: 3, scope: !5160)
!5163 = !DILocation(line: 1289, column: 24, scope: !5160)
!5164 = !DILocation(line: 1289, column: 22, scope: !5160)
!5165 = !DILocation(line: 1290, column: 3, scope: !5160)
!5166 = !DILocation(line: 1292, column: 18, scope: !5160)
!5167 = !DILocation(line: 1292, column: 4, scope: !5160)
!5168 = !DILocation(line: 1292, column: 16, scope: !5160)
!5169 = !DILocation(line: 1293, column: 3, scope: !5160)
!5170 = !DILocation(line: 1295, column: 4, scope: !5160)
!5171 = !DILocation(line: 1295, column: 15, scope: !5160)
!5172 = !DILocation(line: 1296, column: 3, scope: !5160)
!5173 = !DILocation(line: 1298, column: 22, scope: !5160)
!5174 = !DILocation(line: 1298, column: 4, scope: !5160)
!5175 = !DILocation(line: 1298, column: 20, scope: !5160)
!5176 = !DILocation(line: 1299, column: 3, scope: !5160)
!5177 = !DILocation(line: 1301, column: 21, scope: !5160)
!5178 = !DILocation(line: 1301, column: 4, scope: !5160)
!5179 = !DILocation(line: 1301, column: 19, scope: !5160)
!5180 = !DILocation(line: 1302, column: 3, scope: !5160)
!5181 = !DILocation(line: 1304, column: 4, scope: !5160)
!5182 = !DILocation(line: 1304, column: 17, scope: !5160)
!5183 = !DILocation(line: 1305, column: 3, scope: !5160)
!5184 = !DILocation(line: 1307, column: 4, scope: !5160)
!5185 = !DILocation(line: 1307, column: 20, scope: !5160)
!5186 = !DILocation(line: 1308, column: 3, scope: !5160)
!5187 = !DILocation(line: 1316, column: 1, scope: !5147)
!5188 = distinct !DISubprogram(name: "isupper", scope: !5189, file: !5189, line: 16, type: !270, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !5190)
!5189 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5190 = !{!5191}
!5191 = !DILocalVariable(name: "a", arg: 1, scope: !5188, file: !5189, line: 16, type: !107)
!5192 = !DILocation(line: 0, scope: !5188)
!5193 = !DILocation(line: 18, column: 29, scope: !5188)
!5194 = !DILocation(line: 18, column: 45, scope: !5188)
!5195 = !DILocation(line: 18, column: 2, scope: !5188)
!5196 = distinct !DISubprogram(name: "conversion_radix", scope: !2551, file: !2551, line: 761, type: !5197, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !5199)
!5197 = !DISubroutineType(types: !5198)
!5198 = !{!252, !125}
!5199 = !{!5200}
!5200 = !DILocalVariable(name: "specifier", arg: 1, scope: !5196, file: !2551, line: 761, type: !125)
!5201 = !DILocation(line: 0, scope: !5196)
!5202 = !DILocation(line: 763, column: 2, scope: !5196)
!5203 = !DILocation(line: 770, column: 3, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5196, file: !2551, line: 763, column: 21)
!5205 = !DILocation(line: 774, column: 3, scope: !5204)
!5206 = !DILocation(line: 0, scope: !5204)
!5207 = !DILocation(line: 776, column: 1, scope: !5196)
!5208 = distinct !DISubprogram(name: "extract_flags", scope: !2551, file: !2551, line: 339, type: !5050, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !5209)
!5209 = !{!5210, !5211, !5212}
!5210 = !DILocalVariable(name: "conv", arg: 1, scope: !5208, file: !2551, line: 339, type: !4706)
!5211 = !DILocalVariable(name: "sp", arg: 2, scope: !5208, file: !2551, line: 340, type: !123)
!5212 = !DILocalVariable(name: "loop", scope: !5208, file: !2551, line: 342, type: !136)
!5213 = !DILocation(line: 0, scope: !5208)
!5214 = !DILocation(line: 344, column: 2, scope: !5208)
!5215 = !DILocation(line: 345, column: 11, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5208, file: !2551, line: 344, column: 5)
!5217 = !DILocation(line: 345, column: 3, scope: !5216)
!5218 = !DILocation(line: 351, column: 4, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5216, file: !2551, line: 345, column: 16)
!5220 = !DILocation(line: 354, column: 4, scope: !5219)
!5221 = !DILocation(line: 357, column: 4, scope: !5219)
!5222 = !DILocation(line: 360, column: 4, scope: !5219)
!5223 = !DILocation(line: 0, scope: !5219)
!5224 = !DILocation(line: 370, column: 12, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5208, file: !2551, line: 370, column: 6)
!5226 = !DILocation(line: 370, column: 22, scope: !5225)
!5227 = !DILocation(line: 371, column: 19, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5225, file: !2551, line: 370, column: 42)
!5229 = !DILocation(line: 372, column: 2, scope: !5228)
!5230 = !DILocation(line: 376, column: 2, scope: !5208)
!5231 = distinct !DISubprogram(name: "extract_width", scope: !2551, file: !2551, line: 388, type: !5050, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !5232)
!5232 = !{!5233, !5234, !5235, !5236}
!5233 = !DILocalVariable(name: "conv", arg: 1, scope: !5231, file: !2551, line: 388, type: !4706)
!5234 = !DILocalVariable(name: "sp", arg: 2, scope: !5231, file: !2551, line: 389, type: !123)
!5235 = !DILocalVariable(name: "wp", scope: !5231, file: !2551, line: 398, type: !123)
!5236 = !DILocalVariable(name: "width", scope: !5231, file: !2551, line: 399, type: !252)
!5237 = !DILocation(line: 0, scope: !5231)
!5238 = !DILocation(line: 391, column: 8, scope: !5231)
!5239 = !DILocation(line: 391, column: 22, scope: !5231)
!5240 = !DILocation(line: 393, column: 6, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5231, file: !2551, line: 393, column: 6)
!5242 = !DILocation(line: 393, column: 10, scope: !5241)
!5243 = !DILocation(line: 393, column: 6, scope: !5231)
!5244 = !DILocation(line: 394, column: 20, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5241, file: !2551, line: 393, column: 18)
!5246 = !DILocation(line: 395, column: 10, scope: !5245)
!5247 = !DILocation(line: 395, column: 3, scope: !5245)
!5248 = !DILocation(line: 399, column: 17, scope: !5231)
!5249 = !DILocation(line: 401, column: 6, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5231, file: !2551, line: 401, column: 6)
!5251 = !DILocation(line: 401, column: 9, scope: !5250)
!5252 = !DILocation(line: 401, column: 6, scope: !5231)
!5253 = !DILocation(line: 402, column: 23, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5250, file: !2551, line: 401, column: 16)
!5255 = !DILocation(line: 403, column: 9, scope: !5254)
!5256 = !DILocation(line: 403, column: 21, scope: !5254)
!5257 = !DILocation(line: 405, column: 11, scope: !5254)
!5258 = !DILocation(line: 404, column: 21, scope: !5254)
!5259 = !DILocation(line: 406, column: 2, scope: !5254)
!5260 = !DILocation(line: 409, column: 1, scope: !5231)
!5261 = distinct !DISubprogram(name: "extract_prec", scope: !2551, file: !2551, line: 420, type: !5050, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !5262)
!5262 = !{!5263, !5264, !5265}
!5263 = !DILocalVariable(name: "conv", arg: 1, scope: !5261, file: !2551, line: 420, type: !4706)
!5264 = !DILocalVariable(name: "sp", arg: 2, scope: !5261, file: !2551, line: 421, type: !123)
!5265 = !DILocalVariable(name: "prec", scope: !5261, file: !2551, line: 435, type: !252)
!5266 = !DILocation(line: 0, scope: !5261)
!5267 = !DILocation(line: 423, column: 24, scope: !5261)
!5268 = !DILocation(line: 423, column: 28, scope: !5261)
!5269 = !DILocation(line: 423, column: 8, scope: !5261)
!5270 = !DILocation(line: 423, column: 21, scope: !5261)
!5271 = !DILocation(line: 425, column: 6, scope: !5261)
!5272 = !DILocation(line: 428, column: 2, scope: !5261)
!5273 = !DILocation(line: 430, column: 6, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5261, file: !2551, line: 430, column: 6)
!5275 = !DILocation(line: 430, column: 10, scope: !5274)
!5276 = !DILocation(line: 430, column: 6, scope: !5261)
!5277 = !DILocation(line: 431, column: 19, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5274, file: !2551, line: 430, column: 18)
!5279 = !DILocation(line: 432, column: 10, scope: !5278)
!5280 = !DILocation(line: 432, column: 3, scope: !5278)
!5281 = !DILocation(line: 435, column: 16, scope: !5261)
!5282 = !DILocation(line: 437, column: 8, scope: !5261)
!5283 = !DILocation(line: 437, column: 19, scope: !5261)
!5284 = !DILocation(line: 439, column: 10, scope: !5261)
!5285 = !DILocation(line: 438, column: 20, scope: !5261)
!5286 = !DILocation(line: 441, column: 9, scope: !5261)
!5287 = !DILocation(line: 442, column: 1, scope: !5261)
!5288 = distinct !DISubprogram(name: "extract_length", scope: !2551, file: !2551, line: 453, type: !5050, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !5289)
!5289 = !{!5290, !5291}
!5290 = !DILocalVariable(name: "conv", arg: 1, scope: !5288, file: !2551, line: 453, type: !4706)
!5291 = !DILocalVariable(name: "sp", arg: 2, scope: !5288, file: !2551, line: 454, type: !123)
!5292 = !DILocation(line: 0, scope: !5288)
!5293 = !DILocation(line: 456, column: 10, scope: !5288)
!5294 = !DILocation(line: 456, column: 2, scope: !5288)
!5295 = !DILocation(line: 458, column: 8, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5297, file: !2551, line: 458, column: 7)
!5297 = distinct !DILexicalBlock(scope: !5288, file: !2551, line: 456, column: 15)
!5298 = !DILocation(line: 458, column: 7, scope: !5296)
!5299 = !DILocation(line: 458, column: 13, scope: !5296)
!5300 = !DILocation(line: 0, scope: !5296)
!5301 = !DILocation(line: 458, column: 7, scope: !5297)
!5302 = !DILocation(line: 459, column: 21, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5296, file: !2551, line: 458, column: 21)
!5304 = !DILocation(line: 460, column: 4, scope: !5303)
!5305 = !DILocation(line: 461, column: 3, scope: !5303)
!5306 = !DILocation(line: 462, column: 21, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5296, file: !2551, line: 461, column: 10)
!5308 = !DILocation(line: 466, column: 8, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5297, file: !2551, line: 466, column: 7)
!5310 = !DILocation(line: 466, column: 7, scope: !5309)
!5311 = !DILocation(line: 466, column: 13, scope: !5309)
!5312 = !DILocation(line: 0, scope: !5309)
!5313 = !DILocation(line: 466, column: 7, scope: !5297)
!5314 = !DILocation(line: 467, column: 21, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5309, file: !2551, line: 466, column: 21)
!5316 = !DILocation(line: 468, column: 4, scope: !5315)
!5317 = !DILocation(line: 469, column: 3, scope: !5315)
!5318 = !DILocation(line: 470, column: 21, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5309, file: !2551, line: 469, column: 10)
!5320 = !DILocation(line: 474, column: 9, scope: !5297)
!5321 = !DILocation(line: 474, column: 20, scope: !5297)
!5322 = !DILocation(line: 475, column: 3, scope: !5297)
!5323 = !DILocation(line: 476, column: 3, scope: !5297)
!5324 = !DILocation(line: 478, column: 9, scope: !5297)
!5325 = !DILocation(line: 478, column: 20, scope: !5297)
!5326 = !DILocation(line: 479, column: 3, scope: !5297)
!5327 = !DILocation(line: 480, column: 3, scope: !5297)
!5328 = !DILocation(line: 482, column: 9, scope: !5297)
!5329 = !DILocation(line: 482, column: 20, scope: !5297)
!5330 = !DILocation(line: 483, column: 3, scope: !5297)
!5331 = !DILocation(line: 484, column: 3, scope: !5297)
!5332 = !DILocation(line: 486, column: 9, scope: !5297)
!5333 = !DILocation(line: 486, column: 20, scope: !5297)
!5334 = !DILocation(line: 487, column: 3, scope: !5297)
!5335 = !DILocation(line: 492, column: 21, scope: !5297)
!5336 = !DILocation(line: 493, column: 3, scope: !5297)
!5337 = !DILocation(line: 495, column: 9, scope: !5297)
!5338 = !DILocation(line: 495, column: 20, scope: !5297)
!5339 = !DILocation(line: 496, column: 3, scope: !5297)
!5340 = !DILocation(line: 498, column: 2, scope: !5288)
!5341 = distinct !DISubprogram(name: "extract_specifier", scope: !2551, file: !2551, line: 513, type: !5050, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !5342)
!5342 = !{!5343, !5344, !5345, !5346}
!5343 = !DILocalVariable(name: "conv", arg: 1, scope: !5341, file: !2551, line: 513, type: !4706)
!5344 = !DILocalVariable(name: "sp", arg: 2, scope: !5341, file: !2551, line: 514, type: !123)
!5345 = !DILocalVariable(name: "unsupported", scope: !5341, file: !2551, line: 516, type: !136)
!5346 = !DILabel(scope: !5347, name: "int_conv", file: !2551, line: 526)
!5347 = distinct !DILexicalBlock(scope: !5341, file: !2551, line: 520, column: 27)
!5348 = !DILocation(line: 0, scope: !5341)
!5349 = !DILocation(line: 518, column: 20, scope: !5341)
!5350 = !DILocation(line: 518, column: 8, scope: !5341)
!5351 = !DILocation(line: 518, column: 18, scope: !5341)
!5352 = !DILocation(line: 520, column: 2, scope: !5341)
!5353 = !DILocation(line: 525, column: 3, scope: !5347)
!5354 = !DILocation(line: 0, scope: !5347)
!5355 = !DILocation(line: 526, column: 1, scope: !5347)
!5356 = !DILocation(line: 528, column: 24, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5347, file: !2551, line: 528, column: 7)
!5358 = !DILocation(line: 528, column: 7, scope: !5347)
!5359 = !DILocation(line: 535, column: 23, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5347, file: !2551, line: 535, column: 7)
!5361 = !DILocation(line: 535, column: 7, scope: !5347)
!5362 = !DILocation(line: 536, column: 36, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5360, file: !2551, line: 535, column: 31)
!5364 = !DILocation(line: 537, column: 3, scope: !5363)
!5365 = !DILocation(line: 570, column: 9, scope: !5347)
!5366 = !DILocation(line: 570, column: 23, scope: !5347)
!5367 = !DILocation(line: 575, column: 4, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5369, file: !2551, line: 573, column: 48)
!5369 = distinct !DILexicalBlock(scope: !5347, file: !2551, line: 573, column: 7)
!5370 = !DILocation(line: 603, column: 9, scope: !5347)
!5371 = !DILocation(line: 603, column: 23, scope: !5347)
!5372 = !DILocation(line: 605, column: 24, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5347, file: !2551, line: 605, column: 7)
!5374 = !DILocation(line: 605, column: 7, scope: !5347)
!5375 = !DILocation(line: 612, column: 9, scope: !5347)
!5376 = !DILocation(line: 612, column: 23, scope: !5347)
!5377 = !DILocation(line: 619, column: 24, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5347, file: !2551, line: 619, column: 7)
!5379 = !DILocation(line: 619, column: 7, scope: !5347)
!5380 = !DILocation(line: 625, column: 9, scope: !5347)
!5381 = !DILocation(line: 625, column: 17, scope: !5347)
!5382 = !DILocation(line: 626, column: 3, scope: !5347)
!5383 = !DILocation(line: 629, column: 20, scope: !5341)
!5384 = !DILocation(line: 629, column: 8, scope: !5341)
!5385 = !DILocation(line: 518, column: 23, scope: !5341)
!5386 = !DILocation(line: 631, column: 2, scope: !5341)
!5387 = distinct !DISubprogram(name: "extract_decimal", scope: !2551, file: !2551, line: 318, type: !5388, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !5391)
!5388 = !DISubroutineType(types: !5389)
!5389 = !{!252, !5390}
!5390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 32)
!5391 = !{!5392, !5393, !5394}
!5392 = !DILocalVariable(name: "str", arg: 1, scope: !5387, file: !2551, line: 318, type: !5390)
!5393 = !DILocalVariable(name: "sp", scope: !5387, file: !2551, line: 320, type: !123)
!5394 = !DILocalVariable(name: "val", scope: !5387, file: !2551, line: 321, type: !252)
!5395 = !DILocation(line: 0, scope: !5387)
!5396 = !DILocation(line: 320, column: 19, scope: !5387)
!5397 = !DILocation(line: 323, column: 37, scope: !5387)
!5398 = !DILocation(line: 323, column: 17, scope: !5387)
!5399 = !DILocation(line: 323, column: 9, scope: !5387)
!5400 = !DILocation(line: 323, column: 2, scope: !5387)
!5401 = !DILocation(line: 324, column: 13, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5387, file: !2551, line: 323, column: 43)
!5403 = !DILocation(line: 324, column: 24, scope: !5402)
!5404 = !DILocation(line: 324, column: 19, scope: !5402)
!5405 = !DILocation(line: 324, column: 27, scope: !5402)
!5406 = distinct !{!5406, !5400, !5407}
!5407 = !DILocation(line: 325, column: 2, scope: !5387)
!5408 = !DILocation(line: 326, column: 7, scope: !5387)
!5409 = !DILocation(line: 327, column: 2, scope: !5387)
!5410 = distinct !DISubprogram(name: "isdigit", scope: !5189, file: !5189, line: 43, type: !270, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !5411)
!5411 = !{!5412}
!5412 = !DILocalVariable(name: "a", arg: 1, scope: !5410, file: !5189, line: 43, type: !107)
!5413 = !DILocation(line: 0, scope: !5410)
!5414 = !DILocation(line: 45, column: 29, scope: !5410)
!5415 = !DILocation(line: 45, column: 45, scope: !5410)
!5416 = !DILocation(line: 45, column: 2, scope: !5410)
!5417 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5418, file: !5418, line: 9, type: !3211, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2585, retainedNodes: !250)
!5418 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!5419 = !DILocation(line: 11, column: 1, scope: !5417)
!5420 = !{i64 2147561669, i64 2147561712, i64 2147561752}
!5421 = !DILocation(line: 12, column: 1, scope: !5417)
!5422 = !{i64 2147565896, i64 2147565939, i64 2147565979}
!5423 = !DILocation(line: 13, column: 1, scope: !5417)
!5424 = !{i64 2147566105, i64 2147566148, i64 2147566188}
!5425 = !DILocation(line: 14, column: 1, scope: !5417)
!5426 = !{i64 2147566322, i64 2147566365, i64 2147566405}
!5427 = !DILocation(line: 15, column: 1, scope: !5417)
!5428 = !{i64 2147566491, i64 2147566534, i64 2147566574}
!5429 = !DILocation(line: 16, column: 1, scope: !5417)
!5430 = !{i64 2147566654, i64 2147566697, i64 2147566737}
!5431 = !DILocation(line: 17, column: 1, scope: !5417)
!5432 = !{i64 2147566838, i64 2147566881, i64 2147566921}
!5433 = !DILocation(line: 18, column: 1, scope: !5417)
!5434 = !{i64 2147567017, i64 2147567060, i64 2147567100}
!5435 = !DILocation(line: 19, column: 1, scope: !5417)
!5436 = !{i64 2147567259, i64 2147567302, i64 2147567342}
!5437 = !DILocation(line: 20, column: 1, scope: !5417)
!5438 = !{i64 2147567494, i64 2147567537, i64 2147567577}
!5439 = !DILocation(line: 21, column: 1, scope: !5417)
!5440 = !{i64 2147567680, i64 2147567723, i64 2147567763}
!5441 = !DILocation(line: 22, column: 1, scope: !5417)
!5442 = !{i64 2147567896, i64 2147567939, i64 2147567979}
!5443 = !DILocation(line: 23, column: 1, scope: !5417)
!5444 = !{i64 2147568099, i64 2147568142, i64 2147568182}
!5445 = !DILocation(line: 24, column: 1, scope: !5417)
!5446 = !{i64 2147568302, i64 2147568345, i64 2147568385}
!5447 = !DILocation(line: 25, column: 1, scope: !5417)
!5448 = !{i64 2147568477, i64 2147568520, i64 2147568560}
!5449 = !DILocation(line: 26, column: 1, scope: !5417)
!5450 = !{i64 2147568685, i64 2147568728, i64 2147568768}
!5451 = !DILocation(line: 27, column: 1, scope: !5417)
!5452 = !{i64 2147568889, i64 2147568932, i64 2147568972}
!5453 = !DILocation(line: 28, column: 1, scope: !5417)
!5454 = !{i64 2147569082, i64 2147569125, i64 2147569165}
!5455 = !DILocation(line: 29, column: 1, scope: !5417)
!5456 = !{i64 2147569284, i64 2147569327, i64 2147569367}
!5457 = !DILocation(line: 30, column: 1, scope: !5417)
!5458 = !{i64 2147569511, i64 2147569554, i64 2147569594}
!5459 = !DILocation(line: 31, column: 1, scope: !5417)
!5460 = !{i64 2147569713, i64 2147569756, i64 2147569796}
!5461 = !DILocation(line: 32, column: 1, scope: !5417)
!5462 = !{i64 2147569928, i64 2147569971, i64 2147570011}
!5463 = !DILocation(line: 33, column: 1, scope: !5417)
!5464 = !{i64 2147570100, i64 2147570143, i64 2147570183}
!5465 = !DILocation(line: 34, column: 1, scope: !5417)
!5466 = !{i64 2147570302, i64 2147570345, i64 2147570385}
!5467 = !DILocation(line: 35, column: 1, scope: !5417)
!5468 = !{i64 2147570528, i64 2147570571, i64 2147570611}
!5469 = !DILocation(line: 36, column: 1, scope: !5417)
!5470 = !{i64 2147570727, i64 2147570770, i64 2147570810}
!5471 = !DILocation(line: 37, column: 1, scope: !5417)
!5472 = !{i64 2147570902, i64 2147570945, i64 2147570985}
!5473 = !DILocation(line: 38, column: 1, scope: !5417)
!5474 = !{i64 2147571155, i64 2147571198, i64 2147571238}
!5475 = !DILocation(line: 39, column: 1, scope: !5417)
!5476 = !{i64 2147571396, i64 2147571439, i64 2147571479}
!5477 = !DILocation(line: 40, column: 1, scope: !5417)
!5478 = !{i64 2147571631, i64 2147571674, i64 2147571714}
!5479 = !DILocation(line: 41, column: 1, scope: !5417)
!5480 = !{i64 2147571863, i64 2147571906, i64 2147571946}
!5481 = !DILocation(line: 42, column: 1, scope: !5417)
!5482 = !{i64 2147572089, i64 2147572132, i64 2147572172}
!5483 = !DILocation(line: 43, column: 1, scope: !5417)
!5484 = !{i64 2147572315, i64 2147572358, i64 2147572398}
!5485 = !DILocation(line: 44, column: 1, scope: !5417)
!5486 = !{i64 2147572541, i64 2147572584, i64 2147572624}
!5487 = !DILocation(line: 45, column: 1, scope: !5417)
!5488 = !{i64 2147572776, i64 2147572819, i64 2147572859}
!5489 = !DILocation(line: 46, column: 1, scope: !5417)
!5490 = !{i64 2147573020, i64 2147573063, i64 2147573103}
!5491 = !DILocation(line: 47, column: 1, scope: !5417)
!5492 = !{i64 2147573267, i64 2147573310, i64 2147573350}
!5493 = !DILocation(line: 48, column: 1, scope: !5417)
!5494 = !{i64 2147573499, i64 2147573542, i64 2147573582}
!5495 = !DILocation(line: 49, column: 1, scope: !5417)
!5496 = !{i64 2147573743, i64 2147573786, i64 2147573826}
!5497 = !DILocation(line: 50, column: 1, scope: !5417)
!5498 = !{i64 2147573981, i64 2147574024, i64 2147574064}
!5499 = !DILocation(line: 51, column: 1, scope: !5417)
!5500 = !{i64 2147574255, i64 2147574298, i64 2147574338}
!5501 = !DILocation(line: 52, column: 1, scope: !5417)
!5502 = !{i64 2147574493, i64 2147574536, i64 2147574576}
!5503 = !DILocation(line: 53, column: 1, scope: !5417)
!5504 = !{i64 2147578807, i64 2147578850, i64 2147578890}
!5505 = !DILocation(line: 54, column: 1, scope: !5417)
!5506 = !{i64 2147579051, i64 2147579094, i64 2147579134}
!5507 = !DILocation(line: 55, column: 1, scope: !5417)
!5508 = !{i64 2147579286, i64 2147579329, i64 2147579369}
!5509 = !DILocation(line: 56, column: 1, scope: !5417)
!5510 = !{i64 2147579536, i64 2147579579, i64 2147579619}
!5511 = !DILocation(line: 57, column: 1, scope: !5417)
!5512 = !{i64 2147579783, i64 2147579826, i64 2147579866}
!5513 = !DILocation(line: 58, column: 1, scope: !5417)
!5514 = !{i64 2147580018, i64 2147580061, i64 2147580101}
!5515 = !DILocation(line: 59, column: 1, scope: !5417)
!5516 = !{i64 2147580253, i64 2147580296, i64 2147580336}
!5517 = !DILocation(line: 60, column: 1, scope: !5417)
!5518 = !{i64 2147580488, i64 2147580531, i64 2147580571}
!5519 = !DILocation(line: 61, column: 1, scope: !5417)
!5520 = !{i64 2147580723, i64 2147580766, i64 2147580806}
!5521 = !DILocation(line: 62, column: 1, scope: !5417)
!5522 = !{i64 2147580967, i64 2147581010, i64 2147581050}
!5523 = !DILocation(line: 63, column: 1, scope: !5417)
!5524 = !{i64 2147581205, i64 2147581248, i64 2147581288}
!5525 = !DILocation(line: 64, column: 1, scope: !5417)
!5526 = !{i64 2147581446, i64 2147581489, i64 2147581529}
!5527 = !DILocation(line: 65, column: 1, scope: !5417)
!5528 = !{i64 2147581726, i64 2147581769, i64 2147581809}
!5529 = !DILocation(line: 66, column: 1, scope: !5417)
!5530 = !{i64 2147581985, i64 2147582028, i64 2147582068}
!5531 = !DILocation(line: 67, column: 1, scope: !5417)
!5532 = !{i64 2147582223, i64 2147582266, i64 2147582306}
!5533 = !DILocation(line: 68, column: 1, scope: !5417)
!5534 = !{i64 2147582452, i64 2147582495, i64 2147582535}
!5535 = !DILocation(line: 69, column: 1, scope: !5417)
!5536 = !{i64 2147582660, i64 2147582703, i64 2147582743}
!5537 = !DILocation(line: 70, column: 1, scope: !5417)
!5538 = !{i64 2147582871, i64 2147582914, i64 2147582954}
!5539 = !DILocation(line: 71, column: 1, scope: !5417)
!5540 = !{i64 2147583106, i64 2147583149, i64 2147583189}
!5541 = !DILocation(line: 72, column: 1, scope: !5417)
!5542 = !{i64 2147583335, i64 2147583378, i64 2147583418}
!5543 = !DILocation(line: 73, column: 1, scope: !5417)
!5544 = !{i64 2147583573, i64 2147583616, i64 2147583656}
!5545 = !DILocation(line: 74, column: 1, scope: !5417)
!5546 = !{i64 2147583805, i64 2147583848, i64 2147583888}
!5547 = !DILocation(line: 75, column: 1, scope: !5417)
!5548 = !{i64 2147584031, i64 2147584074, i64 2147584114}
!5549 = !DILocation(line: 76, column: 1, scope: !5417)
!5550 = !{i64 2147584248, i64 2147584291, i64 2147584331}
!5551 = !DILocation(line: 77, column: 1, scope: !5417)
!5552 = !{i64 2147584480, i64 2147584523, i64 2147584563}
!5553 = !DILocation(line: 78, column: 1, scope: !5417)
!5554 = !{i64 2147584706, i64 2147584749, i64 2147584789}
!5555 = !DILocation(line: 79, column: 1, scope: !5417)
!5556 = !{i64 2147584920, i64 2147584963, i64 2147585003}
!5557 = !DILocation(line: 80, column: 1, scope: !5417)
!5558 = !{i64 2147585140, i64 2147585183, i64 2147585223}
!5559 = !DILocation(line: 81, column: 1, scope: !5417)
!5560 = !{i64 2147585372, i64 2147585415, i64 2147585455}
!5561 = !DILocation(line: 82, column: 1, scope: !5417)
!5562 = !{i64 2147585580, i64 2147585623, i64 2147585663}
!5563 = !DILocation(line: 83, column: 1, scope: !5417)
!5564 = !{i64 2147585785, i64 2147585828, i64 2147585868}
!5565 = !DILocation(line: 84, column: 1, scope: !5417)
!5566 = !{i64 2147586002, i64 2147586045, i64 2147586085}
!5567 = !DILocation(line: 85, column: 1, scope: !5417)
!5568 = !{i64 2147586216, i64 2147586259, i64 2147586299}
!5569 = !DILocation(line: 86, column: 1, scope: !5417)
!5570 = !{i64 2147586442, i64 2147586485, i64 2147586525}
!5571 = !DILocation(line: 87, column: 1, scope: !5417)
!5572 = !{i64 2147586662, i64 2147586705, i64 2147586745}
!5573 = !DILocation(line: 88, column: 1, scope: !5417)
!5574 = !{i64 2147590928, i64 2147590971, i64 2147591011}
!5575 = !DILocation(line: 89, column: 1, scope: !5417)
!5576 = !{i64 2147591160, i64 2147591203, i64 2147591243}
!5577 = !DILocation(line: 90, column: 1, scope: !5417)
!5578 = !{i64 2147591395, i64 2147591438, i64 2147591478}
!5579 = !DILocation(line: 91, column: 1, scope: !5417)
!5580 = !{i64 2147591645, i64 2147591688, i64 2147591728}
!5581 = !DILocation(line: 92, column: 1, scope: !5417)
!5582 = !{i64 2147591895, i64 2147591938, i64 2147591978}
!5583 = !DILocation(line: 93, column: 1, scope: !5417)
!5584 = !{i64 2147592133, i64 2147592176, i64 2147592216}
!5585 = !DILocation(line: 94, column: 1, scope: !5417)
!5586 = !{i64 2147592344, i64 2147592387, i64 2147592427}
!5587 = !DILocation(line: 95, column: 1, scope: !5417)
!5588 = !{i64 2147592561, i64 2147592604, i64 2147592644}
!5589 = !DILocation(line: 96, column: 1, scope: !5417)
!5590 = !{i64 2147592757, i64 2147592800, i64 2147592840}
!5591 = !DILocation(line: 97, column: 1, scope: !5417)
!5592 = !{i64 2147592959, i64 2147593002, i64 2147593042}
!5593 = !DILocation(line: 98, column: 1, scope: !5417)
!5594 = !{i64 2147593152, i64 2147593195, i64 2147593235}
!5595 = !DILocation(line: 99, column: 1, scope: !5417)
!5596 = !{i64 2147593360, i64 2147593403, i64 2147593443}
!5597 = !DILocation(line: 100, column: 1, scope: !5417)
!5598 = !{i64 2147593556, i64 2147593599, i64 2147593639}
!5599 = !DILocation(line: 101, column: 1, scope: !5417)
!5600 = !{i64 2147593788, i64 2147593831, i64 2147593871}
!5601 = !DILocation(line: 102, column: 1, scope: !5417)
!5602 = !{i64 2147593999, i64 2147594042, i64 2147594082}
!5603 = !DILocation(line: 103, column: 1, scope: !5417)
!5604 = !{i64 2147594198, i64 2147594241, i64 2147594281}
!5605 = !DILocation(line: 104, column: 1, scope: !5417)
!5606 = !{i64 2147594373, i64 2147594416, i64 2147594456}
!5607 = !DILocation(line: 105, column: 1, scope: !5417)
!5608 = !{i64 2147594557, i64 2147594600, i64 2147594640}
!5609 = !DILocation(line: 106, column: 1, scope: !5417)
!5610 = !{i64 2147594759, i64 2147594802, i64 2147594842}
!5611 = !DILocation(line: 107, column: 1, scope: !5417)
!5612 = !{i64 2147594958, i64 2147595001, i64 2147595041}
!5613 = !DILocation(line: 108, column: 1, scope: !5417)
!5614 = !{i64 2147595124, i64 2147595167, i64 2147595207}
!5615 = !DILocation(line: 109, column: 1, scope: !5417)
!5616 = !{i64 2147595308, i64 2147595351, i64 2147595391}
!5617 = !DILocation(line: 110, column: 1, scope: !5417)
!5618 = !{i64 2147595498, i64 2147595541, i64 2147595581}
!5619 = !DILocation(line: 111, column: 1, scope: !5417)
!5620 = !{i64 2147595682, i64 2147595725, i64 2147595765}
!5621 = !DILocation(line: 112, column: 1, scope: !5417)
!5622 = !{i64 2147595896, i64 2147595939, i64 2147595979}
!5623 = !DILocation(line: 113, column: 1, scope: !5417)
!5624 = !{i64 2147596107, i64 2147596150, i64 2147596190}
!5625 = !DILocation(line: 114, column: 1, scope: !5417)
!5626 = !{i64 2147596330, i64 2147596373, i64 2147596413}
!5627 = !DILocation(line: 115, column: 1, scope: !5417)
!5628 = !{i64 2147596514, i64 2147596557, i64 2147596597}
!5629 = !DILocation(line: 116, column: 1, scope: !5417)
!5630 = !{i64 2147596728, i64 2147596771, i64 2147596811}
!5631 = !DILocation(line: 117, column: 1, scope: !5417)
!5632 = !{i64 2147596894, i64 2147596937, i64 2147596977}
!5633 = !DILocation(line: 118, column: 1, scope: !5417)
!5634 = !{i64 2147597075, i64 2147597118, i64 2147597158}
!5635 = !DILocation(line: 119, column: 1, scope: !5417)
!5636 = !{i64 2147597268, i64 2147597311, i64 2147597351}
!5637 = !DILocation(line: 120, column: 1, scope: !5417)
!5638 = !{i64 2147597494, i64 2147597537, i64 2147597577}
!5639 = !DILocation(line: 121, column: 1, scope: !5417)
!5640 = !{i64 2147597708, i64 2147597751, i64 2147597791}
!5641 = !DILocation(line: 122, column: 1, scope: !5417)
!5642 = !{i64 2147597934, i64 2147597977, i64 2147598017}
!5643 = !DILocation(line: 123, column: 1, scope: !5417)
!5644 = !{i64 2147598151, i64 2147598194, i64 2147598234}
!5645 = !DILocation(line: 124, column: 1, scope: !5417)
!5646 = !{i64 2147598428, i64 2147598471, i64 2147598511}
!5647 = !DILocation(line: 125, column: 1, scope: !5417)
!5648 = !{i64 2147598654, i64 2147598697, i64 2147598737}
!5649 = !DILocation(line: 126, column: 1, scope: !5417)
!5650 = !{i64 2147598862, i64 2147598905, i64 2147598945}
!5651 = !DILocation(line: 127, column: 1, scope: !5417)
!5652 = !{i64 2147599058, i64 2147599101, i64 2147599141}
!5653 = !DILocation(line: 128, column: 1, scope: !5417)
!5654 = !{i64 2147599323, i64 2147599366, i64 2147599406}
!5655 = !DILocation(line: 129, column: 1, scope: !5417)
!5656 = !{i64 2147599537, i64 2147599580, i64 2147599620}
!5657 = !DILocation(line: 130, column: 1, scope: !5417)
!5658 = !{i64 2147599712, i64 2147599755, i64 2147599795}
!5659 = !DILocation(line: 131, column: 1, scope: !5417)
!5660 = !{i64 2147604027, i64 2147604070, i64 2147604110}
!5661 = !DILocation(line: 132, column: 1, scope: !5417)
!5662 = !{i64 2147604226, i64 2147604269, i64 2147604309}
!5663 = !DILocation(line: 133, column: 1, scope: !5417)
!5664 = !{i64 2147604468, i64 2147604511, i64 2147604551}
!5665 = !DILocation(line: 134, column: 1, scope: !5417)
!5666 = !{i64 2147604631, i64 2147604674, i64 2147604714}
!5667 = !DILocation(line: 135, column: 1, scope: !5417)
!5668 = !{i64 2147604818, i64 2147604861, i64 2147604901}
!5669 = !DILocation(line: 136, column: 1, scope: !5417)
!5670 = !{i64 2147605011, i64 2147605054, i64 2147605094}
!5671 = !DILocation(line: 137, column: 1, scope: !5417)
!5672 = !{i64 2147605194, i64 2147605237, i64 2147605277}
!5673 = !DILocation(line: 138, column: 1, scope: !5417)
!5674 = !{i64 2147605408, i64 2147605451, i64 2147605491}
!5675 = !DILocation(line: 139, column: 1, scope: !5417)
!5676 = !{i64 2147605619, i64 2147605662, i64 2147605702}
!5677 = !DILocation(line: 140, column: 1, scope: !5417)
!5678 = !{i64 2147605839, i64 2147605882, i64 2147605922}
!5679 = !DILocation(line: 141, column: 1, scope: !5417)
!5680 = !{i64 2147606046, i64 2147606089, i64 2147606129}
!5681 = !DILocation(line: 142, column: 1, scope: !5417)
!5682 = !{i64 2147606319, i64 2147606362, i64 2147606402}
!5683 = !DILocation(line: 143, column: 1, scope: !5417)
!5684 = !{i64 2147606567, i64 2147606610, i64 2147606650}
!5685 = !DILocation(line: 144, column: 1, scope: !5417)
!5686 = !{i64 2147606766, i64 2147606809, i64 2147606849}
!5687 = !DILocation(line: 145, column: 1, scope: !5417)
!5688 = !{i64 2147607001, i64 2147607044, i64 2147607084}
!5689 = !DILocation(line: 146, column: 1, scope: !5417)
!5690 = !{i64 2147607251, i64 2147607294, i64 2147607334}
!5691 = !DILocation(line: 147, column: 1, scope: !5417)
!5692 = !{i64 2147607453, i64 2147607496, i64 2147607536}
!5693 = !DILocation(line: 148, column: 1, scope: !5417)
!5694 = !{i64 2147607676, i64 2147607719, i64 2147607759}
!5695 = !DILocation(line: 149, column: 1, scope: !5417)
!5696 = !{i64 2147607890, i64 2147607933, i64 2147607973}
!5697 = !DILocation(line: 150, column: 1, scope: !5417)
!5698 = !{i64 2147608134, i64 2147608177, i64 2147608217}
!5699 = !DILocation(line: 151, column: 1, scope: !5417)
!5700 = !{i64 2147608363, i64 2147608406, i64 2147608446}
!5701 = !DILocation(line: 152, column: 1, scope: !5417)
!5702 = !{i64 2147608592, i64 2147608635, i64 2147608675}
!5703 = !DILocation(line: 153, column: 1, scope: !5417)
!5704 = !{i64 2147608800, i64 2147608843, i64 2147608883}
!5705 = !DILocation(line: 154, column: 1, scope: !5417)
!5706 = !{i64 2147609038, i64 2147609081, i64 2147609121}
!5707 = !DILocation(line: 155, column: 1, scope: !5417)
!5708 = !{i64 2147609264, i64 2147609307, i64 2147609347}
!5709 = !DILocation(line: 156, column: 1, scope: !5417)
!5710 = !{i64 2147609523, i64 2147609566, i64 2147609606}
!5711 = !DILocation(line: 157, column: 1, scope: !5417)
!5712 = !{i64 2147609743, i64 2147609786, i64 2147609826}
!5713 = !DILocation(line: 158, column: 1, scope: !5417)
!5714 = !{i64 2147609975, i64 2147610018, i64 2147610058}
!5715 = !DILocation(line: 159, column: 1, scope: !5417)
!5716 = !{i64 2147610216, i64 2147610259, i64 2147610299}
!5717 = !DILocation(line: 160, column: 1, scope: !5417)
!5718 = !{i64 2147610457, i64 2147610500, i64 2147610540}
!5719 = !DILocation(line: 161, column: 1, scope: !5417)
!5720 = !{i64 2147610680, i64 2147610723, i64 2147610763}
!5721 = !DILocation(line: 162, column: 1, scope: !5417)
!5722 = !{i64 2147610897, i64 2147610940, i64 2147610980}
!5723 = !DILocation(line: 163, column: 1, scope: !5417)
!5724 = !{i64 2147611138, i64 2147611181, i64 2147611221}
!5725 = !DILocation(line: 164, column: 1, scope: !5417)
!5726 = !{i64 2147611325, i64 2147611368, i64 2147611408}
!5727 = !DILocation(line: 165, column: 1, scope: !5417)
!5728 = !{i64 2147611512, i64 2147611555, i64 2147611595}
!5729 = !DILocation(line: 166, column: 1, scope: !5417)
!5730 = !{i64 2147611675, i64 2147611718, i64 2147611758}
!5731 = !DILocation(line: 167, column: 1, scope: !5417)
!5732 = !{i64 2147611934, i64 2147611977, i64 2147612017}
!5733 = !DILocation(line: 168, column: 1, scope: !5417)
!5734 = !{i64 2147612157, i64 2147612200, i64 2147612240}
!5735 = !DILocation(line: 169, column: 1, scope: !5417)
!5736 = !{i64 2147612386, i64 2147612429, i64 2147612469}
!5737 = !DILocation(line: 170, column: 1, scope: !5417)
!5738 = !{i64 2147616643, i64 2147616686, i64 2147616726}
!5739 = !DILocation(line: 171, column: 1, scope: !5417)
!5740 = !{i64 2147616855, i64 2147616898, i64 2147616938}
!5741 = !DILocation(line: 172, column: 1, scope: !5417)
!5742 = !{i64 2147617076, i64 2147617119, i64 2147617159}
!5743 = !DILocation(line: 173, column: 1, scope: !5417)
!5744 = !{i64 2147617290, i64 2147617333, i64 2147617373}
!5745 = !DILocation(line: 174, column: 1, scope: !5417)
!5746 = !{i64 2147617480, i64 2147617523, i64 2147617563}
!5747 = !DILocation(line: 175, column: 1, scope: !5417)
!5748 = !{i64 2147617679, i64 2147617722, i64 2147617762}
!5749 = !DILocation(line: 176, column: 1, scope: !5417)
!5750 = !{i64 2147617884, i64 2147617927, i64 2147617967}
!5751 = !DILocation(line: 177, column: 1, scope: !5417)
!5752 = !{i64 2147618104, i64 2147618147, i64 2147618187}
!5753 = !DILocation(line: 178, column: 1, scope: !5417)
!5754 = !{i64 2147618305, i64 2147618348, i64 2147618388}
!5755 = !DILocation(line: 179, column: 1, scope: !5417)
!5756 = !{i64 2147618504, i64 2147618547, i64 2147618587}
!5757 = !DILocation(line: 180, column: 1, scope: !5417)
!5758 = !{i64 2147618709, i64 2147618752, i64 2147618792}
!5759 = !DILocation(line: 181, column: 1, scope: !5417)
!5760 = !{i64 2147618878, i64 2147618921, i64 2147618961}
!5761 = !DILocation(line: 182, column: 1, scope: !5417)
!5762 = !{i64 2147619062, i64 2147619105, i64 2147619145}
!5763 = !DILocation(line: 183, column: 1, scope: !5417)
!5764 = !{i64 2147619246, i64 2147619289, i64 2147619329}
!5765 = !DILocation(line: 184, column: 1, scope: !5417)
!5766 = !{i64 2147619433, i64 2147619476, i64 2147619516}
!5767 = !DILocation(line: 185, column: 1, scope: !5417)
!5768 = !{i64 2147619617, i64 2147619660, i64 2147619700}
!5769 = !DILocation(line: 186, column: 1, scope: !5417)
!5770 = !{i64 2147619855, i64 2147619898, i64 2147619938}
!5771 = !DILocation(line: 187, column: 1, scope: !5417)
!5772 = !{i64 2147620085, i64 2147620128, i64 2147620168}
!5773 = !DILocation(line: 188, column: 1, scope: !5417)
!5774 = !{i64 2147620314, i64 2147620357, i64 2147620397}
!5775 = !DILocation(line: 189, column: 1, scope: !5417)
!5776 = !{i64 2147620501, i64 2147620544, i64 2147620584}
!5777 = !DILocation(line: 190, column: 1, scope: !5417)
!5778 = !{i64 2147620697, i64 2147620740, i64 2147620780}
!5779 = !DILocation(line: 191, column: 1, scope: !5417)
!5780 = !{i64 2147620905, i64 2147620948, i64 2147620988}
!5781 = !DILocation(line: 192, column: 1, scope: !5417)
!5782 = !{i64 2147621117, i64 2147621160, i64 2147621200}
!5783 = !DILocation(line: 193, column: 1, scope: !5417)
!5784 = !{i64 2147621316, i64 2147621359, i64 2147621399}
!5785 = !DILocation(line: 194, column: 1, scope: !5417)
!5786 = !{i64 2147621554, i64 2147621597, i64 2147621637}
!5787 = !DILocation(line: 195, column: 1, scope: !5417)
!5788 = !{i64 2147621750, i64 2147621793, i64 2147621833}
!5789 = !DILocation(line: 196, column: 1, scope: !5417)
!5790 = !{i64 2147621952, i64 2147621995, i64 2147622035}
!5791 = !DILocation(line: 197, column: 1, scope: !5417)
!5792 = !{i64 2147622145, i64 2147622188, i64 2147622228}
!5793 = !DILocation(line: 198, column: 1, scope: !5417)
!5794 = !{i64 2147622379, i64 2147622422, i64 2147622462}
!5795 = !DILocation(line: 199, column: 1, scope: !5417)
!5796 = !{i64 2147622542, i64 2147622585, i64 2147622625}
!5797 = !DILocation(line: 200, column: 1, scope: !5417)
!5798 = !{i64 2147622781, i64 2147622824, i64 2147622864}
!5799 = !DILocation(line: 201, column: 1, scope: !5417)
!5800 = !{i64 2147623020, i64 2147623063, i64 2147623103}
!5801 = !DILocation(line: 202, column: 1, scope: !5417)
!5802 = !{i64 2147623256, i64 2147623299, i64 2147623339}
!5803 = !DILocation(line: 203, column: 1, scope: !5417)
!5804 = !{i64 2147623486, i64 2147623529, i64 2147623569}
!5805 = !DILocation(line: 204, column: 1, scope: !5417)
!5806 = !{i64 2147623673, i64 2147623716, i64 2147623756}
!5807 = !DILocation(line: 205, column: 1, scope: !5417)
!5808 = !{i64 2147623872, i64 2147623915, i64 2147623955}
!5809 = !DILocation(line: 206, column: 1, scope: !5417)
!5810 = !{i64 2147624143, i64 2147624186, i64 2147624226}
!5811 = !DILocation(line: 207, column: 1, scope: !5417)
!5812 = !{i64 2147624318, i64 2147624361, i64 2147624401}
!5813 = !DILocation(line: 208, column: 1, scope: !5417)
!5814 = !{i64 2147624552, i64 2147624595, i64 2147624635}
!5815 = !DILocation(line: 209, column: 1, scope: !5417)
!5816 = !{i64 2147624760, i64 2147624803, i64 2147624843}
!5817 = !DILocation(line: 210, column: 1, scope: !5417)
!5818 = !{i64 2147624978, i64 2147625021, i64 2147625061}
!5819 = !DILocation(line: 211, column: 1, scope: !5417)
!5820 = !{i64 2147625168, i64 2147625211, i64 2147625251}
!5821 = !DILocation(line: 212, column: 1, scope: !5417)
!5822 = !{i64 2147625364, i64 2147625407, i64 2147625447}
!5823 = !DILocation(line: 213, column: 1, scope: !5417)
!5824 = !{i64 2147625570, i64 2147625613, i64 2147625653}
!5825 = !DILocation(line: 214, column: 1, scope: !5417)
!5826 = !{i64 2147625775, i64 2147625818, i64 2147625858}
!5827 = !DILocation(line: 215, column: 1, scope: !5417)
!5828 = !{i64 2147630050, i64 2147630093, i64 2147630133}
!5829 = !DILocation(line: 216, column: 1, scope: !5417)
!5830 = !{i64 2147630276, i64 2147630319, i64 2147630359}
!5831 = !DILocation(line: 217, column: 1, scope: !5417)
!5832 = !{i64 2147630508, i64 2147630551, i64 2147630591}
!5833 = !DILocation(line: 218, column: 1, scope: !5417)
!5834 = !{i64 2147630692, i64 2147630735, i64 2147630775}
!5835 = !DILocation(line: 219, column: 1, scope: !5417)
!5836 = !{i64 2147630901, i64 2147630944, i64 2147630984}
!5837 = !DILocation(line: 220, column: 1, scope: !5417)
!5838 = !{i64 2147631085, i64 2147631128, i64 2147631168}
!5839 = !DILocation(line: 221, column: 1, scope: !5417)
!5840 = !{i64 2147631311, i64 2147631354, i64 2147631394}
!5841 = !DILocation(line: 222, column: 1, scope: !5417)
!5842 = !{i64 2147631537, i64 2147631580, i64 2147631620}
!5843 = !DILocation(line: 223, column: 1, scope: !5417)
!5844 = !{i64 2147631763, i64 2147631806, i64 2147631846}
!5845 = !DILocation(line: 224, column: 1, scope: !5417)
!5846 = !{i64 2147631989, i64 2147632032, i64 2147632072}
!5847 = !DILocation(line: 225, column: 1, scope: !5417)
!5848 = !{i64 2147632215, i64 2147632258, i64 2147632298}
!5849 = !DILocation(line: 226, column: 1, scope: !5417)
!5850 = !{i64 2147632447, i64 2147632490, i64 2147632530}
!5851 = !DILocation(line: 227, column: 1, scope: !5417)
!5852 = !{i64 2147632685, i64 2147632728, i64 2147632768}
!5853 = !DILocation(line: 228, column: 1, scope: !5417)
!5854 = !{i64 2147632905, i64 2147632948, i64 2147632988}
!5855 = !DILocation(line: 229, column: 1, scope: !5417)
!5856 = !{i64 2147633149, i64 2147633192, i64 2147633232}
!5857 = !DILocation(line: 230, column: 1, scope: !5417)
!5858 = !{i64 2147633390, i64 2147633433, i64 2147633473}
!5859 = !DILocation(line: 231, column: 1, scope: !5417)
!5860 = !{i64 2147633625, i64 2147633668, i64 2147633708}
!5861 = !DILocation(line: 232, column: 1, scope: !5417)
!5862 = !{i64 2147633857, i64 2147633900, i64 2147633940}
!5863 = !DILocation(line: 233, column: 1, scope: !5417)
!5864 = !{i64 2147634059, i64 2147634102, i64 2147634142}
!5865 = !DILocation(line: 234, column: 1, scope: !5417)
!5866 = !{i64 2147634309, i64 2147634352, i64 2147634392}
!5867 = !DILocation(line: 235, column: 1, scope: !5417)
!5868 = !{i64 2147634547, i64 2147634590, i64 2147634630}
!5869 = !DILocation(line: 236, column: 1, scope: !5417)
!5870 = !{i64 2147634731, i64 2147634774, i64 2147634814}
!5871 = !DILocation(line: 237, column: 1, scope: !5417)
!5872 = !{i64 2147634955, i64 2147634998, i64 2147635038}
!5873 = !DILocation(line: 238, column: 1, scope: !5417)
!5874 = !{i64 2147635193, i64 2147635236, i64 2147635276}
!5875 = !DILocation(line: 239, column: 1, scope: !5417)
!5876 = !{i64 2147635431, i64 2147635474, i64 2147635514}
!5877 = !DILocation(line: 240, column: 1, scope: !5417)
!5878 = !{i64 2147635624, i64 2147635667, i64 2147635707}
!5879 = !DILocation(line: 241, column: 1, scope: !5417)
!5880 = !{i64 2147635877, i64 2147635920, i64 2147635960}
!5881 = !DILocation(line: 242, column: 1, scope: !5417)
!5882 = !{i64 2147636091, i64 2147636134, i64 2147636174}
!5883 = !DILocation(line: 243, column: 1, scope: !5417)
!5884 = !{i64 2147636299, i64 2147636342, i64 2147636382}
!5885 = !DILocation(line: 244, column: 1, scope: !5417)
!5886 = !{i64 2147636489, i64 2147636532, i64 2147636572}
!5887 = !DILocation(line: 245, column: 1, scope: !5417)
!5888 = !{i64 2147636703, i64 2147636746, i64 2147636786}
!5889 = !DILocation(line: 246, column: 1, scope: !5417)
!5890 = !{i64 2147636965, i64 2147637008, i64 2147637048}
!5891 = !DILocation(line: 247, column: 1, scope: !5417)
!5892 = !{i64 2147637176, i64 2147637219, i64 2147637259}
!5893 = !DILocation(line: 248, column: 1, scope: !5417)
!5894 = !{i64 2147637420, i64 2147637463, i64 2147637503}
!5895 = !DILocation(line: 249, column: 1, scope: !5417)
!5896 = !{i64 2147637631, i64 2147637674, i64 2147637714}
!5897 = !DILocation(line: 250, column: 1, scope: !5417)
!5898 = !{i64 2147637860, i64 2147637903, i64 2147637943}
!5899 = !DILocation(line: 251, column: 1, scope: !5417)
!5900 = !{i64 2147638125, i64 2147638168, i64 2147638208}
!5901 = !DILocation(line: 252, column: 1, scope: !5417)
!5902 = !{i64 2147642391, i64 2147642434, i64 2147642474}
!5903 = !DILocation(line: 253, column: 1, scope: !5417)
!5904 = !{i64 2147642587, i64 2147642630, i64 2147642670}
!5905 = !DILocation(line: 254, column: 1, scope: !5417)
!5906 = !{i64 2147642810, i64 2147642853, i64 2147642893}
!5907 = !DILocation(line: 255, column: 1, scope: !5417)
!5908 = !{i64 2147642973, i64 2147643016, i64 2147643056}
!5909 = !DILocation(line: 256, column: 1, scope: !5417)
!5910 = !{i64 2147643178, i64 2147643221, i64 2147643261}
!5911 = !DILocation(line: 257, column: 1, scope: !5417)
!5912 = !{i64 2147643398, i64 2147643441, i64 2147643481}
!5913 = !DILocation(line: 258, column: 1, scope: !5417)
!5914 = !{i64 2147643612, i64 2147643655, i64 2147643695}
!5915 = !DILocation(line: 259, column: 1, scope: !5417)
!5916 = !{i64 2147643826, i64 2147643869, i64 2147643909}
!5917 = !DILocation(line: 260, column: 1, scope: !5417)
!5918 = !{i64 2147644037, i64 2147644080, i64 2147644120}
!5919 = !DILocation(line: 261, column: 1, scope: !5417)
!5920 = !{i64 2147644230, i64 2147644273, i64 2147644313}
!5921 = !DILocation(line: 262, column: 1, scope: !5417)
!5922 = !{i64 2147644429, i64 2147644472, i64 2147644512}
!5923 = !DILocation(line: 263, column: 1, scope: !5417)
!5924 = !{i64 2147644601, i64 2147644644, i64 2147644684}
!5925 = !DILocation(line: 264, column: 1, scope: !5417)
!5926 = !{i64 2147644794, i64 2147644837, i64 2147644877}
!5927 = !DILocation(line: 265, column: 1, scope: !5417)
!5928 = !{i64 2147644990, i64 2147645033, i64 2147645073}
!5929 = !DILocation(line: 266, column: 1, scope: !5417)
!5930 = !{i64 2147645217, i64 2147645260, i64 2147645300}
!5931 = !DILocation(line: 267, column: 1, scope: !5417)
!5932 = !{i64 2147645434, i64 2147645477, i64 2147645517}
!5933 = !DILocation(line: 268, column: 1, scope: !5417)
!5934 = !{i64 2147645726, i64 2147645769, i64 2147645809}
!5935 = !DILocation(line: 269, column: 1, scope: !5417)
!5936 = !{i64 2147645958, i64 2147646001, i64 2147646041}
!5937 = !DILocation(line: 270, column: 1, scope: !5417)
!5938 = !{i64 2147646175, i64 2147646218, i64 2147646258}
!5939 = !DILocation(line: 271, column: 1, scope: !5417)
!5940 = !{i64 2147646382, i64 2147646425, i64 2147646465}
!5941 = !DILocation(line: 272, column: 1, scope: !5417)
!5942 = !{i64 2147646583, i64 2147646626, i64 2147646666}
!5943 = !DILocation(line: 273, column: 1, scope: !5417)
!5944 = !{i64 2147646815, i64 2147646858, i64 2147646898}
!5945 = !DILocation(line: 274, column: 1, scope: !5417)
!5946 = !{i64 2147647023, i64 2147647066, i64 2147647106}
!5947 = !DILocation(line: 275, column: 1, scope: !5417)
!5948 = !{i64 2147647213, i64 2147647256, i64 2147647296}
!5949 = !DILocation(line: 276, column: 1, scope: !5417)
!5950 = !{i64 2147647439, i64 2147647482, i64 2147647522}
!5951 = !DILocation(line: 277, column: 1, scope: !5417)
!5952 = !{i64 2147647628, i64 2147647671, i64 2147647711}
!5953 = !DILocation(line: 278, column: 1, scope: !5417)
!5954 = !{i64 2147647899, i64 2147647942, i64 2147647982}
!5955 = !DILocation(line: 279, column: 1, scope: !5417)
!5956 = !{i64 2147648119, i64 2147648162, i64 2147648202}
!5957 = !DILocation(line: 280, column: 1, scope: !5417)
!5958 = !{i64 2147648372, i64 2147648415, i64 2147648455}
!5959 = !DILocation(line: 281, column: 1, scope: !5417)
!5960 = !{i64 2147648580, i64 2147648623, i64 2147648663}
!5961 = !DILocation(line: 282, column: 1, scope: !5417)
!5962 = !{i64 2147648812, i64 2147648855, i64 2147648895}
!5963 = !DILocation(line: 283, column: 1, scope: !5417)
!5964 = !{i64 2147649023, i64 2147649066, i64 2147649106}
!5965 = !DILocation(line: 284, column: 1, scope: !5417)
!5966 = !{i64 2147649213, i64 2147649256, i64 2147649296}
!5967 = !DILocation(line: 285, column: 1, scope: !5417)
!5968 = !{i64 2147649427, i64 2147649470, i64 2147649510}
!5969 = !DILocation(line: 286, column: 1, scope: !5417)
!5970 = !{i64 2147649626, i64 2147649669, i64 2147649709}
!5971 = !DILocation(line: 287, column: 1, scope: !5417)
!5972 = !{i64 2147649813, i64 2147649856, i64 2147649896}
!5973 = !DILocation(line: 288, column: 1, scope: !5417)
!5974 = !{i64 2147650021, i64 2147650064, i64 2147650104}
!5975 = !DILocation(line: 289, column: 1, scope: !5417)
!5976 = !{i64 2147650250, i64 2147650293, i64 2147650333}
!5977 = !DILocation(line: 290, column: 1, scope: !5417)
!5978 = !{i64 2147650452, i64 2147650495, i64 2147650535}
!5979 = !DILocation(line: 291, column: 1, scope: !5417)
!5980 = !{i64 2147650651, i64 2147650694, i64 2147650734}
!5981 = !DILocation(line: 292, column: 1, scope: !5417)
!5982 = !{i64 2147650868, i64 2147650911, i64 2147650951}
!5983 = !DILocation(line: 294, column: 1, scope: !5417)
!5984 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !291, file: !291, line: 30, type: !298, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !5985)
!5985 = !{!5986, !5987}
!5986 = !DILocalVariable(name: "arg", arg: 1, scope: !5984, file: !291, line: 30, type: !300)
!5987 = !DILocalVariable(name: "key", scope: !5984, file: !291, line: 32, type: !162)
!5988 = !DILocation(line: 0, scope: !5984)
!5989 = !DILocation(line: 37, column: 2, scope: !5984)
!5990 = !DILocation(line: 38, column: 2, scope: !5984)
!5991 = !DILocation(line: 55, column: 2, scope: !5992, inlinedAt: !5999)
!5992 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5993, file: !5993, line: 42, type: !5994, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !5996)
!5993 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5994 = !DISubroutineType(types: !5995)
!5995 = !{!32}
!5996 = !{!5997, !5998}
!5997 = !DILocalVariable(name: "key", scope: !5992, file: !5993, line: 44, type: !32)
!5998 = !DILocalVariable(name: "tmp", scope: !5992, file: !5993, line: 53, type: !32)
!5999 = distinct !DILocation(line: 40, column: 8, scope: !5984)
!6000 = !{i64 2184631}
!6001 = !DILocation(line: 0, scope: !5992, inlinedAt: !5999)
!6002 = !DILocalVariable(name: "key", arg: 1, scope: !6003, file: !5993, line: 84, type: !32)
!6003 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5993, file: !5993, line: 84, type: !6004, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !6006)
!6004 = !DISubroutineType(types: !6005)
!6005 = !{null, !32}
!6006 = !{!6002}
!6007 = !DILocation(line: 0, scope: !6003, inlinedAt: !6008)
!6008 = distinct !DILocation(line: 47, column: 2, scope: !5984)
!6009 = !DILocation(line: 95, column: 2, scope: !6003, inlinedAt: !6008)
!6010 = !{i64 2185448}
!6011 = !DILocation(line: 51, column: 18, scope: !5984)
!6012 = !DILocation(line: 53, column: 2, scope: !5984)
!6013 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6014, file: !6014, line: 1609, type: !3211, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !250)
!6014 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6015 = !DILocation(line: 1611, column: 3, scope: !6013)
!6016 = !DILocation(line: 1612, column: 1, scope: !6013)
!6017 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6014, file: !6014, line: 1629, type: !3211, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !250)
!6018 = !DILocation(line: 1631, column: 3, scope: !6017)
!6019 = !DILocation(line: 1632, column: 1, scope: !6017)
!6020 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !321, file: !321, line: 26, type: !327, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !318, retainedNodes: !6021)
!6021 = !{!6022}
!6022 = !DILocalVariable(name: "dev", arg: 1, scope: !6020, file: !321, line: 26, type: !329)
!6023 = !DILocation(line: 0, scope: !6020)
!6024 = !DILocation(line: 68, column: 2, scope: !6020)
!6025 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6026, file: !6026, line: 57, type: !6027, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2587, retainedNodes: !6073)
!6026 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6027 = !DISubroutineType(types: !6028)
!6028 = !{null, !32, !6029}
!6029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6030, size: 32)
!6030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6031)
!6031 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2707, line: 141, baseType: !6032)
!6032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2707, line: 97, size: 256, elements: !6033)
!6033 = !{!6034}
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6032, file: !2707, line: 107, baseType: !6035, size: 256)
!6035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2707, line: 98, size: 256, elements: !6036)
!6036 = !{!6037, !6042, !6047, !6052, !6057, !6062, !6067, !6072}
!6037 = !DIDerivedType(tag: DW_TAG_member, scope: !6035, file: !2707, line: 99, baseType: !6038, size: 32)
!6038 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6035, file: !2707, line: 99, size: 32, elements: !6039)
!6039 = !{!6040, !6041}
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6038, file: !2707, line: 99, baseType: !162, size: 32)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6038, file: !2707, line: 99, baseType: !162, size: 32)
!6042 = !DIDerivedType(tag: DW_TAG_member, scope: !6035, file: !2707, line: 100, baseType: !6043, size: 32, offset: 32)
!6043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6035, file: !2707, line: 100, size: 32, elements: !6044)
!6044 = !{!6045, !6046}
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6043, file: !2707, line: 100, baseType: !162, size: 32)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6043, file: !2707, line: 100, baseType: !162, size: 32)
!6047 = !DIDerivedType(tag: DW_TAG_member, scope: !6035, file: !2707, line: 101, baseType: !6048, size: 32, offset: 64)
!6048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6035, file: !2707, line: 101, size: 32, elements: !6049)
!6049 = !{!6050, !6051}
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6048, file: !2707, line: 101, baseType: !162, size: 32)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6048, file: !2707, line: 101, baseType: !162, size: 32)
!6052 = !DIDerivedType(tag: DW_TAG_member, scope: !6035, file: !2707, line: 102, baseType: !6053, size: 32, offset: 96)
!6053 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6035, file: !2707, line: 102, size: 32, elements: !6054)
!6054 = !{!6055, !6056}
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6053, file: !2707, line: 102, baseType: !162, size: 32)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6053, file: !2707, line: 102, baseType: !162, size: 32)
!6057 = !DIDerivedType(tag: DW_TAG_member, scope: !6035, file: !2707, line: 103, baseType: !6058, size: 32, offset: 128)
!6058 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6035, file: !2707, line: 103, size: 32, elements: !6059)
!6059 = !{!6060, !6061}
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6058, file: !2707, line: 103, baseType: !162, size: 32)
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6058, file: !2707, line: 103, baseType: !162, size: 32)
!6062 = !DIDerivedType(tag: DW_TAG_member, scope: !6035, file: !2707, line: 104, baseType: !6063, size: 32, offset: 160)
!6063 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6035, file: !2707, line: 104, size: 32, elements: !6064)
!6064 = !{!6065, !6066}
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6063, file: !2707, line: 104, baseType: !162, size: 32)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6063, file: !2707, line: 104, baseType: !162, size: 32)
!6067 = !DIDerivedType(tag: DW_TAG_member, scope: !6035, file: !2707, line: 105, baseType: !6068, size: 32, offset: 192)
!6068 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6035, file: !2707, line: 105, size: 32, elements: !6069)
!6069 = !{!6070, !6071}
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6068, file: !2707, line: 105, baseType: !162, size: 32)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6068, file: !2707, line: 105, baseType: !162, size: 32)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6035, file: !2707, line: 106, baseType: !162, size: 32, offset: 224)
!6073 = !{!6074, !6075}
!6074 = !DILocalVariable(name: "reason", arg: 1, scope: !6025, file: !6026, line: 57, type: !32)
!6075 = !DILocalVariable(name: "esf", arg: 2, scope: !6025, file: !6026, line: 57, type: !6029)
!6076 = !DILocation(line: 0, scope: !6025)
!6077 = !DILocation(line: 63, column: 2, scope: !6025)
!6078 = !DILocation(line: 64, column: 1, scope: !6025)
!6079 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6026, file: !6026, line: 82, type: !6080, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2587, retainedNodes: !6095)
!6080 = !DISubroutineType(types: !6081)
!6081 = !{null, !6029, !6082}
!6082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6083, size: 32)
!6083 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !428, line: 37, baseType: !6084)
!6084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !6085)
!6085 = !{!6086, !6087, !6088, !6089, !6090, !6091, !6092, !6093, !6094}
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6084, file: !428, line: 26, baseType: !162, size: 32)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6084, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6084, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6084, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6084, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6084, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6084, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6084, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6084, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!6095 = !{!6096, !6097, !6098}
!6096 = !DILocalVariable(name: "esf", arg: 1, scope: !6079, file: !6026, line: 82, type: !6029)
!6097 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6079, file: !6026, line: 82, type: !6082)
!6098 = !DILocalVariable(name: "reason", scope: !6079, file: !6026, line: 88, type: !32)
!6099 = !DILocation(line: 0, scope: !6079)
!6100 = !DILocation(line: 88, column: 35, scope: !6079)
!6101 = !DILocation(line: 108, column: 2, scope: !6079)
!6102 = !DILocation(line: 131, column: 1, scope: !6079)
!6103 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6026, file: !6026, line: 133, type: !6104, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2587, retainedNodes: !6106)
!6104 = !DISubroutineType(types: !6105)
!6105 = !{null, !102}
!6106 = !{!6107, !6108, !6109}
!6107 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6103, file: !6026, line: 133, type: !102)
!6108 = !DILocalVariable(name: "ssf_contents", scope: !6103, file: !6026, line: 135, type: !864)
!6109 = !DILocalVariable(name: "oops_esf", scope: !6103, file: !6026, line: 136, type: !6031)
!6110 = !DILocation(line: 0, scope: !6103)
!6111 = !DILocation(line: 136, column: 2, scope: !6103)
!6112 = !DILocation(line: 136, column: 15, scope: !6103)
!6113 = !DILocation(line: 139, column: 22, scope: !6103)
!6114 = !DILocation(line: 139, column: 17, scope: !6103)
!6115 = !DILocation(line: 139, column: 20, scope: !6103)
!6116 = !DILocation(line: 141, column: 2, scope: !6103)
!6117 = !DILocation(line: 142, column: 2, scope: !6103)
!6118 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6119, file: !6119, line: 40, type: !6004, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2598, retainedNodes: !6120)
!6119 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6120 = !{!6121}
!6121 = !DILocalVariable(name: "irq", arg: 1, scope: !6118, file: !6119, line: 40, type: !32)
!6122 = !DILocation(line: 0, scope: !6118)
!6123 = !DILocation(line: 42, column: 2, scope: !6118)
!6124 = !DILocation(line: 43, column: 1, scope: !6118)
!6125 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !497, file: !497, line: 1684, type: !6126, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2598, retainedNodes: !6128)
!6126 = !DISubroutineType(types: !6127)
!6127 = !{null, !762}
!6128 = !{!6129}
!6129 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6125, file: !497, line: 1684, type: !762)
!6130 = !DILocation(line: 0, scope: !6125)
!6131 = !DILocation(line: 1686, column: 23, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6125, file: !497, line: 1686, column: 7)
!6133 = !DILocation(line: 1686, column: 7, scope: !6125)
!6134 = !DILocation(line: 1688, column: 5, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6132, file: !497, line: 1687, column: 3)
!6136 = !{i64 2151254153}
!6137 = !DILocation(line: 1689, column: 81, scope: !6135)
!6138 = !DILocation(line: 1689, column: 60, scope: !6135)
!6139 = !DILocation(line: 1689, column: 34, scope: !6135)
!6140 = !DILocation(line: 1689, column: 5, scope: !6135)
!6141 = !DILocation(line: 1689, column: 43, scope: !6135)
!6142 = !DILocation(line: 1690, column: 5, scope: !6135)
!6143 = !{i64 2151254267}
!6144 = !DILocation(line: 1691, column: 3, scope: !6135)
!6145 = !DILocation(line: 1692, column: 1, scope: !6125)
!6146 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6119, file: !6119, line: 45, type: !6004, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2598, retainedNodes: !6147)
!6147 = !{!6148}
!6148 = !DILocalVariable(name: "irq", arg: 1, scope: !6146, file: !6119, line: 45, type: !32)
!6149 = !DILocation(line: 0, scope: !6146)
!6150 = !DILocation(line: 47, column: 2, scope: !6146)
!6151 = !DILocation(line: 48, column: 1, scope: !6146)
!6152 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !497, file: !497, line: 1722, type: !6126, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2598, retainedNodes: !6153)
!6153 = !{!6154}
!6154 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6152, file: !497, line: 1722, type: !762)
!6155 = !DILocation(line: 0, scope: !6152)
!6156 = !DILocation(line: 1724, column: 23, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6152, file: !497, line: 1724, column: 7)
!6158 = !DILocation(line: 1724, column: 7, scope: !6152)
!6159 = !DILocation(line: 1726, column: 81, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6157, file: !497, line: 1725, column: 3)
!6161 = !DILocation(line: 1726, column: 60, scope: !6160)
!6162 = !DILocation(line: 1726, column: 34, scope: !6160)
!6163 = !DILocation(line: 1726, column: 5, scope: !6160)
!6164 = !DILocation(line: 1726, column: 43, scope: !6160)
!6165 = !DILocation(line: 271, column: 3, scope: !6166, inlinedAt: !6168)
!6166 = distinct !DISubprogram(name: "__DSB", scope: !6167, file: !6167, line: 269, type: !3211, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2598, retainedNodes: !250)
!6167 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6168 = distinct !DILocation(line: 1727, column: 5, scope: !6160)
!6169 = !{i64 3708536}
!6170 = !DILocation(line: 260, column: 3, scope: !6171, inlinedAt: !6172)
!6171 = distinct !DISubprogram(name: "__ISB", scope: !6167, file: !6167, line: 258, type: !3211, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2598, retainedNodes: !250)
!6172 = distinct !DILocation(line: 1728, column: 5, scope: !6160)
!6173 = !{i64 3708253}
!6174 = !DILocation(line: 1729, column: 3, scope: !6160)
!6175 = !DILocation(line: 1730, column: 1, scope: !6152)
!6176 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6119, file: !6119, line: 50, type: !6177, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2598, retainedNodes: !6179)
!6177 = !DISubroutineType(types: !6178)
!6178 = !{!107, !32}
!6179 = !{!6180}
!6180 = !DILocalVariable(name: "irq", arg: 1, scope: !6176, file: !6119, line: 50, type: !32)
!6181 = !DILocation(line: 0, scope: !6176)
!6182 = !DILocation(line: 52, column: 20, scope: !6176)
!6183 = !DILocation(line: 52, column: 9, scope: !6176)
!6184 = !DILocation(line: 52, column: 41, scope: !6176)
!6185 = !DILocation(line: 52, column: 39, scope: !6176)
!6186 = !DILocation(line: 52, column: 2, scope: !6176)
!6187 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6119, file: !6119, line: 64, type: !6188, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2598, retainedNodes: !6190)
!6188 = !DISubroutineType(types: !6189)
!6189 = !{null, !32, !32, !162}
!6190 = !{!6191, !6192, !6193}
!6191 = !DILocalVariable(name: "irq", arg: 1, scope: !6187, file: !6119, line: 64, type: !32)
!6192 = !DILocalVariable(name: "prio", arg: 2, scope: !6187, file: !6119, line: 64, type: !32)
!6193 = !DILocalVariable(name: "flags", arg: 3, scope: !6187, file: !6119, line: 64, type: !162)
!6194 = !DILocation(line: 0, scope: !6187)
!6195 = !DILocation(line: 83, column: 8, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6197, file: !6119, line: 82, column: 9)
!6197 = distinct !DILexicalBlock(scope: !6187, file: !6119, line: 76, column: 6)
!6198 = !DILocation(line: 95, column: 2, scope: !6187)
!6199 = !DILocation(line: 96, column: 1, scope: !6187)
!6200 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !497, file: !497, line: 1814, type: !6201, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2598, retainedNodes: !6203)
!6201 = !DISubroutineType(types: !6202)
!6202 = !{null, !762, !162}
!6203 = !{!6204, !6205}
!6204 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6200, file: !497, line: 1814, type: !762)
!6205 = !DILocalVariable(name: "priority", arg: 2, scope: !6200, file: !497, line: 1814, type: !162)
!6206 = !DILocation(line: 0, scope: !6200)
!6207 = !DILocation(line: 0, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6200, file: !497, line: 1816, column: 7)
!6209 = !DILocation(line: 1816, column: 7, scope: !6200)
!6210 = !DILocation(line: 1824, column: 1, scope: !6200)
!6211 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6119, file: !6119, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2598, retainedNodes: !6212)
!6212 = !{!6213}
!6213 = !DILocalVariable(name: "unused", arg: 1, scope: !6211, file: !6119, line: 155, type: !13)
!6214 = !DILocation(line: 0, scope: !6211)
!6215 = !DILocation(line: 159, column: 2, scope: !6211)
!6216 = !DILocation(line: 160, column: 1, scope: !6211)
!6217 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6218, file: !6218, line: 87, type: !3211, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2644, retainedNodes: !250)
!6218 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6219 = !DILocation(line: 89, column: 2, scope: !6217)
!6220 = !DILocation(line: 90, column: 2, scope: !6217)
!6221 = !DILocation(line: 91, column: 1, scope: !6217)
!6222 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6218, file: !6218, line: 23, type: !3211, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!6223 = !DISubprogram(name: "z_arm_int_exit", scope: !6224, file: !6224, line: 153, type: !3211, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!6224 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6225 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6226, file: !6226, line: 256, type: !3211, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !250)
!6226 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6227 = !DILocation(line: 258, column: 2, scope: !6225)
!6228 = !DILocation(line: 260, column: 2, scope: !6225)
!6229 = !DILocation(line: 262, column: 2, scope: !6225)
!6230 = !DILocation(line: 263, column: 2, scope: !6225)
!6231 = !DILocation(line: 267, column: 2, scope: !6225)
!6232 = !DILocation(line: 268, column: 2, scope: !6225)
!6233 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6226, file: !6226, line: 53, type: !3211, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !250)
!6234 = !DILocation(line: 55, column: 12, scope: !6233)
!6235 = !DILocation(line: 271, column: 3, scope: !6236, inlinedAt: !6237)
!6236 = distinct !DISubprogram(name: "__DSB", scope: !6167, file: !6167, line: 269, type: !3211, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !250)
!6237 = distinct !DILocation(line: 56, column: 2, scope: !6233)
!6238 = !{i64 3707207}
!6239 = !DILocation(line: 260, column: 3, scope: !6240, inlinedAt: !6241)
!6240 = distinct !DISubprogram(name: "__ISB", scope: !6167, file: !6167, line: 258, type: !3211, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !250)
!6241 = distinct !DILocation(line: 57, column: 2, scope: !6233)
!6242 = !{i64 3706924}
!6243 = !DILocation(line: 58, column: 1, scope: !6233)
!6244 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6226, file: !6226, line: 96, type: !3211, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !250)
!6245 = !DILocation(line: 103, column: 13, scope: !6244)
!6246 = !DILocation(line: 975, column: 3, scope: !6247, inlinedAt: !6252)
!6247 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6167, file: !6167, line: 971, type: !6248, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !6250)
!6248 = !DISubroutineType(types: !6249)
!6249 = !{!162}
!6250 = !{!6251}
!6251 = !DILocalVariable(name: "result", scope: !6247, file: !6167, line: 973, type: !162)
!6252 = distinct !DILocation(line: 189, column: 16, scope: !6244)
!6253 = !{i64 3728037}
!6254 = !DILocation(line: 0, scope: !6247, inlinedAt: !6252)
!6255 = !DILocation(line: 189, column: 32, scope: !6244)
!6256 = !DILocalVariable(name: "control", arg: 1, scope: !6257, file: !6167, line: 1001, type: !162)
!6257 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6167, file: !6167, line: 1001, type: !6258, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !6260)
!6258 = !DISubroutineType(types: !6259)
!6259 = !{null, !162}
!6260 = !{!6256}
!6261 = !DILocation(line: 0, scope: !6257, inlinedAt: !6262)
!6262 = distinct !DILocation(line: 189, column: 2, scope: !6244)
!6263 = !DILocation(line: 1003, column: 3, scope: !6257, inlinedAt: !6262)
!6264 = !{i64 3728757}
!6265 = !DILocation(line: 260, column: 3, scope: !6240, inlinedAt: !6266)
!6266 = distinct !DILocation(line: 1004, column: 3, scope: !6257, inlinedAt: !6262)
!6267 = !DILocation(line: 191, column: 1, scope: !6244)
!6268 = distinct !DISubprogram(name: "arch_swap", scope: !6269, file: !6269, line: 33, type: !6177, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !6270)
!6269 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6270 = !{!6271}
!6271 = !DILocalVariable(name: "key", arg: 1, scope: !6268, file: !6269, line: 33, type: !32)
!6272 = !DILocation(line: 0, scope: !6268)
!6273 = !DILocation(line: 36, column: 2, scope: !6268)
!6274 = !DILocation(line: 36, column: 17, scope: !6268)
!6275 = !DILocation(line: 36, column: 25, scope: !6268)
!6276 = !DILocation(line: 37, column: 37, scope: !6268)
!6277 = !DILocation(line: 37, column: 17, scope: !6268)
!6278 = !DILocation(line: 37, column: 35, scope: !6268)
!6279 = !DILocation(line: 41, column: 12, scope: !6268)
!6280 = !DILocalVariable(name: "key", arg: 1, scope: !6281, file: !5993, line: 84, type: !32)
!6281 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5993, file: !5993, line: 84, type: !6004, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2674, retainedNodes: !6282)
!6282 = !{!6280}
!6283 = !DILocation(line: 0, scope: !6281, inlinedAt: !6284)
!6284 = distinct !DILocation(line: 44, column: 2, scope: !6268)
!6285 = !DILocation(line: 95, column: 2, scope: !6281, inlinedAt: !6284)
!6286 = !{i64 2277708}
!6287 = !DILocation(line: 53, column: 9, scope: !6268)
!6288 = !DILocation(line: 53, column: 24, scope: !6268)
!6289 = !DILocation(line: 53, column: 2, scope: !6268)
!6290 = distinct !DISubprogram(name: "arch_new_thread", scope: !6291, file: !6291, line: 56, type: !6292, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !6399)
!6291 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6292 = !DISubroutineType(types: !6293)
!6293 = !{null, !6294, !6394, !256, !3751, !102, !102, !102}
!6294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6295, size: 32)
!6295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !6296)
!6296 = !{!6297, !6355, !6367, !6368, !6369, !6370, !6376, !6389}
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6295, file: !359, line: 247, baseType: !6298, size: 384)
!6298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !6299)
!6299 = !{!6300, !6324, !6331, !6332, !6333, !6342, !6343, !6344}
!6300 = !DIDerivedType(tag: DW_TAG_member, scope: !6298, file: !359, line: 60, baseType: !6301, size: 64)
!6301 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6298, file: !359, line: 60, size: 64, elements: !6302)
!6302 = !{!6303, !6318}
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6301, file: !359, line: 61, baseType: !6304, size: 64)
!6304 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !6305)
!6305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !6306)
!6306 = !{!6307, !6313}
!6307 = !DIDerivedType(tag: DW_TAG_member, scope: !6305, file: !233, line: 38, baseType: !6308, size: 32)
!6308 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6305, file: !233, line: 38, size: 32, elements: !6309)
!6309 = !{!6310, !6312}
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6308, file: !233, line: 39, baseType: !6311, size: 32)
!6311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6305, size: 32)
!6312 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6308, file: !233, line: 40, baseType: !6311, size: 32)
!6313 = !DIDerivedType(tag: DW_TAG_member, scope: !6305, file: !233, line: 42, baseType: !6314, size: 32, offset: 32)
!6314 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6305, file: !233, line: 42, size: 32, elements: !6315)
!6315 = !{!6316, !6317}
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6314, file: !233, line: 43, baseType: !6311, size: 32)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6314, file: !233, line: 44, baseType: !6311, size: 32)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6301, file: !359, line: 62, baseType: !6319, size: 64)
!6319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !6320)
!6320 = !{!6321}
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6319, file: !384, line: 50, baseType: !6322, size: 64)
!6322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6323, size: 64, elements: !389)
!6323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6319, size: 32)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6298, file: !359, line: 68, baseType: !6325, size: 32, offset: 64)
!6325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6326, size: 32)
!6326 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !6327)
!6327 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !6328)
!6328 = !{!6329}
!6329 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6327, file: !228, line: 232, baseType: !6330, size: 64)
!6330 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !6305)
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6298, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6298, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!6333 = !DIDerivedType(tag: DW_TAG_member, scope: !6298, file: !359, line: 90, baseType: !6334, size: 16, offset: 112)
!6334 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6298, file: !359, line: 90, size: 16, elements: !6335)
!6335 = !{!6336, !6341}
!6336 = !DIDerivedType(tag: DW_TAG_member, scope: !6334, file: !359, line: 91, baseType: !6337, size: 16)
!6337 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6334, file: !359, line: 91, size: 16, elements: !6338)
!6338 = !{!6339, !6340}
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6337, file: !359, line: 96, baseType: !407, size: 8)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6337, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6334, file: !359, line: 100, baseType: !411, size: 16)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6298, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6298, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6298, file: !359, line: 131, baseType: !6345, size: 192, offset: 192)
!6345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !6346)
!6346 = !{!6347, !6348, !6354}
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6345, file: !228, line: 245, baseType: !6304, size: 64)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6345, file: !228, line: 246, baseType: !6349, size: 32, offset: 64)
!6349 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !6350)
!6350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6351, size: 32)
!6351 = !DISubroutineType(types: !6352)
!6352 = !{null, !6353}
!6353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6345, size: 32)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6345, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6295, file: !359, line: 250, baseType: !6356, size: 288, offset: 384)
!6356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !6357)
!6357 = !{!6358, !6359, !6360, !6361, !6362, !6363, !6364, !6365, !6366}
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6356, file: !428, line: 26, baseType: !162, size: 32)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6356, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6356, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6356, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6356, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6356, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6356, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!6365 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6356, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6356, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6295, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6295, file: !359, line: 256, baseType: !6326, size: 64, offset: 704)
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6295, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6295, file: !359, line: 300, baseType: !6371, size: 96, offset: 800)
!6371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !6372)
!6372 = !{!6373, !6374, !6375}
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6371, file: !359, line: 153, baseType: !22, size: 32)
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6371, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6371, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6295, file: !359, line: 325, baseType: !6377, size: 32, offset: 896)
!6377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6378, size: 32)
!6378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !6379)
!6379 = !{!6380, !6386, !6387}
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6378, file: !224, line: 5074, baseType: !6381, size: 96)
!6381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !6382)
!6382 = !{!6383, !6384, !6385}
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6381, file: !454, line: 57, baseType: !457, size: 32)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6381, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6381, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6378, file: !224, line: 5075, baseType: !6326, size: 64, offset: 96)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6378, file: !224, line: 5076, baseType: !6388, offset: 160)
!6388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6295, file: !359, line: 343, baseType: !6390, size: 64, offset: 928)
!6390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !6391)
!6391 = !{!6392, !6393}
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6390, file: !428, line: 63, baseType: !162, size: 32)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6390, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!6394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6395, size: 32)
!6395 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3752, line: 44, baseType: !6396)
!6396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2153, line: 47, size: 8, elements: !6397)
!6397 = !{!6398}
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6396, file: !2153, line: 48, baseType: !125, size: 8)
!6399 = !{!6400, !6401, !6402, !6403, !6404, !6405, !6406, !6407}
!6400 = !DILocalVariable(name: "thread", arg: 1, scope: !6290, file: !6291, line: 56, type: !6294)
!6401 = !DILocalVariable(name: "stack", arg: 2, scope: !6290, file: !6291, line: 56, type: !6394)
!6402 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6290, file: !6291, line: 57, type: !256)
!6403 = !DILocalVariable(name: "entry", arg: 4, scope: !6290, file: !6291, line: 57, type: !3751)
!6404 = !DILocalVariable(name: "p1", arg: 5, scope: !6290, file: !6291, line: 58, type: !102)
!6405 = !DILocalVariable(name: "p2", arg: 6, scope: !6290, file: !6291, line: 58, type: !102)
!6406 = !DILocalVariable(name: "p3", arg: 7, scope: !6290, file: !6291, line: 58, type: !102)
!6407 = !DILocalVariable(name: "iframe", scope: !6290, file: !6291, line: 60, type: !2705)
!6408 = !DILocation(line: 0, scope: !6290)
!6409 = !DILocation(line: 85, column: 11, scope: !6290)
!6410 = !DILocation(line: 93, column: 10, scope: !6290)
!6411 = !DILocation(line: 98, column: 13, scope: !6290)
!6412 = !DILocation(line: 100, column: 15, scope: !6290)
!6413 = !DILocation(line: 100, column: 10, scope: !6290)
!6414 = !DILocation(line: 100, column: 13, scope: !6290)
!6415 = !DILocation(line: 101, column: 15, scope: !6290)
!6416 = !DILocation(line: 101, column: 10, scope: !6290)
!6417 = !DILocation(line: 101, column: 13, scope: !6290)
!6418 = !DILocation(line: 102, column: 15, scope: !6290)
!6419 = !DILocation(line: 102, column: 10, scope: !6290)
!6420 = !DILocation(line: 102, column: 13, scope: !6290)
!6421 = !DILocation(line: 103, column: 15, scope: !6290)
!6422 = !DILocation(line: 103, column: 10, scope: !6290)
!6423 = !DILocation(line: 103, column: 13, scope: !6290)
!6424 = !DILocation(line: 106, column: 10, scope: !6290)
!6425 = !DILocation(line: 106, column: 15, scope: !6290)
!6426 = !DILocation(line: 122, column: 29, scope: !6290)
!6427 = !DILocation(line: 122, column: 23, scope: !6290)
!6428 = !DILocation(line: 122, column: 27, scope: !6290)
!6429 = !DILocation(line: 123, column: 15, scope: !6290)
!6430 = !DILocation(line: 123, column: 23, scope: !6290)
!6431 = !DILocation(line: 143, column: 1, scope: !6290)
!6432 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6291, file: !6291, line: 385, type: !6433, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !6436)
!6433 = !DISubroutineType(types: !6434)
!6434 = !{!162, !6435, !6435}
!6435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!6436 = !{!6437, !6438, !6439, !6442}
!6437 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6432, file: !6291, line: 385, type: !6435)
!6438 = !DILocalVariable(name: "psp", arg: 2, scope: !6432, file: !6291, line: 385, type: !6435)
!6439 = !DILocalVariable(name: "thread", scope: !6432, file: !6291, line: 388, type: !6440)
!6440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6441, size: 32)
!6441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6295)
!6442 = !DILocalVariable(name: "guard_len", scope: !6432, file: !6291, line: 405, type: !162)
!6443 = !DILocation(line: 0, scope: !6432)
!6444 = !DILocation(line: 388, column: 34, scope: !6432)
!6445 = !DILocation(line: 390, column: 13, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6432, file: !6291, line: 390, column: 6)
!6447 = !DILocation(line: 390, column: 6, scope: !6432)
!6448 = !DILocation(line: 438, column: 6, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6432, file: !6291, line: 438, column: 6)
!6450 = !DILocation(line: 438, column: 6, scope: !6432)
!6451 = !DILocation(line: 442, column: 3, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6449, file: !6291, line: 440, column: 22)
!6453 = !DILocation(line: 455, column: 1, scope: !6432)
!6454 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6291, file: !6291, line: 530, type: !6455, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2702, retainedNodes: !6457)
!6455 = !DISubroutineType(types: !6456)
!6456 = !{null, !6294, !256, !3751}
!6457 = !{!6458, !6459, !6460}
!6458 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6454, file: !6291, line: 530, type: !6294)
!6459 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6454, file: !6291, line: 530, type: !256)
!6460 = !DILocalVariable(name: "_main", arg: 3, scope: !6454, file: !6291, line: 531, type: !3751)
!6461 = !DILocation(line: 0, scope: !6454)
!6462 = !DILocation(line: 535, column: 11, scope: !6454)
!6463 = !DILocation(line: 560, column: 2, scope: !6454)
!6464 = !DILocation(line: 576, column: 2, scope: !6454)
!6465 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6466 = !DILocation(line: 603, column: 2, scope: !6454)
!6467 = distinct !DISubprogram(name: "z_arm_fault", scope: !6468, file: !6468, line: 1036, type: !6469, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !6484)
!6468 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6469 = !DISubroutineType(types: !6470)
!6470 = !{null, !162, !162, !162, !6471}
!6471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6472, size: 32)
!6472 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !428, line: 37, baseType: !6473)
!6473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !6474)
!6474 = !{!6475, !6476, !6477, !6478, !6479, !6480, !6481, !6482, !6483}
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6473, file: !428, line: 26, baseType: !162, size: 32)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6473, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6473, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6473, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6473, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!6480 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6473, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!6481 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6473, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6473, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6473, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!6484 = !{!6485, !6486, !6487, !6488, !6489, !6490, !6491, !6492, !6493, !6494}
!6485 = !DILocalVariable(name: "msp", arg: 1, scope: !6467, file: !6468, line: 1036, type: !162)
!6486 = !DILocalVariable(name: "psp", arg: 2, scope: !6467, file: !6468, line: 1036, type: !162)
!6487 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6467, file: !6468, line: 1036, type: !162)
!6488 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6467, file: !6468, line: 1037, type: !6471)
!6489 = !DILocalVariable(name: "reason", scope: !6467, file: !6468, line: 1039, type: !162)
!6490 = !DILocalVariable(name: "fault", scope: !6467, file: !6468, line: 1040, type: !107)
!6491 = !DILocalVariable(name: "recoverable", scope: !6467, file: !6468, line: 1041, type: !136)
!6492 = !DILocalVariable(name: "nested_exc", scope: !6467, file: !6468, line: 1041, type: !136)
!6493 = !DILocalVariable(name: "esf", scope: !6467, file: !6468, line: 1042, type: !2773)
!6494 = !DILocalVariable(name: "esf_copy", scope: !6467, file: !6468, line: 1047, type: !2774)
!6495 = !DILocation(line: 0, scope: !6467)
!6496 = !DILocation(line: 1040, column: 19, scope: !6467)
!6497 = !DILocation(line: 1040, column: 24, scope: !6467)
!6498 = !DILocation(line: 1041, column: 2, scope: !6467)
!6499 = !DILocation(line: 1047, column: 2, scope: !6467)
!6500 = !DILocation(line: 1047, column: 15, scope: !6467)
!6501 = !DILocalVariable(name: "key", arg: 1, scope: !6502, file: !5993, line: 84, type: !32)
!6502 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5993, file: !5993, line: 84, type: !6004, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !6503)
!6503 = !{!6501}
!6504 = !DILocation(line: 0, scope: !6502, inlinedAt: !6505)
!6505 = distinct !DILocation(line: 1050, column: 2, scope: !6467)
!6506 = !DILocation(line: 95, column: 2, scope: !6502, inlinedAt: !6505)
!6507 = !{i64 2310952}
!6508 = !DILocation(line: 1055, column: 9, scope: !6467)
!6509 = !DILocation(line: 1063, column: 11, scope: !6467)
!6510 = !DILocation(line: 1064, column: 6, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6467, file: !6468, line: 1064, column: 6)
!6512 = !{i8 0, i8 2}
!6513 = !DILocation(line: 1064, column: 6, scope: !6467)
!6514 = !DILocation(line: 1070, column: 20, scope: !6467)
!6515 = !DILocation(line: 1070, column: 2, scope: !6467)
!6516 = !DILocation(line: 1089, column: 6, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6467, file: !6468, line: 1089, column: 6)
!6518 = !DILocation(line: 0, scope: !6517)
!6519 = !DILocation(line: 1089, column: 6, scope: !6467)
!6520 = !DILocation(line: 1090, column: 28, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6522, file: !6468, line: 1090, column: 7)
!6522 = distinct !DILexicalBlock(scope: !6517, file: !6468, line: 1089, column: 18)
!6523 = !DILocation(line: 1090, column: 44, scope: !6521)
!6524 = !DILocation(line: 1090, column: 7, scope: !6522)
!6525 = !DILocation(line: 1091, column: 24, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6521, file: !6468, line: 1090, column: 50)
!6527 = !DILocation(line: 1092, column: 3, scope: !6526)
!6528 = !DILocation(line: 1094, column: 23, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6517, file: !6468, line: 1093, column: 9)
!6530 = !DILocation(line: 1097, column: 2, scope: !6467)
!6531 = !DILocation(line: 1098, column: 1, scope: !6467)
!6532 = distinct !DISubprogram(name: "get_esf", scope: !6468, file: !6468, line: 894, type: !6533, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !6536)
!6533 = !DISubroutineType(types: !6534)
!6534 = !{!2773, !162, !162, !162, !6535}
!6535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!6536 = !{!6537, !6538, !6539, !6540, !6541, !6542}
!6537 = !DILocalVariable(name: "msp", arg: 1, scope: !6532, file: !6468, line: 894, type: !162)
!6538 = !DILocalVariable(name: "psp", arg: 2, scope: !6532, file: !6468, line: 894, type: !162)
!6539 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6532, file: !6468, line: 894, type: !162)
!6540 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6532, file: !6468, line: 895, type: !6535)
!6541 = !DILocalVariable(name: "alternative_state_exc", scope: !6532, file: !6468, line: 897, type: !136)
!6542 = !DILocalVariable(name: "ptr_esf", scope: !6532, file: !6468, line: 898, type: !2773)
!6543 = !DILocation(line: 0, scope: !6532)
!6544 = !DILocation(line: 900, column: 14, scope: !6532)
!6545 = !DILocation(line: 902, column: 49, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6532, file: !6468, line: 902, column: 6)
!6547 = !DILocation(line: 902, column: 6, scope: !6532)
!6548 = !DILocation(line: 983, column: 18, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6532, file: !6468, line: 983, column: 6)
!6550 = !DILocation(line: 991, column: 7, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6552, file: !6468, line: 990, column: 30)
!6552 = distinct !DILexicalBlock(scope: !6532, file: !6468, line: 990, column: 6)
!6553 = !DILocation(line: 998, column: 16, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6555, file: !6468, line: 995, column: 10)
!6555 = distinct !DILexicalBlock(scope: !6551, file: !6468, line: 991, column: 7)
!6556 = !DILocation(line: 1002, column: 2, scope: !6532)
!6557 = !DILocation(line: 1003, column: 1, scope: !6532)
!6558 = distinct !DISubprogram(name: "fault_handle", scope: !6468, file: !6468, line: 786, type: !6559, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !6561)
!6559 = !DISubroutineType(types: !6560)
!6560 = !{!162, !2773, !107, !6535}
!6561 = !{!6562, !6563, !6564, !6565}
!6562 = !DILocalVariable(name: "esf", arg: 1, scope: !6558, file: !6468, line: 786, type: !2773)
!6563 = !DILocalVariable(name: "fault", arg: 2, scope: !6558, file: !6468, line: 786, type: !107)
!6564 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6558, file: !6468, line: 786, type: !6535)
!6565 = !DILocalVariable(name: "reason", scope: !6558, file: !6468, line: 788, type: !162)
!6566 = !DILocation(line: 0, scope: !6558)
!6567 = !DILocation(line: 790, column: 15, scope: !6558)
!6568 = !DILocation(line: 792, column: 2, scope: !6558)
!6569 = !DILocation(line: 794, column: 12, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6558, file: !6468, line: 792, column: 17)
!6571 = !DILocation(line: 795, column: 3, scope: !6570)
!6572 = !DILocation(line: 800, column: 12, scope: !6570)
!6573 = !DILocation(line: 801, column: 3, scope: !6570)
!6574 = !DILocation(line: 803, column: 12, scope: !6570)
!6575 = !DILocation(line: 804, column: 3, scope: !6570)
!6576 = !DILocation(line: 806, column: 12, scope: !6570)
!6577 = !DILocation(line: 807, column: 3, scope: !6570)
!6578 = !DILocation(line: 814, column: 3, scope: !6570)
!6579 = !DILocation(line: 815, column: 3, scope: !6570)
!6580 = !DILocation(line: 829, column: 2, scope: !6558)
!6581 = distinct !DISubprogram(name: "hard_fault", scope: !6468, file: !6468, line: 709, type: !6582, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !6584)
!6582 = !DISubroutineType(types: !6583)
!6583 = !{!162, !2773, !6535}
!6584 = !{!6585, !6586, !6587}
!6585 = !DILocalVariable(name: "esf", arg: 1, scope: !6581, file: !6468, line: 709, type: !2773)
!6586 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6581, file: !6468, line: 709, type: !6535)
!6587 = !DILocalVariable(name: "reason", scope: !6581, file: !6468, line: 711, type: !162)
!6588 = !DILocation(line: 0, scope: !6581)
!6589 = !DILocation(line: 732, column: 15, scope: !6581)
!6590 = !DILocation(line: 734, column: 12, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6581, file: !6468, line: 734, column: 6)
!6592 = !DILocation(line: 734, column: 17, scope: !6591)
!6593 = !DILocation(line: 734, column: 41, scope: !6591)
!6594 = !DILocation(line: 734, column: 6, scope: !6581)
!6595 = !DILocation(line: 736, column: 19, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6591, file: !6468, line: 736, column: 13)
!6597 = !DILocation(line: 736, column: 49, scope: !6596)
!6598 = !DILocation(line: 736, column: 13, scope: !6591)
!6599 = !DILocation(line: 738, column: 19, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6596, file: !6468, line: 738, column: 13)
!6601 = !DILocation(line: 738, column: 24, scope: !6600)
!6602 = !DILocation(line: 738, column: 47, scope: !6600)
!6603 = !DILocation(line: 738, column: 13, scope: !6596)
!6604 = !DILocation(line: 740, column: 7, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6606, file: !6468, line: 740, column: 7)
!6606 = distinct !DILexicalBlock(scope: !6600, file: !6468, line: 738, column: 53)
!6607 = !DILocation(line: 740, column: 7, scope: !6606)
!6608 = !DILocation(line: 742, column: 24, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6605, file: !6468, line: 740, column: 38)
!6610 = !DILocation(line: 743, column: 3, scope: !6609)
!6611 = !DILocation(line: 743, column: 20, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6605, file: !6468, line: 743, column: 14)
!6613 = !DILocation(line: 743, column: 25, scope: !6612)
!6614 = !DILocation(line: 743, column: 52, scope: !6612)
!6615 = !DILocation(line: 743, column: 14, scope: !6605)
!6616 = !DILocation(line: 744, column: 13, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6612, file: !6468, line: 743, column: 58)
!6618 = !DILocation(line: 745, column: 3, scope: !6617)
!6619 = !DILocation(line: 745, column: 20, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6612, file: !6468, line: 745, column: 14)
!6621 = !DILocation(line: 745, column: 25, scope: !6620)
!6622 = !DILocation(line: 745, column: 52, scope: !6620)
!6623 = !DILocation(line: 745, column: 14, scope: !6612)
!6624 = !DILocation(line: 746, column: 13, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6620, file: !6468, line: 745, column: 58)
!6626 = !DILocation(line: 747, column: 3, scope: !6625)
!6627 = !DILocation(line: 747, column: 20, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6620, file: !6468, line: 747, column: 14)
!6629 = !DILocation(line: 747, column: 52, scope: !6628)
!6630 = !DILocation(line: 747, column: 14, scope: !6620)
!6631 = !DILocation(line: 748, column: 13, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6628, file: !6468, line: 747, column: 58)
!6633 = !DILocation(line: 753, column: 3, scope: !6632)
!6634 = !DILocation(line: 766, column: 2, scope: !6581)
!6635 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6468, file: !6468, line: 229, type: !6559, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !6636)
!6636 = !{!6637, !6638, !6639, !6640, !6641, !6642, !6645}
!6637 = !DILocalVariable(name: "esf", arg: 1, scope: !6635, file: !6468, line: 229, type: !2773)
!6638 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6635, file: !6468, line: 229, type: !107)
!6639 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6635, file: !6468, line: 230, type: !6535)
!6640 = !DILocalVariable(name: "reason", scope: !6635, file: !6468, line: 232, type: !162)
!6641 = !DILocalVariable(name: "mmfar", scope: !6635, file: !6468, line: 233, type: !162)
!6642 = !DILocalVariable(name: "temp", scope: !6643, file: !6468, line: 254, type: !162)
!6643 = distinct !DILexicalBlock(scope: !6644, file: !6468, line: 244, column: 48)
!6644 = distinct !DILexicalBlock(scope: !6635, file: !6468, line: 244, column: 6)
!6645 = !DILocalVariable(name: "min_stack_ptr", scope: !6646, file: !6468, line: 309, type: !162)
!6646 = distinct !DILexicalBlock(scope: !6647, file: !6468, line: 308, column: 43)
!6647 = distinct !DILexicalBlock(scope: !6648, file: !6468, line: 308, column: 7)
!6648 = distinct !DILexicalBlock(scope: !6649, file: !6468, line: 289, column: 40)
!6649 = distinct !DILexicalBlock(scope: !6635, file: !6468, line: 288, column: 6)
!6650 = !DILocation(line: 0, scope: !6635)
!6651 = !DILocation(line: 237, column: 12, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6635, file: !6468, line: 237, column: 6)
!6653 = !DILocation(line: 241, column: 12, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6635, file: !6468, line: 241, column: 6)
!6655 = !DILocation(line: 244, column: 12, scope: !6644)
!6656 = !DILocation(line: 244, column: 17, scope: !6644)
!6657 = !DILocation(line: 244, column: 42, scope: !6644)
!6658 = !DILocation(line: 244, column: 6, scope: !6635)
!6659 = !DILocation(line: 254, column: 24, scope: !6643)
!6660 = !DILocation(line: 0, scope: !6643)
!6661 = !DILocation(line: 256, column: 13, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6643, file: !6468, line: 256, column: 7)
!6663 = !DILocation(line: 256, column: 18, scope: !6662)
!6664 = !DILocation(line: 256, column: 44, scope: !6662)
!6665 = !DILocation(line: 256, column: 7, scope: !6643)
!6666 = !DILocation(line: 259, column: 24, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6668, file: !6468, line: 259, column: 8)
!6668 = distinct !DILexicalBlock(scope: !6662, file: !6468, line: 256, column: 50)
!6669 = !DILocation(line: 259, column: 8, scope: !6668)
!6670 = !DILocation(line: 261, column: 15, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6667, file: !6468, line: 259, column: 30)
!6672 = !DILocation(line: 262, column: 4, scope: !6671)
!6673 = !DILocation(line: 265, column: 12, scope: !6674)
!6674 = distinct !DILexicalBlock(scope: !6635, file: !6468, line: 265, column: 6)
!6675 = !DILocation(line: 269, column: 12, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6635, file: !6468, line: 269, column: 6)
!6677 = !DILocation(line: 288, column: 12, scope: !6649)
!6678 = !DILocation(line: 288, column: 17, scope: !6649)
!6679 = !DILocation(line: 288, column: 41, scope: !6649)
!6680 = !DILocation(line: 289, column: 9, scope: !6649)
!6681 = !DILocation(line: 289, column: 14, scope: !6649)
!6682 = !DILocation(line: 288, column: 6, scope: !6635)
!6683 = !DILocation(line: 308, column: 12, scope: !6647)
!6684 = !DILocation(line: 308, column: 17, scope: !6647)
!6685 = !DILocation(line: 308, column: 7, scope: !6648)
!6686 = !DILocation(line: 310, column: 6, scope: !6646)
!6687 = !DILocation(line: 309, column: 29, scope: !6646)
!6688 = !DILocation(line: 0, scope: !6646)
!6689 = !DILocation(line: 312, column: 8, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6646, file: !6468, line: 312, column: 8)
!6691 = !DILocation(line: 312, column: 8, scope: !6646)
!6692 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6693, file: !6167, line: 1099, type: !162)
!6693 = distinct !DISubprogram(name: "__set_PSP", scope: !6167, file: !6167, line: 1099, type: !6258, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !6694)
!6694 = !{!6692}
!6695 = !DILocation(line: 0, scope: !6693, inlinedAt: !6696)
!6696 = distinct !DILocation(line: 338, column: 5, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6690, file: !6468, line: 312, column: 23)
!6698 = !DILocation(line: 1101, column: 3, scope: !6693, inlinedAt: !6696)
!6699 = !{i64 3758176}
!6700 = !DILocation(line: 341, column: 4, scope: !6697)
!6701 = !DILocation(line: 360, column: 12, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6635, file: !6468, line: 360, column: 6)
!6703 = !DILocation(line: 360, column: 17, scope: !6702)
!6704 = !DILocation(line: 360, column: 41, scope: !6702)
!6705 = !DILocation(line: 360, column: 6, scope: !6635)
!6706 = !DILocation(line: 361, column: 14, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6702, file: !6468, line: 360, column: 47)
!6708 = !DILocation(line: 362, column: 2, scope: !6707)
!6709 = !DILocation(line: 366, column: 12, scope: !6635)
!6710 = !DILocation(line: 369, column: 15, scope: !6635)
!6711 = !DILocation(line: 371, column: 2, scope: !6635)
!6712 = distinct !DISubprogram(name: "bus_fault", scope: !6468, file: !6468, line: 383, type: !6713, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !6715)
!6713 = !DISubroutineType(types: !6714)
!6714 = !{!107, !2773, !107, !6535}
!6715 = !{!6716, !6717, !6718, !6719, !6720}
!6716 = !DILocalVariable(name: "esf", arg: 1, scope: !6712, file: !6468, line: 383, type: !2773)
!6717 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6712, file: !6468, line: 383, type: !107)
!6718 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6712, file: !6468, line: 383, type: !6535)
!6719 = !DILocalVariable(name: "reason", scope: !6712, file: !6468, line: 385, type: !162)
!6720 = !DILocalVariable(name: "bfar", scope: !6721, file: !6468, line: 405, type: !162)
!6721 = distinct !DILexicalBlock(scope: !6722, file: !6468, line: 395, column: 42)
!6722 = distinct !DILexicalBlock(scope: !6712, file: !6468, line: 395, column: 6)
!6723 = !DILocation(line: 0, scope: !6712)
!6724 = !DILocation(line: 389, column: 11, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6712, file: !6468, line: 389, column: 6)
!6726 = !DILocation(line: 392, column: 11, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6712, file: !6468, line: 392, column: 6)
!6728 = !DILocation(line: 395, column: 11, scope: !6722)
!6729 = !DILocation(line: 395, column: 16, scope: !6722)
!6730 = !DILocation(line: 395, column: 6, scope: !6712)
!6731 = !DILocation(line: 405, column: 3, scope: !6721)
!6732 = !DILocation(line: 0, scope: !6721)
!6733 = !DILocation(line: 407, column: 13, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6721, file: !6468, line: 407, column: 7)
!6735 = !DILocation(line: 407, column: 18, scope: !6734)
!6736 = !DILocation(line: 407, column: 44, scope: !6734)
!6737 = !DILocation(line: 407, column: 7, scope: !6721)
!6738 = !DILocation(line: 411, column: 15, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6740, file: !6468, line: 409, column: 30)
!6740 = distinct !DILexicalBlock(scope: !6741, file: !6468, line: 409, column: 8)
!6741 = distinct !DILexicalBlock(scope: !6734, file: !6468, line: 407, column: 50)
!6742 = !DILocation(line: 412, column: 4, scope: !6739)
!6743 = !DILocation(line: 415, column: 11, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6712, file: !6468, line: 415, column: 6)
!6745 = !DILocation(line: 418, column: 12, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6712, file: !6468, line: 418, column: 6)
!6747 = !DILocation(line: 418, column: 17, scope: !6746)
!6748 = !DILocation(line: 418, column: 41, scope: !6746)
!6749 = !DILocation(line: 418, column: 6, scope: !6712)
!6750 = !DILocation(line: 423, column: 18, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6746, file: !6468, line: 423, column: 13)
!6752 = !DILocation(line: 524, column: 12, scope: !6712)
!6753 = !DILocation(line: 526, column: 15, scope: !6712)
!6754 = !DILocation(line: 528, column: 2, scope: !6712)
!6755 = distinct !DISubprogram(name: "usage_fault", scope: !6468, file: !6468, line: 539, type: !6756, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !6760)
!6756 = !DISubroutineType(types: !6757)
!6757 = !{!162, !6758}
!6758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6759, size: 32)
!6759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2774)
!6760 = !{!6761, !6762}
!6761 = !DILocalVariable(name: "esf", arg: 1, scope: !6755, file: !6468, line: 539, type: !6758)
!6762 = !DILocalVariable(name: "reason", scope: !6755, file: !6468, line: 541, type: !162)
!6763 = !DILocation(line: 0, scope: !6755)
!6764 = !DILocation(line: 546, column: 12, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6755, file: !6468, line: 546, column: 6)
!6766 = !DILocation(line: 549, column: 12, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6755, file: !6468, line: 549, column: 6)
!6768 = !DILocation(line: 567, column: 12, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6755, file: !6468, line: 567, column: 6)
!6770 = !DILocation(line: 570, column: 12, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6755, file: !6468, line: 570, column: 6)
!6772 = !DILocation(line: 573, column: 12, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6755, file: !6468, line: 573, column: 6)
!6774 = !DILocation(line: 576, column: 12, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6755, file: !6468, line: 576, column: 6)
!6776 = !DILocation(line: 581, column: 12, scope: !6755)
!6777 = !DILocation(line: 583, column: 2, scope: !6755)
!6778 = distinct !DISubprogram(name: "debug_monitor", scope: !6468, file: !6468, line: 632, type: !6779, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !6781)
!6779 = !DISubroutineType(types: !6780)
!6780 = !{null, !2773, !6535}
!6781 = !{!6782, !6783}
!6782 = !DILocalVariable(name: "esf", arg: 1, scope: !6778, file: !6468, line: 632, type: !2773)
!6783 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6778, file: !6468, line: 632, type: !6535)
!6784 = !DILocation(line: 0, scope: !6778)
!6785 = !DILocation(line: 634, column: 15, scope: !6778)
!6786 = !DILocation(line: 652, column: 1, scope: !6778)
!6787 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6468, file: !6468, line: 658, type: !6788, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !6790)
!6788 = !DISubroutineType(types: !6789)
!6789 = !{!136, !2773}
!6790 = !{!6791, !6792, !6793}
!6791 = !DILocalVariable(name: "esf", arg: 1, scope: !6787, file: !6468, line: 658, type: !2773)
!6792 = !DILocalVariable(name: "ret_addr", scope: !6787, file: !6468, line: 660, type: !2546)
!6793 = !DILocalVariable(name: "fault_insn", scope: !6787, file: !6468, line: 686, type: !411)
!6794 = !DILocation(line: 0, scope: !6787)
!6795 = !DILocation(line: 660, column: 46, scope: !6787)
!6796 = !DILocation(line: 660, column: 23, scope: !6787)
!6797 = !DILocation(line: 682, column: 11, scope: !6787)
!6798 = !DILocation(line: 271, column: 3, scope: !6799, inlinedAt: !6800)
!6799 = distinct !DISubprogram(name: "__DSB", scope: !6167, file: !6167, line: 269, type: !3211, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !250)
!6800 = distinct !DILocation(line: 683, column: 2, scope: !6787)
!6801 = !{i64 3734311}
!6802 = !DILocation(line: 260, column: 3, scope: !6803, inlinedAt: !6804)
!6803 = distinct !DISubprogram(name: "__ISB", scope: !6167, file: !6167, line: 258, type: !3211, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !250)
!6804 = distinct !DILocation(line: 684, column: 2, scope: !6787)
!6805 = !{i64 3734028}
!6806 = !DILocation(line: 686, column: 35, scope: !6787)
!6807 = !DILocation(line: 686, column: 24, scope: !6787)
!6808 = !DILocation(line: 688, column: 11, scope: !6787)
!6809 = !DILocation(line: 271, column: 3, scope: !6799, inlinedAt: !6810)
!6810 = distinct !DILocation(line: 689, column: 2, scope: !6787)
!6811 = !DILocation(line: 260, column: 3, scope: !6803, inlinedAt: !6812)
!6812 = distinct !DILocation(line: 690, column: 2, scope: !6787)
!6813 = !DILocation(line: 693, column: 45, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6787, file: !6468, line: 693, column: 6)
!6815 = !DILocation(line: 699, column: 1, scope: !6787)
!6816 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6468, file: !6468, line: 1107, type: !3211, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2745, retainedNodes: !250)
!6817 = !DILocation(line: 1111, column: 11, scope: !6816)
!6818 = !DILocation(line: 1136, column: 1, scope: !6816)
!6819 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6820, file: !6820, line: 26, type: !3211, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2816, retainedNodes: !6821)
!6820 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6821 = !{!6822}
!6822 = !DILocalVariable(name: "irq", scope: !6819, file: !6820, line: 28, type: !107)
!6823 = !DILocation(line: 0, scope: !6819)
!6824 = !DILocation(line: 30, column: 2, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6819, file: !6820, line: 30, column: 2)
!6826 = !DILocation(line: 31, column: 3, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6828, file: !6820, line: 30, column: 39)
!6828 = distinct !DILexicalBlock(scope: !6825, file: !6820, line: 30, column: 2)
!6829 = !DILocation(line: 30, column: 35, scope: !6828)
!6830 = !DILocation(line: 30, column: 13, scope: !6828)
!6831 = distinct !{!6831, !6824, !6832}
!6832 = !DILocation(line: 32, column: 2, scope: !6825)
!6833 = !DILocation(line: 33, column: 1, scope: !6819)
!6834 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !497, file: !497, line: 1814, type: !6201, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2816, retainedNodes: !6835)
!6835 = !{!6836, !6837}
!6836 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6834, file: !497, line: 1814, type: !762)
!6837 = !DILocalVariable(name: "priority", arg: 2, scope: !6834, file: !497, line: 1814, type: !162)
!6838 = !DILocation(line: 0, scope: !6834)
!6839 = !DILocation(line: 1816, column: 7, scope: !6834)
!6840 = !DILocation(line: 0, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6834, file: !497, line: 1816, column: 7)
!6842 = !DILocation(line: 1824, column: 1, scope: !6834)
!6843 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6844, file: !6844, line: 27, type: !6845, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !6948)
!6844 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6845 = !DISubroutineType(types: !6846)
!6846 = !{null, !6847}
!6847 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !6848)
!6848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6849, size: 32)
!6849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !6850)
!6850 = !{!6851, !6909, !6921, !6922, !6923, !6924, !6930, !6943}
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6849, file: !359, line: 247, baseType: !6852, size: 384)
!6852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !6853)
!6853 = !{!6854, !6878, !6885, !6886, !6887, !6896, !6897, !6898}
!6854 = !DIDerivedType(tag: DW_TAG_member, scope: !6852, file: !359, line: 60, baseType: !6855, size: 64)
!6855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6852, file: !359, line: 60, size: 64, elements: !6856)
!6856 = !{!6857, !6872}
!6857 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6855, file: !359, line: 61, baseType: !6858, size: 64)
!6858 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !6859)
!6859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !6860)
!6860 = !{!6861, !6867}
!6861 = !DIDerivedType(tag: DW_TAG_member, scope: !6859, file: !233, line: 38, baseType: !6862, size: 32)
!6862 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6859, file: !233, line: 38, size: 32, elements: !6863)
!6863 = !{!6864, !6866}
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6862, file: !233, line: 39, baseType: !6865, size: 32)
!6865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6859, size: 32)
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6862, file: !233, line: 40, baseType: !6865, size: 32)
!6867 = !DIDerivedType(tag: DW_TAG_member, scope: !6859, file: !233, line: 42, baseType: !6868, size: 32, offset: 32)
!6868 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6859, file: !233, line: 42, size: 32, elements: !6869)
!6869 = !{!6870, !6871}
!6870 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6868, file: !233, line: 43, baseType: !6865, size: 32)
!6871 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6868, file: !233, line: 44, baseType: !6865, size: 32)
!6872 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6855, file: !359, line: 62, baseType: !6873, size: 64)
!6873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !6874)
!6874 = !{!6875}
!6875 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6873, file: !384, line: 50, baseType: !6876, size: 64)
!6876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6877, size: 64, elements: !389)
!6877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6873, size: 32)
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6852, file: !359, line: 68, baseType: !6879, size: 32, offset: 64)
!6879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6880, size: 32)
!6880 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !6881)
!6881 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !6882)
!6882 = !{!6883}
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6881, file: !228, line: 232, baseType: !6884, size: 64)
!6884 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !6859)
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6852, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!6886 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6852, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!6887 = !DIDerivedType(tag: DW_TAG_member, scope: !6852, file: !359, line: 90, baseType: !6888, size: 16, offset: 112)
!6888 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6852, file: !359, line: 90, size: 16, elements: !6889)
!6889 = !{!6890, !6895}
!6890 = !DIDerivedType(tag: DW_TAG_member, scope: !6888, file: !359, line: 91, baseType: !6891, size: 16)
!6891 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6888, file: !359, line: 91, size: 16, elements: !6892)
!6892 = !{!6893, !6894}
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6891, file: !359, line: 96, baseType: !407, size: 8)
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6891, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!6895 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6888, file: !359, line: 100, baseType: !411, size: 16)
!6896 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6852, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6852, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6852, file: !359, line: 131, baseType: !6899, size: 192, offset: 192)
!6899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !6900)
!6900 = !{!6901, !6902, !6908}
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6899, file: !228, line: 245, baseType: !6858, size: 64)
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6899, file: !228, line: 246, baseType: !6903, size: 32, offset: 64)
!6903 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !6904)
!6904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6905, size: 32)
!6905 = !DISubroutineType(types: !6906)
!6906 = !{null, !6907}
!6907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6899, size: 32)
!6908 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6899, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6849, file: !359, line: 250, baseType: !6910, size: 288, offset: 384)
!6910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !6911)
!6911 = !{!6912, !6913, !6914, !6915, !6916, !6917, !6918, !6919, !6920}
!6912 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6910, file: !428, line: 26, baseType: !162, size: 32)
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6910, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6910, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6910, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6910, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6910, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6910, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6910, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6910, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!6921 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6849, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6849, file: !359, line: 256, baseType: !6880, size: 64, offset: 704)
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6849, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!6924 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6849, file: !359, line: 300, baseType: !6925, size: 96, offset: 800)
!6925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !6926)
!6926 = !{!6927, !6928, !6929}
!6927 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6925, file: !359, line: 153, baseType: !22, size: 32)
!6928 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6925, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!6929 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6925, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!6930 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6849, file: !359, line: 325, baseType: !6931, size: 32, offset: 896)
!6931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6932, size: 32)
!6932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !6933)
!6933 = !{!6934, !6940, !6941}
!6934 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6932, file: !224, line: 5074, baseType: !6935, size: 96)
!6935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !6936)
!6936 = !{!6937, !6938, !6939}
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6935, file: !454, line: 57, baseType: !457, size: 32)
!6938 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6935, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6935, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!6940 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6932, file: !224, line: 5075, baseType: !6880, size: 64, offset: 96)
!6941 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6932, file: !224, line: 5076, baseType: !6942, offset: 160)
!6942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!6943 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6849, file: !359, line: 343, baseType: !6944, size: 64, offset: 928)
!6944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !6945)
!6945 = !{!6946, !6947}
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6944, file: !428, line: 63, baseType: !162, size: 32)
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6944, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!6948 = !{!6949}
!6949 = !DILocalVariable(name: "thread", arg: 1, scope: !6843, file: !6844, line: 27, type: !6847)
!6950 = !DILocation(line: 0, scope: !6843)
!6951 = !DILocation(line: 29, column: 6, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6843, file: !6844, line: 29, column: 6)
!6953 = !DILocation(line: 29, column: 15, scope: !6952)
!6954 = !DILocation(line: 29, column: 6, scope: !6843)
!6955 = !DILocation(line: 1031, column: 3, scope: !6956, inlinedAt: !6959)
!6956 = distinct !DISubprogram(name: "__get_IPSR", scope: !6167, file: !6167, line: 1027, type: !6248, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !6957)
!6957 = !{!6958}
!6958 = !DILocalVariable(name: "result", scope: !6956, file: !6167, line: 1029, type: !162)
!6959 = distinct !DILocation(line: 48, column: 10, scope: !6960, inlinedAt: !6964)
!6960 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6961, file: !6961, line: 46, type: !6962, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2861, retainedNodes: !250)
!6961 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6962 = !DISubroutineType(types: !6963)
!6963 = !{!136}
!6964 = distinct !DILocation(line: 30, column: 7, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6966, file: !6844, line: 30, column: 7)
!6966 = distinct !DILexicalBlock(scope: !6952, file: !6844, line: 29, column: 26)
!6967 = !{i64 3723159}
!6968 = !DILocation(line: 0, scope: !6956, inlinedAt: !6959)
!6969 = !DILocation(line: 48, column: 9, scope: !6960, inlinedAt: !6964)
!6970 = !DILocation(line: 30, column: 7, scope: !6966)
!6971 = !DILocation(line: 42, column: 14, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6965, file: !6844, line: 30, column: 25)
!6973 = !DILocation(line: 48, column: 15, scope: !6972)
!6974 = !DILocation(line: 49, column: 3, scope: !6972)
!6975 = !DILocation(line: 52, column: 2, scope: !6843)
!6976 = !DILocation(line: 53, column: 1, scope: !6843)
!6977 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !354, file: !354, line: 127, type: !3211, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !347, retainedNodes: !250)
!6978 = !DILocation(line: 134, column: 2, scope: !6977)
!6979 = !DILocation(line: 156, column: 1, scope: !6977)
!6980 = !DILocation(line: 0, scope: !353)
!6981 = !DILocation(line: 289, column: 36, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !353, file: !354, line: 285, column: 2)
!6983 = !DILocation(line: 289, column: 42, scope: !6982)
!6984 = !DILocation(line: 300, column: 36, scope: !353)
!6985 = !DILocation(line: 301, column: 35, scope: !353)
!6986 = !DILocation(line: 302, column: 37, scope: !353)
!6987 = !DILocation(line: 311, column: 2, scope: !353)
!6988 = !DILocation(line: 316, column: 1, scope: !353)
!6989 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !525, file: !525, line: 180, type: !3211, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6990 = !DILocation(line: 188, column: 12, scope: !6989)
!6991 = !DILocation(line: 271, column: 3, scope: !6992, inlinedAt: !6993)
!6992 = distinct !DISubprogram(name: "__DSB", scope: !6167, file: !6167, line: 269, type: !3211, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6993 = distinct !DILocation(line: 192, column: 2, scope: !6989)
!6994 = !{i64 3911061}
!6995 = !DILocation(line: 260, column: 3, scope: !6996, inlinedAt: !6997)
!6996 = distinct !DISubprogram(name: "__ISB", scope: !6167, file: !6167, line: 258, type: !3211, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6997 = distinct !DILocation(line: 193, column: 2, scope: !6989)
!6998 = !{i64 3910778}
!6999 = !DILocation(line: 194, column: 1, scope: !6989)
!7000 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !525, file: !525, line: 199, type: !3211, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!7001 = !DILocation(line: 282, column: 3, scope: !7002, inlinedAt: !7003)
!7002 = distinct !DISubprogram(name: "__DMB", scope: !6167, file: !6167, line: 280, type: !3211, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!7003 = distinct !DILocation(line: 202, column: 2, scope: !7000)
!7004 = !{i64 3911337}
!7005 = !DILocation(line: 205, column: 12, scope: !7000)
!7006 = !DILocation(line: 206, column: 1, scope: !7000)
!7007 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !525, file: !525, line: 275, type: !7008, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7021)
!7008 = !DISubroutineType(types: !7009)
!7009 = !{null, !7010, !177, !6435, !6435}
!7010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7011, size: 32)
!7011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7012)
!7012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !476, line: 52, size: 96, elements: !7013)
!7013 = !{!7014, !7015, !7016}
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7012, file: !476, line: 53, baseType: !22, size: 32)
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7012, file: !476, line: 54, baseType: !252, size: 32, offset: 32)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7012, file: !476, line: 55, baseType: !7017, size: 32, offset: 64)
!7017 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !482, line: 151, baseType: !7018)
!7018 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !482, line: 149, size: 32, elements: !7019)
!7019 = !{!7020}
!7020 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7018, file: !482, line: 150, baseType: !162, size: 32)
!7021 = !{!7022, !7023, !7024, !7025}
!7022 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7007, file: !525, line: 276, type: !7010)
!7023 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7007, file: !525, line: 276, type: !177)
!7024 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7007, file: !525, line: 277, type: !6435)
!7025 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7007, file: !525, line: 277, type: !6435)
!7026 = !DILocation(line: 0, scope: !7007)
!7027 = !DILocation(line: 279, column: 6, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7007, file: !525, line: 279, column: 6)
!7029 = !DILocation(line: 285, column: 1, scope: !7007)
!7030 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7031, file: !7031, line: 220, type: !7032, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7034)
!7031 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7032 = !DISubroutineType(types: !7033)
!7033 = !{!107, !7010, !177, !6435, !6435}
!7034 = !{!7035, !7036, !7037, !7038, !7039}
!7035 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7030, file: !7031, line: 221, type: !7010)
!7036 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7030, file: !7031, line: 221, type: !177)
!7037 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7030, file: !7031, line: 222, type: !6435)
!7038 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7030, file: !7031, line: 223, type: !6435)
!7039 = !DILocalVariable(name: "mpu_reg_index", scope: !7030, file: !7031, line: 225, type: !107)
!7040 = !DILocation(line: 0, scope: !7030)
!7041 = !DILocation(line: 225, column: 22, scope: !7030)
!7042 = !DILocation(line: 233, column: 18, scope: !7030)
!7043 = !DILocation(line: 236, column: 23, scope: !7030)
!7044 = !DILocation(line: 236, column: 21, scope: !7030)
!7045 = !DILocation(line: 238, column: 2, scope: !7030)
!7046 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !525, file: !525, line: 105, type: !7047, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7049)
!7047 = !DISubroutineType(types: !7048)
!7048 = !{!107, !7010, !133, !133, !136}
!7049 = !{!7050, !7051, !7052, !7053, !7054, !7055}
!7050 = !DILocalVariable(name: "regions", arg: 1, scope: !7046, file: !525, line: 106, type: !7010)
!7051 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7046, file: !525, line: 106, type: !133)
!7052 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7046, file: !525, line: 106, type: !133)
!7053 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7046, file: !525, line: 107, type: !136)
!7054 = !DILocalVariable(name: "i", scope: !7046, file: !525, line: 109, type: !107)
!7055 = !DILocalVariable(name: "reg_index", scope: !7046, file: !525, line: 110, type: !107)
!7056 = !DILocation(line: 0, scope: !7046)
!7057 = !DILocation(line: 110, column: 18, scope: !7046)
!7058 = !DILocation(line: 112, column: 16, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7060, file: !525, line: 112, column: 2)
!7060 = distinct !DILexicalBlock(scope: !7046, file: !525, line: 112, column: 2)
!7061 = !DILocation(line: 112, column: 2, scope: !7060)
!7062 = !DILocation(line: 113, column: 7, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7064, file: !525, line: 113, column: 7)
!7064 = distinct !DILexicalBlock(scope: !7059, file: !525, line: 112, column: 36)
!7065 = !DILocation(line: 113, column: 18, scope: !7063)
!7066 = !DILocation(line: 113, column: 23, scope: !7063)
!7067 = !DILocation(line: 113, column: 7, scope: !7064)
!7068 = !DILocation(line: 118, column: 23, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7064, file: !525, line: 118, column: 7)
!7070 = !DILocation(line: 119, column: 7, scope: !7069)
!7071 = !DILocation(line: 118, column: 7, scope: !7064)
!7072 = !DILocation(line: 124, column: 36, scope: !7064)
!7073 = !DILocation(line: 124, column: 15, scope: !7064)
!7074 = !DILocation(line: 126, column: 17, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7064, file: !525, line: 126, column: 7)
!7076 = !DILocation(line: 126, column: 7, scope: !7064)
!7077 = !DILocation(line: 131, column: 12, scope: !7064)
!7078 = !DILocation(line: 132, column: 2, scope: !7064)
!7079 = !DILocation(line: 112, column: 32, scope: !7059)
!7080 = distinct !{!7080, !7061, !7081}
!7081 = !DILocation(line: 132, column: 2, scope: !7060)
!7082 = !DILocation(line: 135, column: 1, scope: !7046)
!7083 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7031, file: !7031, line: 63, type: !7084, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7086)
!7084 = !DISubroutineType(types: !7085)
!7085 = !{!107, !7010}
!7086 = !{!7087, !7088}
!7087 = !DILocalVariable(name: "part", arg: 1, scope: !7083, file: !7031, line: 63, type: !7010)
!7088 = !DILocalVariable(name: "partition_is_valid", scope: !7083, file: !7031, line: 70, type: !107)
!7089 = !DILocation(line: 0, scope: !7083)
!7090 = !DILocation(line: 71, column: 11, scope: !7083)
!7091 = !DILocation(line: 71, column: 37, scope: !7083)
!7092 = !DILocation(line: 72, column: 3, scope: !7083)
!7093 = !DILocation(line: 71, column: 30, scope: !7083)
!7094 = !DILocation(line: 75, column: 11, scope: !7083)
!7095 = !DILocation(line: 75, column: 17, scope: !7083)
!7096 = !DILocation(line: 75, column: 38, scope: !7083)
!7097 = !DILocation(line: 77, column: 2, scope: !7083)
!7098 = distinct !DISubprogram(name: "mpu_configure_region", scope: !525, file: !525, line: 79, type: !7099, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7101)
!7099 = !DISubroutineType(types: !7100)
!7100 = !{!107, !177, !7010}
!7101 = !{!7102, !7103, !7104}
!7102 = !DILocalVariable(name: "index", arg: 1, scope: !7098, file: !525, line: 79, type: !177)
!7103 = !DILocalVariable(name: "new_region", arg: 2, scope: !7098, file: !525, line: 80, type: !7010)
!7104 = !DILocalVariable(name: "region_conf", scope: !7098, file: !525, line: 82, type: !514)
!7105 = !DILocation(line: 0, scope: !7098)
!7106 = !DILocation(line: 82, column: 2, scope: !7098)
!7107 = !DILocation(line: 82, column: 24, scope: !7098)
!7108 = !DILocation(line: 87, column: 33, scope: !7098)
!7109 = !DILocation(line: 87, column: 14, scope: !7098)
!7110 = !DILocation(line: 87, column: 19, scope: !7098)
!7111 = !DILocation(line: 91, column: 55, scope: !7098)
!7112 = !DILocation(line: 92, column: 16, scope: !7098)
!7113 = !DILocation(line: 92, column: 53, scope: !7098)
!7114 = !DILocation(line: 91, column: 2, scope: !7098)
!7115 = !DILocation(line: 95, column: 9, scope: !7098)
!7116 = !DILocation(line: 97, column: 1, scope: !7098)
!7117 = !DILocation(line: 95, column: 2, scope: !7098)
!7118 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7031, file: !7031, line: 113, type: !7119, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7124)
!7119 = !DISubroutineType(types: !7120)
!7120 = !{null, !7121, !7122, !162, !162}
!7121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 32)
!7122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7123, size: 32)
!7123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7017)
!7124 = !{!7125, !7126, !7127, !7128}
!7125 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7118, file: !7031, line: 114, type: !7121)
!7126 = !DILocalVariable(name: "attr", arg: 2, scope: !7118, file: !7031, line: 115, type: !7122)
!7127 = !DILocalVariable(name: "base", arg: 3, scope: !7118, file: !7031, line: 115, type: !162)
!7128 = !DILocalVariable(name: "size", arg: 4, scope: !7118, file: !7031, line: 115, type: !162)
!7129 = !DILocation(line: 0, scope: !7118)
!7130 = !DILocation(line: 127, column: 23, scope: !7118)
!7131 = !DILocation(line: 127, column: 35, scope: !7118)
!7132 = !DILocation(line: 127, column: 33, scope: !7118)
!7133 = !DILocation(line: 127, column: 10, scope: !7118)
!7134 = !DILocation(line: 127, column: 15, scope: !7118)
!7135 = !DILocation(line: 129, column: 1, scope: !7118)
!7136 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !525, file: !525, line: 57, type: !7137, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7139)
!7137 = !DISubroutineType(types: !7138)
!7138 = !{!107, !177, !512}
!7139 = !{!7140, !7141}
!7140 = !DILocalVariable(name: "index", arg: 1, scope: !7136, file: !525, line: 57, type: !177)
!7141 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7136, file: !525, line: 58, type: !512)
!7142 = !DILocation(line: 0, scope: !7136)
!7143 = !DILocation(line: 61, column: 6, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7136, file: !525, line: 61, column: 6)
!7145 = !DILocation(line: 61, column: 12, scope: !7144)
!7146 = !DILocation(line: 61, column: 6, scope: !7136)
!7147 = !DILocation(line: 71, column: 2, scope: !7136)
!7148 = !DILocation(line: 73, column: 2, scope: !7136)
!7149 = !DILocation(line: 74, column: 1, scope: !7136)
!7150 = distinct !DISubprogram(name: "region_init", scope: !7031, file: !7031, line: 29, type: !7151, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7153)
!7151 = !DISubroutineType(types: !7152)
!7152 = !{null, !6435, !512}
!7153 = !{!7154, !7155}
!7154 = !DILocalVariable(name: "index", arg: 1, scope: !7150, file: !7031, line: 29, type: !6435)
!7155 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7150, file: !7031, line: 30, type: !512)
!7156 = !DILocation(line: 0, scope: !7150)
!7157 = !DILocation(line: 33, column: 2, scope: !7150)
!7158 = !DILocation(line: 47, column: 28, scope: !7150)
!7159 = !DILocation(line: 47, column: 33, scope: !7150)
!7160 = !DILocation(line: 48, column: 26, scope: !7150)
!7161 = !DILocation(line: 47, column: 12, scope: !7150)
!7162 = !DILocation(line: 49, column: 32, scope: !7150)
!7163 = !DILocation(line: 49, column: 37, scope: !7150)
!7164 = !DILocation(line: 49, column: 12, scope: !7150)
!7165 = !DILocation(line: 53, column: 1, scope: !7150)
!7166 = distinct !DISubprogram(name: "set_region_number", scope: !7167, file: !7167, line: 32, type: !6258, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7168)
!7167 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7168 = !{!7169}
!7169 = !DILocalVariable(name: "index", arg: 1, scope: !7166, file: !7167, line: 32, type: !162)
!7170 = !DILocation(line: 0, scope: !7166)
!7171 = !DILocation(line: 34, column: 11, scope: !7166)
!7172 = !DILocation(line: 35, column: 1, scope: !7166)
!7173 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7031, file: !7031, line: 88, type: !7174, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7176)
!7174 = !DISubroutineType(types: !7175)
!7175 = !{!162, !162}
!7176 = !{!7177}
!7177 = !DILocalVariable(name: "size", arg: 1, scope: !7173, file: !7031, line: 88, type: !162)
!7178 = !DILocation(line: 0, scope: !7173)
!7179 = !DILocation(line: 91, column: 11, scope: !7180)
!7180 = distinct !DILexicalBlock(scope: !7173, file: !7031, line: 91, column: 6)
!7181 = !DILocation(line: 91, column: 6, scope: !7173)
!7182 = !DILocation(line: 100, column: 11, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7173, file: !7031, line: 100, column: 6)
!7184 = !DILocation(line: 100, column: 6, scope: !7173)
!7185 = !DILocation(line: 104, column: 35, scope: !7173)
!7186 = !DILocation(line: 104, column: 16, scope: !7173)
!7187 = !DILocation(line: 104, column: 50, scope: !7173)
!7188 = !DILocation(line: 104, column: 72, scope: !7173)
!7189 = !DILocation(line: 104, column: 2, scope: !7173)
!7190 = !DILocation(line: 106, column: 1, scope: !7173)
!7191 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !525, file: !525, line: 307, type: !7192, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7194)
!7192 = !DISubroutineType(types: !7193)
!7193 = !{null, !7010, !133}
!7194 = !{!7195, !7196}
!7195 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7191, file: !525, line: 308, type: !7010)
!7196 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7191, file: !525, line: 308, type: !133)
!7197 = !DILocation(line: 0, scope: !7191)
!7198 = !DILocation(line: 310, column: 6, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7191, file: !525, line: 310, column: 6)
!7200 = !DILocation(line: 316, column: 1, scope: !7191)
!7201 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7031, file: !7031, line: 249, type: !7202, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7204)
!7202 = !DISubroutineType(types: !7203)
!7203 = !{!107, !7010, !133}
!7204 = !{!7205, !7206, !7207, !7208}
!7205 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7201, file: !7031, line: 250, type: !7010)
!7206 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7201, file: !7031, line: 250, type: !133)
!7207 = !DILocalVariable(name: "mpu_reg_index", scope: !7201, file: !7031, line: 252, type: !107)
!7208 = !DILocalVariable(name: "i", scope: !7209, file: !7031, line: 264, type: !107)
!7209 = distinct !DILexicalBlock(scope: !7210, file: !7031, line: 264, column: 3)
!7210 = distinct !DILexicalBlock(scope: !7211, file: !7031, line: 261, column: 32)
!7211 = distinct !DILexicalBlock(scope: !7201, file: !7031, line: 261, column: 6)
!7212 = !DILocation(line: 0, scope: !7201)
!7213 = !DILocation(line: 252, column: 22, scope: !7201)
!7214 = !DILocation(line: 258, column: 18, scope: !7201)
!7215 = !DILocation(line: 261, column: 20, scope: !7211)
!7216 = !DILocation(line: 261, column: 6, scope: !7201)
!7217 = !DILocation(line: 0, scope: !7209)
!7218 = !DILocation(line: 265, column: 4, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7220, file: !7031, line: 264, column: 59)
!7220 = distinct !DILexicalBlock(scope: !7209, file: !7031, line: 264, column: 3)
!7221 = !DILocation(line: 264, column: 55, scope: !7220)
!7222 = !DILocation(line: 264, column: 33, scope: !7220)
!7223 = !DILocation(line: 264, column: 3, scope: !7209)
!7224 = distinct !{!7224, !7223, !7225}
!7225 = !DILocation(line: 266, column: 3, scope: !7209)
!7226 = !DILocation(line: 269, column: 2, scope: !7201)
!7227 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7228, file: !7228, line: 218, type: !6258, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7229)
!7228 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7229 = !{!7230}
!7230 = !DILocalVariable(name: "rnr", arg: 1, scope: !7227, file: !7228, line: 218, type: !162)
!7231 = !DILocation(line: 0, scope: !7227)
!7232 = !DILocation(line: 220, column: 12, scope: !7227)
!7233 = !DILocation(line: 221, column: 13, scope: !7227)
!7234 = !DILocation(line: 222, column: 1, scope: !7227)
!7235 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !525, file: !525, line: 326, type: !7236, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7238)
!7236 = !DISubroutineType(types: !7237)
!7237 = !{!107}
!7238 = !{!7239}
!7239 = !DILocalVariable(name: "r_index", scope: !7235, file: !525, line: 328, type: !162)
!7240 = !DILocation(line: 330, column: 17, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7235, file: !525, line: 330, column: 6)
!7242 = !DILocation(line: 330, column: 29, scope: !7241)
!7243 = !DILocation(line: 330, column: 6, scope: !7235)
!7244 = !DILocation(line: 347, column: 2, scope: !7235)
!7245 = !DILocation(line: 0, scope: !7235)
!7246 = !DILocation(line: 364, column: 29, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7248, file: !525, line: 364, column: 2)
!7248 = distinct !DILexicalBlock(scope: !7235, file: !525, line: 364, column: 2)
!7249 = !DILocation(line: 364, column: 2, scope: !7248)
!7250 = !DILocation(line: 365, column: 25, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7247, file: !525, line: 364, column: 66)
!7252 = !DILocation(line: 365, column: 3, scope: !7251)
!7253 = !DILocation(line: 364, column: 62, scope: !7247)
!7254 = distinct !{!7254, !7249, !7255}
!7255 = !DILocation(line: 366, column: 2, scope: !7248)
!7256 = !DILocation(line: 369, column: 23, scope: !7235)
!7257 = !DILocation(line: 369, column: 21, scope: !7235)
!7258 = !DILocation(line: 372, column: 2, scope: !7235)
!7259 = !DILocation(line: 443, column: 2, scope: !7235)
!7260 = !DILocation(line: 444, column: 1, scope: !7235)
!7261 = distinct !DISubprogram(name: "strcpy", scope: !7262, file: !7262, line: 20, type: !7263, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2889, retainedNodes: !7267)
!7262 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7263 = !DISubroutineType(types: !7264)
!7264 = !{!256, !7265, !7266}
!7265 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !256)
!7266 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !123)
!7267 = !{!7268, !7269, !7270}
!7268 = !DILocalVariable(name: "d", arg: 1, scope: !7261, file: !7262, line: 20, type: !7265)
!7269 = !DILocalVariable(name: "s", arg: 2, scope: !7261, file: !7262, line: 20, type: !7266)
!7270 = !DILocalVariable(name: "dest", scope: !7261, file: !7262, line: 22, type: !256)
!7271 = !DILocation(line: 0, scope: !7261)
!7272 = !DILocation(line: 24, column: 9, scope: !7261)
!7273 = !DILocation(line: 24, column: 12, scope: !7261)
!7274 = !DILocation(line: 24, column: 2, scope: !7261)
!7275 = !DILocation(line: 25, column: 6, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7261, file: !7262, line: 24, column: 21)
!7277 = !DILocation(line: 26, column: 4, scope: !7276)
!7278 = !DILocation(line: 27, column: 4, scope: !7276)
!7279 = distinct !{!7279, !7274, !7280}
!7280 = !DILocation(line: 28, column: 2, scope: !7261)
!7281 = !DILocation(line: 30, column: 5, scope: !7261)
!7282 = !DILocation(line: 32, column: 2, scope: !7261)
!7283 = distinct !DISubprogram(name: "strncpy", scope: !7262, file: !7262, line: 42, type: !7284, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2889, retainedNodes: !7286)
!7284 = !DISubroutineType(types: !7285)
!7285 = !{!256, !7265, !7266, !252}
!7286 = !{!7287, !7288, !7289, !7290}
!7287 = !DILocalVariable(name: "d", arg: 1, scope: !7283, file: !7262, line: 42, type: !7265)
!7288 = !DILocalVariable(name: "s", arg: 2, scope: !7283, file: !7262, line: 42, type: !7266)
!7289 = !DILocalVariable(name: "n", arg: 3, scope: !7283, file: !7262, line: 42, type: !252)
!7290 = !DILocalVariable(name: "dest", scope: !7283, file: !7262, line: 44, type: !256)
!7291 = !DILocation(line: 0, scope: !7283)
!7292 = !DILocation(line: 46, column: 12, scope: !7283)
!7293 = !DILocation(line: 46, column: 17, scope: !7283)
!7294 = !DILocation(line: 46, column: 20, scope: !7283)
!7295 = !DILocation(line: 46, column: 23, scope: !7283)
!7296 = !DILocation(line: 46, column: 2, scope: !7283)
!7297 = !DILocation(line: 47, column: 6, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7283, file: !7262, line: 46, column: 32)
!7299 = !DILocation(line: 48, column: 4, scope: !7298)
!7300 = !DILocation(line: 49, column: 4, scope: !7298)
!7301 = !DILocation(line: 50, column: 4, scope: !7298)
!7302 = distinct !{!7302, !7296, !7303}
!7303 = !DILocation(line: 51, column: 2, scope: !7283)
!7304 = !DILocation(line: 54, column: 6, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7283, file: !7262, line: 53, column: 16)
!7306 = !DILocation(line: 55, column: 4, scope: !7305)
!7307 = !DILocation(line: 56, column: 4, scope: !7305)
!7308 = !DILocation(line: 53, column: 11, scope: !7283)
!7309 = !DILocation(line: 53, column: 2, scope: !7283)
!7310 = distinct !{!7310, !7309, !7311}
!7311 = !DILocation(line: 57, column: 2, scope: !7283)
!7312 = !DILocation(line: 59, column: 2, scope: !7283)
!7313 = distinct !DISubprogram(name: "strchr", scope: !7262, file: !7262, line: 69, type: !7314, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2889, retainedNodes: !7316)
!7314 = !DISubroutineType(types: !7315)
!7315 = !{!256, !123, !107}
!7316 = !{!7317, !7318, !7319}
!7317 = !DILocalVariable(name: "s", arg: 1, scope: !7313, file: !7262, line: 69, type: !123)
!7318 = !DILocalVariable(name: "c", arg: 2, scope: !7313, file: !7262, line: 69, type: !107)
!7319 = !DILocalVariable(name: "tmp", scope: !7313, file: !7262, line: 71, type: !125)
!7320 = !DILocation(line: 0, scope: !7313)
!7321 = !DILocation(line: 73, column: 2, scope: !7313)
!7322 = !DILocation(line: 73, column: 10, scope: !7313)
!7323 = !DILocation(line: 73, column: 13, scope: !7313)
!7324 = !DILocation(line: 73, column: 21, scope: !7313)
!7325 = !DILocation(line: 74, column: 4, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7313, file: !7262, line: 73, column: 38)
!7327 = distinct !{!7327, !7321, !7328}
!7328 = !DILocation(line: 75, column: 2, scope: !7313)
!7329 = !DILocation(line: 77, column: 9, scope: !7313)
!7330 = !DILocation(line: 77, column: 2, scope: !7313)
!7331 = distinct !DISubprogram(name: "strrchr", scope: !7262, file: !7262, line: 87, type: !7314, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2889, retainedNodes: !7332)
!7332 = !{!7333, !7334, !7335}
!7333 = !DILocalVariable(name: "s", arg: 1, scope: !7331, file: !7262, line: 87, type: !123)
!7334 = !DILocalVariable(name: "c", arg: 2, scope: !7331, file: !7262, line: 87, type: !107)
!7335 = !DILocalVariable(name: "match", scope: !7331, file: !7262, line: 89, type: !256)
!7336 = !DILocation(line: 0, scope: !7331)
!7337 = !DILocation(line: 91, column: 2, scope: !7331)
!7338 = !DILocation(line: 92, column: 7, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7340, file: !7262, line: 92, column: 7)
!7340 = distinct !DILexicalBlock(scope: !7331, file: !7262, line: 91, column: 5)
!7341 = !DILocation(line: 92, column: 10, scope: !7339)
!7342 = !DILocation(line: 92, column: 7, scope: !7340)
!7343 = !DILocation(line: 95, column: 13, scope: !7331)
!7344 = !DILocation(line: 95, column: 2, scope: !7340)
!7345 = distinct !{!7345, !7337, !7346}
!7346 = !DILocation(line: 95, column: 15, scope: !7331)
!7347 = !DILocation(line: 97, column: 2, scope: !7331)
!7348 = distinct !DISubprogram(name: "strlen", scope: !7262, file: !7262, line: 107, type: !7349, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2889, retainedNodes: !7351)
!7349 = !DISubroutineType(types: !7350)
!7350 = !{!252, !123}
!7351 = !{!7352, !7353}
!7352 = !DILocalVariable(name: "s", arg: 1, scope: !7348, file: !7262, line: 107, type: !123)
!7353 = !DILocalVariable(name: "n", scope: !7348, file: !7262, line: 109, type: !252)
!7354 = !DILocation(line: 0, scope: !7348)
!7355 = !DILocation(line: 111, column: 9, scope: !7348)
!7356 = !DILocation(line: 111, column: 12, scope: !7348)
!7357 = !DILocation(line: 111, column: 2, scope: !7348)
!7358 = !DILocation(line: 112, column: 4, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7348, file: !7262, line: 111, column: 21)
!7360 = !DILocation(line: 113, column: 4, scope: !7359)
!7361 = distinct !{!7361, !7357, !7362}
!7362 = !DILocation(line: 114, column: 2, scope: !7348)
!7363 = !DILocation(line: 116, column: 2, scope: !7348)
!7364 = distinct !DISubprogram(name: "strnlen", scope: !7262, file: !7262, line: 126, type: !7365, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2889, retainedNodes: !7367)
!7365 = !DISubroutineType(types: !7366)
!7366 = !{!252, !123, !252}
!7367 = !{!7368, !7369, !7370}
!7368 = !DILocalVariable(name: "s", arg: 1, scope: !7364, file: !7262, line: 126, type: !123)
!7369 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7364, file: !7262, line: 126, type: !252)
!7370 = !DILocalVariable(name: "n", scope: !7364, file: !7262, line: 128, type: !252)
!7371 = !DILocation(line: 0, scope: !7364)
!7372 = !DILocation(line: 130, column: 9, scope: !7364)
!7373 = !DILocation(line: 130, column: 12, scope: !7364)
!7374 = !DILocation(line: 130, column: 20, scope: !7364)
!7375 = !DILocation(line: 130, column: 2, scope: !7364)
!7376 = !DILocation(line: 131, column: 4, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7364, file: !7262, line: 130, column: 35)
!7378 = !DILocation(line: 132, column: 4, scope: !7377)
!7379 = distinct !{!7379, !7375, !7380}
!7380 = !DILocation(line: 133, column: 2, scope: !7364)
!7381 = !DILocation(line: 135, column: 2, scope: !7364)
!7382 = distinct !DISubprogram(name: "strcmp", scope: !7262, file: !7262, line: 145, type: !7383, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2889, retainedNodes: !7385)
!7383 = !DISubroutineType(types: !7384)
!7384 = !{!107, !123, !123}
!7385 = !{!7386, !7387}
!7386 = !DILocalVariable(name: "s1", arg: 1, scope: !7382, file: !7262, line: 145, type: !123)
!7387 = !DILocalVariable(name: "s2", arg: 2, scope: !7382, file: !7262, line: 145, type: !123)
!7388 = !DILocation(line: 0, scope: !7382)
!7389 = !DILocation(line: 147, column: 10, scope: !7382)
!7390 = !DILocation(line: 147, column: 17, scope: !7382)
!7391 = !DILocation(line: 147, column: 14, scope: !7382)
!7392 = !DILocation(line: 147, column: 22, scope: !7382)
!7393 = !DILocation(line: 148, column: 5, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7382, file: !7262, line: 147, column: 40)
!7395 = !DILocation(line: 149, column: 5, scope: !7394)
!7396 = distinct !{!7396, !7397, !7398}
!7397 = !DILocation(line: 147, column: 2, scope: !7382)
!7398 = !DILocation(line: 150, column: 2, scope: !7382)
!7399 = !DILocation(line: 152, column: 9, scope: !7382)
!7400 = !DILocation(line: 152, column: 15, scope: !7382)
!7401 = !DILocation(line: 152, column: 13, scope: !7382)
!7402 = !DILocation(line: 152, column: 2, scope: !7382)
!7403 = distinct !DISubprogram(name: "strncmp", scope: !7262, file: !7262, line: 162, type: !7404, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2889, retainedNodes: !7406)
!7404 = !DISubroutineType(types: !7405)
!7405 = !{!107, !123, !123, !252}
!7406 = !{!7407, !7408, !7409}
!7407 = !DILocalVariable(name: "s1", arg: 1, scope: !7403, file: !7262, line: 162, type: !123)
!7408 = !DILocalVariable(name: "s2", arg: 2, scope: !7403, file: !7262, line: 162, type: !123)
!7409 = !DILocalVariable(name: "n", arg: 3, scope: !7403, file: !7262, line: 162, type: !252)
!7410 = !DILocation(line: 0, scope: !7403)
!7411 = !DILocation(line: 164, column: 17, scope: !7403)
!7412 = !DILocation(line: 164, column: 21, scope: !7403)
!7413 = !DILocation(line: 164, column: 28, scope: !7403)
!7414 = !DILocation(line: 164, column: 25, scope: !7403)
!7415 = !DILocation(line: 164, column: 33, scope: !7403)
!7416 = !DILocation(line: 165, column: 5, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7403, file: !7262, line: 164, column: 51)
!7418 = !DILocation(line: 166, column: 5, scope: !7417)
!7419 = !DILocation(line: 167, column: 4, scope: !7417)
!7420 = distinct !{!7420, !7421, !7422}
!7421 = !DILocation(line: 164, column: 2, scope: !7403)
!7422 = !DILocation(line: 168, column: 2, scope: !7403)
!7423 = !DILocation(line: 170, column: 25, scope: !7403)
!7424 = !DILocation(line: 170, column: 31, scope: !7403)
!7425 = !DILocation(line: 170, column: 29, scope: !7403)
!7426 = !DILocation(line: 170, column: 9, scope: !7403)
!7427 = !DILocation(line: 170, column: 2, scope: !7403)
!7428 = distinct !DISubprogram(name: "strtok_r", scope: !7262, file: !7262, line: 180, type: !7429, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2889, retainedNodes: !7432)
!7429 = !DISubroutineType(types: !7430)
!7430 = !{!256, !256, !123, !7431}
!7431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!7432 = !{!7433, !7434, !7435, !7436, !7437}
!7433 = !DILocalVariable(name: "str", arg: 1, scope: !7428, file: !7262, line: 180, type: !256)
!7434 = !DILocalVariable(name: "sep", arg: 2, scope: !7428, file: !7262, line: 180, type: !123)
!7435 = !DILocalVariable(name: "state", arg: 3, scope: !7428, file: !7262, line: 180, type: !7431)
!7436 = !DILocalVariable(name: "start", scope: !7428, file: !7262, line: 182, type: !256)
!7437 = !DILocalVariable(name: "end", scope: !7428, file: !7262, line: 182, type: !256)
!7438 = !DILocation(line: 0, scope: !7428)
!7439 = !DILocation(line: 184, column: 10, scope: !7428)
!7440 = !DILocation(line: 184, column: 22, scope: !7428)
!7441 = !DILocation(line: 187, column: 9, scope: !7428)
!7442 = !DILocation(line: 187, column: 16, scope: !7428)
!7443 = !DILocation(line: 187, column: 19, scope: !7428)
!7444 = !DILocation(line: 187, column: 2, scope: !7428)
!7445 = !DILocation(line: 188, column: 8, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7428, file: !7262, line: 187, column: 40)
!7447 = distinct !{!7447, !7444, !7448}
!7448 = !DILocation(line: 189, column: 2, scope: !7428)
!7449 = !DILocation(line: 198, column: 9, scope: !7428)
!7450 = !DILocation(line: 198, column: 18, scope: !7428)
!7451 = !DILocation(line: 198, column: 17, scope: !7428)
!7452 = !DILocation(line: 198, column: 2, scope: !7428)
!7453 = !DILocation(line: 199, column: 6, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7428, file: !7262, line: 198, column: 37)
!7455 = !DILocation(line: 198, column: 14, scope: !7428)
!7456 = distinct !{!7456, !7452, !7457}
!7457 = !DILocation(line: 200, column: 2, scope: !7428)
!7458 = !DILocation(line: 203, column: 8, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7460, file: !7262, line: 202, column: 20)
!7460 = distinct !DILexicalBlock(scope: !7428, file: !7262, line: 202, column: 6)
!7461 = !DILocation(line: 204, column: 16, scope: !7459)
!7462 = !DILocation(line: 205, column: 2, scope: !7459)
!7463 = !DILocation(line: 210, column: 1, scope: !7428)
!7464 = distinct !DISubprogram(name: "strcat", scope: !7262, file: !7262, line: 212, type: !7263, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2889, retainedNodes: !7465)
!7465 = !{!7466, !7467}
!7466 = !DILocalVariable(name: "dest", arg: 1, scope: !7464, file: !7262, line: 212, type: !7265)
!7467 = !DILocalVariable(name: "src", arg: 2, scope: !7464, file: !7262, line: 212, type: !7266)
!7468 = !DILocation(line: 0, scope: !7464)
!7469 = !DILocation(line: 214, column: 16, scope: !7464)
!7470 = !DILocation(line: 214, column: 14, scope: !7464)
!7471 = !DILocation(line: 214, column: 2, scope: !7464)
!7472 = !DILocation(line: 215, column: 2, scope: !7464)
!7473 = distinct !DISubprogram(name: "strncat", scope: !7262, file: !7262, line: 218, type: !7284, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2889, retainedNodes: !7474)
!7474 = !{!7475, !7476, !7477, !7478, !7479}
!7475 = !DILocalVariable(name: "dest", arg: 1, scope: !7473, file: !7262, line: 218, type: !7265)
!7476 = !DILocalVariable(name: "src", arg: 2, scope: !7473, file: !7262, line: 218, type: !7266)
!7477 = !DILocalVariable(name: "n", arg: 3, scope: !7473, file: !7262, line: 219, type: !252)
!7478 = !DILocalVariable(name: "orig_dest", scope: !7473, file: !7262, line: 221, type: !256)
!7479 = !DILocalVariable(name: "len", scope: !7473, file: !7262, line: 222, type: !252)
!7480 = !DILocation(line: 0, scope: !7473)
!7481 = !DILocation(line: 222, column: 15, scope: !7473)
!7482 = !DILocation(line: 224, column: 7, scope: !7473)
!7483 = !DILocation(line: 225, column: 14, scope: !7473)
!7484 = !DILocation(line: 225, column: 19, scope: !7473)
!7485 = !DILocation(line: 225, column: 11, scope: !7473)
!7486 = !DILocation(line: 225, column: 23, scope: !7473)
!7487 = !DILocation(line: 225, column: 28, scope: !7473)
!7488 = !DILocation(line: 225, column: 2, scope: !7473)
!7489 = !DILocation(line: 226, column: 17, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7473, file: !7262, line: 225, column: 38)
!7491 = !DILocation(line: 226, column: 8, scope: !7490)
!7492 = !DILocation(line: 226, column: 11, scope: !7490)
!7493 = distinct !{!7493, !7488, !7494}
!7494 = !DILocation(line: 227, column: 2, scope: !7473)
!7495 = !DILocation(line: 228, column: 8, scope: !7473)
!7496 = !DILocation(line: 230, column: 2, scope: !7473)
!7497 = distinct !DISubprogram(name: "memcmp", scope: !7262, file: !7262, line: 239, type: !7498, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2889, retainedNodes: !7500)
!7498 = !DISubroutineType(types: !7499)
!7499 = !{!107, !13, !13, !252}
!7500 = !{!7501, !7502, !7503, !7504, !7505}
!7501 = !DILocalVariable(name: "m1", arg: 1, scope: !7497, file: !7262, line: 239, type: !13)
!7502 = !DILocalVariable(name: "m2", arg: 2, scope: !7497, file: !7262, line: 239, type: !13)
!7503 = !DILocalVariable(name: "n", arg: 3, scope: !7497, file: !7262, line: 239, type: !252)
!7504 = !DILocalVariable(name: "c1", scope: !7497, file: !7262, line: 241, type: !123)
!7505 = !DILocalVariable(name: "c2", scope: !7497, file: !7262, line: 242, type: !123)
!7506 = !DILocation(line: 0, scope: !7497)
!7507 = !DILocation(line: 244, column: 7, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7497, file: !7262, line: 244, column: 6)
!7509 = !DILocation(line: 244, column: 6, scope: !7497)
!7510 = !DILocation(line: 248, column: 10, scope: !7497)
!7511 = !DILocation(line: 248, column: 14, scope: !7497)
!7512 = !DILocation(line: 248, column: 19, scope: !7497)
!7513 = !DILocation(line: 248, column: 2, scope: !7497)
!7514 = !DILocation(line: 248, column: 23, scope: !7497)
!7515 = !DILocation(line: 248, column: 30, scope: !7497)
!7516 = !DILocation(line: 248, column: 27, scope: !7497)
!7517 = !DILocation(line: 249, column: 5, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7497, file: !7262, line: 248, column: 36)
!7519 = !DILocation(line: 250, column: 5, scope: !7518)
!7520 = distinct !{!7520, !7513, !7521}
!7521 = !DILocation(line: 251, column: 2, scope: !7497)
!7522 = !DILocation(line: 253, column: 9, scope: !7497)
!7523 = !DILocation(line: 253, column: 15, scope: !7497)
!7524 = !DILocation(line: 253, column: 13, scope: !7497)
!7525 = !DILocation(line: 253, column: 2, scope: !7497)
!7526 = !DILocation(line: 254, column: 1, scope: !7497)
!7527 = distinct !DISubprogram(name: "memmove", scope: !7262, file: !7262, line: 263, type: !7528, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2889, retainedNodes: !7530)
!7528 = !DISubroutineType(types: !7529)
!7529 = !{!102, !102, !13, !252}
!7530 = !{!7531, !7532, !7533, !7534, !7535}
!7531 = !DILocalVariable(name: "d", arg: 1, scope: !7527, file: !7262, line: 263, type: !102)
!7532 = !DILocalVariable(name: "s", arg: 2, scope: !7527, file: !7262, line: 263, type: !13)
!7533 = !DILocalVariable(name: "n", arg: 3, scope: !7527, file: !7262, line: 263, type: !252)
!7534 = !DILocalVariable(name: "dest", scope: !7527, file: !7262, line: 265, type: !256)
!7535 = !DILocalVariable(name: "src", scope: !7527, file: !7262, line: 266, type: !123)
!7536 = !DILocation(line: 0, scope: !7527)
!7537 = !DILocation(line: 268, column: 21, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7527, file: !7262, line: 268, column: 6)
!7539 = !DILocation(line: 268, column: 28, scope: !7538)
!7540 = !DILocation(line: 268, column: 6, scope: !7527)
!7541 = !DILocation(line: 280, column: 12, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7538, file: !7262, line: 278, column: 9)
!7543 = !DILocation(line: 280, column: 3, scope: !7542)
!7544 = !DILocation(line: 275, column: 5, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7546, file: !7262, line: 274, column: 17)
!7546 = distinct !DILexicalBlock(scope: !7538, file: !7262, line: 268, column: 33)
!7547 = !DILocation(line: 276, column: 14, scope: !7545)
!7548 = !DILocation(line: 276, column: 4, scope: !7545)
!7549 = !DILocation(line: 276, column: 12, scope: !7545)
!7550 = !DILocation(line: 274, column: 12, scope: !7546)
!7551 = !DILocation(line: 274, column: 3, scope: !7546)
!7552 = distinct !{!7552, !7551, !7553}
!7553 = !DILocation(line: 277, column: 3, scope: !7546)
!7554 = !DILocation(line: 281, column: 12, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7542, file: !7262, line: 280, column: 17)
!7556 = !DILocation(line: 281, column: 10, scope: !7555)
!7557 = !DILocation(line: 282, column: 8, scope: !7555)
!7558 = !DILocation(line: 283, column: 7, scope: !7555)
!7559 = !DILocation(line: 284, column: 5, scope: !7555)
!7560 = distinct !{!7560, !7543, !7561}
!7561 = !DILocation(line: 285, column: 3, scope: !7542)
!7562 = !DILocation(line: 288, column: 2, scope: !7527)
!7563 = distinct !DISubprogram(name: "memcpy", scope: !7262, file: !7262, line: 298, type: !7564, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2889, retainedNodes: !7568)
!7564 = !DISubroutineType(types: !7565)
!7565 = !{!102, !7566, !7567, !252}
!7566 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7567 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7568 = !{!7569, !7570, !7571, !7572, !7573}
!7569 = !DILocalVariable(name: "d", arg: 1, scope: !7563, file: !7262, line: 298, type: !7566)
!7570 = !DILocalVariable(name: "s", arg: 2, scope: !7563, file: !7262, line: 298, type: !7567)
!7571 = !DILocalVariable(name: "n", arg: 3, scope: !7563, file: !7262, line: 298, type: !252)
!7572 = !DILocalVariable(name: "d_byte", scope: !7563, file: !7262, line: 302, type: !144)
!7573 = !DILocalVariable(name: "s_byte", scope: !7563, file: !7262, line: 303, type: !2892)
!7574 = !DILocation(line: 0, scope: !7563)
!7575 = !DILocation(line: 337, column: 11, scope: !7563)
!7576 = !DILocation(line: 337, column: 2, scope: !7563)
!7577 = !DILocation(line: 338, column: 25, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7563, file: !7262, line: 337, column: 16)
!7579 = !DILocation(line: 338, column: 17, scope: !7578)
!7580 = !DILocation(line: 338, column: 11, scope: !7578)
!7581 = !DILocation(line: 338, column: 15, scope: !7578)
!7582 = !DILocation(line: 339, column: 4, scope: !7578)
!7583 = distinct !{!7583, !7576, !7584}
!7584 = !DILocation(line: 340, column: 2, scope: !7563)
!7585 = !DILocation(line: 342, column: 2, scope: !7563)
!7586 = distinct !DISubprogram(name: "memset", scope: !7262, file: !7262, line: 352, type: !7587, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2889, retainedNodes: !7589)
!7587 = !DISubroutineType(types: !7588)
!7588 = !{!102, !102, !107, !252}
!7589 = !{!7590, !7591, !7592, !7593, !7594}
!7590 = !DILocalVariable(name: "buf", arg: 1, scope: !7586, file: !7262, line: 352, type: !102)
!7591 = !DILocalVariable(name: "c", arg: 2, scope: !7586, file: !7262, line: 352, type: !107)
!7592 = !DILocalVariable(name: "n", arg: 3, scope: !7586, file: !7262, line: 352, type: !252)
!7593 = !DILocalVariable(name: "d_byte", scope: !7586, file: !7262, line: 356, type: !144)
!7594 = !DILocalVariable(name: "c_byte", scope: !7586, file: !7262, line: 357, type: !134)
!7595 = !DILocation(line: 0, scope: !7586)
!7596 = !DILocation(line: 357, column: 25, scope: !7586)
!7597 = !DILocation(line: 389, column: 11, scope: !7586)
!7598 = !DILocation(line: 389, column: 2, scope: !7586)
!7599 = !DILocation(line: 390, column: 11, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7586, file: !7262, line: 389, column: 16)
!7601 = !DILocation(line: 390, column: 15, scope: !7600)
!7602 = !DILocation(line: 391, column: 4, scope: !7600)
!7603 = distinct !{!7603, !7598, !7604}
!7604 = !DILocation(line: 392, column: 2, scope: !7586)
!7605 = !DILocation(line: 394, column: 2, scope: !7586)
!7606 = distinct !DISubprogram(name: "memchr", scope: !7262, file: !7262, line: 404, type: !7607, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2889, retainedNodes: !7609)
!7607 = !DISubroutineType(types: !7608)
!7608 = !{!102, !13, !107, !252}
!7609 = !{!7610, !7611, !7612, !7613}
!7610 = !DILocalVariable(name: "s", arg: 1, scope: !7606, file: !7262, line: 404, type: !13)
!7611 = !DILocalVariable(name: "c", arg: 2, scope: !7606, file: !7262, line: 404, type: !107)
!7612 = !DILocalVariable(name: "n", arg: 3, scope: !7606, file: !7262, line: 404, type: !252)
!7613 = !DILocalVariable(name: "p", scope: !7614, file: !7262, line: 407, type: !2892)
!7614 = distinct !DILexicalBlock(scope: !7615, file: !7262, line: 406, column: 14)
!7615 = distinct !DILexicalBlock(scope: !7606, file: !7262, line: 406, column: 6)
!7616 = !DILocation(line: 0, scope: !7606)
!7617 = !DILocation(line: 406, column: 8, scope: !7615)
!7618 = !DILocation(line: 406, column: 6, scope: !7606)
!7619 = !DILocation(line: 409, column: 3, scope: !7614)
!7620 = !DILocation(line: 0, scope: !7614)
!7621 = !DILocation(line: 410, column: 8, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7623, file: !7262, line: 410, column: 8)
!7623 = distinct !DILexicalBlock(scope: !7614, file: !7262, line: 409, column: 6)
!7624 = !DILocation(line: 410, column: 13, scope: !7622)
!7625 = !DILocation(line: 410, column: 8, scope: !7623)
!7626 = distinct !{!7626, !7619, !7627}
!7627 = !DILocation(line: 414, column: 20, scope: !7614)
!7628 = !DILocation(line: 417, column: 2, scope: !7606)
!7629 = !DILocation(line: 418, column: 1, scope: !7606)
!7630 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !535, file: !535, line: 23, type: !3571, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7631)
!7631 = !{!7632}
!7632 = !DILocalVariable(name: "hook", arg: 1, scope: !7630, file: !535, line: 23, type: !269)
!7633 = !DILocation(line: 0, scope: !7630)
!7634 = !DILocation(line: 25, column: 15, scope: !7630)
!7635 = !DILocation(line: 26, column: 1, scope: !7630)
!7636 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !535, file: !535, line: 14, type: !270, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7637)
!7637 = !{!7638}
!7638 = !DILocalVariable(name: "c", arg: 1, scope: !7636, file: !535, line: 14, type: !107)
!7639 = !DILocation(line: 0, scope: !7636)
!7640 = !DILocation(line: 18, column: 2, scope: !7636)
!7641 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !535, file: !535, line: 28, type: !7642, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7644)
!7642 = !DISubroutineType(types: !7643)
!7643 = !{!107, !107, !531}
!7644 = !{!7645, !7646}
!7645 = !DILocalVariable(name: "c", arg: 1, scope: !7641, file: !535, line: 28, type: !107)
!7646 = !DILocalVariable(name: "stream", arg: 2, scope: !7641, file: !535, line: 28, type: !531)
!7647 = !DILocation(line: 0, scope: !7641)
!7648 = !DILocation(line: 30, column: 27, scope: !7641)
!7649 = !DILocation(line: 30, column: 50, scope: !7641)
!7650 = !DILocation(line: 30, column: 9, scope: !7641)
!7651 = !DILocation(line: 30, column: 2, scope: !7641)
!7652 = distinct !DISubprogram(name: "fputc", scope: !535, file: !535, line: 41, type: !7642, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7653)
!7653 = !{!7654, !7655}
!7654 = !DILocalVariable(name: "c", arg: 1, scope: !7652, file: !535, line: 41, type: !107)
!7655 = !DILocalVariable(name: "stream", arg: 2, scope: !7652, file: !535, line: 41, type: !531)
!7656 = !DILocation(line: 0, scope: !7652)
!7657 = !DILocation(line: 43, column: 9, scope: !7652)
!7658 = !DILocation(line: 43, column: 2, scope: !7652)
!7659 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7660, file: !7660, line: 72, type: !7642, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7661)
!7660 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_stm32_sensor_mez/echo_bot")
!7661 = !{!7662, !7663}
!7662 = !DILocalVariable(name: "c", arg: 1, scope: !7659, file: !7660, line: 72, type: !107)
!7663 = !DILocalVariable(name: "stream", arg: 2, scope: !7659, file: !7660, line: 72, type: !531)
!7664 = !DILocation(line: 0, scope: !7659)
!7665 = !DILocation(line: 81, column: 2, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7659, file: !7660, line: 81, column: 2)
!7667 = !{i64 2155123284}
!7668 = !DILocation(line: 82, column: 9, scope: !7659)
!7669 = !DILocation(line: 82, column: 2, scope: !7659)
!7670 = distinct !DISubprogram(name: "fputs", scope: !535, file: !535, line: 46, type: !7671, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7674)
!7671 = !DISubroutineType(types: !7672)
!7672 = !{!107, !7266, !7673}
!7673 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !531)
!7674 = !{!7675, !7676, !7677, !7678}
!7675 = !DILocalVariable(name: "s", arg: 1, scope: !7670, file: !535, line: 46, type: !7266)
!7676 = !DILocalVariable(name: "stream", arg: 2, scope: !7670, file: !535, line: 46, type: !7673)
!7677 = !DILocalVariable(name: "len", scope: !7670, file: !535, line: 48, type: !107)
!7678 = !DILocalVariable(name: "ret", scope: !7670, file: !535, line: 49, type: !107)
!7679 = !DILocation(line: 0, scope: !7670)
!7680 = !DILocation(line: 48, column: 12, scope: !7670)
!7681 = !DILocation(line: 51, column: 8, scope: !7670)
!7682 = !DILocation(line: 53, column: 13, scope: !7670)
!7683 = !DILocation(line: 53, column: 9, scope: !7670)
!7684 = !DILocation(line: 53, column: 2, scope: !7670)
!7685 = distinct !DISubprogram(name: "fwrite", scope: !535, file: !535, line: 99, type: !7686, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7688)
!7686 = !DISubroutineType(types: !7687)
!7687 = !{!252, !7567, !252, !252, !7673}
!7688 = !{!7689, !7690, !7691, !7692}
!7689 = !DILocalVariable(name: "ptr", arg: 1, scope: !7685, file: !535, line: 99, type: !7567)
!7690 = !DILocalVariable(name: "size", arg: 2, scope: !7685, file: !535, line: 99, type: !252)
!7691 = !DILocalVariable(name: "nitems", arg: 3, scope: !7685, file: !535, line: 99, type: !252)
!7692 = !DILocalVariable(name: "stream", arg: 4, scope: !7685, file: !535, line: 100, type: !7673)
!7693 = !DILocation(line: 0, scope: !7685)
!7694 = !DILocation(line: 102, column: 9, scope: !7685)
!7695 = !DILocation(line: 102, column: 2, scope: !7685)
!7696 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7660, file: !7660, line: 96, type: !7686, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7697)
!7697 = !{!7698, !7699, !7700, !7701}
!7698 = !DILocalVariable(name: "ptr", arg: 1, scope: !7696, file: !7660, line: 96, type: !7567)
!7699 = !DILocalVariable(name: "size", arg: 2, scope: !7696, file: !7660, line: 96, type: !252)
!7700 = !DILocalVariable(name: "nitems", arg: 3, scope: !7696, file: !7660, line: 96, type: !252)
!7701 = !DILocalVariable(name: "stream", arg: 4, scope: !7696, file: !7660, line: 96, type: !7673)
!7702 = !DILocation(line: 0, scope: !7696)
!7703 = !DILocation(line: 107, column: 2, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7696, file: !7660, line: 107, column: 2)
!7705 = !{i64 2155123388}
!7706 = !DILocation(line: 108, column: 9, scope: !7696)
!7707 = !DILocation(line: 108, column: 2, scope: !7696)
!7708 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !535, file: !535, line: 56, type: !7686, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7709)
!7709 = !{!7710, !7711, !7712, !7713, !7714, !7715, !7716, !7717}
!7710 = !DILocalVariable(name: "ptr", arg: 1, scope: !7708, file: !535, line: 56, type: !7567)
!7711 = !DILocalVariable(name: "size", arg: 2, scope: !7708, file: !535, line: 56, type: !252)
!7712 = !DILocalVariable(name: "nitems", arg: 3, scope: !7708, file: !535, line: 57, type: !252)
!7713 = !DILocalVariable(name: "stream", arg: 4, scope: !7708, file: !535, line: 57, type: !7673)
!7714 = !DILocalVariable(name: "i", scope: !7708, file: !535, line: 59, type: !252)
!7715 = !DILocalVariable(name: "j", scope: !7708, file: !535, line: 60, type: !252)
!7716 = !DILocalVariable(name: "p", scope: !7708, file: !535, line: 61, type: !2892)
!7717 = !DILabel(scope: !7708, name: "done", file: !535, line: 82)
!7718 = !DILocation(line: 0, scope: !7708)
!7719 = !DILocation(line: 63, column: 14, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7708, file: !535, line: 63, column: 6)
!7721 = !DILocation(line: 63, column: 24, scope: !7720)
!7722 = !DILocation(line: 72, column: 3, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7708, file: !535, line: 70, column: 5)
!7724 = !DILocation(line: 0, scope: !7723)
!7725 = !DILocation(line: 73, column: 8, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7727, file: !535, line: 73, column: 8)
!7727 = distinct !DILexicalBlock(scope: !7723, file: !535, line: 72, column: 6)
!7728 = !DILocation(line: 73, column: 29, scope: !7726)
!7729 = !DILocation(line: 73, column: 27, scope: !7726)
!7730 = !DILocation(line: 73, column: 21, scope: !7726)
!7731 = !DILocation(line: 73, column: 33, scope: !7726)
!7732 = !DILocation(line: 73, column: 8, scope: !7727)
!7733 = !DILocation(line: 76, column: 5, scope: !7727)
!7734 = !DILocation(line: 77, column: 14, scope: !7723)
!7735 = !DILocation(line: 77, column: 3, scope: !7727)
!7736 = distinct !{!7736, !7722, !7737}
!7737 = !DILocation(line: 77, column: 17, scope: !7723)
!7738 = !DILocation(line: 79, column: 4, scope: !7723)
!7739 = !DILocation(line: 80, column: 13, scope: !7708)
!7740 = !DILocation(line: 80, column: 2, scope: !7723)
!7741 = distinct !{!7741, !7742, !7743}
!7742 = !DILocation(line: 70, column: 2, scope: !7708)
!7743 = !DILocation(line: 80, column: 16, scope: !7708)
!7744 = !DILocation(line: 82, column: 1, scope: !7708)
!7745 = !DILocation(line: 83, column: 17, scope: !7708)
!7746 = !DILocation(line: 83, column: 2, scope: !7708)
!7747 = !DILocation(line: 84, column: 1, scope: !7708)
!7748 = distinct !DISubprogram(name: "puts", scope: !535, file: !535, line: 106, type: !7749, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7751)
!7749 = !DISubroutineType(types: !7750)
!7750 = !{!107, !123}
!7751 = !{!7752}
!7752 = !DILocalVariable(name: "s", arg: 1, scope: !7748, file: !535, line: 106, type: !123)
!7753 = !DILocation(line: 0, scope: !7748)
!7754 = !DILocation(line: 108, column: 6, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7748, file: !535, line: 108, column: 6)
!7756 = !DILocation(line: 108, column: 23, scope: !7755)
!7757 = !DILocation(line: 108, column: 6, scope: !7748)
!7758 = !DILocation(line: 112, column: 9, scope: !7748)
!7759 = !DILocation(line: 112, column: 29, scope: !7748)
!7760 = !DILocation(line: 112, column: 2, scope: !7748)
!7761 = !DILocation(line: 113, column: 1, scope: !7748)
!7762 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !676, file: !676, line: 368, type: !729, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7763)
!7763 = !{!7764}
!7764 = !DILocalVariable(name: "dev", arg: 1, scope: !7762, file: !676, line: 368, type: !705)
!7765 = !DILocation(line: 0, scope: !7762)
!7766 = !DILocation(line: 370, column: 2, scope: !7762)
!7767 = !DILocation(line: 371, column: 1, scope: !7762)
!7768 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !676, file: !676, line: 243, type: !7769, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7771)
!7769 = !DISubroutineType(types: !7770)
!7770 = !{null, !107, !107, !705}
!7771 = !{!7772, !7773, !7774, !7775, !7777}
!7772 = !DILocalVariable(name: "min", arg: 1, scope: !7768, file: !676, line: 243, type: !107)
!7773 = !DILocalVariable(name: "max", arg: 2, scope: !7768, file: !676, line: 243, type: !107)
!7774 = !DILocalVariable(name: "dev", arg: 3, scope: !7768, file: !676, line: 243, type: !705)
!7775 = !DILocalVariable(name: "data", scope: !7768, file: !676, line: 245, type: !7776)
!7776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 32)
!7777 = !DILocalVariable(name: "line", scope: !7768, file: !676, line: 246, type: !107)
!7778 = !DILocation(line: 0, scope: !7768)
!7779 = !DILocation(line: 245, column: 38, scope: !7768)
!7780 = !DILocation(line: 249, column: 24, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7782, file: !676, line: 249, column: 2)
!7782 = distinct !DILexicalBlock(scope: !7768, file: !676, line: 249, column: 2)
!7783 = !DILocation(line: 249, column: 2, scope: !7782)
!7784 = !DILocation(line: 251, column: 7, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7786, file: !676, line: 251, column: 7)
!7786 = distinct !DILexicalBlock(scope: !7781, file: !676, line: 249, column: 39)
!7787 = !DILocation(line: 251, column: 7, scope: !7786)
!7788 = !DILocation(line: 253, column: 4, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7785, file: !676, line: 251, column: 36)
!7790 = !DILocation(line: 256, column: 24, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7789, file: !676, line: 256, column: 8)
!7792 = !DILocation(line: 256, column: 9, scope: !7791)
!7793 = !DILocation(line: 256, column: 8, scope: !7789)
!7794 = !DILocation(line: 260, column: 43, scope: !7789)
!7795 = !DILocation(line: 260, column: 4, scope: !7789)
!7796 = !DILocation(line: 261, column: 3, scope: !7789)
!7797 = !DILocation(line: 249, column: 35, scope: !7781)
!7798 = distinct !{!7798, !7783, !7799}
!7799 = !DILocation(line: 262, column: 2, scope: !7782)
!7800 = !DILocation(line: 263, column: 1, scope: !7768)
!7801 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !676, file: !676, line: 158, type: !270, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7802)
!7802 = !{!7803}
!7803 = !DILocalVariable(name: "line", arg: 1, scope: !7801, file: !676, line: 158, type: !107)
!7804 = !DILocation(line: 0, scope: !7801)
!7805 = !DILocation(line: 170, column: 38, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7807, file: !676, line: 160, column: 17)
!7807 = distinct !DILexicalBlock(scope: !7801, file: !676, line: 160, column: 6)
!7808 = !DILocation(line: 170, column: 10, scope: !7806)
!7809 = !DILocation(line: 176, column: 1, scope: !7801)
!7810 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !676, file: !676, line: 183, type: !7811, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7813)
!7811 = !DISubroutineType(types: !7812)
!7812 = !{null, !107}
!7813 = !{!7814}
!7814 = !DILocalVariable(name: "line", arg: 1, scope: !7810, file: !676, line: 183, type: !107)
!7815 = !DILocation(line: 0, scope: !7810)
!7816 = !DILocation(line: 195, column: 28, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7818, file: !676, line: 185, column: 17)
!7818 = distinct !DILexicalBlock(scope: !7810, file: !676, line: 185, column: 6)
!7819 = !DILocation(line: 195, column: 3, scope: !7817)
!7820 = !DILocation(line: 200, column: 1, scope: !7810)
!7821 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7822, file: !7822, line: 910, type: !6258, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7823)
!7822 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7823 = !{!7824}
!7824 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7821, file: !7822, line: 910, type: !162)
!7825 = !DILocation(line: 0, scope: !7821)
!7826 = !DILocation(line: 912, column: 3, scope: !7821)
!7827 = !DILocation(line: 913, column: 1, scope: !7821)
!7828 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7822, file: !7822, line: 834, type: !7174, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7829)
!7829 = !{!7830}
!7830 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7828, file: !7822, line: 834, type: !162)
!7831 = !DILocation(line: 0, scope: !7828)
!7832 = !DILocation(line: 836, column: 11, scope: !7828)
!7833 = !DILocation(line: 836, column: 40, scope: !7828)
!7834 = !DILocation(line: 836, column: 3, scope: !7828)
!7835 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !676, file: !676, line: 304, type: !729, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7836)
!7836 = !{!7837}
!7837 = !DILocalVariable(name: "dev", arg: 1, scope: !7835, file: !676, line: 304, type: !705)
!7838 = !DILocation(line: 0, scope: !7835)
!7839 = !DILocation(line: 306, column: 2, scope: !7835)
!7840 = !DILocation(line: 307, column: 1, scope: !7835)
!7841 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !676, file: !676, line: 299, type: !729, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7842)
!7842 = !{!7843}
!7843 = !DILocalVariable(name: "dev", arg: 1, scope: !7841, file: !676, line: 299, type: !705)
!7844 = !DILocation(line: 0, scope: !7841)
!7845 = !DILocation(line: 301, column: 2, scope: !7841)
!7846 = !DILocation(line: 302, column: 1, scope: !7841)
!7847 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !676, file: !676, line: 294, type: !729, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7848)
!7848 = !{!7849}
!7849 = !DILocalVariable(name: "dev", arg: 1, scope: !7847, file: !676, line: 294, type: !705)
!7850 = !DILocation(line: 0, scope: !7847)
!7851 = !DILocation(line: 296, column: 2, scope: !7847)
!7852 = !DILocation(line: 297, column: 1, scope: !7847)
!7853 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !676, file: !676, line: 397, type: !729, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7854)
!7854 = !{!7855}
!7855 = !DILocalVariable(name: "dev", arg: 1, scope: !7853, file: !676, line: 397, type: !705)
!7856 = !DILocation(line: 0, scope: !7853)
!7857 = !DILocation(line: 399, column: 2, scope: !7853)
!7858 = !DILocation(line: 400, column: 1, scope: !7853)
!7859 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !676, file: !676, line: 392, type: !729, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7860)
!7860 = !{!7861}
!7861 = !DILocalVariable(name: "dev", arg: 1, scope: !7859, file: !676, line: 392, type: !705)
!7862 = !DILocation(line: 0, scope: !7859)
!7863 = !DILocation(line: 394, column: 2, scope: !7859)
!7864 = !DILocation(line: 395, column: 1, scope: !7859)
!7865 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !676, file: !676, line: 289, type: !729, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7866)
!7866 = !{!7867}
!7867 = !DILocalVariable(name: "dev", arg: 1, scope: !7865, file: !676, line: 289, type: !705)
!7868 = !DILocation(line: 0, scope: !7865)
!7869 = !DILocation(line: 291, column: 2, scope: !7865)
!7870 = !DILocation(line: 292, column: 1, scope: !7865)
!7871 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !676, file: !676, line: 387, type: !729, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7872)
!7872 = !{!7873}
!7873 = !DILocalVariable(name: "dev", arg: 1, scope: !7871, file: !676, line: 387, type: !705)
!7874 = !DILocation(line: 0, scope: !7871)
!7875 = !DILocation(line: 389, column: 2, scope: !7871)
!7876 = !DILocation(line: 390, column: 1, scope: !7871)
!7877 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !676, file: !676, line: 382, type: !729, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7878)
!7878 = !{!7879}
!7879 = !DILocalVariable(name: "dev", arg: 1, scope: !7877, file: !676, line: 382, type: !705)
!7880 = !DILocation(line: 0, scope: !7877)
!7881 = !DILocation(line: 384, column: 2, scope: !7877)
!7882 = !DILocation(line: 385, column: 1, scope: !7877)
!7883 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !676, file: !676, line: 373, type: !729, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7884)
!7884 = !{!7885}
!7885 = !DILocalVariable(name: "dev", arg: 1, scope: !7883, file: !676, line: 373, type: !705)
!7886 = !DILocation(line: 0, scope: !7883)
!7887 = !DILocation(line: 375, column: 2, scope: !7883)
!7888 = !DILocation(line: 376, column: 1, scope: !7883)
!7889 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !676, file: !676, line: 284, type: !729, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7890)
!7890 = !{!7891}
!7891 = !DILocalVariable(name: "dev", arg: 1, scope: !7889, file: !676, line: 284, type: !705)
!7892 = !DILocation(line: 0, scope: !7889)
!7893 = !DILocation(line: 286, column: 2, scope: !7889)
!7894 = !DILocation(line: 287, column: 1, scope: !7889)
!7895 = distinct !DISubprogram(name: "stm32_exti_init", scope: !676, file: !676, line: 416, type: !703, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7896)
!7896 = !{!7897}
!7897 = !DILocalVariable(name: "dev", arg: 1, scope: !7895, file: !676, line: 416, type: !705)
!7898 = !DILocation(line: 0, scope: !7895)
!7899 = !DILocation(line: 418, column: 2, scope: !7895)
!7900 = !DILocation(line: 420, column: 2, scope: !7895)
!7901 = !DILocation(line: 0, scope: !728)
!7902 = !DILocation(line: 493, column: 2, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !728, file: !676, line: 493, column: 2)
!7904 = !DILocation(line: 497, column: 2, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !728, file: !676, line: 497, column: 2)
!7906 = !DILocation(line: 507, column: 2, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !728, file: !676, line: 507, column: 2)
!7908 = !DILocation(line: 512, column: 2, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !728, file: !676, line: 512, column: 2)
!7910 = !DILocation(line: 516, column: 2, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !728, file: !676, line: 516, column: 2)
!7912 = !DILocation(line: 523, column: 2, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !728, file: !676, line: 523, column: 2)
!7914 = !DILocation(line: 527, column: 2, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !728, file: !676, line: 527, column: 2)
!7916 = !DILocation(line: 581, column: 2, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !728, file: !676, line: 581, column: 2)
!7918 = !DILocation(line: 586, column: 2, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !728, file: !676, line: 586, column: 2)
!7920 = !DILocation(line: 591, column: 2, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !728, file: !676, line: 591, column: 2)
!7922 = !DILocation(line: 595, column: 2, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !728, file: !676, line: 595, column: 2)
!7924 = !DILocation(line: 607, column: 1, scope: !728)
!7925 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !676, file: !676, line: 112, type: !7811, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7926)
!7926 = !{!7927, !7928}
!7927 = !DILocalVariable(name: "line", arg: 1, scope: !7925, file: !676, line: 112, type: !107)
!7928 = !DILocalVariable(name: "irqnum", scope: !7925, file: !676, line: 114, type: !107)
!7929 = !DILocation(line: 0, scope: !7925)
!7930 = !DILocation(line: 121, column: 11, scope: !7925)
!7931 = !DILocation(line: 130, column: 26, scope: !7925)
!7932 = !DILocation(line: 130, column: 2, scope: !7925)
!7933 = !DILocation(line: 134, column: 2, scope: !7925)
!7934 = !DILocation(line: 135, column: 1, scope: !7925)
!7935 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7822, file: !7822, line: 268, type: !6258, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7936)
!7936 = !{!7937}
!7937 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7935, file: !7822, line: 268, type: !162)
!7938 = !DILocation(line: 0, scope: !7935)
!7939 = !DILocation(line: 270, column: 3, scope: !7935)
!7940 = !DILocation(line: 271, column: 1, scope: !7935)
!7941 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !676, file: !676, line: 137, type: !7811, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7942)
!7942 = !{!7943}
!7943 = !DILocalVariable(name: "line", arg: 1, scope: !7941, file: !676, line: 137, type: !107)
!7944 = !DILocation(line: 0, scope: !7941)
!7945 = !DILocation(line: 141, column: 11, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7941, file: !676, line: 141, column: 6)
!7947 = !DILocation(line: 141, column: 6, scope: !7941)
!7948 = !DILocation(line: 145, column: 28, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7946, file: !676, line: 141, column: 17)
!7950 = !DILocation(line: 145, column: 3, scope: !7949)
!7951 = !DILocation(line: 147, column: 2, scope: !7949)
!7952 = !DILocation(line: 151, column: 1, scope: !7941)
!7953 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7822, file: !7822, line: 309, type: !6258, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7954)
!7954 = !{!7955}
!7955 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7953, file: !7822, line: 309, type: !162)
!7956 = !DILocation(line: 0, scope: !7953)
!7957 = !DILocation(line: 311, column: 3, scope: !7953)
!7958 = !DILocation(line: 312, column: 1, scope: !7953)
!7959 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !676, file: !676, line: 202, type: !7960, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7962)
!7960 = !DISubroutineType(types: !7961)
!7961 = !{null, !107, !107}
!7962 = !{!7963, !7964}
!7963 = !DILocalVariable(name: "line", arg: 1, scope: !7959, file: !676, line: 202, type: !107)
!7964 = !DILocalVariable(name: "trigger", arg: 2, scope: !7959, file: !676, line: 202, type: !107)
!7965 = !DILocation(line: 0, scope: !7959)
!7966 = !DILocation(line: 211, column: 2, scope: !7959)
!7967 = !DILocation(line: 213, column: 36, scope: !7968)
!7968 = distinct !DILexicalBlock(scope: !7959, file: !676, line: 211, column: 19)
!7969 = !DILocation(line: 213, column: 3, scope: !7968)
!7970 = !DILocation(line: 214, column: 3, scope: !7968)
!7971 = !DILocation(line: 215, column: 3, scope: !7968)
!7972 = !DILocation(line: 217, column: 35, scope: !7968)
!7973 = !DILocation(line: 217, column: 3, scope: !7968)
!7974 = !DILocation(line: 218, column: 3, scope: !7968)
!7975 = !DILocation(line: 219, column: 3, scope: !7968)
!7976 = !DILocation(line: 221, column: 36, scope: !7968)
!7977 = !DILocation(line: 221, column: 3, scope: !7968)
!7978 = !DILocation(line: 222, column: 3, scope: !7968)
!7979 = !DILocation(line: 223, column: 3, scope: !7968)
!7980 = !DILocation(line: 225, column: 35, scope: !7968)
!7981 = !DILocation(line: 225, column: 3, scope: !7968)
!7982 = !DILocation(line: 226, column: 3, scope: !7968)
!7983 = !DILocation(line: 227, column: 3, scope: !7968)
!7984 = !DILocation(line: 232, column: 1, scope: !7959)
!7985 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7822, file: !7822, line: 573, type: !6258, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7986)
!7986 = !{!7987}
!7987 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7985, file: !7822, line: 573, type: !162)
!7988 = !DILocation(line: 0, scope: !7985)
!7989 = !DILocation(line: 575, column: 3, scope: !7985)
!7990 = !DILocation(line: 577, column: 1, scope: !7985)
!7991 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7822, file: !7822, line: 703, type: !6258, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7992)
!7992 = !{!7993}
!7993 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7991, file: !7822, line: 703, type: !162)
!7994 = !DILocation(line: 0, scope: !7991)
!7995 = !DILocation(line: 705, column: 3, scope: !7991)
!7996 = !DILocation(line: 706, column: 1, scope: !7991)
!7997 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7822, file: !7822, line: 529, type: !6258, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7998)
!7998 = !{!7999}
!7999 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7997, file: !7822, line: 529, type: !162)
!8000 = !DILocation(line: 0, scope: !7997)
!8001 = !DILocation(line: 531, column: 3, scope: !7997)
!8002 = !DILocation(line: 533, column: 1, scope: !7997)
!8003 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7822, file: !7822, line: 661, type: !6258, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !8004)
!8004 = !{!8005}
!8005 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8003, file: !7822, line: 661, type: !162)
!8006 = !DILocation(line: 0, scope: !8003)
!8007 = !DILocation(line: 663, column: 3, scope: !8003)
!8008 = !DILocation(line: 664, column: 1, scope: !8003)
!8009 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !676, file: !676, line: 433, type: !8010, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !8012)
!8010 = !DISubroutineType(types: !8011)
!8011 = !{!107, !107, !716, !102}
!8012 = !{!8013, !8014, !8015, !8016, !8018}
!8013 = !DILocalVariable(name: "line", arg: 1, scope: !8009, file: !676, line: 433, type: !107)
!8014 = !DILocalVariable(name: "cb", arg: 2, scope: !8009, file: !676, line: 433, type: !716)
!8015 = !DILocalVariable(name: "arg", arg: 3, scope: !8009, file: !676, line: 433, type: !102)
!8016 = !DILocalVariable(name: "dev", scope: !8009, file: !676, line: 435, type: !8017)
!8017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !705)
!8018 = !DILocalVariable(name: "data", scope: !8009, file: !676, line: 436, type: !7776)
!8019 = !DILocation(line: 0, scope: !8009)
!8020 = !DILocation(line: 438, column: 21, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !8009, file: !676, line: 438, column: 6)
!8022 = !DILocation(line: 438, column: 6, scope: !8021)
!8023 = !DILocation(line: 438, column: 6, scope: !8009)
!8024 = !DILocation(line: 442, column: 20, scope: !8009)
!8025 = !DILocation(line: 443, column: 17, scope: !8009)
!8026 = !DILocation(line: 443, column: 22, scope: !8009)
!8027 = !DILocation(line: 445, column: 2, scope: !8009)
!8028 = !DILocation(line: 446, column: 1, scope: !8009)
!8029 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !676, file: !676, line: 448, type: !7811, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !8030)
!8030 = !{!8031, !8032, !8033}
!8031 = !DILocalVariable(name: "line", arg: 1, scope: !8029, file: !676, line: 448, type: !107)
!8032 = !DILocalVariable(name: "dev", scope: !8029, file: !676, line: 450, type: !8017)
!8033 = !DILocalVariable(name: "data", scope: !8029, file: !676, line: 451, type: !7776)
!8034 = !DILocation(line: 0, scope: !8029)
!8035 = !DILocation(line: 453, column: 17, scope: !8029)
!8036 = !DILocation(line: 453, column: 20, scope: !8029)
!8037 = !DILocation(line: 454, column: 17, scope: !8029)
!8038 = !DILocation(line: 454, column: 22, scope: !8029)
!8039 = !DILocation(line: 455, column: 1, scope: !8029)
!8040 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !868, file: !868, line: 183, type: !906, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !8041)
!8041 = !{!8042, !8043, !8044, !8045, !8046}
!8042 = !DILocalVariable(name: "dev", arg: 1, scope: !8040, file: !868, line: 183, type: !897)
!8043 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8040, file: !868, line: 184, type: !908)
!8044 = !DILocalVariable(name: "pclken", scope: !8040, file: !868, line: 186, type: !858)
!8045 = !DILocalVariable(name: "reg", scope: !8040, file: !868, line: 187, type: !1508)
!8046 = !DILocalVariable(name: "reg_val", scope: !8040, file: !868, line: 188, type: !162)
!8047 = !DILocation(line: 0, scope: !8040)
!8048 = !DILocation(line: 192, column: 6, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8040, file: !868, line: 192, column: 6)
!8050 = !DILocation(line: 192, column: 6, scope: !8040)
!8051 = !DILocation(line: 197, column: 52, scope: !8040)
!8052 = !DILocation(line: 197, column: 8, scope: !8040)
!8053 = !DILocation(line: 198, column: 12, scope: !8040)
!8054 = !DILocation(line: 199, column: 21, scope: !8040)
!8055 = !DILocation(line: 199, column: 10, scope: !8040)
!8056 = !DILocation(line: 200, column: 7, scope: !8040)
!8057 = !DILocation(line: 202, column: 2, scope: !8040)
!8058 = !DILocation(line: 203, column: 1, scope: !8040)
!8059 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !868, file: !868, line: 205, type: !906, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !8060)
!8060 = !{!8061, !8062, !8063, !8064, !8065}
!8061 = !DILocalVariable(name: "dev", arg: 1, scope: !8059, file: !868, line: 205, type: !897)
!8062 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8059, file: !868, line: 206, type: !908)
!8063 = !DILocalVariable(name: "pclken", scope: !8059, file: !868, line: 208, type: !858)
!8064 = !DILocalVariable(name: "reg", scope: !8059, file: !868, line: 209, type: !1508)
!8065 = !DILocalVariable(name: "reg_val", scope: !8059, file: !868, line: 210, type: !162)
!8066 = !DILocation(line: 0, scope: !8059)
!8067 = !DILocation(line: 214, column: 6, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8059, file: !868, line: 214, column: 6)
!8069 = !DILocation(line: 214, column: 6, scope: !8059)
!8070 = !DILocation(line: 219, column: 52, scope: !8059)
!8071 = !DILocation(line: 219, column: 8, scope: !8059)
!8072 = !DILocation(line: 220, column: 12, scope: !8059)
!8073 = !DILocation(line: 221, column: 22, scope: !8059)
!8074 = !DILocation(line: 221, column: 13, scope: !8059)
!8075 = !DILocation(line: 221, column: 10, scope: !8059)
!8076 = !DILocation(line: 222, column: 7, scope: !8059)
!8077 = !DILocation(line: 224, column: 2, scope: !8059)
!8078 = !DILocation(line: 225, column: 1, scope: !8059)
!8079 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !868, file: !868, line: 262, type: !922, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !8080)
!8080 = !{!8081, !8082, !8083, !8084, !8085, !8086, !8087, !8088}
!8081 = !DILocalVariable(name: "clock", arg: 1, scope: !8079, file: !868, line: 262, type: !897)
!8082 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8079, file: !868, line: 263, type: !908)
!8083 = !DILocalVariable(name: "rate", arg: 3, scope: !8079, file: !868, line: 264, type: !864)
!8084 = !DILocalVariable(name: "pclken", scope: !8079, file: !868, line: 266, type: !858)
!8085 = !DILocalVariable(name: "ahb_clock", scope: !8079, file: !868, line: 273, type: !162)
!8086 = !DILocalVariable(name: "apb1_clock", scope: !8079, file: !868, line: 274, type: !162)
!8087 = !DILocalVariable(name: "apb2_clock", scope: !8079, file: !868, line: 276, type: !162)
!8088 = !DILocalVariable(name: "ahb3_clock", scope: !8079, file: !868, line: 286, type: !162)
!8089 = !DILocation(line: 0, scope: !8079)
!8090 = !DILocation(line: 273, column: 23, scope: !8079)
!8091 = !DILocation(line: 299, column: 18, scope: !8079)
!8092 = !DILocation(line: 299, column: 2, scope: !8079)
!8093 = !DILocation(line: 274, column: 24, scope: !8079)
!8094 = !DILocation(line: 319, column: 3, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8079, file: !868, line: 299, column: 23)
!8096 = !DILocation(line: 276, column: 24, scope: !8079)
!8097 = !DILocation(line: 323, column: 3, scope: !8095)
!8098 = !DILocation(line: 346, column: 33, scope: !8095)
!8099 = !DILocation(line: 346, column: 11, scope: !8095)
!8100 = !DILocation(line: 350, column: 3, scope: !8095)
!8101 = !DILocation(line: 354, column: 33, scope: !8095)
!8102 = !DILocation(line: 354, column: 11, scope: !8095)
!8103 = !DILocation(line: 358, column: 3, scope: !8095)
!8104 = !DILocation(line: 374, column: 3, scope: !8095)
!8105 = !DILocation(line: 379, column: 3, scope: !8095)
!8106 = !DILocation(line: 0, scope: !8095)
!8107 = !DILocation(line: 396, column: 1, scope: !8079)
!8108 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !868, file: !868, line: 227, type: !938, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !8109)
!8109 = !{!8110, !8111, !8112, !8113, !8114, !8115, !8116, !8117}
!8110 = !DILocalVariable(name: "dev", arg: 1, scope: !8108, file: !868, line: 227, type: !897)
!8111 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8108, file: !868, line: 228, type: !908)
!8112 = !DILocalVariable(name: "data", arg: 3, scope: !8108, file: !868, line: 229, type: !102)
!8113 = !DILocalVariable(name: "pclken", scope: !8108, file: !868, line: 233, type: !858)
!8114 = !DILocalVariable(name: "reg", scope: !8108, file: !868, line: 234, type: !1508)
!8115 = !DILocalVariable(name: "reg_val", scope: !8108, file: !868, line: 235, type: !162)
!8116 = !DILocalVariable(name: "dt_val", scope: !8108, file: !868, line: 235, type: !162)
!8117 = !DILocalVariable(name: "err", scope: !8108, file: !868, line: 236, type: !107)
!8118 = !DILocation(line: 0, scope: !8108)
!8119 = !DILocation(line: 241, column: 30, scope: !8108)
!8120 = !DILocation(line: 241, column: 8, scope: !8108)
!8121 = !DILocation(line: 242, column: 10, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8108, file: !868, line: 242, column: 6)
!8123 = !DILocation(line: 242, column: 6, scope: !8108)
!8124 = !DILocation(line: 247, column: 11, scope: !8108)
!8125 = !DILocation(line: 248, column: 6, scope: !8108)
!8126 = !DILocation(line: 247, column: 44, scope: !8108)
!8127 = !DILocation(line: 250, column: 6, scope: !8108)
!8128 = !DILocation(line: 249, column: 52, scope: !8108)
!8129 = !DILocation(line: 249, column: 8, scope: !8108)
!8130 = !DILocation(line: 251, column: 12, scope: !8108)
!8131 = !DILocation(line: 252, column: 10, scope: !8108)
!8132 = !DILocation(line: 253, column: 7, scope: !8108)
!8133 = !DILocation(line: 255, column: 2, scope: !8108)
!8134 = !DILocation(line: 260, column: 1, scope: !8108)
!8135 = distinct !DISubprogram(name: "enabled_clock", scope: !868, file: !868, line: 100, type: !8136, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !8138)
!8136 = !DISubroutineType(types: !8137)
!8137 = !{!107, !162}
!8138 = !{!8139, !8140}
!8139 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8135, file: !868, line: 100, type: !162)
!8140 = !DILocalVariable(name: "r", scope: !8135, file: !868, line: 102, type: !107)
!8141 = !DILocation(line: 0, scope: !8135)
!8142 = !DILocation(line: 104, column: 2, scope: !8135)
!8143 = !DILocation(line: 180, column: 2, scope: !8135)
!8144 = !DILocation(line: 181, column: 1, scope: !8135)
!8145 = distinct !DISubprogram(name: "get_bus_clock", scope: !868, file: !868, line: 79, type: !8146, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !8148)
!8146 = !DISubroutineType(types: !8147)
!8147 = !{!162, !162, !162}
!8148 = !{!8149, !8150}
!8149 = !DILocalVariable(name: "clock", arg: 1, scope: !8145, file: !868, line: 79, type: !162)
!8150 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8145, file: !868, line: 79, type: !162)
!8151 = !DILocation(line: 0, scope: !8145)
!8152 = !DILocation(line: 81, column: 15, scope: !8145)
!8153 = !DILocation(line: 81, column: 2, scope: !8145)
!8154 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !868, file: !868, line: 68, type: !8155, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !8157)
!8155 = !DISubroutineType(types: !8156)
!8156 = !{!162, !162, !107, !107, !107}
!8157 = !{!8158, !8159, !8160, !8161}
!8158 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8154, file: !868, line: 68, type: !162)
!8159 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8154, file: !868, line: 69, type: !107)
!8160 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8154, file: !868, line: 70, type: !107)
!8161 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8154, file: !868, line: 71, type: !107)
!8162 = !DILocation(line: 0, scope: !8154)
!8163 = !DILocation(line: 75, column: 22, scope: !8154)
!8164 = !DILocation(line: 76, column: 13, scope: !8154)
!8165 = !DILocation(line: 75, column: 34, scope: !8154)
!8166 = !DILocation(line: 75, column: 2, scope: !8154)
!8167 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !868, file: !868, line: 641, type: !895, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !8168)
!8168 = !{!8169, !8170, !8171}
!8169 = !DILocalVariable(name: "dev", arg: 1, scope: !8167, file: !868, line: 641, type: !897)
!8170 = !DILocalVariable(name: "old_flash_freq", scope: !8167, file: !868, line: 664, type: !162)
!8171 = !DILocalVariable(name: "new_flash_freq", scope: !8167, file: !868, line: 665, type: !162)
!8172 = !DILocation(line: 0, scope: !8167)
!8173 = !DILocation(line: 646, column: 2, scope: !8167)
!8174 = !DILocation(line: 667, column: 19, scope: !8167)
!8175 = !DILocation(line: 674, column: 21, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8167, file: !868, line: 674, column: 6)
!8177 = !DILocation(line: 674, column: 6, scope: !8167)
!8178 = !DILocation(line: 675, column: 3, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8176, file: !868, line: 674, column: 59)
!8180 = !DILocation(line: 676, column: 2, scope: !8179)
!8181 = !DILocation(line: 680, column: 2, scope: !8167)
!8182 = !DILocation(line: 683, column: 2, scope: !8167)
!8183 = !DILocation(line: 690, column: 3, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8185, file: !868, line: 689, column: 9)
!8185 = distinct !DILexicalBlock(scope: !8167, file: !868, line: 685, column: 6)
!8186 = !DILocation(line: 695, column: 2, scope: !8167)
!8187 = !DILocation(line: 696, column: 2, scope: !8167)
!8188 = !DILocation(line: 696, column: 9, scope: !8167)
!8189 = !DILocation(line: 696, column: 34, scope: !8167)
!8190 = distinct !{!8190, !8187, !8191}
!8191 = !DILocation(line: 697, column: 2, scope: !8167)
!8192 = !DILocation(line: 720, column: 21, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8167, file: !868, line: 720, column: 6)
!8194 = !DILocation(line: 720, column: 6, scope: !8167)
!8195 = !DILocation(line: 721, column: 3, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8193, file: !868, line: 720, column: 60)
!8197 = !DILocation(line: 722, column: 2, scope: !8196)
!8198 = !DILocation(line: 725, column: 18, scope: !8167)
!8199 = !DILocation(line: 728, column: 2, scope: !8167)
!8200 = !DILocation(line: 730, column: 2, scope: !8167)
!8201 = !DILocation(line: 745, column: 2, scope: !8167)
!8202 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8203, file: !8203, line: 3275, type: !6248, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !250)
!8203 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8204 = !DILocation(line: 3277, column: 21, scope: !8202)
!8205 = !DILocation(line: 3277, column: 3, scope: !8202)
!8206 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !868, file: !868, line: 507, type: !3211, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !250)
!8207 = !DILocation(line: 516, column: 4, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8209, file: !868, line: 515, column: 10)
!8209 = distinct !DILexicalBlock(scope: !8210, file: !868, line: 513, column: 7)
!8210 = distinct !DILexicalBlock(scope: !8211, file: !868, line: 510, column: 37)
!8211 = distinct !DILexicalBlock(scope: !8206, file: !868, line: 510, column: 6)
!8212 = !DILocation(line: 526, column: 3, scope: !8210)
!8213 = !DILocation(line: 527, column: 3, scope: !8210)
!8214 = !DILocation(line: 527, column: 10, scope: !8210)
!8215 = !DILocation(line: 527, column: 31, scope: !8210)
!8216 = distinct !{!8216, !8213, !8217}
!8217 = !DILocation(line: 529, column: 3, scope: !8210)
!8218 = !DILocation(line: 583, column: 3, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8220, file: !868, line: 577, column: 37)
!8220 = distinct !DILexicalBlock(scope: !8206, file: !868, line: 577, column: 6)
!8221 = !DILocation(line: 584, column: 3, scope: !8219)
!8222 = !DILocation(line: 584, column: 10, scope: !8219)
!8223 = !DILocation(line: 584, column: 31, scope: !8219)
!8224 = distinct !{!8224, !8221, !8225}
!8225 = !DILocation(line: 585, column: 3, scope: !8219)
!8226 = !DILocation(line: 627, column: 1, scope: !8206)
!8227 = distinct !DISubprogram(name: "set_up_plls", scope: !868, file: !868, line: 448, type: !3211, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !250)
!8228 = !DILocation(line: 460, column: 6, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8227, file: !868, line: 460, column: 6)
!8230 = !DILocation(line: 460, column: 31, scope: !8229)
!8231 = !DILocation(line: 460, column: 6, scope: !8227)
!8232 = !DILocation(line: 461, column: 3, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8229, file: !868, line: 460, column: 67)
!8234 = !DILocation(line: 462, column: 3, scope: !8233)
!8235 = !DILocation(line: 463, column: 2, scope: !8233)
!8236 = !DILocation(line: 464, column: 2, scope: !8227)
!8237 = !DILocation(line: 488, column: 2, scope: !8227)
!8238 = !DILocation(line: 492, column: 2, scope: !8227)
!8239 = !DILocation(line: 496, column: 2, scope: !8227)
!8240 = !DILocation(line: 499, column: 2, scope: !8227)
!8241 = !DILocation(line: 500, column: 2, scope: !8227)
!8242 = !DILocation(line: 500, column: 9, scope: !8227)
!8243 = !DILocation(line: 500, column: 30, scope: !8227)
!8244 = distinct !{!8244, !8241, !8245}
!8245 = !DILocation(line: 502, column: 2, scope: !8227)
!8246 = !DILocation(line: 505, column: 1, scope: !8227)
!8247 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8203, file: !8203, line: 3224, type: !6258, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !8248)
!8248 = !{!8249}
!8249 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8247, file: !8203, line: 3224, type: !162)
!8250 = !DILocation(line: 0, scope: !8247)
!8251 = !DILocation(line: 3226, column: 3, scope: !8247)
!8252 = !DILocation(line: 3227, column: 1, scope: !8247)
!8253 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8203, file: !8203, line: 3188, type: !6258, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !8254)
!8254 = !{!8255}
!8255 = !DILocalVariable(name: "Source", arg: 1, scope: !8253, file: !8203, line: 3188, type: !162)
!8256 = !DILocation(line: 0, scope: !8253)
!8257 = !DILocation(line: 3190, column: 3, scope: !8253)
!8258 = !DILocation(line: 3191, column: 1, scope: !8253)
!8259 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8203, file: !8203, line: 3204, type: !6248, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !250)
!8260 = !DILocation(line: 3206, column: 21, scope: !8259)
!8261 = !DILocation(line: 3206, column: 3, scope: !8259)
!8262 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8203, file: !8203, line: 3240, type: !6258, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !8263)
!8263 = !{!8264}
!8264 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8262, file: !8203, line: 3240, type: !162)
!8265 = !DILocation(line: 0, scope: !8262)
!8266 = !DILocation(line: 3242, column: 3, scope: !8262)
!8267 = !DILocation(line: 3243, column: 1, scope: !8262)
!8268 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8203, file: !8203, line: 3256, type: !6258, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !8269)
!8269 = !{!8270}
!8270 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8268, file: !8203, line: 3256, type: !162)
!8271 = !DILocation(line: 0, scope: !8268)
!8272 = !DILocation(line: 3258, column: 3, scope: !8268)
!8273 = !DILocation(line: 3259, column: 1, scope: !8268)
!8274 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !868, file: !868, line: 409, type: !3211, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !250)
!8275 = !DILocation(line: 412, column: 6, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8274, file: !868, line: 412, column: 6)
!8277 = !DILocation(line: 412, column: 27, scope: !8276)
!8278 = !DILocation(line: 412, column: 6, scope: !8274)
!8279 = !DILocation(line: 414, column: 3, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8276, file: !868, line: 412, column: 33)
!8281 = !DILocation(line: 415, column: 3, scope: !8280)
!8282 = !DILocation(line: 415, column: 10, scope: !8280)
!8283 = !DILocation(line: 415, column: 31, scope: !8280)
!8284 = distinct !{!8284, !8281, !8285}
!8285 = !DILocation(line: 417, column: 3, scope: !8280)
!8286 = !DILocation(line: 421, column: 2, scope: !8274)
!8287 = !DILocation(line: 422, column: 2, scope: !8274)
!8288 = !DILocation(line: 422, column: 9, scope: !8274)
!8289 = !DILocation(line: 422, column: 34, scope: !8274)
!8290 = distinct !{!8290, !8287, !8291}
!8291 = !DILocation(line: 423, column: 2, scope: !8274)
!8292 = !DILocation(line: 424, column: 1, scope: !8274)
!8293 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8203, file: !8203, line: 4195, type: !3211, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !250)
!8294 = !DILocation(line: 4197, column: 3, scope: !8293)
!8295 = !DILocation(line: 4198, column: 1, scope: !8293)
!8296 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8203, file: !8203, line: 4184, type: !3211, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !250)
!8297 = !DILocation(line: 4186, column: 3, scope: !8296)
!8298 = !DILocation(line: 4187, column: 1, scope: !8296)
!8299 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8203, file: !8203, line: 4205, type: !6248, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !250)
!8300 = !DILocation(line: 4207, column: 11, scope: !8299)
!8301 = !DILocation(line: 4207, column: 44, scope: !8299)
!8302 = !DILocation(line: 4207, column: 3, scope: !8299)
!8303 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8203, file: !8203, line: 3007, type: !6248, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !250)
!8304 = !DILocation(line: 3009, column: 11, scope: !8303)
!8305 = !DILocation(line: 3009, column: 44, scope: !8303)
!8306 = !DILocation(line: 3009, column: 3, scope: !8303)
!8307 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8203, file: !8203, line: 2987, type: !3211, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !250)
!8308 = !DILocation(line: 2989, column: 3, scope: !8307)
!8309 = !DILocation(line: 2990, column: 1, scope: !8307)
!8310 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8203, file: !8203, line: 2939, type: !3211, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !250)
!8311 = !DILocation(line: 2941, column: 3, scope: !8310)
!8312 = !DILocation(line: 2942, column: 1, scope: !8310)
!8313 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8203, file: !8203, line: 2949, type: !3211, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !250)
!8314 = !DILocation(line: 2951, column: 3, scope: !8313)
!8315 = !DILocation(line: 2952, column: 1, scope: !8313)
!8316 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8203, file: !8203, line: 2969, type: !6248, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !250)
!8317 = !DILocation(line: 2971, column: 11, scope: !8316)
!8318 = !DILocation(line: 2971, column: 44, scope: !8316)
!8319 = !DILocation(line: 2971, column: 3, scope: !8316)
!8320 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8203, file: !8203, line: 3143, type: !3211, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !250)
!8321 = !DILocation(line: 3145, column: 3, scope: !8320)
!8322 = !DILocation(line: 3146, column: 1, scope: !8320)
!8323 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8203, file: !8203, line: 3163, type: !6248, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !803, retainedNodes: !250)
!8324 = !DILocation(line: 3165, column: 11, scope: !8323)
!8325 = !DILocation(line: 3165, column: 46, scope: !8323)
!8326 = !DILocation(line: 3165, column: 3, scope: !8323)
!8327 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8328, file: !8328, line: 40, type: !6248, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2894, retainedNodes: !250)
!8328 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8329 = !DILocation(line: 45, column: 3, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8331, file: !8328, line: 44, column: 44)
!8331 = distinct !DILexicalBlock(scope: !8332, file: !8328, line: 44, column: 13)
!8332 = distinct !DILexicalBlock(scope: !8327, file: !8328, line: 42, column: 6)
!8333 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8328, file: !8328, line: 56, type: !3211, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2894, retainedNodes: !250)
!8334 = !DILocation(line: 58, column: 2, scope: !8333)
!8335 = !DILocation(line: 62, column: 1, scope: !8333)
!8336 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8203, file: !8203, line: 4304, type: !8337, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2894, retainedNodes: !8339)
!8337 = !DISubroutineType(types: !8338)
!8338 = !{null, !162, !162, !162, !162}
!8339 = !{!8340, !8341, !8342, !8343}
!8340 = !DILocalVariable(name: "Source", arg: 1, scope: !8336, file: !8203, line: 4304, type: !162)
!8341 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8336, file: !8203, line: 4304, type: !162)
!8342 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8336, file: !8203, line: 4304, type: !162)
!8343 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8336, file: !8203, line: 4304, type: !162)
!8344 = !DILocation(line: 0, scope: !8336)
!8345 = !DILocation(line: 4306, column: 3, scope: !8336)
!8346 = !DILocation(line: 4308, column: 3, scope: !8336)
!8347 = !DILocation(line: 4310, column: 3, scope: !8336)
!8348 = !DILocation(line: 4312, column: 1, scope: !8336)
!8349 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8328, file: !8328, line: 69, type: !3211, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2894, retainedNodes: !250)
!8350 = !DILocation(line: 72, column: 2, scope: !8349)
!8351 = !DILocation(line: 73, column: 1, scope: !8349)
!8352 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8353, file: !8353, line: 1185, type: !6258, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2894, retainedNodes: !8354)
!8353 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8354 = !{!8355, !8356}
!8355 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8352, file: !8353, line: 1185, type: !162)
!8356 = !DILocalVariable(name: "tmpreg", scope: !8352, file: !8353, line: 1187, type: !283)
!8357 = !DILocation(line: 0, scope: !8352)
!8358 = !DILocation(line: 1187, column: 3, scope: !8352)
!8359 = !DILocation(line: 1187, column: 17, scope: !8352)
!8360 = !DILocation(line: 1188, column: 3, scope: !8352)
!8361 = !DILocation(line: 1190, column: 12, scope: !8352)
!8362 = !DILocation(line: 1190, column: 10, scope: !8352)
!8363 = !DILocation(line: 1191, column: 9, scope: !8352)
!8364 = !DILocation(line: 1192, column: 1, scope: !8352)
!8365 = distinct !DISubprogram(name: "uart_console_init", scope: !1027, file: !1027, line: 588, type: !974, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8366)
!8366 = !{!8367}
!8367 = !DILocalVariable(name: "arg", arg: 1, scope: !8365, file: !1027, line: 588, type: !953)
!8368 = !DILocation(line: 0, scope: !8365)
!8369 = !DILocation(line: 593, column: 7, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8365, file: !1027, line: 593, column: 6)
!8371 = !DILocation(line: 593, column: 6, scope: !8365)
!8372 = !DILocation(line: 597, column: 2, scope: !8365)
!8373 = !DILocation(line: 599, column: 2, scope: !8365)
!8374 = !DILocation(line: 600, column: 1, scope: !8365)
!8375 = distinct !DISubprogram(name: "device_is_ready", scope: !3494, file: !3494, line: 47, type: !8376, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8378)
!8376 = !DISubroutineType(types: !8377)
!8377 = !{!136, !953}
!8378 = !{!8379}
!8379 = !DILocalVariable(name: "dev", arg: 1, scope: !8375, file: !3494, line: 47, type: !953)
!8380 = !DILocation(line: 0, scope: !8375)
!8381 = !DILocation(line: 55, column: 2, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8375, file: !3494, line: 55, column: 2)
!8383 = !{i64 2155286377}
!8384 = !DILocation(line: 56, column: 9, scope: !8375)
!8385 = !DILocation(line: 56, column: 2, scope: !8375)
!8386 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1027, file: !1027, line: 573, type: !3211, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !250)
!8387 = !DILocation(line: 576, column: 2, scope: !8386)
!8388 = !DILocation(line: 579, column: 2, scope: !8386)
!8389 = !DILocation(line: 581, column: 1, scope: !8386)
!8390 = distinct !DISubprogram(name: "console_out", scope: !1027, file: !1027, line: 77, type: !270, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8391)
!8391 = !{!8392}
!8392 = !DILocalVariable(name: "c", arg: 1, scope: !8390, file: !1027, line: 77, type: !107)
!8393 = !DILocation(line: 0, scope: !8390)
!8394 = !DILocation(line: 89, column: 11, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8390, file: !1027, line: 89, column: 6)
!8396 = !DILocation(line: 89, column: 6, scope: !8390)
!8397 = !DILocation(line: 90, column: 3, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8395, file: !1027, line: 89, column: 17)
!8399 = !DILocation(line: 91, column: 2, scope: !8398)
!8400 = !DILocation(line: 92, column: 34, scope: !8390)
!8401 = !DILocation(line: 92, column: 2, scope: !8390)
!8402 = !DILocation(line: 94, column: 2, scope: !8390)
!8403 = distinct !DISubprogram(name: "uart_poll_out", scope: !3358, file: !3358, line: 95, type: !970, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8404)
!8404 = !{!8405, !8406}
!8405 = !DILocalVariable(name: "dev", arg: 1, scope: !8403, file: !3358, line: 95, type: !953)
!8406 = !DILocalVariable(name: "out_char", arg: 2, scope: !8403, file: !3358, line: 95, type: !134)
!8407 = !DILocation(line: 0, scope: !8403)
!8408 = !DILocation(line: 105, column: 2, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8403, file: !3358, line: 105, column: 2)
!8410 = !{i64 2155369622}
!8411 = !DILocation(line: 106, column: 2, scope: !8403)
!8412 = !DILocation(line: 107, column: 1, scope: !8403)
!8413 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !111, file: !111, line: 574, type: !970, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8414)
!8414 = !{!8415, !8416, !8417}
!8415 = !DILocalVariable(name: "dev", arg: 1, scope: !8413, file: !111, line: 574, type: !953)
!8416 = !DILocalVariable(name: "out_char", arg: 2, scope: !8413, file: !111, line: 575, type: !134)
!8417 = !DILocalVariable(name: "api", scope: !8413, file: !111, line: 577, type: !945)
!8418 = !DILocation(line: 0, scope: !8413)
!8419 = !DILocation(line: 578, column: 40, scope: !8413)
!8420 = !DILocation(line: 580, column: 7, scope: !8413)
!8421 = !DILocation(line: 580, column: 2, scope: !8413)
!8422 = !DILocation(line: 581, column: 1, scope: !8413)
!8423 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !8376, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8424)
!8424 = !{!8425}
!8425 = !DILocalVariable(name: "dev", arg: 1, scope: !8423, file: !120, line: 730, type: !953)
!8426 = !DILocation(line: 0, scope: !8423)
!8427 = !DILocation(line: 732, column: 9, scope: !8423)
!8428 = !DILocation(line: 732, column: 2, scope: !8423)
!8429 = distinct !DISubprogram(name: "uart_register_input", scope: !1027, file: !1027, line: 560, type: !8430, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !942, retainedNodes: !8475)
!8430 = !DISubroutineType(types: !8431)
!8431 = !{null, !8432, !8432, !8472}
!8432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8433, size: 32)
!8433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !224, line: 2208, size: 128, elements: !8434)
!8434 = !{!8435}
!8435 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8433, file: !224, line: 2209, baseType: !8436, size: 128)
!8436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !224, line: 1709, size: 128, elements: !8437)
!8437 = !{!8438, !8451, !8453}
!8438 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8436, file: !224, line: 1710, baseType: !8439, size: 64)
!8439 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8440, line: 46, baseType: !8441)
!8440 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8440, line: 41, size: 64, elements: !8442)
!8442 = !{!8443, !8450}
!8443 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8441, file: !8440, line: 42, baseType: !8444, size: 32)
!8444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8445, size: 32)
!8445 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8440, line: 39, baseType: !8446)
!8446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8440, line: 35, size: 32, elements: !8447)
!8447 = !{!8448}
!8448 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8446, file: !8440, line: 36, baseType: !8449, size: 32)
!8449 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8440, line: 32, baseType: !162)
!8450 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8441, file: !8440, line: 43, baseType: !8444, size: 32, offset: 32)
!8451 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8436, file: !224, line: 1711, baseType: !8452, offset: 64)
!8452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!8453 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8436, file: !224, line: 1712, baseType: !8454, size: 64, offset: 64)
!8454 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !8455)
!8455 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !8456)
!8456 = !{!8457}
!8457 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8455, file: !228, line: 232, baseType: !8458, size: 64)
!8458 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !8459)
!8459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !8460)
!8460 = !{!8461, !8467}
!8461 = !DIDerivedType(tag: DW_TAG_member, scope: !8459, file: !233, line: 38, baseType: !8462, size: 32)
!8462 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8459, file: !233, line: 38, size: 32, elements: !8463)
!8463 = !{!8464, !8466}
!8464 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8462, file: !233, line: 39, baseType: !8465, size: 32)
!8465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8459, size: 32)
!8466 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8462, file: !233, line: 40, baseType: !8465, size: 32)
!8467 = !DIDerivedType(tag: DW_TAG_member, scope: !8459, file: !233, line: 42, baseType: !8468, size: 32, offset: 32)
!8468 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8459, file: !233, line: 42, size: 32, elements: !8469)
!8469 = !{!8470, !8471}
!8470 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8468, file: !233, line: 43, baseType: !8465, size: 32)
!8471 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8468, file: !233, line: 44, baseType: !8465, size: 32)
!8472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8473, size: 32)
!8473 = !DISubroutineType(types: !8474)
!8474 = !{!133, !256, !133}
!8475 = !{!8476, !8477, !8478}
!8476 = !DILocalVariable(name: "avail", arg: 1, scope: !8429, file: !1027, line: 560, type: !8432)
!8477 = !DILocalVariable(name: "lines", arg: 2, scope: !8429, file: !1027, line: 560, type: !8432)
!8478 = !DILocalVariable(name: "completion", arg: 3, scope: !8429, file: !1027, line: 561, type: !8472)
!8479 = !DILocation(line: 0, scope: !8429)
!8480 = !DILocation(line: 566, column: 1, scope: !8429)
!8481 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1207, file: !1207, line: 523, type: !1063, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8482)
!8482 = !{!8483, !8484, !8485, !8486, !8487}
!8483 = !DILocalVariable(name: "dev", arg: 1, scope: !8481, file: !1207, line: 523, type: !1065)
!8484 = !DILocalVariable(name: "pin", arg: 2, scope: !8481, file: !1207, line: 524, type: !1080)
!8485 = !DILocalVariable(name: "flags", arg: 3, scope: !8481, file: !1207, line: 524, type: !1081)
!8486 = !DILocalVariable(name: "err", scope: !8481, file: !1207, line: 526, type: !107)
!8487 = !DILocalVariable(name: "pincfg", scope: !8481, file: !1207, line: 527, type: !107)
!8488 = !DILocation(line: 0, scope: !8481)
!8489 = !DILocation(line: 527, column: 2, scope: !8481)
!8490 = !DILocation(line: 532, column: 8, scope: !8481)
!8491 = !DILocation(line: 533, column: 10, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8481, file: !1207, line: 533, column: 6)
!8493 = !DILocation(line: 533, column: 6, scope: !8481)
!8494 = !DILocation(line: 543, column: 13, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8481, file: !1207, line: 543, column: 6)
!8496 = !DILocation(line: 543, column: 28, scope: !8495)
!8497 = !DILocation(line: 543, column: 6, scope: !8481)
!8498 = !DILocation(line: 544, column: 14, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8500, file: !1207, line: 544, column: 7)
!8500 = distinct !DILexicalBlock(scope: !8495, file: !1207, line: 543, column: 34)
!8501 = !DILocation(line: 544, column: 39, scope: !8499)
!8502 = !DILocation(line: 544, column: 7, scope: !8500)
!8503 = !DILocation(line: 545, column: 38, scope: !8504)
!8504 = distinct !DILexicalBlock(scope: !8499, file: !1207, line: 544, column: 45)
!8505 = !DILocation(line: 545, column: 4, scope: !8504)
!8506 = !DILocation(line: 546, column: 3, scope: !8504)
!8507 = !DILocation(line: 546, column: 21, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8499, file: !1207, line: 546, column: 14)
!8509 = !DILocation(line: 546, column: 45, scope: !8508)
!8510 = !DILocation(line: 546, column: 14, scope: !8499)
!8511 = !DILocation(line: 547, column: 40, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8508, file: !1207, line: 546, column: 51)
!8513 = !DILocation(line: 547, column: 4, scope: !8512)
!8514 = !DILocation(line: 548, column: 3, scope: !8512)
!8515 = !DILocation(line: 551, column: 32, scope: !8481)
!8516 = !DILocation(line: 551, column: 37, scope: !8481)
!8517 = !DILocation(line: 551, column: 2, scope: !8481)
!8518 = !DILocation(line: 554, column: 6, scope: !8481)
!8519 = !DILocation(line: 562, column: 1, scope: !8481)
!8520 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1207, file: !1207, line: 410, type: !8521, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8523)
!8521 = !DISubroutineType(types: !8522)
!8522 = !{!107, !1065, !864}
!8523 = !{!8524, !8525, !8526, !8528}
!8524 = !DILocalVariable(name: "dev", arg: 1, scope: !8520, file: !1207, line: 410, type: !1065)
!8525 = !DILocalVariable(name: "value", arg: 2, scope: !8520, file: !1207, line: 410, type: !864)
!8526 = !DILocalVariable(name: "cfg", scope: !8520, file: !1207, line: 412, type: !8527)
!8527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 32)
!8528 = !DILocalVariable(name: "gpio", scope: !8520, file: !1207, line: 413, type: !1138)
!8529 = !DILocation(line: 0, scope: !8520)
!8530 = !DILocation(line: 412, column: 45, scope: !8520)
!8531 = !DILocation(line: 413, column: 44, scope: !8520)
!8532 = !DILocation(line: 415, column: 11, scope: !8520)
!8533 = !DILocation(line: 415, column: 9, scope: !8520)
!8534 = !DILocation(line: 417, column: 2, scope: !8520)
!8535 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1207, file: !1207, line: 420, type: !1090, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8536)
!8536 = !{!8537, !8538, !8539, !8540, !8541, !8542}
!8537 = !DILocalVariable(name: "dev", arg: 1, scope: !8535, file: !1207, line: 420, type: !1065)
!8538 = !DILocalVariable(name: "mask", arg: 2, scope: !8535, file: !1207, line: 421, type: !1092)
!8539 = !DILocalVariable(name: "value", arg: 3, scope: !8535, file: !1207, line: 422, type: !1087)
!8540 = !DILocalVariable(name: "cfg", scope: !8535, file: !1207, line: 424, type: !8527)
!8541 = !DILocalVariable(name: "gpio", scope: !8535, file: !1207, line: 425, type: !1138)
!8542 = !DILocalVariable(name: "port_value", scope: !8535, file: !1207, line: 426, type: !162)
!8543 = !DILocation(line: 0, scope: !8535)
!8544 = !DILocation(line: 424, column: 45, scope: !8535)
!8545 = !DILocation(line: 425, column: 44, scope: !8535)
!8546 = !DILocation(line: 430, column: 15, scope: !8535)
!8547 = !DILocation(line: 431, column: 46, scope: !8535)
!8548 = !DILocation(line: 431, column: 44, scope: !8535)
!8549 = !DILocation(line: 431, column: 61, scope: !8535)
!8550 = !DILocation(line: 431, column: 53, scope: !8535)
!8551 = !DILocation(line: 431, column: 2, scope: !8535)
!8552 = !DILocation(line: 435, column: 2, scope: !8535)
!8553 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1207, file: !1207, line: 438, type: !1095, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8554)
!8554 = !{!8555, !8556, !8557, !8558}
!8555 = !DILocalVariable(name: "dev", arg: 1, scope: !8553, file: !1207, line: 438, type: !1065)
!8556 = !DILocalVariable(name: "pins", arg: 2, scope: !8553, file: !1207, line: 439, type: !1092)
!8557 = !DILocalVariable(name: "cfg", scope: !8553, file: !1207, line: 441, type: !8527)
!8558 = !DILocalVariable(name: "gpio", scope: !8553, file: !1207, line: 442, type: !1138)
!8559 = !DILocation(line: 0, scope: !8553)
!8560 = !DILocation(line: 441, column: 45, scope: !8553)
!8561 = !DILocation(line: 442, column: 44, scope: !8553)
!8562 = !DILocation(line: 448, column: 2, scope: !8553)
!8563 = !DILocation(line: 450, column: 2, scope: !8553)
!8564 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1207, file: !1207, line: 453, type: !1095, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8565)
!8565 = !{!8566, !8567, !8568, !8569}
!8566 = !DILocalVariable(name: "dev", arg: 1, scope: !8564, file: !1207, line: 453, type: !1065)
!8567 = !DILocalVariable(name: "pins", arg: 2, scope: !8564, file: !1207, line: 454, type: !1092)
!8568 = !DILocalVariable(name: "cfg", scope: !8564, file: !1207, line: 456, type: !8527)
!8569 = !DILocalVariable(name: "gpio", scope: !8564, file: !1207, line: 457, type: !1138)
!8570 = !DILocation(line: 0, scope: !8564)
!8571 = !DILocation(line: 456, column: 45, scope: !8564)
!8572 = !DILocation(line: 457, column: 44, scope: !8564)
!8573 = !DILocation(line: 467, column: 2, scope: !8564)
!8574 = !DILocation(line: 470, column: 2, scope: !8564)
!8575 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1207, file: !1207, line: 473, type: !1095, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8576)
!8576 = !{!8577, !8578, !8579, !8580}
!8577 = !DILocalVariable(name: "dev", arg: 1, scope: !8575, file: !1207, line: 473, type: !1065)
!8578 = !DILocalVariable(name: "pins", arg: 2, scope: !8575, file: !1207, line: 474, type: !1092)
!8579 = !DILocalVariable(name: "cfg", scope: !8575, file: !1207, line: 476, type: !8527)
!8580 = !DILocalVariable(name: "gpio", scope: !8575, file: !1207, line: 477, type: !1138)
!8581 = !DILocation(line: 0, scope: !8575)
!8582 = !DILocation(line: 476, column: 45, scope: !8575)
!8583 = !DILocation(line: 477, column: 44, scope: !8575)
!8584 = !DILocation(line: 484, column: 2, scope: !8575)
!8585 = !DILocation(line: 487, column: 2, scope: !8575)
!8586 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1207, file: !1207, line: 594, type: !1101, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8587)
!8587 = !{!8588, !8589, !8590, !8591, !8592, !8593, !8595, !8596, !8597}
!8588 = !DILocalVariable(name: "dev", arg: 1, scope: !8586, file: !1207, line: 594, type: !1065)
!8589 = !DILocalVariable(name: "pin", arg: 2, scope: !8586, file: !1207, line: 595, type: !1080)
!8590 = !DILocalVariable(name: "mode", arg: 3, scope: !8586, file: !1207, line: 596, type: !1039)
!8591 = !DILocalVariable(name: "trig", arg: 4, scope: !8586, file: !1207, line: 597, type: !1045)
!8592 = !DILocalVariable(name: "cfg", scope: !8586, file: !1207, line: 599, type: !8527)
!8593 = !DILocalVariable(name: "data", scope: !8586, file: !1207, line: 600, type: !8594)
!8594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 32)
!8595 = !DILocalVariable(name: "edge", scope: !8586, file: !1207, line: 601, type: !107)
!8596 = !DILocalVariable(name: "err", scope: !8586, file: !1207, line: 602, type: !107)
!8597 = !DILabel(scope: !8586, name: "exit", file: !1207, line: 643)
!8598 = !DILocation(line: 0, scope: !8586)
!8599 = !DILocation(line: 599, column: 45, scope: !8586)
!8600 = !DILocation(line: 604, column: 6, scope: !8586)
!8601 = !DILocation(line: 605, column: 34, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8603, file: !1207, line: 605, column: 7)
!8603 = distinct !DILexicalBlock(scope: !8604, file: !1207, line: 604, column: 38)
!8604 = distinct !DILexicalBlock(scope: !8586, file: !1207, line: 604, column: 6)
!8605 = !DILocation(line: 605, column: 7, scope: !8602)
!8606 = !DILocation(line: 605, column: 47, scope: !8602)
!8607 = !DILocation(line: 605, column: 39, scope: !8602)
!8608 = !DILocation(line: 605, column: 7, scope: !8603)
!8609 = !DILocation(line: 606, column: 4, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8602, file: !1207, line: 605, column: 53)
!8611 = !DILocation(line: 607, column: 4, scope: !8610)
!8612 = !DILocation(line: 608, column: 4, scope: !8610)
!8613 = !DILocation(line: 609, column: 3, scope: !8610)
!8614 = !DILocation(line: 600, column: 38, scope: !8586)
!8615 = !DILocation(line: 620, column: 30, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8586, file: !1207, line: 620, column: 6)
!8617 = !DILocation(line: 620, column: 6, scope: !8616)
!8618 = !DILocation(line: 620, column: 57, scope: !8616)
!8619 = !DILocation(line: 620, column: 6, scope: !8586)
!8620 = !DILocation(line: 625, column: 29, scope: !8586)
!8621 = !DILocation(line: 625, column: 2, scope: !8586)
!8622 = !DILocation(line: 627, column: 2, scope: !8586)
!8623 = !DILocation(line: 630, column: 3, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8586, file: !1207, line: 627, column: 16)
!8625 = !DILocation(line: 633, column: 3, scope: !8624)
!8626 = !DILocation(line: 636, column: 3, scope: !8624)
!8627 = !DILocation(line: 639, column: 2, scope: !8586)
!8628 = !DILocation(line: 641, column: 2, scope: !8586)
!8629 = !DILocation(line: 643, column: 1, scope: !8586)
!8630 = !DILocation(line: 644, column: 2, scope: !8586)
!8631 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1207, file: !1207, line: 647, type: !1105, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8632)
!8632 = !{!8633, !8634, !8635, !8636}
!8633 = !DILocalVariable(name: "dev", arg: 1, scope: !8631, file: !1207, line: 647, type: !1065)
!8634 = !DILocalVariable(name: "callback", arg: 2, scope: !8631, file: !1207, line: 648, type: !1107)
!8635 = !DILocalVariable(name: "set", arg: 3, scope: !8631, file: !1207, line: 649, type: !136)
!8636 = !DILocalVariable(name: "data", scope: !8631, file: !1207, line: 651, type: !8594)
!8637 = !DILocation(line: 0, scope: !8631)
!8638 = !DILocation(line: 651, column: 38, scope: !8631)
!8639 = !DILocation(line: 653, column: 37, scope: !8631)
!8640 = !DILocation(line: 653, column: 9, scope: !8631)
!8641 = !DILocation(line: 653, column: 2, scope: !8631)
!8642 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8643, file: !8643, line: 38, type: !8644, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8647)
!8643 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8644 = !DISubroutineType(types: !8645)
!8645 = !{!107, !8646, !1107, !136}
!8646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 32)
!8647 = !{!8648, !8649, !8650}
!8648 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8642, file: !8643, line: 38, type: !8646)
!8649 = !DILocalVariable(name: "callback", arg: 2, scope: !8642, file: !8643, line: 39, type: !1107)
!8650 = !DILocalVariable(name: "set", arg: 3, scope: !8642, file: !8643, line: 40, type: !136)
!8651 = !DILocation(line: 0, scope: !8642)
!8652 = !DILocation(line: 45, column: 7, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8642, file: !8643, line: 45, column: 6)
!8654 = !DILocation(line: 45, column: 6, scope: !8642)
!8655 = !DILocation(line: 46, column: 56, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8657, file: !8643, line: 46, column: 7)
!8657 = distinct !DILexicalBlock(scope: !8653, file: !8643, line: 45, column: 38)
!8658 = !DILocation(line: 46, column: 8, scope: !8656)
!8659 = !DILocation(line: 46, column: 7, scope: !8657)
!8660 = !DILocation(line: 51, column: 13, scope: !8653)
!8661 = !DILocation(line: 56, column: 43, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8663, file: !8643, line: 55, column: 11)
!8663 = distinct !DILexicalBlock(scope: !8642, file: !8643, line: 55, column: 6)
!8664 = !DILocation(line: 56, column: 3, scope: !8662)
!8665 = !DILocation(line: 57, column: 2, scope: !8662)
!8666 = !DILocation(line: 60, column: 1, scope: !8642)
!8667 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1112, file: !1112, line: 261, type: !8668, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8670)
!8668 = !DISubroutineType(types: !8669)
!8669 = !{!136, !8646}
!8670 = !{!8671}
!8671 = !DILocalVariable(name: "list", arg: 1, scope: !8667, file: !1112, line: 261, type: !8646)
!8672 = !DILocation(line: 0, scope: !8667)
!8673 = !DILocation(line: 261, column: 1, scope: !8667)
!8674 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1112, file: !1112, line: 417, type: !8675, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8677)
!8675 = !DISubroutineType(types: !8676)
!8676 = !{!136, !8646, !1280}
!8677 = !{!8678, !8679, !8680, !8681}
!8678 = !DILocalVariable(name: "list", arg: 1, scope: !8674, file: !1112, line: 417, type: !8646)
!8679 = !DILocalVariable(name: "node", arg: 2, scope: !8674, file: !1112, line: 417, type: !1280)
!8680 = !DILocalVariable(name: "prev", scope: !8674, file: !1112, line: 417, type: !1280)
!8681 = !DILocalVariable(name: "test", scope: !8674, file: !1112, line: 417, type: !1280)
!8682 = !DILocation(line: 0, scope: !8674)
!8683 = !DILocation(line: 417, column: 1, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8674, file: !1112, line: 417, column: 1)
!8685 = !DILocation(line: 417, column: 1, scope: !8686)
!8686 = distinct !DILexicalBlock(scope: !8684, file: !1112, line: 417, column: 1)
!8687 = !DILocation(line: 417, column: 1, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8689, file: !1112, line: 417, column: 1)
!8689 = distinct !DILexicalBlock(scope: !8686, file: !1112, line: 417, column: 1)
!8690 = !DILocation(line: 417, column: 1, scope: !8689)
!8691 = distinct !{!8691, !8683, !8683}
!8692 = !DILocation(line: 417, column: 1, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8688, file: !1112, line: 417, column: 1)
!8694 = !DILocation(line: 417, column: 1, scope: !8674)
!8695 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1112, file: !1112, line: 298, type: !8696, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8698)
!8696 = !DISubroutineType(types: !8697)
!8697 = !{null, !8646, !1280}
!8698 = !{!8699, !8700}
!8699 = !DILocalVariable(name: "list", arg: 1, scope: !8695, file: !1112, line: 298, type: !8646)
!8700 = !DILocalVariable(name: "node", arg: 2, scope: !8695, file: !1112, line: 298, type: !1280)
!8701 = !DILocation(line: 0, scope: !8695)
!8702 = !DILocation(line: 298, column: 1, scope: !8695)
!8703 = !DILocation(line: 298, column: 1, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8695, file: !1112, line: 298, column: 1)
!8705 = !DILocation(line: 298, column: 1, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8704, file: !1112, line: 298, column: 1)
!8707 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1112, file: !1112, line: 231, type: !8708, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8710)
!8708 = !DISubroutineType(types: !8709)
!8709 = !{!1280, !8646}
!8710 = !{!8711}
!8711 = !DILocalVariable(name: "list", arg: 1, scope: !8707, file: !1112, line: 231, type: !8646)
!8712 = !DILocation(line: 0, scope: !8707)
!8713 = !DILocation(line: 233, column: 15, scope: !8707)
!8714 = !DILocation(line: 233, column: 2, scope: !8707)
!8715 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1112, file: !1112, line: 209, type: !8716, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8718)
!8716 = !DISubroutineType(types: !8717)
!8717 = !{null, !1280, !1280}
!8718 = !{!8719, !8720}
!8719 = !DILocalVariable(name: "parent", arg: 1, scope: !8715, file: !1112, line: 209, type: !1280)
!8720 = !DILocalVariable(name: "child", arg: 2, scope: !8715, file: !1112, line: 209, type: !1280)
!8721 = !DILocation(line: 0, scope: !8715)
!8722 = !DILocation(line: 211, column: 10, scope: !8715)
!8723 = !DILocation(line: 211, column: 15, scope: !8715)
!8724 = !DILocation(line: 212, column: 1, scope: !8715)
!8725 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1112, file: !1112, line: 214, type: !8696, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8726)
!8726 = !{!8727, !8728}
!8727 = !DILocalVariable(name: "list", arg: 1, scope: !8725, file: !1112, line: 214, type: !8646)
!8728 = !DILocalVariable(name: "node", arg: 2, scope: !8725, file: !1112, line: 214, type: !1280)
!8729 = !DILocation(line: 0, scope: !8725)
!8730 = !DILocation(line: 216, column: 8, scope: !8725)
!8731 = !DILocation(line: 216, column: 13, scope: !8725)
!8732 = !DILocation(line: 217, column: 1, scope: !8725)
!8733 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1112, file: !1112, line: 243, type: !8708, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8734)
!8734 = !{!8735}
!8735 = !DILocalVariable(name: "list", arg: 1, scope: !8733, file: !1112, line: 243, type: !8646)
!8736 = !DILocation(line: 0, scope: !8733)
!8737 = !DILocation(line: 245, column: 15, scope: !8733)
!8738 = !DILocation(line: 245, column: 2, scope: !8733)
!8739 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1112, file: !1112, line: 219, type: !8696, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8740)
!8740 = !{!8741, !8742}
!8741 = !DILocalVariable(name: "list", arg: 1, scope: !8739, file: !1112, line: 219, type: !8646)
!8742 = !DILocalVariable(name: "node", arg: 2, scope: !8739, file: !1112, line: 219, type: !1280)
!8743 = !DILocation(line: 0, scope: !8739)
!8744 = !DILocation(line: 221, column: 8, scope: !8739)
!8745 = !DILocation(line: 221, column: 13, scope: !8739)
!8746 = !DILocation(line: 222, column: 1, scope: !8739)
!8747 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1112, file: !1112, line: 401, type: !8748, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8750)
!8748 = !DISubroutineType(types: !8749)
!8749 = !{null, !8646, !1280, !1280}
!8750 = !{!8751, !8752, !8753}
!8751 = !DILocalVariable(name: "list", arg: 1, scope: !8747, file: !1112, line: 401, type: !8646)
!8752 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8747, file: !1112, line: 401, type: !1280)
!8753 = !DILocalVariable(name: "node", arg: 3, scope: !8747, file: !1112, line: 401, type: !1280)
!8754 = !DILocation(line: 0, scope: !8747)
!8755 = !DILocation(line: 401, column: 1, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8747, file: !1112, line: 401, column: 1)
!8757 = !DILocation(line: 0, scope: !8756)
!8758 = !DILocation(line: 401, column: 1, scope: !8747)
!8759 = !DILocation(line: 401, column: 1, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8756, file: !1112, line: 401, column: 1)
!8761 = !DILocation(line: 401, column: 1, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8760, file: !1112, line: 401, column: 1)
!8763 = !DILocation(line: 401, column: 1, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8762, file: !1112, line: 401, column: 1)
!8765 = !DILocation(line: 401, column: 1, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8756, file: !1112, line: 401, column: 1)
!8767 = !DILocation(line: 401, column: 1, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8766, file: !1112, line: 401, column: 1)
!8769 = !DILocation(line: 401, column: 1, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8768, file: !1112, line: 401, column: 1)
!8771 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1112, file: !1112, line: 285, type: !8772, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8774)
!8772 = !DISubroutineType(types: !8773)
!8773 = !{!1280, !1280}
!8774 = !{!8775}
!8775 = !DILocalVariable(name: "node", arg: 1, scope: !8771, file: !1112, line: 285, type: !1280)
!8776 = !DILocation(line: 0, scope: !8771)
!8777 = !DILocation(line: 285, column: 1, scope: !8771)
!8778 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1112, file: !1112, line: 274, type: !8772, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8779)
!8779 = !{!8780}
!8780 = !DILocalVariable(name: "node", arg: 1, scope: !8778, file: !1112, line: 274, type: !1280)
!8781 = !DILocation(line: 0, scope: !8778)
!8782 = !DILocation(line: 274, column: 1, scope: !8778)
!8783 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1112, file: !1112, line: 204, type: !8772, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8784)
!8784 = !{!8785}
!8785 = !DILocalVariable(name: "node", arg: 1, scope: !8783, file: !1112, line: 204, type: !1280)
!8786 = !DILocation(line: 0, scope: !8783)
!8787 = !DILocation(line: 206, column: 15, scope: !8783)
!8788 = !DILocation(line: 206, column: 2, scope: !8783)
!8789 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1207, file: !1207, line: 342, type: !270, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8790)
!8790 = !{!8791, !8792, !8793}
!8791 = !DILocalVariable(name: "pin", arg: 1, scope: !8789, file: !1207, line: 342, type: !107)
!8792 = !DILocalVariable(name: "line", scope: !8789, file: !1207, line: 344, type: !162)
!8793 = !DILocalVariable(name: "port", scope: !8789, file: !1207, line: 345, type: !107)
!8794 = !DILocation(line: 0, scope: !8789)
!8795 = !DILocation(line: 344, column: 18, scope: !8789)
!8796 = !{i32 983040, i32 0}
!8797 = !DILocation(line: 356, column: 9, scope: !8789)
!8798 = !DILocation(line: 370, column: 2, scope: !8789)
!8799 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1207, file: !1207, line: 37, type: !719, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8800)
!8800 = !{!8801, !8802, !8803}
!8801 = !DILocalVariable(name: "line", arg: 1, scope: !8799, file: !1207, line: 37, type: !107)
!8802 = !DILocalVariable(name: "arg", arg: 2, scope: !8799, file: !1207, line: 37, type: !102)
!8803 = !DILocalVariable(name: "data", scope: !8799, file: !1207, line: 39, type: !8594)
!8804 = !DILocation(line: 0, scope: !8799)
!8805 = !DILocation(line: 41, column: 29, scope: !8799)
!8806 = !DILocation(line: 41, column: 39, scope: !8799)
!8807 = !DILocation(line: 41, column: 44, scope: !8799)
!8808 = !DILocation(line: 41, column: 2, scope: !8799)
!8809 = !DILocation(line: 42, column: 1, scope: !8799)
!8810 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1207, file: !1207, line: 376, type: !8811, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8813)
!8811 = !DISubroutineType(types: !8812)
!8812 = !{!107, !107, !107}
!8813 = !{!8814, !8815, !8816, !8818, !8819}
!8814 = !DILocalVariable(name: "port", arg: 1, scope: !8810, file: !1207, line: 376, type: !107)
!8815 = !DILocalVariable(name: "pin", arg: 2, scope: !8810, file: !1207, line: 376, type: !107)
!8816 = !DILocalVariable(name: "clk", scope: !8810, file: !1207, line: 386, type: !8817)
!8817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1065)
!8818 = !DILocalVariable(name: "pclken", scope: !8810, file: !1207, line: 387, type: !1323)
!8819 = !DILocalVariable(name: "ret", scope: !8810, file: !1207, line: 396, type: !107)
!8820 = !DILocation(line: 0, scope: !8810)
!8821 = !DILocation(line: 387, column: 2, scope: !8810)
!8822 = !DILocation(line: 387, column: 22, scope: !8810)
!8823 = !DILocation(line: 399, column: 8, scope: !8810)
!8824 = !DILocation(line: 400, column: 10, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8810, file: !1207, line: 400, column: 6)
!8826 = !DILocation(line: 400, column: 6, scope: !8810)
!8827 = !DILocation(line: 405, column: 2, scope: !8810)
!8828 = !DILocation(line: 407, column: 2, scope: !8810)
!8829 = !DILocation(line: 408, column: 1, scope: !8810)
!8830 = distinct !DISubprogram(name: "clock_control_on", scope: !812, file: !812, line: 123, type: !1172, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8831)
!8831 = !{!8832, !8833, !8834}
!8832 = !DILocalVariable(name: "dev", arg: 1, scope: !8830, file: !812, line: 123, type: !1065)
!8833 = !DILocalVariable(name: "sys", arg: 2, scope: !8830, file: !812, line: 124, type: !908)
!8834 = !DILocalVariable(name: "api", scope: !8830, file: !812, line: 126, type: !1165)
!8835 = !DILocation(line: 0, scope: !8830)
!8836 = !DILocation(line: 127, column: 49, scope: !8830)
!8837 = !DILocation(line: 129, column: 14, scope: !8830)
!8838 = !DILocation(line: 129, column: 9, scope: !8830)
!8839 = !DILocation(line: 129, column: 2, scope: !8830)
!8840 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1207, file: !1207, line: 311, type: !7960, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8841)
!8841 = !{!8842, !8843, !8844}
!8842 = !DILocalVariable(name: "port", arg: 1, scope: !8840, file: !1207, line: 311, type: !107)
!8843 = !DILocalVariable(name: "pin", arg: 2, scope: !8840, file: !1207, line: 311, type: !107)
!8844 = !DILocalVariable(name: "line", scope: !8840, file: !1207, line: 313, type: !162)
!8845 = !DILocation(line: 0, scope: !8840)
!8846 = !DILocation(line: 313, column: 18, scope: !8840)
!8847 = !DILocation(line: 337, column: 2, scope: !8840)
!8848 = !DILocation(line: 340, column: 1, scope: !8840)
!8849 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1207, file: !1207, line: 295, type: !8850, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8852)
!8850 = !DISubroutineType(types: !8851)
!8851 = !{!162, !107}
!8852 = !{!8853}
!8853 = !DILocalVariable(name: "pin", arg: 1, scope: !8849, file: !1207, line: 295, type: !107)
!8854 = !DILocation(line: 0, scope: !8849)
!8855 = !DILocation(line: 307, column: 46, scope: !8849)
!8856 = !DILocation(line: 307, column: 27, scope: !8849)
!8857 = !DILocation(line: 307, column: 32, scope: !8849)
!8858 = !DILocation(line: 307, column: 14, scope: !8849)
!8859 = !DILocation(line: 307, column: 39, scope: !8849)
!8860 = !DILocation(line: 307, column: 2, scope: !8849)
!8861 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6014, file: !6014, line: 671, type: !8862, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8864)
!8862 = !DISubroutineType(types: !8863)
!8863 = !{null, !162, !162}
!8864 = !{!8865, !8866}
!8865 = !DILocalVariable(name: "Port", arg: 1, scope: !8861, file: !6014, line: 671, type: !162)
!8866 = !DILocalVariable(name: "Line", arg: 2, scope: !8861, file: !6014, line: 671, type: !162)
!8867 = !DILocation(line: 0, scope: !8861)
!8868 = !DILocation(line: 673, column: 3, scope: !8861)
!8869 = !DILocalVariable(name: "value", arg: 1, scope: !8870, file: !6167, line: 373, type: !162)
!8870 = distinct !DISubprogram(name: "__RBIT", scope: !6167, file: !6167, line: 373, type: !7174, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8871)
!8871 = !{!8869, !8872}
!8872 = !DILocalVariable(name: "result", scope: !8870, file: !6167, line: 375, type: !162)
!8873 = !DILocation(line: 0, scope: !8870, inlinedAt: !8874)
!8874 = distinct !DILocation(line: 673, column: 3, scope: !8861)
!8875 = !DILocation(line: 380, column: 4, scope: !8870, inlinedAt: !8874)
!8876 = !{i64 3730459}
!8877 = !DILocalVariable(name: "value", arg: 1, scope: !8878, file: !6167, line: 403, type: !162)
!8878 = distinct !DISubprogram(name: "__CLZ", scope: !6167, file: !6167, line: 403, type: !8879, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8881)
!8879 = !DISubroutineType(types: !8880)
!8880 = !{!133, !162}
!8881 = !{!8877}
!8882 = !DILocation(line: 0, scope: !8878, inlinedAt: !8883)
!8883 = distinct !DILocation(line: 673, column: 3, scope: !8861)
!8884 = !DILocation(line: 414, column: 7, scope: !8878, inlinedAt: !8883)
!8885 = !DILocation(line: 674, column: 1, scope: !8861)
!8886 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8643, file: !8643, line: 69, type: !8887, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8889)
!8887 = !DISubroutineType(types: !8888)
!8888 = !{null, !8646, !1065, !162}
!8889 = !{!8890, !8891, !8892, !8893, !8894}
!8890 = !DILocalVariable(name: "list", arg: 1, scope: !8886, file: !8643, line: 69, type: !8646)
!8891 = !DILocalVariable(name: "port", arg: 2, scope: !8886, file: !8643, line: 70, type: !1065)
!8892 = !DILocalVariable(name: "pins", arg: 3, scope: !8886, file: !8643, line: 71, type: !162)
!8893 = !DILocalVariable(name: "cb", scope: !8886, file: !8643, line: 73, type: !1107)
!8894 = !DILocalVariable(name: "tmp", scope: !8886, file: !8643, line: 73, type: !1107)
!8895 = !DILocation(line: 0, scope: !8886)
!8896 = !DILocation(line: 75, column: 2, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8886, file: !8643, line: 75, column: 2)
!8898 = !DILocation(line: 0, scope: !8897)
!8899 = !DILocation(line: 76, column: 11, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8901, file: !8643, line: 76, column: 7)
!8901 = distinct !DILexicalBlock(scope: !8902, file: !8643, line: 75, column: 57)
!8902 = distinct !DILexicalBlock(scope: !8897, file: !8643, line: 75, column: 2)
!8903 = !DILocation(line: 76, column: 20, scope: !8900)
!8904 = !DILocation(line: 76, column: 7, scope: !8901)
!8905 = !DILocation(line: 78, column: 8, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8900, file: !8643, line: 76, column: 28)
!8907 = !DILocation(line: 78, column: 4, scope: !8906)
!8908 = !DILocation(line: 79, column: 3, scope: !8906)
!8909 = !DILocation(line: 75, column: 2, scope: !8902)
!8910 = !DILocation(line: 81, column: 1, scope: !8886)
!8911 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6014, file: !6014, line: 710, type: !7174, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8912)
!8912 = !{!8913}
!8913 = !DILocalVariable(name: "Line", arg: 1, scope: !8911, file: !6014, line: 710, type: !162)
!8914 = !DILocation(line: 0, scope: !8911)
!8915 = !DILocation(line: 712, column: 21, scope: !8911)
!8916 = !DILocation(line: 0, scope: !8870, inlinedAt: !8917)
!8917 = distinct !DILocation(line: 712, column: 76, scope: !8911)
!8918 = !DILocation(line: 380, column: 4, scope: !8870, inlinedAt: !8917)
!8919 = !DILocation(line: 0, scope: !8878, inlinedAt: !8920)
!8920 = distinct !DILocation(line: 712, column: 76, scope: !8911)
!8921 = !DILocation(line: 414, column: 7, scope: !8878, inlinedAt: !8920)
!8922 = !DILocation(line: 712, column: 73, scope: !8911)
!8923 = !DILocation(line: 712, column: 3, scope: !8911)
!8924 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !8925, file: !8925, line: 910, type: !8926, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8928)
!8925 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8926 = !DISubroutineType(types: !8927)
!8927 = !{null, !1138, !162}
!8928 = !{!8929, !8930}
!8929 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8924, file: !8925, line: 910, type: !1138)
!8930 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8924, file: !8925, line: 910, type: !162)
!8931 = !DILocation(line: 0, scope: !8924)
!8932 = !DILocation(line: 912, column: 3, scope: !8924)
!8933 = !DILocation(line: 913, column: 1, scope: !8924)
!8934 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !8925, file: !8925, line: 823, type: !8935, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8937)
!8935 = !DISubroutineType(types: !8936)
!8936 = !{!162, !1138}
!8937 = !{!8938}
!8938 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8934, file: !8925, line: 823, type: !1138)
!8939 = !DILocation(line: 0, scope: !8934)
!8940 = !DILocation(line: 825, column: 21, scope: !8934)
!8941 = !DILocation(line: 825, column: 3, scope: !8934)
!8942 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !8925, file: !8925, line: 812, type: !8926, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8943)
!8943 = !{!8944, !8945}
!8944 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8942, file: !8925, line: 812, type: !1138)
!8945 = !DILocalVariable(name: "PortValue", arg: 2, scope: !8942, file: !8925, line: 812, type: !162)
!8946 = !DILocation(line: 0, scope: !8942)
!8947 = !DILocation(line: 814, column: 3, scope: !8942)
!8948 = !DILocation(line: 815, column: 1, scope: !8942)
!8949 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !8925, file: !8925, line: 771, type: !8935, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8950)
!8950 = !{!8951}
!8951 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8949, file: !8925, line: 771, type: !1138)
!8952 = !DILocation(line: 0, scope: !8949)
!8953 = !DILocation(line: 773, column: 21, scope: !8949)
!8954 = !DILocation(line: 773, column: 3, scope: !8949)
!8955 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1207, file: !1207, line: 47, type: !8956, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !8958)
!8956 = !DISubroutineType(types: !8957)
!8957 = !{!107, !1081, !2575}
!8958 = !{!8959, !8960}
!8959 = !DILocalVariable(name: "flags", arg: 1, scope: !8955, file: !1207, line: 47, type: !1081)
!8960 = !DILocalVariable(name: "pincfg", arg: 2, scope: !8955, file: !1207, line: 47, type: !2575)
!8961 = !DILocation(line: 0, scope: !8955)
!8962 = !DILocation(line: 50, column: 13, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8955, file: !1207, line: 50, column: 6)
!8964 = !DILocation(line: 50, column: 28, scope: !8963)
!8965 = !DILocation(line: 50, column: 6, scope: !8955)
!8966 = !DILocation(line: 53, column: 11, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8963, file: !1207, line: 50, column: 34)
!8968 = !DILocation(line: 55, column: 14, scope: !8969)
!8969 = distinct !DILexicalBlock(scope: !8967, file: !1207, line: 55, column: 7)
!8970 = !DILocation(line: 55, column: 35, scope: !8969)
!8971 = !DILocation(line: 55, column: 7, scope: !8967)
!8972 = !DILocation(line: 56, column: 14, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8974, file: !1207, line: 56, column: 8)
!8974 = distinct !DILexicalBlock(scope: !8969, file: !1207, line: 55, column: 41)
!8975 = !DILocation(line: 56, column: 8, scope: !8974)
!8976 = !DILocation(line: 0, scope: !8969)
!8977 = !DILocation(line: 66, column: 14, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8967, file: !1207, line: 66, column: 7)
!8979 = !DILocation(line: 66, column: 30, scope: !8978)
!8980 = !DILocation(line: 66, column: 7, scope: !8967)
!8981 = !DILocation(line: 67, column: 12, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8978, file: !1207, line: 66, column: 36)
!8983 = !DILocation(line: 68, column: 3, scope: !8982)
!8984 = !DILocation(line: 68, column: 21, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8978, file: !1207, line: 68, column: 14)
!8986 = !DILocation(line: 68, column: 39, scope: !8985)
!8987 = !DILocation(line: 68, column: 14, scope: !8978)
!8988 = !DILocation(line: 69, column: 12, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8985, file: !1207, line: 68, column: 45)
!8990 = !DILocation(line: 70, column: 3, scope: !8989)
!8991 = !DILocation(line: 72, column: 21, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8963, file: !1207, line: 72, column: 14)
!8993 = !DILocation(line: 72, column: 35, scope: !8992)
!8994 = !DILocation(line: 72, column: 14, scope: !8963)
!8995 = !DILocation(line: 77, column: 14, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8997, file: !1207, line: 77, column: 7)
!8997 = distinct !DILexicalBlock(scope: !8992, file: !1207, line: 72, column: 41)
!8998 = !DILocation(line: 77, column: 30, scope: !8996)
!8999 = !DILocation(line: 77, column: 7, scope: !8997)
!9000 = !DILocation(line: 0, scope: !8963)
!9001 = !DILocation(line: 90, column: 1, scope: !8955)
!9002 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1207, file: !1207, line: 157, type: !9003, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9005)
!9003 = !DISubroutineType(types: !9004)
!9004 = !{null, !1065, !107, !107, !107}
!9005 = !{!9006, !9007, !9008, !9009, !9010, !9011, !9012, !9013, !9014, !9015, !9016}
!9006 = !DILocalVariable(name: "dev", arg: 1, scope: !9002, file: !1207, line: 157, type: !1065)
!9007 = !DILocalVariable(name: "pin", arg: 2, scope: !9002, file: !1207, line: 157, type: !107)
!9008 = !DILocalVariable(name: "conf", arg: 3, scope: !9002, file: !1207, line: 158, type: !107)
!9009 = !DILocalVariable(name: "func", arg: 4, scope: !9002, file: !1207, line: 158, type: !107)
!9010 = !DILocalVariable(name: "cfg", scope: !9002, file: !1207, line: 160, type: !8527)
!9011 = !DILocalVariable(name: "gpio", scope: !9002, file: !1207, line: 161, type: !1138)
!9012 = !DILocalVariable(name: "pin_ll", scope: !9002, file: !1207, line: 163, type: !107)
!9013 = !DILocalVariable(name: "mode", scope: !9002, file: !1207, line: 227, type: !32)
!9014 = !DILocalVariable(name: "otype", scope: !9002, file: !1207, line: 227, type: !32)
!9015 = !DILocalVariable(name: "ospeed", scope: !9002, file: !1207, line: 227, type: !32)
!9016 = !DILocalVariable(name: "pupd", scope: !9002, file: !1207, line: 227, type: !32)
!9017 = !DILocation(line: 0, scope: !9002)
!9018 = !DILocation(line: 160, column: 45, scope: !9002)
!9019 = !DILocation(line: 161, column: 44, scope: !9002)
!9020 = !DILocation(line: 163, column: 15, scope: !9002)
!9021 = !DILocation(line: 229, column: 14, scope: !9002)
!9022 = !DILocation(line: 246, column: 47, scope: !9002)
!9023 = !DILocation(line: 246, column: 2, scope: !9002)
!9024 = !DILocation(line: 248, column: 43, scope: !9002)
!9025 = !DILocation(line: 248, column: 2, scope: !9002)
!9026 = !DILocation(line: 250, column: 40, scope: !9002)
!9027 = !DILocation(line: 250, column: 2, scope: !9002)
!9028 = !DILocation(line: 252, column: 11, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9002, file: !1207, line: 252, column: 6)
!9030 = !DILocation(line: 252, column: 6, scope: !9002)
!9031 = !DILocation(line: 253, column: 11, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9033, file: !1207, line: 253, column: 7)
!9033 = distinct !DILexicalBlock(scope: !9029, file: !1207, line: 252, column: 36)
!9034 = !DILocation(line: 253, column: 7, scope: !9033)
!9035 = !DILocation(line: 254, column: 4, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9032, file: !1207, line: 253, column: 16)
!9037 = !DILocation(line: 255, column: 3, scope: !9036)
!9038 = !DILocation(line: 256, column: 4, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9032, file: !1207, line: 255, column: 10)
!9040 = !DILocation(line: 260, column: 40, scope: !9002)
!9041 = !DILocation(line: 260, column: 2, scope: !9002)
!9042 = !DILocation(line: 265, column: 1, scope: !9002)
!9043 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1207, file: !1207, line: 137, type: !8850, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9044)
!9044 = !{!9045, !9046}
!9045 = !DILocalVariable(name: "pin", arg: 1, scope: !9043, file: !1207, line: 137, type: !107)
!9046 = !DILocalVariable(name: "pinval", scope: !9043, file: !1207, line: 139, type: !162)
!9047 = !DILocation(line: 0, scope: !9043)
!9048 = !DILocation(line: 149, column: 13, scope: !9043)
!9049 = !DILocation(line: 151, column: 2, scope: !9043)
!9050 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !8925, file: !8925, line: 342, type: !9051, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9053)
!9051 = !DISubroutineType(types: !9052)
!9052 = !{null, !1138, !162, !162}
!9053 = !{!9054, !9055, !9056}
!9054 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9050, file: !8925, line: 342, type: !1138)
!9055 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9050, file: !8925, line: 342, type: !162)
!9056 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9050, file: !8925, line: 342, type: !162)
!9057 = !DILocation(line: 0, scope: !9050)
!9058 = !DILocation(line: 344, column: 3, scope: !9050)
!9059 = !DILocation(line: 345, column: 1, scope: !9050)
!9060 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !8925, file: !8925, line: 413, type: !9051, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9061)
!9061 = !{!9062, !9063, !9064}
!9062 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9060, file: !8925, line: 413, type: !1138)
!9063 = !DILocalVariable(name: "Pin", arg: 2, scope: !9060, file: !8925, line: 413, type: !162)
!9064 = !DILocalVariable(name: "Speed", arg: 3, scope: !9060, file: !8925, line: 413, type: !162)
!9065 = !DILocation(line: 0, scope: !9060)
!9066 = !DILocation(line: 415, column: 3, scope: !9060)
!9067 = !DILocation(line: 0, scope: !8870, inlinedAt: !9068)
!9068 = distinct !DILocation(line: 415, column: 3, scope: !9060)
!9069 = !DILocation(line: 380, column: 4, scope: !8870, inlinedAt: !9068)
!9070 = !DILocation(line: 0, scope: !8878, inlinedAt: !9071)
!9071 = distinct !DILocation(line: 415, column: 3, scope: !9060)
!9072 = !DILocation(line: 414, column: 7, scope: !8878, inlinedAt: !9071)
!9073 = !DILocation(line: 0, scope: !8870, inlinedAt: !9074)
!9074 = distinct !DILocation(line: 415, column: 3, scope: !9060)
!9075 = !DILocation(line: 0, scope: !8878, inlinedAt: !9076)
!9076 = distinct !DILocation(line: 415, column: 3, scope: !9060)
!9077 = !DILocation(line: 417, column: 1, scope: !9060)
!9078 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !8925, file: !8925, line: 484, type: !9051, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9079)
!9079 = !{!9080, !9081, !9082}
!9080 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9078, file: !8925, line: 484, type: !1138)
!9081 = !DILocalVariable(name: "Pin", arg: 2, scope: !9078, file: !8925, line: 484, type: !162)
!9082 = !DILocalVariable(name: "Pull", arg: 3, scope: !9078, file: !8925, line: 484, type: !162)
!9083 = !DILocation(line: 0, scope: !9078)
!9084 = !DILocation(line: 486, column: 3, scope: !9078)
!9085 = !DILocation(line: 0, scope: !8870, inlinedAt: !9086)
!9086 = distinct !DILocation(line: 486, column: 3, scope: !9078)
!9087 = !DILocation(line: 380, column: 4, scope: !8870, inlinedAt: !9086)
!9088 = !DILocation(line: 0, scope: !8878, inlinedAt: !9089)
!9089 = distinct !DILocation(line: 486, column: 3, scope: !9078)
!9090 = !DILocation(line: 414, column: 7, scope: !8878, inlinedAt: !9089)
!9091 = !DILocation(line: 0, scope: !8870, inlinedAt: !9092)
!9092 = distinct !DILocation(line: 486, column: 3, scope: !9078)
!9093 = !DILocation(line: 0, scope: !8878, inlinedAt: !9094)
!9094 = distinct !DILocation(line: 486, column: 3, scope: !9078)
!9095 = !DILocation(line: 487, column: 1, scope: !9078)
!9096 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !8925, file: !8925, line: 556, type: !9051, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9097)
!9097 = !{!9098, !9099, !9100}
!9098 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9096, file: !8925, line: 556, type: !1138)
!9099 = !DILocalVariable(name: "Pin", arg: 2, scope: !9096, file: !8925, line: 556, type: !162)
!9100 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9096, file: !8925, line: 556, type: !162)
!9101 = !DILocation(line: 0, scope: !9096)
!9102 = !DILocation(line: 558, column: 3, scope: !9096)
!9103 = !DILocation(line: 0, scope: !8870, inlinedAt: !9104)
!9104 = distinct !DILocation(line: 558, column: 3, scope: !9096)
!9105 = !DILocation(line: 380, column: 4, scope: !8870, inlinedAt: !9104)
!9106 = !DILocation(line: 0, scope: !8878, inlinedAt: !9107)
!9107 = distinct !DILocation(line: 558, column: 3, scope: !9096)
!9108 = !DILocation(line: 414, column: 7, scope: !8878, inlinedAt: !9107)
!9109 = !DILocation(line: 0, scope: !8870, inlinedAt: !9110)
!9110 = distinct !DILocation(line: 558, column: 3, scope: !9096)
!9111 = !DILocation(line: 0, scope: !8878, inlinedAt: !9112)
!9112 = distinct !DILocation(line: 558, column: 3, scope: !9096)
!9113 = !DILocation(line: 560, column: 1, scope: !9096)
!9114 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !8925, file: !8925, line: 633, type: !9051, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9115)
!9115 = !{!9116, !9117, !9118}
!9116 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9114, file: !8925, line: 633, type: !1138)
!9117 = !DILocalVariable(name: "Pin", arg: 2, scope: !9114, file: !8925, line: 633, type: !162)
!9118 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9114, file: !8925, line: 633, type: !162)
!9119 = !DILocation(line: 0, scope: !9114)
!9120 = !DILocation(line: 635, column: 3, scope: !9114)
!9121 = !DILocation(line: 0, scope: !8870, inlinedAt: !9122)
!9122 = distinct !DILocation(line: 635, column: 3, scope: !9114)
!9123 = !DILocation(line: 380, column: 4, scope: !8870, inlinedAt: !9122)
!9124 = !DILocation(line: 0, scope: !8878, inlinedAt: !9125)
!9125 = distinct !DILocation(line: 635, column: 3, scope: !9114)
!9126 = !DILocation(line: 414, column: 7, scope: !8878, inlinedAt: !9125)
!9127 = !DILocation(line: 0, scope: !8870, inlinedAt: !9128)
!9128 = distinct !DILocation(line: 635, column: 3, scope: !9114)
!9129 = !DILocation(line: 0, scope: !8878, inlinedAt: !9130)
!9130 = distinct !DILocation(line: 635, column: 3, scope: !9114)
!9131 = !DILocation(line: 637, column: 1, scope: !9114)
!9132 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !8925, file: !8925, line: 273, type: !9051, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9133)
!9133 = !{!9134, !9135, !9136}
!9134 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9132, file: !8925, line: 273, type: !1138)
!9135 = !DILocalVariable(name: "Pin", arg: 2, scope: !9132, file: !8925, line: 273, type: !162)
!9136 = !DILocalVariable(name: "Mode", arg: 3, scope: !9132, file: !8925, line: 273, type: !162)
!9137 = !DILocation(line: 0, scope: !9132)
!9138 = !DILocation(line: 275, column: 3, scope: !9132)
!9139 = !DILocation(line: 0, scope: !8870, inlinedAt: !9140)
!9140 = distinct !DILocation(line: 275, column: 3, scope: !9132)
!9141 = !DILocation(line: 380, column: 4, scope: !8870, inlinedAt: !9140)
!9142 = !DILocation(line: 0, scope: !8878, inlinedAt: !9143)
!9143 = distinct !DILocation(line: 275, column: 3, scope: !9132)
!9144 = !DILocation(line: 414, column: 7, scope: !8878, inlinedAt: !9143)
!9145 = !DILocation(line: 0, scope: !8870, inlinedAt: !9146)
!9146 = distinct !DILocation(line: 275, column: 3, scope: !9132)
!9147 = !DILocation(line: 0, scope: !8878, inlinedAt: !9148)
!9148 = distinct !DILocation(line: 275, column: 3, scope: !9132)
!9149 = !DILocation(line: 276, column: 1, scope: !9132)
!9150 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1207, file: !1207, line: 698, type: !1220, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9151)
!9151 = !{!9152, !9153, !9154}
!9152 = !DILocalVariable(name: "dev", arg: 1, scope: !9150, file: !1207, line: 698, type: !1065)
!9153 = !DILocalVariable(name: "data", scope: !9150, file: !1207, line: 700, type: !8594)
!9154 = !DILocalVariable(name: "ret", scope: !9150, file: !1207, line: 701, type: !107)
!9155 = !DILocation(line: 0, scope: !9150)
!9156 = !DILocation(line: 700, column: 38, scope: !9150)
!9157 = !DILocation(line: 703, column: 8, scope: !9150)
!9158 = !DILocation(line: 703, column: 12, scope: !9150)
!9159 = !DILocation(line: 705, column: 7, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9150, file: !1207, line: 705, column: 6)
!9161 = !DILocation(line: 705, column: 6, scope: !9150)
!9162 = !DILocation(line: 722, column: 8, scope: !9150)
!9163 = !DILocation(line: 723, column: 10, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9150, file: !1207, line: 723, column: 6)
!9165 = !DILocation(line: 723, column: 6, scope: !9150)
!9166 = !DILocation(line: 731, column: 1, scope: !9150)
!9167 = distinct !DISubprogram(name: "device_is_ready", scope: !3494, file: !3494, line: 47, type: !9168, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9170)
!9168 = !DISubroutineType(types: !9169)
!9169 = !{!136, !1065}
!9170 = !{!9171}
!9171 = !DILocalVariable(name: "dev", arg: 1, scope: !9167, file: !3494, line: 47, type: !1065)
!9172 = !DILocation(line: 0, scope: !9167)
!9173 = !DILocation(line: 55, column: 2, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9167, file: !3494, line: 55, column: 2)
!9175 = !{i64 2155277584}
!9176 = !DILocation(line: 56, column: 9, scope: !9167)
!9177 = !DILocation(line: 56, column: 2, scope: !9167)
!9178 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1207, file: !1207, line: 270, type: !9179, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9181)
!9179 = !DISubroutineType(types: !9180)
!9180 = !{!107, !1065, !136}
!9181 = !{!9182, !9183, !9184, !9185, !9186}
!9182 = !DILocalVariable(name: "dev", arg: 1, scope: !9178, file: !1207, line: 270, type: !1065)
!9183 = !DILocalVariable(name: "on", arg: 2, scope: !9178, file: !1207, line: 270, type: !136)
!9184 = !DILocalVariable(name: "cfg", scope: !9178, file: !1207, line: 272, type: !8527)
!9185 = !DILocalVariable(name: "ret", scope: !9178, file: !1207, line: 273, type: !107)
!9186 = !DILocalVariable(name: "clk", scope: !9178, file: !1207, line: 278, type: !8817)
!9187 = !DILocation(line: 0, scope: !9178)
!9188 = !DILocation(line: 272, column: 45, scope: !9178)
!9189 = !DILocation(line: 282, column: 38, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9191, file: !1207, line: 280, column: 10)
!9191 = distinct !DILexicalBlock(scope: !9178, file: !1207, line: 280, column: 6)
!9192 = !DILocation(line: 282, column: 6, scope: !9190)
!9193 = !DILocation(line: 281, column: 9, scope: !9190)
!9194 = !DILocation(line: 293, column: 1, scope: !9178)
!9195 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !9168, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9196)
!9196 = !{!9197}
!9197 = !DILocalVariable(name: "dev", arg: 1, scope: !9195, file: !120, line: 730, type: !1065)
!9198 = !DILocation(line: 0, scope: !9195)
!9199 = !DILocation(line: 732, column: 9, scope: !9195)
!9200 = !DILocation(line: 732, column: 2, scope: !9195)
!9201 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1207, file: !1207, line: 496, type: !9202, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1036, retainedNodes: !9204)
!9202 = !DISubroutineType(types: !9203)
!9203 = !{!107, !1065, !107, !107, !107}
!9204 = !{!9205, !9206, !9207, !9208, !9209, !9210}
!9205 = !DILocalVariable(name: "dev", arg: 1, scope: !9201, file: !1207, line: 496, type: !1065)
!9206 = !DILocalVariable(name: "pin", arg: 2, scope: !9201, file: !1207, line: 496, type: !107)
!9207 = !DILocalVariable(name: "conf", arg: 3, scope: !9201, file: !1207, line: 496, type: !107)
!9208 = !DILocalVariable(name: "func", arg: 4, scope: !9201, file: !1207, line: 496, type: !107)
!9209 = !DILocalVariable(name: "ret", scope: !9201, file: !1207, line: 498, type: !107)
!9210 = !DILocalVariable(name: "gpio_out", scope: !9211, file: !1207, line: 508, type: !162)
!9211 = distinct !DILexicalBlock(scope: !9212, file: !1207, line: 507, column: 27)
!9212 = distinct !DILexicalBlock(scope: !9201, file: !1207, line: 507, column: 6)
!9213 = !DILocation(line: 0, scope: !9201)
!9214 = !DILocation(line: 505, column: 2, scope: !9201)
!9215 = !DILocation(line: 507, column: 11, scope: !9212)
!9216 = !DILocation(line: 507, column: 6, scope: !9201)
!9217 = !DILocation(line: 508, column: 28, scope: !9211)
!9218 = !DILocation(line: 0, scope: !9211)
!9219 = !DILocation(line: 510, column: 16, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9211, file: !1207, line: 510, column: 7)
!9221 = !DILocation(line: 0, scope: !9220)
!9222 = !DILocation(line: 510, column: 7, scope: !9211)
!9223 = !DILocation(line: 511, column: 4, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9220, file: !1207, line: 510, column: 32)
!9225 = !DILocation(line: 512, column: 3, scope: !9224)
!9226 = !DILocation(line: 513, column: 4, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9228, file: !1207, line: 512, column: 39)
!9228 = distinct !DILexicalBlock(scope: !9220, file: !1207, line: 512, column: 14)
!9229 = !DILocation(line: 514, column: 3, scope: !9227)
!9230 = !DILocation(line: 518, column: 1, scope: !9201)
!9231 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1512, file: !1512, line: 526, type: !1383, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9232)
!9232 = !{!9233, !9234, !9235}
!9233 = !DILocalVariable(name: "dev", arg: 1, scope: !9231, file: !1512, line: 526, type: !1385)
!9234 = !DILocalVariable(name: "c", arg: 2, scope: !9231, file: !1512, line: 526, type: !144)
!9235 = !DILocalVariable(name: "config", scope: !9231, file: !1512, line: 528, type: !9236)
!9236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 32)
!9237 = !DILocation(line: 0, scope: !9231)
!9238 = !DILocation(line: 528, column: 48, scope: !9231)
!9239 = !DILocation(line: 531, column: 40, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9231, file: !1512, line: 531, column: 6)
!9241 = !DILocation(line: 531, column: 6, scope: !9240)
!9242 = !DILocation(line: 531, column: 6, scope: !9231)
!9243 = !DILocation(line: 532, column: 34, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !9240, file: !1512, line: 531, column: 48)
!9245 = !DILocation(line: 532, column: 3, scope: !9244)
!9246 = !DILocation(line: 533, column: 2, scope: !9244)
!9247 = !DILocation(line: 539, column: 42, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9231, file: !1512, line: 539, column: 6)
!9249 = !DILocation(line: 539, column: 7, scope: !9248)
!9250 = !DILocation(line: 539, column: 6, scope: !9231)
!9251 = !DILocation(line: 543, column: 52, scope: !9231)
!9252 = !DILocation(line: 543, column: 22, scope: !9231)
!9253 = !DILocation(line: 543, column: 5, scope: !9231)
!9254 = !DILocation(line: 545, column: 2, scope: !9231)
!9255 = !DILocation(line: 546, column: 1, scope: !9231)
!9256 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1512, file: !1512, line: 548, type: !1402, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9257)
!9257 = !{!9258, !9259, !9260, !9261}
!9258 = !DILocalVariable(name: "dev", arg: 1, scope: !9256, file: !1512, line: 548, type: !1385)
!9259 = !DILocalVariable(name: "c", arg: 2, scope: !9256, file: !1512, line: 549, type: !134)
!9260 = !DILocalVariable(name: "config", scope: !9256, file: !1512, line: 551, type: !9236)
!9261 = !DILocalVariable(name: "key", scope: !9256, file: !1512, line: 555, type: !32)
!9262 = !DILocation(line: 0, scope: !9256)
!9263 = !DILocation(line: 551, column: 48, scope: !9256)
!9264 = !DILocation(line: 562, column: 2, scope: !9256)
!9265 = !DILocation(line: 563, column: 41, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9267, file: !1512, line: 563, column: 7)
!9267 = distinct !DILexicalBlock(scope: !9256, file: !1512, line: 562, column: 12)
!9268 = !DILocation(line: 563, column: 7, scope: !9266)
!9269 = !DILocation(line: 563, column: 7, scope: !9267)
!9270 = !DILocation(line: 55, column: 2, scope: !9271, inlinedAt: !9275)
!9271 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5993, file: !5993, line: 42, type: !5994, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9272)
!9272 = !{!9273, !9274}
!9273 = !DILocalVariable(name: "key", scope: !9271, file: !5993, line: 44, type: !32)
!9274 = !DILocalVariable(name: "tmp", scope: !9271, file: !5993, line: 53, type: !32)
!9275 = distinct !DILocation(line: 564, column: 10, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9266, file: !1512, line: 563, column: 49)
!9277 = !{i64 2327309}
!9278 = !DILocation(line: 0, scope: !9271, inlinedAt: !9275)
!9279 = !DILocation(line: 565, column: 42, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9276, file: !1512, line: 565, column: 8)
!9281 = !DILocation(line: 565, column: 8, scope: !9280)
!9282 = !DILocation(line: 565, column: 8, scope: !9276)
!9283 = !DILocalVariable(name: "key", arg: 1, scope: !9284, file: !5993, line: 84, type: !32)
!9284 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5993, file: !5993, line: 84, type: !6004, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9285)
!9285 = !{!9283}
!9286 = !DILocation(line: 0, scope: !9284, inlinedAt: !9287)
!9287 = distinct !DILocation(line: 568, column: 4, scope: !9276)
!9288 = !DILocation(line: 95, column: 2, scope: !9284, inlinedAt: !9287)
!9289 = !{i64 2328126}
!9290 = !DILocation(line: 569, column: 3, scope: !9276)
!9291 = distinct !{!9291, !9264, !9292}
!9292 = !DILocation(line: 570, column: 2, scope: !9256)
!9293 = !DILocation(line: 592, column: 33, scope: !9256)
!9294 = !DILocation(line: 592, column: 2, scope: !9256)
!9295 = !DILocation(line: 0, scope: !9284, inlinedAt: !9296)
!9296 = distinct !DILocation(line: 593, column: 2, scope: !9256)
!9297 = !DILocation(line: 95, column: 2, scope: !9284, inlinedAt: !9296)
!9298 = !DILocation(line: 594, column: 1, scope: !9256)
!9299 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1512, file: !1512, line: 596, type: !1406, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9300)
!9300 = !{!9301, !9302, !9303}
!9301 = !DILocalVariable(name: "dev", arg: 1, scope: !9299, file: !1512, line: 596, type: !1385)
!9302 = !DILocalVariable(name: "config", scope: !9299, file: !1512, line: 598, type: !9236)
!9303 = !DILocalVariable(name: "err", scope: !9299, file: !1512, line: 599, type: !162)
!9304 = !DILocation(line: 0, scope: !9299)
!9305 = !DILocation(line: 598, column: 48, scope: !9299)
!9306 = !DILocation(line: 606, column: 40, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9299, file: !1512, line: 606, column: 6)
!9308 = !DILocation(line: 606, column: 6, scope: !9307)
!9309 = !DILocation(line: 606, column: 6, scope: !9299)
!9310 = !DILocation(line: 610, column: 39, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9299, file: !1512, line: 610, column: 6)
!9312 = !DILocation(line: 610, column: 6, scope: !9311)
!9313 = !DILocation(line: 610, column: 6, scope: !9299)
!9314 = !DILocation(line: 614, column: 39, scope: !9315)
!9315 = distinct !DILexicalBlock(scope: !9299, file: !1512, line: 614, column: 6)
!9316 = !DILocation(line: 614, column: 6, scope: !9315)
!9317 = !DILocation(line: 614, column: 6, scope: !9299)
!9318 = !DILocation(line: 619, column: 40, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9299, file: !1512, line: 619, column: 6)
!9320 = !DILocation(line: 619, column: 6, scope: !9319)
!9321 = !DILocation(line: 619, column: 6, scope: !9299)
!9322 = !DILocation(line: 623, column: 10, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9299, file: !1512, line: 623, column: 6)
!9324 = !DILocation(line: 623, column: 6, scope: !9299)
!9325 = !DILocation(line: 624, column: 34, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9323, file: !1512, line: 623, column: 24)
!9327 = !DILocation(line: 624, column: 3, scope: !9326)
!9328 = !DILocation(line: 625, column: 2, scope: !9326)
!9329 = !DILocation(line: 632, column: 10, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9299, file: !1512, line: 632, column: 6)
!9331 = !DILocation(line: 632, column: 6, scope: !9299)
!9332 = !DILocation(line: 633, column: 34, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9330, file: !1512, line: 632, column: 32)
!9334 = !DILocation(line: 633, column: 3, scope: !9333)
!9335 = !DILocation(line: 634, column: 2, scope: !9333)
!9336 = !DILocation(line: 636, column: 10, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9299, file: !1512, line: 636, column: 6)
!9338 = !DILocation(line: 636, column: 6, scope: !9299)
!9339 = !DILocation(line: 637, column: 33, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9337, file: !1512, line: 636, column: 31)
!9341 = !DILocation(line: 637, column: 3, scope: !9340)
!9342 = !DILocation(line: 638, column: 2, scope: !9340)
!9343 = !DILocation(line: 640, column: 10, scope: !9344)
!9344 = distinct !DILexicalBlock(scope: !9299, file: !1512, line: 640, column: 6)
!9345 = !DILocation(line: 640, column: 6, scope: !9299)
!9346 = !DILocation(line: 641, column: 33, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9344, file: !1512, line: 640, column: 32)
!9348 = !DILocation(line: 641, column: 3, scope: !9347)
!9349 = !DILocation(line: 642, column: 2, scope: !9347)
!9350 = !DILocation(line: 646, column: 32, scope: !9299)
!9351 = !DILocation(line: 646, column: 2, scope: !9299)
!9352 = !DILocation(line: 648, column: 2, scope: !9299)
!9353 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1512, file: !1512, line: 419, type: !1410, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9354)
!9354 = !{!9355, !9356, !9357, !9358, !9360, !9361, !9362, !9363}
!9355 = !DILocalVariable(name: "dev", arg: 1, scope: !9353, file: !1512, line: 419, type: !1385)
!9356 = !DILocalVariable(name: "cfg", arg: 2, scope: !9353, file: !1512, line: 420, type: !1412)
!9357 = !DILocalVariable(name: "config", scope: !9353, file: !1512, line: 422, type: !9236)
!9358 = !DILocalVariable(name: "data", scope: !9353, file: !1512, line: 423, type: !9359)
!9359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 32)
!9360 = !DILocalVariable(name: "parity", scope: !9353, file: !1512, line: 424, type: !6435)
!9361 = !DILocalVariable(name: "stopbits", scope: !9353, file: !1512, line: 425, type: !6435)
!9362 = !DILocalVariable(name: "databits", scope: !9353, file: !1512, line: 426, type: !6435)
!9363 = !DILocalVariable(name: "flowctrl", scope: !9353, file: !1512, line: 428, type: !6435)
!9364 = !DILocation(line: 0, scope: !9353)
!9365 = !DILocation(line: 422, column: 48, scope: !9353)
!9366 = !DILocation(line: 423, column: 38, scope: !9353)
!9367 = !DILocation(line: 424, column: 56, scope: !9353)
!9368 = !DILocation(line: 424, column: 51, scope: !9353)
!9369 = !DILocation(line: 424, column: 26, scope: !9353)
!9370 = !DILocation(line: 425, column: 60, scope: !9353)
!9371 = !DILocation(line: 425, column: 55, scope: !9353)
!9372 = !DILocation(line: 425, column: 28, scope: !9353)
!9373 = !DILocation(line: 426, column: 60, scope: !9353)
!9374 = !DILocation(line: 426, column: 55, scope: !9353)
!9375 = !DILocation(line: 426, column: 28, scope: !9353)
!9376 = !DILocation(line: 428, column: 58, scope: !9353)
!9377 = !DILocation(line: 428, column: 53, scope: !9353)
!9378 = !DILocation(line: 428, column: 28, scope: !9353)
!9379 = !DILocation(line: 431, column: 44, scope: !9380)
!9380 = distinct !DILexicalBlock(scope: !9353, file: !1512, line: 431, column: 6)
!9381 = !DILocation(line: 438, column: 22, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9353, file: !1512, line: 437, column: 6)
!9383 = !DILocation(line: 437, column: 6, scope: !9353)
!9384 = !DILocation(line: 448, column: 6, scope: !9353)
!9385 = !DILocation(line: 465, column: 47, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9353, file: !1512, line: 465, column: 6)
!9387 = !DILocation(line: 475, column: 21, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9353, file: !1512, line: 475, column: 6)
!9389 = !DILocation(line: 475, column: 6, scope: !9353)
!9390 = !DILocation(line: 476, column: 8, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9392, file: !1512, line: 476, column: 7)
!9392 = distinct !DILexicalBlock(scope: !9388, file: !1512, line: 475, column: 49)
!9393 = !DILocation(line: 477, column: 34, scope: !9391)
!9394 = !DILocation(line: 476, column: 7, scope: !9392)
!9395 = !DILocation(line: 482, column: 27, scope: !9353)
!9396 = !DILocation(line: 482, column: 2, scope: !9353)
!9397 = !DILocation(line: 484, column: 16, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9353, file: !1512, line: 484, column: 6)
!9399 = !DILocation(line: 484, column: 13, scope: !9398)
!9400 = !DILocation(line: 484, column: 6, scope: !9353)
!9401 = !DILocation(line: 485, column: 3, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9398, file: !1512, line: 484, column: 44)
!9403 = !DILocation(line: 486, column: 2, scope: !9402)
!9404 = !DILocation(line: 488, column: 18, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9353, file: !1512, line: 488, column: 6)
!9406 = !DILocation(line: 488, column: 15, scope: !9405)
!9407 = !DILocation(line: 488, column: 6, scope: !9353)
!9408 = !DILocation(line: 489, column: 3, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9405, file: !1512, line: 488, column: 48)
!9410 = !DILocation(line: 490, column: 2, scope: !9409)
!9411 = !DILocation(line: 492, column: 18, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9353, file: !1512, line: 492, column: 6)
!9413 = !DILocation(line: 492, column: 15, scope: !9412)
!9414 = !DILocation(line: 492, column: 6, scope: !9353)
!9415 = !DILocation(line: 493, column: 3, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !9412, file: !1512, line: 492, column: 48)
!9417 = !DILocation(line: 494, column: 2, scope: !9416)
!9418 = !DILocation(line: 496, column: 18, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9353, file: !1512, line: 496, column: 6)
!9420 = !DILocation(line: 496, column: 15, scope: !9419)
!9421 = !DILocation(line: 496, column: 6, scope: !9353)
!9422 = !DILocation(line: 497, column: 3, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9419, file: !1512, line: 496, column: 46)
!9424 = !DILocation(line: 498, column: 2, scope: !9423)
!9425 = !DILocation(line: 500, column: 11, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9353, file: !1512, line: 500, column: 6)
!9427 = !DILocation(line: 500, column: 29, scope: !9426)
!9428 = !DILocation(line: 500, column: 20, scope: !9426)
!9429 = !DILocation(line: 500, column: 6, scope: !9353)
!9430 = !DILocation(line: 501, column: 3, scope: !9431)
!9431 = distinct !DILexicalBlock(scope: !9426, file: !1512, line: 500, column: 40)
!9432 = !DILocation(line: 502, column: 26, scope: !9431)
!9433 = !DILocation(line: 502, column: 19, scope: !9431)
!9434 = !DILocation(line: 503, column: 2, scope: !9431)
!9435 = !DILocation(line: 505, column: 26, scope: !9353)
!9436 = !DILocation(line: 505, column: 2, scope: !9353)
!9437 = !DILocation(line: 506, column: 2, scope: !9353)
!9438 = !DILocation(line: 507, column: 1, scope: !9353)
!9439 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1512, file: !1512, line: 509, type: !1423, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9440)
!9440 = !{!9441, !9442, !9443}
!9441 = !DILocalVariable(name: "dev", arg: 1, scope: !9439, file: !1512, line: 509, type: !1385)
!9442 = !DILocalVariable(name: "cfg", arg: 2, scope: !9439, file: !1512, line: 510, type: !1425)
!9443 = !DILocalVariable(name: "data", scope: !9439, file: !1512, line: 512, type: !9359)
!9444 = !DILocation(line: 0, scope: !9439)
!9445 = !DILocation(line: 512, column: 38, scope: !9439)
!9446 = !DILocation(line: 514, column: 24, scope: !9439)
!9447 = !DILocation(line: 514, column: 7, scope: !9439)
!9448 = !DILocation(line: 514, column: 16, scope: !9439)
!9449 = !DILocation(line: 515, column: 41, scope: !9439)
!9450 = !{i32 0, i32 1537}
!9451 = !DILocation(line: 515, column: 16, scope: !9439)
!9452 = !DILocation(line: 515, column: 7, scope: !9439)
!9453 = !DILocation(line: 515, column: 14, scope: !9439)
!9454 = !DILocation(line: 517, column: 3, scope: !9439)
!9455 = !{i32 0, i32 12289}
!9456 = !DILocation(line: 516, column: 19, scope: !9439)
!9457 = !DILocation(line: 516, column: 7, scope: !9439)
!9458 = !DILocation(line: 516, column: 17, scope: !9439)
!9459 = !DILocation(line: 519, column: 3, scope: !9439)
!9460 = !DILocation(line: 519, column: 33, scope: !9439)
!9461 = !DILocation(line: 518, column: 19, scope: !9439)
!9462 = !DILocation(line: 518, column: 7, scope: !9439)
!9463 = !DILocation(line: 518, column: 17, scope: !9439)
!9464 = !DILocation(line: 521, column: 3, scope: !9439)
!9465 = !{i32 0, i32 769}
!9466 = !DILocation(line: 520, column: 19, scope: !9439)
!9467 = !DILocation(line: 520, column: 7, scope: !9439)
!9468 = !DILocation(line: 520, column: 17, scope: !9439)
!9469 = !DILocation(line: 522, column: 2, scope: !9439)
!9470 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1512, file: !1512, line: 661, type: !1428, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9471)
!9471 = !{!9472, !9473, !9474, !9475, !9476, !9477}
!9472 = !DILocalVariable(name: "dev", arg: 1, scope: !9470, file: !1512, line: 661, type: !1385)
!9473 = !DILocalVariable(name: "tx_data", arg: 2, scope: !9470, file: !1512, line: 662, type: !176)
!9474 = !DILocalVariable(name: "size", arg: 3, scope: !9470, file: !1512, line: 663, type: !107)
!9475 = !DILocalVariable(name: "config", scope: !9470, file: !1512, line: 665, type: !9236)
!9476 = !DILocalVariable(name: "num_tx", scope: !9470, file: !1512, line: 666, type: !133)
!9477 = !DILocalVariable(name: "key", scope: !9470, file: !1512, line: 667, type: !32)
!9478 = !DILocation(line: 0, scope: !9470)
!9479 = !DILocation(line: 665, column: 48, scope: !9470)
!9480 = !DILocation(line: 669, column: 41, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9470, file: !1512, line: 669, column: 6)
!9482 = !DILocation(line: 669, column: 7, scope: !9481)
!9483 = !DILocation(line: 669, column: 6, scope: !9470)
!9484 = !DILocation(line: 55, column: 2, scope: !9271, inlinedAt: !9485)
!9485 = distinct !DILocation(line: 674, column: 8, scope: !9470)
!9486 = !DILocation(line: 0, scope: !9271, inlinedAt: !9485)
!9487 = !DILocation(line: 676, column: 24, scope: !9470)
!9488 = !DILocation(line: 676, column: 29, scope: !9470)
!9489 = !DILocation(line: 677, column: 43, scope: !9470)
!9490 = !DILocation(line: 677, column: 9, scope: !9470)
!9491 = !DILocation(line: 676, column: 2, scope: !9470)
!9492 = !DILocation(line: 681, column: 34, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9470, file: !1512, line: 677, column: 51)
!9494 = !DILocation(line: 681, column: 55, scope: !9493)
!9495 = !DILocation(line: 681, column: 41, scope: !9493)
!9496 = !DILocation(line: 681, column: 3, scope: !9493)
!9497 = !DILocation(line: 676, column: 17, scope: !9470)
!9498 = distinct !{!9498, !9491, !9499}
!9499 = !DILocation(line: 682, column: 2, scope: !9470)
!9500 = !DILocation(line: 0, scope: !9284, inlinedAt: !9501)
!9501 = distinct !DILocation(line: 684, column: 2, scope: !9470)
!9502 = !DILocation(line: 95, column: 2, scope: !9284, inlinedAt: !9501)
!9503 = !DILocation(line: 686, column: 2, scope: !9470)
!9504 = !DILocation(line: 687, column: 1, scope: !9470)
!9505 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1512, file: !1512, line: 689, type: !1432, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9506)
!9506 = !{!9507, !9508, !9509, !9510, !9511}
!9507 = !DILocalVariable(name: "dev", arg: 1, scope: !9505, file: !1512, line: 689, type: !1385)
!9508 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9505, file: !1512, line: 689, type: !182)
!9509 = !DILocalVariable(name: "size", arg: 3, scope: !9505, file: !1512, line: 690, type: !183)
!9510 = !DILocalVariable(name: "config", scope: !9505, file: !1512, line: 692, type: !9236)
!9511 = !DILocalVariable(name: "num_rx", scope: !9505, file: !1512, line: 693, type: !133)
!9512 = !DILocation(line: 0, scope: !9505)
!9513 = !DILocation(line: 692, column: 48, scope: !9505)
!9514 = !DILocation(line: 696, column: 44, scope: !9505)
!9515 = !DILocation(line: 695, column: 24, scope: !9505)
!9516 = !DILocation(line: 695, column: 29, scope: !9505)
!9517 = !DILocation(line: 696, column: 9, scope: !9505)
!9518 = !DILocation(line: 695, column: 2, scope: !9505)
!9519 = !DILocation(line: 700, column: 53, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9505, file: !1512, line: 696, column: 52)
!9521 = !DILocation(line: 700, column: 23, scope: !9520)
!9522 = !DILocation(line: 700, column: 17, scope: !9520)
!9523 = !DILocation(line: 700, column: 3, scope: !9520)
!9524 = !DILocation(line: 700, column: 21, scope: !9520)
!9525 = !DILocation(line: 703, column: 41, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9520, file: !1512, line: 703, column: 7)
!9527 = !DILocation(line: 703, column: 7, scope: !9526)
!9528 = !DILocation(line: 703, column: 7, scope: !9520)
!9529 = !DILocation(line: 704, column: 35, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9526, file: !1512, line: 703, column: 49)
!9531 = !DILocation(line: 704, column: 4, scope: !9530)
!9532 = !DILocation(line: 709, column: 3, scope: !9530)
!9533 = !DILocation(line: 695, column: 17, scope: !9505)
!9534 = distinct !{!9534, !9518, !9535}
!9535 = !DILocation(line: 710, column: 2, scope: !9505)
!9536 = !DILocation(line: 712, column: 2, scope: !9505)
!9537 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1512, file: !1512, line: 715, type: !1436, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9538)
!9538 = !{!9539, !9540}
!9539 = !DILocalVariable(name: "dev", arg: 1, scope: !9537, file: !1512, line: 715, type: !1385)
!9540 = !DILocalVariable(name: "config", scope: !9537, file: !1512, line: 717, type: !9236)
!9541 = !DILocation(line: 0, scope: !9537)
!9542 = !DILocation(line: 717, column: 48, scope: !9537)
!9543 = !DILocation(line: 729, column: 31, scope: !9537)
!9544 = !DILocation(line: 729, column: 2, scope: !9537)
!9545 = !DILocation(line: 734, column: 1, scope: !9537)
!9546 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1512, file: !1512, line: 736, type: !1436, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9547)
!9547 = !{!9548, !9549}
!9548 = !DILocalVariable(name: "dev", arg: 1, scope: !9546, file: !1512, line: 736, type: !1385)
!9549 = !DILocalVariable(name: "config", scope: !9546, file: !1512, line: 738, type: !9236)
!9550 = !DILocation(line: 0, scope: !9546)
!9551 = !DILocation(line: 738, column: 48, scope: !9546)
!9552 = !DILocation(line: 746, column: 32, scope: !9546)
!9553 = !DILocation(line: 746, column: 2, scope: !9546)
!9554 = !DILocation(line: 756, column: 1, scope: !9546)
!9555 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1512, file: !1512, line: 758, type: !1406, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9556)
!9556 = !{!9557, !9558}
!9557 = !DILocalVariable(name: "dev", arg: 1, scope: !9555, file: !1512, line: 758, type: !1385)
!9558 = !DILocalVariable(name: "config", scope: !9555, file: !1512, line: 760, type: !9236)
!9559 = !DILocation(line: 0, scope: !9555)
!9560 = !DILocation(line: 760, column: 48, scope: !9555)
!9561 = !DILocation(line: 762, column: 43, scope: !9555)
!9562 = !DILocation(line: 762, column: 9, scope: !9555)
!9563 = !DILocation(line: 762, column: 50, scope: !9555)
!9564 = !DILocation(line: 763, column: 35, scope: !9555)
!9565 = !DILocation(line: 763, column: 3, scope: !9555)
!9566 = !DILocation(line: 762, column: 2, scope: !9555)
!9567 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1512, file: !1512, line: 773, type: !1436, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9568)
!9568 = !{!9569, !9570}
!9569 = !DILocalVariable(name: "dev", arg: 1, scope: !9567, file: !1512, line: 773, type: !1385)
!9570 = !DILocalVariable(name: "config", scope: !9567, file: !1512, line: 775, type: !9236)
!9571 = !DILocation(line: 0, scope: !9567)
!9572 = !DILocation(line: 775, column: 48, scope: !9567)
!9573 = !DILocation(line: 777, column: 33, scope: !9567)
!9574 = !DILocation(line: 777, column: 2, scope: !9567)
!9575 = !DILocation(line: 778, column: 1, scope: !9567)
!9576 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1512, file: !1512, line: 780, type: !1436, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9577)
!9577 = !{!9578, !9579}
!9578 = !DILocalVariable(name: "dev", arg: 1, scope: !9576, file: !1512, line: 780, type: !1385)
!9579 = !DILocalVariable(name: "config", scope: !9576, file: !1512, line: 782, type: !9236)
!9580 = !DILocation(line: 0, scope: !9576)
!9581 = !DILocation(line: 782, column: 48, scope: !9576)
!9582 = !DILocation(line: 784, column: 34, scope: !9576)
!9583 = !DILocation(line: 784, column: 2, scope: !9576)
!9584 = !DILocation(line: 785, column: 1, scope: !9576)
!9585 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1512, file: !1512, line: 766, type: !1406, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9586)
!9586 = !{!9587, !9588}
!9587 = !DILocalVariable(name: "dev", arg: 1, scope: !9585, file: !1512, line: 766, type: !1385)
!9588 = !DILocalVariable(name: "config", scope: !9585, file: !1512, line: 768, type: !9236)
!9589 = !DILocation(line: 0, scope: !9585)
!9590 = !DILocation(line: 768, column: 48, scope: !9585)
!9591 = !DILocation(line: 770, column: 42, scope: !9585)
!9592 = !DILocation(line: 770, column: 9, scope: !9585)
!9593 = !DILocation(line: 770, column: 2, scope: !9585)
!9594 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1512, file: !1512, line: 787, type: !1406, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9595)
!9595 = !{!9596, !9597}
!9596 = !DILocalVariable(name: "dev", arg: 1, scope: !9594, file: !1512, line: 787, type: !1385)
!9597 = !DILocalVariable(name: "config", scope: !9594, file: !1512, line: 789, type: !9236)
!9598 = !DILocation(line: 0, scope: !9594)
!9599 = !DILocation(line: 789, column: 48, scope: !9594)
!9600 = !DILocation(line: 794, column: 44, scope: !9594)
!9601 = !DILocation(line: 794, column: 9, scope: !9594)
!9602 = !DILocation(line: 794, column: 2, scope: !9594)
!9603 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1512, file: !1512, line: 797, type: !1436, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9604)
!9604 = !{!9605, !9606}
!9605 = !DILocalVariable(name: "dev", arg: 1, scope: !9603, file: !1512, line: 797, type: !1385)
!9606 = !DILocalVariable(name: "config", scope: !9603, file: !1512, line: 799, type: !9236)
!9607 = !DILocation(line: 0, scope: !9603)
!9608 = !DILocation(line: 799, column: 48, scope: !9603)
!9609 = !DILocation(line: 802, column: 34, scope: !9603)
!9610 = !DILocation(line: 802, column: 2, scope: !9603)
!9611 = !DILocation(line: 805, column: 6, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9603, file: !1512, line: 805, column: 6)
!9613 = !DILocation(line: 806, column: 3, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9612, file: !1512, line: 805, column: 43)
!9615 = !DILocation(line: 810, column: 31, scope: !9603)
!9616 = !DILocation(line: 807, column: 2, scope: !9614)
!9617 = !DILocation(line: 810, column: 2, scope: !9603)
!9618 = !DILocation(line: 811, column: 1, scope: !9603)
!9619 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1512, file: !1512, line: 813, type: !1436, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9620)
!9620 = !{!9621, !9622}
!9621 = !DILocalVariable(name: "dev", arg: 1, scope: !9619, file: !1512, line: 813, type: !1385)
!9622 = !DILocalVariable(name: "config", scope: !9619, file: !1512, line: 815, type: !9236)
!9623 = !DILocation(line: 0, scope: !9619)
!9624 = !DILocation(line: 815, column: 48, scope: !9619)
!9625 = !DILocation(line: 818, column: 35, scope: !9619)
!9626 = !DILocation(line: 818, column: 2, scope: !9619)
!9627 = !DILocation(line: 821, column: 6, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9619, file: !1512, line: 821, column: 6)
!9629 = !DILocation(line: 822, column: 3, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9628, file: !1512, line: 821, column: 43)
!9631 = !DILocation(line: 826, column: 32, scope: !9619)
!9632 = !DILocation(line: 823, column: 2, scope: !9630)
!9633 = !DILocation(line: 826, column: 2, scope: !9619)
!9634 = !DILocation(line: 827, column: 1, scope: !9619)
!9635 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1512, file: !1512, line: 829, type: !1406, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9636)
!9636 = !{!9637, !9638}
!9637 = !DILocalVariable(name: "dev", arg: 1, scope: !9635, file: !1512, line: 829, type: !1385)
!9638 = !DILocalVariable(name: "config", scope: !9635, file: !1512, line: 831, type: !9236)
!9639 = !DILocation(line: 0, scope: !9635)
!9640 = !DILocation(line: 831, column: 48, scope: !9635)
!9641 = !DILocation(line: 833, column: 46, scope: !9635)
!9642 = !DILocation(line: 833, column: 11, scope: !9635)
!9643 = !DILocation(line: 833, column: 53, scope: !9635)
!9644 = !DILocation(line: 834, column: 38, scope: !9635)
!9645 = !DILocation(line: 834, column: 4, scope: !9635)
!9646 = !DILocation(line: 834, column: 46, scope: !9635)
!9647 = !DILocation(line: 835, column: 37, scope: !9635)
!9648 = !DILocation(line: 835, column: 4, scope: !9635)
!9649 = !DILocation(line: 835, column: 44, scope: !9635)
!9650 = !DILocation(line: 836, column: 36, scope: !9635)
!9651 = !DILocation(line: 836, column: 4, scope: !9635)
!9652 = !DILocation(line: 833, column: 2, scope: !9635)
!9653 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1512, file: !1512, line: 839, type: !1406, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9654)
!9654 = !{!9655}
!9655 = !DILocalVariable(name: "dev", arg: 1, scope: !9653, file: !1512, line: 839, type: !1385)
!9656 = !DILocation(line: 0, scope: !9653)
!9657 = !DILocation(line: 841, column: 2, scope: !9653)
!9658 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1512, file: !1512, line: 844, type: !1450, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9659)
!9659 = !{!9660, !9661, !9662, !9663}
!9660 = !DILocalVariable(name: "dev", arg: 1, scope: !9658, file: !1512, line: 844, type: !1385)
!9661 = !DILocalVariable(name: "cb", arg: 2, scope: !9658, file: !1512, line: 845, type: !1452)
!9662 = !DILocalVariable(name: "cb_data", arg: 3, scope: !9658, file: !1512, line: 846, type: !102)
!9663 = !DILocalVariable(name: "data", scope: !9658, file: !1512, line: 848, type: !9359)
!9664 = !DILocation(line: 0, scope: !9658)
!9665 = !DILocation(line: 848, column: 38, scope: !9658)
!9666 = !DILocation(line: 850, column: 8, scope: !9658)
!9667 = !DILocation(line: 850, column: 16, scope: !9658)
!9668 = !DILocation(line: 851, column: 8, scope: !9658)
!9669 = !DILocation(line: 851, column: 18, scope: !9658)
!9670 = !DILocation(line: 852, column: 1, scope: !9658)
!9671 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9672, file: !9672, line: 1792, type: !9673, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9675)
!9672 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9673 = !DISubroutineType(types: !9674)
!9674 = !{!162, !1456}
!9675 = !{!9676}
!9676 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9671, file: !9672, line: 1792, type: !1456)
!9677 = !DILocation(line: 0, scope: !9671)
!9678 = !DILocation(line: 1794, column: 11, scope: !9671)
!9679 = !DILocation(line: 1794, column: 47, scope: !9671)
!9680 = !DILocation(line: 1794, column: 3, scope: !9671)
!9681 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !9672, file: !9672, line: 2227, type: !9673, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9682)
!9682 = !{!9683}
!9683 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9681, file: !9672, line: 2227, type: !1456)
!9684 = !DILocation(line: 0, scope: !9681)
!9685 = !DILocation(line: 2229, column: 11, scope: !9681)
!9686 = !DILocation(line: 2229, column: 51, scope: !9681)
!9687 = !DILocation(line: 2229, column: 3, scope: !9681)
!9688 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !9672, file: !9672, line: 1803, type: !9673, scopeLine: 1804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9689)
!9689 = !{!9690}
!9690 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9688, file: !9672, line: 1803, type: !1456)
!9691 = !DILocation(line: 0, scope: !9688)
!9692 = !DILocation(line: 1805, column: 11, scope: !9688)
!9693 = !DILocation(line: 1805, column: 45, scope: !9688)
!9694 = !DILocation(line: 1805, column: 3, scope: !9688)
!9695 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !9672, file: !9672, line: 2238, type: !9673, scopeLine: 2239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9696)
!9696 = !{!9697}
!9697 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9695, file: !9672, line: 2238, type: !1456)
!9698 = !DILocation(line: 0, scope: !9695)
!9699 = !DILocation(line: 2240, column: 11, scope: !9695)
!9700 = !DILocation(line: 2240, column: 49, scope: !9695)
!9701 = !DILocation(line: 2240, column: 3, scope: !9695)
!9702 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !9672, file: !9672, line: 2192, type: !9703, scopeLine: 2193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9705)
!9703 = !DISubroutineType(types: !9704)
!9704 = !{null, !1456}
!9705 = !{!9706, !9707}
!9706 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9702, file: !9672, line: 2192, type: !1456)
!9707 = !DILocalVariable(name: "val", scope: !9708, file: !9672, line: 2194, type: !162)
!9708 = distinct !DILexicalBlock(scope: !9702, file: !9672, line: 2194, column: 3)
!9709 = !DILocation(line: 0, scope: !9702)
!9710 = !DILocation(line: 2194, column: 3, scope: !9708)
!9711 = !DILocalVariable(name: "addr", arg: 1, scope: !9712, file: !6167, line: 476, type: !1508)
!9712 = distinct !DISubprogram(name: "__LDREXW", scope: !6167, file: !6167, line: 476, type: !9713, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9715)
!9713 = !DISubroutineType(types: !9714)
!9714 = !{!162, !1508}
!9715 = !{!9711, !9716}
!9716 = !DILocalVariable(name: "result", scope: !9712, file: !6167, line: 478, type: !162)
!9717 = !DILocation(line: 0, scope: !9712, inlinedAt: !9718)
!9718 = distinct !DILocation(line: 2194, column: 3, scope: !9719)
!9719 = distinct !DILexicalBlock(scope: !9708, file: !9672, line: 2194, column: 3)
!9720 = !DILocation(line: 480, column: 4, scope: !9712, inlinedAt: !9718)
!9721 = !{i64 3758066}
!9722 = !DILocation(line: 2194, column: 3, scope: !9719)
!9723 = !DILocation(line: 0, scope: !9708)
!9724 = !DILocalVariable(name: "value", arg: 1, scope: !9725, file: !6167, line: 527, type: !162)
!9725 = distinct !DISubprogram(name: "__STREXW", scope: !6167, file: !6167, line: 527, type: !9726, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9728)
!9726 = !DISubroutineType(types: !9727)
!9727 = !{!162, !162, !1508}
!9728 = !{!9724, !9729, !9730}
!9729 = !DILocalVariable(name: "addr", arg: 2, scope: !9725, file: !6167, line: 527, type: !1508)
!9730 = !DILocalVariable(name: "result", scope: !9725, file: !6167, line: 529, type: !162)
!9731 = !DILocation(line: 0, scope: !9725, inlinedAt: !9732)
!9732 = distinct !DILocation(line: 2194, column: 3, scope: !9708)
!9733 = !DILocation(line: 531, column: 4, scope: !9725, inlinedAt: !9732)
!9734 = !{i64 3759502}
!9735 = distinct !{!9735, !9710, !9710}
!9736 = !DILocation(line: 2195, column: 1, scope: !9702)
!9737 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !9672, file: !9672, line: 2177, type: !9703, scopeLine: 2178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9738)
!9738 = !{!9739}
!9739 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9737, file: !9672, line: 2177, type: !1456)
!9740 = !DILocation(line: 0, scope: !9737)
!9741 = !DILocation(line: 2179, column: 3, scope: !9737)
!9742 = !DILocation(line: 2180, column: 1, scope: !9737)
!9743 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !9672, file: !9672, line: 2164, type: !9703, scopeLine: 2165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9744)
!9744 = !{!9745, !9746}
!9745 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9743, file: !9672, line: 2164, type: !1456)
!9746 = !DILocalVariable(name: "val", scope: !9747, file: !9672, line: 2166, type: !162)
!9747 = distinct !DILexicalBlock(scope: !9743, file: !9672, line: 2166, column: 3)
!9748 = !DILocation(line: 0, scope: !9743)
!9749 = !DILocation(line: 2166, column: 3, scope: !9747)
!9750 = !DILocation(line: 0, scope: !9712, inlinedAt: !9751)
!9751 = distinct !DILocation(line: 2166, column: 3, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9747, file: !9672, line: 2166, column: 3)
!9753 = !DILocation(line: 480, column: 4, scope: !9712, inlinedAt: !9751)
!9754 = !DILocation(line: 2166, column: 3, scope: !9752)
!9755 = !DILocation(line: 0, scope: !9747)
!9756 = !DILocation(line: 0, scope: !9725, inlinedAt: !9757)
!9757 = distinct !DILocation(line: 2166, column: 3, scope: !9747)
!9758 = !DILocation(line: 531, column: 4, scope: !9725, inlinedAt: !9757)
!9759 = distinct !{!9759, !9749, !9749}
!9760 = !DILocation(line: 2167, column: 1, scope: !9743)
!9761 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !9672, file: !9672, line: 2096, type: !9703, scopeLine: 2097, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9762)
!9762 = !{!9763, !9764}
!9763 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9761, file: !9672, line: 2096, type: !1456)
!9764 = !DILocalVariable(name: "val", scope: !9765, file: !9672, line: 2098, type: !162)
!9765 = distinct !DILexicalBlock(scope: !9761, file: !9672, line: 2098, column: 3)
!9766 = !DILocation(line: 0, scope: !9761)
!9767 = !DILocation(line: 2098, column: 3, scope: !9765)
!9768 = !DILocation(line: 0, scope: !9712, inlinedAt: !9769)
!9769 = distinct !DILocation(line: 2098, column: 3, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9765, file: !9672, line: 2098, column: 3)
!9771 = !DILocation(line: 480, column: 4, scope: !9712, inlinedAt: !9769)
!9772 = !DILocation(line: 2098, column: 3, scope: !9770)
!9773 = !DILocation(line: 0, scope: !9765)
!9774 = !DILocation(line: 0, scope: !9725, inlinedAt: !9775)
!9775 = distinct !DILocation(line: 2098, column: 3, scope: !9765)
!9776 = !DILocation(line: 531, column: 4, scope: !9725, inlinedAt: !9775)
!9777 = distinct !{!9777, !9767, !9767}
!9778 = !DILocation(line: 2099, column: 1, scope: !9761)
!9779 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !9672, file: !9672, line: 2081, type: !9703, scopeLine: 2082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9780)
!9780 = !{!9781}
!9781 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9779, file: !9672, line: 2081, type: !1456)
!9782 = !DILocation(line: 0, scope: !9779)
!9783 = !DILocation(line: 2083, column: 3, scope: !9779)
!9784 = !DILocation(line: 2084, column: 1, scope: !9779)
!9785 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !9672, file: !9672, line: 2068, type: !9703, scopeLine: 2069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9786)
!9786 = !{!9787, !9788}
!9787 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9785, file: !9672, line: 2068, type: !1456)
!9788 = !DILocalVariable(name: "val", scope: !9789, file: !9672, line: 2070, type: !162)
!9789 = distinct !DILexicalBlock(scope: !9785, file: !9672, line: 2070, column: 3)
!9790 = !DILocation(line: 0, scope: !9785)
!9791 = !DILocation(line: 2070, column: 3, scope: !9789)
!9792 = !DILocation(line: 0, scope: !9712, inlinedAt: !9793)
!9793 = distinct !DILocation(line: 2070, column: 3, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9789, file: !9672, line: 2070, column: 3)
!9795 = !DILocation(line: 480, column: 4, scope: !9712, inlinedAt: !9793)
!9796 = !DILocation(line: 2070, column: 3, scope: !9794)
!9797 = !DILocation(line: 0, scope: !9789)
!9798 = !DILocation(line: 0, scope: !9725, inlinedAt: !9799)
!9799 = distinct !DILocation(line: 2070, column: 3, scope: !9789)
!9800 = !DILocation(line: 531, column: 4, scope: !9725, inlinedAt: !9799)
!9801 = distinct !{!9801, !9791, !9791}
!9802 = !DILocation(line: 2071, column: 1, scope: !9785)
!9803 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !9672, file: !9672, line: 2131, type: !9703, scopeLine: 2132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9804)
!9804 = !{!9805, !9806}
!9805 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9803, file: !9672, line: 2131, type: !1456)
!9806 = !DILocalVariable(name: "val", scope: !9807, file: !9672, line: 2133, type: !162)
!9807 = distinct !DILexicalBlock(scope: !9803, file: !9672, line: 2133, column: 3)
!9808 = !DILocation(line: 0, scope: !9803)
!9809 = !DILocation(line: 2133, column: 3, scope: !9807)
!9810 = !DILocation(line: 0, scope: !9712, inlinedAt: !9811)
!9811 = distinct !DILocation(line: 2133, column: 3, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !9807, file: !9672, line: 2133, column: 3)
!9813 = !DILocation(line: 480, column: 4, scope: !9712, inlinedAt: !9811)
!9814 = !DILocation(line: 2133, column: 3, scope: !9812)
!9815 = !DILocation(line: 0, scope: !9807)
!9816 = !DILocation(line: 0, scope: !9725, inlinedAt: !9817)
!9817 = distinct !DILocation(line: 2133, column: 3, scope: !9807)
!9818 = !DILocation(line: 531, column: 4, scope: !9725, inlinedAt: !9817)
!9819 = distinct !{!9819, !9809, !9809}
!9820 = !DILocation(line: 2134, column: 1, scope: !9803)
!9821 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !9672, file: !9672, line: 2035, type: !9703, scopeLine: 2036, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9822)
!9822 = !{!9823, !9824}
!9823 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9821, file: !9672, line: 2035, type: !1456)
!9824 = !DILocalVariable(name: "val", scope: !9825, file: !9672, line: 2037, type: !162)
!9825 = distinct !DILexicalBlock(scope: !9821, file: !9672, line: 2037, column: 3)
!9826 = !DILocation(line: 0, scope: !9821)
!9827 = !DILocation(line: 2037, column: 3, scope: !9825)
!9828 = !DILocation(line: 0, scope: !9712, inlinedAt: !9829)
!9829 = distinct !DILocation(line: 2037, column: 3, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9825, file: !9672, line: 2037, column: 3)
!9831 = !DILocation(line: 480, column: 4, scope: !9712, inlinedAt: !9829)
!9832 = !DILocation(line: 2037, column: 3, scope: !9830)
!9833 = !DILocation(line: 0, scope: !9825)
!9834 = !DILocation(line: 0, scope: !9725, inlinedAt: !9835)
!9835 = distinct !DILocation(line: 2037, column: 3, scope: !9825)
!9836 = !DILocation(line: 531, column: 4, scope: !9725, inlinedAt: !9835)
!9837 = distinct !{!9837, !9827, !9827}
!9838 = !DILocation(line: 2038, column: 1, scope: !9821)
!9839 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9672, file: !9672, line: 1814, type: !9673, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9840)
!9840 = !{!9841}
!9841 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9839, file: !9672, line: 1814, type: !1456)
!9842 = !DILocation(line: 0, scope: !9839)
!9843 = !DILocation(line: 1816, column: 11, scope: !9839)
!9844 = !DILocation(line: 1816, column: 46, scope: !9839)
!9845 = !DILocation(line: 1816, column: 3, scope: !9839)
!9846 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !9672, file: !9672, line: 2142, type: !9703, scopeLine: 2143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9847)
!9847 = !{!9848, !9849}
!9848 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9846, file: !9672, line: 2142, type: !1456)
!9849 = !DILocalVariable(name: "val", scope: !9850, file: !9672, line: 2144, type: !162)
!9850 = distinct !DILexicalBlock(scope: !9846, file: !9672, line: 2144, column: 3)
!9851 = !DILocation(line: 0, scope: !9846)
!9852 = !DILocation(line: 2144, column: 3, scope: !9850)
!9853 = !DILocation(line: 0, scope: !9712, inlinedAt: !9854)
!9854 = distinct !DILocation(line: 2144, column: 3, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9850, file: !9672, line: 2144, column: 3)
!9856 = !DILocation(line: 480, column: 4, scope: !9712, inlinedAt: !9854)
!9857 = !DILocation(line: 2144, column: 3, scope: !9855)
!9858 = !DILocation(line: 0, scope: !9850)
!9859 = !DILocation(line: 0, scope: !9725, inlinedAt: !9860)
!9860 = distinct !DILocation(line: 2144, column: 3, scope: !9850)
!9861 = !DILocation(line: 531, column: 4, scope: !9725, inlinedAt: !9860)
!9862 = distinct !{!9862, !9852, !9852}
!9863 = !DILocation(line: 2145, column: 1, scope: !9846)
!9864 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !9672, file: !9672, line: 2046, type: !9703, scopeLine: 2047, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9865)
!9865 = !{!9866, !9867}
!9866 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9864, file: !9672, line: 2046, type: !1456)
!9867 = !DILocalVariable(name: "val", scope: !9868, file: !9672, line: 2048, type: !162)
!9868 = distinct !DILexicalBlock(scope: !9864, file: !9672, line: 2048, column: 3)
!9869 = !DILocation(line: 0, scope: !9864)
!9870 = !DILocation(line: 2048, column: 3, scope: !9868)
!9871 = !DILocation(line: 0, scope: !9712, inlinedAt: !9872)
!9872 = distinct !DILocation(line: 2048, column: 3, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9868, file: !9672, line: 2048, column: 3)
!9874 = !DILocation(line: 480, column: 4, scope: !9712, inlinedAt: !9872)
!9875 = !DILocation(line: 2048, column: 3, scope: !9873)
!9876 = !DILocation(line: 0, scope: !9868)
!9877 = !DILocation(line: 0, scope: !9725, inlinedAt: !9878)
!9878 = distinct !DILocation(line: 2048, column: 3, scope: !9868)
!9879 = !DILocation(line: 531, column: 4, scope: !9725, inlinedAt: !9878)
!9880 = distinct !{!9880, !9870, !9870}
!9881 = !DILocation(line: 2049, column: 1, scope: !9864)
!9882 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9672, file: !9672, line: 2403, type: !9883, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9885)
!9883 = !DISubroutineType(types: !9884)
!9884 = !{!133, !1456}
!9885 = !{!9886}
!9886 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9882, file: !9672, line: 2403, type: !1456)
!9887 = !DILocation(line: 0, scope: !9882)
!9888 = !DILocation(line: 2405, column: 20, scope: !9882)
!9889 = !DILocation(line: 2405, column: 10, scope: !9882)
!9890 = !DILocation(line: 2405, column: 3, scope: !9882)
!9891 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9672, file: !9672, line: 1770, type: !9673, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9892)
!9892 = !{!9893}
!9893 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9891, file: !9672, line: 1770, type: !1456)
!9894 = !DILocation(line: 0, scope: !9891)
!9895 = !DILocation(line: 1772, column: 11, scope: !9891)
!9896 = !DILocation(line: 1772, column: 46, scope: !9891)
!9897 = !DILocation(line: 1772, column: 3, scope: !9891)
!9898 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9672, file: !9672, line: 1934, type: !9703, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9899)
!9899 = !{!9900, !9901}
!9900 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9898, file: !9672, line: 1934, type: !1456)
!9901 = !DILocalVariable(name: "tmpreg", scope: !9898, file: !9672, line: 1936, type: !283)
!9902 = !DILocation(line: 0, scope: !9898)
!9903 = !DILocation(line: 1936, column: 3, scope: !9898)
!9904 = !DILocation(line: 1936, column: 17, scope: !9898)
!9905 = !DILocation(line: 1937, column: 20, scope: !9898)
!9906 = !DILocation(line: 1937, column: 10, scope: !9898)
!9907 = !DILocation(line: 1938, column: 10, scope: !9898)
!9908 = !DILocation(line: 1939, column: 20, scope: !9898)
!9909 = !DILocation(line: 1939, column: 10, scope: !9898)
!9910 = !DILocation(line: 1940, column: 10, scope: !9898)
!9911 = !DILocation(line: 1941, column: 1, scope: !9898)
!9912 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9672, file: !9672, line: 2426, type: !9913, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9915)
!9913 = !DISubroutineType(types: !9914)
!9914 = !{null, !1456, !133}
!9915 = !{!9916, !9917}
!9916 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9912, file: !9672, line: 2426, type: !1456)
!9917 = !DILocalVariable(name: "Value", arg: 2, scope: !9912, file: !9672, line: 2426, type: !133)
!9918 = !DILocation(line: 0, scope: !9912)
!9919 = !DILocation(line: 2428, column: 16, scope: !9912)
!9920 = !DILocation(line: 2428, column: 11, scope: !9912)
!9921 = !DILocation(line: 2428, column: 14, scope: !9912)
!9922 = !DILocation(line: 2429, column: 1, scope: !9912)
!9923 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1512, file: !1512, line: 205, type: !9924, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9926)
!9924 = !DISubroutineType(types: !9925)
!9925 = !{!162, !1385}
!9926 = !{!9927, !9928}
!9927 = !DILocalVariable(name: "dev", arg: 1, scope: !9923, file: !1512, line: 205, type: !1385)
!9928 = !DILocalVariable(name: "config", scope: !9923, file: !1512, line: 207, type: !9236)
!9929 = !DILocation(line: 0, scope: !9923)
!9930 = !DILocation(line: 207, column: 48, scope: !9923)
!9931 = !DILocation(line: 209, column: 36, scope: !9923)
!9932 = !DILocation(line: 209, column: 9, scope: !9923)
!9933 = !DILocation(line: 209, column: 2, scope: !9923)
!9934 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1512, file: !1512, line: 270, type: !9935, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9937)
!9935 = !DISubroutineType(types: !9936)
!9936 = !{!1351, !162}
!9937 = !{!9938}
!9938 = !DILocalVariable(name: "parity", arg: 1, scope: !9934, file: !1512, line: 270, type: !162)
!9939 = !DILocation(line: 0, scope: !9934)
!9940 = !DILocation(line: 272, column: 2, scope: !9934)
!9941 = !DILocation(line: 281, column: 1, scope: !9934)
!9942 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1512, file: !1512, line: 220, type: !9924, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9943)
!9943 = !{!9944, !9945}
!9944 = !DILocalVariable(name: "dev", arg: 1, scope: !9942, file: !1512, line: 220, type: !1385)
!9945 = !DILocalVariable(name: "config", scope: !9942, file: !1512, line: 222, type: !9236)
!9946 = !DILocation(line: 0, scope: !9942)
!9947 = !DILocation(line: 222, column: 48, scope: !9942)
!9948 = !DILocation(line: 224, column: 44, scope: !9942)
!9949 = !DILocation(line: 224, column: 9, scope: !9942)
!9950 = !DILocation(line: 224, column: 2, scope: !9942)
!9951 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1512, file: !1512, line: 304, type: !9952, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9954)
!9952 = !DISubroutineType(types: !9953)
!9953 = !{!1365, !162}
!9954 = !{!9955}
!9955 = !DILocalVariable(name: "sb", arg: 1, scope: !9951, file: !1512, line: 304, type: !162)
!9956 = !DILocation(line: 0, scope: !9951)
!9957 = !DILocation(line: 306, column: 2, scope: !9951)
!9958 = !DILocation(line: 0, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9951, file: !1512, line: 306, column: 14)
!9960 = !DILocation(line: 323, column: 1, scope: !9951)
!9961 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1512, file: !1512, line: 235, type: !9924, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9962)
!9962 = !{!9963, !9964}
!9963 = !DILocalVariable(name: "dev", arg: 1, scope: !9961, file: !1512, line: 235, type: !1385)
!9964 = !DILocalVariable(name: "config", scope: !9961, file: !1512, line: 237, type: !9236)
!9965 = !DILocation(line: 0, scope: !9961)
!9966 = !DILocation(line: 237, column: 48, scope: !9961)
!9967 = !DILocation(line: 239, column: 39, scope: !9961)
!9968 = !DILocation(line: 239, column: 9, scope: !9961)
!9969 = !DILocation(line: 239, column: 2, scope: !9961)
!9970 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1512, file: !1512, line: 355, type: !9971, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9973)
!9971 = !DISubroutineType(types: !9972)
!9972 = !{!1358, !162, !162}
!9973 = !{!9974, !9975}
!9974 = !DILocalVariable(name: "db", arg: 1, scope: !9970, file: !1512, line: 355, type: !162)
!9975 = !DILocalVariable(name: "p", arg: 2, scope: !9970, file: !1512, line: 356, type: !162)
!9976 = !DILocation(line: 0, scope: !9970)
!9977 = !DILocation(line: 358, column: 2, scope: !9970)
!9978 = !DILocation(line: 384, column: 1, scope: !9970)
!9979 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1512, file: !1512, line: 250, type: !9924, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9980)
!9980 = !{!9981, !9982}
!9981 = !DILocalVariable(name: "dev", arg: 1, scope: !9979, file: !1512, line: 250, type: !1385)
!9982 = !DILocalVariable(name: "config", scope: !9979, file: !1512, line: 252, type: !9236)
!9983 = !DILocation(line: 0, scope: !9979)
!9984 = !DILocation(line: 252, column: 48, scope: !9979)
!9985 = !DILocation(line: 254, column: 40, scope: !9979)
!9986 = !DILocation(line: 254, column: 9, scope: !9979)
!9987 = !DILocation(line: 254, column: 2, scope: !9979)
!9988 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1512, file: !1512, line: 409, type: !9989, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9991)
!9989 = !DISubroutineType(types: !9990)
!9990 = !{!1371, !162}
!9991 = !{!9992}
!9992 = !DILocalVariable(name: "fc", arg: 1, scope: !9988, file: !1512, line: 409, type: !162)
!9993 = !DILocation(line: 0, scope: !9988)
!9994 = !DILocation(line: 411, column: 9, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9988, file: !1512, line: 411, column: 6)
!9996 = !DILocation(line: 416, column: 1, scope: !9988)
!9997 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9672, file: !9672, line: 967, type: !9673, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !9998)
!9998 = !{!9999}
!9999 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9997, file: !9672, line: 967, type: !1456)
!10000 = !DILocation(line: 0, scope: !9997)
!10001 = !DILocation(line: 969, column: 21, scope: !9997)
!10002 = !DILocation(line: 969, column: 3, scope: !9997)
!10003 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9672, file: !9672, line: 601, type: !9673, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10004)
!10004 = !{!10005}
!10005 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10003, file: !9672, line: 601, type: !1456)
!10006 = !DILocation(line: 0, scope: !10003)
!10007 = !DILocation(line: 603, column: 21, scope: !10003)
!10008 = !DILocation(line: 603, column: 3, scope: !10003)
!10009 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9672, file: !9672, line: 820, type: !9673, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10010)
!10010 = !{!10011}
!10011 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10009, file: !9672, line: 820, type: !1456)
!10012 = !DILocation(line: 0, scope: !10009)
!10013 = !DILocation(line: 822, column: 21, scope: !10009)
!10014 = !DILocation(line: 822, column: 3, scope: !10009)
!10015 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9672, file: !9672, line: 547, type: !9673, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10016)
!10016 = !{!10017}
!10017 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10015, file: !9672, line: 547, type: !1456)
!10018 = !DILocation(line: 0, scope: !10015)
!10019 = !DILocation(line: 549, column: 21, scope: !10015)
!10020 = !DILocation(line: 549, column: 3, scope: !10015)
!10021 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1512, file: !1512, line: 257, type: !10022, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10024)
!10022 = !DISubroutineType(types: !10023)
!10023 = !{!162, !1351}
!10024 = !{!10025}
!10025 = !DILocalVariable(name: "parity", arg: 1, scope: !10021, file: !1512, line: 257, type: !1351)
!10026 = !DILocation(line: 0, scope: !10021)
!10027 = !DILocation(line: 259, column: 2, scope: !10021)
!10028 = !DILocation(line: 268, column: 1, scope: !10021)
!10029 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1512, file: !1512, line: 283, type: !10030, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10032)
!10030 = !DISubroutineType(types: !10031)
!10031 = !{!162, !1365}
!10032 = !{!10033}
!10033 = !DILocalVariable(name: "sb", arg: 1, scope: !10029, file: !1512, line: 283, type: !1365)
!10034 = !DILocation(line: 0, scope: !10029)
!10035 = !DILocation(line: 285, column: 2, scope: !10029)
!10036 = !DILocation(line: 0, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10029, file: !1512, line: 285, column: 14)
!10038 = !DILocation(line: 302, column: 1, scope: !10029)
!10039 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1512, file: !1512, line: 325, type: !10040, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10042)
!10040 = !DISubroutineType(types: !10041)
!10041 = !{!162, !1358, !1351}
!10042 = !{!10043, !10044}
!10043 = !DILocalVariable(name: "db", arg: 1, scope: !10039, file: !1512, line: 325, type: !1358)
!10044 = !DILocalVariable(name: "p", arg: 2, scope: !10039, file: !1512, line: 326, type: !1351)
!10045 = !DILocation(line: 0, scope: !10039)
!10046 = !DILocation(line: 328, column: 2, scope: !10039)
!10047 = !DILocation(line: 353, column: 1, scope: !10039)
!10048 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1512, file: !1512, line: 393, type: !10049, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10051)
!10049 = !DISubroutineType(types: !10050)
!10050 = !{!162, !1371}
!10051 = !{!10052}
!10052 = !DILocalVariable(name: "fc", arg: 1, scope: !10048, file: !1512, line: 393, type: !1371)
!10053 = !DILocation(line: 0, scope: !10048)
!10054 = !DILocation(line: 395, column: 9, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10048, file: !1512, line: 395, column: 6)
!10056 = !DILocation(line: 400, column: 1, scope: !10048)
!10057 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9672, file: !9672, line: 424, type: !9703, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10058)
!10058 = !{!10059}
!10059 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10057, file: !9672, line: 424, type: !1456)
!10060 = !DILocation(line: 0, scope: !10057)
!10061 = !DILocation(line: 426, column: 3, scope: !10057)
!10062 = !DILocation(line: 427, column: 1, scope: !10057)
!10063 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1512, file: !1512, line: 197, type: !10064, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10066)
!10064 = !DISubroutineType(types: !10065)
!10065 = !{null, !1385, !162}
!10066 = !{!10067, !10068, !10069}
!10067 = !DILocalVariable(name: "dev", arg: 1, scope: !10063, file: !1512, line: 197, type: !1385)
!10068 = !DILocalVariable(name: "parity", arg: 2, scope: !10063, file: !1512, line: 198, type: !162)
!10069 = !DILocalVariable(name: "config", scope: !10063, file: !1512, line: 200, type: !9236)
!10070 = !DILocation(line: 0, scope: !10063)
!10071 = !DILocation(line: 200, column: 48, scope: !10063)
!10072 = !DILocation(line: 202, column: 29, scope: !10063)
!10073 = !DILocation(line: 202, column: 2, scope: !10063)
!10074 = !DILocation(line: 203, column: 1, scope: !10063)
!10075 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1512, file: !1512, line: 212, type: !10064, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10076)
!10076 = !{!10077, !10078, !10079}
!10077 = !DILocalVariable(name: "dev", arg: 1, scope: !10075, file: !1512, line: 212, type: !1385)
!10078 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10075, file: !1512, line: 213, type: !162)
!10079 = !DILocalVariable(name: "config", scope: !10075, file: !1512, line: 215, type: !9236)
!10080 = !DILocation(line: 0, scope: !10075)
!10081 = !DILocation(line: 215, column: 48, scope: !10075)
!10082 = !DILocation(line: 217, column: 37, scope: !10075)
!10083 = !DILocation(line: 217, column: 2, scope: !10075)
!10084 = !DILocation(line: 218, column: 1, scope: !10075)
!10085 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1512, file: !1512, line: 227, type: !10064, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10086)
!10086 = !{!10087, !10088, !10089}
!10087 = !DILocalVariable(name: "dev", arg: 1, scope: !10085, file: !1512, line: 227, type: !1385)
!10088 = !DILocalVariable(name: "databits", arg: 2, scope: !10085, file: !1512, line: 228, type: !162)
!10089 = !DILocalVariable(name: "config", scope: !10085, file: !1512, line: 230, type: !9236)
!10090 = !DILocation(line: 0, scope: !10085)
!10091 = !DILocation(line: 230, column: 48, scope: !10085)
!10092 = !DILocation(line: 232, column: 32, scope: !10085)
!10093 = !DILocation(line: 232, column: 2, scope: !10085)
!10094 = !DILocation(line: 233, column: 1, scope: !10085)
!10095 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1512, file: !1512, line: 242, type: !10064, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10096)
!10096 = !{!10097, !10098, !10099}
!10097 = !DILocalVariable(name: "dev", arg: 1, scope: !10095, file: !1512, line: 242, type: !1385)
!10098 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10095, file: !1512, line: 243, type: !162)
!10099 = !DILocalVariable(name: "config", scope: !10095, file: !1512, line: 245, type: !9236)
!10100 = !DILocation(line: 0, scope: !10095)
!10101 = !DILocation(line: 245, column: 48, scope: !10095)
!10102 = !DILocation(line: 247, column: 33, scope: !10095)
!10103 = !DILocation(line: 247, column: 2, scope: !10095)
!10104 = !DILocation(line: 248, column: 1, scope: !10095)
!10105 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1512, file: !1512, line: 107, type: !10064, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10106)
!10106 = !{!10107, !10108, !10109, !10110, !10111}
!10107 = !DILocalVariable(name: "dev", arg: 1, scope: !10105, file: !1512, line: 107, type: !1385)
!10108 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10105, file: !1512, line: 107, type: !162)
!10109 = !DILocalVariable(name: "config", scope: !10105, file: !1512, line: 109, type: !9236)
!10110 = !DILocalVariable(name: "data", scope: !10105, file: !1512, line: 110, type: !9359)
!10111 = !DILocalVariable(name: "clock_rate", scope: !10105, file: !1512, line: 112, type: !162)
!10112 = !DILocation(line: 0, scope: !10105)
!10113 = !DILocation(line: 109, column: 48, scope: !10105)
!10114 = !DILocation(line: 110, column: 38, scope: !10105)
!10115 = !DILocation(line: 112, column: 2, scope: !10105)
!10116 = !DILocation(line: 123, column: 36, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10118, file: !1512, line: 123, column: 7)
!10118 = distinct !DILexicalBlock(scope: !10119, file: !1512, line: 122, column: 9)
!10119 = distinct !DILexicalBlock(scope: !10105, file: !1512, line: 115, column: 6)
!10120 = !DILocation(line: 124, column: 42, scope: !10117)
!10121 = !DILocation(line: 123, column: 7, scope: !10117)
!10122 = !DILocation(line: 125, column: 22, scope: !10117)
!10123 = !DILocation(line: 123, column: 7, scope: !10118)
!10124 = !DILocation(line: 176, column: 36, scope: !10105)
!10125 = !DILocation(line: 176, column: 3, scope: !10105)
!10126 = !DILocation(line: 179, column: 32, scope: !10105)
!10127 = !DILocation(line: 180, column: 10, scope: !10105)
!10128 = !DILocation(line: 179, column: 3, scope: !10105)
!10129 = !DILocation(line: 195, column: 1, scope: !10105)
!10130 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9672, file: !9672, line: 410, type: !9703, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10131)
!10131 = !{!10132}
!10132 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10130, file: !9672, line: 410, type: !1456)
!10133 = !DILocation(line: 0, scope: !10130)
!10134 = !DILocation(line: 412, column: 3, scope: !10130)
!10135 = !DILocation(line: 413, column: 1, scope: !10130)
!10136 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !812, file: !812, line: 216, type: !1489, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10137)
!10137 = !{!10138, !10139, !10140, !10141}
!10138 = !DILocalVariable(name: "dev", arg: 1, scope: !10136, file: !812, line: 216, type: !1385)
!10139 = !DILocalVariable(name: "sys", arg: 2, scope: !10136, file: !812, line: 217, type: !908)
!10140 = !DILocalVariable(name: "rate", arg: 3, scope: !10136, file: !812, line: 218, type: !864)
!10141 = !DILocalVariable(name: "api", scope: !10136, file: !812, line: 220, type: !1467)
!10142 = !DILocation(line: 0, scope: !10136)
!10143 = !DILocation(line: 221, column: 49, scope: !10136)
!10144 = !DILocation(line: 223, column: 11, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10136, file: !812, line: 223, column: 6)
!10146 = !DILocation(line: 223, column: 20, scope: !10145)
!10147 = !DILocation(line: 223, column: 6, scope: !10136)
!10148 = !DILocation(line: 227, column: 9, scope: !10136)
!10149 = !DILocation(line: 227, column: 2, scope: !10136)
!10150 = !DILocation(line: 228, column: 1, scope: !10136)
!10151 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9672, file: !9672, line: 615, type: !10152, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10154)
!10152 = !DISubroutineType(types: !10153)
!10153 = !{null, !1456, !162}
!10154 = !{!10155, !10156}
!10155 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10151, file: !9672, line: 615, type: !1456)
!10156 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10151, file: !9672, line: 615, type: !162)
!10157 = !DILocation(line: 0, scope: !10151)
!10158 = !DILocation(line: 617, column: 3, scope: !10151)
!10159 = !DILocation(line: 618, column: 1, scope: !10151)
!10160 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9672, file: !9672, line: 1020, type: !10161, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10163)
!10161 = !DISubroutineType(types: !10162)
!10162 = !{null, !1456, !162, !162, !162}
!10163 = !{!10164, !10165, !10166, !10167}
!10164 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10160, file: !9672, line: 1020, type: !1456)
!10165 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10160, file: !9672, line: 1020, type: !162)
!10166 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10160, file: !9672, line: 1020, type: !162)
!10167 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10160, file: !9672, line: 1021, type: !162)
!10168 = !DILocation(line: 0, scope: !10160)
!10169 = !DILocation(line: 1029, column: 30, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10171, file: !9672, line: 1028, column: 3)
!10171 = distinct !DILexicalBlock(scope: !10160, file: !9672, line: 1023, column: 7)
!10172 = !DILocation(line: 1029, column: 19, scope: !10170)
!10173 = !DILocation(line: 1029, column: 13, scope: !10170)
!10174 = !DILocation(line: 1029, column: 17, scope: !10170)
!10175 = !DILocation(line: 1031, column: 1, scope: !10160)
!10176 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9672, file: !9672, line: 949, type: !10152, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10177)
!10177 = !{!10178, !10179}
!10178 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10176, file: !9672, line: 949, type: !1456)
!10179 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10176, file: !9672, line: 949, type: !162)
!10180 = !DILocation(line: 0, scope: !10176)
!10181 = !DILocation(line: 951, column: 3, scope: !10176)
!10182 = !DILocation(line: 952, column: 1, scope: !10176)
!10183 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9672, file: !9672, line: 588, type: !10152, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10184)
!10184 = !{!10185, !10186}
!10185 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10183, file: !9672, line: 588, type: !1456)
!10186 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10183, file: !9672, line: 588, type: !162)
!10187 = !DILocation(line: 0, scope: !10183)
!10188 = !DILocation(line: 590, column: 3, scope: !10183)
!10189 = !DILocation(line: 591, column: 1, scope: !10183)
!10190 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9672, file: !9672, line: 805, type: !10152, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10191)
!10191 = !{!10192, !10193}
!10192 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10190, file: !9672, line: 805, type: !1456)
!10193 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10190, file: !9672, line: 805, type: !162)
!10194 = !DILocation(line: 0, scope: !10190)
!10195 = !DILocation(line: 807, column: 3, scope: !10190)
!10196 = !DILocation(line: 808, column: 1, scope: !10190)
!10197 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9672, file: !9672, line: 532, type: !10152, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10198)
!10198 = !{!10199, !10200}
!10199 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10197, file: !9672, line: 532, type: !1456)
!10200 = !DILocalVariable(name: "Parity", arg: 2, scope: !10197, file: !9672, line: 532, type: !162)
!10201 = !DILocation(line: 0, scope: !10197)
!10202 = !DILocation(line: 534, column: 3, scope: !10197)
!10203 = !DILocation(line: 535, column: 1, scope: !10197)
!10204 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9672, file: !9672, line: 1737, type: !9673, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10205)
!10205 = !{!10206}
!10206 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10204, file: !9672, line: 1737, type: !1456)
!10207 = !DILocation(line: 0, scope: !10204)
!10208 = !DILocation(line: 1739, column: 11, scope: !10204)
!10209 = !DILocation(line: 1739, column: 3, scope: !10204)
!10210 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9672, file: !9672, line: 1748, type: !9673, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10211)
!10211 = !{!10212}
!10212 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10210, file: !9672, line: 1748, type: !1456)
!10213 = !DILocation(line: 0, scope: !10210)
!10214 = !DILocation(line: 1750, column: 11, scope: !10210)
!10215 = !DILocation(line: 1750, column: 45, scope: !10210)
!10216 = !DILocation(line: 1750, column: 3, scope: !10210)
!10217 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9672, file: !9672, line: 1827, type: !9673, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10218)
!10218 = !{!10219}
!10219 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10217, file: !9672, line: 1827, type: !1456)
!10220 = !DILocation(line: 0, scope: !10217)
!10221 = !DILocation(line: 1829, column: 11, scope: !10217)
!10222 = !DILocation(line: 1829, column: 46, scope: !10217)
!10223 = !DILocation(line: 1829, column: 3, scope: !10217)
!10224 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9672, file: !9672, line: 1992, type: !9703, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10225)
!10225 = !{!10226}
!10226 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10224, file: !9672, line: 1992, type: !1456)
!10227 = !DILocation(line: 0, scope: !10224)
!10228 = !DILocation(line: 1994, column: 3, scope: !10224)
!10229 = !DILocation(line: 1995, column: 1, scope: !10224)
!10230 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9672, file: !9672, line: 1877, type: !9703, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10231)
!10231 = !{!10232, !10233}
!10232 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10230, file: !9672, line: 1877, type: !1456)
!10233 = !DILocalVariable(name: "tmpreg", scope: !10230, file: !9672, line: 1879, type: !283)
!10234 = !DILocation(line: 0, scope: !10230)
!10235 = !DILocation(line: 1879, column: 3, scope: !10230)
!10236 = !DILocation(line: 1879, column: 17, scope: !10230)
!10237 = !DILocation(line: 1880, column: 20, scope: !10230)
!10238 = !DILocation(line: 1880, column: 10, scope: !10230)
!10239 = !DILocation(line: 1881, column: 10, scope: !10230)
!10240 = !DILocation(line: 1882, column: 20, scope: !10230)
!10241 = !DILocation(line: 1882, column: 10, scope: !10230)
!10242 = !DILocation(line: 1883, column: 10, scope: !10230)
!10243 = !DILocation(line: 1884, column: 1, scope: !10230)
!10244 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9672, file: !9672, line: 1896, type: !9703, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10245)
!10245 = !{!10246, !10247}
!10246 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10244, file: !9672, line: 1896, type: !1456)
!10247 = !DILocalVariable(name: "tmpreg", scope: !10244, file: !9672, line: 1898, type: !283)
!10248 = !DILocation(line: 0, scope: !10244)
!10249 = !DILocation(line: 1898, column: 3, scope: !10244)
!10250 = !DILocation(line: 1898, column: 17, scope: !10244)
!10251 = !DILocation(line: 1899, column: 20, scope: !10244)
!10252 = !DILocation(line: 1899, column: 10, scope: !10244)
!10253 = !DILocation(line: 1900, column: 10, scope: !10244)
!10254 = !DILocation(line: 1901, column: 20, scope: !10244)
!10255 = !DILocation(line: 1901, column: 10, scope: !10244)
!10256 = !DILocation(line: 1902, column: 10, scope: !10244)
!10257 = !DILocation(line: 1903, column: 1, scope: !10244)
!10258 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9672, file: !9672, line: 1915, type: !9703, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10259)
!10259 = !{!10260, !10261}
!10260 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10258, file: !9672, line: 1915, type: !1456)
!10261 = !DILocalVariable(name: "tmpreg", scope: !10258, file: !9672, line: 1917, type: !283)
!10262 = !DILocation(line: 0, scope: !10258)
!10263 = !DILocation(line: 1917, column: 3, scope: !10258)
!10264 = !DILocation(line: 1917, column: 17, scope: !10258)
!10265 = !DILocation(line: 1918, column: 20, scope: !10258)
!10266 = !DILocation(line: 1918, column: 10, scope: !10258)
!10267 = !DILocation(line: 1919, column: 10, scope: !10258)
!10268 = !DILocation(line: 1920, column: 20, scope: !10258)
!10269 = !DILocation(line: 1920, column: 10, scope: !10258)
!10270 = !DILocation(line: 1921, column: 10, scope: !10258)
!10271 = !DILocation(line: 1922, column: 1, scope: !10258)
!10272 = !DILocation(line: 0, scope: !1590)
!10273 = !DILocation(line: 1914, column: 1, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !1590, file: !1512, line: 1914, column: 1)
!10275 = !DILocation(line: 1914, column: 1, scope: !1590)
!10276 = !DILocation(line: 0, scope: !1639)
!10277 = !DILocation(line: 1914, column: 1, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !1639, file: !1512, line: 1914, column: 1)
!10279 = !DILocation(line: 1914, column: 1, scope: !1639)
!10280 = !DILocation(line: 0, scope: !1656)
!10281 = !DILocation(line: 1914, column: 1, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !1656, file: !1512, line: 1914, column: 1)
!10283 = !DILocation(line: 1914, column: 1, scope: !1656)
!10284 = !DILocation(line: 0, scope: !1673)
!10285 = !DILocation(line: 1914, column: 1, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !1673, file: !1512, line: 1914, column: 1)
!10287 = !DILocation(line: 1914, column: 1, scope: !1673)
!10288 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1512, file: !1512, line: 987, type: !1436, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10289)
!10289 = !{!10290, !10291}
!10290 = !DILocalVariable(name: "dev", arg: 1, scope: !10288, file: !1512, line: 987, type: !1385)
!10291 = !DILocalVariable(name: "data", scope: !10288, file: !1512, line: 989, type: !9359)
!10292 = !DILocation(line: 0, scope: !10288)
!10293 = !DILocation(line: 989, column: 38, scope: !10288)
!10294 = !DILocation(line: 1014, column: 12, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10288, file: !1512, line: 1014, column: 6)
!10296 = !DILocation(line: 1014, column: 6, scope: !10295)
!10297 = !DILocation(line: 1014, column: 6, scope: !10288)
!10298 = !DILocation(line: 1015, column: 28, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10295, file: !1512, line: 1014, column: 21)
!10300 = !DILocation(line: 1015, column: 3, scope: !10299)
!10301 = !DILocation(line: 1016, column: 2, scope: !10299)
!10302 = !DILocation(line: 1059, column: 1, scope: !10288)
!10303 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1512, file: !1512, line: 1583, type: !1406, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10304)
!10304 = !{!10305, !10306, !10307, !10308, !10309, !10310}
!10305 = !DILocalVariable(name: "dev", arg: 1, scope: !10303, file: !1512, line: 1583, type: !1385)
!10306 = !DILocalVariable(name: "config", scope: !10303, file: !1512, line: 1585, type: !9236)
!10307 = !DILocalVariable(name: "data", scope: !10303, file: !1512, line: 1586, type: !9359)
!10308 = !DILocalVariable(name: "ll_parity", scope: !10303, file: !1512, line: 1587, type: !162)
!10309 = !DILocalVariable(name: "ll_datawidth", scope: !10303, file: !1512, line: 1588, type: !162)
!10310 = !DILocalVariable(name: "err", scope: !10303, file: !1512, line: 1589, type: !107)
!10311 = !DILocation(line: 0, scope: !10303)
!10312 = !DILocation(line: 1585, column: 48, scope: !10303)
!10313 = !DILocation(line: 1586, column: 38, scope: !10303)
!10314 = !DILocation(line: 1591, column: 2, scope: !10303)
!10315 = !DILocation(line: 1593, column: 29, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10303, file: !1512, line: 1593, column: 6)
!10317 = !DILocation(line: 1593, column: 7, scope: !10316)
!10318 = !DILocation(line: 1593, column: 6, scope: !10303)
!10319 = !DILocation(line: 1599, column: 31, scope: !10303)
!10320 = !DILocation(line: 1599, column: 71, scope: !10303)
!10321 = !DILocation(line: 1599, column: 8, scope: !10303)
!10322 = !DILocation(line: 1600, column: 10, scope: !10323)
!10323 = distinct !DILexicalBlock(scope: !10303, file: !1512, line: 1600, column: 6)
!10324 = !DILocation(line: 1600, column: 6, scope: !10303)
!10325 = !DILocation(line: 1616, column: 36, scope: !10303)
!10326 = !DILocation(line: 1616, column: 8, scope: !10303)
!10327 = !DILocation(line: 1617, column: 10, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10303, file: !1512, line: 1617, column: 6)
!10329 = !DILocation(line: 1617, column: 6, scope: !10303)
!10330 = !DILocation(line: 1621, column: 27, scope: !10303)
!10331 = !DILocation(line: 1621, column: 2, scope: !10303)
!10332 = !DILocation(line: 1624, column: 40, scope: !10303)
!10333 = !DILocation(line: 1624, column: 2, scope: !10303)
!10334 = !DILocation(line: 1630, column: 14, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !10303, file: !1512, line: 1630, column: 6)
!10336 = !DILocation(line: 1630, column: 6, scope: !10303)
!10337 = !DILocation(line: 1638, column: 2, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10339, file: !1512, line: 1634, column: 34)
!10339 = distinct !DILexicalBlock(scope: !10335, file: !1512, line: 1634, column: 13)
!10340 = !DILocation(line: 0, scope: !10335)
!10341 = !DILocation(line: 1649, column: 35, scope: !10303)
!10342 = !DILocation(line: 1649, column: 2, scope: !10303)
!10343 = !DILocation(line: 1654, column: 14, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10303, file: !1512, line: 1654, column: 6)
!10345 = !DILocation(line: 1654, column: 6, scope: !10303)
!10346 = !DILocation(line: 1655, column: 3, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10344, file: !1512, line: 1654, column: 31)
!10348 = !DILocation(line: 1656, column: 2, scope: !10347)
!10349 = !DILocation(line: 1659, column: 37, scope: !10303)
!10350 = !DILocation(line: 1659, column: 2, scope: !10303)
!10351 = !DILocation(line: 1662, column: 14, scope: !10352)
!10352 = distinct !DILexicalBlock(scope: !10303, file: !1512, line: 1662, column: 6)
!10353 = !DILocation(line: 1662, column: 6, scope: !10303)
!10354 = !DILocation(line: 1663, column: 37, scope: !10355)
!10355 = distinct !DILexicalBlock(scope: !10352, file: !1512, line: 1662, column: 27)
!10356 = !DILocation(line: 1663, column: 3, scope: !10355)
!10357 = !DILocation(line: 1664, column: 2, scope: !10355)
!10358 = !DILocation(line: 1684, column: 26, scope: !10303)
!10359 = !DILocation(line: 1684, column: 2, scope: !10303)
!10360 = !DILocation(line: 1701, column: 10, scope: !10303)
!10361 = !DILocation(line: 1701, column: 2, scope: !10303)
!10362 = !DILocation(line: 1722, column: 2, scope: !10303)
!10363 = !DILocation(line: 1724, column: 1, scope: !10303)
!10364 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1512, file: !1512, line: 651, type: !1436, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10365)
!10365 = !{!10366, !10367, !10368}
!10366 = !DILocalVariable(name: "dev", arg: 1, scope: !10364, file: !1512, line: 651, type: !1385)
!10367 = !DILocalVariable(name: "data", scope: !10364, file: !1512, line: 653, type: !9359)
!10368 = !DILocalVariable(name: "clk", scope: !10364, file: !1512, line: 654, type: !10369)
!10369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1385)
!10370 = !DILocation(line: 0, scope: !10364)
!10371 = !DILocation(line: 653, column: 38, scope: !10364)
!10372 = !DILocation(line: 656, column: 8, scope: !10364)
!10373 = !DILocation(line: 656, column: 14, scope: !10364)
!10374 = !DILocation(line: 657, column: 1, scope: !10364)
!10375 = distinct !DISubprogram(name: "device_is_ready", scope: !3494, file: !3494, line: 47, type: !10376, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10378)
!10376 = !DISubroutineType(types: !10377)
!10377 = !{!136, !1385}
!10378 = !{!10379}
!10379 = !DILocalVariable(name: "dev", arg: 1, scope: !10375, file: !3494, line: 47, type: !1385)
!10380 = !DILocation(line: 0, scope: !10375)
!10381 = !DILocation(line: 55, column: 2, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10375, file: !3494, line: 55, column: 2)
!10383 = !{i64 2155368747}
!10384 = !DILocation(line: 56, column: 9, scope: !10375)
!10385 = !DILocation(line: 56, column: 2, scope: !10375)
!10386 = distinct !DISubprogram(name: "clock_control_on", scope: !812, file: !812, line: 123, type: !1474, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10387)
!10387 = !{!10388, !10389, !10390}
!10388 = !DILocalVariable(name: "dev", arg: 1, scope: !10386, file: !812, line: 123, type: !1385)
!10389 = !DILocalVariable(name: "sys", arg: 2, scope: !10386, file: !812, line: 124, type: !908)
!10390 = !DILocalVariable(name: "api", scope: !10386, file: !812, line: 126, type: !1467)
!10391 = !DILocation(line: 0, scope: !10386)
!10392 = !DILocation(line: 127, column: 49, scope: !10386)
!10393 = !DILocation(line: 129, column: 14, scope: !10386)
!10394 = !DILocation(line: 129, column: 9, scope: !10386)
!10395 = !DILocation(line: 129, column: 2, scope: !10386)
!10396 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1563, file: !1563, line: 342, type: !10397, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10399)
!10397 = !DISubroutineType(types: !10398)
!10398 = !{!107, !1626, !133}
!10399 = !{!10400, !10401, !10402, !10403}
!10400 = !DILocalVariable(name: "config", arg: 1, scope: !10396, file: !1563, line: 342, type: !1626)
!10401 = !DILocalVariable(name: "id", arg: 2, scope: !10396, file: !1563, line: 343, type: !133)
!10402 = !DILocalVariable(name: "ret", scope: !10396, file: !1563, line: 345, type: !107)
!10403 = !DILocalVariable(name: "state", scope: !10396, file: !1563, line: 346, type: !1566)
!10404 = !DILocation(line: 0, scope: !10396)
!10405 = !DILocation(line: 346, column: 2, scope: !10396)
!10406 = !DILocation(line: 348, column: 8, scope: !10396)
!10407 = !DILocation(line: 349, column: 10, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10396, file: !1563, line: 349, column: 6)
!10409 = !DILocation(line: 349, column: 6, scope: !10396)
!10410 = !DILocation(line: 353, column: 44, scope: !10396)
!10411 = !DILocation(line: 353, column: 9, scope: !10396)
!10412 = !DILocation(line: 353, column: 2, scope: !10396)
!10413 = !DILocation(line: 354, column: 1, scope: !10396)
!10414 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9672, file: !9672, line: 497, type: !10152, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10415)
!10415 = !{!10416, !10417, !10418}
!10416 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10414, file: !9672, line: 497, type: !1456)
!10417 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10414, file: !9672, line: 497, type: !162)
!10418 = !DILocalVariable(name: "val", scope: !10419, file: !9672, line: 499, type: !162)
!10419 = distinct !DILexicalBlock(scope: !10414, file: !9672, line: 499, column: 3)
!10420 = !DILocation(line: 0, scope: !10414)
!10421 = !DILocation(line: 499, column: 3, scope: !10419)
!10422 = !DILocation(line: 0, scope: !9712, inlinedAt: !10423)
!10423 = distinct !DILocation(line: 499, column: 3, scope: !10424)
!10424 = distinct !DILexicalBlock(scope: !10419, file: !9672, line: 499, column: 3)
!10425 = !DILocation(line: 480, column: 4, scope: !9712, inlinedAt: !10423)
!10426 = !DILocation(line: 499, column: 3, scope: !10424)
!10427 = !DILocation(line: 0, scope: !10419)
!10428 = !DILocation(line: 0, scope: !9725, inlinedAt: !10429)
!10429 = distinct !DILocation(line: 499, column: 3, scope: !10419)
!10430 = !DILocation(line: 531, column: 4, scope: !9725, inlinedAt: !10429)
!10431 = distinct !{!10431, !10421, !10421}
!10432 = !DILocation(line: 500, column: 1, scope: !10414)
!10433 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9672, file: !9672, line: 850, type: !10161, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10434)
!10434 = !{!10435, !10436, !10437, !10438}
!10435 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10433, file: !9672, line: 850, type: !1456)
!10436 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10433, file: !9672, line: 850, type: !162)
!10437 = !DILocalVariable(name: "Parity", arg: 3, scope: !10433, file: !9672, line: 850, type: !162)
!10438 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10433, file: !9672, line: 851, type: !162)
!10439 = !DILocation(line: 0, scope: !10433)
!10440 = !DILocation(line: 853, column: 3, scope: !10433)
!10441 = !DILocation(line: 854, column: 3, scope: !10433)
!10442 = !DILocation(line: 855, column: 1, scope: !10433)
!10443 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9672, file: !9672, line: 1337, type: !9703, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10444)
!10444 = !{!10445}
!10445 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10443, file: !9672, line: 1337, type: !1456)
!10446 = !DILocation(line: 0, scope: !10443)
!10447 = !DILocation(line: 1339, column: 3, scope: !10443)
!10448 = !DILocation(line: 1340, column: 1, scope: !10443)
!10449 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1563, file: !1563, line: 316, type: !10450, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10452)
!10450 = !DISubroutineType(types: !10451)
!10451 = !{!107, !1626, !1566}
!10452 = !{!10453, !10454, !10455}
!10453 = !DILocalVariable(name: "config", arg: 1, scope: !10449, file: !1563, line: 317, type: !1626)
!10454 = !DILocalVariable(name: "state", arg: 2, scope: !10449, file: !1563, line: 318, type: !1566)
!10455 = !DILocalVariable(name: "reg", scope: !10449, file: !1563, line: 320, type: !22)
!10456 = !DILocation(line: 0, scope: !10449)
!10457 = !DILocation(line: 329, column: 39, scope: !10449)
!10458 = !DILocation(line: 329, column: 52, scope: !10449)
!10459 = !DILocation(line: 329, column: 9, scope: !10449)
!10460 = !DILocation(line: 329, column: 2, scope: !10449)
!10461 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !10376, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1341, retainedNodes: !10462)
!10462 = !{!10463}
!10463 = !DILocalVariable(name: "dev", arg: 1, scope: !10461, file: !120, line: 730, type: !1385)
!10464 = !DILocation(line: 0, scope: !10461)
!10465 = !DILocation(line: 732, column: 9, scope: !10461)
!10466 = !DILocation(line: 732, column: 2, scope: !10461)
!10467 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1758, file: !1758, line: 270, type: !1764, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10468)
!10468 = !{!10469}
!10469 = !DILocalVariable(name: "dev", arg: 1, scope: !10467, file: !1758, line: 270, type: !1766)
!10470 = !DILocation(line: 0, scope: !10467)
!10471 = !DILocation(line: 274, column: 2, scope: !10467)
!10472 = !DILocation(line: 275, column: 12, scope: !10467)
!10473 = !DILocation(line: 276, column: 15, scope: !10467)
!10474 = !DILocation(line: 277, column: 16, scope: !10467)
!10475 = !DILocation(line: 278, column: 15, scope: !10467)
!10476 = !DILocation(line: 279, column: 16, scope: !10467)
!10477 = !DILocation(line: 282, column: 2, scope: !10467)
!10478 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !497, file: !497, line: 1814, type: !6201, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10479)
!10479 = !{!10480, !10481}
!10480 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10478, file: !497, line: 1814, type: !762)
!10481 = !DILocalVariable(name: "priority", arg: 2, scope: !10478, file: !497, line: 1814, type: !162)
!10482 = !DILocation(line: 0, scope: !10478)
!10483 = !DILocation(line: 1822, column: 46, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10485, file: !497, line: 1821, column: 3)
!10485 = distinct !DILexicalBlock(scope: !10478, file: !497, line: 1816, column: 7)
!10486 = !DILocation(line: 1824, column: 1, scope: !10478)
!10487 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1758, file: !1758, line: 118, type: !6104, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10488)
!10488 = !{!10489, !10490}
!10489 = !DILocalVariable(name: "arg", arg: 1, scope: !10487, file: !1758, line: 118, type: !102)
!10490 = !DILocalVariable(name: "dticks", scope: !10487, file: !1758, line: 121, type: !162)
!10491 = !DILocation(line: 0, scope: !10487)
!10492 = !DILocation(line: 124, column: 2, scope: !10487)
!10493 = !DILocation(line: 129, column: 17, scope: !10487)
!10494 = !DILocation(line: 129, column: 14, scope: !10487)
!10495 = !DILocation(line: 130, column: 15, scope: !10487)
!10496 = !DILocation(line: 145, column: 27, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10498, file: !1758, line: 132, column: 16)
!10498 = distinct !DILexicalBlock(scope: !10487, file: !1758, line: 132, column: 6)
!10499 = !DILocation(line: 145, column: 25, scope: !10497)
!10500 = !DILocation(line: 145, column: 45, scope: !10497)
!10501 = !DILocation(line: 146, column: 30, scope: !10497)
!10502 = !DILocation(line: 146, column: 20, scope: !10497)
!10503 = !DILocation(line: 147, column: 3, scope: !10497)
!10504 = !DILocation(line: 151, column: 2, scope: !10487)
!10505 = !DILocation(line: 152, column: 1, scope: !10487)
!10506 = distinct !DISubprogram(name: "elapsed", scope: !1758, file: !1758, line: 85, type: !6248, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10507)
!10507 = !{!10508, !10509, !10510}
!10508 = !DILocalVariable(name: "val1", scope: !10506, file: !1758, line: 87, type: !162)
!10509 = !DILocalVariable(name: "ctrl", scope: !10506, file: !1758, line: 88, type: !162)
!10510 = !DILocalVariable(name: "val2", scope: !10506, file: !1758, line: 89, type: !162)
!10511 = !DILocation(line: 87, column: 27, scope: !10506)
!10512 = !DILocation(line: 0, scope: !10506)
!10513 = !DILocation(line: 88, column: 27, scope: !10506)
!10514 = !DILocation(line: 89, column: 27, scope: !10506)
!10515 = !DILocation(line: 105, column: 12, scope: !10516)
!10516 = distinct !DILexicalBlock(scope: !10506, file: !1758, line: 105, column: 6)
!10517 = !DILocation(line: 106, column: 6, scope: !10516)
!10518 = !DILocation(line: 107, column: 16, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10516, file: !1758, line: 106, column: 24)
!10520 = !DILocation(line: 111, column: 18, scope: !10519)
!10521 = !DILocation(line: 112, column: 2, scope: !10519)
!10522 = !DILocation(line: 114, column: 20, scope: !10506)
!10523 = !DILocation(line: 114, column: 30, scope: !10506)
!10524 = !DILocation(line: 114, column: 28, scope: !10506)
!10525 = !DILocation(line: 114, column: 2, scope: !10506)
!10526 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1758, file: !1758, line: 154, type: !10527, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10529)
!10527 = !DISubroutineType(types: !10528)
!10528 = !{null, !736, !136}
!10529 = !{!10530, !10531, !10532, !10533, !10534, !10535, !10536, !10541, !10542}
!10530 = !DILocalVariable(name: "ticks", arg: 1, scope: !10526, file: !1758, line: 154, type: !736)
!10531 = !DILocalVariable(name: "idle", arg: 2, scope: !10526, file: !1758, line: 154, type: !136)
!10532 = !DILocalVariable(name: "delay", scope: !10526, file: !1758, line: 169, type: !162)
!10533 = !DILocalVariable(name: "val1", scope: !10526, file: !1758, line: 170, type: !162)
!10534 = !DILocalVariable(name: "val2", scope: !10526, file: !1758, line: 170, type: !162)
!10535 = !DILocalVariable(name: "last_load_", scope: !10526, file: !1758, line: 171, type: !162)
!10536 = !DILocalVariable(name: "key", scope: !10526, file: !1758, line: 176, type: !10537)
!10537 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !10538)
!10538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !10539)
!10539 = !{!10540}
!10540 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10538, file: !249, line: 33, baseType: !107, size: 32)
!10541 = !DILocalVariable(name: "pending", scope: !10526, file: !1758, line: 178, type: !162)
!10542 = !DILocalVariable(name: "unannounced", scope: !10526, file: !1758, line: 185, type: !162)
!10543 = !DILocation(line: 0, scope: !10526)
!10544 = !DILocation(line: 162, column: 49, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10526, file: !1758, line: 162, column: 6)
!10546 = !DILocation(line: 163, column: 17, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10545, file: !1758, line: 162, column: 78)
!10548 = !DILocation(line: 164, column: 13, scope: !10547)
!10549 = !DILocation(line: 165, column: 3, scope: !10547)
!10550 = !DILocation(line: 171, column: 24, scope: !10526)
!10551 = !DILocation(line: 173, column: 10, scope: !10526)
!10552 = !DILocation(line: 174, column: 10, scope: !10526)
!10553 = !DILocalVariable(name: "l", arg: 1, scope: !10554, file: !249, line: 136, type: !10557)
!10554 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !10555, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10558)
!10555 = !DISubroutineType(types: !10556)
!10556 = !{!10537, !10557}
!10557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 32)
!10558 = !{!10553, !10559}
!10559 = !DILocalVariable(name: "k", scope: !10554, file: !249, line: 139, type: !10537)
!10560 = !DILocation(line: 0, scope: !10554, inlinedAt: !10561)
!10561 = distinct !DILocation(line: 176, column: 25, scope: !10526)
!10562 = !DILocation(line: 55, column: 2, scope: !10563, inlinedAt: !10567)
!10563 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5993, file: !5993, line: 42, type: !5994, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10564)
!10564 = !{!10565, !10566}
!10565 = !DILocalVariable(name: "key", scope: !10563, file: !5993, line: 44, type: !32)
!10566 = !DILocalVariable(name: "tmp", scope: !10563, file: !5993, line: 53, type: !32)
!10567 = distinct !DILocation(line: 145, column: 10, scope: !10554, inlinedAt: !10561)
!10568 = !{i64 2278918}
!10569 = !DILocation(line: 0, scope: !10563, inlinedAt: !10567)
!10570 = !DILocation(line: 178, column: 21, scope: !10526)
!10571 = !DILocation(line: 180, column: 18, scope: !10526)
!10572 = !DILocation(line: 182, column: 14, scope: !10526)
!10573 = !DILocation(line: 183, column: 15, scope: !10526)
!10574 = !DILocation(line: 185, column: 39, scope: !10526)
!10575 = !DILocation(line: 185, column: 37, scope: !10526)
!10576 = !DILocation(line: 187, column: 27, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10526, file: !1758, line: 187, column: 6)
!10578 = !DILocation(line: 187, column: 6, scope: !10526)
!10579 = !DILocation(line: 202, column: 27, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10577, file: !1758, line: 195, column: 9)
!10581 = !DILocation(line: 202, column: 48, scope: !10580)
!10582 = !DILocation(line: 203, column: 9, scope: !10580)
!10583 = !DILocation(line: 204, column: 11, scope: !10580)
!10584 = !DILocation(line: 205, column: 13, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10580, file: !1758, line: 205, column: 7)
!10586 = !DILocation(line: 205, column: 7, scope: !10580)
!10587 = !DILocation(line: 0, scope: !10577)
!10588 = !DILocation(line: 212, column: 18, scope: !10526)
!10589 = !DILocation(line: 214, column: 28, scope: !10526)
!10590 = !DILocation(line: 214, column: 16, scope: !10526)
!10591 = !DILocation(line: 215, column: 15, scope: !10526)
!10592 = !DILocation(line: 227, column: 11, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10526, file: !1758, line: 227, column: 6)
!10594 = !DILocation(line: 227, column: 6, scope: !10526)
!10595 = !DILocation(line: 228, column: 15, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10593, file: !1758, line: 227, column: 19)
!10597 = !DILocation(line: 228, column: 38, scope: !10596)
!10598 = !DILocation(line: 228, column: 24, scope: !10596)
!10599 = !DILocation(line: 229, column: 2, scope: !10596)
!10600 = !DILocation(line: 230, column: 24, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10593, file: !1758, line: 229, column: 9)
!10602 = !DILocation(line: 230, column: 15, scope: !10601)
!10603 = !DILocation(line: 0, scope: !10593)
!10604 = !DILocalVariable(name: "key", arg: 2, scope: !10605, file: !249, line: 190, type: !10537)
!10605 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !10606, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10608)
!10606 = !DISubroutineType(types: !10607)
!10607 = !{null, !10557, !10537}
!10608 = !{!10609, !10604}
!10609 = !DILocalVariable(name: "l", arg: 1, scope: !10605, file: !249, line: 189, type: !10557)
!10610 = !DILocation(line: 0, scope: !10605, inlinedAt: !10611)
!10611 = distinct !DILocation(line: 232, column: 2, scope: !10526)
!10612 = !DILocalVariable(name: "key", arg: 1, scope: !10613, file: !5993, line: 84, type: !32)
!10613 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5993, file: !5993, line: 84, type: !6004, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10614)
!10614 = !{!10612}
!10615 = !DILocation(line: 0, scope: !10613, inlinedAt: !10616)
!10616 = distinct !DILocation(line: 215, column: 2, scope: !10605, inlinedAt: !10611)
!10617 = !DILocation(line: 95, column: 2, scope: !10613, inlinedAt: !10616)
!10618 = !{i64 2279735}
!10619 = !DILocation(line: 234, column: 1, scope: !10526)
!10620 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1758, file: !1758, line: 236, type: !6248, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10621)
!10621 = !{!10622, !10623}
!10622 = !DILocalVariable(name: "key", scope: !10620, file: !1758, line: 242, type: !10537)
!10623 = !DILocalVariable(name: "cyc", scope: !10620, file: !1758, line: 243, type: !162)
!10624 = !DILocation(line: 0, scope: !10554, inlinedAt: !10625)
!10625 = distinct !DILocation(line: 242, column: 25, scope: !10620)
!10626 = !DILocation(line: 55, column: 2, scope: !10563, inlinedAt: !10627)
!10627 = distinct !DILocation(line: 145, column: 10, scope: !10554, inlinedAt: !10625)
!10628 = !DILocation(line: 0, scope: !10563, inlinedAt: !10627)
!10629 = !DILocation(line: 0, scope: !10620)
!10630 = !DILocation(line: 243, column: 17, scope: !10620)
!10631 = !DILocation(line: 243, column: 29, scope: !10620)
!10632 = !DILocation(line: 243, column: 27, scope: !10620)
!10633 = !DILocation(line: 243, column: 43, scope: !10620)
!10634 = !DILocation(line: 243, column: 41, scope: !10620)
!10635 = !DILocation(line: 0, scope: !10605, inlinedAt: !10636)
!10636 = distinct !DILocation(line: 245, column: 2, scope: !10620)
!10637 = !DILocation(line: 0, scope: !10613, inlinedAt: !10638)
!10638 = distinct !DILocation(line: 215, column: 2, scope: !10605, inlinedAt: !10636)
!10639 = !DILocation(line: 95, column: 2, scope: !10613, inlinedAt: !10638)
!10640 = !DILocation(line: 246, column: 13, scope: !10620)
!10641 = !DILocation(line: 246, column: 2, scope: !10620)
!10642 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1758, file: !1758, line: 249, type: !6248, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !10643)
!10643 = !{!10644, !10645}
!10644 = !DILocalVariable(name: "key", scope: !10642, file: !1758, line: 251, type: !10537)
!10645 = !DILocalVariable(name: "ret", scope: !10642, file: !1758, line: 252, type: !162)
!10646 = !DILocation(line: 0, scope: !10554, inlinedAt: !10647)
!10647 = distinct !DILocation(line: 251, column: 25, scope: !10642)
!10648 = !DILocation(line: 55, column: 2, scope: !10563, inlinedAt: !10649)
!10649 = distinct !DILocation(line: 145, column: 10, scope: !10554, inlinedAt: !10647)
!10650 = !DILocation(line: 0, scope: !10563, inlinedAt: !10649)
!10651 = !DILocation(line: 0, scope: !10642)
!10652 = !DILocation(line: 252, column: 17, scope: !10642)
!10653 = !DILocation(line: 252, column: 29, scope: !10642)
!10654 = !DILocation(line: 252, column: 27, scope: !10642)
!10655 = !DILocation(line: 0, scope: !10605, inlinedAt: !10656)
!10656 = distinct !DILocation(line: 254, column: 2, scope: !10642)
!10657 = !DILocation(line: 0, scope: !10613, inlinedAt: !10658)
!10658 = distinct !DILocation(line: 215, column: 2, scope: !10605, inlinedAt: !10656)
!10659 = !DILocation(line: 95, column: 2, scope: !10613, inlinedAt: !10658)
!10660 = !DILocation(line: 255, column: 2, scope: !10642)
!10661 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1758, file: !1758, line: 258, type: !3211, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !250)
!10662 = !DILocation(line: 260, column: 6, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10661, file: !1758, line: 260, column: 6)
!10664 = !DILocation(line: 260, column: 16, scope: !10663)
!10665 = !DILocation(line: 260, column: 6, scope: !10661)
!10666 = !DILocation(line: 261, column: 17, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10663, file: !1758, line: 260, column: 34)
!10668 = !DILocation(line: 262, column: 2, scope: !10667)
!10669 = !DILocation(line: 263, column: 1, scope: !10661)
!10670 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1758, file: !1758, line: 265, type: !3211, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1680, retainedNodes: !250)
!10671 = !DILocation(line: 267, column: 16, scope: !10670)
!10672 = !DILocation(line: 268, column: 1, scope: !10670)
!10673 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10674, file: !10674, line: 9, type: !10675, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2935, retainedNodes: !10698)
!10674 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10675 = !DISubroutineType(types: !10676)
!10676 = !{!107, !10677, !133, !10697}
!10677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10678, size: 32)
!10678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10679)
!10679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1563, line: 60, size: 64, elements: !10680)
!10680 = !{!10681, !10696}
!10681 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10679, file: !1563, line: 69, baseType: !10682, size: 32)
!10682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10683, size: 32)
!10683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10684)
!10684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1563, line: 50, size: 64, elements: !10685)
!10685 = !{!10686, !10694, !10695}
!10686 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10684, file: !1563, line: 52, baseType: !10687, size: 32)
!10687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10688, size: 32)
!10688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10689)
!10689 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1574, line: 37, baseType: !10690)
!10690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1574, line: 32, size: 64, elements: !10691)
!10691 = !{!10692, !10693}
!10692 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10690, file: !1574, line: 34, baseType: !162, size: 32)
!10693 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10690, file: !1574, line: 36, baseType: !162, size: 32, offset: 32)
!10694 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10684, file: !1563, line: 54, baseType: !133, size: 8, offset: 32)
!10695 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10684, file: !1563, line: 56, baseType: !133, size: 8, offset: 40)
!10696 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10679, file: !1563, line: 71, baseType: !133, size: 8, offset: 32)
!10697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10682, size: 32)
!10698 = !{!10699, !10700, !10701}
!10699 = !DILocalVariable(name: "config", arg: 1, scope: !10673, file: !10674, line: 9, type: !10677)
!10700 = !DILocalVariable(name: "id", arg: 2, scope: !10673, file: !10674, line: 9, type: !133)
!10701 = !DILocalVariable(name: "state", arg: 3, scope: !10673, file: !10674, line: 10, type: !10697)
!10702 = !DILocation(line: 0, scope: !10673)
!10703 = !DILocation(line: 12, column: 20, scope: !10673)
!10704 = !DILocation(line: 13, column: 27, scope: !10673)
!10705 = !DILocation(line: 13, column: 42, scope: !10673)
!10706 = !DILocation(line: 13, column: 19, scope: !10673)
!10707 = !DILocation(line: 13, column: 16, scope: !10673)
!10708 = !DILocation(line: 13, column: 2, scope: !10673)
!10709 = distinct !{!10709, !10708, !10710}
!10710 = !DILocation(line: 19, column: 2, scope: !10673)
!10711 = !DILocation(line: 14, column: 23, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10713, file: !10674, line: 14, column: 7)
!10713 = distinct !DILexicalBlock(scope: !10673, file: !10674, line: 13, column: 54)
!10714 = !DILocation(line: 14, column: 10, scope: !10712)
!10715 = !DILocation(line: 18, column: 11, scope: !10713)
!10716 = !DILocation(line: 14, column: 7, scope: !10713)
!10717 = !DILocation(line: 22, column: 1, scope: !10673)
!10718 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1875, file: !1875, line: 193, type: !10719, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1793, retainedNodes: !10728)
!10719 = !DISubroutineType(types: !10720)
!10720 = !{!107, !10721, !133, !22}
!10721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10722, size: 32)
!10722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10723)
!10723 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1574, line: 37, baseType: !10724)
!10724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1574, line: 32, size: 64, elements: !10725)
!10725 = !{!10726, !10727}
!10726 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10724, file: !1574, line: 34, baseType: !162, size: 32)
!10727 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10724, file: !1574, line: 36, baseType: !162, size: 32, offset: 32)
!10728 = !{!10729, !10730, !10731, !10732, !10733, !10734, !10735, !10736, !10738}
!10729 = !DILocalVariable(name: "pins", arg: 1, scope: !10718, file: !1875, line: 193, type: !10721)
!10730 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10718, file: !1875, line: 193, type: !133)
!10731 = !DILocalVariable(name: "reg", arg: 3, scope: !10718, file: !1875, line: 194, type: !22)
!10732 = !DILocalVariable(name: "pin", scope: !10718, file: !1875, line: 196, type: !162)
!10733 = !DILocalVariable(name: "mux", scope: !10718, file: !1875, line: 196, type: !162)
!10734 = !DILocalVariable(name: "pin_cgf", scope: !10718, file: !1875, line: 197, type: !162)
!10735 = !DILocalVariable(name: "ret", scope: !10718, file: !1875, line: 198, type: !107)
!10736 = !DILocalVariable(name: "i", scope: !10737, file: !1875, line: 209, type: !133)
!10737 = distinct !DILexicalBlock(scope: !10718, file: !1875, line: 209, column: 2)
!10738 = !DILocalVariable(name: "gpio_out", scope: !10739, file: !1875, line: 239, type: !162)
!10739 = distinct !DILexicalBlock(scope: !10740, file: !1875, line: 238, column: 55)
!10740 = distinct !DILexicalBlock(scope: !10741, file: !1875, line: 238, column: 14)
!10741 = distinct !DILexicalBlock(scope: !10742, file: !1875, line: 236, column: 14)
!10742 = distinct !DILexicalBlock(scope: !10743, file: !1875, line: 234, column: 7)
!10743 = distinct !DILexicalBlock(scope: !10744, file: !1875, line: 209, column: 41)
!10744 = distinct !DILexicalBlock(scope: !10737, file: !1875, line: 209, column: 2)
!10745 = !DILocation(line: 0, scope: !10718)
!10746 = !DILocation(line: 0, scope: !10737)
!10747 = !DILocation(line: 209, column: 25, scope: !10744)
!10748 = !DILocation(line: 209, column: 2, scope: !10737)
!10749 = distinct !{!10749, !10748, !10750}
!10750 = !DILocation(line: 259, column: 2, scope: !10737)
!10751 = !DILocation(line: 210, column: 17, scope: !10743)
!10752 = !DILocation(line: 234, column: 7, scope: !10742)
!10753 = !DILocation(line: 234, column: 33, scope: !10742)
!10754 = !DILocation(line: 234, column: 7, scope: !10743)
!10755 = !DILocation(line: 235, column: 22, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10742, file: !1875, line: 234, column: 49)
!10757 = !DILocation(line: 235, column: 29, scope: !10756)
!10758 = !DILocation(line: 236, column: 3, scope: !10756)
!10759 = !DILocation(line: 236, column: 14, scope: !10742)
!10760 = !DILocation(line: 239, column: 32, scope: !10739)
!10761 = !DILocation(line: 0, scope: !10739)
!10762 = !DILocation(line: 241, column: 8, scope: !10739)
!10763 = !DILocation(line: 246, column: 3, scope: !10739)
!10764 = !DILocation(line: 252, column: 9, scope: !10743)
!10765 = !DILocation(line: 255, column: 9, scope: !10743)
!10766 = !DILocation(line: 256, column: 11, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10743, file: !1875, line: 256, column: 7)
!10768 = !DILocation(line: 209, column: 37, scope: !10744)
!10769 = !DILocation(line: 256, column: 7, scope: !10743)
!10770 = !DILocation(line: 262, column: 1, scope: !10718)
!10771 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1875, file: !1875, line: 176, type: !10772, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1793, retainedNodes: !10774)
!10772 = !DISubroutineType(types: !10773)
!10773 = !{!107, !162, !162, !162}
!10774 = !{!10775, !10776, !10777, !10778}
!10775 = !DILocalVariable(name: "pin", arg: 1, scope: !10771, file: !1875, line: 176, type: !162)
!10776 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10771, file: !1875, line: 176, type: !162)
!10777 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10771, file: !1875, line: 176, type: !162)
!10778 = !DILocalVariable(name: "port_device", scope: !10771, file: !1875, line: 178, type: !1805)
!10779 = !DILocation(line: 0, scope: !10771)
!10780 = !DILocation(line: 180, column: 22, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10771, file: !1875, line: 180, column: 6)
!10782 = !DILocation(line: 180, column: 6, scope: !10771)
!10783 = !DILocation(line: 180, column: 6, scope: !10781)
!10784 = !DILocation(line: 184, column: 16, scope: !10771)
!10785 = !DILocation(line: 186, column: 19, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10771, file: !1875, line: 186, column: 6)
!10787 = !DILocation(line: 186, column: 28, scope: !10786)
!10788 = !DILocation(line: 186, column: 33, scope: !10786)
!10789 = !DILocation(line: 186, column: 6, scope: !10771)
!10790 = !DILocation(line: 190, column: 43, scope: !10771)
!10791 = !DILocation(line: 190, column: 9, scope: !10771)
!10792 = !DILocation(line: 190, column: 2, scope: !10771)
!10793 = !DILocation(line: 191, column: 1, scope: !10771)
!10794 = distinct !DISubprogram(name: "device_is_ready", scope: !3494, file: !3494, line: 47, type: !10795, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1793, retainedNodes: !10797)
!10795 = !DISubroutineType(types: !10796)
!10796 = !{!136, !1805}
!10797 = !{!10798}
!10798 = !DILocalVariable(name: "dev", arg: 1, scope: !10794, file: !3494, line: 47, type: !1805)
!10799 = !DILocation(line: 0, scope: !10794)
!10800 = !DILocation(line: 55, column: 2, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10794, file: !3494, line: 55, column: 2)
!10802 = !{i64 2149512927}
!10803 = !DILocation(line: 56, column: 9, scope: !10794)
!10804 = !DILocation(line: 56, column: 2, scope: !10794)
!10805 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !10795, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1793, retainedNodes: !10806)
!10806 = !{!10807}
!10807 = !DILocalVariable(name: "dev", arg: 1, scope: !10805, file: !120, line: 730, type: !1805)
!10808 = !DILocation(line: 0, scope: !10805)
!10809 = !DILocation(line: 732, column: 9, scope: !10805)
!10810 = !DILocation(line: 732, column: 2, scope: !10805)
!10811 = distinct !DISubprogram(name: "SystemInit", scope: !1927, file: !1927, line: 167, type: !3211, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1883, retainedNodes: !250)
!10812 = !DILocation(line: 182, column: 1, scope: !10811)
!10813 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1927, file: !1927, line: 220, type: !3211, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1883, retainedNodes: !10814)
!10814 = !{!10815, !10816, !10817, !10818, !10819}
!10815 = !DILocalVariable(name: "tmp", scope: !10813, file: !1927, line: 222, type: !162)
!10816 = !DILocalVariable(name: "pllvco", scope: !10813, file: !1927, line: 222, type: !162)
!10817 = !DILocalVariable(name: "pllp", scope: !10813, file: !1927, line: 222, type: !162)
!10818 = !DILocalVariable(name: "pllsource", scope: !10813, file: !1927, line: 222, type: !162)
!10819 = !DILocalVariable(name: "pllm", scope: !10813, file: !1927, line: 222, type: !162)
!10820 = !DILocation(line: 0, scope: !10813)
!10821 = !DILocation(line: 225, column: 14, scope: !10813)
!10822 = !DILocation(line: 225, column: 19, scope: !10813)
!10823 = !DILocation(line: 227, column: 3, scope: !10813)
!10824 = !DILocation(line: 240, column: 25, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10813, file: !1927, line: 228, column: 3)
!10826 = !DILocation(line: 241, column: 19, scope: !10825)
!10827 = !DILocation(line: 241, column: 27, scope: !10825)
!10828 = !DILocation(line: 0, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10825, file: !1927, line: 243, column: 11)
!10830 = !DILocation(line: 254, column: 22, scope: !10825)
!10831 = !DILocation(line: 254, column: 62, scope: !10825)
!10832 = !DILocation(line: 255, column: 31, scope: !10825)
!10833 = !DILocation(line: 256, column: 7, scope: !10825)
!10834 = !DILocation(line: 0, scope: !10825)
!10835 = !DILocation(line: 263, column: 30, scope: !10813)
!10836 = !DILocation(line: 263, column: 52, scope: !10813)
!10837 = !DILocation(line: 263, column: 9, scope: !10813)
!10838 = !DILocation(line: 265, column: 19, scope: !10813)
!10839 = !DILocation(line: 266, column: 1, scope: !10813)
!10840 = distinct !DISubprogram(name: "HAL_RCCEx_PeriphCLKConfig", scope: !10841, file: !10841, line: 87, type: !10842, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !10881)
!10841 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc_ex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10842 = !DISubroutineType(types: !10843)
!10843 = !{!10844, !10845}
!10844 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2941, line: 44, baseType: !2940)
!10845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10846, size: 32)
!10846 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PeriphCLKInitTypeDef", file: !10847, line: 172, baseType: !10848)
!10847 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10848 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10847, line: 121, size: 736, elements: !10849)
!10849 = !{!10850, !10851, !10860, !10868, !10869, !10870, !10871, !10872, !10873, !10874, !10875, !10876, !10877, !10878, !10879, !10880}
!10850 = !DIDerivedType(tag: DW_TAG_member, name: "PeriphClockSelection", scope: !10848, file: !10847, line: 123, baseType: !162, size: 32)
!10851 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2S", scope: !10848, file: !10847, line: 126, baseType: !10852, size: 160, offset: 32)
!10852 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLI2SInitTypeDef", file: !10847, line: 97, baseType: !10853)
!10853 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10847, line: 79, size: 160, elements: !10854)
!10854 = !{!10855, !10856, !10857, !10858, !10859}
!10855 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SM", scope: !10853, file: !10847, line: 81, baseType: !162, size: 32)
!10856 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SN", scope: !10853, file: !10847, line: 84, baseType: !162, size: 32, offset: 32)
!10857 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SP", scope: !10853, file: !10847, line: 87, baseType: !162, size: 32, offset: 64)
!10858 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SQ", scope: !10853, file: !10847, line: 90, baseType: !162, size: 32, offset: 96)
!10859 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SR", scope: !10853, file: !10847, line: 94, baseType: !162, size: 32, offset: 128)
!10860 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAI", scope: !10848, file: !10847, line: 129, baseType: !10861, size: 128, offset: 192)
!10861 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLSAIInitTypeDef", file: !10847, line: 116, baseType: !10862)
!10862 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10847, line: 102, size: 128, elements: !10863)
!10863 = !{!10864, !10865, !10866, !10867}
!10864 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIM", scope: !10862, file: !10847, line: 104, baseType: !162, size: 32)
!10865 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIN", scope: !10862, file: !10847, line: 107, baseType: !162, size: 32, offset: 32)
!10866 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIP", scope: !10862, file: !10847, line: 110, baseType: !162, size: 32, offset: 64)
!10867 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIQ", scope: !10862, file: !10847, line: 113, baseType: !162, size: 32, offset: 96)
!10868 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SDivQ", scope: !10848, file: !10847, line: 132, baseType: !162, size: 32, offset: 320)
!10869 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSAIDivQ", scope: !10848, file: !10847, line: 136, baseType: !162, size: 32, offset: 352)
!10870 = !DIDerivedType(tag: DW_TAG_member, name: "Sai1ClockSelection", scope: !10848, file: !10847, line: 140, baseType: !162, size: 32, offset: 384)
!10871 = !DIDerivedType(tag: DW_TAG_member, name: "Sai2ClockSelection", scope: !10848, file: !10847, line: 143, baseType: !162, size: 32, offset: 416)
!10872 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb1ClockSelection", scope: !10848, file: !10847, line: 146, baseType: !162, size: 32, offset: 448)
!10873 = !DIDerivedType(tag: DW_TAG_member, name: "I2sApb2ClockSelection", scope: !10848, file: !10847, line: 149, baseType: !162, size: 32, offset: 480)
!10874 = !DIDerivedType(tag: DW_TAG_member, name: "RTCClockSelection", scope: !10848, file: !10847, line: 152, baseType: !162, size: 32, offset: 512)
!10875 = !DIDerivedType(tag: DW_TAG_member, name: "SdioClockSelection", scope: !10848, file: !10847, line: 155, baseType: !162, size: 32, offset: 544)
!10876 = !DIDerivedType(tag: DW_TAG_member, name: "CecClockSelection", scope: !10848, file: !10847, line: 158, baseType: !162, size: 32, offset: 576)
!10877 = !DIDerivedType(tag: DW_TAG_member, name: "Fmpi2c1ClockSelection", scope: !10848, file: !10847, line: 161, baseType: !162, size: 32, offset: 608)
!10878 = !DIDerivedType(tag: DW_TAG_member, name: "SpdifClockSelection", scope: !10848, file: !10847, line: 164, baseType: !162, size: 32, offset: 640)
!10879 = !DIDerivedType(tag: DW_TAG_member, name: "Clk48ClockSelection", scope: !10848, file: !10847, line: 167, baseType: !162, size: 32, offset: 672)
!10880 = !DIDerivedType(tag: DW_TAG_member, name: "TIMPresSelection", scope: !10848, file: !10847, line: 170, baseType: !133, size: 8, offset: 704)
!10881 = !{!10882, !10883, !10884, !10885, !10886, !10887, !10888, !10889, !10890, !10891, !10892}
!10882 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !10840, file: !10841, line: 87, type: !10845)
!10883 = !DILocalVariable(name: "tickstart", scope: !10840, file: !10841, line: 89, type: !162)
!10884 = !DILocalVariable(name: "tmpreg1", scope: !10840, file: !10841, line: 90, type: !162)
!10885 = !DILocalVariable(name: "plli2sp", scope: !10840, file: !10841, line: 91, type: !162)
!10886 = !DILocalVariable(name: "plli2sq", scope: !10840, file: !10841, line: 92, type: !162)
!10887 = !DILocalVariable(name: "plli2sr", scope: !10840, file: !10841, line: 93, type: !162)
!10888 = !DILocalVariable(name: "pllsaip", scope: !10840, file: !10841, line: 94, type: !162)
!10889 = !DILocalVariable(name: "pllsaiq", scope: !10840, file: !10841, line: 95, type: !162)
!10890 = !DILocalVariable(name: "plli2sused", scope: !10840, file: !10841, line: 96, type: !162)
!10891 = !DILocalVariable(name: "pllsaiused", scope: !10840, file: !10841, line: 97, type: !162)
!10892 = !DILocalVariable(name: "tmpreg", scope: !10893, file: !10841, line: 184, type: !283)
!10893 = distinct !DILexicalBlock(scope: !10894, file: !10841, line: 184, column: 5)
!10894 = distinct !DILexicalBlock(scope: !10895, file: !10841, line: 179, column: 3)
!10895 = distinct !DILexicalBlock(scope: !10840, file: !10841, line: 178, column: 6)
!10896 = !DILocation(line: 0, scope: !10840)
!10897 = !DILocation(line: 103, column: 23, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10840, file: !10841, line: 103, column: 6)
!10899 = !DILocation(line: 103, column: 45, scope: !10898)
!10900 = !DILocation(line: 103, column: 71, scope: !10898)
!10901 = !DILocation(line: 103, column: 6, scope: !10840)
!10902 = !DILocation(line: 109, column: 5, scope: !10903)
!10903 = distinct !DILexicalBlock(scope: !10898, file: !10841, line: 104, column: 3)
!10904 = !DILocation(line: 111, column: 23, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10903, file: !10841, line: 111, column: 8)
!10906 = !DILocation(line: 111, column: 45, scope: !10905)
!10907 = !DILocation(line: 111, column: 8, scope: !10903)
!10908 = !DILocation(line: 119, column: 23, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10840, file: !10841, line: 119, column: 6)
!10910 = !DILocation(line: 119, column: 45, scope: !10909)
!10911 = !DILocation(line: 119, column: 71, scope: !10909)
!10912 = !DILocation(line: 119, column: 6, scope: !10840)
!10913 = !DILocation(line: 125, column: 5, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10909, file: !10841, line: 120, column: 3)
!10915 = !DILocation(line: 127, column: 23, scope: !10916)
!10916 = distinct !DILexicalBlock(scope: !10914, file: !10841, line: 127, column: 8)
!10917 = !DILocation(line: 127, column: 45, scope: !10916)
!10918 = !DILocation(line: 127, column: 8, scope: !10914)
!10919 = !DILocation(line: 135, column: 23, scope: !10920)
!10920 = distinct !DILexicalBlock(scope: !10840, file: !10841, line: 135, column: 6)
!10921 = !DILocation(line: 135, column: 45, scope: !10920)
!10922 = !DILocation(line: 135, column: 67, scope: !10920)
!10923 = !DILocation(line: 135, column: 6, scope: !10840)
!10924 = !DILocation(line: 141, column: 5, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10920, file: !10841, line: 136, column: 3)
!10926 = !DILocation(line: 143, column: 23, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10925, file: !10841, line: 143, column: 8)
!10928 = !DILocation(line: 143, column: 42, scope: !10927)
!10929 = !DILocation(line: 143, column: 8, scope: !10925)
!10930 = !DILocation(line: 148, column: 42, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10925, file: !10841, line: 148, column: 8)
!10932 = !DILocation(line: 148, column: 8, scope: !10925)
!10933 = !DILocation(line: 156, column: 23, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !10840, file: !10841, line: 156, column: 6)
!10935 = !DILocation(line: 156, column: 45, scope: !10934)
!10936 = !DILocation(line: 156, column: 67, scope: !10934)
!10937 = !DILocation(line: 156, column: 6, scope: !10840)
!10938 = !DILocation(line: 162, column: 5, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10934, file: !10841, line: 157, column: 3)
!10940 = !DILocation(line: 165, column: 23, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10939, file: !10841, line: 165, column: 8)
!10942 = !DILocation(line: 165, column: 42, scope: !10941)
!10943 = !DILocation(line: 165, column: 8, scope: !10939)
!10944 = !DILocation(line: 170, column: 42, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10939, file: !10841, line: 170, column: 8)
!10946 = !DILocation(line: 170, column: 8, scope: !10939)
!10947 = !DILocation(line: 178, column: 23, scope: !10895)
!10948 = !DILocation(line: 178, column: 45, scope: !10895)
!10949 = !DILocation(line: 178, column: 66, scope: !10895)
!10950 = !DILocation(line: 178, column: 6, scope: !10840)
!10951 = !DILocation(line: 184, column: 5, scope: !10893)
!10952 = !DILocation(line: 184, column: 5, scope: !10894)
!10953 = !DILocation(line: 187, column: 13, scope: !10894)
!10954 = !DILocation(line: 190, column: 17, scope: !10894)
!10955 = !DILocation(line: 192, column: 5, scope: !10894)
!10956 = !DILocation(line: 192, column: 17, scope: !10894)
!10957 = !DILocation(line: 192, column: 20, scope: !10894)
!10958 = !DILocation(line: 192, column: 34, scope: !10894)
!10959 = !DILocation(line: 194, column: 11, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10961, file: !10841, line: 194, column: 10)
!10961 = distinct !DILexicalBlock(scope: !10894, file: !10841, line: 193, column: 5)
!10962 = !DILocation(line: 194, column: 25, scope: !10960)
!10963 = !DILocation(line: 194, column: 39, scope: !10960)
!10964 = !DILocation(line: 194, column: 10, scope: !10961)
!10965 = distinct !{!10965, !10955, !10966}
!10966 = !DILocation(line: 198, column: 5, scope: !10894)
!10967 = !DILocation(line: 200, column: 21, scope: !10894)
!10968 = !DILocation(line: 200, column: 26, scope: !10894)
!10969 = !DILocation(line: 201, column: 17, scope: !10970)
!10970 = distinct !DILexicalBlock(scope: !10894, file: !10841, line: 201, column: 8)
!10971 = !DILocation(line: 201, column: 33, scope: !10970)
!10972 = !DILocation(line: 201, column: 66, scope: !10970)
!10973 = !DILocation(line: 201, column: 84, scope: !10970)
!10974 = !DILocation(line: 201, column: 47, scope: !10970)
!10975 = !DILocation(line: 201, column: 8, scope: !10894)
!10976 = !DILocation(line: 204, column: 23, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10970, file: !10841, line: 202, column: 5)
!10978 = !DILocation(line: 204, column: 28, scope: !10977)
!10979 = !DILocation(line: 206, column: 7, scope: !10977)
!10980 = !DILocation(line: 207, column: 7, scope: !10977)
!10981 = !DILocation(line: 209, column: 17, scope: !10977)
!10982 = !DILocation(line: 212, column: 10, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10977, file: !10841, line: 212, column: 10)
!10984 = !DILocation(line: 212, column: 10, scope: !10977)
!10985 = !DILocation(line: 215, column: 21, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !10983, file: !10841, line: 213, column: 7)
!10987 = !DILocation(line: 218, column: 9, scope: !10986)
!10988 = !DILocation(line: 218, column: 15, scope: !10986)
!10989 = !DILocation(line: 218, column: 51, scope: !10986)
!10990 = !DILocation(line: 220, column: 15, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10992, file: !10841, line: 220, column: 14)
!10992 = distinct !DILexicalBlock(scope: !10986, file: !10841, line: 219, column: 9)
!10993 = !DILocation(line: 220, column: 29, scope: !10991)
!10994 = !DILocation(line: 220, column: 43, scope: !10991)
!10995 = !DILocation(line: 220, column: 14, scope: !10992)
!10996 = distinct !{!10996, !10987, !10997}
!10997 = !DILocation(line: 224, column: 9, scope: !10986)
!10998 = !DILocation(line: 227, column: 5, scope: !10999)
!10999 = distinct !DILexicalBlock(scope: !10894, file: !10841, line: 227, column: 5)
!11000 = !DILocation(line: 232, column: 23, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !10840, file: !10841, line: 232, column: 6)
!11002 = !DILocation(line: 228, column: 3, scope: !10894)
!11003 = !DILocation(line: 232, column: 45, scope: !11001)
!11004 = !DILocation(line: 232, column: 66, scope: !11001)
!11005 = !DILocation(line: 232, column: 6, scope: !10840)
!11006 = !DILocation(line: 235, column: 5, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !11001, file: !10841, line: 233, column: 3)
!11008 = !DILocation(line: 240, column: 23, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !10840, file: !10841, line: 240, column: 6)
!11010 = !DILocation(line: 236, column: 3, scope: !11007)
!11011 = !DILocation(line: 240, column: 45, scope: !11009)
!11012 = !DILocation(line: 240, column: 70, scope: !11009)
!11013 = !DILocation(line: 240, column: 6, scope: !10840)
!11014 = !DILocation(line: 246, column: 5, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11009, file: !10841, line: 241, column: 3)
!11016 = !DILocation(line: 251, column: 23, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !10840, file: !10841, line: 251, column: 6)
!11018 = !DILocation(line: 247, column: 3, scope: !11015)
!11019 = !DILocation(line: 251, column: 45, scope: !11017)
!11020 = !DILocation(line: 251, column: 66, scope: !11017)
!11021 = !DILocation(line: 251, column: 6, scope: !10840)
!11022 = !DILocation(line: 257, column: 5, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11017, file: !10841, line: 252, column: 3)
!11024 = !DILocation(line: 262, column: 23, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !10840, file: !10841, line: 262, column: 6)
!11026 = !DILocation(line: 258, column: 3, scope: !11023)
!11027 = !DILocation(line: 262, column: 45, scope: !11025)
!11028 = !DILocation(line: 262, column: 68, scope: !11025)
!11029 = !DILocation(line: 262, column: 6, scope: !10840)
!11030 = !DILocation(line: 268, column: 5, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !11025, file: !10841, line: 263, column: 3)
!11032 = !DILocation(line: 271, column: 23, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11031, file: !10841, line: 271, column: 8)
!11034 = !DILocation(line: 271, column: 43, scope: !11033)
!11035 = !DILocation(line: 271, column: 8, scope: !11031)
!11036 = !DILocation(line: 279, column: 23, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !10840, file: !10841, line: 279, column: 6)
!11038 = !DILocation(line: 279, column: 45, scope: !11037)
!11039 = !DILocation(line: 279, column: 67, scope: !11037)
!11040 = !DILocation(line: 279, column: 6, scope: !10840)
!11041 = !DILocation(line: 285, column: 5, scope: !11042)
!11042 = distinct !DILexicalBlock(scope: !11037, file: !10841, line: 280, column: 3)
!11043 = !DILocation(line: 290, column: 23, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !10840, file: !10841, line: 290, column: 6)
!11045 = !DILocation(line: 286, column: 3, scope: !11042)
!11046 = !DILocation(line: 290, column: 45, scope: !11044)
!11047 = !DILocation(line: 290, column: 70, scope: !11044)
!11048 = !DILocation(line: 290, column: 6, scope: !10840)
!11049 = !DILocation(line: 296, column: 5, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11044, file: !10841, line: 291, column: 3)
!11051 = !DILocation(line: 298, column: 23, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !11050, file: !10841, line: 298, column: 8)
!11053 = !DILocation(line: 298, column: 43, scope: !11052)
!11054 = !DILocation(line: 298, column: 8, scope: !11050)
!11055 = !DILocation(line: 308, column: 44, scope: !11056)
!11056 = distinct !DILexicalBlock(scope: !10840, file: !10841, line: 308, column: 6)
!11057 = !DILocation(line: 308, column: 18, scope: !11056)
!11058 = !DILocation(line: 308, column: 25, scope: !11056)
!11059 = !DILocation(line: 308, column: 65, scope: !11056)
!11060 = !DILocation(line: 308, column: 6, scope: !10840)
!11061 = !DILocation(line: 311, column: 5, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11056, file: !10841, line: 309, column: 3)
!11063 = !DILocation(line: 313, column: 17, scope: !11062)
!11064 = !DILocation(line: 315, column: 5, scope: !11062)
!11065 = !DILocation(line: 315, column: 11, scope: !11062)
!11066 = !DILocation(line: 317, column: 11, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11068, file: !10841, line: 317, column: 10)
!11068 = distinct !DILexicalBlock(scope: !11062, file: !10841, line: 316, column: 5)
!11069 = !DILocation(line: 317, column: 25, scope: !11067)
!11070 = !DILocation(line: 317, column: 39, scope: !11067)
!11071 = !DILocation(line: 317, column: 10, scope: !11068)
!11072 = distinct !{!11072, !11064, !11073}
!11073 = !DILocation(line: 322, column: 5, scope: !11062)
!11074 = !DILocation(line: 329, column: 27, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11062, file: !10841, line: 329, column: 8)
!11076 = !DILocation(line: 329, column: 49, scope: !11075)
!11077 = !DILocation(line: 329, column: 75, scope: !11075)
!11078 = !DILocation(line: 329, column: 102, scope: !11075)
!11079 = !DILocation(line: 329, column: 121, scope: !11075)
!11080 = !DILocation(line: 329, column: 143, scope: !11075)
!11081 = !DILocation(line: 329, column: 176, scope: !11075)
!11082 = !DILocation(line: 330, column: 49, scope: !11075)
!11083 = !DILocation(line: 330, column: 75, scope: !11075)
!11084 = !DILocation(line: 330, column: 102, scope: !11075)
!11085 = !DILocation(line: 330, column: 121, scope: !11075)
!11086 = !DILocation(line: 330, column: 143, scope: !11075)
!11087 = !DILocation(line: 329, column: 8, scope: !11062)
!11088 = !DILocation(line: 336, column: 26, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11075, file: !10841, line: 331, column: 5)
!11090 = !DILocation(line: 336, column: 100, scope: !11089)
!11091 = !DILocation(line: 337, column: 24, scope: !11089)
!11092 = !DILocation(line: 337, column: 61, scope: !11089)
!11093 = !DILocation(line: 341, column: 7, scope: !11089)
!11094 = !DILocation(line: 345, column: 27, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11062, file: !10841, line: 345, column: 8)
!11096 = !DILocation(line: 342, column: 5, scope: !11089)
!11097 = !DILocation(line: 345, column: 49, scope: !11095)
!11098 = !DILocation(line: 345, column: 71, scope: !11095)
!11099 = !DILocation(line: 345, column: 94, scope: !11095)
!11100 = !DILocation(line: 345, column: 113, scope: !11095)
!11101 = !DILocation(line: 345, column: 132, scope: !11095)
!11102 = !DILocation(line: 345, column: 162, scope: !11095)
!11103 = !DILocation(line: 346, column: 49, scope: !11095)
!11104 = !DILocation(line: 346, column: 71, scope: !11095)
!11105 = !DILocation(line: 346, column: 94, scope: !11095)
!11106 = !DILocation(line: 346, column: 113, scope: !11095)
!11107 = !DILocation(line: 346, column: 132, scope: !11095)
!11108 = !DILocation(line: 345, column: 8, scope: !11062)
!11109 = !DILocation(line: 354, column: 26, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11095, file: !10841, line: 347, column: 5)
!11111 = !DILocation(line: 354, column: 100, scope: !11110)
!11112 = !DILocation(line: 355, column: 24, scope: !11110)
!11113 = !DILocation(line: 355, column: 61, scope: !11110)
!11114 = !DILocation(line: 360, column: 7, scope: !11110)
!11115 = !DILocation(line: 363, column: 7, scope: !11110)
!11116 = !DILocation(line: 367, column: 26, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11062, file: !10841, line: 367, column: 8)
!11118 = !DILocation(line: 364, column: 5, scope: !11110)
!11119 = !DILocation(line: 367, column: 48, scope: !11117)
!11120 = !DILocation(line: 367, column: 73, scope: !11117)
!11121 = !DILocation(line: 367, column: 99, scope: !11117)
!11122 = !DILocation(line: 367, column: 118, scope: !11117)
!11123 = !DILocation(line: 367, column: 138, scope: !11117)
!11124 = !DILocation(line: 367, column: 8, scope: !11062)
!11125 = !DILocation(line: 372, column: 26, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11117, file: !10841, line: 368, column: 5)
!11127 = !DILocation(line: 373, column: 24, scope: !11126)
!11128 = !DILocation(line: 373, column: 61, scope: !11126)
!11129 = !DILocation(line: 377, column: 7, scope: !11126)
!11130 = !DILocation(line: 381, column: 24, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11062, file: !10841, line: 381, column: 8)
!11132 = !DILocation(line: 378, column: 5, scope: !11126)
!11133 = !DILocation(line: 381, column: 45, scope: !11131)
!11134 = !DILocation(line: 381, column: 69, scope: !11131)
!11135 = !DILocation(line: 381, column: 8, scope: !11062)
!11136 = !DILocation(line: 390, column: 7, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11131, file: !10841, line: 382, column: 5)
!11138 = !DILocation(line: 391, column: 5, scope: !11137)
!11139 = !DILocation(line: 394, column: 5, scope: !11062)
!11140 = !DILocation(line: 396, column: 17, scope: !11062)
!11141 = !DILocation(line: 398, column: 5, scope: !11062)
!11142 = !DILocation(line: 398, column: 11, scope: !11062)
!11143 = !DILocation(line: 398, column: 51, scope: !11062)
!11144 = !DILocation(line: 400, column: 11, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11146, file: !10841, line: 400, column: 10)
!11146 = distinct !DILexicalBlock(scope: !11062, file: !10841, line: 399, column: 5)
!11147 = !DILocation(line: 400, column: 25, scope: !11145)
!11148 = !DILocation(line: 400, column: 39, scope: !11145)
!11149 = !DILocation(line: 400, column: 10, scope: !11146)
!11150 = distinct !{!11150, !11141, !11151}
!11151 = !DILocation(line: 405, column: 5, scope: !11062)
!11152 = !DILocation(line: 411, column: 17, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !10840, file: !10841, line: 411, column: 6)
!11154 = !DILocation(line: 411, column: 6, scope: !10840)
!11155 = !DILocation(line: 414, column: 5, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11153, file: !10841, line: 412, column: 3)
!11157 = !DILocation(line: 416, column: 17, scope: !11156)
!11158 = !DILocation(line: 418, column: 5, scope: !11156)
!11159 = !DILocation(line: 418, column: 11, scope: !11156)
!11160 = !DILocation(line: 420, column: 11, scope: !11161)
!11161 = distinct !DILexicalBlock(scope: !11162, file: !10841, line: 420, column: 10)
!11162 = distinct !DILexicalBlock(scope: !11156, file: !10841, line: 419, column: 5)
!11163 = !DILocation(line: 420, column: 25, scope: !11161)
!11164 = !DILocation(line: 420, column: 39, scope: !11161)
!11165 = !DILocation(line: 420, column: 10, scope: !11162)
!11166 = distinct !{!11166, !11158, !11167}
!11167 = !DILocation(line: 425, column: 5, scope: !11156)
!11168 = !DILocation(line: 432, column: 27, scope: !11169)
!11169 = distinct !DILexicalBlock(scope: !11156, file: !10841, line: 432, column: 8)
!11170 = !DILocation(line: 432, column: 49, scope: !11169)
!11171 = !DILocation(line: 432, column: 71, scope: !11169)
!11172 = !DILocation(line: 432, column: 94, scope: !11169)
!11173 = !DILocation(line: 432, column: 113, scope: !11169)
!11174 = !DILocation(line: 432, column: 132, scope: !11169)
!11175 = !DILocation(line: 432, column: 162, scope: !11169)
!11176 = !DILocation(line: 433, column: 49, scope: !11169)
!11177 = !DILocation(line: 433, column: 71, scope: !11169)
!11178 = !DILocation(line: 433, column: 94, scope: !11169)
!11179 = !DILocation(line: 433, column: 113, scope: !11169)
!11180 = !DILocation(line: 433, column: 132, scope: !11169)
!11181 = !DILocation(line: 432, column: 8, scope: !11156)
!11182 = !DILocation(line: 441, column: 26, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11169, file: !10841, line: 434, column: 5)
!11184 = !DILocation(line: 441, column: 100, scope: !11183)
!11185 = !DILocation(line: 445, column: 7, scope: !11183)
!11186 = !DILocation(line: 448, column: 7, scope: !11183)
!11187 = !DILocation(line: 453, column: 26, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11156, file: !10841, line: 453, column: 8)
!11189 = !DILocation(line: 449, column: 5, scope: !11183)
!11190 = !DILocation(line: 453, column: 48, scope: !11188)
!11191 = !DILocation(line: 453, column: 71, scope: !11188)
!11192 = !DILocation(line: 453, column: 95, scope: !11188)
!11193 = !DILocation(line: 453, column: 114, scope: !11188)
!11194 = !DILocation(line: 453, column: 134, scope: !11188)
!11195 = !DILocation(line: 453, column: 8, scope: !11156)
!11196 = !DILocation(line: 458, column: 24, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11188, file: !10841, line: 454, column: 5)
!11198 = !DILocation(line: 458, column: 61, scope: !11197)
!11199 = !DILocation(line: 462, column: 7, scope: !11197)
!11200 = !DILocation(line: 463, column: 5, scope: !11197)
!11201 = !DILocation(line: 466, column: 5, scope: !11156)
!11202 = !DILocation(line: 468, column: 17, scope: !11156)
!11203 = !DILocation(line: 470, column: 5, scope: !11156)
!11204 = !DILocation(line: 470, column: 11, scope: !11156)
!11205 = !DILocation(line: 470, column: 39, scope: !11156)
!11206 = !DILocation(line: 472, column: 11, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11208, file: !10841, line: 472, column: 10)
!11208 = distinct !DILexicalBlock(scope: !11156, file: !10841, line: 471, column: 5)
!11209 = !DILocation(line: 472, column: 25, scope: !11207)
!11210 = !DILocation(line: 472, column: 39, scope: !11207)
!11211 = !DILocation(line: 472, column: 10, scope: !11208)
!11212 = distinct !{!11212, !11203, !11213}
!11213 = !DILocation(line: 477, column: 5, scope: !11156)
!11214 = !DILocation(line: 480, column: 1, scope: !10840)
!11215 = !DISubprogram(name: "HAL_GetTick", scope: !11216, file: !11216, line: 234, type: !6248, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!11216 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11217 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKConfig", scope: !10841, file: !10841, line: 489, type: !11218, scopeLine: 490, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !11220)
!11218 = !DISubroutineType(types: !11219)
!11219 = !{null, !10845}
!11220 = !{!11221, !11222}
!11221 = !DILocalVariable(name: "PeriphClkInit", arg: 1, scope: !11217, file: !10841, line: 489, type: !10845)
!11222 = !DILocalVariable(name: "tempreg", scope: !11217, file: !10841, line: 491, type: !162)
!11223 = !DILocation(line: 0, scope: !11217)
!11224 = !DILocation(line: 494, column: 18, scope: !11217)
!11225 = !DILocation(line: 494, column: 39, scope: !11217)
!11226 = !DILocation(line: 502, column: 52, scope: !11217)
!11227 = !DILocation(line: 502, column: 63, scope: !11217)
!11228 = !DILocation(line: 502, column: 25, scope: !11217)
!11229 = !DILocation(line: 502, column: 33, scope: !11217)
!11230 = !DILocation(line: 503, column: 52, scope: !11217)
!11231 = !DILocation(line: 503, column: 89, scope: !11217)
!11232 = !DILocation(line: 503, column: 25, scope: !11217)
!11233 = !DILocation(line: 503, column: 33, scope: !11217)
!11234 = !DILocation(line: 504, column: 54, scope: !11217)
!11235 = !DILocation(line: 504, column: 128, scope: !11217)
!11236 = !DILocation(line: 504, column: 25, scope: !11217)
!11237 = !DILocation(line: 504, column: 33, scope: !11217)
!11238 = !DILocation(line: 505, column: 52, scope: !11217)
!11239 = !DILocation(line: 505, column: 89, scope: !11217)
!11240 = !DILocation(line: 505, column: 25, scope: !11217)
!11241 = !DILocation(line: 505, column: 33, scope: !11217)
!11242 = !DILocation(line: 506, column: 52, scope: !11217)
!11243 = !DILocation(line: 506, column: 89, scope: !11217)
!11244 = !DILocation(line: 506, column: 25, scope: !11217)
!11245 = !DILocation(line: 506, column: 33, scope: !11217)
!11246 = !DILocation(line: 508, column: 52, scope: !11217)
!11247 = !DILocation(line: 508, column: 63, scope: !11217)
!11248 = !DILocation(line: 508, column: 25, scope: !11217)
!11249 = !DILocation(line: 508, column: 33, scope: !11217)
!11250 = !DILocation(line: 509, column: 52, scope: !11217)
!11251 = !DILocation(line: 509, column: 89, scope: !11217)
!11252 = !DILocation(line: 509, column: 25, scope: !11217)
!11253 = !DILocation(line: 509, column: 33, scope: !11217)
!11254 = !DILocation(line: 510, column: 54, scope: !11217)
!11255 = !DILocation(line: 510, column: 128, scope: !11217)
!11256 = !DILocation(line: 510, column: 25, scope: !11217)
!11257 = !DILocation(line: 510, column: 33, scope: !11217)
!11258 = !DILocation(line: 511, column: 52, scope: !11217)
!11259 = !DILocation(line: 511, column: 89, scope: !11217)
!11260 = !DILocation(line: 511, column: 25, scope: !11217)
!11261 = !DILocation(line: 511, column: 33, scope: !11217)
!11262 = !DILocation(line: 513, column: 48, scope: !11217)
!11263 = !DILocation(line: 513, column: 56, scope: !11217)
!11264 = !DILocation(line: 513, column: 18, scope: !11217)
!11265 = !DILocation(line: 513, column: 29, scope: !11217)
!11266 = !DILocation(line: 514, column: 48, scope: !11217)
!11267 = !DILocation(line: 514, column: 82, scope: !11217)
!11268 = !DILocation(line: 514, column: 18, scope: !11217)
!11269 = !DILocation(line: 514, column: 29, scope: !11217)
!11270 = !DILocation(line: 517, column: 39, scope: !11217)
!11271 = !DILocation(line: 517, column: 18, scope: !11217)
!11272 = !DILocation(line: 517, column: 37, scope: !11217)
!11273 = !DILocation(line: 520, column: 39, scope: !11217)
!11274 = !DILocation(line: 520, column: 18, scope: !11217)
!11275 = !DILocation(line: 520, column: 37, scope: !11217)
!11276 = !DILocation(line: 523, column: 42, scope: !11217)
!11277 = !DILocation(line: 523, column: 18, scope: !11217)
!11278 = !DILocation(line: 523, column: 40, scope: !11217)
!11279 = !DILocation(line: 526, column: 42, scope: !11217)
!11280 = !DILocation(line: 526, column: 18, scope: !11217)
!11281 = !DILocation(line: 526, column: 40, scope: !11217)
!11282 = !DILocation(line: 529, column: 19, scope: !11217)
!11283 = !DILocation(line: 529, column: 24, scope: !11217)
!11284 = !DILocation(line: 530, column: 67, scope: !11217)
!11285 = !DILocation(line: 530, column: 72, scope: !11217)
!11286 = !DILocation(line: 530, column: 59, scope: !11217)
!11287 = !DILocation(line: 530, column: 18, scope: !11217)
!11288 = !DILocation(line: 530, column: 36, scope: !11217)
!11289 = !DILocation(line: 533, column: 38, scope: !11217)
!11290 = !DILocation(line: 533, column: 18, scope: !11217)
!11291 = !DILocation(line: 533, column: 36, scope: !11217)
!11292 = !DILocation(line: 536, column: 42, scope: !11217)
!11293 = !DILocation(line: 536, column: 18, scope: !11217)
!11294 = !DILocation(line: 536, column: 40, scope: !11217)
!11295 = !DILocation(line: 539, column: 40, scope: !11217)
!11296 = !DILocation(line: 539, column: 18, scope: !11217)
!11297 = !DILocation(line: 539, column: 38, scope: !11217)
!11298 = !DILocation(line: 542, column: 39, scope: !11217)
!11299 = !DILocation(line: 542, column: 18, scope: !11217)
!11300 = !DILocation(line: 542, column: 37, scope: !11217)
!11301 = !DILocation(line: 545, column: 40, scope: !11217)
!11302 = !DILocation(line: 545, column: 18, scope: !11217)
!11303 = !DILocation(line: 545, column: 38, scope: !11217)
!11304 = !DILocation(line: 548, column: 13, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11217, file: !10841, line: 548, column: 7)
!11306 = !DILocation(line: 548, column: 7, scope: !11217)
!11307 = !DILocation(line: 550, column: 20, scope: !11308)
!11308 = distinct !DILexicalBlock(scope: !11305, file: !10841, line: 549, column: 3)
!11309 = !DILocation(line: 550, column: 37, scope: !11308)
!11310 = !DILocation(line: 556, column: 1, scope: !11217)
!11311 = distinct !DISubprogram(name: "HAL_RCCEx_GetPeriphCLKFreq", scope: !10841, file: !10841, line: 569, type: !7174, scopeLine: 570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !11312)
!11312 = !{!11313, !11314, !11315, !11316, !11317, !11318, !11319}
!11313 = !DILocalVariable(name: "PeriphClk", arg: 1, scope: !11311, file: !10841, line: 569, type: !162)
!11314 = !DILocalVariable(name: "tmpreg1", scope: !11311, file: !10841, line: 571, type: !162)
!11315 = !DILocalVariable(name: "frequency", scope: !11311, file: !10841, line: 573, type: !162)
!11316 = !DILocalVariable(name: "vcoinput", scope: !11311, file: !10841, line: 575, type: !162)
!11317 = !DILocalVariable(name: "saiclocksource", scope: !11311, file: !10841, line: 577, type: !162)
!11318 = !DILocalVariable(name: "srcclk", scope: !11311, file: !10841, line: 578, type: !162)
!11319 = !DILocalVariable(name: "vcooutput", scope: !11311, file: !10841, line: 580, type: !162)
!11320 = !DILocation(line: 0, scope: !11311)
!11321 = !DILocation(line: 581, column: 3, scope: !11311)
!11322 = !DILocation(line: 586, column: 29, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11324, file: !10841, line: 585, column: 5)
!11324 = distinct !DILexicalBlock(scope: !11311, file: !10841, line: 582, column: 3)
!11325 = !DILocation(line: 588, column: 7, scope: !11323)
!11326 = !DILocation(line: 594, column: 20, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11328, file: !10841, line: 594, column: 14)
!11328 = distinct !DILexicalBlock(scope: !11329, file: !10841, line: 591, column: 9)
!11329 = distinct !DILexicalBlock(scope: !11323, file: !10841, line: 589, column: 7)
!11330 = !DILocation(line: 0, scope: !11327)
!11331 = !DILocation(line: 606, column: 27, scope: !11328)
!11332 = !DILocation(line: 606, column: 64, scope: !11328)
!11333 = !DILocation(line: 607, column: 42, scope: !11328)
!11334 = !DILocation(line: 607, column: 79, scope: !11328)
!11335 = !DILocation(line: 607, column: 33, scope: !11328)
!11336 = !DILocation(line: 607, column: 86, scope: !11328)
!11337 = !DILocation(line: 610, column: 29, scope: !11328)
!11338 = !DILocation(line: 610, column: 63, scope: !11328)
!11339 = !DILocation(line: 610, column: 70, scope: !11328)
!11340 = !DILocation(line: 611, column: 32, scope: !11328)
!11341 = !DILocation(line: 612, column: 11, scope: !11328)
!11342 = !DILocation(line: 619, column: 20, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11344, file: !10841, line: 619, column: 14)
!11344 = distinct !DILexicalBlock(scope: !11329, file: !10841, line: 616, column: 9)
!11345 = !DILocation(line: 0, scope: !11343)
!11346 = !DILocation(line: 632, column: 27, scope: !11344)
!11347 = !DILocation(line: 632, column: 64, scope: !11344)
!11348 = !DILocation(line: 633, column: 42, scope: !11344)
!11349 = !DILocation(line: 633, column: 79, scope: !11344)
!11350 = !DILocation(line: 633, column: 33, scope: !11344)
!11351 = !DILocation(line: 633, column: 86, scope: !11344)
!11352 = !DILocation(line: 636, column: 28, scope: !11344)
!11353 = !DILocation(line: 636, column: 36, scope: !11344)
!11354 = !DILocation(line: 636, column: 62, scope: !11344)
!11355 = !DILocation(line: 637, column: 32, scope: !11344)
!11356 = !DILocation(line: 638, column: 11, scope: !11344)
!11357 = !DILocation(line: 645, column: 20, scope: !11358)
!11358 = distinct !DILexicalBlock(scope: !11359, file: !10841, line: 645, column: 14)
!11359 = distinct !DILexicalBlock(scope: !11329, file: !10841, line: 642, column: 9)
!11360 = !DILocation(line: 0, scope: !11358)
!11361 = !DILocation(line: 658, column: 27, scope: !11359)
!11362 = !DILocation(line: 658, column: 55, scope: !11359)
!11363 = !DILocation(line: 659, column: 42, scope: !11359)
!11364 = !DILocation(line: 659, column: 70, scope: !11359)
!11365 = !DILocation(line: 659, column: 33, scope: !11359)
!11366 = !DILocation(line: 659, column: 77, scope: !11359)
!11367 = !DILocation(line: 660, column: 11, scope: !11359)
!11368 = !DILocation(line: 665, column: 11, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11329, file: !10841, line: 663, column: 9)
!11370 = !DILocation(line: 669, column: 20, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11372, file: !10841, line: 669, column: 14)
!11372 = distinct !DILexicalBlock(scope: !11329, file: !10841, line: 668, column: 9)
!11373 = !DILocation(line: 691, column: 16, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11324, file: !10841, line: 689, column: 5)
!11375 = !DILocation(line: 692, column: 7, scope: !11374)
!11376 = !DILocation(line: 706, column: 20, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11378, file: !10841, line: 706, column: 14)
!11378 = distinct !DILexicalBlock(scope: !11379, file: !10841, line: 703, column: 9)
!11379 = distinct !DILexicalBlock(scope: !11374, file: !10841, line: 693, column: 7)
!11380 = !DILocation(line: 0, scope: !11377)
!11381 = !DILocation(line: 718, column: 53, scope: !11378)
!11382 = !DILocation(line: 718, column: 90, scope: !11378)
!11383 = !DILocation(line: 718, column: 43, scope: !11378)
!11384 = !DILocation(line: 720, column: 53, scope: !11378)
!11385 = !DILocation(line: 720, column: 90, scope: !11378)
!11386 = !DILocation(line: 720, column: 44, scope: !11378)
!11387 = !DILocation(line: 721, column: 11, scope: !11378)
!11388 = !DILocation(line: 728, column: 20, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11390, file: !10841, line: 728, column: 14)
!11390 = distinct !DILexicalBlock(scope: !11379, file: !10841, line: 725, column: 9)
!11391 = !DILocation(line: 0, scope: !11389)
!11392 = !DILocation(line: 740, column: 53, scope: !11390)
!11393 = !DILocation(line: 740, column: 81, scope: !11390)
!11394 = !DILocation(line: 740, column: 43, scope: !11390)
!11395 = !DILocation(line: 742, column: 53, scope: !11390)
!11396 = !DILocation(line: 742, column: 81, scope: !11390)
!11397 = !DILocation(line: 742, column: 44, scope: !11390)
!11398 = !DILocation(line: 743, column: 11, scope: !11390)
!11399 = !DILocation(line: 748, column: 20, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11401, file: !10841, line: 748, column: 14)
!11401 = distinct !DILexicalBlock(scope: !11379, file: !10841, line: 747, column: 9)
!11402 = !DILocation(line: 770, column: 16, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11324, file: !10841, line: 768, column: 5)
!11404 = !DILocation(line: 771, column: 7, scope: !11403)
!11405 = !DILocation(line: 785, column: 20, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11407, file: !10841, line: 785, column: 14)
!11407 = distinct !DILexicalBlock(scope: !11408, file: !10841, line: 782, column: 9)
!11408 = distinct !DILexicalBlock(scope: !11403, file: !10841, line: 772, column: 7)
!11409 = !DILocation(line: 0, scope: !11406)
!11410 = !DILocation(line: 797, column: 53, scope: !11407)
!11411 = !DILocation(line: 797, column: 90, scope: !11407)
!11412 = !DILocation(line: 797, column: 43, scope: !11407)
!11413 = !DILocation(line: 799, column: 53, scope: !11407)
!11414 = !DILocation(line: 799, column: 90, scope: !11407)
!11415 = !DILocation(line: 799, column: 44, scope: !11407)
!11416 = !DILocation(line: 800, column: 11, scope: !11407)
!11417 = !DILocation(line: 807, column: 20, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11419, file: !10841, line: 807, column: 14)
!11419 = distinct !DILexicalBlock(scope: !11408, file: !10841, line: 804, column: 9)
!11420 = !DILocation(line: 0, scope: !11418)
!11421 = !DILocation(line: 819, column: 53, scope: !11419)
!11422 = !DILocation(line: 819, column: 81, scope: !11419)
!11423 = !DILocation(line: 819, column: 43, scope: !11419)
!11424 = !DILocation(line: 821, column: 53, scope: !11419)
!11425 = !DILocation(line: 821, column: 81, scope: !11419)
!11426 = !DILocation(line: 821, column: 44, scope: !11419)
!11427 = !DILocation(line: 822, column: 11, scope: !11419)
!11428 = !DILocation(line: 827, column: 20, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11430, file: !10841, line: 827, column: 14)
!11430 = distinct !DILexicalBlock(scope: !11408, file: !10841, line: 826, column: 9)
!11431 = !DILocation(line: 847, column: 3, scope: !11311)
!11432 = distinct !DISubprogram(name: "HAL_RCCEx_SelectLSEMode", scope: !10841, file: !10841, line: 2766, type: !11433, scopeLine: 2767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !11435)
!11433 = !DISubroutineType(types: !11434)
!11434 = !{null, !133}
!11435 = !{!11436}
!11436 = !DILocalVariable(name: "Mode", arg: 1, scope: !11432, file: !10841, line: 2766, type: !133)
!11437 = !DILocation(line: 0, scope: !11432)
!11438 = !DILocation(line: 2770, column: 11, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11432, file: !10841, line: 2770, column: 6)
!11440 = !DILocation(line: 0, scope: !11439)
!11441 = !DILocation(line: 2770, column: 6, scope: !11432)
!11442 = !DILocation(line: 2778, column: 1, scope: !11432)
!11443 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLI2S", scope: !10841, file: !10841, line: 2803, type: !11444, scopeLine: 2804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !11447)
!11444 = !DISubroutineType(types: !11445)
!11445 = !{!10844, !11446}
!11446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10852, size: 32)
!11447 = !{!11448, !11449}
!11448 = !DILocalVariable(name: "PLLI2SInit", arg: 1, scope: !11443, file: !10841, line: 2803, type: !11446)
!11449 = !DILocalVariable(name: "tickstart", scope: !11443, file: !10841, line: 2805, type: !162)
!11450 = !DILocation(line: 0, scope: !11443)
!11451 = !DILocation(line: 2821, column: 3, scope: !11443)
!11452 = !DILocation(line: 2824, column: 15, scope: !11443)
!11453 = !DILocation(line: 2825, column: 3, scope: !11443)
!11454 = !DILocation(line: 2825, column: 9, scope: !11443)
!11455 = !DILocation(line: 2827, column: 9, scope: !11456)
!11456 = distinct !DILexicalBlock(scope: !11457, file: !10841, line: 2827, column: 8)
!11457 = distinct !DILexicalBlock(scope: !11443, file: !10841, line: 2826, column: 3)
!11458 = !DILocation(line: 2827, column: 23, scope: !11456)
!11459 = !DILocation(line: 2827, column: 37, scope: !11456)
!11460 = !DILocation(line: 2827, column: 8, scope: !11457)
!11461 = distinct !{!11461, !11453, !11462}
!11462 = !DILocation(line: 2832, column: 3, scope: !11443)
!11463 = !DILocation(line: 2840, column: 3, scope: !11443)
!11464 = !DILocation(line: 2866, column: 3, scope: !11443)
!11465 = !DILocation(line: 2869, column: 15, scope: !11443)
!11466 = !DILocation(line: 2870, column: 3, scope: !11443)
!11467 = !DILocation(line: 2870, column: 9, scope: !11443)
!11468 = !DILocation(line: 2870, column: 48, scope: !11443)
!11469 = !DILocation(line: 2872, column: 9, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11471, file: !10841, line: 2872, column: 8)
!11471 = distinct !DILexicalBlock(scope: !11443, file: !10841, line: 2871, column: 3)
!11472 = !DILocation(line: 2872, column: 23, scope: !11470)
!11473 = !DILocation(line: 2872, column: 37, scope: !11470)
!11474 = !DILocation(line: 2872, column: 8, scope: !11471)
!11475 = distinct !{!11475, !11466, !11476}
!11476 = !DILocation(line: 2877, column: 3, scope: !11443)
!11477 = !DILocation(line: 2880, column: 1, scope: !11443)
!11478 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLI2S", scope: !10841, file: !10841, line: 2886, type: !11479, scopeLine: 2887, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !11481)
!11479 = !DISubroutineType(types: !11480)
!11480 = !{!10844}
!11481 = !{!11482}
!11482 = !DILocalVariable(name: "tickstart", scope: !11478, file: !10841, line: 2888, type: !162)
!11483 = !DILocation(line: 2891, column: 3, scope: !11478)
!11484 = !DILocation(line: 2894, column: 15, scope: !11478)
!11485 = !DILocation(line: 0, scope: !11478)
!11486 = !DILocation(line: 2895, column: 3, scope: !11478)
!11487 = !DILocation(line: 2895, column: 9, scope: !11478)
!11488 = !DILocation(line: 2895, column: 45, scope: !11478)
!11489 = !DILocation(line: 2897, column: 9, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11491, file: !10841, line: 2897, column: 8)
!11491 = distinct !DILexicalBlock(scope: !11478, file: !10841, line: 2896, column: 3)
!11492 = !DILocation(line: 2897, column: 23, scope: !11490)
!11493 = !DILocation(line: 2897, column: 36, scope: !11490)
!11494 = !DILocation(line: 2897, column: 8, scope: !11491)
!11495 = distinct !{!11495, !11486, !11496}
!11496 = !DILocation(line: 2902, column: 3, scope: !11478)
!11497 = !DILocation(line: 2905, column: 1, scope: !11478)
!11498 = distinct !DISubprogram(name: "HAL_RCCEx_EnablePLLSAI", scope: !10841, file: !10841, line: 2916, type: !11499, scopeLine: 2917, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !11502)
!11499 = !DISubroutineType(types: !11500)
!11500 = !{!10844, !11501}
!11501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10861, size: 32)
!11502 = !{!11503, !11504}
!11503 = !DILocalVariable(name: "PLLSAIInit", arg: 1, scope: !11498, file: !10841, line: 2916, type: !11501)
!11504 = !DILocalVariable(name: "tickstart", scope: !11498, file: !10841, line: 2918, type: !162)
!11505 = !DILocation(line: 0, scope: !11498)
!11506 = !DILocation(line: 2934, column: 3, scope: !11498)
!11507 = !DILocation(line: 2937, column: 15, scope: !11498)
!11508 = !DILocation(line: 2938, column: 3, scope: !11498)
!11509 = !DILocation(line: 2938, column: 9, scope: !11498)
!11510 = !DILocation(line: 2940, column: 9, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11512, file: !10841, line: 2940, column: 8)
!11512 = distinct !DILexicalBlock(scope: !11498, file: !10841, line: 2939, column: 3)
!11513 = !DILocation(line: 2940, column: 23, scope: !11511)
!11514 = !DILocation(line: 2940, column: 37, scope: !11511)
!11515 = !DILocation(line: 2940, column: 8, scope: !11512)
!11516 = distinct !{!11516, !11508, !11517}
!11517 = !DILocation(line: 2945, column: 3, scope: !11498)
!11518 = !DILocation(line: 2953, column: 3, scope: !11498)
!11519 = !DILocation(line: 2970, column: 3, scope: !11498)
!11520 = !DILocation(line: 2973, column: 15, scope: !11498)
!11521 = !DILocation(line: 2974, column: 3, scope: !11498)
!11522 = !DILocation(line: 2974, column: 9, scope: !11498)
!11523 = !DILocation(line: 2974, column: 37, scope: !11498)
!11524 = !DILocation(line: 2976, column: 9, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !11526, file: !10841, line: 2976, column: 8)
!11526 = distinct !DILexicalBlock(scope: !11498, file: !10841, line: 2975, column: 3)
!11527 = !DILocation(line: 2976, column: 23, scope: !11525)
!11528 = !DILocation(line: 2976, column: 37, scope: !11525)
!11529 = !DILocation(line: 2976, column: 8, scope: !11526)
!11530 = distinct !{!11530, !11521, !11531}
!11531 = !DILocation(line: 2981, column: 3, scope: !11498)
!11532 = !DILocation(line: 2984, column: 1, scope: !11498)
!11533 = distinct !DISubprogram(name: "HAL_RCCEx_DisablePLLSAI", scope: !10841, file: !10841, line: 2990, type: !11479, scopeLine: 2991, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !11534)
!11534 = !{!11535}
!11535 = !DILocalVariable(name: "tickstart", scope: !11533, file: !10841, line: 2992, type: !162)
!11536 = !DILocation(line: 2995, column: 3, scope: !11533)
!11537 = !DILocation(line: 2998, column: 15, scope: !11533)
!11538 = !DILocation(line: 0, scope: !11533)
!11539 = !DILocation(line: 2999, column: 3, scope: !11533)
!11540 = !DILocation(line: 2999, column: 9, scope: !11533)
!11541 = !DILocation(line: 3001, column: 9, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11543, file: !10841, line: 3001, column: 8)
!11543 = distinct !DILexicalBlock(scope: !11533, file: !10841, line: 3000, column: 3)
!11544 = !DILocation(line: 3001, column: 23, scope: !11542)
!11545 = !DILocation(line: 3001, column: 36, scope: !11542)
!11546 = !DILocation(line: 3001, column: 8, scope: !11543)
!11547 = distinct !{!11547, !11539, !11548}
!11548 = !DILocation(line: 3006, column: 3, scope: !11533)
!11549 = !DILocation(line: 3009, column: 1, scope: !11533)
!11550 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10841, file: !10841, line: 3051, type: !6248, scopeLine: 3052, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !11551)
!11551 = !{!11552, !11553, !11554, !11555, !11556}
!11552 = !DILocalVariable(name: "pllm", scope: !11550, file: !10841, line: 3053, type: !162)
!11553 = !DILocalVariable(name: "pllvco", scope: !11550, file: !10841, line: 3054, type: !162)
!11554 = !DILocalVariable(name: "pllp", scope: !11550, file: !10841, line: 3055, type: !162)
!11555 = !DILocalVariable(name: "pllr", scope: !11550, file: !10841, line: 3056, type: !162)
!11556 = !DILocalVariable(name: "sysclockfreq", scope: !11550, file: !10841, line: 3057, type: !162)
!11557 = !DILocation(line: 0, scope: !11550)
!11558 = !DILocation(line: 3060, column: 16, scope: !11550)
!11559 = !DILocation(line: 3060, column: 3, scope: !11550)
!11560 = !DILocation(line: 3076, column: 19, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11562, file: !10841, line: 3073, column: 5)
!11562 = distinct !DILexicalBlock(scope: !11550, file: !10841, line: 3061, column: 3)
!11563 = !DILocation(line: 3076, column: 27, scope: !11561)
!11564 = !DILocation(line: 3077, column: 10, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11561, file: !10841, line: 3077, column: 10)
!11566 = !DILocation(line: 0, scope: !11565)
!11567 = !DILocation(line: 3087, column: 23, scope: !11561)
!11568 = !DILocation(line: 3087, column: 82, scope: !11561)
!11569 = !DILocation(line: 3089, column: 28, scope: !11561)
!11570 = !DILocation(line: 3090, column: 7, scope: !11561)
!11571 = !DILocation(line: 3096, column: 19, scope: !11572)
!11572 = distinct !DILexicalBlock(scope: !11562, file: !10841, line: 3093, column: 5)
!11573 = !DILocation(line: 3096, column: 27, scope: !11572)
!11574 = !DILocation(line: 3097, column: 10, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !11572, file: !10841, line: 3097, column: 10)
!11576 = !DILocation(line: 0, scope: !11575)
!11577 = !DILocation(line: 3107, column: 21, scope: !11572)
!11578 = !DILocation(line: 3107, column: 49, scope: !11572)
!11579 = !DILocation(line: 3109, column: 28, scope: !11572)
!11580 = !DILocation(line: 3110, column: 7, scope: !11572)
!11581 = !DILocation(line: 0, scope: !11562)
!11582 = !DILocation(line: 3118, column: 3, scope: !11550)
!11583 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10841, file: !10841, line: 3143, type: !11479, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !11584)
!11584 = !{!11585}
!11585 = !DILocalVariable(name: "tickstart", scope: !11583, file: !10841, line: 3145, type: !162)
!11586 = !DILocation(line: 3148, column: 15, scope: !11583)
!11587 = !DILocation(line: 0, scope: !11583)
!11588 = !DILocation(line: 3151, column: 3, scope: !11583)
!11589 = !DILocation(line: 3154, column: 3, scope: !11583)
!11590 = !DILocation(line: 3154, column: 10, scope: !11583)
!11591 = !DILocation(line: 3154, column: 43, scope: !11583)
!11592 = !DILocation(line: 3156, column: 10, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11594, file: !10841, line: 3156, column: 9)
!11594 = distinct !DILexicalBlock(scope: !11583, file: !10841, line: 3155, column: 3)
!11595 = !DILocation(line: 3156, column: 24, scope: !11593)
!11596 = !DILocation(line: 3156, column: 37, scope: !11593)
!11597 = !DILocation(line: 3156, column: 9, scope: !11594)
!11598 = distinct !{!11598, !11589, !11599}
!11599 = !DILocation(line: 3160, column: 3, scope: !11583)
!11600 = !DILocation(line: 3163, column: 3, scope: !11583)
!11601 = !DILocation(line: 3166, column: 15, scope: !11583)
!11602 = !DILocation(line: 3169, column: 3, scope: !11583)
!11603 = !DILocation(line: 3172, column: 3, scope: !11583)
!11604 = !DILocation(line: 3172, column: 10, scope: !11583)
!11605 = !DILocation(line: 3172, column: 44, scope: !11583)
!11606 = !DILocation(line: 3174, column: 24, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11608, file: !10841, line: 3174, column: 9)
!11608 = distinct !DILexicalBlock(scope: !11583, file: !10841, line: 3173, column: 3)
!11609 = !DILocation(line: 3174, column: 37, scope: !11607)
!11610 = !DILocation(line: 3174, column: 9, scope: !11608)
!11611 = distinct !{!11611, !11603, !11612}
!11612 = !DILocation(line: 3178, column: 3, scope: !11583)
!11613 = !DILocation(line: 3184, column: 3, scope: !11583)
!11614 = !DILocation(line: 3187, column: 3, scope: !11583)
!11615 = !DILocation(line: 3187, column: 10, scope: !11583)
!11616 = !DILocation(line: 3187, column: 43, scope: !11583)
!11617 = !DILocation(line: 3189, column: 24, scope: !11618)
!11618 = distinct !DILexicalBlock(scope: !11619, file: !10841, line: 3189, column: 9)
!11619 = distinct !DILexicalBlock(scope: !11583, file: !10841, line: 3188, column: 3)
!11620 = !DILocation(line: 3189, column: 37, scope: !11618)
!11621 = !DILocation(line: 3189, column: 9, scope: !11619)
!11622 = distinct !{!11622, !11614, !11623}
!11623 = !DILocation(line: 3193, column: 3, scope: !11583)
!11624 = !DILocation(line: 3199, column: 3, scope: !11583)
!11625 = !DILocation(line: 3202, column: 3, scope: !11583)
!11626 = !DILocation(line: 3202, column: 10, scope: !11583)
!11627 = !DILocation(line: 3202, column: 43, scope: !11583)
!11628 = !DILocation(line: 3204, column: 24, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11630, file: !10841, line: 3204, column: 9)
!11630 = distinct !DILexicalBlock(scope: !11583, file: !10841, line: 3203, column: 3)
!11631 = !DILocation(line: 3204, column: 37, scope: !11629)
!11632 = !DILocation(line: 3204, column: 9, scope: !11630)
!11633 = distinct !{!11633, !11625, !11634}
!11634 = !DILocation(line: 3208, column: 3, scope: !11583)
!11635 = !DILocation(line: 3215, column: 3, scope: !11583)
!11636 = !DILocation(line: 3218, column: 3, scope: !11583)
!11637 = !DILocation(line: 3218, column: 10, scope: !11583)
!11638 = !DILocation(line: 3218, column: 46, scope: !11583)
!11639 = !DILocation(line: 3220, column: 24, scope: !11640)
!11640 = distinct !DILexicalBlock(scope: !11641, file: !10841, line: 3220, column: 9)
!11641 = distinct !DILexicalBlock(scope: !11583, file: !10841, line: 3219, column: 3)
!11642 = !DILocation(line: 3220, column: 37, scope: !11640)
!11643 = !DILocation(line: 3220, column: 9, scope: !11641)
!11644 = distinct !{!11644, !11636, !11645}
!11645 = !DILocation(line: 3224, column: 3, scope: !11583)
!11646 = !DILocation(line: 3232, column: 3, scope: !11583)
!11647 = !DILocation(line: 3235, column: 3, scope: !11583)
!11648 = !DILocation(line: 3235, column: 10, scope: !11583)
!11649 = !DILocation(line: 3235, column: 46, scope: !11583)
!11650 = !DILocation(line: 3237, column: 10, scope: !11651)
!11651 = distinct !DILexicalBlock(scope: !11652, file: !10841, line: 3237, column: 9)
!11652 = distinct !DILexicalBlock(scope: !11583, file: !10841, line: 3236, column: 3)
!11653 = !DILocation(line: 3237, column: 24, scope: !11651)
!11654 = !DILocation(line: 3237, column: 37, scope: !11651)
!11655 = !DILocation(line: 3237, column: 9, scope: !11652)
!11656 = distinct !{!11656, !11647, !11657}
!11657 = !DILocation(line: 3241, column: 3, scope: !11583)
!11658 = !DILocation(line: 3247, column: 16, scope: !11583)
!11659 = !DILocation(line: 3257, column: 19, scope: !11583)
!11660 = !DILocation(line: 3270, column: 19, scope: !11583)
!11661 = !DILocation(line: 3274, column: 3, scope: !11583)
!11662 = !DILocation(line: 3277, column: 3, scope: !11583)
!11663 = !DILocation(line: 3281, column: 3, scope: !11583)
!11664 = !DILocation(line: 3285, column: 3, scope: !11583)
!11665 = !DILocation(line: 3288, column: 3, scope: !11583)
!11666 = !DILocation(line: 3292, column: 3, scope: !11583)
!11667 = !DILocation(line: 3296, column: 3, scope: !11583)
!11668 = !DILocation(line: 3299, column: 3, scope: !11583)
!11669 = !DILocation(line: 3302, column: 19, scope: !11583)
!11670 = !DILocation(line: 3305, column: 19, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11583, file: !10841, line: 3305, column: 6)
!11672 = !DILocation(line: 3305, column: 6, scope: !11671)
!11673 = !DILocation(line: 3305, column: 31, scope: !11671)
!11674 = !DILocation(line: 0, scope: !11671)
!11675 = !DILocation(line: 3313, column: 1, scope: !11583)
!11676 = !DISubprogram(name: "HAL_InitTick", scope: !11216, file: !11216, line: 223, type: !11677, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!11677 = !DISubroutineType(types: !11678)
!11678 = !{!10844, !162}
!11679 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10841, file: !10841, line: 3333, type: !11680, scopeLine: 3334, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !11704)
!11680 = !DISubroutineType(types: !11681)
!11681 = !{!10844, !11682}
!11682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11683, size: 32)
!11683 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11684, line: 70, baseType: !11685)
!11684 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11685 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11684, line: 49, size: 416, elements: !11686)
!11686 = !{!11687, !11688, !11689, !11690, !11691, !11692, !11693}
!11687 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11685, file: !11684, line: 51, baseType: !162, size: 32)
!11688 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11685, file: !11684, line: 54, baseType: !162, size: 32, offset: 32)
!11689 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11685, file: !11684, line: 57, baseType: !162, size: 32, offset: 64)
!11690 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11685, file: !11684, line: 60, baseType: !162, size: 32, offset: 96)
!11691 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11685, file: !11684, line: 63, baseType: !162, size: 32, offset: 128)
!11692 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11685, file: !11684, line: 66, baseType: !162, size: 32, offset: 160)
!11693 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11685, file: !11684, line: 69, baseType: !11694, size: 224, offset: 192)
!11694 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10847, line: 73, baseType: !11695)
!11695 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10847, line: 45, size: 224, elements: !11696)
!11696 = !{!11697, !11698, !11699, !11700, !11701, !11702, !11703}
!11697 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11695, file: !10847, line: 47, baseType: !162, size: 32)
!11698 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11695, file: !10847, line: 50, baseType: !162, size: 32, offset: 32)
!11699 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11695, file: !10847, line: 53, baseType: !162, size: 32, offset: 64)
!11700 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11695, file: !10847, line: 56, baseType: !162, size: 32, offset: 96)
!11701 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11695, file: !10847, line: 60, baseType: !162, size: 32, offset: 128)
!11702 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11695, file: !10847, line: 63, baseType: !162, size: 32, offset: 160)
!11703 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !11695, file: !10847, line: 68, baseType: !162, size: 32, offset: 192)
!11704 = !{!11705, !11706, !11707, !11708, !11712}
!11705 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11679, file: !10841, line: 3333, type: !11682)
!11706 = !DILocalVariable(name: "tickstart", scope: !11679, file: !10841, line: 3335, type: !162)
!11707 = !DILocalVariable(name: "pll_config", scope: !11679, file: !10841, line: 3335, type: !162)
!11708 = !DILocalVariable(name: "pwrclkchanged", scope: !11709, file: !10841, line: 3517, type: !11711)
!11709 = distinct !DILexicalBlock(scope: !11710, file: !10841, line: 3516, column: 3)
!11710 = distinct !DILexicalBlock(scope: !11679, file: !10841, line: 3515, column: 6)
!11711 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !807, line: 188, baseType: !2947)
!11712 = !DILocalVariable(name: "tmpreg", scope: !11713, file: !10841, line: 3526, type: !283)
!11713 = distinct !DILexicalBlock(scope: !11714, file: !10841, line: 3526, column: 7)
!11714 = distinct !DILexicalBlock(scope: !11715, file: !10841, line: 3525, column: 5)
!11715 = distinct !DILexicalBlock(scope: !11709, file: !10841, line: 3524, column: 8)
!11716 = !DILocation(line: 0, scope: !11679)
!11717 = !DILocation(line: 3338, column: 24, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11679, file: !10841, line: 3338, column: 6)
!11719 = !DILocation(line: 3338, column: 6, scope: !11679)
!11720 = !DILocation(line: 3346, column: 27, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11679, file: !10841, line: 3346, column: 6)
!11722 = !DILocation(line: 3346, column: 43, scope: !11721)
!11723 = !DILocation(line: 3346, column: 69, scope: !11721)
!11724 = !DILocation(line: 3346, column: 6, scope: !11679)
!11725 = !DILocation(line: 3352, column: 9, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11727, file: !10841, line: 3352, column: 8)
!11727 = distinct !DILexicalBlock(scope: !11721, file: !10841, line: 3347, column: 3)
!11728 = !DILocation(line: 3352, column: 39, scope: !11726)
!11729 = !DILocation(line: 3352, column: 128, scope: !11726)
!11730 = !DILocation(line: 3353, column: 9, scope: !11726)
!11731 = !DILocation(line: 3353, column: 39, scope: !11726)
!11732 = !DILocation(line: 3353, column: 60, scope: !11726)
!11733 = !DILocation(line: 3353, column: 70, scope: !11726)
!11734 = !DILocation(line: 3353, column: 78, scope: !11726)
!11735 = !DILocation(line: 3353, column: 100, scope: !11726)
!11736 = !DILocation(line: 3353, column: 128, scope: !11726)
!11737 = !DILocation(line: 3354, column: 9, scope: !11726)
!11738 = !DILocation(line: 3354, column: 39, scope: !11726)
!11739 = !DILocation(line: 3354, column: 61, scope: !11726)
!11740 = !DILocation(line: 3354, column: 71, scope: !11726)
!11741 = !DILocation(line: 3354, column: 79, scope: !11726)
!11742 = !DILocation(line: 3354, column: 101, scope: !11726)
!11743 = !DILocation(line: 3352, column: 8, scope: !11727)
!11744 = !DILocation(line: 3360, column: 11, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11746, file: !10841, line: 3360, column: 10)
!11746 = distinct !DILexicalBlock(scope: !11726, file: !10841, line: 3359, column: 5)
!11747 = !DILocation(line: 3360, column: 57, scope: !11745)
!11748 = !DILocation(line: 3360, column: 80, scope: !11745)
!11749 = !DILocation(line: 3360, column: 89, scope: !11745)
!11750 = !DILocation(line: 3360, column: 10, scope: !11746)
!11751 = !DILocation(line: 3368, column: 7, scope: !11752)
!11752 = distinct !DILexicalBlock(scope: !11753, file: !10841, line: 3368, column: 7)
!11753 = distinct !DILexicalBlock(scope: !11754, file: !10841, line: 3368, column: 7)
!11754 = distinct !DILexicalBlock(scope: !11726, file: !10841, line: 3366, column: 5)
!11755 = !DILocation(line: 3368, column: 7, scope: !11753)
!11756 = !DILocation(line: 3368, column: 7, scope: !11757)
!11757 = distinct !DILexicalBlock(scope: !11752, file: !10841, line: 3368, column: 7)
!11758 = !DILocation(line: 3368, column: 7, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11760, file: !10841, line: 3368, column: 7)
!11760 = distinct !DILexicalBlock(scope: !11752, file: !10841, line: 3368, column: 7)
!11761 = !DILocation(line: 3368, column: 7, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11760, file: !10841, line: 3368, column: 7)
!11763 = !DILocation(line: 0, scope: !11752)
!11764 = !DILocation(line: 3371, column: 30, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11754, file: !10841, line: 3371, column: 10)
!11766 = !DILocation(line: 3371, column: 40, scope: !11765)
!11767 = !DILocation(line: 0, scope: !11765)
!11768 = !DILocation(line: 3371, column: 10, scope: !11754)
!11769 = !DILocation(line: 3377, column: 15, scope: !11770)
!11770 = distinct !DILexicalBlock(scope: !11765, file: !10841, line: 3372, column: 7)
!11771 = !DILocation(line: 3377, column: 51, scope: !11770)
!11772 = !DILocation(line: 3377, column: 9, scope: !11770)
!11773 = !DILocation(line: 3379, column: 15, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11775, file: !10841, line: 3379, column: 14)
!11775 = distinct !DILexicalBlock(scope: !11770, file: !10841, line: 3378, column: 9)
!11776 = !DILocation(line: 3379, column: 29, scope: !11774)
!11777 = !DILocation(line: 3379, column: 43, scope: !11774)
!11778 = !DILocation(line: 3379, column: 14, scope: !11775)
!11779 = distinct !{!11779, !11772, !11780}
!11780 = !DILocation(line: 3383, column: 9, scope: !11770)
!11781 = !DILocation(line: 3391, column: 15, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11765, file: !10841, line: 3386, column: 7)
!11783 = !DILocation(line: 3391, column: 9, scope: !11782)
!11784 = !DILocation(line: 3393, column: 15, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11786, file: !10841, line: 3393, column: 14)
!11786 = distinct !DILexicalBlock(scope: !11782, file: !10841, line: 3392, column: 9)
!11787 = !DILocation(line: 3393, column: 29, scope: !11785)
!11788 = !DILocation(line: 3393, column: 43, scope: !11785)
!11789 = !DILocation(line: 3393, column: 14, scope: !11786)
!11790 = distinct !{!11790, !11783, !11791}
!11791 = !DILocation(line: 3397, column: 9, scope: !11782)
!11792 = !DILocation(line: 3402, column: 27, scope: !11793)
!11793 = distinct !DILexicalBlock(scope: !11679, file: !10841, line: 3402, column: 6)
!11794 = !DILocation(line: 3402, column: 43, scope: !11793)
!11795 = !DILocation(line: 3402, column: 69, scope: !11793)
!11796 = !DILocation(line: 3402, column: 6, scope: !11679)
!11797 = !DILocation(line: 3410, column: 9, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !11799, file: !10841, line: 3410, column: 8)
!11799 = distinct !DILexicalBlock(scope: !11793, file: !10841, line: 3403, column: 3)
!11800 = !DILocation(line: 3410, column: 39, scope: !11798)
!11801 = !DILocation(line: 3410, column: 128, scope: !11798)
!11802 = !DILocation(line: 3411, column: 9, scope: !11798)
!11803 = !DILocation(line: 3411, column: 39, scope: !11798)
!11804 = !DILocation(line: 3411, column: 60, scope: !11798)
!11805 = !DILocation(line: 3411, column: 70, scope: !11798)
!11806 = !DILocation(line: 3411, column: 78, scope: !11798)
!11807 = !DILocation(line: 3411, column: 100, scope: !11798)
!11808 = !DILocation(line: 3411, column: 128, scope: !11798)
!11809 = !DILocation(line: 3412, column: 9, scope: !11798)
!11810 = !DILocation(line: 3412, column: 39, scope: !11798)
!11811 = !DILocation(line: 3412, column: 61, scope: !11798)
!11812 = !DILocation(line: 3412, column: 71, scope: !11798)
!11813 = !DILocation(line: 3412, column: 79, scope: !11798)
!11814 = !DILocation(line: 3412, column: 101, scope: !11798)
!11815 = !DILocation(line: 3410, column: 8, scope: !11799)
!11816 = !DILocation(line: 3419, column: 11, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11818, file: !10841, line: 3419, column: 10)
!11818 = distinct !DILexicalBlock(scope: !11798, file: !10841, line: 3417, column: 5)
!11819 = !DILocation(line: 3419, column: 57, scope: !11817)
!11820 = !DILocation(line: 3419, column: 80, scope: !11817)
!11821 = !DILocation(line: 3419, column: 89, scope: !11817)
!11822 = !DILocation(line: 3419, column: 10, scope: !11818)
!11823 = !DILocation(line: 3433, column: 30, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11825, file: !10841, line: 3433, column: 10)
!11825 = distinct !DILexicalBlock(scope: !11798, file: !10841, line: 3431, column: 5)
!11826 = !DILocation(line: 3433, column: 39, scope: !11824)
!11827 = !DILocation(line: 3433, column: 10, scope: !11825)
!11828 = !DILocation(line: 3436, column: 9, scope: !11829)
!11829 = distinct !DILexicalBlock(scope: !11824, file: !10841, line: 3434, column: 7)
!11830 = !DILocation(line: 3439, column: 21, scope: !11829)
!11831 = !DILocation(line: 3442, column: 9, scope: !11829)
!11832 = !DILocation(line: 3442, column: 15, scope: !11829)
!11833 = !DILocation(line: 3442, column: 51, scope: !11829)
!11834 = !DILocation(line: 3444, column: 15, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11836, file: !10841, line: 3444, column: 14)
!11836 = distinct !DILexicalBlock(scope: !11829, file: !10841, line: 3443, column: 9)
!11837 = !DILocation(line: 3444, column: 29, scope: !11835)
!11838 = !DILocation(line: 3444, column: 43, scope: !11835)
!11839 = !DILocation(line: 3444, column: 14, scope: !11836)
!11840 = distinct !{!11840, !11831, !11841}
!11841 = !DILocation(line: 3448, column: 9, scope: !11829)
!11842 = !DILocation(line: 3456, column: 9, scope: !11843)
!11843 = distinct !DILexicalBlock(scope: !11824, file: !10841, line: 3454, column: 7)
!11844 = !DILocation(line: 3459, column: 21, scope: !11843)
!11845 = !DILocation(line: 3462, column: 9, scope: !11843)
!11846 = !DILocation(line: 3462, column: 15, scope: !11843)
!11847 = !DILocation(line: 3464, column: 15, scope: !11848)
!11848 = distinct !DILexicalBlock(scope: !11849, file: !10841, line: 3464, column: 14)
!11849 = distinct !DILexicalBlock(scope: !11843, file: !10841, line: 3463, column: 9)
!11850 = !DILocation(line: 3464, column: 29, scope: !11848)
!11851 = !DILocation(line: 3464, column: 43, scope: !11848)
!11852 = !DILocation(line: 3464, column: 14, scope: !11849)
!11853 = distinct !{!11853, !11845, !11854}
!11854 = !DILocation(line: 3468, column: 9, scope: !11843)
!11855 = !DILocation(line: 0, scope: !11798)
!11856 = !DILocation(line: 3473, column: 27, scope: !11857)
!11857 = distinct !DILexicalBlock(scope: !11679, file: !10841, line: 3473, column: 6)
!11858 = !DILocation(line: 3473, column: 43, scope: !11857)
!11859 = !DILocation(line: 3473, column: 69, scope: !11857)
!11860 = !DILocation(line: 3473, column: 6, scope: !11679)
!11861 = !DILocation(line: 3479, column: 28, scope: !11862)
!11862 = distinct !DILexicalBlock(scope: !11863, file: !10841, line: 3479, column: 8)
!11863 = distinct !DILexicalBlock(scope: !11857, file: !10841, line: 3474, column: 3)
!11864 = !DILocation(line: 3479, column: 37, scope: !11862)
!11865 = !DILocation(line: 3479, column: 8, scope: !11863)
!11866 = !DILocation(line: 3482, column: 7, scope: !11867)
!11867 = distinct !DILexicalBlock(scope: !11862, file: !10841, line: 3480, column: 5)
!11868 = !DILocation(line: 3485, column: 19, scope: !11867)
!11869 = !DILocation(line: 3488, column: 7, scope: !11867)
!11870 = !DILocation(line: 3488, column: 13, scope: !11867)
!11871 = !DILocation(line: 3488, column: 49, scope: !11867)
!11872 = !DILocation(line: 3490, column: 13, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11874, file: !10841, line: 3490, column: 12)
!11874 = distinct !DILexicalBlock(scope: !11867, file: !10841, line: 3489, column: 7)
!11875 = !DILocation(line: 3490, column: 27, scope: !11873)
!11876 = !DILocation(line: 3490, column: 41, scope: !11873)
!11877 = !DILocation(line: 3490, column: 12, scope: !11874)
!11878 = distinct !{!11878, !11869, !11879}
!11879 = !DILocation(line: 3494, column: 7, scope: !11867)
!11880 = !DILocation(line: 3499, column: 7, scope: !11881)
!11881 = distinct !DILexicalBlock(scope: !11862, file: !10841, line: 3497, column: 5)
!11882 = !DILocation(line: 3502, column: 19, scope: !11881)
!11883 = !DILocation(line: 3505, column: 7, scope: !11881)
!11884 = !DILocation(line: 3505, column: 13, scope: !11881)
!11885 = !DILocation(line: 3507, column: 13, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11887, file: !10841, line: 3507, column: 12)
!11887 = distinct !DILexicalBlock(scope: !11881, file: !10841, line: 3506, column: 7)
!11888 = !DILocation(line: 3507, column: 27, scope: !11886)
!11889 = !DILocation(line: 3507, column: 41, scope: !11886)
!11890 = !DILocation(line: 3507, column: 12, scope: !11887)
!11891 = distinct !{!11891, !11883, !11892}
!11892 = !DILocation(line: 3511, column: 7, scope: !11881)
!11893 = !DILocation(line: 3515, column: 27, scope: !11710)
!11894 = !DILocation(line: 3515, column: 43, scope: !11710)
!11895 = !DILocation(line: 3515, column: 69, scope: !11710)
!11896 = !DILocation(line: 3515, column: 6, scope: !11679)
!11897 = !DILocation(line: 0, scope: !11709)
!11898 = !DILocation(line: 3524, column: 8, scope: !11715)
!11899 = !DILocation(line: 3524, column: 8, scope: !11709)
!11900 = !DILocation(line: 3526, column: 7, scope: !11713)
!11901 = !DILocation(line: 3526, column: 7, scope: !11714)
!11902 = !DILocation(line: 3528, column: 5, scope: !11714)
!11903 = !DILocation(line: 3530, column: 8, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11709, file: !10841, line: 3530, column: 8)
!11905 = !DILocation(line: 3530, column: 8, scope: !11709)
!11906 = !DILocation(line: 3533, column: 7, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11904, file: !10841, line: 3531, column: 5)
!11908 = !DILocation(line: 3536, column: 19, scope: !11907)
!11909 = !DILocation(line: 3538, column: 7, scope: !11907)
!11910 = !DILocation(line: 3538, column: 13, scope: !11907)
!11911 = !DILocation(line: 3540, column: 13, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11913, file: !10841, line: 3540, column: 12)
!11913 = distinct !DILexicalBlock(scope: !11907, file: !10841, line: 3539, column: 7)
!11914 = !DILocation(line: 3540, column: 27, scope: !11912)
!11915 = !DILocation(line: 3540, column: 40, scope: !11912)
!11916 = !DILocation(line: 3540, column: 12, scope: !11913)
!11917 = distinct !{!11917, !11909, !11918}
!11918 = !DILocation(line: 3544, column: 7, scope: !11907)
!11919 = !DILocation(line: 3548, column: 5, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !11921, file: !10841, line: 3548, column: 5)
!11921 = distinct !DILexicalBlock(scope: !11709, file: !10841, line: 3548, column: 5)
!11922 = !DILocation(line: 3548, column: 5, scope: !11921)
!11923 = !DILocation(line: 3548, column: 5, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11920, file: !10841, line: 3548, column: 5)
!11925 = !DILocation(line: 3548, column: 5, scope: !11926)
!11926 = distinct !DILexicalBlock(scope: !11927, file: !10841, line: 3548, column: 5)
!11927 = distinct !DILexicalBlock(scope: !11920, file: !10841, line: 3548, column: 5)
!11928 = !DILocation(line: 3548, column: 5, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11927, file: !10841, line: 3548, column: 5)
!11930 = !DILocation(line: 0, scope: !11920)
!11931 = !DILocation(line: 3550, column: 28, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11709, file: !10841, line: 3550, column: 8)
!11933 = !DILocation(line: 3550, column: 38, scope: !11932)
!11934 = !DILocation(line: 0, scope: !11932)
!11935 = !DILocation(line: 3550, column: 8, scope: !11709)
!11936 = !DILocation(line: 3556, column: 13, scope: !11937)
!11937 = distinct !DILexicalBlock(scope: !11932, file: !10841, line: 3551, column: 5)
!11938 = !DILocation(line: 3556, column: 49, scope: !11937)
!11939 = !DILocation(line: 3556, column: 7, scope: !11937)
!11940 = !DILocation(line: 3558, column: 13, scope: !11941)
!11941 = distinct !DILexicalBlock(scope: !11942, file: !10841, line: 3558, column: 12)
!11942 = distinct !DILexicalBlock(scope: !11937, file: !10841, line: 3557, column: 7)
!11943 = !DILocation(line: 3558, column: 27, scope: !11941)
!11944 = !DILocation(line: 3558, column: 41, scope: !11941)
!11945 = !DILocation(line: 3558, column: 12, scope: !11942)
!11946 = distinct !{!11946, !11939, !11947}
!11947 = !DILocation(line: 3562, column: 7, scope: !11937)
!11948 = !DILocation(line: 3570, column: 13, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11932, file: !10841, line: 3565, column: 5)
!11950 = !DILocation(line: 3570, column: 7, scope: !11949)
!11951 = !DILocation(line: 3572, column: 13, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11953, file: !10841, line: 3572, column: 12)
!11953 = distinct !DILexicalBlock(scope: !11949, file: !10841, line: 3571, column: 7)
!11954 = !DILocation(line: 3572, column: 27, scope: !11952)
!11955 = !DILocation(line: 3572, column: 41, scope: !11952)
!11956 = !DILocation(line: 3572, column: 12, scope: !11953)
!11957 = distinct !{!11957, !11950, !11958}
!11958 = !DILocation(line: 3576, column: 7, scope: !11949)
!11959 = !DILocation(line: 3580, column: 8, scope: !11709)
!11960 = !DILocation(line: 3582, column: 7, scope: !11961)
!11961 = distinct !DILexicalBlock(scope: !11962, file: !10841, line: 3581, column: 5)
!11962 = distinct !DILexicalBlock(scope: !11709, file: !10841, line: 3580, column: 8)
!11963 = !DILocation(line: 3583, column: 5, scope: !11961)
!11964 = !DILocation(line: 3588, column: 31, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11679, file: !10841, line: 3588, column: 7)
!11966 = !DILocation(line: 3588, column: 41, scope: !11965)
!11967 = !DILocation(line: 3588, column: 7, scope: !11679)
!11968 = !DILocation(line: 3591, column: 8, scope: !11969)
!11969 = distinct !DILexicalBlock(scope: !11970, file: !10841, line: 3591, column: 8)
!11970 = distinct !DILexicalBlock(scope: !11965, file: !10841, line: 3589, column: 3)
!11971 = !DILocation(line: 3591, column: 38, scope: !11969)
!11972 = !DILocation(line: 3591, column: 8, scope: !11970)
!11973 = !DILocation(line: 3593, column: 44, scope: !11974)
!11974 = distinct !DILexicalBlock(scope: !11975, file: !10841, line: 3593, column: 10)
!11975 = distinct !DILexicalBlock(scope: !11969, file: !10841, line: 3592, column: 5)
!11976 = !DILocation(line: 0, scope: !11974)
!11977 = !DILocation(line: 3593, column: 10, scope: !11975)
!11978 = !DILocation(line: 3610, column: 15, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !11974, file: !10841, line: 3594, column: 7)
!11980 = !DILocation(line: 3610, column: 9, scope: !11979)
!11981 = !DILocation(line: 3612, column: 15, scope: !11982)
!11982 = distinct !DILexicalBlock(scope: !11983, file: !10841, line: 3612, column: 14)
!11983 = distinct !DILexicalBlock(scope: !11979, file: !10841, line: 3611, column: 9)
!11984 = !DILocation(line: 3612, column: 29, scope: !11982)
!11985 = !DILocation(line: 3612, column: 43, scope: !11982)
!11986 = !DILocation(line: 3612, column: 14, scope: !11983)
!11987 = distinct !{!11987, !11980, !11988}
!11988 = !DILocation(line: 3616, column: 9, scope: !11979)
!11989 = !DILocation(line: 3619, column: 9, scope: !11979)
!11990 = !DILocation(line: 3626, column: 9, scope: !11979)
!11991 = !DILocation(line: 3629, column: 21, scope: !11979)
!11992 = !DILocation(line: 3632, column: 9, scope: !11979)
!11993 = !DILocation(line: 3632, column: 15, scope: !11979)
!11994 = !DILocation(line: 3632, column: 51, scope: !11979)
!11995 = !DILocation(line: 3634, column: 15, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11997, file: !10841, line: 3634, column: 14)
!11997 = distinct !DILexicalBlock(scope: !11979, file: !10841, line: 3633, column: 9)
!11998 = !DILocation(line: 3634, column: 29, scope: !11996)
!11999 = !DILocation(line: 3634, column: 43, scope: !11996)
!12000 = !DILocation(line: 3634, column: 14, scope: !11997)
!12001 = distinct !{!12001, !11992, !12002}
!12002 = !DILocation(line: 3638, column: 9, scope: !11979)
!12003 = !DILocation(line: 3649, column: 15, scope: !12004)
!12004 = distinct !DILexicalBlock(scope: !11974, file: !10841, line: 3641, column: 7)
!12005 = !DILocation(line: 3649, column: 9, scope: !12004)
!12006 = !DILocation(line: 3651, column: 15, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !12008, file: !10841, line: 3651, column: 14)
!12008 = distinct !DILexicalBlock(scope: !12004, file: !10841, line: 3650, column: 9)
!12009 = !DILocation(line: 3651, column: 29, scope: !12007)
!12010 = !DILocation(line: 3651, column: 43, scope: !12007)
!12011 = !DILocation(line: 3651, column: 14, scope: !12008)
!12012 = distinct !{!12012, !12005, !12013}
!12013 = !DILocation(line: 3655, column: 9, scope: !12004)
!12014 = !DILocation(line: 3661, column: 44, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !12016, file: !10841, line: 3661, column: 10)
!12016 = distinct !DILexicalBlock(scope: !11969, file: !10841, line: 3659, column: 5)
!12017 = !DILocation(line: 3661, column: 10, scope: !12016)
!12018 = !DILocation(line: 3668, column: 27, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !12015, file: !10841, line: 3666, column: 7)
!12020 = !DILocation(line: 3671, column: 14, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12019, file: !10841, line: 3670, column: 13)
!12022 = !DILocation(line: 3671, column: 81, scope: !12021)
!12023 = !DILocation(line: 3671, column: 55, scope: !12021)
!12024 = !DILocation(line: 3671, column: 92, scope: !12021)
!12025 = !DILocation(line: 3672, column: 14, scope: !12021)
!12026 = !DILocation(line: 3672, column: 80, scope: !12021)
!12027 = !DILocation(line: 3672, column: 53, scope: !12021)
!12028 = !DILocation(line: 3672, column: 111, scope: !12021)
!12029 = !DILocation(line: 3673, column: 14, scope: !12021)
!12030 = !DILocation(line: 3673, column: 80, scope: !12021)
!12031 = !DILocation(line: 3673, column: 86, scope: !12021)
!12032 = !DILocation(line: 3673, column: 53, scope: !12021)
!12033 = !DILocation(line: 3673, column: 111, scope: !12021)
!12034 = !DILocation(line: 3674, column: 14, scope: !12021)
!12035 = !DILocation(line: 3674, column: 82, scope: !12021)
!12036 = !DILocation(line: 3674, column: 101, scope: !12021)
!12037 = !DILocation(line: 3674, column: 53, scope: !12021)
!12038 = !DILocation(line: 3674, column: 126, scope: !12021)
!12039 = !DILocation(line: 3675, column: 14, scope: !12021)
!12040 = !DILocation(line: 3675, column: 80, scope: !12021)
!12041 = !DILocation(line: 3675, column: 85, scope: !12021)
!12042 = !DILocation(line: 3675, column: 53, scope: !12021)
!12043 = !DILocation(line: 3675, column: 111, scope: !12021)
!12044 = !DILocation(line: 3676, column: 14, scope: !12021)
!12045 = !DILocation(line: 3676, column: 80, scope: !12021)
!12046 = !DILocation(line: 3676, column: 85, scope: !12021)
!12047 = !DILocation(line: 3676, column: 53, scope: !12021)
!12048 = !DILocation(line: 3670, column: 13, scope: !12019)
!12049 = !DILocation(line: 3691, column: 3, scope: !11679)
!12050 = !DILocation(line: 3692, column: 1, scope: !11679)
!12051 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10841, file: !10841, line: 3703, type: !12052, scopeLine: 3704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2937, retainedNodes: !12054)
!12052 = !DISubroutineType(types: !12053)
!12053 = !{null, !11682}
!12054 = !{!12055}
!12055 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !12051, file: !10841, line: 3703, type: !11682)
!12056 = !DILocation(line: 0, scope: !12051)
!12057 = !DILocation(line: 3706, column: 22, scope: !12051)
!12058 = !DILocation(line: 3706, column: 37, scope: !12051)
!12059 = !DILocation(line: 3709, column: 12, scope: !12060)
!12060 = distinct !DILexicalBlock(scope: !12051, file: !10841, line: 3709, column: 6)
!12061 = !DILocation(line: 3709, column: 15, scope: !12060)
!12062 = !DILocation(line: 3709, column: 31, scope: !12060)
!12063 = !DILocation(line: 3709, column: 6, scope: !12051)
!12064 = !DILocation(line: 3711, column: 24, scope: !12065)
!12065 = distinct !DILexicalBlock(scope: !12060, file: !10841, line: 3710, column: 3)
!12066 = !DILocation(line: 3711, column: 33, scope: !12065)
!12067 = !DILocation(line: 3712, column: 3, scope: !12065)
!12068 = !DILocation(line: 3713, column: 17, scope: !12069)
!12069 = distinct !DILexicalBlock(scope: !12060, file: !10841, line: 3713, column: 11)
!12070 = !DILocation(line: 3713, column: 20, scope: !12069)
!12071 = !DILocation(line: 3713, column: 35, scope: !12069)
!12072 = !DILocation(line: 0, scope: !12069)
!12073 = !DILocation(line: 3713, column: 11, scope: !12060)
!12074 = !DILocation(line: 3715, column: 33, scope: !12075)
!12075 = distinct !DILexicalBlock(scope: !12069, file: !10841, line: 3714, column: 3)
!12076 = !DILocation(line: 3716, column: 3, scope: !12075)
!12077 = !DILocation(line: 3719, column: 33, scope: !12078)
!12078 = distinct !DILexicalBlock(scope: !12069, file: !10841, line: 3718, column: 3)
!12079 = !DILocation(line: 3723, column: 12, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !12051, file: !10841, line: 3723, column: 6)
!12081 = !DILocation(line: 3723, column: 15, scope: !12080)
!12082 = !DILocation(line: 3729, column: 24, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !12080, file: !10841, line: 3728, column: 3)
!12084 = !DILocation(line: 3729, column: 33, scope: !12083)
!12085 = !DILocation(line: 3732, column: 61, scope: !12051)
!12086 = !DILocation(line: 3732, column: 81, scope: !12051)
!12087 = !DILocation(line: 3732, column: 22, scope: !12051)
!12088 = !DILocation(line: 3732, column: 42, scope: !12051)
!12089 = !DILocation(line: 3735, column: 12, scope: !12090)
!12090 = distinct !DILexicalBlock(scope: !12051, file: !10841, line: 3735, column: 6)
!12091 = !DILocation(line: 3735, column: 17, scope: !12090)
!12092 = !DILocation(line: 3735, column: 35, scope: !12090)
!12093 = !DILocation(line: 3735, column: 6, scope: !12051)
!12094 = !DILocation(line: 3737, column: 24, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !12090, file: !10841, line: 3736, column: 3)
!12096 = !DILocation(line: 3737, column: 33, scope: !12095)
!12097 = !DILocation(line: 3738, column: 3, scope: !12095)
!12098 = !DILocation(line: 3739, column: 17, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12090, file: !10841, line: 3739, column: 11)
!12100 = !DILocation(line: 3739, column: 22, scope: !12099)
!12101 = !DILocation(line: 3739, column: 39, scope: !12099)
!12102 = !DILocation(line: 0, scope: !12099)
!12103 = !DILocation(line: 3739, column: 11, scope: !12090)
!12104 = !DILocation(line: 3741, column: 33, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12099, file: !10841, line: 3740, column: 3)
!12106 = !DILocation(line: 3742, column: 3, scope: !12105)
!12107 = !DILocation(line: 3745, column: 33, scope: !12108)
!12108 = distinct !DILexicalBlock(scope: !12099, file: !10841, line: 3744, column: 3)
!12109 = !DILocation(line: 3749, column: 12, scope: !12110)
!12110 = distinct !DILexicalBlock(scope: !12051, file: !10841, line: 3749, column: 6)
!12111 = !DILocation(line: 3749, column: 16, scope: !12110)
!12112 = !DILocation(line: 3755, column: 24, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12110, file: !10841, line: 3754, column: 3)
!12114 = !DILocation(line: 3755, column: 33, scope: !12113)
!12115 = !DILocation(line: 3759, column: 12, scope: !12116)
!12116 = distinct !DILexicalBlock(scope: !12051, file: !10841, line: 3759, column: 6)
!12117 = !DILocation(line: 3759, column: 15, scope: !12116)
!12118 = !DILocation(line: 3759, column: 30, scope: !12116)
!12119 = !DILocation(line: 3759, column: 6, scope: !12051)
!12120 = !DILocation(line: 3765, column: 28, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !12116, file: !10841, line: 3764, column: 3)
!12122 = !DILocation(line: 3765, column: 37, scope: !12121)
!12123 = !DILocation(line: 3767, column: 54, scope: !12051)
!12124 = !DILocation(line: 3767, column: 62, scope: !12051)
!12125 = !DILocation(line: 3767, column: 26, scope: !12051)
!12126 = !DILocation(line: 3767, column: 36, scope: !12051)
!12127 = !DILocation(line: 3768, column: 49, scope: !12051)
!12128 = !DILocation(line: 3768, column: 57, scope: !12051)
!12129 = !DILocation(line: 3768, column: 26, scope: !12051)
!12130 = !DILocation(line: 3768, column: 31, scope: !12051)
!12131 = !DILocation(line: 3769, column: 50, scope: !12051)
!12132 = !DILocation(line: 3769, column: 78, scope: !12051)
!12133 = !DILocation(line: 3769, column: 26, scope: !12051)
!12134 = !DILocation(line: 3769, column: 31, scope: !12051)
!12135 = !DILocation(line: 3770, column: 52, scope: !12051)
!12136 = !DILocation(line: 3770, column: 102, scope: !12051)
!12137 = !DILocation(line: 3770, column: 109, scope: !12051)
!12138 = !DILocation(line: 3770, column: 26, scope: !12051)
!12139 = !DILocation(line: 3770, column: 31, scope: !12051)
!12140 = !DILocation(line: 3771, column: 50, scope: !12051)
!12141 = !DILocation(line: 3771, column: 78, scope: !12051)
!12142 = !DILocation(line: 3771, column: 26, scope: !12051)
!12143 = !DILocation(line: 3771, column: 31, scope: !12051)
!12144 = !DILocation(line: 3772, column: 50, scope: !12051)
!12145 = !DILocation(line: 3772, column: 78, scope: !12051)
!12146 = !DILocation(line: 3772, column: 26, scope: !12051)
!12147 = !DILocation(line: 3772, column: 31, scope: !12051)
!12148 = !DILocation(line: 3773, column: 1, scope: !12051)
!12149 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !12150, file: !12150, line: 257, type: !6258, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !12151)
!12150 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12151 = !{!12152}
!12152 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12149, file: !12150, line: 257, type: !162)
!12153 = !DILocation(line: 0, scope: !12149)
!12154 = !DILocation(line: 260, column: 3, scope: !12149)
!12155 = !DILocation(line: 261, column: 1, scope: !12149)
!12156 = distinct !DISubprogram(name: "LL_InitTick", scope: !12157, file: !12157, line: 260, type: !8862, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !12158)
!12157 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12158 = !{!12159, !12160}
!12159 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12156, file: !12157, line: 260, type: !162)
!12160 = !DILocalVariable(name: "Ticks", arg: 2, scope: !12156, file: !12157, line: 260, type: !162)
!12161 = !DILocation(line: 0, scope: !12156)
!12162 = !DILocation(line: 263, column: 46, scope: !12156)
!12163 = !DILocation(line: 263, column: 55, scope: !12156)
!12164 = !DILocation(line: 263, column: 18, scope: !12156)
!12165 = !DILocation(line: 264, column: 18, scope: !12156)
!12166 = !DILocation(line: 265, column: 18, scope: !12156)
!12167 = !DILocation(line: 267, column: 1, scope: !12156)
!12168 = distinct !DISubprogram(name: "LL_mDelay", scope: !12150, file: !12150, line: 273, type: !6258, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !12169)
!12169 = !{!12170, !12171}
!12170 = !DILocalVariable(name: "Delay", arg: 1, scope: !12168, file: !12150, line: 273, type: !162)
!12171 = !DILocalVariable(name: "tmp", scope: !12168, file: !12150, line: 275, type: !283)
!12172 = !DILocation(line: 0, scope: !12168)
!12173 = !DILocation(line: 275, column: 3, scope: !12168)
!12174 = !DILocation(line: 275, column: 18, scope: !12168)
!12175 = !DILocation(line: 275, column: 33, scope: !12168)
!12176 = !DILocation(line: 277, column: 10, scope: !12168)
!12177 = !DILocation(line: 280, column: 12, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12168, file: !12150, line: 280, column: 6)
!12179 = !DILocation(line: 285, column: 3, scope: !12168)
!12180 = !DILocation(line: 287, column: 18, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12182, file: !12150, line: 287, column: 8)
!12182 = distinct !DILexicalBlock(scope: !12168, file: !12150, line: 286, column: 3)
!12183 = !DILocation(line: 292, column: 1, scope: !12168)
!12184 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !12150, file: !12150, line: 323, type: !6258, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !12185)
!12185 = !{!12186}
!12186 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !12184, file: !12150, line: 323, type: !162)
!12187 = !DILocation(line: 0, scope: !12184)
!12188 = !DILocation(line: 326, column: 19, scope: !12184)
!12189 = !DILocation(line: 327, column: 1, scope: !12184)
!12190 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !12150, file: !12150, line: 338, type: !12191, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !12194)
!12191 = !DISubroutineType(types: !12192)
!12192 = !{!12193, !162}
!12193 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !807, line: 201, baseType: !806)
!12194 = !{!12195, !12196, !12197, !12198, !12199}
!12195 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !12190, file: !12150, line: 338, type: !162)
!12196 = !DILocalVariable(name: "timeout", scope: !12190, file: !12150, line: 340, type: !162)
!12197 = !DILocalVariable(name: "getlatency", scope: !12190, file: !12150, line: 341, type: !162)
!12198 = !DILocalVariable(name: "latency", scope: !12190, file: !12150, line: 342, type: !162)
!12199 = !DILocalVariable(name: "status", scope: !12190, file: !12150, line: 343, type: !12193)
!12200 = !DILocation(line: 0, scope: !12190)
!12201 = !DILocation(line: 347, column: 21, scope: !12202)
!12202 = distinct !DILexicalBlock(scope: !12190, file: !12150, line: 347, column: 6)
!12203 = !DILocation(line: 347, column: 6, scope: !12190)
!12204 = !DILocation(line: 353, column: 8, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12206, file: !12150, line: 353, column: 8)
!12206 = distinct !DILexicalBlock(scope: !12202, file: !12150, line: 352, column: 3)
!12207 = !DILocation(line: 353, column: 40, scope: !12205)
!12208 = !DILocation(line: 353, column: 8, scope: !12206)
!12209 = !DILocation(line: 356, column: 26, scope: !12210)
!12210 = distinct !DILexicalBlock(scope: !12211, file: !12150, line: 356, column: 10)
!12211 = distinct !DILexicalBlock(scope: !12205, file: !12150, line: 354, column: 5)
!12212 = !DILocation(line: 356, column: 55, scope: !12210)
!12213 = !DILocation(line: 362, column: 55, scope: !12214)
!12214 = distinct !DILexicalBlock(scope: !12211, file: !12150, line: 362, column: 10)
!12215 = !DILocation(line: 368, column: 55, scope: !12216)
!12216 = distinct !DILexicalBlock(scope: !12211, file: !12150, line: 368, column: 10)
!12217 = !DILocation(line: 374, column: 26, scope: !12218)
!12218 = distinct !DILexicalBlock(scope: !12211, file: !12150, line: 374, column: 10)
!12219 = !DILocation(line: 374, column: 55, scope: !12218)
!12220 = !DILocation(line: 380, column: 28, scope: !12221)
!12221 = distinct !DILexicalBlock(scope: !12222, file: !12150, line: 380, column: 12)
!12222 = distinct !DILexicalBlock(scope: !12218, file: !12150, line: 379, column: 7)
!12223 = !DILocation(line: 380, column: 57, scope: !12221)
!12224 = !DILocation(line: 387, column: 8, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12206, file: !12150, line: 387, column: 8)
!12226 = !DILocation(line: 387, column: 40, scope: !12225)
!12227 = !DILocation(line: 387, column: 8, scope: !12206)
!12228 = !DILocation(line: 390, column: 26, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12230, file: !12150, line: 390, column: 10)
!12230 = distinct !DILexicalBlock(scope: !12225, file: !12150, line: 388, column: 5)
!12231 = !DILocation(line: 390, column: 55, scope: !12229)
!12232 = !DILocation(line: 396, column: 26, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12230, file: !12150, line: 396, column: 10)
!12234 = !DILocation(line: 396, column: 55, scope: !12233)
!12235 = !DILocation(line: 402, column: 26, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12230, file: !12150, line: 402, column: 10)
!12237 = !DILocation(line: 402, column: 55, scope: !12236)
!12238 = !DILocation(line: 407, column: 26, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12230, file: !12150, line: 407, column: 10)
!12240 = !DILocation(line: 407, column: 55, scope: !12239)
!12241 = !DILocation(line: 413, column: 28, scope: !12242)
!12242 = distinct !DILexicalBlock(scope: !12243, file: !12150, line: 413, column: 12)
!12243 = distinct !DILexicalBlock(scope: !12239, file: !12150, line: 412, column: 7)
!12244 = !DILocation(line: 413, column: 57, scope: !12242)
!12245 = !DILocation(line: 0, scope: !12206)
!12246 = !DILocation(line: 420, column: 8, scope: !12247)
!12247 = distinct !DILexicalBlock(scope: !12206, file: !12150, line: 420, column: 8)
!12248 = !DILocation(line: 420, column: 40, scope: !12247)
!12249 = !DILocation(line: 420, column: 8, scope: !12206)
!12250 = !DILocation(line: 423, column: 26, scope: !12251)
!12251 = distinct !DILexicalBlock(scope: !12252, file: !12150, line: 423, column: 10)
!12252 = distinct !DILexicalBlock(scope: !12247, file: !12150, line: 421, column: 5)
!12253 = !DILocation(line: 423, column: 55, scope: !12251)
!12254 = !DILocation(line: 429, column: 26, scope: !12255)
!12255 = distinct !DILexicalBlock(scope: !12252, file: !12150, line: 429, column: 10)
!12256 = !DILocation(line: 429, column: 55, scope: !12255)
!12257 = !DILocation(line: 435, column: 28, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12259, file: !12150, line: 435, column: 12)
!12259 = distinct !DILexicalBlock(scope: !12255, file: !12150, line: 434, column: 7)
!12260 = !DILocation(line: 435, column: 57, scope: !12258)
!12261 = !DILocation(line: 444, column: 5, scope: !12206)
!12262 = !DILocation(line: 448, column: 5, scope: !12206)
!12263 = !DILocation(line: 451, column: 18, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12206, file: !12150, line: 449, column: 5)
!12265 = !DILocation(line: 452, column: 12, scope: !12264)
!12266 = !DILocation(line: 453, column: 26, scope: !12206)
!12267 = !DILocation(line: 453, column: 38, scope: !12206)
!12268 = !DILocation(line: 453, column: 5, scope: !12264)
!12269 = distinct !{!12269, !12262, !12270}
!12270 = !DILocation(line: 453, column: 54, scope: !12206)
!12271 = !DILocation(line: 0, scope: !12202)
!12272 = !DILocation(line: 464, column: 3, scope: !12190)
!12273 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !12274, file: !12274, line: 519, type: !6248, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !250)
!12274 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12275 = !DILocation(line: 521, column: 21, scope: !12273)
!12276 = !DILocation(line: 521, column: 3, scope: !12273)
!12277 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6014, file: !6014, line: 1543, type: !6258, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !12278)
!12278 = !{!12279}
!12279 = !DILocalVariable(name: "Latency", arg: 1, scope: !12277, file: !6014, line: 1543, type: !162)
!12280 = !DILocation(line: 0, scope: !12277)
!12281 = !DILocation(line: 1545, column: 3, scope: !12277)
!12282 = !DILocation(line: 1546, column: 1, scope: !12277)
!12283 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6014, file: !6014, line: 1569, type: !6248, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !250)
!12284 = !DILocation(line: 1571, column: 21, scope: !12283)
!12285 = !DILocation(line: 1571, column: 3, scope: !12283)
!12286 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !12150, file: !12150, line: 483, type: !12287, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !12303)
!12287 = !DISubroutineType(types: !12288)
!12288 = !{!12193, !12289, !12296}
!12289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12290, size: 32)
!12290 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !12157, line: 114, baseType: !12291)
!12291 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12157, line: 94, size: 96, elements: !12292)
!12292 = !{!12293, !12294, !12295}
!12293 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !12291, file: !12157, line: 96, baseType: !162, size: 32)
!12294 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !12291, file: !12157, line: 102, baseType: !162, size: 32, offset: 32)
!12295 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !12291, file: !12157, line: 109, baseType: !162, size: 32, offset: 64)
!12296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12297, size: 32)
!12297 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !12157, line: 139, baseType: !12298)
!12298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12157, line: 119, size: 96, elements: !12299)
!12299 = !{!12300, !12301, !12302}
!12300 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !12298, file: !12157, line: 121, baseType: !162, size: 32)
!12301 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !12298, file: !12157, line: 127, baseType: !162, size: 32, offset: 32)
!12302 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !12298, file: !12157, line: 133, baseType: !162, size: 32, offset: 64)
!12303 = !{!12304, !12305, !12306, !12307}
!12304 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !12286, file: !12150, line: 483, type: !12289)
!12305 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12286, file: !12150, line: 484, type: !12296)
!12306 = !DILocalVariable(name: "status", scope: !12286, file: !12150, line: 486, type: !12193)
!12307 = !DILocalVariable(name: "pllfreq", scope: !12286, file: !12150, line: 487, type: !162)
!12308 = !DILocation(line: 0, scope: !12286)
!12309 = !DILocation(line: 490, column: 6, scope: !12310)
!12310 = distinct !DILexicalBlock(scope: !12286, file: !12150, line: 490, column: 6)
!12311 = !DILocation(line: 490, column: 25, scope: !12310)
!12312 = !DILocation(line: 490, column: 6, scope: !12286)
!12313 = !DILocation(line: 493, column: 15, scope: !12314)
!12314 = distinct !DILexicalBlock(scope: !12310, file: !12150, line: 491, column: 3)
!12315 = !DILocation(line: 496, column: 8, scope: !12316)
!12316 = distinct !DILexicalBlock(scope: !12314, file: !12150, line: 496, column: 8)
!12317 = !DILocation(line: 496, column: 29, scope: !12316)
!12318 = !DILocation(line: 496, column: 8, scope: !12314)
!12319 = !DILocation(line: 498, column: 7, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12316, file: !12150, line: 497, column: 5)
!12321 = !DILocation(line: 499, column: 7, scope: !12320)
!12322 = !DILocation(line: 499, column: 14, scope: !12320)
!12323 = !DILocation(line: 499, column: 35, scope: !12320)
!12324 = distinct !{!12324, !12321, !12325}
!12325 = !DILocation(line: 502, column: 7, scope: !12320)
!12326 = !DILocation(line: 506, column: 76, scope: !12314)
!12327 = !DILocation(line: 506, column: 103, scope: !12314)
!12328 = !DILocation(line: 507, column: 54, scope: !12314)
!12329 = !DILocation(line: 506, column: 5, scope: !12314)
!12330 = !DILocation(line: 510, column: 14, scope: !12314)
!12331 = !DILocation(line: 511, column: 3, scope: !12314)
!12332 = !DILocation(line: 0, scope: !12310)
!12333 = !DILocation(line: 518, column: 3, scope: !12286)
!12334 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !12150, file: !12150, line: 642, type: !12335, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !12337)
!12335 = !DISubroutineType(types: !12336)
!12336 = !{!12193}
!12337 = !{!12338}
!12338 = !DILocalVariable(name: "status", scope: !12334, file: !12150, line: 644, type: !12193)
!12339 = !DILocation(line: 0, scope: !12334)
!12340 = !DILocation(line: 647, column: 6, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12334, file: !12150, line: 647, column: 6)
!12342 = !DILocation(line: 647, column: 27, scope: !12341)
!12343 = !DILocation(line: 655, column: 6, scope: !12344)
!12344 = distinct !DILexicalBlock(scope: !12334, file: !12150, line: 655, column: 6)
!12345 = !DILocation(line: 655, column: 30, scope: !12344)
!12346 = !DILocation(line: 663, column: 6, scope: !12347)
!12347 = distinct !DILexicalBlock(scope: !12334, file: !12150, line: 663, column: 6)
!12348 = !DILocation(line: 663, column: 30, scope: !12347)
!12349 = !DILocation(line: 663, column: 6, scope: !12334)
!12350 = !DILocation(line: 669, column: 3, scope: !12334)
!12351 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !12150, file: !12150, line: 611, type: !12352, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !12354)
!12352 = !DISubroutineType(types: !12353)
!12353 = !{!162, !162, !12289}
!12354 = !{!12355, !12356, !12357}
!12355 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !12351, file: !12150, line: 611, type: !162)
!12356 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !12351, file: !12150, line: 611, type: !12289)
!12357 = !DILocalVariable(name: "pllfreq", scope: !12351, file: !12150, line: 613, type: !162)
!12358 = !DILocation(line: 0, scope: !12351)
!12359 = !DILocation(line: 622, column: 56, scope: !12351)
!12360 = !DILocation(line: 622, column: 61, scope: !12351)
!12361 = !DILocation(line: 622, column: 32, scope: !12351)
!12362 = !DILocation(line: 626, column: 45, scope: !12351)
!12363 = !DILocation(line: 626, column: 50, scope: !12351)
!12364 = !DILocation(line: 626, column: 21, scope: !12351)
!12365 = !DILocation(line: 630, column: 47, scope: !12351)
!12366 = !DILocation(line: 630, column: 82, scope: !12351)
!12367 = !DILocation(line: 630, column: 21, scope: !12351)
!12368 = !DILocation(line: 633, column: 3, scope: !12351)
!12369 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8203, file: !8203, line: 3007, type: !6248, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !250)
!12370 = !DILocation(line: 3009, column: 11, scope: !12369)
!12371 = !DILocation(line: 3009, column: 44, scope: !12369)
!12372 = !DILocation(line: 3009, column: 3, scope: !12369)
!12373 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8203, file: !8203, line: 2987, type: !3211, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !250)
!12374 = !DILocation(line: 2989, column: 3, scope: !12373)
!12375 = !DILocation(line: 2990, column: 1, scope: !12373)
!12376 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8203, file: !8203, line: 4304, type: !8337, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !12377)
!12377 = !{!12378, !12379, !12380, !12381}
!12378 = !DILocalVariable(name: "Source", arg: 1, scope: !12376, file: !8203, line: 4304, type: !162)
!12379 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12376, file: !8203, line: 4304, type: !162)
!12380 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12376, file: !8203, line: 4304, type: !162)
!12381 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12376, file: !8203, line: 4304, type: !162)
!12382 = !DILocation(line: 0, scope: !12376)
!12383 = !DILocation(line: 4306, column: 3, scope: !12376)
!12384 = !DILocation(line: 4308, column: 3, scope: !12376)
!12385 = !DILocation(line: 4310, column: 3, scope: !12376)
!12386 = !DILocation(line: 4312, column: 1, scope: !12376)
!12387 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !12150, file: !12150, line: 681, type: !12388, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !12390)
!12388 = !DISubroutineType(types: !12389)
!12389 = !{!12193, !162, !12296}
!12390 = !{!12391, !12392, !12393, !12394}
!12391 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12387, file: !12150, line: 681, type: !162)
!12392 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12387, file: !12150, line: 681, type: !12296)
!12393 = !DILocalVariable(name: "status", scope: !12387, file: !12150, line: 683, type: !12193)
!12394 = !DILocalVariable(name: "hclk_frequency", scope: !12387, file: !12150, line: 684, type: !162)
!12395 = !DILocation(line: 0, scope: !12387)
!12396 = !DILocation(line: 691, column: 20, scope: !12387)
!12397 = !DILocation(line: 694, column: 6, scope: !12398)
!12398 = distinct !DILexicalBlock(scope: !12387, file: !12150, line: 694, column: 6)
!12399 = !DILocation(line: 694, column: 22, scope: !12398)
!12400 = !DILocation(line: 694, column: 6, scope: !12387)
!12401 = !DILocation(line: 697, column: 14, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12398, file: !12150, line: 695, column: 3)
!12403 = !DILocation(line: 701, column: 13, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12387, file: !12150, line: 701, column: 6)
!12405 = !DILocation(line: 701, column: 6, scope: !12387)
!12406 = !DILocation(line: 704, column: 5, scope: !12407)
!12407 = distinct !DILexicalBlock(scope: !12404, file: !12150, line: 702, column: 3)
!12408 = !DILocation(line: 705, column: 5, scope: !12407)
!12409 = !DILocation(line: 705, column: 12, scope: !12407)
!12410 = !DILocation(line: 705, column: 33, scope: !12407)
!12411 = distinct !{!12411, !12408, !12412}
!12412 = !DILocation(line: 708, column: 5, scope: !12407)
!12413 = !DILocation(line: 711, column: 49, scope: !12407)
!12414 = !DILocation(line: 711, column: 5, scope: !12407)
!12415 = !DILocation(line: 712, column: 5, scope: !12407)
!12416 = !DILocation(line: 713, column: 5, scope: !12407)
!12417 = !DILocation(line: 713, column: 12, scope: !12407)
!12418 = !DILocation(line: 713, column: 37, scope: !12407)
!12419 = distinct !{!12419, !12416, !12420}
!12420 = !DILocation(line: 716, column: 5, scope: !12407)
!12421 = !DILocation(line: 719, column: 50, scope: !12407)
!12422 = !DILocation(line: 719, column: 5, scope: !12407)
!12423 = !DILocation(line: 720, column: 50, scope: !12407)
!12424 = !DILocation(line: 720, column: 5, scope: !12407)
!12425 = !DILocation(line: 721, column: 3, scope: !12407)
!12426 = !DILocation(line: 724, column: 6, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12387, file: !12150, line: 724, column: 6)
!12428 = !DILocation(line: 724, column: 22, scope: !12427)
!12429 = !DILocation(line: 724, column: 6, scope: !12387)
!12430 = !DILocation(line: 727, column: 14, scope: !12431)
!12431 = distinct !DILexicalBlock(scope: !12427, file: !12150, line: 725, column: 3)
!12432 = !DILocation(line: 728, column: 3, scope: !12431)
!12433 = !DILocation(line: 731, column: 13, scope: !12434)
!12434 = distinct !DILexicalBlock(scope: !12387, file: !12150, line: 731, column: 6)
!12435 = !DILocation(line: 731, column: 6, scope: !12387)
!12436 = !DILocation(line: 733, column: 5, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12434, file: !12150, line: 732, column: 3)
!12438 = !DILocation(line: 734, column: 3, scope: !12437)
!12439 = !DILocation(line: 736, column: 3, scope: !12387)
!12440 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8203, file: !8203, line: 4184, type: !3211, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !250)
!12441 = !DILocation(line: 4186, column: 3, scope: !12440)
!12442 = !DILocation(line: 4187, column: 1, scope: !12440)
!12443 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8203, file: !8203, line: 4205, type: !6248, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !250)
!12444 = !DILocation(line: 4207, column: 11, scope: !12443)
!12445 = !DILocation(line: 4207, column: 44, scope: !12443)
!12446 = !DILocation(line: 4207, column: 3, scope: !12443)
!12447 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8203, file: !8203, line: 3224, type: !6258, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !12448)
!12448 = !{!12449}
!12449 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12447, file: !8203, line: 3224, type: !162)
!12450 = !DILocation(line: 0, scope: !12447)
!12451 = !DILocation(line: 3226, column: 3, scope: !12447)
!12452 = !DILocation(line: 3227, column: 1, scope: !12447)
!12453 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8203, file: !8203, line: 3188, type: !6258, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !12454)
!12454 = !{!12455}
!12455 = !DILocalVariable(name: "Source", arg: 1, scope: !12453, file: !8203, line: 3188, type: !162)
!12456 = !DILocation(line: 0, scope: !12453)
!12457 = !DILocation(line: 3190, column: 3, scope: !12453)
!12458 = !DILocation(line: 3191, column: 1, scope: !12453)
!12459 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8203, file: !8203, line: 3204, type: !6248, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !250)
!12460 = !DILocation(line: 3206, column: 21, scope: !12459)
!12461 = !DILocation(line: 3206, column: 3, scope: !12459)
!12462 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8203, file: !8203, line: 3240, type: !6258, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !12463)
!12463 = !{!12464}
!12464 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12462, file: !8203, line: 3240, type: !162)
!12465 = !DILocation(line: 0, scope: !12462)
!12466 = !DILocation(line: 3242, column: 3, scope: !12462)
!12467 = !DILocation(line: 3243, column: 1, scope: !12462)
!12468 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8203, file: !8203, line: 3256, type: !6258, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !12469)
!12469 = !{!12470}
!12470 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12468, file: !8203, line: 3256, type: !162)
!12471 = !DILocation(line: 0, scope: !12468)
!12472 = !DILocation(line: 3258, column: 3, scope: !12468)
!12473 = !DILocation(line: 3259, column: 1, scope: !12468)
!12474 = distinct !DISubprogram(name: "LL_RCC_PLLSAI_IsReady", scope: !8203, file: !8203, line: 5969, type: !6248, scopeLine: 5970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !250)
!12475 = !DILocation(line: 5971, column: 11, scope: !12474)
!12476 = !DILocation(line: 5971, column: 47, scope: !12474)
!12477 = !DILocation(line: 5971, column: 3, scope: !12474)
!12478 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8203, file: !8203, line: 5153, type: !6248, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !250)
!12479 = !DILocation(line: 5155, column: 11, scope: !12478)
!12480 = !DILocation(line: 5155, column: 47, scope: !12478)
!12481 = !DILocation(line: 5155, column: 3, scope: !12478)
!12482 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !12150, file: !12150, line: 540, type: !12483, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !12485)
!12483 = !DISubroutineType(types: !12484)
!12484 = !{!12193, !162, !162, !12289, !12296}
!12485 = !{!12486, !12487, !12488, !12489, !12490, !12491}
!12486 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12482, file: !12150, line: 540, type: !162)
!12487 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12482, file: !12150, line: 540, type: !162)
!12488 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12482, file: !12150, line: 541, type: !12289)
!12489 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12482, file: !12150, line: 541, type: !12296)
!12490 = !DILocalVariable(name: "status", scope: !12482, file: !12150, line: 543, type: !12193)
!12491 = !DILocalVariable(name: "pllfreq", scope: !12482, file: !12150, line: 544, type: !162)
!12492 = !DILocation(line: 0, scope: !12482)
!12493 = !DILocation(line: 551, column: 6, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12482, file: !12150, line: 551, column: 6)
!12495 = !DILocation(line: 551, column: 25, scope: !12494)
!12496 = !DILocation(line: 551, column: 6, scope: !12482)
!12497 = !DILocation(line: 554, column: 15, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12494, file: !12150, line: 552, column: 3)
!12499 = !DILocation(line: 557, column: 8, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12498, file: !12150, line: 557, column: 8)
!12501 = !DILocation(line: 557, column: 29, scope: !12500)
!12502 = !DILocation(line: 557, column: 8, scope: !12498)
!12503 = !DILocation(line: 560, column: 20, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12505, file: !12150, line: 560, column: 10)
!12505 = distinct !DILexicalBlock(scope: !12500, file: !12150, line: 558, column: 5)
!12506 = !DILocation(line: 560, column: 10, scope: !12505)
!12507 = !DILocation(line: 562, column: 9, scope: !12508)
!12508 = distinct !DILexicalBlock(scope: !12504, file: !12150, line: 561, column: 7)
!12509 = !DILocation(line: 563, column: 7, scope: !12508)
!12510 = !DILocation(line: 566, column: 9, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12504, file: !12150, line: 565, column: 7)
!12512 = !DILocation(line: 570, column: 7, scope: !12505)
!12513 = !DILocation(line: 571, column: 7, scope: !12505)
!12514 = !DILocation(line: 571, column: 14, scope: !12505)
!12515 = !DILocation(line: 571, column: 35, scope: !12505)
!12516 = distinct !{!12516, !12513, !12517}
!12517 = !DILocation(line: 574, column: 7, scope: !12505)
!12518 = !DILocation(line: 578, column: 76, scope: !12498)
!12519 = !DILocation(line: 578, column: 103, scope: !12498)
!12520 = !DILocation(line: 579, column: 54, scope: !12498)
!12521 = !DILocation(line: 578, column: 5, scope: !12498)
!12522 = !DILocation(line: 582, column: 14, scope: !12498)
!12523 = !DILocation(line: 583, column: 3, scope: !12498)
!12524 = !DILocation(line: 0, scope: !12494)
!12525 = !DILocation(line: 590, column: 3, scope: !12482)
!12526 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8203, file: !8203, line: 2969, type: !6248, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !250)
!12527 = !DILocation(line: 2971, column: 11, scope: !12526)
!12528 = !DILocation(line: 2971, column: 44, scope: !12526)
!12529 = !DILocation(line: 2971, column: 3, scope: !12526)
!12530 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8203, file: !8203, line: 2929, type: !3211, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !250)
!12531 = !DILocation(line: 2931, column: 3, scope: !12530)
!12532 = !DILocation(line: 2932, column: 1, scope: !12530)
!12533 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8203, file: !8203, line: 2939, type: !3211, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !250)
!12534 = !DILocation(line: 2941, column: 3, scope: !12533)
!12535 = !DILocation(line: 2942, column: 1, scope: !12533)
!12536 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8203, file: !8203, line: 2949, type: !3211, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3000, retainedNodes: !250)
!12537 = !DILocation(line: 2951, column: 3, scope: !12536)
!12538 = !DILocation(line: 2952, column: 1, scope: !12536)
!12539 = distinct !DISubprogram(name: "z_device_state_init", scope: !12540, file: !12540, line: 23, type: !3211, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3067, retainedNodes: !12541)
!12540 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12541 = !{!12542}
!12542 = !DILocalVariable(name: "dev", scope: !12539, file: !12540, line: 25, type: !12543)
!12543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12544, size: 32)
!12544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12545)
!12545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !12546)
!12546 = !{!12547, !12548, !12549, !12550, !12556, !12557}
!12547 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12545, file: !120, line: 380, baseType: !123, size: 32)
!12548 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12545, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!12549 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12545, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!12550 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12545, file: !120, line: 386, baseType: !12551, size: 32, offset: 96)
!12551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12552, size: 32)
!12552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !12553)
!12553 = !{!12554, !12555}
!12554 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12552, file: !120, line: 359, baseType: !133, size: 8)
!12555 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12552, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12556 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12545, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!12557 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12545, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!12558 = !DILocation(line: 0, scope: !12539)
!12559 = !DILocation(line: 31, column: 1, scope: !12539)
!12560 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12540, file: !12540, line: 33, type: !12561, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3067, retainedNodes: !12563)
!12561 = !DISubroutineType(types: !12562)
!12562 = !{!12543, !123}
!12563 = !{!12564, !12565}
!12564 = !DILocalVariable(name: "name", arg: 1, scope: !12560, file: !12540, line: 33, type: !123)
!12565 = !DILocalVariable(name: "dev", scope: !12560, file: !12540, line: 35, type: !12543)
!12566 = !DILocation(line: 0, scope: !12560)
!12567 = !DILocation(line: 40, column: 12, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12560, file: !12540, line: 40, column: 6)
!12569 = !DILocation(line: 40, column: 21, scope: !12568)
!12570 = !DILocation(line: 40, column: 25, scope: !12568)
!12571 = !DILocation(line: 40, column: 33, scope: !12568)
!12572 = !DILocation(line: 40, column: 6, scope: !12560)
!12573 = !DILocation(line: 55, column: 2, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !12560, file: !12540, line: 55, column: 2)
!12575 = !DILocation(line: 50, column: 7, scope: !12576)
!12576 = distinct !DILexicalBlock(scope: !12577, file: !12540, line: 50, column: 7)
!12577 = distinct !DILexicalBlock(scope: !12578, file: !12540, line: 49, column: 57)
!12578 = distinct !DILexicalBlock(scope: !12579, file: !12540, line: 49, column: 2)
!12579 = distinct !DILexicalBlock(scope: !12560, file: !12540, line: 49, column: 2)
!12580 = !DILocation(line: 50, column: 30, scope: !12576)
!12581 = !DILocation(line: 50, column: 39, scope: !12576)
!12582 = !DILocation(line: 50, column: 44, scope: !12576)
!12583 = !DILocation(line: 50, column: 7, scope: !12577)
!12584 = !DILocation(line: 49, column: 53, scope: !12578)
!12585 = !DILocation(line: 49, column: 33, scope: !12578)
!12586 = !DILocation(line: 49, column: 2, scope: !12579)
!12587 = distinct !{!12587, !12586, !12588}
!12588 = !DILocation(line: 53, column: 2, scope: !12579)
!12589 = !DILocation(line: 56, column: 7, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !12591, file: !12540, line: 56, column: 7)
!12591 = distinct !DILexicalBlock(scope: !12592, file: !12540, line: 55, column: 57)
!12592 = distinct !DILexicalBlock(scope: !12574, file: !12540, line: 55, column: 2)
!12593 = !DILocation(line: 56, column: 30, scope: !12590)
!12594 = !DILocation(line: 56, column: 52, scope: !12590)
!12595 = !DILocation(line: 56, column: 34, scope: !12590)
!12596 = !DILocation(line: 56, column: 58, scope: !12590)
!12597 = !DILocation(line: 56, column: 7, scope: !12591)
!12598 = !DILocation(line: 55, column: 53, scope: !12592)
!12599 = !DILocation(line: 55, column: 33, scope: !12592)
!12600 = distinct !{!12600, !12573, !12601}
!12601 = !DILocation(line: 59, column: 2, scope: !12574)
!12602 = !DILocation(line: 62, column: 1, scope: !12560)
!12603 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12540, file: !12540, line: 93, type: !12604, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3067, retainedNodes: !12606)
!12604 = !DISubroutineType(types: !12605)
!12605 = !{!136, !12543}
!12606 = !{!12607}
!12607 = !DILocalVariable(name: "dev", arg: 1, scope: !12603, file: !12540, line: 93, type: !12543)
!12608 = !DILocation(line: 0, scope: !12603)
!12609 = !DILocation(line: 99, column: 10, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !12603, file: !12540, line: 99, column: 6)
!12611 = !DILocation(line: 99, column: 6, scope: !12603)
!12612 = !DILocation(line: 103, column: 14, scope: !12603)
!12613 = !DILocation(line: 103, column: 21, scope: !12603)
!12614 = !DILocation(line: 103, column: 33, scope: !12603)
!12615 = !DILocation(line: 103, column: 49, scope: !12603)
!12616 = !DILocation(line: 103, column: 58, scope: !12603)
!12617 = !DILocation(line: 104, column: 1, scope: !12603)
!12618 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12540, file: !12540, line: 87, type: !12619, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3067, retainedNodes: !12622)
!12619 = !DISubroutineType(types: !12620)
!12620 = !{!252, !12621}
!12621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12543, size: 32)
!12622 = !{!12623}
!12623 = !DILocalVariable(name: "devices", arg: 1, scope: !12618, file: !12540, line: 87, type: !12621)
!12624 = !DILocation(line: 0, scope: !12618)
!12625 = !DILocation(line: 89, column: 11, scope: !12618)
!12626 = !DILocation(line: 90, column: 2, scope: !12618)
!12627 = distinct !DISubprogram(name: "device_required_foreach", scope: !12540, file: !12540, line: 125, type: !12628, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3067, retainedNodes: !12634)
!12628 = !DISubroutineType(types: !12629)
!12629 = !{!107, !12543, !12630, !102}
!12630 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !120, line: 471, baseType: !12631)
!12631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12632, size: 32)
!12632 = !DISubroutineType(types: !12633)
!12633 = !{!107, !12543, !102}
!12634 = !{!12635, !12636, !12637, !12638, !12639}
!12635 = !DILocalVariable(name: "dev", arg: 1, scope: !12627, file: !12540, line: 125, type: !12543)
!12636 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12627, file: !12540, line: 126, type: !12630)
!12637 = !DILocalVariable(name: "context", arg: 3, scope: !12627, file: !12540, line: 127, type: !102)
!12638 = !DILocalVariable(name: "handle_count", scope: !12627, file: !12540, line: 129, type: !252)
!12639 = !DILocalVariable(name: "handles", scope: !12627, file: !12540, line: 130, type: !139)
!12640 = !DILocation(line: 0, scope: !12627)
!12641 = !DILocation(line: 129, column: 2, scope: !12627)
!12642 = !DILocation(line: 129, column: 9, scope: !12627)
!12643 = !DILocation(line: 130, column: 35, scope: !12627)
!12644 = !DILocation(line: 132, column: 33, scope: !12627)
!12645 = !DILocation(line: 132, column: 9, scope: !12627)
!12646 = !DILocation(line: 133, column: 1, scope: !12627)
!12647 = !DILocation(line: 132, column: 2, scope: !12627)
!12648 = distinct !DISubprogram(name: "device_required_handles_get", scope: !120, file: !120, line: 493, type: !12649, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3067, retainedNodes: !12651)
!12649 = !DISubroutineType(types: !12650)
!12650 = !{!139, !12543, !2582}
!12651 = !{!12652, !12653, !12654, !12655}
!12652 = !DILocalVariable(name: "dev", arg: 1, scope: !12648, file: !120, line: 493, type: !12543)
!12653 = !DILocalVariable(name: "count", arg: 2, scope: !12648, file: !120, line: 493, type: !2582)
!12654 = !DILocalVariable(name: "rv", scope: !12648, file: !120, line: 495, type: !139)
!12655 = !DILocalVariable(name: "i", scope: !12656, file: !120, line: 498, type: !252)
!12656 = distinct !DILexicalBlock(scope: !12657, file: !120, line: 497, column: 18)
!12657 = distinct !DILexicalBlock(scope: !12648, file: !120, line: 497, column: 6)
!12658 = !DILocation(line: 0, scope: !12648)
!12659 = !DILocation(line: 495, column: 35, scope: !12648)
!12660 = !DILocation(line: 497, column: 9, scope: !12657)
!12661 = !DILocation(line: 497, column: 6, scope: !12648)
!12662 = !DILocation(line: 0, scope: !12656)
!12663 = !DILocation(line: 500, column: 11, scope: !12656)
!12664 = !DILocation(line: 500, column: 40, scope: !12656)
!12665 = !DILocation(line: 502, column: 4, scope: !12666)
!12666 = distinct !DILexicalBlock(scope: !12656, file: !120, line: 501, column: 40)
!12667 = distinct !{!12667, !12668, !12669}
!12668 = !DILocation(line: 500, column: 3, scope: !12656)
!12669 = !DILocation(line: 503, column: 3, scope: !12656)
!12670 = !DILocation(line: 504, column: 10, scope: !12656)
!12671 = !DILocation(line: 505, column: 2, scope: !12656)
!12672 = !DILocation(line: 507, column: 2, scope: !12648)
!12673 = distinct !DISubprogram(name: "device_visitor", scope: !12540, file: !12540, line: 106, type: !12674, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3067, retainedNodes: !12676)
!12674 = !DISubroutineType(types: !12675)
!12675 = !{!107, !139, !252, !12630, !102}
!12676 = !{!12677, !12678, !12679, !12680, !12681, !12683, !12686, !12687}
!12677 = !DILocalVariable(name: "handles", arg: 1, scope: !12673, file: !12540, line: 106, type: !139)
!12678 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12673, file: !12540, line: 107, type: !252)
!12679 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12673, file: !12540, line: 108, type: !12630)
!12680 = !DILocalVariable(name: "context", arg: 4, scope: !12673, file: !12540, line: 109, type: !102)
!12681 = !DILocalVariable(name: "i", scope: !12682, file: !12540, line: 112, type: !252)
!12682 = distinct !DILexicalBlock(scope: !12673, file: !12540, line: 112, column: 2)
!12683 = !DILocalVariable(name: "dh", scope: !12684, file: !12540, line: 113, type: !141)
!12684 = distinct !DILexicalBlock(scope: !12685, file: !12540, line: 112, column: 44)
!12685 = distinct !DILexicalBlock(scope: !12682, file: !12540, line: 112, column: 2)
!12686 = !DILocalVariable(name: "rdev", scope: !12684, file: !12540, line: 114, type: !12543)
!12687 = !DILocalVariable(name: "rc", scope: !12684, file: !12540, line: 115, type: !107)
!12688 = !DILocation(line: 0, scope: !12673)
!12689 = !DILocation(line: 0, scope: !12682)
!12690 = !DILocation(line: 112, column: 23, scope: !12685)
!12691 = !DILocation(line: 112, column: 2, scope: !12682)
!12692 = distinct !{!12692, !12691, !12693}
!12693 = !DILocation(line: 120, column: 2, scope: !12682)
!12694 = !DILocation(line: 113, column: 24, scope: !12684)
!12695 = !DILocation(line: 0, scope: !12684)
!12696 = !DILocation(line: 114, column: 31, scope: !12684)
!12697 = !DILocation(line: 115, column: 12, scope: !12684)
!12698 = !DILocation(line: 117, column: 10, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12684, file: !12540, line: 117, column: 7)
!12700 = !DILocation(line: 112, column: 39, scope: !12685)
!12701 = !DILocation(line: 123, column: 1, scope: !12673)
!12702 = distinct !DISubprogram(name: "device_from_handle", scope: !120, file: !120, line: 439, type: !12703, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3067, retainedNodes: !12705)
!12703 = !DISubroutineType(types: !12704)
!12704 = !{!12543, !141}
!12705 = !{!12706, !12707, !12708}
!12706 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12702, file: !120, line: 439, type: !141)
!12707 = !DILocalVariable(name: "dev", scope: !12702, file: !120, line: 443, type: !12543)
!12708 = !DILocalVariable(name: "numdev", scope: !12702, file: !120, line: 444, type: !252)
!12709 = !DILocation(line: 0, scope: !12702)
!12710 = !DILocation(line: 446, column: 7, scope: !12711)
!12711 = distinct !DILexicalBlock(scope: !12702, file: !120, line: 446, column: 6)
!12712 = !DILocation(line: 446, column: 18, scope: !12711)
!12713 = !DILocation(line: 446, column: 23, scope: !12711)
!12714 = !DILocation(line: 450, column: 2, scope: !12702)
!12715 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12540, file: !12540, line: 135, type: !12628, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3067, retainedNodes: !12716)
!12716 = !{!12717, !12718, !12719, !12720, !12721}
!12717 = !DILocalVariable(name: "dev", arg: 1, scope: !12715, file: !12540, line: 135, type: !12543)
!12718 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12715, file: !12540, line: 136, type: !12630)
!12719 = !DILocalVariable(name: "context", arg: 3, scope: !12715, file: !12540, line: 137, type: !102)
!12720 = !DILocalVariable(name: "handle_count", scope: !12715, file: !12540, line: 139, type: !252)
!12721 = !DILocalVariable(name: "handles", scope: !12715, file: !12540, line: 140, type: !139)
!12722 = !DILocation(line: 0, scope: !12715)
!12723 = !DILocation(line: 139, column: 2, scope: !12715)
!12724 = !DILocation(line: 139, column: 9, scope: !12715)
!12725 = !DILocation(line: 140, column: 35, scope: !12715)
!12726 = !DILocation(line: 142, column: 33, scope: !12715)
!12727 = !DILocation(line: 142, column: 9, scope: !12715)
!12728 = !DILocation(line: 143, column: 1, scope: !12715)
!12729 = !DILocation(line: 142, column: 2, scope: !12715)
!12730 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !120, file: !120, line: 573, type: !12649, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3067, retainedNodes: !12731)
!12731 = !{!12732, !12733, !12734, !12735, !12736}
!12732 = !DILocalVariable(name: "dev", arg: 1, scope: !12730, file: !120, line: 573, type: !12543)
!12733 = !DILocalVariable(name: "count", arg: 2, scope: !12730, file: !120, line: 573, type: !2582)
!12734 = !DILocalVariable(name: "rv", scope: !12730, file: !120, line: 575, type: !139)
!12735 = !DILocalVariable(name: "region", scope: !12730, file: !120, line: 576, type: !252)
!12736 = !DILocalVariable(name: "i", scope: !12730, file: !120, line: 577, type: !252)
!12737 = !DILocation(line: 0, scope: !12730)
!12738 = !DILocation(line: 575, column: 35, scope: !12730)
!12739 = !DILocation(line: 579, column: 9, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12730, file: !120, line: 579, column: 6)
!12741 = !DILocation(line: 579, column: 6, scope: !12730)
!12742 = !DILocation(line: 582, column: 8, scope: !12743)
!12743 = distinct !DILexicalBlock(scope: !12744, file: !120, line: 582, column: 8)
!12744 = distinct !DILexicalBlock(scope: !12745, file: !120, line: 581, column: 23)
!12745 = distinct !DILexicalBlock(scope: !12740, file: !120, line: 579, column: 18)
!12746 = !DILocation(line: 582, column: 12, scope: !12743)
!12747 = !DILocation(line: 585, column: 6, scope: !12744)
!12748 = !DILocation(line: 0, scope: !12745)
!12749 = !DILocation(line: 581, column: 17, scope: !12745)
!12750 = !DILocation(line: 581, column: 3, scope: !12745)
!12751 = !DILocation(line: 588, column: 10, scope: !12745)
!12752 = !DILocation(line: 588, column: 16, scope: !12745)
!12753 = !DILocation(line: 589, column: 4, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12745, file: !120, line: 588, column: 39)
!12755 = !DILocation(line: 588, column: 3, scope: !12745)
!12756 = distinct !{!12756, !12755, !12757}
!12757 = !DILocation(line: 590, column: 3, scope: !12745)
!12758 = !DILocation(line: 591, column: 10, scope: !12745)
!12759 = !DILocation(line: 592, column: 2, scope: !12745)
!12760 = !DILocation(line: 575, column: 25, scope: !12730)
!12761 = !DILocation(line: 594, column: 2, scope: !12730)
!12762 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1939, file: !1939, line: 49, type: !12763, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1936, retainedNodes: !250)
!12763 = !DISubroutineType(types: !12764)
!12764 = !{!2575}
!12765 = !DILocation(line: 51, column: 10, scope: !12762)
!12766 = !DILocation(line: 51, column: 20, scope: !12762)
!12767 = !DILocation(line: 51, column: 2, scope: !12762)
!12768 = distinct !DISubprogram(name: "coredump", scope: !3074, file: !3074, line: 209, type: !12769, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !12915)
!12769 = !DISubroutineType(types: !12770)
!12770 = !{null, !32, !12771, !12815}
!12771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12772, size: 32)
!12772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12773)
!12773 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2707, line: 141, baseType: !12774)
!12774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2707, line: 97, size: 256, elements: !12775)
!12775 = !{!12776}
!12776 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12774, file: !2707, line: 107, baseType: !12777, size: 256)
!12777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2707, line: 98, size: 256, elements: !12778)
!12778 = !{!12779, !12784, !12789, !12794, !12799, !12804, !12809, !12814}
!12779 = !DIDerivedType(tag: DW_TAG_member, scope: !12777, file: !2707, line: 99, baseType: !12780, size: 32)
!12780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12777, file: !2707, line: 99, size: 32, elements: !12781)
!12781 = !{!12782, !12783}
!12782 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12780, file: !2707, line: 99, baseType: !162, size: 32)
!12783 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12780, file: !2707, line: 99, baseType: !162, size: 32)
!12784 = !DIDerivedType(tag: DW_TAG_member, scope: !12777, file: !2707, line: 100, baseType: !12785, size: 32, offset: 32)
!12785 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12777, file: !2707, line: 100, size: 32, elements: !12786)
!12786 = !{!12787, !12788}
!12787 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12785, file: !2707, line: 100, baseType: !162, size: 32)
!12788 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12785, file: !2707, line: 100, baseType: !162, size: 32)
!12789 = !DIDerivedType(tag: DW_TAG_member, scope: !12777, file: !2707, line: 101, baseType: !12790, size: 32, offset: 64)
!12790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12777, file: !2707, line: 101, size: 32, elements: !12791)
!12791 = !{!12792, !12793}
!12792 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12790, file: !2707, line: 101, baseType: !162, size: 32)
!12793 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12790, file: !2707, line: 101, baseType: !162, size: 32)
!12794 = !DIDerivedType(tag: DW_TAG_member, scope: !12777, file: !2707, line: 102, baseType: !12795, size: 32, offset: 96)
!12795 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12777, file: !2707, line: 102, size: 32, elements: !12796)
!12796 = !{!12797, !12798}
!12797 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12795, file: !2707, line: 102, baseType: !162, size: 32)
!12798 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12795, file: !2707, line: 102, baseType: !162, size: 32)
!12799 = !DIDerivedType(tag: DW_TAG_member, scope: !12777, file: !2707, line: 103, baseType: !12800, size: 32, offset: 128)
!12800 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12777, file: !2707, line: 103, size: 32, elements: !12801)
!12801 = !{!12802, !12803}
!12802 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12800, file: !2707, line: 103, baseType: !162, size: 32)
!12803 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12800, file: !2707, line: 103, baseType: !162, size: 32)
!12804 = !DIDerivedType(tag: DW_TAG_member, scope: !12777, file: !2707, line: 104, baseType: !12805, size: 32, offset: 160)
!12805 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12777, file: !2707, line: 104, size: 32, elements: !12806)
!12806 = !{!12807, !12808}
!12807 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12805, file: !2707, line: 104, baseType: !162, size: 32)
!12808 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12805, file: !2707, line: 104, baseType: !162, size: 32)
!12809 = !DIDerivedType(tag: DW_TAG_member, scope: !12777, file: !2707, line: 105, baseType: !12810, size: 32, offset: 192)
!12810 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12777, file: !2707, line: 105, size: 32, elements: !12811)
!12811 = !{!12812, !12813}
!12812 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12810, file: !2707, line: 105, baseType: !162, size: 32)
!12813 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12810, file: !2707, line: 105, baseType: !162, size: 32)
!12814 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12777, file: !2707, line: 106, baseType: !162, size: 32, offset: 224)
!12815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12816, size: 32)
!12816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !12817)
!12817 = !{!12818, !12876, !12888, !12889, !12890, !12891, !12897, !12910}
!12818 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12816, file: !359, line: 247, baseType: !12819, size: 384)
!12819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !12820)
!12820 = !{!12821, !12845, !12852, !12853, !12854, !12863, !12864, !12865}
!12821 = !DIDerivedType(tag: DW_TAG_member, scope: !12819, file: !359, line: 60, baseType: !12822, size: 64)
!12822 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12819, file: !359, line: 60, size: 64, elements: !12823)
!12823 = !{!12824, !12839}
!12824 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12822, file: !359, line: 61, baseType: !12825, size: 64)
!12825 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !12826)
!12826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !12827)
!12827 = !{!12828, !12834}
!12828 = !DIDerivedType(tag: DW_TAG_member, scope: !12826, file: !233, line: 38, baseType: !12829, size: 32)
!12829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12826, file: !233, line: 38, size: 32, elements: !12830)
!12830 = !{!12831, !12833}
!12831 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12829, file: !233, line: 39, baseType: !12832, size: 32)
!12832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12826, size: 32)
!12833 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12829, file: !233, line: 40, baseType: !12832, size: 32)
!12834 = !DIDerivedType(tag: DW_TAG_member, scope: !12826, file: !233, line: 42, baseType: !12835, size: 32, offset: 32)
!12835 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12826, file: !233, line: 42, size: 32, elements: !12836)
!12836 = !{!12837, !12838}
!12837 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12835, file: !233, line: 43, baseType: !12832, size: 32)
!12838 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12835, file: !233, line: 44, baseType: !12832, size: 32)
!12839 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12822, file: !359, line: 62, baseType: !12840, size: 64)
!12840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !12841)
!12841 = !{!12842}
!12842 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12840, file: !384, line: 50, baseType: !12843, size: 64)
!12843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12844, size: 64, elements: !389)
!12844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12840, size: 32)
!12845 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12819, file: !359, line: 68, baseType: !12846, size: 32, offset: 64)
!12846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12847, size: 32)
!12847 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !12848)
!12848 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !12849)
!12849 = !{!12850}
!12850 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12848, file: !228, line: 232, baseType: !12851, size: 64)
!12851 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !12826)
!12852 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12819, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!12853 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12819, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!12854 = !DIDerivedType(tag: DW_TAG_member, scope: !12819, file: !359, line: 90, baseType: !12855, size: 16, offset: 112)
!12855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12819, file: !359, line: 90, size: 16, elements: !12856)
!12856 = !{!12857, !12862}
!12857 = !DIDerivedType(tag: DW_TAG_member, scope: !12855, file: !359, line: 91, baseType: !12858, size: 16)
!12858 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12855, file: !359, line: 91, size: 16, elements: !12859)
!12859 = !{!12860, !12861}
!12860 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12858, file: !359, line: 96, baseType: !407, size: 8)
!12861 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12858, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!12862 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12855, file: !359, line: 100, baseType: !411, size: 16)
!12863 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12819, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!12864 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12819, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!12865 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12819, file: !359, line: 131, baseType: !12866, size: 192, offset: 192)
!12866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !12867)
!12867 = !{!12868, !12869, !12875}
!12868 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12866, file: !228, line: 245, baseType: !12825, size: 64)
!12869 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12866, file: !228, line: 246, baseType: !12870, size: 32, offset: 64)
!12870 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !12871)
!12871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12872, size: 32)
!12872 = !DISubroutineType(types: !12873)
!12873 = !{null, !12874}
!12874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12866, size: 32)
!12875 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12866, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!12876 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12816, file: !359, line: 250, baseType: !12877, size: 288, offset: 384)
!12877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !12878)
!12878 = !{!12879, !12880, !12881, !12882, !12883, !12884, !12885, !12886, !12887}
!12879 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12877, file: !428, line: 26, baseType: !162, size: 32)
!12880 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12877, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!12881 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12877, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!12882 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12877, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!12883 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12877, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!12884 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12877, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!12885 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12877, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!12886 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12877, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!12887 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12877, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!12888 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12816, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!12889 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12816, file: !359, line: 256, baseType: !12847, size: 64, offset: 704)
!12890 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12816, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!12891 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12816, file: !359, line: 300, baseType: !12892, size: 96, offset: 800)
!12892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !12893)
!12893 = !{!12894, !12895, !12896}
!12894 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12892, file: !359, line: 153, baseType: !22, size: 32)
!12895 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12892, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!12896 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12892, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!12897 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12816, file: !359, line: 325, baseType: !12898, size: 32, offset: 896)
!12898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12899, size: 32)
!12899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !12900)
!12900 = !{!12901, !12907, !12908}
!12901 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12899, file: !224, line: 5074, baseType: !12902, size: 96)
!12902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !12903)
!12903 = !{!12904, !12905, !12906}
!12904 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12902, file: !454, line: 57, baseType: !457, size: 32)
!12905 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12902, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!12906 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12902, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!12907 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12899, file: !224, line: 5075, baseType: !12847, size: 64, offset: 96)
!12908 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12899, file: !224, line: 5076, baseType: !12909, offset: 160)
!12909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!12910 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12816, file: !359, line: 343, baseType: !12911, size: 64, offset: 928)
!12911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !12912)
!12912 = !{!12913, !12914}
!12913 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12911, file: !428, line: 63, baseType: !162, size: 32)
!12914 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12911, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!12915 = !{!12916, !12917, !12918}
!12916 = !DILocalVariable(name: "reason", arg: 1, scope: !12768, file: !3074, line: 209, type: !32)
!12917 = !DILocalVariable(name: "esf", arg: 2, scope: !12768, file: !3074, line: 209, type: !12771)
!12918 = !DILocalVariable(name: "thread", arg: 3, scope: !12768, file: !3074, line: 210, type: !12815)
!12919 = !DILocation(line: 0, scope: !12768)
!12920 = !DILocation(line: 212, column: 1, scope: !12768)
!12921 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3074, file: !3074, line: 214, type: !12922, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !12924)
!12922 = !DISubroutineType(types: !12923)
!12923 = !{null, !22, !22}
!12924 = !{!12925, !12926}
!12925 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12921, file: !3074, line: 214, type: !22)
!12926 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12921, file: !3074, line: 214, type: !22)
!12927 = !DILocation(line: 0, scope: !12921)
!12928 = !DILocation(line: 216, column: 1, scope: !12921)
!12929 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3074, file: !3074, line: 218, type: !12930, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !12932)
!12930 = !DISubroutineType(types: !12931)
!12931 = !{null, !182, !252}
!12932 = !{!12933, !12934}
!12933 = !DILocalVariable(name: "buf", arg: 1, scope: !12929, file: !3074, line: 218, type: !182)
!12934 = !DILocalVariable(name: "buflen", arg: 2, scope: !12929, file: !3074, line: 218, type: !252)
!12935 = !DILocation(line: 0, scope: !12929)
!12936 = !DILocation(line: 220, column: 1, scope: !12929)
!12937 = distinct !DISubprogram(name: "coredump_query", scope: !3074, file: !3074, line: 222, type: !12938, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !12940)
!12938 = !DISubroutineType(types: !12939)
!12939 = !{!107, !3073, !102}
!12940 = !{!12941, !12942}
!12941 = !DILocalVariable(name: "query_id", arg: 1, scope: !12937, file: !3074, line: 222, type: !3073)
!12942 = !DILocalVariable(name: "arg", arg: 2, scope: !12937, file: !3074, line: 222, type: !102)
!12943 = !DILocation(line: 0, scope: !12937)
!12944 = !DILocation(line: 224, column: 2, scope: !12937)
!12945 = distinct !DISubprogram(name: "coredump_cmd", scope: !3074, file: !3074, line: 227, type: !12946, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !12948)
!12946 = !DISubroutineType(types: !12947)
!12947 = !{!107, !3080, !102}
!12948 = !{!12949, !12950}
!12949 = !DILocalVariable(name: "query_id", arg: 1, scope: !12945, file: !3074, line: 227, type: !3080)
!12950 = !DILocalVariable(name: "arg", arg: 2, scope: !12945, file: !3074, line: 227, type: !102)
!12951 = !DILocation(line: 0, scope: !12945)
!12952 = !DILocation(line: 229, column: 2, scope: !12945)
!12953 = distinct !DISubprogram(name: "arch_system_halt", scope: !12954, file: !12954, line: 23, type: !6004, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !12955)
!12954 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12955 = !{!12956}
!12956 = !DILocalVariable(name: "reason", arg: 1, scope: !12953, file: !12954, line: 23, type: !32)
!12957 = !DILocation(line: 0, scope: !12953)
!12958 = !DILocation(line: 55, column: 2, scope: !12959, inlinedAt: !12963)
!12959 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5993, file: !5993, line: 42, type: !5994, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !12960)
!12960 = !{!12961, !12962}
!12961 = !DILocalVariable(name: "key", scope: !12959, file: !5993, line: 44, type: !32)
!12962 = !DILocalVariable(name: "tmp", scope: !12959, file: !5993, line: 53, type: !32)
!12963 = distinct !DILocation(line: 31, column: 8, scope: !12953)
!12964 = !{i64 2279869}
!12965 = !DILocation(line: 0, scope: !12959, inlinedAt: !12963)
!12966 = !DILocation(line: 32, column: 2, scope: !12953)
!12967 = !DILocation(line: 32, column: 2, scope: !12968)
!12968 = distinct !DILexicalBlock(scope: !12969, file: !12954, line: 32, column: 2)
!12969 = distinct !DILexicalBlock(scope: !12953, file: !12954, line: 32, column: 2)
!12970 = distinct !{!12970, !12971, !12972}
!12971 = !DILocation(line: 32, column: 2, scope: !12969)
!12972 = !DILocation(line: 34, column: 2, scope: !12969)
!12973 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12954, file: !12954, line: 39, type: !12974, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !12976)
!12974 = !DISubroutineType(types: !12975)
!12975 = !{null, !32, !12771}
!12976 = !{!12977, !12978}
!12977 = !DILocalVariable(name: "reason", arg: 1, scope: !12973, file: !12954, line: 39, type: !32)
!12978 = !DILocalVariable(name: "esf", arg: 2, scope: !12973, file: !12954, line: 40, type: !12771)
!12979 = !DILocation(line: 0, scope: !12973)
!12980 = !DILocation(line: 46, column: 2, scope: !12973)
!12981 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12954, file: !12954, line: 81, type: !6004, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !12982)
!12982 = !{!12983}
!12983 = !DILocalVariable(name: "reason", arg: 1, scope: !12981, file: !12954, line: 81, type: !32)
!12984 = !DILocation(line: 0, scope: !12981)
!12985 = !DILocation(line: 83, column: 2, scope: !12981)
!12986 = distinct !DISubprogram(name: "z_fatal_error", scope: !12954, file: !12954, line: 96, type: !12974, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !12987)
!12987 = !{!12988, !12989, !12990, !12991}
!12988 = !DILocalVariable(name: "reason", arg: 1, scope: !12986, file: !12954, line: 96, type: !32)
!12989 = !DILocalVariable(name: "esf", arg: 2, scope: !12986, file: !12954, line: 96, type: !12771)
!12990 = !DILocalVariable(name: "key", scope: !12986, file: !12954, line: 102, type: !32)
!12991 = !DILocalVariable(name: "thread", scope: !12986, file: !12954, line: 103, type: !12815)
!12992 = !DILocation(line: 0, scope: !12986)
!12993 = !DILocation(line: 55, column: 2, scope: !12959, inlinedAt: !12994)
!12994 = distinct !DILocation(line: 102, column: 21, scope: !12986)
!12995 = !DILocation(line: 0, scope: !12959, inlinedAt: !12994)
!12996 = !DILocation(line: 119, column: 11, scope: !12997)
!12997 = distinct !DILexicalBlock(scope: !12986, file: !12954, line: 119, column: 6)
!12998 = !DILocation(line: 119, column: 20, scope: !12997)
!12999 = !DILocation(line: 131, column: 2, scope: !12986)
!13000 = !DILocation(line: 151, column: 7, scope: !13001)
!13001 = distinct !DILexicalBlock(scope: !13002, file: !12954, line: 146, column: 32)
!13002 = distinct !DILexicalBlock(scope: !12986, file: !12954, line: 146, column: 6)
!13003 = !DILocation(line: 151, column: 21, scope: !13004)
!13004 = distinct !DILexicalBlock(scope: !13001, file: !12954, line: 151, column: 7)
!13005 = !DILocation(line: 104, column: 4, scope: !12986)
!13006 = !DILocalVariable(name: "key", arg: 1, scope: !13007, file: !5993, line: 84, type: !32)
!13007 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5993, file: !5993, line: 84, type: !6004, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !13008)
!13008 = !{!13006}
!13009 = !DILocation(line: 0, scope: !13007, inlinedAt: !13010)
!13010 = distinct !DILocation(line: 186, column: 2, scope: !12986)
!13011 = !DILocation(line: 95, column: 2, scope: !13007, inlinedAt: !13010)
!13012 = !{i64 2280686}
!13013 = !DILocation(line: 189, column: 3, scope: !13014)
!13014 = distinct !DILexicalBlock(scope: !13015, file: !12954, line: 188, column: 41)
!13015 = distinct !DILexicalBlock(scope: !12986, file: !12954, line: 188, column: 6)
!13016 = !DILocation(line: 191, column: 1, scope: !12986)
!13017 = distinct !DISubprogram(name: "k_current_get", scope: !224, file: !224, line: 530, type: !13018, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !250)
!13018 = !DISubroutineType(types: !13019)
!13019 = !{!13020}
!13020 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !12815)
!13021 = !DILocation(line: 535, column: 9, scope: !13017)
!13022 = !DILocation(line: 535, column: 2, scope: !13017)
!13023 = distinct !DISubprogram(name: "k_thread_abort", scope: !3396, file: !3396, line: 188, type: !13024, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !13026)
!13024 = !DISubroutineType(types: !13025)
!13025 = !{null, !13020}
!13026 = !{!13027}
!13027 = !DILocalVariable(name: "thread", arg: 1, scope: !13023, file: !3396, line: 188, type: !13020)
!13028 = !DILocation(line: 0, scope: !13023)
!13029 = !DILocation(line: 197, column: 2, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !13023, file: !3396, line: 197, column: 2)
!13031 = !{i64 2155061440}
!13032 = !DILocation(line: 198, column: 2, scope: !13023)
!13033 = !DILocation(line: 199, column: 1, scope: !13023)
!13034 = distinct !DISubprogram(name: "z_current_get", scope: !3396, file: !3396, line: 173, type: !13018, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !250)
!13035 = !DILocation(line: 180, column: 2, scope: !13036)
!13036 = distinct !DILexicalBlock(scope: !13034, file: !3396, line: 180, column: 2)
!13037 = !{i64 2155061372}
!13038 = !DILocation(line: 181, column: 9, scope: !13034)
!13039 = !DILocation(line: 181, column: 2, scope: !13034)
!13040 = distinct !DISubprogram(name: "z_early_memset", scope: !1946, file: !1946, line: 108, type: !13041, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !13043)
!13041 = !DISubroutineType(types: !13042)
!13042 = !{null, !102, !107, !252}
!13043 = !{!13044, !13045, !13046}
!13044 = !DILocalVariable(name: "dst", arg: 1, scope: !13040, file: !1946, line: 108, type: !102)
!13045 = !DILocalVariable(name: "c", arg: 2, scope: !13040, file: !1946, line: 108, type: !107)
!13046 = !DILocalVariable(name: "n", arg: 3, scope: !13040, file: !1946, line: 108, type: !252)
!13047 = !DILocation(line: 0, scope: !13040)
!13048 = !DILocation(line: 110, column: 9, scope: !13040)
!13049 = !DILocation(line: 111, column: 1, scope: !13040)
!13050 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1946, file: !1946, line: 121, type: !13051, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !13053)
!13051 = !DISubroutineType(types: !13052)
!13052 = !{null, !102, !13, !252}
!13053 = !{!13054, !13055, !13056}
!13054 = !DILocalVariable(name: "dst", arg: 1, scope: !13050, file: !1946, line: 121, type: !102)
!13055 = !DILocalVariable(name: "src", arg: 2, scope: !13050, file: !1946, line: 121, type: !13)
!13056 = !DILocalVariable(name: "n", arg: 3, scope: !13050, file: !1946, line: 121, type: !252)
!13057 = !DILocation(line: 0, scope: !13050)
!13058 = !DILocation(line: 123, column: 9, scope: !13050)
!13059 = !DILocation(line: 124, column: 1, scope: !13050)
!13060 = distinct !DISubprogram(name: "z_bss_zero", scope: !1946, file: !1946, line: 132, type: !3211, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !250)
!13061 = !DILocation(line: 143, column: 2, scope: !13060)
!13062 = !DILocation(line: 168, column: 1, scope: !13060)
!13063 = distinct !DISubprogram(name: "z_init_cpu", scope: !1946, file: !1946, line: 372, type: !7811, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !13064)
!13064 = !{!13065}
!13065 = !DILocalVariable(name: "id", arg: 1, scope: !13063, file: !1946, line: 372, type: !107)
!13066 = !DILocation(line: 0, scope: !13063)
!13067 = !DILocation(line: 374, column: 2, scope: !13063)
!13068 = !DILocation(line: 375, column: 34, scope: !13063)
!13069 = !DILocation(line: 375, column: 19, scope: !13063)
!13070 = !DILocation(line: 375, column: 31, scope: !13063)
!13071 = !DILocation(line: 376, column: 24, scope: !13063)
!13072 = !DILocation(line: 376, column: 19, scope: !13063)
!13073 = !DILocation(line: 376, column: 22, scope: !13063)
!13074 = !DILocation(line: 378, column: 26, scope: !13063)
!13075 = !DILocation(line: 378, column: 4, scope: !13063)
!13076 = !DILocation(line: 378, column: 50, scope: !13063)
!13077 = !DILocation(line: 377, column: 19, scope: !13063)
!13078 = !DILocation(line: 377, column: 29, scope: !13063)
!13079 = !DILocation(line: 384, column: 1, scope: !13063)
!13080 = distinct !DISubprogram(name: "init_idle_thread", scope: !1946, file: !1946, line: 343, type: !7811, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !13081)
!13081 = !{!13082, !13083, !13084, !13087}
!13082 = !DILocalVariable(name: "i", arg: 1, scope: !13080, file: !1946, line: 343, type: !107)
!13083 = !DILocalVariable(name: "thread", scope: !13080, file: !1946, line: 345, type: !2038)
!13084 = !DILocalVariable(name: "stack", scope: !13080, file: !1946, line: 346, type: !13085)
!13085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13086, size: 32)
!13086 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3752, line: 44, baseType: !2152)
!13087 = !DILocalVariable(name: "tname", scope: !13080, file: !1946, line: 358, type: !256)
!13088 = !DILocation(line: 0, scope: !13080)
!13089 = !DILocation(line: 345, column: 29, scope: !13080)
!13090 = !DILocation(line: 346, column: 28, scope: !13080)
!13091 = !DILocation(line: 362, column: 37, scope: !13080)
!13092 = !DILocation(line: 362, column: 36, scope: !13080)
!13093 = !DILocation(line: 361, column: 2, scope: !13080)
!13094 = !DILocation(line: 365, column: 2, scope: !13080)
!13095 = !DILocation(line: 370, column: 1, scope: !13080)
!13096 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2153, file: !2153, line: 331, type: !13097, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !13099)
!13097 = !DISubroutineType(types: !13098)
!13098 = !{!256, !13085}
!13099 = !{!13100}
!13100 = !DILocalVariable(name: "sym", arg: 1, scope: !13096, file: !2153, line: 331, type: !13085)
!13101 = !DILocation(line: 0, scope: !13096)
!13102 = !DILocation(line: 333, column: 21, scope: !13096)
!13103 = !DILocation(line: 333, column: 2, scope: !13096)
!13104 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13105, file: !13105, line: 155, type: !13106, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !13108)
!13105 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13106 = !DISubroutineType(types: !13107)
!13107 = !{null, !2038}
!13108 = !{!13109}
!13109 = !DILocalVariable(name: "thread", arg: 1, scope: !13104, file: !13105, line: 155, type: !2038)
!13110 = !DILocation(line: 0, scope: !13104)
!13111 = !DILocation(line: 157, column: 15, scope: !13104)
!13112 = !DILocation(line: 157, column: 28, scope: !13104)
!13113 = !DILocation(line: 158, column: 1, scope: !13104)
!13114 = distinct !DISubprogram(name: "z_cstart", scope: !1946, file: !1946, line: 501, type: !3211, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !13115)
!13115 = !{!13116}
!13116 = !DILocalVariable(name: "dummy_thread", scope: !13114, file: !1946, line: 518, type: !2039)
!13117 = !DILocation(line: 507, column: 2, scope: !13114)
!13118 = !DILocation(line: 43, column: 14, scope: !13119, inlinedAt: !13123)
!13119 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !13120, file: !13120, line: 40, type: !3211, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !13121)
!13120 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13121 = !{!13122}
!13122 = !DILocalVariable(name: "msp", scope: !13119, file: !13120, line: 42, type: !162)
!13123 = distinct !DILocation(line: 44, column: 2, scope: !13124, inlinedAt: !13126)
!13124 = distinct !DISubprogram(name: "arch_kernel_init", scope: !13125, file: !13125, line: 42, type: !3211, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !250)
!13125 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13126 = distinct !DILocation(line: 510, column: 2, scope: !13114)
!13127 = !DILocation(line: 43, column: 3, scope: !13119, inlinedAt: !13123)
!13128 = !DILocation(line: 43, column: 60, scope: !13119, inlinedAt: !13123)
!13129 = !DILocation(line: 0, scope: !13119, inlinedAt: !13123)
!13130 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !13131, file: !6167, line: 1153, type: !162)
!13131 = distinct !DISubprogram(name: "__set_MSP", scope: !6167, file: !6167, line: 1153, type: !6258, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !13132)
!13132 = !{!13130}
!13133 = !DILocation(line: 0, scope: !13131, inlinedAt: !13134)
!13134 = distinct !DILocation(line: 46, column: 2, scope: !13119, inlinedAt: !13123)
!13135 = !DILocation(line: 1155, column: 3, scope: !13131, inlinedAt: !13134)
!13136 = !{i64 3745808}
!13137 = !DILocation(line: 62, column: 11, scope: !13119, inlinedAt: !13123)
!13138 = !DILocation(line: 102, column: 2, scope: !13139, inlinedAt: !13140)
!13139 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6961, file: !6961, line: 97, type: !3211, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !250)
!13140 = distinct !DILocation(line: 45, column: 2, scope: !13124, inlinedAt: !13126)
!13141 = !DILocation(line: 108, column: 2, scope: !13139, inlinedAt: !13140)
!13142 = !DILocation(line: 112, column: 2, scope: !13139, inlinedAt: !13140)
!13143 = !DILocation(line: 113, column: 2, scope: !13139, inlinedAt: !13140)
!13144 = !DILocation(line: 114, column: 2, scope: !13139, inlinedAt: !13140)
!13145 = !DILocation(line: 116, column: 2, scope: !13139, inlinedAt: !13140)
!13146 = !DILocation(line: 123, column: 13, scope: !13139, inlinedAt: !13140)
!13147 = !DILocation(line: 46, column: 2, scope: !13124, inlinedAt: !13126)
!13148 = !DILocation(line: 47, column: 2, scope: !13124, inlinedAt: !13126)
!13149 = !DILocation(line: 174, column: 12, scope: !13150, inlinedAt: !13151)
!13150 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6961, file: !6961, line: 169, type: !3211, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !250)
!13151 = distinct !DILocation(line: 48, column: 2, scope: !13124, inlinedAt: !13126)
!13152 = !DILocation(line: 179, column: 12, scope: !13150, inlinedAt: !13151)
!13153 = !DILocation(line: 50, column: 2, scope: !13124, inlinedAt: !13126)
!13154 = !DILocation(line: 57, column: 2, scope: !13124, inlinedAt: !13126)
!13155 = !DILocation(line: 518, column: 2, scope: !13114)
!13156 = !DILocation(line: 518, column: 18, scope: !13114)
!13157 = !DILocation(line: 520, column: 2, scope: !13114)
!13158 = !DILocation(line: 523, column: 2, scope: !13114)
!13159 = !DILocation(line: 526, column: 2, scope: !13114)
!13160 = !DILocation(line: 527, column: 2, scope: !13114)
!13161 = !DILocation(line: 543, column: 24, scope: !13114)
!13162 = !DILocation(line: 543, column: 2, scope: !13114)
!13163 = !DILocation(line: 0, scope: !2172)
!13164 = !DILocation(line: 246, column: 15, scope: !2190)
!13165 = !DILocation(line: 246, column: 36, scope: !2189)
!13166 = !DILocation(line: 246, column: 2, scope: !2190)
!13167 = !DILocation(line: 247, column: 37, scope: !2188)
!13168 = !DILocation(line: 0, scope: !2188)
!13169 = !DILocation(line: 248, column: 19, scope: !2188)
!13170 = !DILocation(line: 248, column: 12, scope: !2188)
!13171 = !DILocation(line: 250, column: 11, scope: !13172)
!13172 = distinct !DILexicalBlock(scope: !2188, file: !1946, line: 250, column: 7)
!13173 = !DILocation(line: 250, column: 7, scope: !2188)
!13174 = !DILocation(line: 254, column: 11, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !13176, file: !1946, line: 254, column: 8)
!13176 = distinct !DILexicalBlock(scope: !13172, file: !1946, line: 250, column: 20)
!13177 = !DILocation(line: 254, column: 8, scope: !13176)
!13178 = !DILocation(line: 255, column: 9, scope: !13179)
!13179 = distinct !DILexicalBlock(scope: !13175, file: !1946, line: 254, column: 17)
!13180 = !DILocation(line: 258, column: 9, scope: !13179)
!13181 = !DILocation(line: 261, column: 28, scope: !13179)
!13182 = !DILocation(line: 261, column: 10, scope: !13179)
!13183 = !DILocation(line: 261, column: 17, scope: !13179)
!13184 = !DILocation(line: 261, column: 26, scope: !13179)
!13185 = !DILocation(line: 262, column: 4, scope: !13179)
!13186 = !DILocation(line: 263, column: 9, scope: !13176)
!13187 = !DILocation(line: 263, column: 16, scope: !13176)
!13188 = !DILocation(line: 263, column: 28, scope: !13176)
!13189 = !DILocation(line: 264, column: 3, scope: !13176)
!13190 = !DILocation(line: 246, column: 60, scope: !2189)
!13191 = distinct !{!13191, !13166, !13192}
!13192 = !DILocation(line: 265, column: 2, scope: !2190)
!13193 = !DILocation(line: 266, column: 1, scope: !2172)
!13194 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !497, file: !497, line: 1814, type: !6201, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !13195)
!13195 = !{!13196, !13197}
!13196 = !DILocalVariable(name: "IRQn", arg: 1, scope: !13194, file: !497, line: 1814, type: !762)
!13197 = !DILocalVariable(name: "priority", arg: 2, scope: !13194, file: !497, line: 1814, type: !162)
!13198 = !DILocation(line: 0, scope: !13194)
!13199 = !DILocation(line: 1822, column: 48, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13201, file: !497, line: 1821, column: 3)
!13201 = distinct !DILexicalBlock(scope: !13194, file: !497, line: 1816, column: 7)
!13202 = !DILocation(line: 1822, column: 32, scope: !13200)
!13203 = !DILocation(line: 1822, column: 40, scope: !13200)
!13204 = !DILocation(line: 1822, column: 5, scope: !13200)
!13205 = !DILocation(line: 1822, column: 46, scope: !13200)
!13206 = !DILocation(line: 1824, column: 1, scope: !13194)
!13207 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !13125, file: !13125, line: 32, type: !3211, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!13208 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !13209, file: !13209, line: 215, type: !13106, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !13210)
!13209 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13210 = !{!13211}
!13211 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !13208, file: !13209, line: 215, type: !2038)
!13212 = !DILocation(line: 0, scope: !13208)
!13213 = !DILocation(line: 217, column: 21, scope: !13208)
!13214 = !DILocation(line: 217, column: 34, scope: !13208)
!13215 = !DILocation(line: 221, column: 21, scope: !13208)
!13216 = !DILocation(line: 221, column: 34, scope: !13208)
!13217 = !DILocation(line: 223, column: 27, scope: !13208)
!13218 = !DILocation(line: 223, column: 33, scope: !13208)
!13219 = !DILocation(line: 224, column: 27, scope: !13208)
!13220 = !DILocation(line: 224, column: 32, scope: !13208)
!13221 = !DILocation(line: 232, column: 16, scope: !13208)
!13222 = !DILocation(line: 232, column: 30, scope: !13208)
!13223 = !DILocation(line: 239, column: 24, scope: !13208)
!13224 = !DILocation(line: 240, column: 1, scope: !13208)
!13225 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1946, file: !1946, line: 399, type: !13226, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !13228)
!13226 = !DISubroutineType(types: !13227)
!13227 = !{!256}
!13228 = !{!13229}
!13229 = !DILocalVariable(name: "stack_ptr", scope: !13225, file: !1946, line: 401, type: !256)
!13230 = !DILocation(line: 404, column: 2, scope: !13225)
!13231 = !DILocation(line: 416, column: 24, scope: !13225)
!13232 = !DILocation(line: 418, column: 14, scope: !13225)
!13233 = !DILocation(line: 0, scope: !13225)
!13234 = !DILocation(line: 423, column: 2, scope: !13225)
!13235 = !DILocation(line: 424, column: 2, scope: !13225)
!13236 = !DILocation(line: 426, column: 2, scope: !13225)
!13237 = !DILocation(line: 428, column: 2, scope: !13225)
!13238 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1946, file: !1946, line: 432, type: !3428, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !13239)
!13239 = !{!13240}
!13240 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !13238, file: !1946, line: 432, type: !256)
!13241 = !DILocation(line: 0, scope: !13238)
!13242 = !DILocation(line: 435, column: 2, scope: !13238)
!13243 = !DILocation(line: 445, column: 2, scope: !13238)
!13244 = distinct !DISubprogram(name: "bg_thread_main", scope: !1946, file: !1946, line: 277, type: !3754, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1942, retainedNodes: !13245)
!13245 = !{!13246, !13247, !13248}
!13246 = !DILocalVariable(name: "unused1", arg: 1, scope: !13244, file: !1946, line: 277, type: !102)
!13247 = !DILocalVariable(name: "unused2", arg: 2, scope: !13244, file: !1946, line: 277, type: !102)
!13248 = !DILocalVariable(name: "unused3", arg: 3, scope: !13244, file: !1946, line: 277, type: !102)
!13249 = !DILocation(line: 0, scope: !13244)
!13250 = !DILocation(line: 291, column: 20, scope: !13244)
!13251 = !DILocation(line: 293, column: 2, scope: !13244)
!13252 = !DILocation(line: 297, column: 2, scope: !13244)
!13253 = !DILocation(line: 305, column: 2, scope: !13244)
!13254 = !DILocation(line: 307, column: 2, scope: !13244)
!13255 = !DILocation(line: 330, column: 8, scope: !13244)
!13256 = !DILocation(line: 333, column: 34, scope: !13244)
!13257 = !DILocation(line: 339, column: 1, scope: !13244)
!13258 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2201, file: !2201, line: 45, type: !13259, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13267)
!13259 = !DISubroutineType(types: !13260)
!13260 = !{null, !13261, !102}
!13261 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !224, line: 103, baseType: !13262)
!13262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13263, size: 32)
!13263 = !DISubroutineType(types: !13264)
!13264 = !{null, !13265, !102}
!13265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13266, size: 32)
!13266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2206)
!13267 = !{!13268, !13269}
!13268 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13258, file: !2201, line: 45, type: !13261)
!13269 = !DILocalVariable(name: "user_data", arg: 2, scope: !13258, file: !2201, line: 45, type: !102)
!13270 = !DILocation(line: 0, scope: !13258)
!13271 = !DILocation(line: 71, column: 1, scope: !13258)
!13272 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2201, file: !2201, line: 73, type: !13259, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13273)
!13273 = !{!13274, !13275}
!13274 = !DILocalVariable(name: "user_cb", arg: 1, scope: !13272, file: !2201, line: 73, type: !13261)
!13275 = !DILocalVariable(name: "user_data", arg: 2, scope: !13272, file: !2201, line: 73, type: !102)
!13276 = !DILocation(line: 0, scope: !13272)
!13277 = !DILocation(line: 95, column: 1, scope: !13272)
!13278 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2201, file: !2201, line: 97, type: !6962, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !250)
!13279 = !DILocation(line: 1031, column: 3, scope: !13280, inlinedAt: !13283)
!13280 = distinct !DISubprogram(name: "__get_IPSR", scope: !6167, file: !6167, line: 1027, type: !6248, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13281)
!13281 = !{!13282}
!13282 = !DILocalVariable(name: "result", scope: !13280, file: !6167, line: 1029, type: !162)
!13283 = distinct !DILocation(line: 48, column: 10, scope: !13284, inlinedAt: !13285)
!13284 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6961, file: !6961, line: 46, type: !6962, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !250)
!13285 = distinct !DILocation(line: 99, column: 9, scope: !13278)
!13286 = !{i64 3751459}
!13287 = !DILocation(line: 0, scope: !13280, inlinedAt: !13283)
!13288 = !DILocation(line: 48, column: 9, scope: !13284, inlinedAt: !13285)
!13289 = !DILocation(line: 99, column: 2, scope: !13278)
!13290 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2201, file: !2201, line: 106, type: !3211, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !250)
!13291 = !DILocation(line: 108, column: 2, scope: !13290)
!13292 = !DILocation(line: 108, column: 17, scope: !13290)
!13293 = !DILocation(line: 108, column: 30, scope: !13290)
!13294 = !DILocation(line: 109, column: 1, scope: !13290)
!13295 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2201, file: !2201, line: 116, type: !3211, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !250)
!13296 = !DILocation(line: 118, column: 2, scope: !13295)
!13297 = !DILocation(line: 118, column: 17, scope: !13295)
!13298 = !DILocation(line: 118, column: 30, scope: !13295)
!13299 = !DILocation(line: 119, column: 1, scope: !13295)
!13300 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2201, file: !2201, line: 126, type: !6962, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !250)
!13301 = !DILocation(line: 128, column: 10, scope: !13300)
!13302 = !DILocation(line: 128, column: 25, scope: !13300)
!13303 = !DILocation(line: 128, column: 38, scope: !13300)
!13304 = !DILocation(line: 128, column: 53, scope: !13300)
!13305 = !DILocation(line: 128, column: 2, scope: !13300)
!13306 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2201, file: !2201, line: 187, type: !13307, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13309)
!13307 = !DISubroutineType(types: !13308)
!13308 = !{!107, !2205, !123}
!13309 = !{!13310, !13311}
!13310 = !DILocalVariable(name: "thread", arg: 1, scope: !13306, file: !2201, line: 187, type: !2205)
!13311 = !DILocalVariable(name: "value", arg: 2, scope: !13306, file: !2201, line: 187, type: !123)
!13312 = !DILocation(line: 0, scope: !13306)
!13313 = !DILocation(line: 206, column: 2, scope: !13306)
!13314 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2201, file: !2201, line: 238, type: !13315, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13317)
!13315 = !DISubroutineType(types: !13316)
!13316 = !{!123, !2205}
!13317 = !{!13318}
!13318 = !DILocalVariable(name: "thread", arg: 1, scope: !13314, file: !2201, line: 238, type: !2205)
!13319 = !DILocation(line: 0, scope: !13314)
!13320 = !DILocation(line: 244, column: 2, scope: !13314)
!13321 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2201, file: !2201, line: 248, type: !13322, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13324)
!13322 = !DISubroutineType(types: !13323)
!13323 = !{!107, !2204, !256, !252}
!13324 = !{!13325, !13326, !13327}
!13325 = !DILocalVariable(name: "thread", arg: 1, scope: !13321, file: !2201, line: 248, type: !2204)
!13326 = !DILocalVariable(name: "buf", arg: 2, scope: !13321, file: !2201, line: 248, type: !256)
!13327 = !DILocalVariable(name: "size", arg: 3, scope: !13321, file: !2201, line: 248, type: !252)
!13328 = !DILocation(line: 0, scope: !13321)
!13329 = !DILocation(line: 257, column: 2, scope: !13321)
!13330 = !DILocation(line: 0, scope: !2200)
!13331 = !DILocation(line: 281, column: 11, scope: !13332)
!13332 = distinct !DILexicalBlock(scope: !2200, file: !2201, line: 281, column: 6)
!13333 = !DILocation(line: 281, column: 20, scope: !13332)
!13334 = !DILocation(line: 275, column: 45, scope: !2200)
!13335 = !DILocation(line: 285, column: 10, scope: !2200)
!13336 = !DILocation(line: 0, scope: !2321)
!13337 = !DILocation(line: 293, column: 39, scope: !13338)
!13338 = distinct !DILexicalBlock(scope: !2321, file: !2201, line: 293, column: 2)
!13339 = !DILocation(line: 293, column: 2, scope: !2321)
!13340 = !DILocation(line: 273, column: 14, scope: !2200)
!13341 = !DILocation(line: 309, column: 2, scope: !2200)
!13342 = !DILocation(line: 309, column: 11, scope: !2200)
!13343 = !DILocation(line: 311, column: 2, scope: !2200)
!13344 = !DILocation(line: 293, column: 26, scope: !13338)
!13345 = !DILocation(line: 294, column: 9, scope: !13346)
!13346 = distinct !DILexicalBlock(scope: !13338, file: !2201, line: 293, column: 54)
!13347 = !DILocation(line: 295, column: 21, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13346, file: !2201, line: 295, column: 7)
!13349 = !DILocation(line: 295, column: 28, scope: !13348)
!13350 = !DILocation(line: 295, column: 7, scope: !13346)
!13351 = !DILocation(line: 299, column: 25, scope: !13346)
!13352 = !DILocation(line: 299, column: 41, scope: !13346)
!13353 = !DILocation(line: 300, column: 7, scope: !13346)
!13354 = !DILocation(line: 300, column: 26, scope: !13346)
!13355 = !DILocation(line: 299, column: 10, scope: !13346)
!13356 = !DILocation(line: 299, column: 7, scope: !13346)
!13357 = !DILocation(line: 302, column: 16, scope: !13346)
!13358 = !DILocation(line: 304, column: 20, scope: !13359)
!13359 = distinct !DILexicalBlock(scope: !13346, file: !2201, line: 304, column: 7)
!13360 = !DILocation(line: 304, column: 7, scope: !13346)
!13361 = !DILocation(line: 305, column: 26, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13359, file: !2201, line: 304, column: 26)
!13363 = !DILocation(line: 305, column: 42, scope: !13362)
!13364 = !DILocation(line: 305, column: 11, scope: !13362)
!13365 = !DILocation(line: 305, column: 8, scope: !13362)
!13366 = !DILocation(line: 306, column: 3, scope: !13362)
!13367 = !DILocation(line: 293, column: 50, scope: !13338)
!13368 = !DILocation(line: 312, column: 1, scope: !2200)
!13369 = distinct !DISubprogram(name: "copy_bytes", scope: !2201, file: !2201, line: 261, type: !13370, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13372)
!13370 = !DISubroutineType(types: !13371)
!13371 = !{!252, !256, !252, !123, !252}
!13372 = !{!13373, !13374, !13375, !13376, !13377}
!13373 = !DILocalVariable(name: "dest", arg: 1, scope: !13369, file: !2201, line: 261, type: !256)
!13374 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13369, file: !2201, line: 261, type: !252)
!13375 = !DILocalVariable(name: "src", arg: 3, scope: !13369, file: !2201, line: 261, type: !123)
!13376 = !DILocalVariable(name: "src_size", arg: 4, scope: !13369, file: !2201, line: 261, type: !252)
!13377 = !DILocalVariable(name: "bytes_to_copy", scope: !13369, file: !2201, line: 263, type: !252)
!13378 = !DILocation(line: 0, scope: !13369)
!13379 = !DILocation(line: 265, column: 18, scope: !13369)
!13380 = !DILocation(line: 266, column: 2, scope: !13369)
!13381 = !DILocation(line: 268, column: 2, scope: !13369)
!13382 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2201, file: !2201, line: 383, type: !13383, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13385)
!13383 = !DISubroutineType(types: !13384)
!13384 = !{null, !2205}
!13385 = !{!13386}
!13386 = !DILocalVariable(name: "thread", arg: 1, scope: !13382, file: !2201, line: 383, type: !2205)
!13387 = !DILocation(line: 0, scope: !13382)
!13388 = !DILocation(line: 387, column: 2, scope: !13382)
!13389 = !DILocation(line: 388, column: 1, scope: !13382)
!13390 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2201, file: !2201, line: 528, type: !13391, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13398)
!13391 = !DISubroutineType(types: !13392)
!13392 = !{!256, !2205, !13393, !252, !3751, !102, !102, !102, !107, !162, !123}
!13393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13394, size: 32)
!13394 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3752, line: 44, baseType: !13395)
!13395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2153, line: 47, size: 8, elements: !13396)
!13396 = !{!13397}
!13397 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13395, file: !2153, line: 48, baseType: !125, size: 8)
!13398 = !{!13399, !13400, !13401, !13402, !13403, !13404, !13405, !13406, !13407, !13408, !13409}
!13399 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13390, file: !2201, line: 528, type: !2205)
!13400 = !DILocalVariable(name: "stack", arg: 2, scope: !13390, file: !2201, line: 529, type: !13393)
!13401 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13390, file: !2201, line: 529, type: !252)
!13402 = !DILocalVariable(name: "entry", arg: 4, scope: !13390, file: !2201, line: 530, type: !3751)
!13403 = !DILocalVariable(name: "p1", arg: 5, scope: !13390, file: !2201, line: 531, type: !102)
!13404 = !DILocalVariable(name: "p2", arg: 6, scope: !13390, file: !2201, line: 531, type: !102)
!13405 = !DILocalVariable(name: "p3", arg: 7, scope: !13390, file: !2201, line: 531, type: !102)
!13406 = !DILocalVariable(name: "prio", arg: 8, scope: !13390, file: !2201, line: 532, type: !107)
!13407 = !DILocalVariable(name: "options", arg: 9, scope: !13390, file: !2201, line: 532, type: !162)
!13408 = !DILocalVariable(name: "name", arg: 10, scope: !13390, file: !2201, line: 532, type: !123)
!13409 = !DILocalVariable(name: "stack_ptr", scope: !13390, file: !2201, line: 534, type: !256)
!13410 = !DILocation(line: 0, scope: !13390)
!13411 = !DILocation(line: 550, column: 28, scope: !13390)
!13412 = !DILocation(line: 550, column: 2, scope: !13390)
!13413 = !DILocation(line: 553, column: 34, scope: !13390)
!13414 = !DILocation(line: 553, column: 2, scope: !13390)
!13415 = !DILocation(line: 554, column: 14, scope: !13390)
!13416 = !DILocation(line: 564, column: 2, scope: !13390)
!13417 = !DILocation(line: 567, column: 14, scope: !13390)
!13418 = !DILocation(line: 567, column: 24, scope: !13390)
!13419 = !DILocation(line: 612, column: 7, scope: !13420)
!13420 = distinct !DILexicalBlock(scope: !13390, file: !2201, line: 612, column: 6)
!13421 = !DILocation(line: 612, column: 6, scope: !13390)
!13422 = !DILocation(line: 627, column: 40, scope: !13390)
!13423 = !DILocation(line: 637, column: 2, scope: !13390)
!13424 = !DILocation(line: 613, column: 15, scope: !13425)
!13425 = distinct !DILexicalBlock(scope: !13420, file: !2201, line: 612, column: 17)
!13426 = !DILocation(line: 613, column: 29, scope: !13425)
!13427 = !DILocation(line: 638, column: 1, scope: !13390)
!13428 = distinct !DISubprogram(name: "z_waitq_init", scope: !13429, file: !13429, line: 47, type: !13430, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13432)
!13429 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13430 = !DISubroutineType(types: !13431)
!13431 = !{null, !2236}
!13432 = !{!13433}
!13433 = !DILocalVariable(name: "w", arg: 1, scope: !13428, file: !13429, line: 47, type: !2236)
!13434 = !DILocation(line: 0, scope: !13428)
!13435 = !DILocation(line: 49, column: 21, scope: !13428)
!13436 = !DILocation(line: 49, column: 2, scope: !13428)
!13437 = !DILocation(line: 50, column: 1, scope: !13428)
!13438 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2201, file: !2201, line: 791, type: !13439, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13442)
!13439 = !DISubroutineType(types: !13440)
!13440 = !{null, !13441, !107, !162, !32}
!13441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2209, size: 32)
!13442 = !{!13443, !13444, !13445, !13446}
!13443 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13438, file: !2201, line: 791, type: !13441)
!13444 = !DILocalVariable(name: "priority", arg: 2, scope: !13438, file: !2201, line: 791, type: !107)
!13445 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13438, file: !2201, line: 792, type: !162)
!13446 = !DILocalVariable(name: "options", arg: 4, scope: !13438, file: !2201, line: 792, type: !32)
!13447 = !DILocation(line: 0, scope: !13438)
!13448 = !DILocation(line: 795, column: 15, scope: !13438)
!13449 = !DILocation(line: 795, column: 25, scope: !13438)
!13450 = !DILocation(line: 796, column: 30, scope: !13438)
!13451 = !DILocation(line: 796, column: 15, scope: !13438)
!13452 = !DILocation(line: 796, column: 28, scope: !13438)
!13453 = !DILocation(line: 797, column: 30, scope: !13438)
!13454 = !DILocation(line: 797, column: 15, scope: !13438)
!13455 = !DILocation(line: 797, column: 28, scope: !13438)
!13456 = !DILocation(line: 799, column: 22, scope: !13438)
!13457 = !DILocation(line: 799, column: 15, scope: !13438)
!13458 = !DILocation(line: 799, column: 20, scope: !13438)
!13459 = !DILocation(line: 801, column: 15, scope: !13438)
!13460 = !DILocation(line: 801, column: 28, scope: !13438)
!13461 = !DILocation(line: 814, column: 2, scope: !13438)
!13462 = !DILocation(line: 815, column: 1, scope: !13438)
!13463 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2201, file: !2201, line: 449, type: !13464, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13466)
!13464 = !DISubroutineType(types: !13465)
!13465 = !{!256, !2205, !13393, !252}
!13466 = !{!13467, !13468, !13469, !13470, !13471, !13472, !13473, !13474}
!13467 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13463, file: !2201, line: 449, type: !2205)
!13468 = !DILocalVariable(name: "stack", arg: 2, scope: !13463, file: !2201, line: 450, type: !13393)
!13469 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13463, file: !2201, line: 450, type: !252)
!13470 = !DILocalVariable(name: "stack_obj_size", scope: !13463, file: !2201, line: 452, type: !252)
!13471 = !DILocalVariable(name: "stack_buf_size", scope: !13463, file: !2201, line: 452, type: !252)
!13472 = !DILocalVariable(name: "stack_ptr", scope: !13463, file: !2201, line: 453, type: !256)
!13473 = !DILocalVariable(name: "stack_buf_start", scope: !13463, file: !2201, line: 453, type: !256)
!13474 = !DILocalVariable(name: "delta", scope: !13463, file: !2201, line: 454, type: !252)
!13475 = !DILocation(line: 0, scope: !13463)
!13476 = !DILocation(line: 465, column: 20, scope: !13477)
!13477 = distinct !DILexicalBlock(scope: !13463, file: !2201, line: 463, column: 2)
!13478 = !DILocation(line: 466, column: 21, scope: !13477)
!13479 = !DILocation(line: 473, column: 28, scope: !13463)
!13480 = !DILocation(line: 514, column: 33, scope: !13463)
!13481 = !DILocation(line: 514, column: 25, scope: !13463)
!13482 = !DILocation(line: 514, column: 31, scope: !13463)
!13483 = !DILocation(line: 515, column: 25, scope: !13463)
!13484 = !DILocation(line: 515, column: 30, scope: !13463)
!13485 = !DILocation(line: 516, column: 25, scope: !13463)
!13486 = !DILocation(line: 516, column: 31, scope: !13463)
!13487 = !DILocation(line: 520, column: 2, scope: !13463)
!13488 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2153, file: !2153, line: 331, type: !13489, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13491)
!13489 = !DISubroutineType(types: !13490)
!13490 = !{!256, !13393}
!13491 = !{!13492}
!13492 = !DILocalVariable(name: "sym", arg: 1, scope: !13488, file: !2153, line: 331, type: !13393)
!13493 = !DILocation(line: 0, scope: !13488)
!13494 = !DILocation(line: 333, column: 21, scope: !13488)
!13495 = !DILocation(line: 333, column: 2, scope: !13488)
!13496 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13497, file: !13497, line: 40, type: !13498, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13500)
!13497 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13498 = !DISubroutineType(types: !13499)
!13499 = !{null, !13441}
!13500 = !{!13501}
!13501 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13496, file: !13497, line: 40, type: !13441)
!13502 = !DILocation(line: 0, scope: !13496)
!13503 = !DILocation(line: 42, column: 31, scope: !13496)
!13504 = !DILocation(line: 42, column: 2, scope: !13496)
!13505 = !DILocation(line: 43, column: 1, scope: !13496)
!13506 = distinct !DISubprogram(name: "z_init_timeout", scope: !13497, file: !13497, line: 25, type: !2262, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13507)
!13507 = !{!13508}
!13508 = !DILocalVariable(name: "to", arg: 1, scope: !13506, file: !13497, line: 25, type: !2264)
!13509 = !DILocation(line: 0, scope: !13506)
!13510 = !DILocation(line: 27, column: 22, scope: !13506)
!13511 = !DILocation(line: 27, column: 2, scope: !13506)
!13512 = !DILocation(line: 28, column: 1, scope: !13506)
!13513 = distinct !DISubprogram(name: "sys_dnode_init", scope: !233, file: !233, line: 211, type: !13514, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13516)
!13514 = !DISubroutineType(types: !13515)
!13515 = !{null, !2308}
!13516 = !{!13517}
!13517 = !DILocalVariable(name: "node", arg: 1, scope: !13513, file: !233, line: 211, type: !2308)
!13518 = !DILocation(line: 0, scope: !13513)
!13519 = !DILocation(line: 213, column: 8, scope: !13513)
!13520 = !DILocation(line: 213, column: 13, scope: !13513)
!13521 = !DILocation(line: 214, column: 8, scope: !13513)
!13522 = !DILocation(line: 214, column: 13, scope: !13513)
!13523 = !DILocation(line: 215, column: 1, scope: !13513)
!13524 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !13525, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13528)
!13525 = !DISubroutineType(types: !13526)
!13526 = !{null, !13527}
!13527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 32)
!13528 = !{!13529}
!13529 = !DILocalVariable(name: "list", arg: 1, scope: !13524, file: !233, line: 197, type: !13527)
!13530 = !DILocation(line: 0, scope: !13524)
!13531 = !DILocation(line: 199, column: 8, scope: !13524)
!13532 = !DILocation(line: 199, column: 13, scope: !13524)
!13533 = !DILocation(line: 200, column: 8, scope: !13524)
!13534 = !DILocation(line: 200, column: 13, scope: !13524)
!13535 = !DILocation(line: 201, column: 1, scope: !13524)
!13536 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2201, file: !2201, line: 641, type: !13537, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13543)
!13537 = !DISubroutineType(types: !13538)
!13538 = !{!2204, !2205, !13393, !252, !3751, !102, !102, !102, !107, !162, !13539}
!13539 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13540)
!13540 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13541)
!13541 = !{!13542}
!13542 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13540, file: !104, line: 66, baseType: !103, size: 64)
!13543 = !{!13544, !13545, !13546, !13547, !13548, !13549, !13550, !13551, !13552, !13553}
!13544 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13536, file: !2201, line: 641, type: !2205)
!13545 = !DILocalVariable(name: "stack", arg: 2, scope: !13536, file: !2201, line: 642, type: !13393)
!13546 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13536, file: !2201, line: 643, type: !252)
!13547 = !DILocalVariable(name: "entry", arg: 4, scope: !13536, file: !2201, line: 643, type: !3751)
!13548 = !DILocalVariable(name: "p1", arg: 5, scope: !13536, file: !2201, line: 644, type: !102)
!13549 = !DILocalVariable(name: "p2", arg: 6, scope: !13536, file: !2201, line: 644, type: !102)
!13550 = !DILocalVariable(name: "p3", arg: 7, scope: !13536, file: !2201, line: 644, type: !102)
!13551 = !DILocalVariable(name: "prio", arg: 8, scope: !13536, file: !2201, line: 645, type: !107)
!13552 = !DILocalVariable(name: "options", arg: 9, scope: !13536, file: !2201, line: 645, type: !162)
!13553 = !DILocalVariable(name: "delay", arg: 10, scope: !13536, file: !2201, line: 645, type: !13539)
!13554 = !DILocation(line: 0, scope: !13536)
!13555 = !DILocation(line: 649, column: 2, scope: !13536)
!13556 = !DILocation(line: 652, column: 7, scope: !13557)
!13557 = distinct !DILexicalBlock(scope: !13536, file: !2201, line: 652, column: 6)
!13558 = !DILocation(line: 652, column: 6, scope: !13536)
!13559 = !DILocation(line: 653, column: 3, scope: !13560)
!13560 = distinct !DILexicalBlock(scope: !13557, file: !2201, line: 652, column: 39)
!13561 = !DILocation(line: 654, column: 2, scope: !13560)
!13562 = !DILocation(line: 656, column: 2, scope: !13536)
!13563 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2201, file: !2201, line: 401, type: !13564, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13566)
!13564 = !DISubroutineType(types: !13565)
!13565 = !{null, !2205, !13539}
!13566 = !{!13567, !13568}
!13567 = !DILocalVariable(name: "thread", arg: 1, scope: !13563, file: !2201, line: 401, type: !2205)
!13568 = !DILocalVariable(name: "delay", arg: 2, scope: !13563, file: !2201, line: 401, type: !13539)
!13569 = !DILocation(line: 0, scope: !13563)
!13570 = !DILocation(line: 404, column: 6, scope: !13571)
!13571 = distinct !DILexicalBlock(scope: !13563, file: !2201, line: 404, column: 6)
!13572 = !DILocation(line: 404, column: 6, scope: !13563)
!13573 = !DILocation(line: 405, column: 3, scope: !13574)
!13574 = distinct !DILexicalBlock(scope: !13571, file: !2201, line: 404, column: 38)
!13575 = !DILocation(line: 406, column: 2, scope: !13574)
!13576 = !DILocation(line: 407, column: 3, scope: !13577)
!13577 = distinct !DILexicalBlock(scope: !13571, file: !2201, line: 406, column: 9)
!13578 = !DILocation(line: 413, column: 1, scope: !13563)
!13579 = distinct !DISubprogram(name: "k_thread_start", scope: !3396, file: !3396, line: 205, type: !13580, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13582)
!13580 = !DISubroutineType(types: !13581)
!13581 = !{null, !2204}
!13582 = !{!13583}
!13583 = !DILocalVariable(name: "thread", arg: 1, scope: !13579, file: !3396, line: 205, type: !2204)
!13584 = !DILocation(line: 0, scope: !13579)
!13585 = !DILocation(line: 214, column: 2, scope: !13586)
!13586 = distinct !DILexicalBlock(scope: !13579, file: !3396, line: 214, column: 2)
!13587 = !{i64 2155086664}
!13588 = !DILocation(line: 215, column: 2, scope: !13579)
!13589 = !DILocation(line: 216, column: 1, scope: !13579)
!13590 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13497, file: !13497, line: 47, type: !13564, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13591)
!13591 = !{!13592, !13593}
!13592 = !DILocalVariable(name: "thread", arg: 1, scope: !13590, file: !13497, line: 47, type: !2205)
!13593 = !DILocalVariable(name: "ticks", arg: 2, scope: !13590, file: !13497, line: 47, type: !13539)
!13594 = !DILocation(line: 0, scope: !13590)
!13595 = !DILocation(line: 49, column: 30, scope: !13590)
!13596 = !DILocation(line: 49, column: 2, scope: !13590)
!13597 = !DILocation(line: 50, column: 1, scope: !13590)
!13598 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2201, file: !2201, line: 748, type: !3211, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13599)
!13599 = !{!13600, !13618}
!13600 = !DILocalVariable(name: "thread_data", scope: !13601, file: !2201, line: 750, type: !13602)
!13601 = distinct !DILexicalBlock(scope: !13598, file: !2201, line: 750, column: 2)
!13602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13603, size: 32)
!13603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !224, line: 620, size: 384, elements: !13604)
!13604 = !{!13605, !13606, !13607, !13608, !13609, !13610, !13611, !13612, !13613, !13614, !13615, !13617}
!13605 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13603, file: !224, line: 621, baseType: !2205, size: 32)
!13606 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13603, file: !224, line: 622, baseType: !13393, size: 32, offset: 32)
!13607 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13603, file: !224, line: 623, baseType: !32, size: 32, offset: 64)
!13608 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13603, file: !224, line: 624, baseType: !3751, size: 32, offset: 96)
!13609 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13603, file: !224, line: 625, baseType: !102, size: 32, offset: 128)
!13610 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13603, file: !224, line: 626, baseType: !102, size: 32, offset: 160)
!13611 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13603, file: !224, line: 627, baseType: !102, size: 32, offset: 192)
!13612 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13603, file: !224, line: 628, baseType: !107, size: 32, offset: 224)
!13613 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13603, file: !224, line: 629, baseType: !162, size: 32, offset: 256)
!13614 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13603, file: !224, line: 630, baseType: !736, size: 32, offset: 288)
!13615 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13603, file: !224, line: 631, baseType: !13616, size: 32, offset: 320)
!13616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3211, size: 32)
!13617 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13603, file: !224, line: 632, baseType: !123, size: 32, offset: 352)
!13618 = !DILocalVariable(name: "thread_data", scope: !13619, file: !2201, line: 781, type: !13602)
!13619 = distinct !DILexicalBlock(scope: !13598, file: !2201, line: 781, column: 2)
!13620 = !DILocation(line: 0, scope: !13601)
!13621 = !DILocation(line: 750, column: 2, scope: !13601)
!13622 = !DILocation(line: 780, column: 2, scope: !13598)
!13623 = !DILocation(line: 0, scope: !13619)
!13624 = !DILocation(line: 781, column: 2, scope: !13619)
!13625 = !DILocation(line: 752, column: 17, scope: !13626)
!13626 = distinct !DILexicalBlock(scope: !13627, file: !2201, line: 750, column: 38)
!13627 = distinct !DILexicalBlock(scope: !13601, file: !2201, line: 750, column: 2)
!13628 = !DILocation(line: 753, column: 17, scope: !13626)
!13629 = !DILocation(line: 754, column: 17, scope: !13626)
!13630 = !DILocation(line: 755, column: 17, scope: !13626)
!13631 = !DILocation(line: 756, column: 17, scope: !13626)
!13632 = !DILocation(line: 757, column: 17, scope: !13626)
!13633 = !DILocation(line: 758, column: 17, scope: !13626)
!13634 = !DILocation(line: 759, column: 17, scope: !13626)
!13635 = !DILocation(line: 760, column: 17, scope: !13626)
!13636 = !DILocation(line: 751, column: 3, scope: !13626)
!13637 = !DILocation(line: 763, column: 16, scope: !13626)
!13638 = !DILocation(line: 763, column: 29, scope: !13626)
!13639 = !DILocation(line: 763, column: 39, scope: !13626)
!13640 = !DILocation(line: 750, column: 2, scope: !13627)
!13641 = !DILocation(line: 750, column: 2, scope: !13642)
!13642 = distinct !DILexicalBlock(scope: !13627, file: !2201, line: 750, column: 2)
!13643 = distinct !{!13643, !13621, !13644}
!13644 = !DILocation(line: 764, column: 2, scope: !13601)
!13645 = !DILocation(line: 787, column: 2, scope: !13598)
!13646 = !DILocation(line: 788, column: 1, scope: !13598)
!13647 = !DILocation(line: 782, column: 20, scope: !13648)
!13648 = distinct !DILexicalBlock(scope: !13649, file: !2201, line: 782, column: 7)
!13649 = distinct !DILexicalBlock(scope: !13650, file: !2201, line: 781, column: 38)
!13650 = distinct !DILexicalBlock(scope: !13619, file: !2201, line: 781, column: 2)
!13651 = !DILocation(line: 782, column: 31, scope: !13648)
!13652 = !DILocation(line: 782, column: 7, scope: !13649)
!13653 = !DILocation(line: 783, column: 37, scope: !13654)
!13654 = distinct !DILexicalBlock(scope: !13648, file: !2201, line: 782, column: 51)
!13655 = !DILocation(line: 784, column: 10, scope: !13654)
!13656 = !DILocation(line: 783, column: 4, scope: !13654)
!13657 = !DILocation(line: 785, column: 3, scope: !13654)
!13658 = !DILocation(line: 781, column: 2, scope: !13650)
!13659 = !DILocation(line: 781, column: 2, scope: !13660)
!13660 = distinct !DILexicalBlock(scope: !13650, file: !2201, line: 781, column: 2)
!13661 = distinct !{!13661, !13624, !13662}
!13662 = !DILocation(line: 786, column: 2, scope: !13619)
!13663 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !13664, file: !13664, line: 403, type: !13665, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13667)
!13664 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13665 = !DISubroutineType(types: !13666)
!13666 = !{!1506, !1506}
!13667 = !{!13668}
!13668 = !DILocalVariable(name: "t", arg: 1, scope: !13663, file: !13664, line: 403, type: !1506)
!13669 = !DILocation(line: 0, scope: !13663)
!13670 = !DILocalVariable(name: "t", arg: 1, scope: !13671, file: !13664, line: 102, type: !1506)
!13671 = distinct !DISubprogram(name: "z_tmcvt", scope: !13664, file: !13664, line: 102, type: !13672, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13674)
!13672 = !DISubroutineType(types: !13673)
!13673 = !{!1506, !1506, !162, !162, !136, !136, !136, !136}
!13674 = !{!13670, !13675, !13676, !13677, !13678, !13679, !13680, !13681, !13682, !13683, !13684}
!13675 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13671, file: !13664, line: 102, type: !162)
!13676 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13671, file: !13664, line: 103, type: !162)
!13677 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13671, file: !13664, line: 103, type: !136)
!13678 = !DILocalVariable(name: "result32", arg: 5, scope: !13671, file: !13664, line: 104, type: !136)
!13679 = !DILocalVariable(name: "round_up", arg: 6, scope: !13671, file: !13664, line: 104, type: !136)
!13680 = !DILocalVariable(name: "round_off", arg: 7, scope: !13671, file: !13664, line: 105, type: !136)
!13681 = !DILocalVariable(name: "mul_ratio", scope: !13671, file: !13664, line: 107, type: !136)
!13682 = !DILocalVariable(name: "div_ratio", scope: !13671, file: !13664, line: 109, type: !136)
!13683 = !DILocalVariable(name: "off", scope: !13671, file: !13664, line: 116, type: !1506)
!13684 = !DILocalVariable(name: "rdivisor", scope: !13685, file: !13664, line: 119, type: !162)
!13685 = distinct !DILexicalBlock(scope: !13686, file: !13664, line: 118, column: 18)
!13686 = distinct !DILexicalBlock(scope: !13671, file: !13664, line: 118, column: 6)
!13687 = !DILocation(line: 0, scope: !13671, inlinedAt: !13688)
!13688 = distinct !DILocation(line: 406, column: 9, scope: !13663)
!13689 = !DILocation(line: 145, column: 13, scope: !13690, inlinedAt: !13688)
!13690 = distinct !DILexicalBlock(scope: !13691, file: !13664, line: 144, column: 10)
!13691 = distinct !DILexicalBlock(scope: !13692, file: !13664, line: 142, column: 7)
!13692 = distinct !DILexicalBlock(scope: !13693, file: !13664, line: 141, column: 24)
!13693 = distinct !DILexicalBlock(scope: !13694, file: !13664, line: 141, column: 13)
!13694 = distinct !DILexicalBlock(scope: !13671, file: !13664, line: 134, column: 6)
!13695 = !DILocation(line: 406, column: 2, scope: !13663)
!13696 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2201, file: !2201, line: 817, type: !3749, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13697)
!13697 = !{!13698, !13699, !13700, !13701}
!13698 = !DILocalVariable(name: "entry", arg: 1, scope: !13696, file: !2201, line: 817, type: !3751)
!13699 = !DILocalVariable(name: "p1", arg: 2, scope: !13696, file: !2201, line: 818, type: !102)
!13700 = !DILocalVariable(name: "p2", arg: 3, scope: !13696, file: !2201, line: 818, type: !102)
!13701 = !DILocalVariable(name: "p3", arg: 4, scope: !13696, file: !2201, line: 818, type: !102)
!13702 = !DILocation(line: 0, scope: !13696)
!13703 = !DILocation(line: 822, column: 2, scope: !13696)
!13704 = !DILocation(line: 822, column: 17, scope: !13696)
!13705 = !DILocation(line: 822, column: 30, scope: !13696)
!13706 = !DILocation(line: 823, column: 2, scope: !13696)
!13707 = !DILocation(line: 845, column: 2, scope: !13696)
!13708 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2201, file: !2201, line: 888, type: !13709, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13711)
!13709 = !DISubroutineType(types: !13710)
!13710 = !{!107, !2205}
!13711 = !{!13712}
!13712 = !DILocalVariable(name: "thread", arg: 1, scope: !13708, file: !2201, line: 888, type: !2205)
!13713 = !DILocation(line: 0, scope: !13708)
!13714 = !DILocation(line: 893, column: 2, scope: !13708)
!13715 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2201, file: !2201, line: 897, type: !13716, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13718)
!13716 = !DISubroutineType(types: !13717)
!13717 = !{!107, !2205, !32}
!13718 = !{!13719, !13720}
!13719 = !DILocalVariable(name: "thread", arg: 1, scope: !13715, file: !2201, line: 897, type: !2205)
!13720 = !DILocalVariable(name: "options", arg: 2, scope: !13715, file: !2201, line: 897, type: !32)
!13721 = !DILocation(line: 0, scope: !13715)
!13722 = !DILocation(line: 902, column: 2, scope: !13715)
!13723 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2201, file: !2201, line: 1072, type: !13724, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13729)
!13724 = !DISubroutineType(types: !13725)
!13725 = !{!107, !2204, !13726}
!13726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13727, size: 32)
!13727 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !359, line: 234, baseType: !13728)
!13728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !359, line: 192, elements: !250)
!13729 = !{!13730, !13731}
!13730 = !DILocalVariable(name: "thread", arg: 1, scope: !13723, file: !2201, line: 1072, type: !2204)
!13731 = !DILocalVariable(name: "stats", arg: 2, scope: !13723, file: !2201, line: 1073, type: !13726)
!13732 = !DILocation(line: 0, scope: !13723)
!13733 = !DILocation(line: 1075, column: 14, scope: !13734)
!13734 = distinct !DILexicalBlock(scope: !13723, file: !2201, line: 1075, column: 6)
!13735 = !DILocation(line: 1075, column: 23, scope: !13734)
!13736 = !DILocation(line: 1086, column: 1, scope: !13723)
!13737 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2201, file: !2201, line: 1088, type: !13738, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2305, retainedNodes: !13740)
!13738 = !DISubroutineType(types: !13739)
!13739 = !{!107, !13726}
!13740 = !{!13741}
!13741 = !DILocalVariable(name: "stats", arg: 1, scope: !13737, file: !2201, line: 1088, type: !13726)
!13742 = !DILocation(line: 0, scope: !13737)
!13743 = !DILocation(line: 1094, column: 12, scope: !13744)
!13744 = distinct !DILexicalBlock(scope: !13737, file: !2201, line: 1094, column: 6)
!13745 = !DILocation(line: 1120, column: 1, scope: !13737)
!13746 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13747, file: !13747, line: 20, type: !3211, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3088, retainedNodes: !250)
!13747 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13748 = !DILocation(line: 30, column: 2, scope: !13746)
!13749 = !DILocation(line: 31, column: 1, scope: !13746)
!13750 = distinct !DISubprogram(name: "idle", scope: !13747, file: !13747, line: 33, type: !3754, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3088, retainedNodes: !13751)
!13751 = !{!13752, !13753, !13754}
!13752 = !DILocalVariable(name: "unused1", arg: 1, scope: !13750, file: !13747, line: 33, type: !102)
!13753 = !DILocalVariable(name: "unused2", arg: 2, scope: !13750, file: !13747, line: 33, type: !102)
!13754 = !DILocalVariable(name: "unused3", arg: 3, scope: !13750, file: !13747, line: 33, type: !102)
!13755 = !DILocation(line: 0, scope: !13750)
!13756 = !DILocation(line: 41, column: 2, scope: !13750)
!13757 = !DILocation(line: 55, column: 2, scope: !13758, inlinedAt: !13762)
!13758 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5993, file: !5993, line: 42, type: !5994, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3088, retainedNodes: !13759)
!13759 = !{!13760, !13761}
!13760 = !DILocalVariable(name: "key", scope: !13758, file: !5993, line: 44, type: !32)
!13761 = !DILocalVariable(name: "tmp", scope: !13758, file: !5993, line: 53, type: !32)
!13762 = distinct !DILocation(line: 62, column: 10, scope: !13763)
!13763 = distinct !DILexicalBlock(scope: !13750, file: !13747, line: 41, column: 15)
!13764 = !{i64 2278211}
!13765 = !DILocation(line: 0, scope: !13758, inlinedAt: !13762)
!13766 = !DILocation(line: 86, column: 3, scope: !13763)
!13767 = distinct !{!13767, !13756, !13768}
!13768 = !DILocation(line: 105, column: 2, scope: !13750)
!13769 = distinct !DISubprogram(name: "k_cpu_idle", scope: !224, file: !224, line: 5627, type: !3211, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3088, retainedNodes: !250)
!13770 = !DILocation(line: 5629, column: 2, scope: !13769)
!13771 = !DILocation(line: 5630, column: 1, scope: !13769)
!13772 = !DISubprogram(name: "arch_cpu_idle", scope: !3752, file: !3752, line: 167, type: !3211, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!13773 = distinct !DISubprogram(name: "k_msgq_init", scope: !13774, file: !13774, line: 35, type: !13775, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3090, retainedNodes: !13790)
!13774 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13775 = !DISubroutineType(types: !13776)
!13776 = !{null, !13777, !256, !252, !162}
!13777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13778, size: 32)
!13778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !224, line: 4204, size: 320, elements: !13779)
!13779 = !{!13780, !13781, !13782, !13783, !13784, !13785, !13786, !13787, !13788, !13789}
!13780 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13778, file: !224, line: 4206, baseType: !3126, size: 64)
!13781 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13778, file: !224, line: 4208, baseType: !3188, offset: 64)
!13782 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !13778, file: !224, line: 4210, baseType: !252, size: 32, offset: 64)
!13783 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !13778, file: !224, line: 4212, baseType: !162, size: 32, offset: 96)
!13784 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !13778, file: !224, line: 4214, baseType: !256, size: 32, offset: 128)
!13785 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !13778, file: !224, line: 4216, baseType: !256, size: 32, offset: 160)
!13786 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !13778, file: !224, line: 4218, baseType: !256, size: 32, offset: 192)
!13787 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !13778, file: !224, line: 4220, baseType: !256, size: 32, offset: 224)
!13788 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !13778, file: !224, line: 4222, baseType: !162, size: 32, offset: 256)
!13789 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13778, file: !224, line: 4227, baseType: !133, size: 8, offset: 288)
!13790 = !{!13791, !13792, !13793, !13794}
!13791 = !DILocalVariable(name: "msgq", arg: 1, scope: !13773, file: !13774, line: 35, type: !13777)
!13792 = !DILocalVariable(name: "buffer", arg: 2, scope: !13773, file: !13774, line: 35, type: !256)
!13793 = !DILocalVariable(name: "msg_size", arg: 3, scope: !13773, file: !13774, line: 35, type: !252)
!13794 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !13773, file: !13774, line: 36, type: !162)
!13795 = !DILocation(line: 0, scope: !13773)
!13796 = !DILocation(line: 38, column: 8, scope: !13773)
!13797 = !DILocation(line: 38, column: 17, scope: !13773)
!13798 = !DILocation(line: 39, column: 8, scope: !13773)
!13799 = !DILocation(line: 39, column: 17, scope: !13773)
!13800 = !DILocation(line: 40, column: 8, scope: !13773)
!13801 = !DILocation(line: 40, column: 21, scope: !13773)
!13802 = !DILocation(line: 41, column: 40, scope: !13773)
!13803 = !DILocation(line: 41, column: 28, scope: !13773)
!13804 = !DILocation(line: 41, column: 8, scope: !13773)
!13805 = !DILocation(line: 41, column: 19, scope: !13773)
!13806 = !DILocation(line: 42, column: 8, scope: !13773)
!13807 = !DILocation(line: 42, column: 17, scope: !13773)
!13808 = !DILocation(line: 43, column: 8, scope: !13773)
!13809 = !DILocation(line: 43, column: 18, scope: !13773)
!13810 = !DILocation(line: 44, column: 8, scope: !13773)
!13811 = !DILocation(line: 44, column: 18, scope: !13773)
!13812 = !DILocation(line: 45, column: 8, scope: !13773)
!13813 = !DILocation(line: 45, column: 14, scope: !13773)
!13814 = !DILocation(line: 46, column: 22, scope: !13773)
!13815 = !DILocation(line: 46, column: 2, scope: !13773)
!13816 = !DILocation(line: 55, column: 1, scope: !13773)
!13817 = distinct !DISubprogram(name: "z_waitq_init", scope: !13429, file: !13429, line: 47, type: !13818, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3090, retainedNodes: !13820)
!13818 = !DISubroutineType(types: !13819)
!13819 = !{null, !3125}
!13820 = !{!13821}
!13821 = !DILocalVariable(name: "w", arg: 1, scope: !13817, file: !13429, line: 47, type: !3125)
!13822 = !DILocation(line: 0, scope: !13817)
!13823 = !DILocation(line: 49, column: 21, scope: !13817)
!13824 = !DILocation(line: 49, column: 2, scope: !13817)
!13825 = !DILocation(line: 50, column: 1, scope: !13817)
!13826 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !13827, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3090, retainedNodes: !13830)
!13827 = !DISubroutineType(types: !13828)
!13828 = !{null, !13829}
!13829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 32)
!13830 = !{!13831}
!13831 = !DILocalVariable(name: "list", arg: 1, scope: !13826, file: !233, line: 197, type: !13829)
!13832 = !DILocation(line: 0, scope: !13826)
!13833 = !DILocation(line: 199, column: 8, scope: !13826)
!13834 = !DILocation(line: 199, column: 13, scope: !13826)
!13835 = !DILocation(line: 200, column: 8, scope: !13826)
!13836 = !DILocation(line: 200, column: 13, scope: !13826)
!13837 = !DILocation(line: 201, column: 1, scope: !13826)
!13838 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !13774, file: !13774, line: 57, type: !13839, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3090, retainedNodes: !13841)
!13839 = !DISubroutineType(types: !13840)
!13840 = !{!107, !13777, !252, !162}
!13841 = !{!13842, !13843, !13844, !13845, !13846, !13847}
!13842 = !DILocalVariable(name: "msgq", arg: 1, scope: !13838, file: !13774, line: 57, type: !13777)
!13843 = !DILocalVariable(name: "msg_size", arg: 2, scope: !13838, file: !13774, line: 57, type: !252)
!13844 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !13838, file: !13774, line: 58, type: !162)
!13845 = !DILocalVariable(name: "buffer", scope: !13838, file: !13774, line: 60, type: !102)
!13846 = !DILocalVariable(name: "ret", scope: !13838, file: !13774, line: 61, type: !107)
!13847 = !DILocalVariable(name: "total_size", scope: !13838, file: !13774, line: 62, type: !252)
!13848 = !DILocation(line: 0, scope: !13838)
!13849 = !DILocation(line: 62, column: 2, scope: !13838)
!13850 = !DILocation(line: 66, column: 6, scope: !13851)
!13851 = distinct !DILexicalBlock(scope: !13838, file: !13774, line: 66, column: 6)
!13852 = !DILocation(line: 66, column: 6, scope: !13838)
!13853 = !DILocation(line: 69, column: 28, scope: !13854)
!13854 = distinct !DILexicalBlock(scope: !13851, file: !13774, line: 68, column: 9)
!13855 = !DILocation(line: 69, column: 12, scope: !13854)
!13856 = !DILocation(line: 70, column: 14, scope: !13857)
!13857 = distinct !DILexicalBlock(scope: !13854, file: !13774, line: 70, column: 7)
!13858 = !DILocation(line: 70, column: 7, scope: !13854)
!13859 = !DILocation(line: 71, column: 4, scope: !13860)
!13860 = distinct !DILexicalBlock(scope: !13857, file: !13774, line: 70, column: 23)
!13861 = !DILocation(line: 72, column: 10, scope: !13860)
!13862 = !DILocation(line: 72, column: 16, scope: !13860)
!13863 = !DILocation(line: 74, column: 3, scope: !13860)
!13864 = !DILocation(line: 0, scope: !13851)
!13865 = !DILocation(line: 82, column: 1, scope: !13838)
!13866 = !DILocation(line: 81, column: 2, scope: !13838)
!13867 = distinct !DISubprogram(name: "size_mul_overflow", scope: !13868, file: !13868, line: 105, type: !13869, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3090, retainedNodes: !13871)
!13868 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13869 = !DISubroutineType(types: !13870)
!13870 = !{!136, !252, !252, !2582}
!13871 = !{!13872, !13873, !13874}
!13872 = !DILocalVariable(name: "a", arg: 1, scope: !13867, file: !13868, line: 105, type: !252)
!13873 = !DILocalVariable(name: "b", arg: 2, scope: !13867, file: !13868, line: 105, type: !252)
!13874 = !DILocalVariable(name: "result", arg: 3, scope: !13867, file: !13868, line: 105, type: !2582)
!13875 = !DILocation(line: 0, scope: !13867)
!13876 = !DILocation(line: 107, column: 9, scope: !13867)
!13877 = !DILocation(line: 107, column: 2, scope: !13867)
!13878 = distinct !DISubprogram(name: "z_thread_malloc", scope: !13879, file: !13879, line: 102, type: !13880, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3090, retainedNodes: !13881)
!13879 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13880 = !DISubroutineType(types: !3069)
!13881 = !{!13882}
!13882 = !DILocalVariable(name: "size", arg: 1, scope: !13878, file: !13879, line: 102, type: !252)
!13883 = !DILocation(line: 0, scope: !13878)
!13884 = !DILocation(line: 104, column: 9, scope: !13878)
!13885 = !DILocation(line: 104, column: 2, scope: !13878)
!13886 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !13879, file: !13879, line: 87, type: !13887, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!13887 = !DISubroutineType(types: !13888)
!13888 = !{!102, !252, !252}
!13889 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !13774, file: !13774, line: 95, type: !13890, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3090, retainedNodes: !13892)
!13890 = !DISubroutineType(types: !13891)
!13891 = !{!107, !13777}
!13892 = !{!13893}
!13893 = !DILocalVariable(name: "msgq", arg: 1, scope: !13889, file: !13774, line: 95, type: !13777)
!13894 = !DILocation(line: 0, scope: !13889)
!13895 = !DILocation(line: 99, column: 2, scope: !13896)
!13896 = distinct !DILexicalBlock(scope: !13889, file: !13774, line: 99, column: 2)
!13897 = !DILocation(line: 99, column: 2, scope: !13889)
!13898 = !DILocation(line: 105, column: 13, scope: !13899)
!13899 = distinct !DILexicalBlock(scope: !13889, file: !13774, line: 105, column: 6)
!13900 = !DILocation(line: 105, column: 19, scope: !13899)
!13901 = !DILocation(line: 105, column: 40, scope: !13899)
!13902 = !DILocation(line: 105, column: 6, scope: !13889)
!13903 = !DILocation(line: 106, column: 16, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13899, file: !13774, line: 105, column: 47)
!13905 = !DILocation(line: 106, column: 3, scope: !13904)
!13906 = !DILocation(line: 107, column: 15, scope: !13904)
!13907 = !DILocation(line: 108, column: 2, scope: !13904)
!13908 = !DILocation(line: 113, column: 1, scope: !13889)
!13909 = distinct !DISubprogram(name: "z_waitq_head", scope: !13429, file: !13429, line: 52, type: !13910, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3090, retainedNodes: !13912)
!13910 = !DISubroutineType(types: !13911)
!13911 = !{!3108, !3125}
!13912 = !{!13913}
!13913 = !DILocalVariable(name: "w", arg: 1, scope: !13909, file: !13429, line: 52, type: !3125)
!13914 = !DILocation(line: 0, scope: !13909)
!13915 = !DILocation(line: 54, column: 52, scope: !13909)
!13916 = !DILocation(line: 54, column: 28, scope: !13909)
!13917 = !DILocation(line: 54, column: 9, scope: !13909)
!13918 = !DILocation(line: 54, column: 2, scope: !13909)
!13919 = !DISubprogram(name: "k_free", scope: !224, file: !224, line: 5272, type: !6104, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!13920 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !233, file: !233, line: 294, type: !13921, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3090, retainedNodes: !13923)
!13921 = !DISubroutineType(types: !13922)
!13922 = !{!3093, !13829}
!13923 = !{!13924}
!13924 = !DILocalVariable(name: "list", arg: 1, scope: !13920, file: !233, line: 294, type: !13829)
!13925 = !DILocation(line: 0, scope: !13920)
!13926 = !DILocation(line: 296, column: 9, scope: !13920)
!13927 = !DILocation(line: 296, column: 49, scope: !13920)
!13928 = !DILocation(line: 296, column: 2, scope: !13920)
!13929 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !233, file: !233, line: 266, type: !13930, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3090, retainedNodes: !13932)
!13930 = !DISubroutineType(types: !13931)
!13931 = !{!136, !13829}
!13932 = !{!13933}
!13933 = !DILocalVariable(name: "list", arg: 1, scope: !13929, file: !233, line: 266, type: !13829)
!13934 = !DILocation(line: 0, scope: !13929)
!13935 = !DILocation(line: 268, column: 15, scope: !13929)
!13936 = !DILocation(line: 268, column: 20, scope: !13929)
!13937 = !DILocation(line: 268, column: 2, scope: !13929)
!13938 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !13774, file: !13774, line: 116, type: !13939, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3090, retainedNodes: !13945)
!13939 = !DISubroutineType(types: !13940)
!13940 = !{!107, !13777, !13, !13941}
!13941 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13942)
!13942 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13943)
!13943 = !{!13944}
!13944 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13942, file: !104, line: 66, baseType: !103, size: 64)
!13945 = !{!13946, !13947, !13948, !13949, !13950, !13955}
!13946 = !DILocalVariable(name: "msgq", arg: 1, scope: !13938, file: !13774, line: 116, type: !13777)
!13947 = !DILocalVariable(name: "data", arg: 2, scope: !13938, file: !13774, line: 116, type: !13)
!13948 = !DILocalVariable(name: "timeout", arg: 3, scope: !13938, file: !13774, line: 116, type: !13941)
!13949 = !DILocalVariable(name: "pending_thread", scope: !13938, file: !13774, line: 120, type: !3108)
!13950 = !DILocalVariable(name: "key", scope: !13938, file: !13774, line: 121, type: !13951)
!13951 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !13952)
!13952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !13953)
!13953 = !{!13954}
!13954 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13952, file: !249, line: 33, baseType: !107, size: 32)
!13955 = !DILocalVariable(name: "result", scope: !13938, file: !13774, line: 122, type: !107)
!13956 = !DILocation(line: 0, scope: !13938)
!13957 = !DILocation(line: 124, column: 27, scope: !13938)
!13958 = !DILocalVariable(name: "l", arg: 1, scope: !13959, file: !249, line: 136, type: !13962)
!13959 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !13960, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3090, retainedNodes: !13963)
!13960 = !DISubroutineType(types: !13961)
!13961 = !{!13951, !13962}
!13962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 32)
!13963 = !{!13958, !13964}
!13964 = !DILocalVariable(name: "k", scope: !13959, file: !249, line: 139, type: !13951)
!13965 = !DILocation(line: 0, scope: !13959, inlinedAt: !13966)
!13966 = distinct !DILocation(line: 124, column: 8, scope: !13938)
!13967 = !DILocation(line: 55, column: 2, scope: !13968, inlinedAt: !13972)
!13968 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5993, file: !5993, line: 42, type: !5994, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3090, retainedNodes: !13969)
!13969 = !{!13970, !13971}
!13970 = !DILocalVariable(name: "key", scope: !13968, file: !5993, line: 44, type: !32)
!13971 = !DILocalVariable(name: "tmp", scope: !13968, file: !5993, line: 53, type: !32)
!13972 = distinct !DILocation(line: 145, column: 10, scope: !13959, inlinedAt: !13966)
!13973 = !{i64 2284348}
!13974 = !DILocation(line: 0, scope: !13968, inlinedAt: !13972)
!13975 = !DILocation(line: 128, column: 12, scope: !13976)
!13976 = distinct !DILexicalBlock(scope: !13938, file: !13774, line: 128, column: 6)
!13977 = !DILocation(line: 128, column: 30, scope: !13976)
!13978 = !DILocation(line: 128, column: 22, scope: !13976)
!13979 = !DILocation(line: 128, column: 6, scope: !13938)
!13980 = !DILocation(line: 130, column: 49, scope: !13981)
!13981 = distinct !DILexicalBlock(scope: !13976, file: !13774, line: 128, column: 40)
!13982 = !DILocation(line: 130, column: 20, scope: !13981)
!13983 = !DILocation(line: 131, column: 22, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13981, file: !13774, line: 131, column: 7)
!13985 = !DILocation(line: 131, column: 7, scope: !13981)
!13986 = !DILocation(line: 135, column: 38, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13984, file: !13774, line: 131, column: 31)
!13988 = !DILocation(line: 136, column: 17, scope: !13987)
!13989 = !DILocation(line: 135, column: 10, scope: !13987)
!13990 = !DILocalVariable(name: "thread", arg: 1, scope: !13991, file: !13125, line: 65, type: !3108)
!13991 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13125, file: !13125, line: 65, type: !13992, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3090, retainedNodes: !13994)
!13992 = !DISubroutineType(types: !13993)
!13993 = !{null, !3108, !32}
!13994 = !{!13990, !13995}
!13995 = !DILocalVariable(name: "value", arg: 2, scope: !13991, file: !13125, line: 65, type: !32)
!13996 = !DILocation(line: 0, scope: !13991, inlinedAt: !13997)
!13997 = distinct !DILocation(line: 138, column: 4, scope: !13987)
!13998 = !DILocation(line: 67, column: 15, scope: !13991, inlinedAt: !13997)
!13999 = !DILocation(line: 67, column: 33, scope: !13991, inlinedAt: !13997)
!14000 = !DILocation(line: 139, column: 4, scope: !13987)
!14001 = !DILocation(line: 140, column: 4, scope: !13987)
!14002 = !DILocation(line: 141, column: 4, scope: !13987)
!14003 = !DILocation(line: 144, column: 23, scope: !14004)
!14004 = distinct !DILexicalBlock(scope: !13984, file: !13774, line: 142, column: 10)
!14005 = !DILocation(line: 144, column: 46, scope: !14004)
!14006 = !DILocation(line: 144, column: 10, scope: !14004)
!14007 = !DILocation(line: 145, column: 29, scope: !14004)
!14008 = !DILocation(line: 145, column: 20, scope: !14004)
!14009 = !DILocation(line: 146, column: 33, scope: !14010)
!14010 = distinct !DILexicalBlock(scope: !14004, file: !13774, line: 146, column: 8)
!14011 = !DILocation(line: 146, column: 24, scope: !14010)
!14012 = !DILocation(line: 146, column: 8, scope: !14004)
!14013 = !DILocation(line: 147, column: 29, scope: !14014)
!14014 = distinct !DILexicalBlock(scope: !14010, file: !13774, line: 146, column: 45)
!14015 = !DILocation(line: 147, column: 21, scope: !14014)
!14016 = !DILocation(line: 148, column: 4, scope: !14014)
!14017 = !DILocation(line: 149, column: 19, scope: !14004)
!14018 = !DILocation(line: 155, column: 2, scope: !13981)
!14019 = !DILocation(line: 155, column: 13, scope: !14020)
!14020 = distinct !DILexicalBlock(scope: !13976, file: !13774, line: 155, column: 13)
!14021 = !DILocation(line: 155, column: 13, scope: !13976)
!14022 = !DILocation(line: 162, column: 3, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !14020, file: !13774, line: 158, column: 9)
!14024 = !DILocation(line: 162, column: 18, scope: !14023)
!14025 = !DILocation(line: 162, column: 28, scope: !14023)
!14026 = !DILocation(line: 164, column: 49, scope: !14023)
!14027 = !DILocation(line: 164, column: 12, scope: !14023)
!14028 = !DILocation(line: 166, column: 3, scope: !14023)
!14029 = !DILocation(line: 0, scope: !13976)
!14030 = !DILocalVariable(name: "key", arg: 2, scope: !14031, file: !249, line: 190, type: !13951)
!14031 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !14032, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3090, retainedNodes: !14034)
!14032 = !DISubroutineType(types: !14033)
!14033 = !{null, !13962, !13951}
!14034 = !{!14035, !14030}
!14035 = !DILocalVariable(name: "l", arg: 1, scope: !14031, file: !249, line: 189, type: !13962)
!14036 = !DILocation(line: 0, scope: !14031, inlinedAt: !14037)
!14037 = distinct !DILocation(line: 171, column: 2, scope: !13938)
!14038 = !DILocalVariable(name: "key", arg: 1, scope: !14039, file: !5993, line: 84, type: !32)
!14039 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5993, file: !5993, line: 84, type: !6004, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3090, retainedNodes: !14040)
!14040 = !{!14038}
!14041 = !DILocation(line: 0, scope: !14039, inlinedAt: !14042)
!14042 = distinct !DILocation(line: 215, column: 2, scope: !14031, inlinedAt: !14037)
!14043 = !DILocation(line: 95, column: 2, scope: !14039, inlinedAt: !14042)
!14044 = !{i64 2285165}
!14045 = !DILocation(line: 173, column: 2, scope: !13938)
!14046 = !DILocation(line: 174, column: 1, scope: !13938)
!14047 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !13774, file: !13774, line: 188, type: !14048, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3090, retainedNodes: !14056)
!14048 = !DISubroutineType(types: !14049)
!14049 = !{null, !13777, !14050}
!14050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14051, size: 32)
!14051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !224, line: 4259, size: 96, elements: !14052)
!14052 = !{!14053, !14054, !14055}
!14053 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !14051, file: !224, line: 4261, baseType: !252, size: 32)
!14054 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !14051, file: !224, line: 4263, baseType: !162, size: 32, offset: 32)
!14055 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !14051, file: !224, line: 4265, baseType: !162, size: 32, offset: 64)
!14056 = !{!14057, !14058}
!14057 = !DILocalVariable(name: "msgq", arg: 1, scope: !14047, file: !13774, line: 188, type: !13777)
!14058 = !DILocalVariable(name: "attrs", arg: 2, scope: !14047, file: !13774, line: 188, type: !14050)
!14059 = !DILocation(line: 0, scope: !14047)
!14060 = !DILocation(line: 190, column: 26, scope: !14047)
!14061 = !DILocation(line: 190, column: 9, scope: !14047)
!14062 = !DILocation(line: 190, column: 18, scope: !14047)
!14063 = !DILocation(line: 191, column: 26, scope: !14047)
!14064 = !DILocation(line: 191, column: 9, scope: !14047)
!14065 = !DILocation(line: 191, column: 18, scope: !14047)
!14066 = !DILocation(line: 192, column: 27, scope: !14047)
!14067 = !DILocation(line: 192, column: 9, scope: !14047)
!14068 = !DILocation(line: 192, column: 19, scope: !14047)
!14069 = !DILocation(line: 193, column: 1, scope: !14047)
!14070 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !13774, file: !13774, line: 206, type: !14071, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3090, retainedNodes: !14073)
!14071 = !DISubroutineType(types: !14072)
!14072 = !{!107, !13777, !102, !13941}
!14073 = !{!14074, !14075, !14076, !14077, !14078, !14079}
!14074 = !DILocalVariable(name: "msgq", arg: 1, scope: !14070, file: !13774, line: 206, type: !13777)
!14075 = !DILocalVariable(name: "data", arg: 2, scope: !14070, file: !13774, line: 206, type: !102)
!14076 = !DILocalVariable(name: "timeout", arg: 3, scope: !14070, file: !13774, line: 206, type: !13941)
!14077 = !DILocalVariable(name: "key", scope: !14070, file: !13774, line: 210, type: !13951)
!14078 = !DILocalVariable(name: "pending_thread", scope: !14070, file: !13774, line: 211, type: !3108)
!14079 = !DILocalVariable(name: "result", scope: !14070, file: !13774, line: 212, type: !107)
!14080 = !DILocation(line: 0, scope: !14070)
!14081 = !DILocation(line: 214, column: 27, scope: !14070)
!14082 = !DILocation(line: 0, scope: !13959, inlinedAt: !14083)
!14083 = distinct !DILocation(line: 214, column: 8, scope: !14070)
!14084 = !DILocation(line: 55, column: 2, scope: !13968, inlinedAt: !14085)
!14085 = distinct !DILocation(line: 145, column: 10, scope: !13959, inlinedAt: !14083)
!14086 = !DILocation(line: 0, scope: !13968, inlinedAt: !14085)
!14087 = !DILocation(line: 218, column: 12, scope: !14088)
!14088 = distinct !DILexicalBlock(scope: !14070, file: !13774, line: 218, column: 6)
!14089 = !DILocation(line: 218, column: 22, scope: !14088)
!14090 = !DILocation(line: 218, column: 6, scope: !14070)
!14091 = !DILocation(line: 220, column: 28, scope: !14092)
!14092 = distinct !DILexicalBlock(scope: !14088, file: !13774, line: 218, column: 28)
!14093 = !DILocation(line: 220, column: 44, scope: !14092)
!14094 = !DILocation(line: 220, column: 9, scope: !14092)
!14095 = !DILocation(line: 221, column: 27, scope: !14092)
!14096 = !DILocation(line: 221, column: 18, scope: !14092)
!14097 = !DILocation(line: 222, column: 31, scope: !14098)
!14098 = distinct !DILexicalBlock(scope: !14092, file: !13774, line: 222, column: 7)
!14099 = !DILocation(line: 222, column: 22, scope: !14098)
!14100 = !DILocation(line: 222, column: 7, scope: !14092)
!14101 = !DILocation(line: 223, column: 27, scope: !14102)
!14102 = distinct !DILexicalBlock(scope: !14098, file: !13774, line: 222, column: 43)
!14103 = !DILocation(line: 223, column: 19, scope: !14102)
!14104 = !DILocation(line: 224, column: 3, scope: !14102)
!14105 = !DILocation(line: 225, column: 18, scope: !14092)
!14106 = !DILocation(line: 228, column: 49, scope: !14092)
!14107 = !DILocation(line: 228, column: 20, scope: !14092)
!14108 = !DILocation(line: 229, column: 22, scope: !14109)
!14109 = distinct !DILexicalBlock(scope: !14092, file: !13774, line: 229, column: 7)
!14110 = !DILocation(line: 229, column: 7, scope: !14092)
!14111 = !DILocation(line: 233, column: 23, scope: !14112)
!14112 = distinct !DILexicalBlock(scope: !14109, file: !13774, line: 229, column: 31)
!14113 = !DILocation(line: 233, column: 55, scope: !14112)
!14114 = !DILocation(line: 234, column: 17, scope: !14112)
!14115 = !DILocation(line: 233, column: 10, scope: !14112)
!14116 = !DILocation(line: 235, column: 29, scope: !14112)
!14117 = !DILocation(line: 235, column: 20, scope: !14112)
!14118 = !DILocation(line: 236, column: 33, scope: !14119)
!14119 = distinct !DILexicalBlock(scope: !14112, file: !13774, line: 236, column: 8)
!14120 = !DILocation(line: 236, column: 24, scope: !14119)
!14121 = !DILocation(line: 236, column: 8, scope: !14112)
!14122 = !DILocation(line: 237, column: 29, scope: !14123)
!14123 = distinct !DILexicalBlock(scope: !14119, file: !13774, line: 236, column: 45)
!14124 = !DILocation(line: 237, column: 21, scope: !14123)
!14125 = !DILocation(line: 238, column: 4, scope: !14123)
!14126 = !DILocation(line: 239, column: 19, scope: !14112)
!14127 = !DILocation(line: 0, scope: !13991, inlinedAt: !14128)
!14128 = distinct !DILocation(line: 242, column: 4, scope: !14112)
!14129 = !DILocation(line: 67, column: 15, scope: !13991, inlinedAt: !14128)
!14130 = !DILocation(line: 67, column: 33, scope: !13991, inlinedAt: !14128)
!14131 = !DILocation(line: 243, column: 4, scope: !14112)
!14132 = !DILocation(line: 244, column: 4, scope: !14112)
!14133 = !DILocation(line: 248, column: 4, scope: !14112)
!14134 = !DILocation(line: 251, column: 13, scope: !14135)
!14135 = distinct !DILexicalBlock(scope: !14088, file: !13774, line: 251, column: 13)
!14136 = !DILocation(line: 251, column: 13, scope: !14088)
!14137 = !DILocation(line: 258, column: 3, scope: !14138)
!14138 = distinct !DILexicalBlock(scope: !14135, file: !13774, line: 254, column: 9)
!14139 = !DILocation(line: 258, column: 18, scope: !14138)
!14140 = !DILocation(line: 258, column: 28, scope: !14138)
!14141 = !DILocation(line: 260, column: 49, scope: !14138)
!14142 = !DILocation(line: 260, column: 12, scope: !14138)
!14143 = !DILocation(line: 262, column: 3, scope: !14138)
!14144 = !DILocation(line: 0, scope: !14088)
!14145 = !DILocation(line: 0, scope: !14031, inlinedAt: !14146)
!14146 = distinct !DILocation(line: 267, column: 2, scope: !14070)
!14147 = !DILocation(line: 0, scope: !14039, inlinedAt: !14148)
!14148 = distinct !DILocation(line: 215, column: 2, scope: !14031, inlinedAt: !14146)
!14149 = !DILocation(line: 95, column: 2, scope: !14039, inlinedAt: !14148)
!14150 = !DILocation(line: 269, column: 2, scope: !14070)
!14151 = !DILocation(line: 270, column: 1, scope: !14070)
!14152 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !13774, file: !13774, line: 284, type: !14153, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3090, retainedNodes: !14155)
!14153 = !DISubroutineType(types: !14154)
!14154 = !{!107, !13777, !102}
!14155 = !{!14156, !14157, !14158, !14159}
!14156 = !DILocalVariable(name: "msgq", arg: 1, scope: !14152, file: !13774, line: 284, type: !13777)
!14157 = !DILocalVariable(name: "data", arg: 2, scope: !14152, file: !13774, line: 284, type: !102)
!14158 = !DILocalVariable(name: "key", scope: !14152, file: !13774, line: 286, type: !13951)
!14159 = !DILocalVariable(name: "result", scope: !14152, file: !13774, line: 287, type: !107)
!14160 = !DILocation(line: 0, scope: !14152)
!14161 = !DILocation(line: 0, scope: !13959, inlinedAt: !14162)
!14162 = distinct !DILocation(line: 289, column: 8, scope: !14152)
!14163 = !DILocation(line: 55, column: 2, scope: !13968, inlinedAt: !14164)
!14164 = distinct !DILocation(line: 145, column: 10, scope: !13959, inlinedAt: !14162)
!14165 = !DILocation(line: 0, scope: !13968, inlinedAt: !14164)
!14166 = !DILocation(line: 291, column: 12, scope: !14167)
!14167 = distinct !DILexicalBlock(scope: !14152, file: !13774, line: 291, column: 6)
!14168 = !DILocation(line: 291, column: 22, scope: !14167)
!14169 = !DILocation(line: 291, column: 6, scope: !14152)
!14170 = !DILocation(line: 293, column: 28, scope: !14171)
!14171 = distinct !DILexicalBlock(scope: !14167, file: !13774, line: 291, column: 28)
!14172 = !DILocation(line: 293, column: 44, scope: !14171)
!14173 = !DILocation(line: 293, column: 9, scope: !14171)
!14174 = !DILocation(line: 295, column: 2, scope: !14171)
!14175 = !DILocation(line: 0, scope: !14167)
!14176 = !DILocation(line: 0, scope: !14031, inlinedAt: !14177)
!14177 = distinct !DILocation(line: 302, column: 2, scope: !14152)
!14178 = !DILocation(line: 0, scope: !14039, inlinedAt: !14179)
!14179 = distinct !DILocation(line: 215, column: 2, scope: !14031, inlinedAt: !14177)
!14180 = !DILocation(line: 95, column: 2, scope: !14039, inlinedAt: !14179)
!14181 = !DILocation(line: 304, column: 2, scope: !14152)
!14182 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !13774, file: !13774, line: 318, type: !14183, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3090, retainedNodes: !14185)
!14183 = !DISubroutineType(types: !14184)
!14184 = !{null, !13777}
!14185 = !{!14186, !14187, !14188}
!14186 = !DILocalVariable(name: "msgq", arg: 1, scope: !14182, file: !13774, line: 318, type: !13777)
!14187 = !DILocalVariable(name: "key", scope: !14182, file: !13774, line: 320, type: !13951)
!14188 = !DILocalVariable(name: "pending_thread", scope: !14182, file: !13774, line: 321, type: !3108)
!14189 = !DILocation(line: 0, scope: !14182)
!14190 = !DILocation(line: 0, scope: !13959, inlinedAt: !14191)
!14191 = distinct !DILocation(line: 323, column: 8, scope: !14182)
!14192 = !DILocation(line: 55, column: 2, scope: !13968, inlinedAt: !14193)
!14193 = distinct !DILocation(line: 145, column: 10, scope: !13959, inlinedAt: !14191)
!14194 = !DILocation(line: 0, scope: !13968, inlinedAt: !14193)
!14195 = !DILocation(line: 328, column: 27, scope: !14182)
!14196 = !DILocation(line: 328, column: 65, scope: !14182)
!14197 = !DILocation(line: 328, column: 2, scope: !14182)
!14198 = !DILocation(line: 0, scope: !13991, inlinedAt: !14199)
!14199 = distinct !DILocation(line: 329, column: 3, scope: !14200)
!14200 = distinct !DILexicalBlock(scope: !14182, file: !13774, line: 328, column: 74)
!14201 = !DILocation(line: 67, column: 15, scope: !13991, inlinedAt: !14199)
!14202 = !DILocation(line: 67, column: 33, scope: !13991, inlinedAt: !14199)
!14203 = !DILocation(line: 330, column: 3, scope: !14200)
!14204 = distinct !{!14204, !14197, !14205}
!14205 = !DILocation(line: 331, column: 2, scope: !14182)
!14206 = !DILocation(line: 323, column: 27, scope: !14182)
!14207 = !DILocation(line: 333, column: 8, scope: !14182)
!14208 = !DILocation(line: 333, column: 18, scope: !14182)
!14209 = !DILocation(line: 334, column: 25, scope: !14182)
!14210 = !DILocation(line: 334, column: 8, scope: !14182)
!14211 = !DILocation(line: 334, column: 17, scope: !14182)
!14212 = !DILocation(line: 336, column: 2, scope: !14182)
!14213 = !DILocation(line: 337, column: 1, scope: !14182)
!14214 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2433, file: !2433, line: 93, type: !14215, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14217)
!14215 = !DISubroutineType(types: !14216)
!14216 = !{!736, !2328, !2328}
!14217 = !{!14218, !14219, !14220, !14221}
!14218 = !DILocalVariable(name: "thread_1", arg: 1, scope: !14214, file: !2433, line: 93, type: !2328)
!14219 = !DILocalVariable(name: "thread_2", arg: 2, scope: !14214, file: !2433, line: 94, type: !2328)
!14220 = !DILocalVariable(name: "b1", scope: !14214, file: !2433, line: 97, type: !736)
!14221 = !DILocalVariable(name: "b2", scope: !14214, file: !2433, line: 98, type: !736)
!14222 = !DILocation(line: 0, scope: !14214)
!14223 = !DILocation(line: 97, column: 30, scope: !14214)
!14224 = !DILocation(line: 98, column: 30, scope: !14214)
!14225 = !DILocation(line: 100, column: 9, scope: !14226)
!14226 = distinct !DILexicalBlock(scope: !14214, file: !2433, line: 100, column: 6)
!14227 = !DILocation(line: 100, column: 6, scope: !14214)
!14228 = !DILocation(line: 125, column: 1, scope: !14214)
!14229 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2433, file: !2433, line: 428, type: !14230, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14232)
!14230 = !DISubroutineType(types: !14231)
!14231 = !{null, !2328}
!14232 = !{!14233}
!14233 = !DILocalVariable(name: "curr", arg: 1, scope: !14229, file: !2433, line: 428, type: !2328)
!14234 = !DILocation(line: 0, scope: !14229)
!14235 = !DILocation(line: 434, column: 6, scope: !14236)
!14236 = distinct !DILexicalBlock(scope: !14229, file: !2433, line: 434, column: 6)
!14237 = !DILocation(line: 434, column: 23, scope: !14236)
!14238 = !DILocation(line: 434, column: 6, scope: !14229)
!14239 = !DILocation(line: 435, column: 50, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14236, file: !2433, line: 434, column: 29)
!14241 = !DILocation(line: 435, column: 48, scope: !14240)
!14242 = !DILocation(line: 435, column: 29, scope: !14240)
!14243 = !DILocation(line: 436, column: 24, scope: !14240)
!14244 = !DILocation(line: 436, column: 3, scope: !14240)
!14245 = !DILocation(line: 437, column: 2, scope: !14240)
!14246 = !DILocation(line: 438, column: 1, scope: !14229)
!14247 = distinct !DISubprogram(name: "slice_time", scope: !2433, file: !2433, line: 407, type: !14248, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14250)
!14248 = !DISubroutineType(types: !14249)
!14249 = !{!107, !2328}
!14250 = !{!14251, !14252}
!14251 = !DILocalVariable(name: "curr", arg: 1, scope: !14247, file: !2433, line: 407, type: !2328)
!14252 = !DILocalVariable(name: "ret", scope: !14247, file: !2433, line: 409, type: !107)
!14253 = !DILocation(line: 0, scope: !14247)
!14254 = !DILocation(line: 409, column: 12, scope: !14247)
!14255 = !DILocation(line: 416, column: 2, scope: !14247)
!14256 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2433, file: !2433, line: 440, type: !14257, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14259)
!14257 = !DISubroutineType(types: !14258)
!14258 = !{null, !736, !107}
!14259 = !{!14260, !14261, !14262, !14268}
!14260 = !DILocalVariable(name: "slice", arg: 1, scope: !14256, file: !2433, line: 440, type: !736)
!14261 = !DILocalVariable(name: "prio", arg: 2, scope: !14256, file: !2433, line: 440, type: !107)
!14262 = !DILocalVariable(name: "__i", scope: !14263, file: !2433, line: 442, type: !14264)
!14263 = distinct !DILexicalBlock(scope: !14256, file: !2433, line: 442, column: 2)
!14264 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !14265)
!14265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !14266)
!14266 = !{!14267}
!14267 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14265, file: !249, line: 33, baseType: !107, size: 32)
!14268 = !DILocalVariable(name: "__key", scope: !14263, file: !2433, line: 442, type: !14264)
!14269 = !DILocation(line: 0, scope: !14256)
!14270 = !DILocation(line: 0, scope: !14263)
!14271 = !DILocalVariable(name: "l", arg: 1, scope: !14272, file: !249, line: 136, type: !14275)
!14272 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !14273, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14276)
!14273 = !DISubroutineType(types: !14274)
!14274 = !{!14264, !14275}
!14275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 32)
!14276 = !{!14271, !14277}
!14277 = !DILocalVariable(name: "k", scope: !14272, file: !249, line: 139, type: !14264)
!14278 = !DILocation(line: 0, scope: !14272, inlinedAt: !14279)
!14279 = distinct !DILocation(line: 442, column: 2, scope: !14263)
!14280 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !14285)
!14281 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5993, file: !5993, line: 42, type: !5994, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14282)
!14282 = !{!14283, !14284}
!14283 = !DILocalVariable(name: "key", scope: !14281, file: !5993, line: 44, type: !32)
!14284 = !DILocalVariable(name: "tmp", scope: !14281, file: !5993, line: 53, type: !32)
!14285 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !14279)
!14286 = !{i64 2322182}
!14287 = !DILocation(line: 0, scope: !14281, inlinedAt: !14285)
!14288 = !DILocation(line: 443, column: 29, scope: !14289)
!14289 = distinct !DILexicalBlock(scope: !14290, file: !2433, line: 442, column: 26)
!14290 = distinct !DILexicalBlock(scope: !14263, file: !2433, line: 442, column: 2)
!14291 = !DILocation(line: 444, column: 17, scope: !14289)
!14292 = !DILocation(line: 445, column: 51, scope: !14293)
!14293 = distinct !DILexicalBlock(scope: !14289, file: !2433, line: 445, column: 7)
!14294 = !DILocation(line: 445, column: 7, scope: !14289)
!14295 = !DILocation(line: 0, scope: !14289)
!14296 = !DILocation(line: 451, column: 18, scope: !14289)
!14297 = !DILocation(line: 452, column: 3, scope: !14289)
!14298 = !DILocalVariable(name: "key", arg: 2, scope: !14299, file: !249, line: 190, type: !14264)
!14299 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !14300, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14302)
!14300 = !DISubroutineType(types: !14301)
!14301 = !{null, !14275, !14264}
!14302 = !{!14303, !14298}
!14303 = !DILocalVariable(name: "l", arg: 1, scope: !14299, file: !249, line: 189, type: !14275)
!14304 = !DILocation(line: 0, scope: !14299, inlinedAt: !14305)
!14305 = distinct !DILocation(line: 442, column: 2, scope: !14290)
!14306 = !DILocalVariable(name: "key", arg: 1, scope: !14307, file: !5993, line: 84, type: !32)
!14307 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5993, file: !5993, line: 84, type: !6004, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14308)
!14308 = !{!14306}
!14309 = !DILocation(line: 0, scope: !14307, inlinedAt: !14310)
!14310 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !14305)
!14311 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !14310)
!14312 = !{i64 2322999}
!14313 = !DILocation(line: 454, column: 1, scope: !14256)
!14314 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !13664, file: !13664, line: 389, type: !7174, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14315)
!14315 = !{!14316}
!14316 = !DILocalVariable(name: "t", arg: 1, scope: !14314, file: !13664, line: 389, type: !162)
!14317 = !DILocation(line: 0, scope: !14314)
!14318 = !DILocalVariable(name: "t", arg: 1, scope: !14319, file: !13664, line: 102, type: !1506)
!14319 = distinct !DISubprogram(name: "z_tmcvt", scope: !13664, file: !13664, line: 102, type: !13672, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14320)
!14320 = !{!14318, !14321, !14322, !14323, !14324, !14325, !14326, !14327, !14328, !14329, !14330}
!14321 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14319, file: !13664, line: 102, type: !162)
!14322 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14319, file: !13664, line: 103, type: !162)
!14323 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14319, file: !13664, line: 103, type: !136)
!14324 = !DILocalVariable(name: "result32", arg: 5, scope: !14319, file: !13664, line: 104, type: !136)
!14325 = !DILocalVariable(name: "round_up", arg: 6, scope: !14319, file: !13664, line: 104, type: !136)
!14326 = !DILocalVariable(name: "round_off", arg: 7, scope: !14319, file: !13664, line: 105, type: !136)
!14327 = !DILocalVariable(name: "mul_ratio", scope: !14319, file: !13664, line: 107, type: !136)
!14328 = !DILocalVariable(name: "div_ratio", scope: !14319, file: !13664, line: 109, type: !136)
!14329 = !DILocalVariable(name: "off", scope: !14319, file: !13664, line: 116, type: !1506)
!14330 = !DILocalVariable(name: "rdivisor", scope: !14331, file: !13664, line: 119, type: !162)
!14331 = distinct !DILexicalBlock(scope: !14332, file: !13664, line: 118, column: 18)
!14332 = distinct !DILexicalBlock(scope: !14319, file: !13664, line: 118, column: 6)
!14333 = !DILocation(line: 0, scope: !14319, inlinedAt: !14334)
!14334 = distinct !DILocation(line: 392, column: 9, scope: !14314)
!14335 = !DILocation(line: 143, column: 25, scope: !14336, inlinedAt: !14334)
!14336 = distinct !DILexicalBlock(scope: !14337, file: !13664, line: 142, column: 17)
!14337 = distinct !DILexicalBlock(scope: !14338, file: !13664, line: 142, column: 7)
!14338 = distinct !DILexicalBlock(scope: !14339, file: !13664, line: 141, column: 24)
!14339 = distinct !DILexicalBlock(scope: !14340, file: !13664, line: 141, column: 13)
!14340 = distinct !DILexicalBlock(scope: !14319, file: !13664, line: 134, column: 6)
!14341 = !DILocation(line: 392, column: 2, scope: !14314)
!14342 = distinct !DISubprogram(name: "z_time_slice", scope: !2433, file: !2433, line: 502, type: !7811, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14343)
!14343 = !{!14344, !14345}
!14344 = !DILocalVariable(name: "ticks", arg: 1, scope: !14342, file: !2433, line: 502, type: !107)
!14345 = !DILocalVariable(name: "key", scope: !14342, file: !2433, line: 511, type: !14264)
!14346 = !DILocation(line: 0, scope: !14342)
!14347 = !DILocation(line: 0, scope: !14272, inlinedAt: !14348)
!14348 = distinct !DILocation(line: 511, column: 25, scope: !14342)
!14349 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !14350)
!14350 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !14348)
!14351 = !DILocation(line: 0, scope: !14281, inlinedAt: !14350)
!14352 = !DILocation(line: 514, column: 6, scope: !14353)
!14353 = distinct !DILexicalBlock(scope: !14342, file: !2433, line: 514, column: 6)
!14354 = !DILocation(line: 514, column: 25, scope: !14353)
!14355 = !DILocation(line: 514, column: 22, scope: !14353)
!14356 = !DILocation(line: 514, column: 6, scope: !14342)
!14357 = !DILocation(line: 515, column: 3, scope: !14358)
!14358 = distinct !DILexicalBlock(scope: !14353, file: !2433, line: 514, column: 35)
!14359 = !DILocation(line: 0, scope: !14299, inlinedAt: !14360)
!14360 = distinct !DILocation(line: 516, column: 3, scope: !14358)
!14361 = !DILocation(line: 0, scope: !14307, inlinedAt: !14362)
!14362 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !14360)
!14363 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !14362)
!14364 = !DILocation(line: 517, column: 3, scope: !14358)
!14365 = !DILocation(line: 519, column: 18, scope: !14342)
!14366 = !DILocation(line: 522, column: 6, scope: !14367)
!14367 = distinct !DILexicalBlock(scope: !14342, file: !2433, line: 522, column: 6)
!14368 = !DILocation(line: 522, column: 27, scope: !14367)
!14369 = !DILocation(line: 522, column: 30, scope: !14367)
!14370 = !DILocation(line: 522, column: 6, scope: !14342)
!14371 = !DILocation(line: 523, column: 30, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14373, file: !2433, line: 523, column: 7)
!14373 = distinct !DILexicalBlock(scope: !14367, file: !2433, line: 522, column: 51)
!14374 = !DILocation(line: 523, column: 13, scope: !14372)
!14375 = !DILocation(line: 523, column: 7, scope: !14373)
!14376 = !DILocation(line: 530, column: 10, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14372, file: !2433, line: 523, column: 43)
!14378 = !DILocation(line: 531, column: 3, scope: !14377)
!14379 = !DILocation(line: 532, column: 30, scope: !14380)
!14380 = distinct !DILexicalBlock(scope: !14372, file: !2433, line: 531, column: 10)
!14381 = !DILocation(line: 535, column: 29, scope: !14382)
!14382 = distinct !DILexicalBlock(scope: !14367, file: !2433, line: 534, column: 9)
!14383 = !DILocation(line: 0, scope: !14299, inlinedAt: !14384)
!14384 = distinct !DILocation(line: 537, column: 2, scope: !14342)
!14385 = !DILocation(line: 0, scope: !14307, inlinedAt: !14386)
!14386 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !14384)
!14387 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !14386)
!14388 = !DILocation(line: 538, column: 1, scope: !14342)
!14389 = distinct !DISubprogram(name: "sliceable", scope: !2433, file: !2433, line: 468, type: !14390, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14392)
!14390 = !DISubroutineType(types: !14391)
!14391 = !{!136, !2328}
!14392 = !{!14393, !14394}
!14393 = !DILocalVariable(name: "thread", arg: 1, scope: !14389, file: !2433, line: 468, type: !2328)
!14394 = !DILocalVariable(name: "ret", scope: !14389, file: !2433, line: 470, type: !136)
!14395 = !DILocation(line: 0, scope: !14389)
!14396 = !DILocation(line: 470, column: 13, scope: !14389)
!14397 = !DILocation(line: 471, column: 3, scope: !14389)
!14398 = !DILocation(line: 471, column: 7, scope: !14389)
!14399 = !DILocation(line: 472, column: 3, scope: !14389)
!14400 = !DILocation(line: 472, column: 37, scope: !14389)
!14401 = !DILocation(line: 472, column: 24, scope: !14389)
!14402 = !DILocation(line: 472, column: 43, scope: !14389)
!14403 = !DILocation(line: 472, column: 7, scope: !14389)
!14404 = !DILocation(line: 473, column: 3, scope: !14389)
!14405 = !DILocation(line: 473, column: 7, scope: !14389)
!14406 = !DILocation(line: 473, column: 6, scope: !14389)
!14407 = !DILocation(line: 479, column: 2, scope: !14389)
!14408 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2433, file: !2433, line: 482, type: !14409, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14411)
!14409 = !DISubroutineType(types: !14410)
!14410 = !{!14264, !14264}
!14411 = !{!14412, !14413}
!14412 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14408, file: !2433, line: 482, type: !14264)
!14413 = !DILocalVariable(name: "curr", scope: !14408, file: !2433, line: 484, type: !2328)
!14414 = !DILocation(line: 0, scope: !14408)
!14415 = !DILocation(line: 484, column: 26, scope: !14408)
!14416 = !DILocation(line: 493, column: 7, scope: !14417)
!14417 = distinct !DILexicalBlock(scope: !14408, file: !2433, line: 493, column: 6)
!14418 = !DILocation(line: 493, column: 6, scope: !14408)
!14419 = !DILocation(line: 494, column: 3, scope: !14420)
!14420 = distinct !DILexicalBlock(scope: !14417, file: !2433, line: 493, column: 49)
!14421 = !DILocation(line: 495, column: 2, scope: !14420)
!14422 = !DILocation(line: 496, column: 2, scope: !14408)
!14423 = !DILocation(line: 499, column: 1, scope: !14408)
!14424 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !13105, file: !13105, line: 106, type: !14390, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14425)
!14425 = !{!14426, !14427}
!14426 = !DILocalVariable(name: "thread", arg: 1, scope: !14424, file: !13105, line: 106, type: !2328)
!14427 = !DILocalVariable(name: "state", scope: !14424, file: !13105, line: 108, type: !133)
!14428 = !DILocation(line: 0, scope: !14424)
!14429 = !DILocation(line: 108, column: 31, scope: !14424)
!14430 = !DILocation(line: 110, column: 16, scope: !14424)
!14431 = !DILocation(line: 111, column: 41, scope: !14424)
!14432 = !DILocation(line: 110, column: 2, scope: !14424)
!14433 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2433, file: !2433, line: 393, type: !14230, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14434)
!14434 = !{!14435}
!14435 = !DILocalVariable(name: "thread", arg: 1, scope: !14433, file: !2433, line: 393, type: !2328)
!14436 = !DILocation(line: 0, scope: !14433)
!14437 = !DILocation(line: 395, column: 6, scope: !14438)
!14438 = distinct !DILexicalBlock(scope: !14433, file: !2433, line: 395, column: 6)
!14439 = !DILocation(line: 395, column: 6, scope: !14433)
!14440 = !DILocalVariable(name: "thread", arg: 1, scope: !14441, file: !2433, line: 264, type: !2328)
!14441 = distinct !DISubprogram(name: "dequeue_thread", scope: !2433, file: !2433, line: 264, type: !14230, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14442)
!14442 = !{!14440}
!14443 = !DILocation(line: 0, scope: !14441, inlinedAt: !14444)
!14444 = distinct !DILocation(line: 396, column: 3, scope: !14445)
!14445 = distinct !DILexicalBlock(scope: !14438, file: !2433, line: 395, column: 34)
!14446 = !DILocation(line: 266, column: 15, scope: !14441, inlinedAt: !14444)
!14447 = !DILocation(line: 266, column: 28, scope: !14441, inlinedAt: !14444)
!14448 = !DILocalVariable(name: "thread", arg: 1, scope: !14449, file: !2433, line: 232, type: !2328)
!14449 = distinct !DISubprogram(name: "runq_remove", scope: !2433, file: !2433, line: 232, type: !14230, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14450)
!14450 = !{!14448}
!14451 = !DILocation(line: 0, scope: !14449, inlinedAt: !14452)
!14452 = distinct !DILocation(line: 268, column: 3, scope: !14453, inlinedAt: !14444)
!14453 = distinct !DILexicalBlock(scope: !14454, file: !2433, line: 267, column: 35)
!14454 = distinct !DILexicalBlock(scope: !14441, file: !2433, line: 267, column: 6)
!14455 = !DILocation(line: 234, column: 2, scope: !14449, inlinedAt: !14452)
!14456 = !DILocation(line: 397, column: 2, scope: !14445)
!14457 = !DILocalVariable(name: "thread", arg: 1, scope: !14458, file: !2433, line: 250, type: !2328)
!14458 = distinct !DISubprogram(name: "queue_thread", scope: !2433, file: !2433, line: 250, type: !14230, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14459)
!14459 = !{!14457}
!14460 = !DILocation(line: 0, scope: !14458, inlinedAt: !14461)
!14461 = distinct !DILocation(line: 398, column: 2, scope: !14433)
!14462 = !DILocation(line: 252, column: 15, scope: !14458, inlinedAt: !14461)
!14463 = !DILocation(line: 252, column: 28, scope: !14458, inlinedAt: !14461)
!14464 = !DILocalVariable(name: "thread", arg: 1, scope: !14465, file: !2433, line: 227, type: !2328)
!14465 = distinct !DISubprogram(name: "runq_add", scope: !2433, file: !2433, line: 227, type: !14230, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14466)
!14466 = !{!14464}
!14467 = !DILocation(line: 0, scope: !14465, inlinedAt: !14468)
!14468 = distinct !DILocation(line: 254, column: 3, scope: !14469, inlinedAt: !14461)
!14469 = distinct !DILexicalBlock(scope: !14470, file: !2433, line: 253, column: 35)
!14470 = distinct !DILexicalBlock(scope: !14458, file: !2433, line: 253, column: 6)
!14471 = !DILocalVariable(name: "pq", arg: 1, scope: !14472, file: !2433, line: 181, type: !14475)
!14472 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2433, file: !2433, line: 181, type: !14473, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14476)
!14473 = !DISubroutineType(types: !14474)
!14474 = !{null, !14475, !2328}
!14475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 32)
!14476 = !{!14471, !14477, !14478}
!14477 = !DILocalVariable(name: "thread", arg: 2, scope: !14472, file: !2433, line: 182, type: !2328)
!14478 = !DILocalVariable(name: "t", scope: !14472, file: !2433, line: 184, type: !2328)
!14479 = !DILocation(line: 0, scope: !14472, inlinedAt: !14480)
!14480 = distinct !DILocation(line: 229, column: 2, scope: !14465, inlinedAt: !14468)
!14481 = !DILocation(line: 188, column: 2, scope: !14482, inlinedAt: !14480)
!14482 = distinct !DILexicalBlock(scope: !14472, file: !2433, line: 188, column: 2)
!14483 = !DILocation(line: 188, column: 2, scope: !14484, inlinedAt: !14480)
!14484 = distinct !DILexicalBlock(scope: !14482, file: !2433, line: 188, column: 2)
!14485 = !DILocation(line: 0, scope: !14482, inlinedAt: !14480)
!14486 = !DILocation(line: 189, column: 7, scope: !14487, inlinedAt: !14480)
!14487 = distinct !DILexicalBlock(scope: !14488, file: !2433, line: 189, column: 7)
!14488 = distinct !DILexicalBlock(scope: !14484, file: !2433, line: 188, column: 56)
!14489 = !DILocation(line: 189, column: 35, scope: !14487, inlinedAt: !14480)
!14490 = !DILocation(line: 189, column: 7, scope: !14488, inlinedAt: !14480)
!14491 = !DILocation(line: 191, column: 21, scope: !14492, inlinedAt: !14480)
!14492 = distinct !DILexicalBlock(scope: !14487, file: !2433, line: 189, column: 40)
!14493 = !DILocation(line: 190, column: 4, scope: !14492, inlinedAt: !14480)
!14494 = !DILocation(line: 192, column: 4, scope: !14492, inlinedAt: !14480)
!14495 = distinct !{!14495, !14481, !14496}
!14496 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !14480)
!14497 = !DILocation(line: 196, column: 37, scope: !14472, inlinedAt: !14480)
!14498 = !DILocation(line: 196, column: 2, scope: !14472, inlinedAt: !14480)
!14499 = !DILocation(line: 197, column: 1, scope: !14472, inlinedAt: !14480)
!14500 = !DILocation(line: 399, column: 25, scope: !14433)
!14501 = !DILocation(line: 399, column: 22, scope: !14433)
!14502 = !DILocation(line: 399, column: 2, scope: !14433)
!14503 = !DILocation(line: 400, column: 1, scope: !14433)
!14504 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !13105, file: !13105, line: 136, type: !14390, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14505)
!14505 = !{!14506}
!14506 = !DILocalVariable(name: "thread", arg: 1, scope: !14504, file: !13105, line: 136, type: !2328)
!14507 = !DILocation(line: 0, scope: !14504)
!14508 = !DILocation(line: 138, column: 9, scope: !14504)
!14509 = !DILocation(line: 138, column: 2, scope: !14504)
!14510 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2433, file: !2433, line: 1137, type: !14473, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14511)
!14511 = !{!14512, !14513}
!14512 = !DILocalVariable(name: "pq", arg: 1, scope: !14510, file: !2433, line: 1137, type: !14475)
!14513 = !DILocalVariable(name: "thread", arg: 2, scope: !14510, file: !2433, line: 1137, type: !2328)
!14514 = !DILocation(line: 0, scope: !14510)
!14515 = !DILocation(line: 1141, column: 33, scope: !14510)
!14516 = !DILocation(line: 1141, column: 2, scope: !14510)
!14517 = !DILocation(line: 1142, column: 1, scope: !14510)
!14518 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !233, file: !233, line: 294, type: !14519, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14521)
!14519 = !DISubroutineType(types: !14520)
!14520 = !{!2429, !14475}
!14521 = !{!14522}
!14522 = !DILocalVariable(name: "list", arg: 1, scope: !14518, file: !233, line: 294, type: !14475)
!14523 = !DILocation(line: 0, scope: !14518)
!14524 = !DILocation(line: 296, column: 9, scope: !14518)
!14525 = !DILocation(line: 296, column: 49, scope: !14518)
!14526 = !DILocation(line: 296, column: 2, scope: !14518)
!14527 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !233, file: !233, line: 443, type: !14528, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14530)
!14528 = !DISubroutineType(types: !14529)
!14529 = !{null, !2429, !2429}
!14530 = !{!14531, !14532, !14533}
!14531 = !DILocalVariable(name: "successor", arg: 1, scope: !14527, file: !233, line: 443, type: !2429)
!14532 = !DILocalVariable(name: "node", arg: 2, scope: !14527, file: !233, line: 443, type: !2429)
!14533 = !DILocalVariable(name: "prev", scope: !14527, file: !233, line: 445, type: !14534)
!14534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2429)
!14535 = !DILocation(line: 0, scope: !14527)
!14536 = !DILocation(line: 445, column: 39, scope: !14527)
!14537 = !DILocation(line: 447, column: 8, scope: !14527)
!14538 = !DILocation(line: 447, column: 13, scope: !14527)
!14539 = !DILocation(line: 448, column: 8, scope: !14527)
!14540 = !DILocation(line: 448, column: 13, scope: !14527)
!14541 = !DILocation(line: 449, column: 8, scope: !14527)
!14542 = !DILocation(line: 449, column: 13, scope: !14527)
!14543 = !DILocation(line: 450, column: 18, scope: !14527)
!14544 = !DILocation(line: 451, column: 1, scope: !14527)
!14545 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !233, file: !233, line: 341, type: !14546, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14548)
!14546 = !DISubroutineType(types: !14547)
!14547 = !{!2429, !14475, !2429}
!14548 = !{!14549, !14550}
!14549 = !DILocalVariable(name: "list", arg: 1, scope: !14545, file: !233, line: 341, type: !14475)
!14550 = !DILocalVariable(name: "node", arg: 2, scope: !14545, file: !233, line: 342, type: !2429)
!14551 = !DILocation(line: 0, scope: !14545)
!14552 = !DILocation(line: 344, column: 15, scope: !14545)
!14553 = !DILocation(line: 344, column: 9, scope: !14545)
!14554 = !DILocation(line: 344, column: 26, scope: !14545)
!14555 = !DILocation(line: 344, column: 2, scope: !14545)
!14556 = distinct !DISubprogram(name: "sys_dlist_append", scope: !233, file: !233, line: 404, type: !14557, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14559)
!14557 = !DISubroutineType(types: !14558)
!14558 = !{null, !14475, !2429}
!14559 = !{!14560, !14561, !14562}
!14560 = !DILocalVariable(name: "list", arg: 1, scope: !14556, file: !233, line: 404, type: !14475)
!14561 = !DILocalVariable(name: "node", arg: 2, scope: !14556, file: !233, line: 404, type: !2429)
!14562 = !DILocalVariable(name: "tail", scope: !14556, file: !233, line: 406, type: !14534)
!14563 = !DILocation(line: 0, scope: !14556)
!14564 = !DILocation(line: 406, column: 34, scope: !14556)
!14565 = !DILocation(line: 408, column: 8, scope: !14556)
!14566 = !DILocation(line: 408, column: 13, scope: !14556)
!14567 = !DILocation(line: 409, column: 8, scope: !14556)
!14568 = !DILocation(line: 409, column: 13, scope: !14556)
!14569 = !DILocation(line: 411, column: 8, scope: !14556)
!14570 = !DILocation(line: 411, column: 13, scope: !14556)
!14571 = !DILocation(line: 412, column: 13, scope: !14556)
!14572 = !DILocation(line: 413, column: 1, scope: !14556)
!14573 = distinct !DISubprogram(name: "update_cache", scope: !2433, file: !2433, line: 559, type: !7811, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14574)
!14574 = !{!14575, !14576}
!14575 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14573, file: !2433, line: 559, type: !107)
!14576 = !DILocalVariable(name: "thread", scope: !14573, file: !2433, line: 562, type: !2328)
!14577 = !DILocation(line: 0, scope: !14573)
!14578 = !DILocation(line: 239, column: 9, scope: !14579, inlinedAt: !14582)
!14579 = distinct !DISubprogram(name: "runq_best", scope: !2433, file: !2433, line: 237, type: !14580, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !250)
!14580 = !DISubroutineType(types: !14581)
!14581 = !{!2328}
!14582 = distinct !DILocation(line: 314, column: 28, scope: !14583, inlinedAt: !14586)
!14583 = distinct !DISubprogram(name: "next_up", scope: !2433, file: !2433, line: 312, type: !14580, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14584)
!14584 = !{!14585}
!14585 = !DILocalVariable(name: "thread", scope: !14583, file: !2433, line: 314, type: !2328)
!14586 = distinct !DILocation(line: 562, column: 28, scope: !14573)
!14587 = !DILocation(line: 0, scope: !14583, inlinedAt: !14586)
!14588 = !DILocation(line: 340, column: 17, scope: !14583, inlinedAt: !14586)
!14589 = !DILocation(line: 340, column: 9, scope: !14583, inlinedAt: !14586)
!14590 = !DILocalVariable(name: "thread", arg: 1, scope: !14591, file: !2433, line: 127, type: !2328)
!14591 = distinct !DISubprogram(name: "should_preempt", scope: !2433, file: !2433, line: 127, type: !14592, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14594)
!14592 = !DISubroutineType(types: !14593)
!14593 = !{!136, !2328, !107}
!14594 = !{!14590, !14595}
!14595 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14591, file: !2433, line: 128, type: !107)
!14596 = !DILocation(line: 0, scope: !14591, inlinedAt: !14597)
!14597 = distinct !DILocation(line: 564, column: 6, scope: !14598)
!14598 = distinct !DILexicalBlock(scope: !14573, file: !2433, line: 564, column: 6)
!14599 = !DILocation(line: 133, column: 17, scope: !14600, inlinedAt: !14597)
!14600 = distinct !DILexicalBlock(scope: !14591, file: !2433, line: 133, column: 6)
!14601 = !DILocation(line: 0, scope: !14598)
!14602 = !DILocation(line: 133, column: 6, scope: !14591, inlinedAt: !14597)
!14603 = !DILocation(line: 140, column: 6, scope: !14604, inlinedAt: !14597)
!14604 = distinct !DILexicalBlock(scope: !14591, file: !2433, line: 140, column: 6)
!14605 = !DILocation(line: 140, column: 6, scope: !14591, inlinedAt: !14597)
!14606 = !DILocation(line: 150, column: 9, scope: !14607, inlinedAt: !14597)
!14607 = distinct !DILexicalBlock(scope: !14591, file: !2433, line: 149, column: 6)
!14608 = !DILocation(line: 149, column: 6, scope: !14591, inlinedAt: !14597)
!14609 = !DILocation(line: 157, column: 6, scope: !14610, inlinedAt: !14597)
!14610 = distinct !DILexicalBlock(scope: !14591, file: !2433, line: 157, column: 6)
!14611 = !DILocation(line: 564, column: 6, scope: !14573)
!14612 = !DILocation(line: 566, column: 14, scope: !14613)
!14613 = distinct !DILexicalBlock(scope: !14614, file: !2433, line: 566, column: 7)
!14614 = distinct !DILexicalBlock(scope: !14598, file: !2433, line: 564, column: 42)
!14615 = !DILocation(line: 566, column: 7, scope: !14614)
!14616 = !DILocation(line: 567, column: 4, scope: !14617)
!14617 = distinct !DILexicalBlock(scope: !14613, file: !2433, line: 566, column: 27)
!14618 = !DILocation(line: 568, column: 3, scope: !14617)
!14619 = !DILocation(line: 585, column: 1, scope: !14573)
!14620 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2433, file: !2433, line: 1144, type: !14621, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14623)
!14621 = !DISubroutineType(types: !14622)
!14622 = !{!2328, !14475}
!14623 = !{!14624, !14625, !14626}
!14624 = !DILocalVariable(name: "pq", arg: 1, scope: !14620, file: !2433, line: 1144, type: !14475)
!14625 = !DILocalVariable(name: "thread", scope: !14620, file: !2433, line: 1146, type: !2328)
!14626 = !DILocalVariable(name: "n", scope: !14620, file: !2433, line: 1147, type: !2429)
!14627 = !DILocation(line: 0, scope: !14620)
!14628 = !DILocation(line: 1147, column: 19, scope: !14620)
!14629 = !DILocation(line: 1152, column: 2, scope: !14620)
!14630 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !13105, file: !13105, line: 115, type: !14390, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14631)
!14631 = !{!14632}
!14632 = !DILocalVariable(name: "thread", arg: 1, scope: !14630, file: !13105, line: 115, type: !2328)
!14633 = !DILocation(line: 0, scope: !14630)
!14634 = !DILocation(line: 117, column: 46, scope: !14630)
!14635 = !DILocation(line: 117, column: 10, scope: !14630)
!14636 = !DILocation(line: 117, column: 9, scope: !14630)
!14637 = !DILocation(line: 117, column: 2, scope: !14630)
!14638 = distinct !DISubprogram(name: "is_preempt", scope: !2433, file: !2433, line: 62, type: !14248, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14639)
!14639 = !{!14640}
!14640 = !DILocalVariable(name: "thread", arg: 1, scope: !14638, file: !2433, line: 62, type: !2328)
!14641 = !DILocation(line: 0, scope: !14638)
!14642 = !DILocation(line: 65, column: 22, scope: !14638)
!14643 = !DILocation(line: 65, column: 30, scope: !14638)
!14644 = !DILocation(line: 65, column: 2, scope: !14638)
!14645 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13497, file: !13497, line: 35, type: !14646, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14650)
!14646 = !DISubroutineType(types: !14647)
!14647 = !{!136, !14648}
!14648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14649, size: 32)
!14649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2379)
!14650 = !{!14651}
!14651 = !DILocalVariable(name: "to", arg: 1, scope: !14645, file: !13497, line: 35, type: !14648)
!14652 = !DILocation(line: 0, scope: !14645)
!14653 = !DILocation(line: 37, column: 35, scope: !14645)
!14654 = !DILocation(line: 37, column: 10, scope: !14645)
!14655 = !DILocation(line: 37, column: 9, scope: !14645)
!14656 = !DILocation(line: 37, column: 2, scope: !14645)
!14657 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !233, file: !233, line: 225, type: !14658, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14662)
!14658 = !DISubroutineType(types: !14659)
!14659 = !{!136, !14660}
!14660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14661, size: 32)
!14661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2338)
!14662 = !{!14663}
!14663 = !DILocalVariable(name: "node", arg: 1, scope: !14657, file: !233, line: 225, type: !14660)
!14664 = !DILocation(line: 0, scope: !14657)
!14665 = !DILocation(line: 227, column: 15, scope: !14657)
!14666 = !DILocation(line: 227, column: 20, scope: !14657)
!14667 = !DILocation(line: 227, column: 2, scope: !14657)
!14668 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !233, file: !233, line: 325, type: !14546, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14669)
!14669 = !{!14670, !14671}
!14670 = !DILocalVariable(name: "list", arg: 1, scope: !14668, file: !233, line: 325, type: !14475)
!14671 = !DILocalVariable(name: "node", arg: 2, scope: !14668, file: !233, line: 326, type: !2429)
!14672 = !DILocation(line: 0, scope: !14668)
!14673 = !DILocation(line: 328, column: 24, scope: !14668)
!14674 = !DILocation(line: 328, column: 15, scope: !14668)
!14675 = !DILocation(line: 328, column: 9, scope: !14668)
!14676 = !DILocation(line: 328, column: 45, scope: !14668)
!14677 = !DILocation(line: 328, column: 2, scope: !14668)
!14678 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !233, file: !233, line: 266, type: !14679, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14681)
!14679 = !DISubroutineType(types: !14680)
!14680 = !{!136, !14475}
!14681 = !{!14682}
!14682 = !DILocalVariable(name: "list", arg: 1, scope: !14678, file: !233, line: 266, type: !14475)
!14683 = !DILocation(line: 0, scope: !14678)
!14684 = !DILocation(line: 268, column: 15, scope: !14678)
!14685 = !DILocation(line: 268, column: 20, scope: !14678)
!14686 = !DILocation(line: 268, column: 2, scope: !14678)
!14687 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !233, file: !233, line: 496, type: !14688, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14690)
!14688 = !DISubroutineType(types: !14689)
!14689 = !{null, !2429}
!14690 = !{!14691, !14692, !14693}
!14691 = !DILocalVariable(name: "node", arg: 1, scope: !14687, file: !233, line: 496, type: !2429)
!14692 = !DILocalVariable(name: "prev", scope: !14687, file: !233, line: 498, type: !14534)
!14693 = !DILocalVariable(name: "next", scope: !14687, file: !233, line: 499, type: !14534)
!14694 = !DILocation(line: 0, scope: !14687)
!14695 = !DILocation(line: 498, column: 34, scope: !14687)
!14696 = !DILocation(line: 499, column: 34, scope: !14687)
!14697 = !DILocation(line: 501, column: 8, scope: !14687)
!14698 = !DILocation(line: 501, column: 13, scope: !14687)
!14699 = !DILocation(line: 502, column: 8, scope: !14687)
!14700 = !DILocation(line: 502, column: 13, scope: !14687)
!14701 = !DILocation(line: 503, column: 2, scope: !14687)
!14702 = !DILocation(line: 504, column: 1, scope: !14687)
!14703 = distinct !DISubprogram(name: "sys_dnode_init", scope: !233, file: !233, line: 211, type: !14688, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14704)
!14704 = !{!14705}
!14705 = !DILocalVariable(name: "node", arg: 1, scope: !14703, file: !233, line: 211, type: !2429)
!14706 = !DILocation(line: 0, scope: !14703)
!14707 = !DILocation(line: 213, column: 8, scope: !14703)
!14708 = !DILocation(line: 213, column: 13, scope: !14703)
!14709 = !DILocation(line: 214, column: 8, scope: !14703)
!14710 = !DILocation(line: 214, column: 13, scope: !14703)
!14711 = !DILocation(line: 215, column: 1, scope: !14703)
!14712 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !13105, file: !13105, line: 131, type: !14713, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14715)
!14713 = !DISubroutineType(types: !14714)
!14714 = !{!136, !2328, !162}
!14715 = !{!14716, !14717}
!14716 = !DILocalVariable(name: "thread", arg: 1, scope: !14712, file: !13105, line: 131, type: !2328)
!14717 = !DILocalVariable(name: "state", arg: 2, scope: !14712, file: !13105, line: 131, type: !162)
!14718 = !DILocation(line: 0, scope: !14712)
!14719 = !DILocation(line: 133, column: 23, scope: !14712)
!14720 = !DILocation(line: 133, column: 45, scope: !14712)
!14721 = !DILocation(line: 133, column: 2, scope: !14712)
!14722 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !13105, file: !13105, line: 211, type: !14723, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14725)
!14723 = !DISubroutineType(types: !14724)
!14724 = !{!136, !107, !107}
!14725 = !{!14726, !14727}
!14726 = !DILocalVariable(name: "prio", arg: 1, scope: !14722, file: !13105, line: 211, type: !107)
!14727 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14722, file: !13105, line: 211, type: !107)
!14728 = !DILocation(line: 0, scope: !14722)
!14729 = !DILocation(line: 213, column: 9, scope: !14722)
!14730 = !DILocation(line: 213, column: 2, scope: !14722)
!14731 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !13105, file: !13105, line: 83, type: !14390, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14732)
!14732 = !{!14733}
!14733 = !DILocalVariable(name: "thread", arg: 1, scope: !14731, file: !13105, line: 83, type: !2328)
!14734 = !DILocation(line: 0, scope: !14731)
!14735 = !DILocation(line: 89, column: 16, scope: !14731)
!14736 = !DILocation(line: 89, column: 2, scope: !14731)
!14737 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !13105, file: !13105, line: 206, type: !14723, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14738)
!14738 = !{!14739, !14740}
!14739 = !DILocalVariable(name: "prio1", arg: 1, scope: !14737, file: !13105, line: 206, type: !107)
!14740 = !DILocalVariable(name: "prio2", arg: 2, scope: !14737, file: !13105, line: 206, type: !107)
!14741 = !DILocation(line: 0, scope: !14737)
!14742 = !DILocation(line: 208, column: 15, scope: !14737)
!14743 = !DILocation(line: 208, column: 2, scope: !14737)
!14744 = distinct !DISubprogram(name: "z_ready_thread", scope: !2433, file: !2433, line: 635, type: !14230, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14745)
!14745 = !{!14746, !14747, !14749}
!14746 = !DILocalVariable(name: "thread", arg: 1, scope: !14744, file: !2433, line: 635, type: !2328)
!14747 = !DILocalVariable(name: "__i", scope: !14748, file: !2433, line: 637, type: !14264)
!14748 = distinct !DILexicalBlock(scope: !14744, file: !2433, line: 637, column: 2)
!14749 = !DILocalVariable(name: "__key", scope: !14748, file: !2433, line: 637, type: !14264)
!14750 = !DILocation(line: 0, scope: !14744)
!14751 = !DILocation(line: 0, scope: !14748)
!14752 = !DILocation(line: 0, scope: !14272, inlinedAt: !14753)
!14753 = distinct !DILocation(line: 637, column: 2, scope: !14748)
!14754 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !14755)
!14755 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !14753)
!14756 = !DILocation(line: 0, scope: !14281, inlinedAt: !14755)
!14757 = !DILocation(line: 639, column: 4, scope: !14758)
!14758 = distinct !DILexicalBlock(scope: !14759, file: !2433, line: 638, column: 41)
!14759 = distinct !DILexicalBlock(scope: !14760, file: !2433, line: 638, column: 7)
!14760 = distinct !DILexicalBlock(scope: !14761, file: !2433, line: 637, column: 26)
!14761 = distinct !DILexicalBlock(scope: !14748, file: !2433, line: 637, column: 2)
!14762 = !DILocation(line: 0, scope: !14299, inlinedAt: !14763)
!14763 = distinct !DILocation(line: 637, column: 2, scope: !14761)
!14764 = !DILocation(line: 0, scope: !14307, inlinedAt: !14765)
!14765 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !14763)
!14766 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !14765)
!14767 = !DILocation(line: 642, column: 1, scope: !14744)
!14768 = distinct !DISubprogram(name: "ready_thread", scope: !2433, file: !2433, line: 617, type: !14230, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14769)
!14769 = !{!14770}
!14770 = !DILocalVariable(name: "thread", arg: 1, scope: !14768, file: !2433, line: 617, type: !2328)
!14771 = !DILocation(line: 0, scope: !14768)
!14772 = !DILocation(line: 626, column: 7, scope: !14773)
!14773 = distinct !DILexicalBlock(scope: !14768, file: !2433, line: 626, column: 6)
!14774 = !DILocation(line: 626, column: 34, scope: !14773)
!14775 = !DILocation(line: 626, column: 37, scope: !14773)
!14776 = !DILocation(line: 626, column: 6, scope: !14768)
!14777 = !DILocation(line: 0, scope: !14458, inlinedAt: !14778)
!14778 = distinct !DILocation(line: 629, column: 3, scope: !14779)
!14779 = distinct !DILexicalBlock(scope: !14773, file: !2433, line: 626, column: 64)
!14780 = !DILocation(line: 252, column: 15, scope: !14458, inlinedAt: !14778)
!14781 = !DILocation(line: 252, column: 28, scope: !14458, inlinedAt: !14778)
!14782 = !DILocation(line: 0, scope: !14465, inlinedAt: !14783)
!14783 = distinct !DILocation(line: 254, column: 3, scope: !14469, inlinedAt: !14778)
!14784 = !DILocation(line: 0, scope: !14472, inlinedAt: !14785)
!14785 = distinct !DILocation(line: 229, column: 2, scope: !14465, inlinedAt: !14783)
!14786 = !DILocation(line: 188, column: 2, scope: !14482, inlinedAt: !14785)
!14787 = !DILocation(line: 188, column: 2, scope: !14484, inlinedAt: !14785)
!14788 = !DILocation(line: 0, scope: !14482, inlinedAt: !14785)
!14789 = !DILocation(line: 189, column: 7, scope: !14487, inlinedAt: !14785)
!14790 = !DILocation(line: 189, column: 35, scope: !14487, inlinedAt: !14785)
!14791 = !DILocation(line: 189, column: 7, scope: !14488, inlinedAt: !14785)
!14792 = !DILocation(line: 191, column: 21, scope: !14492, inlinedAt: !14785)
!14793 = !DILocation(line: 190, column: 4, scope: !14492, inlinedAt: !14785)
!14794 = !DILocation(line: 192, column: 4, scope: !14492, inlinedAt: !14785)
!14795 = distinct !{!14795, !14786, !14796}
!14796 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !14785)
!14797 = !DILocation(line: 196, column: 37, scope: !14472, inlinedAt: !14785)
!14798 = !DILocation(line: 196, column: 2, scope: !14472, inlinedAt: !14785)
!14799 = !DILocation(line: 197, column: 1, scope: !14472, inlinedAt: !14785)
!14800 = !DILocation(line: 630, column: 3, scope: !14779)
!14801 = !DILocation(line: 632, column: 2, scope: !14779)
!14802 = !DILocation(line: 633, column: 1, scope: !14768)
!14803 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !13105, file: !13105, line: 120, type: !14390, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14804)
!14804 = !{!14805}
!14805 = !DILocalVariable(name: "thread", arg: 1, scope: !14803, file: !13105, line: 120, type: !2328)
!14806 = !DILocation(line: 0, scope: !14803)
!14807 = !DILocation(line: 122, column: 12, scope: !14803)
!14808 = !DILocation(line: 122, column: 62, scope: !14803)
!14809 = !DILocation(line: 123, column: 4, scope: !14803)
!14810 = !DILocation(line: 122, column: 2, scope: !14803)
!14811 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2433, file: !2433, line: 644, type: !14230, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14812)
!14812 = !{!14813, !14814, !14816}
!14813 = !DILocalVariable(name: "thread", arg: 1, scope: !14811, file: !2433, line: 644, type: !2328)
!14814 = !DILocalVariable(name: "__i", scope: !14815, file: !2433, line: 646, type: !14264)
!14815 = distinct !DILexicalBlock(scope: !14811, file: !2433, line: 646, column: 2)
!14816 = !DILocalVariable(name: "__key", scope: !14815, file: !2433, line: 646, type: !14264)
!14817 = !DILocation(line: 0, scope: !14811)
!14818 = !DILocation(line: 0, scope: !14815)
!14819 = !DILocation(line: 0, scope: !14272, inlinedAt: !14820)
!14820 = distinct !DILocation(line: 646, column: 2, scope: !14815)
!14821 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !14822)
!14822 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !14820)
!14823 = !DILocation(line: 0, scope: !14281, inlinedAt: !14822)
!14824 = !DILocation(line: 647, column: 3, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14826, file: !2433, line: 646, column: 26)
!14826 = distinct !DILexicalBlock(scope: !14815, file: !2433, line: 646, column: 2)
!14827 = !DILocation(line: 0, scope: !14299, inlinedAt: !14828)
!14828 = distinct !DILocation(line: 646, column: 2, scope: !14826)
!14829 = !DILocation(line: 0, scope: !14307, inlinedAt: !14830)
!14830 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !14828)
!14831 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !14830)
!14832 = !DILocation(line: 649, column: 1, scope: !14811)
!14833 = distinct !DISubprogram(name: "z_sched_start", scope: !2433, file: !2433, line: 651, type: !14230, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14834)
!14834 = !{!14835, !14836}
!14835 = !DILocalVariable(name: "thread", arg: 1, scope: !14833, file: !2433, line: 651, type: !2328)
!14836 = !DILocalVariable(name: "key", scope: !14833, file: !2433, line: 653, type: !14264)
!14837 = !DILocation(line: 0, scope: !14833)
!14838 = !DILocation(line: 0, scope: !14272, inlinedAt: !14839)
!14839 = distinct !DILocation(line: 653, column: 25, scope: !14833)
!14840 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !14841)
!14841 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !14839)
!14842 = !DILocation(line: 0, scope: !14281, inlinedAt: !14841)
!14843 = !DILocation(line: 655, column: 6, scope: !14844)
!14844 = distinct !DILexicalBlock(scope: !14833, file: !2433, line: 655, column: 6)
!14845 = !DILocation(line: 655, column: 6, scope: !14833)
!14846 = !DILocation(line: 0, scope: !14299, inlinedAt: !14847)
!14847 = distinct !DILocation(line: 656, column: 3, scope: !14848)
!14848 = distinct !DILexicalBlock(scope: !14844, file: !2433, line: 655, column: 36)
!14849 = !DILocation(line: 0, scope: !14307, inlinedAt: !14850)
!14850 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !14847)
!14851 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !14850)
!14852 = !DILocation(line: 657, column: 3, scope: !14848)
!14853 = !DILocation(line: 660, column: 2, scope: !14833)
!14854 = !DILocation(line: 661, column: 2, scope: !14833)
!14855 = !DILocation(line: 662, column: 2, scope: !14833)
!14856 = !DILocation(line: 663, column: 1, scope: !14833)
!14857 = distinct !DISubprogram(name: "z_has_thread_started", scope: !13105, file: !13105, line: 126, type: !14390, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14858)
!14858 = !{!14859}
!14859 = !DILocalVariable(name: "thread", arg: 1, scope: !14857, file: !13105, line: 126, type: !2328)
!14860 = !DILocation(line: 0, scope: !14857)
!14861 = !DILocation(line: 128, column: 23, scope: !14857)
!14862 = !DILocation(line: 128, column: 36, scope: !14857)
!14863 = !DILocation(line: 128, column: 56, scope: !14857)
!14864 = !DILocation(line: 128, column: 2, scope: !14857)
!14865 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !13105, file: !13105, line: 155, type: !14230, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14866)
!14866 = !{!14867}
!14867 = !DILocalVariable(name: "thread", arg: 1, scope: !14865, file: !13105, line: 155, type: !2328)
!14868 = !DILocation(line: 0, scope: !14865)
!14869 = !DILocation(line: 157, column: 15, scope: !14865)
!14870 = !DILocation(line: 157, column: 28, scope: !14865)
!14871 = !DILocation(line: 158, column: 1, scope: !14865)
!14872 = distinct !DISubprogram(name: "z_reschedule", scope: !2433, file: !2433, line: 967, type: !14300, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14873)
!14873 = !{!14874, !14875}
!14874 = !DILocalVariable(name: "lock", arg: 1, scope: !14872, file: !2433, line: 967, type: !14275)
!14875 = !DILocalVariable(name: "key", arg: 2, scope: !14872, file: !2433, line: 967, type: !14264)
!14876 = !DILocation(line: 0, scope: !14872)
!14877 = !DILocation(line: 969, column: 6, scope: !14878)
!14878 = distinct !DILexicalBlock(scope: !14872, file: !2433, line: 969, column: 6)
!14879 = !DILocation(line: 969, column: 23, scope: !14878)
!14880 = !DILocation(line: 969, column: 26, scope: !14878)
!14881 = !DILocation(line: 969, column: 6, scope: !14872)
!14882 = !DILocalVariable(name: "key", arg: 2, scope: !14883, file: !13209, line: 193, type: !14264)
!14883 = distinct !DISubprogram(name: "z_swap", scope: !13209, file: !13209, line: 193, type: !14884, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14886)
!14884 = !DISubroutineType(types: !14885)
!14885 = !{!107, !14275, !14264}
!14886 = !{!14887, !14882}
!14887 = !DILocalVariable(name: "lock", arg: 1, scope: !14883, file: !13209, line: 193, type: !14275)
!14888 = !DILocation(line: 0, scope: !14883, inlinedAt: !14889)
!14889 = distinct !DILocation(line: 970, column: 3, scope: !14890)
!14890 = distinct !DILexicalBlock(scope: !14878, file: !2433, line: 969, column: 39)
!14891 = !DILocation(line: 196, column: 9, scope: !14883, inlinedAt: !14889)
!14892 = !DILocation(line: 971, column: 2, scope: !14890)
!14893 = !DILocation(line: 0, scope: !14299, inlinedAt: !14894)
!14894 = distinct !DILocation(line: 972, column: 3, scope: !14895)
!14895 = distinct !DILexicalBlock(scope: !14878, file: !2433, line: 971, column: 9)
!14896 = !DILocation(line: 0, scope: !14307, inlinedAt: !14897)
!14897 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !14894)
!14898 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !14897)
!14899 = !DILocation(line: 975, column: 1, scope: !14872)
!14900 = distinct !DISubprogram(name: "resched", scope: !2433, file: !2433, line: 940, type: !14901, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14903)
!14901 = !DISubroutineType(types: !14902)
!14902 = !{!136, !162}
!14903 = !{!14904}
!14904 = !DILocalVariable(name: "key", arg: 1, scope: !14900, file: !2433, line: 940, type: !162)
!14905 = !DILocation(line: 0, scope: !14900)
!14906 = !DILocalVariable(name: "key", arg: 1, scope: !14907, file: !5993, line: 112, type: !32)
!14907 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5993, file: !5993, line: 112, type: !14908, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14910)
!14908 = !DISubroutineType(types: !14909)
!14909 = !{!136, !32}
!14910 = !{!14906}
!14911 = !DILocation(line: 0, scope: !14907, inlinedAt: !14912)
!14912 = distinct !DILocation(line: 946, column: 9, scope: !14900)
!14913 = !DILocation(line: 115, column: 13, scope: !14907, inlinedAt: !14912)
!14914 = !DILocation(line: 946, column: 32, scope: !14900)
!14915 = !DILocation(line: 1031, column: 3, scope: !14916, inlinedAt: !14919)
!14916 = distinct !DISubprogram(name: "__get_IPSR", scope: !6167, file: !6167, line: 1027, type: !6248, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14917)
!14917 = !{!14918}
!14918 = !DILocalVariable(name: "result", scope: !14916, file: !6167, line: 1029, type: !162)
!14919 = distinct !DILocation(line: 48, column: 10, scope: !14920, inlinedAt: !14921)
!14920 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6961, file: !6961, line: 46, type: !6962, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !250)
!14921 = distinct !DILocation(line: 946, column: 36, scope: !14900)
!14922 = !{i64 3768616}
!14923 = !DILocation(line: 0, scope: !14916, inlinedAt: !14919)
!14924 = !DILocation(line: 48, column: 9, scope: !14920, inlinedAt: !14921)
!14925 = !DILocation(line: 946, column: 2, scope: !14900)
!14926 = distinct !DISubprogram(name: "need_swap", scope: !2433, file: !2433, line: 953, type: !6962, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14927)
!14927 = !{!14928}
!14928 = !DILocalVariable(name: "new_thread", scope: !14926, file: !2433, line: 959, type: !2328)
!14929 = !DILocation(line: 962, column: 31, scope: !14926)
!14930 = !DILocation(line: 0, scope: !14926)
!14931 = !DILocation(line: 963, column: 23, scope: !14926)
!14932 = !DILocation(line: 963, column: 20, scope: !14926)
!14933 = !DILocation(line: 963, column: 2, scope: !14926)
!14934 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !13209, file: !13209, line: 181, type: !6177, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14935)
!14935 = !{!14936, !14937}
!14936 = !DILocalVariable(name: "key", arg: 1, scope: !14934, file: !13209, line: 181, type: !32)
!14937 = !DILocalVariable(name: "ret", scope: !14934, file: !13209, line: 183, type: !107)
!14938 = !DILocation(line: 0, scope: !14934)
!14939 = !DILocation(line: 185, column: 8, scope: !14934)
!14940 = !DILocation(line: 186, column: 2, scope: !14934)
!14941 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2433, file: !2433, line: 665, type: !14230, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14942)
!14942 = !{!14943, !14944, !14946}
!14943 = !DILocalVariable(name: "thread", arg: 1, scope: !14941, file: !2433, line: 665, type: !2328)
!14944 = !DILocalVariable(name: "__i", scope: !14945, file: !2433, line: 671, type: !14264)
!14945 = distinct !DILexicalBlock(scope: !14941, file: !2433, line: 671, column: 2)
!14946 = !DILocalVariable(name: "__key", scope: !14945, file: !2433, line: 671, type: !14264)
!14947 = !DILocation(line: 0, scope: !14941)
!14948 = !DILocation(line: 669, column: 8, scope: !14941)
!14949 = !DILocation(line: 0, scope: !14945)
!14950 = !DILocation(line: 0, scope: !14272, inlinedAt: !14951)
!14951 = distinct !DILocation(line: 671, column: 2, scope: !14945)
!14952 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !14953)
!14953 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !14951)
!14954 = !DILocation(line: 0, scope: !14281, inlinedAt: !14953)
!14955 = !DILocation(line: 672, column: 7, scope: !14956)
!14956 = distinct !DILexicalBlock(scope: !14957, file: !2433, line: 672, column: 7)
!14957 = distinct !DILexicalBlock(scope: !14958, file: !2433, line: 671, column: 26)
!14958 = distinct !DILexicalBlock(scope: !14945, file: !2433, line: 671, column: 2)
!14959 = !DILocation(line: 672, column: 7, scope: !14957)
!14960 = !DILocation(line: 0, scope: !14441, inlinedAt: !14961)
!14961 = distinct !DILocation(line: 673, column: 4, scope: !14962)
!14962 = distinct !DILexicalBlock(scope: !14956, file: !2433, line: 672, column: 35)
!14963 = !DILocation(line: 266, column: 15, scope: !14441, inlinedAt: !14961)
!14964 = !DILocation(line: 266, column: 28, scope: !14441, inlinedAt: !14961)
!14965 = !DILocation(line: 0, scope: !14449, inlinedAt: !14966)
!14966 = distinct !DILocation(line: 268, column: 3, scope: !14453, inlinedAt: !14961)
!14967 = !DILocation(line: 234, column: 2, scope: !14449, inlinedAt: !14966)
!14968 = !DILocation(line: 674, column: 3, scope: !14962)
!14969 = !DILocation(line: 675, column: 3, scope: !14957)
!14970 = !DILocation(line: 676, column: 26, scope: !14957)
!14971 = !DILocation(line: 676, column: 23, scope: !14957)
!14972 = !DILocation(line: 676, column: 3, scope: !14957)
!14973 = !DILocation(line: 0, scope: !14299, inlinedAt: !14974)
!14974 = distinct !DILocation(line: 671, column: 2, scope: !14958)
!14975 = !DILocation(line: 0, scope: !14307, inlinedAt: !14976)
!14976 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !14974)
!14977 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !14976)
!14978 = !DILocation(line: 679, column: 16, scope: !14979)
!14979 = distinct !DILexicalBlock(scope: !14941, file: !2433, line: 679, column: 6)
!14980 = !DILocation(line: 679, column: 13, scope: !14979)
!14981 = !DILocation(line: 679, column: 6, scope: !14941)
!14982 = !DILocation(line: 680, column: 3, scope: !14983)
!14983 = distinct !DILexicalBlock(scope: !14979, file: !2433, line: 679, column: 26)
!14984 = !DILocation(line: 681, column: 2, scope: !14983)
!14985 = !DILocation(line: 684, column: 1, scope: !14941)
!14986 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13497, file: !13497, line: 52, type: !14248, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14987)
!14987 = !{!14988}
!14988 = !DILocalVariable(name: "thread", arg: 1, scope: !14986, file: !13497, line: 52, type: !2328)
!14989 = !DILocation(line: 0, scope: !14986)
!14990 = !DILocation(line: 54, column: 39, scope: !14986)
!14991 = !DILocation(line: 54, column: 9, scope: !14986)
!14992 = !DILocation(line: 54, column: 2, scope: !14986)
!14993 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !13105, file: !13105, line: 141, type: !14230, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14994)
!14994 = !{!14995}
!14995 = !DILocalVariable(name: "thread", arg: 1, scope: !14993, file: !13105, line: 141, type: !2328)
!14996 = !DILocation(line: 0, scope: !14993)
!14997 = !DILocation(line: 143, column: 15, scope: !14993)
!14998 = !DILocation(line: 143, column: 28, scope: !14993)
!14999 = !DILocation(line: 146, column: 1, scope: !14993)
!15000 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !13105, file: !13105, line: 73, type: !3211, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !250)
!15001 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !15002)
!15002 = distinct !DILocation(line: 75, column: 30, scope: !15000)
!15003 = !DILocation(line: 0, scope: !14281, inlinedAt: !15002)
!15004 = !DILocation(line: 75, column: 9, scope: !15000)
!15005 = !DILocation(line: 76, column: 1, scope: !15000)
!15006 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2433, file: !2433, line: 977, type: !6258, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15007)
!15007 = !{!15008}
!15008 = !DILocalVariable(name: "key", arg: 1, scope: !15006, file: !2433, line: 977, type: !162)
!15009 = !DILocation(line: 0, scope: !15006)
!15010 = !DILocation(line: 979, column: 6, scope: !15011)
!15011 = distinct !DILexicalBlock(scope: !15006, file: !2433, line: 979, column: 6)
!15012 = !DILocation(line: 979, column: 6, scope: !15006)
!15013 = !DILocation(line: 980, column: 3, scope: !15014)
!15014 = distinct !DILexicalBlock(scope: !15011, file: !2433, line: 979, column: 20)
!15015 = !DILocation(line: 981, column: 2, scope: !15014)
!15016 = !DILocation(line: 0, scope: !14307, inlinedAt: !15017)
!15017 = distinct !DILocation(line: 982, column: 3, scope: !15018)
!15018 = distinct !DILexicalBlock(scope: !15011, file: !2433, line: 981, column: 9)
!15019 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !15017)
!15020 = !DILocation(line: 985, column: 1, scope: !15006)
!15021 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2433, file: !2433, line: 695, type: !14230, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15022)
!15022 = !{!15023, !15024}
!15023 = !DILocalVariable(name: "thread", arg: 1, scope: !15021, file: !2433, line: 695, type: !2328)
!15024 = !DILocalVariable(name: "key", scope: !15021, file: !2433, line: 699, type: !14264)
!15025 = !DILocation(line: 0, scope: !15021)
!15026 = !DILocation(line: 0, scope: !14272, inlinedAt: !15027)
!15027 = distinct !DILocation(line: 699, column: 25, scope: !15021)
!15028 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !15029)
!15029 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !15027)
!15030 = !DILocation(line: 0, scope: !14281, inlinedAt: !15029)
!15031 = !DILocation(line: 702, column: 7, scope: !15032)
!15032 = distinct !DILexicalBlock(scope: !15021, file: !2433, line: 702, column: 6)
!15033 = !DILocation(line: 702, column: 6, scope: !15021)
!15034 = !DILocation(line: 0, scope: !14299, inlinedAt: !15035)
!15035 = distinct !DILocation(line: 703, column: 3, scope: !15036)
!15036 = distinct !DILexicalBlock(scope: !15032, file: !2433, line: 702, column: 38)
!15037 = !DILocation(line: 0, scope: !14307, inlinedAt: !15038)
!15038 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !15035)
!15039 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !15038)
!15040 = !DILocation(line: 704, column: 3, scope: !15036)
!15041 = !DILocation(line: 707, column: 2, scope: !15021)
!15042 = !DILocation(line: 708, column: 2, scope: !15021)
!15043 = !DILocation(line: 710, column: 2, scope: !15021)
!15044 = !DILocation(line: 713, column: 1, scope: !15021)
!15045 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !13105, file: !13105, line: 96, type: !14390, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15046)
!15046 = !{!15047}
!15047 = !DILocalVariable(name: "thread", arg: 1, scope: !15045, file: !13105, line: 96, type: !2328)
!15048 = !DILocation(line: 0, scope: !15045)
!15049 = !DILocation(line: 98, column: 23, scope: !15045)
!15050 = !DILocation(line: 98, column: 36, scope: !15045)
!15051 = !DILocation(line: 98, column: 57, scope: !15045)
!15052 = !DILocation(line: 98, column: 2, scope: !15045)
!15053 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !13105, file: !13105, line: 148, type: !14230, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15054)
!15054 = !{!15055}
!15055 = !DILocalVariable(name: "thread", arg: 1, scope: !15053, file: !13105, line: 148, type: !2328)
!15056 = !DILocation(line: 0, scope: !15053)
!15057 = !DILocation(line: 150, column: 15, scope: !15053)
!15058 = !DILocation(line: 150, column: 28, scope: !15053)
!15059 = !DILocation(line: 153, column: 1, scope: !15053)
!15060 = distinct !DISubprogram(name: "z_pend_thread", scope: !2433, file: !2433, line: 770, type: !15061, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15067)
!15061 = !DISubroutineType(types: !15062)
!15062 = !{null, !2328, !2359, !15063}
!15063 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !15064)
!15064 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !15065)
!15065 = !{!15066}
!15066 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15064, file: !104, line: 66, baseType: !103, size: 64)
!15067 = !{!15068, !15069, !15070, !15071, !15073}
!15068 = !DILocalVariable(name: "thread", arg: 1, scope: !15060, file: !2433, line: 770, type: !2328)
!15069 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15060, file: !2433, line: 770, type: !2359)
!15070 = !DILocalVariable(name: "timeout", arg: 3, scope: !15060, file: !2433, line: 771, type: !15063)
!15071 = !DILocalVariable(name: "__i", scope: !15072, file: !2433, line: 774, type: !14264)
!15072 = distinct !DILexicalBlock(scope: !15060, file: !2433, line: 774, column: 2)
!15073 = !DILocalVariable(name: "__key", scope: !15072, file: !2433, line: 774, type: !14264)
!15074 = !DILocation(line: 0, scope: !15060)
!15075 = !DILocation(line: 0, scope: !15072)
!15076 = !DILocation(line: 0, scope: !14272, inlinedAt: !15077)
!15077 = distinct !DILocation(line: 774, column: 2, scope: !15072)
!15078 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !15079)
!15079 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !15077)
!15080 = !DILocation(line: 0, scope: !14281, inlinedAt: !15079)
!15081 = !DILocation(line: 775, column: 3, scope: !15082)
!15082 = distinct !DILexicalBlock(scope: !15083, file: !2433, line: 774, column: 26)
!15083 = distinct !DILexicalBlock(scope: !15072, file: !2433, line: 774, column: 2)
!15084 = !DILocation(line: 0, scope: !14299, inlinedAt: !15085)
!15085 = distinct !DILocation(line: 774, column: 2, scope: !15083)
!15086 = !DILocation(line: 0, scope: !14307, inlinedAt: !15087)
!15087 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !15085)
!15088 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !15087)
!15089 = !DILocation(line: 777, column: 1, scope: !15060)
!15090 = distinct !DISubprogram(name: "pend_locked", scope: !2433, file: !2433, line: 760, type: !15061, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15091)
!15091 = !{!15092, !15093, !15094}
!15092 = !DILocalVariable(name: "thread", arg: 1, scope: !15090, file: !2433, line: 760, type: !2328)
!15093 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15090, file: !2433, line: 760, type: !2359)
!15094 = !DILocalVariable(name: "timeout", arg: 3, scope: !15090, file: !2433, line: 761, type: !15063)
!15095 = !DILocation(line: 0, scope: !15090)
!15096 = !DILocation(line: 766, column: 2, scope: !15090)
!15097 = !DILocation(line: 767, column: 2, scope: !15090)
!15098 = !DILocation(line: 768, column: 1, scope: !15090)
!15099 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2433, file: !2433, line: 740, type: !15100, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15102)
!15100 = !DISubroutineType(types: !15101)
!15101 = !{null, !2328, !2359}
!15102 = !{!15103, !15104}
!15103 = !DILocalVariable(name: "thread", arg: 1, scope: !15099, file: !2433, line: 740, type: !2328)
!15104 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15099, file: !2433, line: 740, type: !2359)
!15105 = !DILocation(line: 0, scope: !15099)
!15106 = !DILocation(line: 742, column: 2, scope: !15099)
!15107 = !DILocation(line: 743, column: 2, scope: !15099)
!15108 = !DILocation(line: 747, column: 13, scope: !15109)
!15109 = distinct !DILexicalBlock(scope: !15099, file: !2433, line: 747, column: 6)
!15110 = !DILocation(line: 747, column: 6, scope: !15099)
!15111 = !DILocation(line: 748, column: 16, scope: !15112)
!15112 = distinct !DILexicalBlock(scope: !15109, file: !2433, line: 747, column: 22)
!15113 = !DILocation(line: 748, column: 26, scope: !15112)
!15114 = !DILocation(line: 749, column: 28, scope: !15112)
!15115 = !DILocation(line: 0, scope: !14472, inlinedAt: !15116)
!15116 = distinct !DILocation(line: 749, column: 3, scope: !15112)
!15117 = !DILocation(line: 188, column: 2, scope: !14482, inlinedAt: !15116)
!15118 = !DILocation(line: 188, column: 2, scope: !14484, inlinedAt: !15116)
!15119 = !DILocation(line: 0, scope: !14482, inlinedAt: !15116)
!15120 = !DILocation(line: 189, column: 7, scope: !14487, inlinedAt: !15116)
!15121 = !DILocation(line: 189, column: 35, scope: !14487, inlinedAt: !15116)
!15122 = !DILocation(line: 189, column: 7, scope: !14488, inlinedAt: !15116)
!15123 = !DILocation(line: 191, column: 21, scope: !14492, inlinedAt: !15116)
!15124 = !DILocation(line: 190, column: 4, scope: !14492, inlinedAt: !15116)
!15125 = !DILocation(line: 192, column: 4, scope: !14492, inlinedAt: !15116)
!15126 = distinct !{!15126, !15117, !15127}
!15127 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !15116)
!15128 = !DILocation(line: 196, column: 37, scope: !14472, inlinedAt: !15116)
!15129 = !DILocation(line: 196, column: 2, scope: !14472, inlinedAt: !15116)
!15130 = !DILocation(line: 197, column: 1, scope: !14472, inlinedAt: !15116)
!15131 = !DILocation(line: 751, column: 1, scope: !15099)
!15132 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2433, file: !2433, line: 753, type: !15133, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15135)
!15133 = !DISubroutineType(types: !15134)
!15134 = !{null, !2328, !15063}
!15135 = !{!15136, !15137}
!15136 = !DILocalVariable(name: "thread", arg: 1, scope: !15132, file: !2433, line: 753, type: !2328)
!15137 = !DILocalVariable(name: "timeout", arg: 2, scope: !15132, file: !2433, line: 753, type: !15063)
!15138 = !DILocation(line: 0, scope: !15132)
!15139 = !DILocation(line: 755, column: 7, scope: !15140)
!15140 = distinct !DILexicalBlock(scope: !15132, file: !2433, line: 755, column: 6)
!15141 = !DILocation(line: 755, column: 6, scope: !15132)
!15142 = !DILocation(line: 756, column: 3, scope: !15143)
!15143 = distinct !DILexicalBlock(scope: !15140, file: !2433, line: 755, column: 41)
!15144 = !DILocation(line: 757, column: 2, scope: !15143)
!15145 = !DILocation(line: 758, column: 1, scope: !15132)
!15146 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13497, file: !13497, line: 47, type: !15133, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15147)
!15147 = !{!15148, !15149}
!15148 = !DILocalVariable(name: "thread", arg: 1, scope: !15146, file: !13497, line: 47, type: !2328)
!15149 = !DILocalVariable(name: "ticks", arg: 2, scope: !15146, file: !13497, line: 47, type: !15063)
!15150 = !DILocation(line: 0, scope: !15146)
!15151 = !DILocation(line: 49, column: 30, scope: !15146)
!15152 = !DILocation(line: 49, column: 2, scope: !15146)
!15153 = !DILocation(line: 50, column: 1, scope: !15146)
!15154 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2433, file: !2433, line: 795, type: !2385, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15155)
!15155 = !{!15156, !15157, !15158, !15160, !15161}
!15156 = !DILocalVariable(name: "timeout", arg: 1, scope: !15154, file: !2433, line: 795, type: !2387)
!15157 = !DILocalVariable(name: "thread", scope: !15154, file: !2433, line: 797, type: !2328)
!15158 = !DILocalVariable(name: "__i", scope: !15159, file: !2433, line: 800, type: !14264)
!15159 = distinct !DILexicalBlock(scope: !15154, file: !2433, line: 800, column: 2)
!15160 = !DILocalVariable(name: "__key", scope: !15159, file: !2433, line: 800, type: !14264)
!15161 = !DILocalVariable(name: "killed", scope: !15162, file: !2433, line: 801, type: !136)
!15162 = distinct !DILexicalBlock(scope: !15163, file: !2433, line: 800, column: 26)
!15163 = distinct !DILexicalBlock(scope: !15159, file: !2433, line: 800, column: 2)
!15164 = !DILocation(line: 0, scope: !15154)
!15165 = !DILocation(line: 797, column: 28, scope: !15154)
!15166 = !DILocation(line: 0, scope: !15159)
!15167 = !DILocation(line: 0, scope: !14272, inlinedAt: !15168)
!15168 = distinct !DILocation(line: 800, column: 2, scope: !15159)
!15169 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !15170)
!15170 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !15168)
!15171 = !DILocation(line: 0, scope: !14281, inlinedAt: !15170)
!15172 = !DILocation(line: 801, column: 27, scope: !15162)
!15173 = !DILocation(line: 801, column: 32, scope: !15162)
!15174 = !DILocation(line: 801, column: 61, scope: !15162)
!15175 = !DILocation(line: 0, scope: !15162)
!15176 = !DILocation(line: 804, column: 7, scope: !15162)
!15177 = !DILocation(line: 805, column: 21, scope: !15178)
!15178 = distinct !DILexicalBlock(scope: !15179, file: !2433, line: 805, column: 8)
!15179 = distinct !DILexicalBlock(scope: !15180, file: !2433, line: 804, column: 16)
!15180 = distinct !DILexicalBlock(scope: !15162, file: !2433, line: 804, column: 7)
!15181 = !DILocation(line: 805, column: 31, scope: !15178)
!15182 = !DILocation(line: 805, column: 8, scope: !15179)
!15183 = !DILocation(line: 806, column: 5, scope: !15184)
!15184 = distinct !DILexicalBlock(scope: !15178, file: !2433, line: 805, column: 40)
!15185 = !DILocation(line: 807, column: 4, scope: !15184)
!15186 = !DILocation(line: 808, column: 4, scope: !15179)
!15187 = !DILocation(line: 809, column: 4, scope: !15179)
!15188 = !DILocation(line: 810, column: 4, scope: !15179)
!15189 = !DILocation(line: 811, column: 3, scope: !15179)
!15190 = !DILocation(line: 0, scope: !14299, inlinedAt: !15191)
!15191 = distinct !DILocation(line: 800, column: 2, scope: !15163)
!15192 = !DILocation(line: 0, scope: !14307, inlinedAt: !15193)
!15193 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !15191)
!15194 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !15193)
!15195 = !DILocation(line: 813, column: 1, scope: !15154)
!15196 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2433, file: !2433, line: 779, type: !14230, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15197)
!15197 = !{!15198}
!15198 = !DILocalVariable(name: "thread", arg: 1, scope: !15196, file: !2433, line: 779, type: !2328)
!15199 = !DILocation(line: 0, scope: !15196)
!15200 = !DILocation(line: 781, column: 2, scope: !15196)
!15201 = !DILocation(line: 782, column: 2, scope: !15196)
!15202 = !DILocation(line: 783, column: 15, scope: !15196)
!15203 = !DILocation(line: 783, column: 25, scope: !15196)
!15204 = !DILocation(line: 784, column: 1, scope: !15196)
!15205 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !13105, file: !13105, line: 165, type: !14230, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15206)
!15206 = !{!15207}
!15207 = !DILocalVariable(name: "thread", arg: 1, scope: !15205, file: !13105, line: 165, type: !2328)
!15208 = !DILocation(line: 0, scope: !15205)
!15209 = !DILocation(line: 167, column: 15, scope: !15205)
!15210 = !DILocation(line: 167, column: 28, scope: !15205)
!15211 = !DILocation(line: 168, column: 1, scope: !15205)
!15212 = distinct !DISubprogram(name: "unready_thread", scope: !2433, file: !2433, line: 731, type: !14230, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15213)
!15213 = !{!15214}
!15214 = !DILocalVariable(name: "thread", arg: 1, scope: !15212, file: !2433, line: 731, type: !2328)
!15215 = !DILocation(line: 0, scope: !15212)
!15216 = !DILocation(line: 733, column: 6, scope: !15217)
!15217 = distinct !DILexicalBlock(scope: !15212, file: !2433, line: 733, column: 6)
!15218 = !DILocation(line: 733, column: 6, scope: !15212)
!15219 = !DILocation(line: 0, scope: !14441, inlinedAt: !15220)
!15220 = distinct !DILocation(line: 734, column: 3, scope: !15221)
!15221 = distinct !DILexicalBlock(scope: !15217, file: !2433, line: 733, column: 34)
!15222 = !DILocation(line: 266, column: 15, scope: !14441, inlinedAt: !15220)
!15223 = !DILocation(line: 266, column: 28, scope: !14441, inlinedAt: !15220)
!15224 = !DILocation(line: 0, scope: !14449, inlinedAt: !15225)
!15225 = distinct !DILocation(line: 268, column: 3, scope: !14453, inlinedAt: !15220)
!15226 = !DILocation(line: 234, column: 2, scope: !14449, inlinedAt: !15225)
!15227 = !DILocation(line: 735, column: 2, scope: !15221)
!15228 = !DILocation(line: 736, column: 25, scope: !15212)
!15229 = !DILocation(line: 736, column: 22, scope: !15212)
!15230 = !DILocation(line: 736, column: 2, scope: !15212)
!15231 = !DILocation(line: 737, column: 1, scope: !15212)
!15232 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !13105, file: !13105, line: 160, type: !14230, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15233)
!15233 = !{!15234}
!15234 = !DILocalVariable(name: "thread", arg: 1, scope: !15232, file: !13105, line: 160, type: !2328)
!15235 = !DILocation(line: 0, scope: !15232)
!15236 = !DILocation(line: 162, column: 15, scope: !15232)
!15237 = !DILocation(line: 162, column: 28, scope: !15232)
!15238 = !DILocation(line: 163, column: 1, scope: !15232)
!15239 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2433, file: !2433, line: 786, type: !14230, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15240)
!15240 = !{!15241, !15242, !15244}
!15241 = !DILocalVariable(name: "thread", arg: 1, scope: !15239, file: !2433, line: 786, type: !2328)
!15242 = !DILocalVariable(name: "__i", scope: !15243, file: !2433, line: 788, type: !14264)
!15243 = distinct !DILexicalBlock(scope: !15239, file: !2433, line: 788, column: 2)
!15244 = !DILocalVariable(name: "__key", scope: !15243, file: !2433, line: 788, type: !14264)
!15245 = !DILocation(line: 0, scope: !15239)
!15246 = !DILocation(line: 0, scope: !15243)
!15247 = !DILocation(line: 0, scope: !14272, inlinedAt: !15248)
!15248 = distinct !DILocation(line: 788, column: 2, scope: !15243)
!15249 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !15250)
!15250 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !15248)
!15251 = !DILocation(line: 0, scope: !14281, inlinedAt: !15250)
!15252 = !DILocation(line: 789, column: 3, scope: !15253)
!15253 = distinct !DILexicalBlock(scope: !15254, file: !2433, line: 788, column: 26)
!15254 = distinct !DILexicalBlock(scope: !15243, file: !2433, line: 788, column: 2)
!15255 = !DILocation(line: 0, scope: !14299, inlinedAt: !15256)
!15256 = distinct !DILocation(line: 788, column: 2, scope: !15254)
!15257 = !DILocation(line: 0, scope: !14307, inlinedAt: !15258)
!15258 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !15256)
!15259 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !15258)
!15260 = !DILocation(line: 791, column: 1, scope: !15239)
!15261 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2433, file: !2433, line: 816, type: !15262, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15264)
!15262 = !DISubroutineType(types: !15263)
!15263 = !{!107, !162, !2359, !15063}
!15264 = !{!15265, !15266, !15267, !15268, !15269, !15271}
!15265 = !DILocalVariable(name: "key", arg: 1, scope: !15261, file: !2433, line: 816, type: !162)
!15266 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15261, file: !2433, line: 816, type: !2359)
!15267 = !DILocalVariable(name: "timeout", arg: 3, scope: !15261, file: !2433, line: 816, type: !15063)
!15268 = !DILocalVariable(name: "ret", scope: !15261, file: !2433, line: 828, type: !107)
!15269 = !DILocalVariable(name: "__i", scope: !15270, file: !2433, line: 829, type: !14264)
!15270 = distinct !DILexicalBlock(scope: !15261, file: !2433, line: 829, column: 2)
!15271 = !DILocalVariable(name: "__key", scope: !15270, file: !2433, line: 829, type: !14264)
!15272 = !DILocation(line: 0, scope: !15261)
!15273 = !DILocation(line: 823, column: 14, scope: !15261)
!15274 = !DILocation(line: 823, column: 2, scope: !15261)
!15275 = !DILocation(line: 826, column: 20, scope: !15261)
!15276 = !DILocation(line: 826, column: 18, scope: !15261)
!15277 = !DILocation(line: 828, column: 12, scope: !15261)
!15278 = !DILocation(line: 0, scope: !15270)
!15279 = !DILocation(line: 0, scope: !14272, inlinedAt: !15280)
!15280 = distinct !DILocation(line: 829, column: 2, scope: !15270)
!15281 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !15282)
!15282 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !15280)
!15283 = !DILocation(line: 0, scope: !14281, inlinedAt: !15282)
!15284 = !DILocation(line: 830, column: 7, scope: !15285)
!15285 = distinct !DILexicalBlock(scope: !15286, file: !2433, line: 830, column: 7)
!15286 = distinct !DILexicalBlock(scope: !15287, file: !2433, line: 829, column: 26)
!15287 = distinct !DILexicalBlock(scope: !15270, file: !2433, line: 829, column: 2)
!15288 = !DILocation(line: 830, column: 26, scope: !15285)
!15289 = !DILocation(line: 830, column: 23, scope: !15285)
!15290 = !DILocation(line: 830, column: 7, scope: !15286)
!15291 = !DILocation(line: 831, column: 20, scope: !15292)
!15292 = distinct !DILexicalBlock(scope: !15285, file: !2433, line: 830, column: 36)
!15293 = !DILocation(line: 832, column: 3, scope: !15292)
!15294 = !DILocation(line: 0, scope: !14299, inlinedAt: !15295)
!15295 = distinct !DILocation(line: 829, column: 2, scope: !15287)
!15296 = !DILocation(line: 0, scope: !14307, inlinedAt: !15297)
!15297 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !15295)
!15298 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !15297)
!15299 = !DILocation(line: 834, column: 2, scope: !15261)
!15300 = distinct !DISubprogram(name: "z_pend_curr", scope: !2433, file: !2433, line: 840, type: !15301, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15303)
!15301 = !DISubroutineType(types: !15302)
!15302 = !{!107, !14275, !14264, !2359, !15063}
!15303 = !{!15304, !15305, !15306, !15307}
!15304 = !DILocalVariable(name: "lock", arg: 1, scope: !15300, file: !2433, line: 840, type: !14275)
!15305 = !DILocalVariable(name: "key", arg: 2, scope: !15300, file: !2433, line: 840, type: !14264)
!15306 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15300, file: !2433, line: 841, type: !2359)
!15307 = !DILocalVariable(name: "timeout", arg: 4, scope: !15300, file: !2433, line: 841, type: !15063)
!15308 = !DILocation(line: 0, scope: !15300)
!15309 = !DILocation(line: 844, column: 20, scope: !15300)
!15310 = !DILocation(line: 844, column: 18, scope: !15300)
!15311 = !DILocation(line: 0, scope: !14272, inlinedAt: !15312)
!15312 = distinct !DILocation(line: 856, column: 9, scope: !15300)
!15313 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !15314)
!15314 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !15312)
!15315 = !DILocation(line: 0, scope: !14281, inlinedAt: !15314)
!15316 = !DILocation(line: 857, column: 14, scope: !15300)
!15317 = !DILocation(line: 857, column: 2, scope: !15300)
!15318 = !DILocation(line: 0, scope: !14883, inlinedAt: !15319)
!15319 = distinct !DILocation(line: 859, column: 9, scope: !15300)
!15320 = !DILocation(line: 196, column: 9, scope: !14883, inlinedAt: !15319)
!15321 = !DILocation(line: 859, column: 2, scope: !15300)
!15322 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2433, file: !2433, line: 862, type: !15323, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15325)
!15323 = !DISubroutineType(types: !15324)
!15324 = !{!2328, !2359}
!15325 = !{!15326, !15327, !15328, !15330}
!15326 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15322, file: !2433, line: 862, type: !2359)
!15327 = !DILocalVariable(name: "thread", scope: !15322, file: !2433, line: 864, type: !2328)
!15328 = !DILocalVariable(name: "__i", scope: !15329, file: !2433, line: 866, type: !14264)
!15329 = distinct !DILexicalBlock(scope: !15322, file: !2433, line: 866, column: 2)
!15330 = !DILocalVariable(name: "__key", scope: !15329, file: !2433, line: 866, type: !14264)
!15331 = !DILocation(line: 0, scope: !15322)
!15332 = !DILocation(line: 0, scope: !15329)
!15333 = !DILocation(line: 0, scope: !14272, inlinedAt: !15334)
!15334 = distinct !DILocation(line: 866, column: 2, scope: !15329)
!15335 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !15336)
!15336 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !15334)
!15337 = !DILocation(line: 0, scope: !14281, inlinedAt: !15336)
!15338 = !DILocation(line: 867, column: 12, scope: !15339)
!15339 = distinct !DILexicalBlock(scope: !15340, file: !2433, line: 866, column: 26)
!15340 = distinct !DILexicalBlock(scope: !15329, file: !2433, line: 866, column: 2)
!15341 = !DILocation(line: 869, column: 14, scope: !15342)
!15342 = distinct !DILexicalBlock(scope: !15339, file: !2433, line: 869, column: 7)
!15343 = !DILocation(line: 869, column: 7, scope: !15339)
!15344 = !DILocation(line: 870, column: 4, scope: !15345)
!15345 = distinct !DILexicalBlock(scope: !15342, file: !2433, line: 869, column: 23)
!15346 = !DILocation(line: 871, column: 3, scope: !15345)
!15347 = !DILocation(line: 0, scope: !14299, inlinedAt: !15348)
!15348 = distinct !DILocation(line: 866, column: 2, scope: !15340)
!15349 = !DILocation(line: 0, scope: !14307, inlinedAt: !15350)
!15350 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !15348)
!15351 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !15350)
!15352 = !DILocation(line: 874, column: 2, scope: !15322)
!15353 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2433, file: !2433, line: 877, type: !15323, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15354)
!15354 = !{!15355, !15356, !15357, !15359}
!15355 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15353, file: !2433, line: 877, type: !2359)
!15356 = !DILocalVariable(name: "thread", scope: !15353, file: !2433, line: 879, type: !2328)
!15357 = !DILocalVariable(name: "__i", scope: !15358, file: !2433, line: 881, type: !14264)
!15358 = distinct !DILexicalBlock(scope: !15353, file: !2433, line: 881, column: 2)
!15359 = !DILocalVariable(name: "__key", scope: !15358, file: !2433, line: 881, type: !14264)
!15360 = !DILocation(line: 0, scope: !15353)
!15361 = !DILocation(line: 0, scope: !15358)
!15362 = !DILocation(line: 0, scope: !14272, inlinedAt: !15363)
!15363 = distinct !DILocation(line: 881, column: 2, scope: !15358)
!15364 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !15365)
!15365 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !15363)
!15366 = !DILocation(line: 0, scope: !14281, inlinedAt: !15365)
!15367 = !DILocation(line: 882, column: 12, scope: !15368)
!15368 = distinct !DILexicalBlock(scope: !15369, file: !2433, line: 881, column: 26)
!15369 = distinct !DILexicalBlock(scope: !15358, file: !2433, line: 881, column: 2)
!15370 = !DILocation(line: 884, column: 14, scope: !15371)
!15371 = distinct !DILexicalBlock(scope: !15368, file: !2433, line: 884, column: 7)
!15372 = !DILocation(line: 884, column: 7, scope: !15368)
!15373 = !DILocation(line: 885, column: 4, scope: !15374)
!15374 = distinct !DILexicalBlock(scope: !15371, file: !2433, line: 884, column: 23)
!15375 = !DILocation(line: 886, column: 10, scope: !15374)
!15376 = !DILocation(line: 887, column: 3, scope: !15374)
!15377 = !DILocation(line: 0, scope: !14299, inlinedAt: !15378)
!15378 = distinct !DILocation(line: 881, column: 2, scope: !15369)
!15379 = !DILocation(line: 0, scope: !14307, inlinedAt: !15380)
!15380 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !15378)
!15381 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !15380)
!15382 = !DILocation(line: 890, column: 2, scope: !15353)
!15383 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2433, file: !2433, line: 893, type: !14230, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15384)
!15384 = !{!15385}
!15385 = !DILocalVariable(name: "thread", arg: 1, scope: !15383, file: !2433, line: 893, type: !2328)
!15386 = !DILocation(line: 0, scope: !15383)
!15387 = !DILocation(line: 0, scope: !15239, inlinedAt: !15388)
!15388 = distinct !DILocation(line: 895, column: 2, scope: !15383)
!15389 = !DILocation(line: 0, scope: !15243, inlinedAt: !15388)
!15390 = !DILocation(line: 0, scope: !14272, inlinedAt: !15391)
!15391 = distinct !DILocation(line: 788, column: 2, scope: !15243, inlinedAt: !15388)
!15392 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !15393)
!15393 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !15391)
!15394 = !DILocation(line: 0, scope: !14281, inlinedAt: !15393)
!15395 = !DILocation(line: 789, column: 3, scope: !15253, inlinedAt: !15388)
!15396 = !DILocation(line: 0, scope: !14299, inlinedAt: !15397)
!15397 = distinct !DILocation(line: 788, column: 2, scope: !15254, inlinedAt: !15388)
!15398 = !DILocation(line: 0, scope: !14307, inlinedAt: !15399)
!15399 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !15397)
!15400 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !15399)
!15401 = !DILocation(line: 896, column: 8, scope: !15383)
!15402 = !DILocation(line: 897, column: 1, scope: !15383)
!15403 = distinct !DISubprogram(name: "z_set_prio", scope: !2433, file: !2433, line: 902, type: !14592, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15404)
!15404 = !{!15405, !15406, !15407, !15408, !15410}
!15405 = !DILocalVariable(name: "thread", arg: 1, scope: !15403, file: !2433, line: 902, type: !2328)
!15406 = !DILocalVariable(name: "prio", arg: 2, scope: !15403, file: !2433, line: 902, type: !107)
!15407 = !DILocalVariable(name: "need_sched", scope: !15403, file: !2433, line: 904, type: !136)
!15408 = !DILocalVariable(name: "__i", scope: !15409, file: !2433, line: 906, type: !14264)
!15409 = distinct !DILexicalBlock(scope: !15403, file: !2433, line: 906, column: 2)
!15410 = !DILocalVariable(name: "__key", scope: !15409, file: !2433, line: 906, type: !14264)
!15411 = !DILocation(line: 0, scope: !15403)
!15412 = !DILocation(line: 0, scope: !15409)
!15413 = !DILocation(line: 0, scope: !14272, inlinedAt: !15414)
!15414 = distinct !DILocation(line: 906, column: 2, scope: !15409)
!15415 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !15416)
!15416 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !15414)
!15417 = !DILocation(line: 0, scope: !14281, inlinedAt: !15416)
!15418 = !DILocation(line: 907, column: 16, scope: !15419)
!15419 = distinct !DILexicalBlock(scope: !15420, file: !2433, line: 906, column: 26)
!15420 = distinct !DILexicalBlock(scope: !15409, file: !2433, line: 906, column: 2)
!15421 = !DILocation(line: 909, column: 7, scope: !15419)
!15422 = !DILocation(line: 0, scope: !14441, inlinedAt: !15423)
!15423 = distinct !DILocation(line: 912, column: 5, scope: !15424)
!15424 = distinct !DILexicalBlock(scope: !15425, file: !2433, line: 911, column: 63)
!15425 = distinct !DILexicalBlock(scope: !15426, file: !2433, line: 911, column: 8)
!15426 = distinct !DILexicalBlock(scope: !15427, file: !2433, line: 909, column: 19)
!15427 = distinct !DILexicalBlock(scope: !15419, file: !2433, line: 909, column: 7)
!15428 = !DILocation(line: 266, column: 28, scope: !14441, inlinedAt: !15423)
!15429 = !DILocation(line: 0, scope: !14449, inlinedAt: !15430)
!15430 = distinct !DILocation(line: 268, column: 3, scope: !14453, inlinedAt: !15423)
!15431 = !DILocation(line: 234, column: 2, scope: !14449, inlinedAt: !15430)
!15432 = !DILocation(line: 913, column: 23, scope: !15424)
!15433 = !DILocation(line: 0, scope: !14458, inlinedAt: !15434)
!15434 = distinct !DILocation(line: 914, column: 5, scope: !15424)
!15435 = !DILocation(line: 252, column: 28, scope: !14458, inlinedAt: !15434)
!15436 = !DILocation(line: 0, scope: !14465, inlinedAt: !15437)
!15437 = distinct !DILocation(line: 254, column: 3, scope: !14469, inlinedAt: !15434)
!15438 = !DILocation(line: 0, scope: !14472, inlinedAt: !15439)
!15439 = distinct !DILocation(line: 229, column: 2, scope: !14465, inlinedAt: !15437)
!15440 = !DILocation(line: 188, column: 2, scope: !14482, inlinedAt: !15439)
!15441 = !DILocation(line: 188, column: 2, scope: !14484, inlinedAt: !15439)
!15442 = !DILocation(line: 0, scope: !14482, inlinedAt: !15439)
!15443 = !DILocation(line: 189, column: 7, scope: !14487, inlinedAt: !15439)
!15444 = !DILocation(line: 189, column: 35, scope: !14487, inlinedAt: !15439)
!15445 = !DILocation(line: 189, column: 7, scope: !14488, inlinedAt: !15439)
!15446 = !DILocation(line: 190, column: 4, scope: !14492, inlinedAt: !15439)
!15447 = !DILocation(line: 192, column: 4, scope: !14492, inlinedAt: !15439)
!15448 = distinct !{!15448, !15440, !15449}
!15449 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !15439)
!15450 = !DILocation(line: 196, column: 2, scope: !14472, inlinedAt: !15439)
!15451 = !DILocation(line: 197, column: 1, scope: !14472, inlinedAt: !15439)
!15452 = !DILocation(line: 918, column: 4, scope: !15426)
!15453 = !DILocation(line: 919, column: 3, scope: !15426)
!15454 = !DILocation(line: 920, column: 22, scope: !15455)
!15455 = distinct !DILexicalBlock(scope: !15427, file: !2433, line: 919, column: 10)
!15456 = !DILocation(line: 0, scope: !14299, inlinedAt: !15457)
!15457 = distinct !DILocation(line: 906, column: 2, scope: !15420)
!15458 = !DILocation(line: 0, scope: !14307, inlinedAt: !15459)
!15459 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !15457)
!15460 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !15459)
!15461 = !DILocation(line: 926, column: 2, scope: !15403)
!15462 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2433, file: !2433, line: 929, type: !15463, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15465)
!15463 = !DISubroutineType(types: !15464)
!15464 = !{null, !2328, !107}
!15465 = !{!15466, !15467, !15468}
!15466 = !DILocalVariable(name: "thread", arg: 1, scope: !15462, file: !2433, line: 929, type: !2328)
!15467 = !DILocalVariable(name: "prio", arg: 2, scope: !15462, file: !2433, line: 929, type: !107)
!15468 = !DILocalVariable(name: "need_sched", scope: !15462, file: !2433, line: 931, type: !136)
!15469 = !DILocation(line: 0, scope: !15462)
!15470 = !DILocation(line: 931, column: 20, scope: !15462)
!15471 = !DILocation(line: 935, column: 17, scope: !15472)
!15472 = distinct !DILexicalBlock(scope: !15462, file: !2433, line: 935, column: 6)
!15473 = !DILocation(line: 935, column: 20, scope: !15472)
!15474 = !DILocation(line: 935, column: 35, scope: !15472)
!15475 = !DILocation(line: 935, column: 48, scope: !15472)
!15476 = !DILocation(line: 935, column: 6, scope: !15462)
!15477 = !DILocation(line: 936, column: 3, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15472, file: !2433, line: 935, column: 55)
!15479 = !DILocation(line: 937, column: 2, scope: !15478)
!15480 = !DILocation(line: 938, column: 1, scope: !15462)
!15481 = distinct !DISubprogram(name: "k_sched_lock", scope: !2433, file: !2433, line: 987, type: !3211, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15482)
!15482 = !{!15483, !15485}
!15483 = !DILocalVariable(name: "__i", scope: !15484, file: !2433, line: 989, type: !14264)
!15484 = distinct !DILexicalBlock(scope: !15481, file: !2433, line: 989, column: 2)
!15485 = !DILocalVariable(name: "__key", scope: !15484, file: !2433, line: 989, type: !14264)
!15486 = !DILocation(line: 0, scope: !15484)
!15487 = !DILocation(line: 0, scope: !14272, inlinedAt: !15488)
!15488 = distinct !DILocation(line: 989, column: 2, scope: !15484)
!15489 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !15490)
!15490 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !15488)
!15491 = !DILocation(line: 0, scope: !14281, inlinedAt: !15490)
!15492 = !DILocation(line: 992, column: 3, scope: !15493)
!15493 = distinct !DILexicalBlock(scope: !15494, file: !2433, line: 989, column: 26)
!15494 = distinct !DILexicalBlock(scope: !15484, file: !2433, line: 989, column: 2)
!15495 = !DILocation(line: 0, scope: !14299, inlinedAt: !15496)
!15496 = distinct !DILocation(line: 989, column: 2, scope: !15494)
!15497 = !DILocation(line: 0, scope: !14307, inlinedAt: !15498)
!15498 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !15496)
!15499 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !15498)
!15500 = !DILocation(line: 994, column: 1, scope: !15481)
!15501 = distinct !DISubprogram(name: "z_sched_lock", scope: !13105, file: !13105, line: 251, type: !3211, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !250)
!15502 = !DILocation(line: 256, column: 4, scope: !15501)
!15503 = !DILocation(line: 256, column: 19, scope: !15501)
!15504 = !DILocation(line: 256, column: 2, scope: !15501)
!15505 = !DILocation(line: 258, column: 2, scope: !15506)
!15506 = distinct !DILexicalBlock(scope: !15501, file: !13105, line: 258, column: 2)
!15507 = !{i64 2155185840}
!15508 = !DILocation(line: 259, column: 1, scope: !15501)
!15509 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2433, file: !2433, line: 996, type: !3211, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15510)
!15510 = !{!15511, !15513}
!15511 = !DILocalVariable(name: "__i", scope: !15512, file: !2433, line: 998, type: !14264)
!15512 = distinct !DILexicalBlock(scope: !15509, file: !2433, line: 998, column: 2)
!15513 = !DILocalVariable(name: "__key", scope: !15512, file: !2433, line: 998, type: !14264)
!15514 = !DILocation(line: 0, scope: !15512)
!15515 = !DILocation(line: 0, scope: !14272, inlinedAt: !15516)
!15516 = distinct !DILocation(line: 998, column: 2, scope: !15512)
!15517 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !15518)
!15518 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !15516)
!15519 = !DILocation(line: 0, scope: !14281, inlinedAt: !15518)
!15520 = !DILocation(line: 1002, column: 5, scope: !15521)
!15521 = distinct !DILexicalBlock(scope: !15522, file: !2433, line: 998, column: 26)
!15522 = distinct !DILexicalBlock(scope: !15512, file: !2433, line: 998, column: 2)
!15523 = !DILocation(line: 1002, column: 20, scope: !15521)
!15524 = !DILocation(line: 1002, column: 3, scope: !15521)
!15525 = !DILocation(line: 1003, column: 3, scope: !15521)
!15526 = !DILocation(line: 0, scope: !14299, inlinedAt: !15527)
!15527 = distinct !DILocation(line: 998, column: 2, scope: !15522)
!15528 = !DILocation(line: 0, scope: !14307, inlinedAt: !15529)
!15529 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !15527)
!15530 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !15529)
!15531 = !DILocation(line: 1011, column: 2, scope: !15509)
!15532 = !DILocation(line: 1012, column: 1, scope: !15509)
!15533 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2433, file: !2433, line: 1014, type: !14580, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !250)
!15534 = !DILocation(line: 1028, column: 25, scope: !15533)
!15535 = !DILocation(line: 1028, column: 2, scope: !15533)
!15536 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2433, file: !2433, line: 1155, type: !15537, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15539)
!15537 = !DISubroutineType(types: !15538)
!15538 = !{!136, !2357, !2357}
!15539 = !{!15540, !15541, !15542, !15543, !15544}
!15540 = !DILocalVariable(name: "a", arg: 1, scope: !15536, file: !2433, line: 1155, type: !2357)
!15541 = !DILocalVariable(name: "b", arg: 2, scope: !15536, file: !2433, line: 1155, type: !2357)
!15542 = !DILocalVariable(name: "thread_a", scope: !15536, file: !2433, line: 1157, type: !2328)
!15543 = !DILocalVariable(name: "thread_b", scope: !15536, file: !2433, line: 1157, type: !2328)
!15544 = !DILocalVariable(name: "cmp", scope: !15536, file: !2433, line: 1158, type: !736)
!15545 = !DILocation(line: 0, scope: !15536)
!15546 = !DILocation(line: 1160, column: 13, scope: !15536)
!15547 = !DILocation(line: 1161, column: 13, scope: !15536)
!15548 = !DILocation(line: 1163, column: 8, scope: !15536)
!15549 = !DILocation(line: 1165, column: 10, scope: !15550)
!15550 = distinct !DILexicalBlock(scope: !15536, file: !2433, line: 1165, column: 6)
!15551 = !DILocation(line: 1165, column: 6, scope: !15536)
!15552 = !DILocation(line: 1167, column: 17, scope: !15553)
!15553 = distinct !DILexicalBlock(scope: !15550, file: !2433, line: 1167, column: 13)
!15554 = !DILocation(line: 1167, column: 13, scope: !15550)
!15555 = !DILocation(line: 1170, column: 25, scope: !15556)
!15556 = distinct !DILexicalBlock(scope: !15553, file: !2433, line: 1169, column: 9)
!15557 = !DILocation(line: 1170, column: 52, scope: !15556)
!15558 = !DILocation(line: 1170, column: 35, scope: !15556)
!15559 = !DILocation(line: 1170, column: 3, scope: !15556)
!15560 = !DILocation(line: 0, scope: !15550)
!15561 = !DILocation(line: 1173, column: 1, scope: !15536)
!15562 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2433, file: !2433, line: 1175, type: !15563, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15578)
!15563 = !DISubroutineType(types: !15564)
!15564 = !{null, !15565, !2328}
!15565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15566, size: 32)
!15566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15567, line: 37, size: 128, elements: !15568)
!15567 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15568 = !{!15569, !15577}
!15569 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15566, file: !15567, line: 38, baseType: !15570, size: 96)
!15570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !384, line: 83, size: 96, elements: !15571)
!15571 = !{!15572, !15573, !15576}
!15572 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15570, file: !384, line: 84, baseType: !2357, size: 32)
!15573 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15570, file: !384, line: 85, baseType: !15574, size: 32, offset: 32)
!15574 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !384, line: 81, baseType: !15575)
!15575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15537, size: 32)
!15576 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15570, file: !384, line: 86, baseType: !107, size: 32, offset: 64)
!15577 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15566, file: !15567, line: 39, baseType: !107, size: 32, offset: 96)
!15578 = !{!15579, !15580, !15581, !15582, !15591}
!15579 = !DILocalVariable(name: "pq", arg: 1, scope: !15562, file: !2433, line: 1175, type: !15565)
!15580 = !DILocalVariable(name: "thread", arg: 2, scope: !15562, file: !2433, line: 1175, type: !2328)
!15581 = !DILocalVariable(name: "t", scope: !15562, file: !2433, line: 1177, type: !2328)
!15582 = !DILocalVariable(name: "__f", scope: !15583, file: !2433, line: 1190, type: !15586)
!15583 = distinct !DILexicalBlock(scope: !15584, file: !2433, line: 1190, column: 3)
!15584 = distinct !DILexicalBlock(scope: !15585, file: !2433, line: 1189, column: 27)
!15585 = distinct !DILexicalBlock(scope: !15562, file: !2433, line: 1189, column: 6)
!15586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !384, line: 155, size: 96, elements: !15587)
!15587 = !{!15588, !15589, !15590}
!15588 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15586, file: !384, line: 156, baseType: !2428, size: 32)
!15589 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15586, file: !384, line: 157, baseType: !182, size: 32, offset: 32)
!15590 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15586, file: !384, line: 158, baseType: !736, size: 32, offset: 64)
!15591 = !DILocalVariable(name: "n", scope: !15592, file: !2433, line: 1190, type: !2357)
!15592 = distinct !DILexicalBlock(scope: !15593, file: !2433, line: 1190, column: 3)
!15593 = distinct !DILexicalBlock(scope: !15583, file: !2433, line: 1190, column: 3)
!15594 = !DILocation(line: 0, scope: !15562)
!15595 = !DILocation(line: 1181, column: 31, scope: !15562)
!15596 = !DILocation(line: 1181, column: 45, scope: !15562)
!15597 = !DILocation(line: 1181, column: 15, scope: !15562)
!15598 = !DILocation(line: 1181, column: 25, scope: !15562)
!15599 = !DILocation(line: 1189, column: 11, scope: !15585)
!15600 = !DILocation(line: 1189, column: 7, scope: !15585)
!15601 = !DILocation(line: 1189, column: 6, scope: !15562)
!15602 = !DILocation(line: 1190, column: 3, scope: !15583)
!15603 = !DILocation(line: 1190, column: 3, scope: !15592)
!15604 = !DILocation(line: 0, scope: !15592)
!15605 = !DILocation(line: 1190, column: 3, scope: !15593)
!15606 = !DILocation(line: 1193, column: 2, scope: !15584)
!15607 = !DILocation(line: 1191, column: 42, scope: !15608)
!15608 = distinct !DILexicalBlock(scope: !15593, file: !2433, line: 1190, column: 54)
!15609 = !DILocation(line: 1191, column: 12, scope: !15608)
!15610 = !DILocation(line: 1191, column: 22, scope: !15608)
!15611 = distinct !{!15611, !15602, !15612}
!15612 = !DILocation(line: 1192, column: 3, scope: !15583)
!15613 = !DILocation(line: 1195, column: 17, scope: !15562)
!15614 = !DILocation(line: 1195, column: 37, scope: !15562)
!15615 = !DILocation(line: 1195, column: 2, scope: !15562)
!15616 = !DILocation(line: 1196, column: 1, scope: !15562)
!15617 = !DISubprogram(name: "z_rb_foreach_next", scope: !384, file: !384, line: 176, type: !15618, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!15618 = !DISubroutineType(types: !15619)
!15619 = !{!2357, !15620, !15621}
!15620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15570, size: 32)
!15621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15586, size: 32)
!15622 = !DISubprogram(name: "rb_insert", scope: !384, file: !384, line: 105, type: !15623, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!15623 = !DISubroutineType(types: !15624)
!15624 = !{null, !15620, !2357}
!15625 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2433, file: !2433, line: 1198, type: !15563, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15626)
!15626 = !{!15627, !15628}
!15627 = !DILocalVariable(name: "pq", arg: 1, scope: !15625, file: !2433, line: 1198, type: !15565)
!15628 = !DILocalVariable(name: "thread", arg: 2, scope: !15625, file: !2433, line: 1198, type: !2328)
!15629 = !DILocation(line: 0, scope: !15625)
!15630 = !DILocation(line: 1202, column: 17, scope: !15625)
!15631 = !DILocation(line: 1202, column: 37, scope: !15625)
!15632 = !DILocation(line: 1202, column: 2, scope: !15625)
!15633 = !DILocation(line: 1204, column: 16, scope: !15634)
!15634 = distinct !DILexicalBlock(scope: !15625, file: !2433, line: 1204, column: 6)
!15635 = !DILocation(line: 1204, column: 7, scope: !15634)
!15636 = !DILocation(line: 1204, column: 6, scope: !15625)
!15637 = !DILocation(line: 1205, column: 7, scope: !15638)
!15638 = distinct !DILexicalBlock(scope: !15634, file: !2433, line: 1204, column: 22)
!15639 = !DILocation(line: 1205, column: 22, scope: !15638)
!15640 = !DILocation(line: 1206, column: 2, scope: !15638)
!15641 = !DILocation(line: 1207, column: 1, scope: !15625)
!15642 = !DISubprogram(name: "rb_remove", scope: !384, file: !384, line: 110, type: !15623, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!15643 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2433, file: !2433, line: 1209, type: !15644, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15646)
!15644 = !DISubroutineType(types: !15645)
!15645 = !{!2328, !15565}
!15646 = !{!15647, !15648, !15649}
!15647 = !DILocalVariable(name: "pq", arg: 1, scope: !15643, file: !2433, line: 1209, type: !15565)
!15648 = !DILocalVariable(name: "thread", scope: !15643, file: !2433, line: 1211, type: !2328)
!15649 = !DILocalVariable(name: "n", scope: !15643, file: !2433, line: 1212, type: !2357)
!15650 = !DILocation(line: 0, scope: !15643)
!15651 = !DILocation(line: 1212, column: 37, scope: !15643)
!15652 = !DILocation(line: 1212, column: 21, scope: !15643)
!15653 = !DILocation(line: 1217, column: 2, scope: !15643)
!15654 = distinct !DISubprogram(name: "rb_get_min", scope: !384, file: !384, line: 115, type: !15655, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15657)
!15655 = !DISubroutineType(types: !15656)
!15656 = !{!2357, !15620}
!15657 = !{!15658}
!15658 = !DILocalVariable(name: "tree", arg: 1, scope: !15654, file: !384, line: 115, type: !15620)
!15659 = !DILocation(line: 0, scope: !15654)
!15660 = !DILocation(line: 117, column: 9, scope: !15654)
!15661 = !DILocation(line: 117, column: 2, scope: !15654)
!15662 = !DISubprogram(name: "z_rb_get_minmax", scope: !384, file: !384, line: 100, type: !15663, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!15663 = !DISubroutineType(types: !15664)
!15664 = !{!2357, !15620, !133}
!15665 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2433, file: !2433, line: 1246, type: !15666, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15674)
!15666 = !DISubroutineType(types: !15667)
!15667 = !{!2328, !15668}
!15668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15669, size: 32)
!15669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15567, line: 53, size: 2080, elements: !15670)
!15670 = !{!15671, !15673}
!15671 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15669, file: !15567, line: 54, baseType: !15672, size: 2048)
!15672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2364, size: 2048, elements: !219)
!15673 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15669, file: !15567, line: 55, baseType: !32, size: 32, offset: 2048)
!15674 = !{!15675, !15676, !15677, !15678}
!15675 = !DILocalVariable(name: "pq", arg: 1, scope: !15665, file: !2433, line: 1246, type: !15668)
!15676 = !DILocalVariable(name: "thread", scope: !15665, file: !2433, line: 1252, type: !2328)
!15677 = !DILocalVariable(name: "l", scope: !15665, file: !2433, line: 1253, type: !14475)
!15678 = !DILocalVariable(name: "n", scope: !15665, file: !2433, line: 1254, type: !2429)
!15679 = !DILocation(line: 0, scope: !15665)
!15680 = !DILocation(line: 1248, column: 11, scope: !15681)
!15681 = distinct !DILexicalBlock(scope: !15665, file: !2433, line: 1248, column: 6)
!15682 = !DILocation(line: 1248, column: 7, scope: !15681)
!15683 = !DILocation(line: 1248, column: 6, scope: !15665)
!15684 = !DILocation(line: 1253, column: 31, scope: !15665)
!15685 = !DILocation(line: 1253, column: 20, scope: !15665)
!15686 = !DILocation(line: 1254, column: 19, scope: !15665)
!15687 = !DILocation(line: 1260, column: 1, scope: !15665)
!15688 = distinct !DISubprogram(name: "z_unpend_all", scope: !2433, file: !2433, line: 1262, type: !15689, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15691)
!15689 = !DISubroutineType(types: !15690)
!15690 = !{!107, !2359}
!15691 = !{!15692, !15693, !15694}
!15692 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15688, file: !2433, line: 1262, type: !2359)
!15693 = !DILocalVariable(name: "need_sched", scope: !15688, file: !2433, line: 1264, type: !107)
!15694 = !DILocalVariable(name: "thread", scope: !15688, file: !2433, line: 1265, type: !2328)
!15695 = !DILocation(line: 0, scope: !15688)
!15696 = !DILocation(line: 1267, column: 19, scope: !15688)
!15697 = !DILocation(line: 1267, column: 41, scope: !15688)
!15698 = !DILocation(line: 1267, column: 2, scope: !15688)
!15699 = !DILocation(line: 1268, column: 3, scope: !15700)
!15700 = distinct !DILexicalBlock(scope: !15688, file: !2433, line: 1267, column: 50)
!15701 = !DILocation(line: 1269, column: 3, scope: !15700)
!15702 = distinct !{!15702, !15698, !15703}
!15703 = !DILocation(line: 1271, column: 2, scope: !15688)
!15704 = !DILocation(line: 1273, column: 2, scope: !15688)
!15705 = distinct !DISubprogram(name: "z_waitq_head", scope: !13429, file: !13429, line: 52, type: !15323, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15706)
!15706 = !{!15707}
!15707 = !DILocalVariable(name: "w", arg: 1, scope: !15705, file: !13429, line: 52, type: !2359)
!15708 = !DILocation(line: 0, scope: !15705)
!15709 = !DILocation(line: 54, column: 52, scope: !15705)
!15710 = !DILocation(line: 54, column: 28, scope: !15705)
!15711 = !DILocation(line: 54, column: 9, scope: !15705)
!15712 = !DILocation(line: 54, column: 2, scope: !15705)
!15713 = distinct !DISubprogram(name: "init_ready_q", scope: !2433, file: !2433, line: 1276, type: !15714, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15721)
!15714 = !DISubroutineType(types: !15715)
!15715 = !{null, !15716}
!15716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15717, size: 32)
!15717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !228, line: 83, size: 96, elements: !15718)
!15718 = !{!15719, !15720}
!15719 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15717, file: !228, line: 86, baseType: !2328, size: 32)
!15720 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15717, file: !228, line: 90, baseType: !2364, size: 64, offset: 32)
!15721 = !{!15722}
!15722 = !DILocalVariable(name: "rq", arg: 1, scope: !15713, file: !2433, line: 1276, type: !15716)
!15723 = !DILocation(line: 0, scope: !15713)
!15724 = !DILocation(line: 1289, column: 22, scope: !15713)
!15725 = !DILocation(line: 1289, column: 2, scope: !15713)
!15726 = !DILocation(line: 1291, column: 1, scope: !15713)
!15727 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !15728, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15730)
!15728 = !DISubroutineType(types: !15729)
!15729 = !{null, !14475}
!15730 = !{!15731}
!15731 = !DILocalVariable(name: "list", arg: 1, scope: !15727, file: !233, line: 197, type: !14475)
!15732 = !DILocation(line: 0, scope: !15727)
!15733 = !DILocation(line: 199, column: 8, scope: !15727)
!15734 = !DILocation(line: 199, column: 13, scope: !15727)
!15735 = !DILocation(line: 200, column: 8, scope: !15727)
!15736 = !DILocation(line: 200, column: 13, scope: !15727)
!15737 = !DILocation(line: 201, column: 1, scope: !15727)
!15738 = distinct !DISubprogram(name: "z_sched_init", scope: !2433, file: !2433, line: 1293, type: !3211, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !250)
!15739 = !DILocation(line: 1302, column: 2, scope: !15738)
!15740 = !DILocation(line: 1306, column: 2, scope: !15738)
!15741 = !DILocation(line: 1309, column: 1, scope: !15738)
!15742 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2433, file: !2433, line: 1311, type: !15743, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15746)
!15743 = !DISubroutineType(types: !15744)
!15744 = !{!107, !15745}
!15745 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !2328)
!15746 = !{!15747}
!15747 = !DILocalVariable(name: "thread", arg: 1, scope: !15742, file: !2433, line: 1311, type: !15745)
!15748 = !DILocation(line: 0, scope: !15742)
!15749 = !DILocation(line: 1313, column: 22, scope: !15742)
!15750 = !DILocation(line: 1313, column: 9, scope: !15742)
!15751 = !DILocation(line: 1313, column: 2, scope: !15742)
!15752 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2433, file: !2433, line: 1325, type: !15753, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15755)
!15753 = !DISubroutineType(types: !15754)
!15754 = !{null, !15745, !107}
!15755 = !{!15756, !15757, !15758}
!15756 = !DILocalVariable(name: "thread", arg: 1, scope: !15752, file: !2433, line: 1325, type: !15745)
!15757 = !DILocalVariable(name: "prio", arg: 2, scope: !15752, file: !2433, line: 1325, type: !107)
!15758 = !DILocalVariable(name: "th", scope: !15752, file: !2433, line: 1334, type: !2328)
!15759 = !DILocation(line: 0, scope: !15752)
!15760 = !DILocation(line: 1336, column: 2, scope: !15752)
!15761 = !DILocation(line: 1337, column: 1, scope: !15752)
!15762 = distinct !DISubprogram(name: "k_can_yield", scope: !2433, file: !2433, line: 1384, type: !6962, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !250)
!15763 = !DILocation(line: 1386, column: 11, scope: !15762)
!15764 = !DILocation(line: 1386, column: 29, scope: !15762)
!15765 = !DILocation(line: 1386, column: 32, scope: !15762)
!15766 = !DILocation(line: 1386, column: 46, scope: !15762)
!15767 = !DILocation(line: 1387, column: 28, scope: !15762)
!15768 = !DILocation(line: 1387, column: 4, scope: !15762)
!15769 = !DILocation(line: 1386, column: 2, scope: !15762)
!15770 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !224, file: !224, line: 989, type: !6962, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !250)
!15771 = !DILocation(line: 993, column: 10, scope: !15770)
!15772 = !DILocation(line: 993, column: 2, scope: !15770)
!15773 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2433, file: !2433, line: 1390, type: !3211, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15774)
!15774 = !{!15775}
!15775 = !DILocalVariable(name: "key", scope: !15773, file: !2433, line: 1396, type: !14264)
!15776 = !DILocation(line: 0, scope: !14272, inlinedAt: !15777)
!15777 = distinct !DILocation(line: 1396, column: 25, scope: !15773)
!15778 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !15779)
!15779 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !15777)
!15780 = !DILocation(line: 0, scope: !14281, inlinedAt: !15779)
!15781 = !DILocation(line: 0, scope: !15773)
!15782 = !DILocation(line: 1400, column: 18, scope: !15783)
!15783 = distinct !DILexicalBlock(scope: !15784, file: !2433, line: 1399, column: 36)
!15784 = distinct !DILexicalBlock(scope: !15773, file: !2433, line: 1398, column: 6)
!15785 = !DILocation(line: 0, scope: !14441, inlinedAt: !15786)
!15786 = distinct !DILocation(line: 1400, column: 3, scope: !15783)
!15787 = !DILocation(line: 266, column: 15, scope: !14441, inlinedAt: !15786)
!15788 = !DILocation(line: 266, column: 28, scope: !14441, inlinedAt: !15786)
!15789 = !DILocation(line: 0, scope: !14449, inlinedAt: !15790)
!15790 = distinct !DILocation(line: 268, column: 3, scope: !14453, inlinedAt: !15786)
!15791 = !DILocation(line: 234, column: 2, scope: !14449, inlinedAt: !15790)
!15792 = !DILocation(line: 1402, column: 15, scope: !15773)
!15793 = !DILocation(line: 0, scope: !14458, inlinedAt: !15794)
!15794 = distinct !DILocation(line: 1402, column: 2, scope: !15773)
!15795 = !DILocation(line: 252, column: 15, scope: !14458, inlinedAt: !15794)
!15796 = !DILocation(line: 252, column: 28, scope: !14458, inlinedAt: !15794)
!15797 = !DILocation(line: 0, scope: !14465, inlinedAt: !15798)
!15798 = distinct !DILocation(line: 254, column: 3, scope: !14469, inlinedAt: !15794)
!15799 = !DILocation(line: 0, scope: !14472, inlinedAt: !15800)
!15800 = distinct !DILocation(line: 229, column: 2, scope: !14465, inlinedAt: !15798)
!15801 = !DILocation(line: 188, column: 2, scope: !14482, inlinedAt: !15800)
!15802 = !DILocation(line: 188, column: 2, scope: !14484, inlinedAt: !15800)
!15803 = !DILocation(line: 0, scope: !14482, inlinedAt: !15800)
!15804 = !DILocation(line: 189, column: 7, scope: !14487, inlinedAt: !15800)
!15805 = !DILocation(line: 189, column: 35, scope: !14487, inlinedAt: !15800)
!15806 = !DILocation(line: 189, column: 7, scope: !14488, inlinedAt: !15800)
!15807 = !DILocation(line: 191, column: 21, scope: !14492, inlinedAt: !15800)
!15808 = !DILocation(line: 190, column: 4, scope: !14492, inlinedAt: !15800)
!15809 = !DILocation(line: 192, column: 4, scope: !14492, inlinedAt: !15800)
!15810 = distinct !{!15810, !15801, !15811}
!15811 = !DILocation(line: 194, column: 2, scope: !14482, inlinedAt: !15800)
!15812 = !DILocation(line: 196, column: 37, scope: !14472, inlinedAt: !15800)
!15813 = !DILocation(line: 196, column: 2, scope: !14472, inlinedAt: !15800)
!15814 = !DILocation(line: 197, column: 1, scope: !14472, inlinedAt: !15800)
!15815 = !DILocation(line: 1403, column: 2, scope: !15773)
!15816 = !DILocation(line: 0, scope: !14883, inlinedAt: !15817)
!15817 = distinct !DILocation(line: 1404, column: 2, scope: !15773)
!15818 = !DILocation(line: 196, column: 9, scope: !14883, inlinedAt: !15817)
!15819 = !DILocation(line: 1405, column: 1, scope: !15773)
!15820 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2433, file: !2433, line: 1459, type: !15821, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15823)
!15821 = !DISubroutineType(types: !15822)
!15822 = !{!736, !15063}
!15823 = !{!15824, !15825, !15826}
!15824 = !DILocalVariable(name: "timeout", arg: 1, scope: !15820, file: !2433, line: 1459, type: !15063)
!15825 = !DILocalVariable(name: "ticks", scope: !15820, file: !2433, line: 1461, type: !103)
!15826 = !DILocalVariable(name: "ret", scope: !15820, file: !2433, line: 1480, type: !736)
!15827 = !DILocation(line: 0, scope: !15820)
!15828 = !DILocation(line: 1468, column: 6, scope: !15829)
!15829 = distinct !DILexicalBlock(scope: !15820, file: !2433, line: 1468, column: 6)
!15830 = !DILocation(line: 1468, column: 6, scope: !15820)
!15831 = !DILocation(line: 1469, column: 20, scope: !15832)
!15832 = distinct !DILexicalBlock(scope: !15829, file: !2433, line: 1468, column: 40)
!15833 = !DILocation(line: 1469, column: 3, scope: !15832)
!15834 = !DILocation(line: 1473, column: 3, scope: !15832)
!15835 = !DILocation(line: 1478, column: 10, scope: !15820)
!15836 = !DILocation(line: 1480, column: 16, scope: !15820)
!15837 = !DILocation(line: 1485, column: 1, scope: !15820)
!15838 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3396, file: !3396, line: 310, type: !15839, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15841)
!15839 = !DISubroutineType(types: !15840)
!15840 = !{null, !15745}
!15841 = !{!15842}
!15842 = !DILocalVariable(name: "thread", arg: 1, scope: !15838, file: !3396, line: 310, type: !15745)
!15843 = !DILocation(line: 0, scope: !15838)
!15844 = !DILocation(line: 319, column: 2, scope: !15845)
!15845 = distinct !DILexicalBlock(scope: !15838, file: !3396, line: 319, column: 2)
!15846 = !{i64 2155104229}
!15847 = !DILocation(line: 320, column: 2, scope: !15838)
!15848 = !DILocation(line: 321, column: 1, scope: !15838)
!15849 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2433, file: !2433, line: 1415, type: !15850, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15852)
!15850 = !DISubroutineType(types: !15851)
!15851 = !{!736, !103}
!15852 = !{!15853, !15854, !15855, !15856}
!15853 = !DILocalVariable(name: "ticks", arg: 1, scope: !15849, file: !2433, line: 1415, type: !103)
!15854 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15849, file: !2433, line: 1418, type: !162)
!15855 = !DILocalVariable(name: "timeout", scope: !15849, file: !2433, line: 1430, type: !15063)
!15856 = !DILocalVariable(name: "key", scope: !15849, file: !2433, line: 1437, type: !14264)
!15857 = !DILocation(line: 0, scope: !15849)
!15858 = !DILocation(line: 1425, column: 12, scope: !15859)
!15859 = distinct !DILexicalBlock(scope: !15849, file: !2433, line: 1425, column: 6)
!15860 = !DILocation(line: 1425, column: 6, scope: !15849)
!15861 = !DILocation(line: 1426, column: 3, scope: !15862)
!15862 = distinct !DILexicalBlock(scope: !15859, file: !2433, line: 1425, column: 18)
!15863 = !DILocation(line: 1427, column: 3, scope: !15862)
!15864 = !DILocation(line: 1431, column: 24, scope: !15865)
!15865 = distinct !DILexicalBlock(scope: !15849, file: !2433, line: 1431, column: 6)
!15866 = !DILocation(line: 1431, column: 6, scope: !15849)
!15867 = !DILocation(line: 1432, column: 35, scope: !15868)
!15868 = distinct !DILexicalBlock(scope: !15865, file: !2433, line: 1431, column: 30)
!15869 = !DILocation(line: 1432, column: 27, scope: !15868)
!15870 = !DILocation(line: 1433, column: 2, scope: !15868)
!15871 = !DILocation(line: 1434, column: 27, scope: !15872)
!15872 = distinct !DILexicalBlock(scope: !15865, file: !2433, line: 1433, column: 9)
!15873 = !DILocation(line: 0, scope: !15865)
!15874 = !DILocation(line: 0, scope: !14272, inlinedAt: !15875)
!15875 = distinct !DILocation(line: 1437, column: 25, scope: !15849)
!15876 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !15877)
!15877 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !15875)
!15878 = !DILocation(line: 0, scope: !14281, inlinedAt: !15877)
!15879 = !DILocation(line: 1440, column: 20, scope: !15849)
!15880 = !DILocation(line: 1440, column: 18, scope: !15849)
!15881 = !DILocation(line: 1442, column: 2, scope: !15849)
!15882 = !DILocation(line: 1443, column: 23, scope: !15849)
!15883 = !DILocation(line: 1443, column: 2, scope: !15849)
!15884 = !DILocation(line: 1444, column: 29, scope: !15849)
!15885 = !DILocation(line: 1444, column: 2, scope: !15849)
!15886 = !DILocation(line: 0, scope: !14883, inlinedAt: !15887)
!15887 = distinct !DILocation(line: 1446, column: 8, scope: !15849)
!15888 = !DILocation(line: 196, column: 9, scope: !14883, inlinedAt: !15887)
!15889 = !DILocation(line: 1450, column: 10, scope: !15849)
!15890 = !DILocation(line: 1450, column: 45, scope: !15849)
!15891 = !DILocation(line: 1450, column: 43, scope: !15849)
!15892 = !DILocation(line: 1451, column: 6, scope: !15849)
!15893 = !DILocation(line: 1457, column: 1, scope: !15849)
!15894 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !13664, file: !13664, line: 1103, type: !13665, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15895)
!15895 = !{!15896}
!15896 = !DILocalVariable(name: "t", arg: 1, scope: !15894, file: !13664, line: 1103, type: !1506)
!15897 = !DILocation(line: 0, scope: !15894)
!15898 = !DILocation(line: 0, scope: !14319, inlinedAt: !15899)
!15899 = distinct !DILocation(line: 1106, column: 9, scope: !15894)
!15900 = !DILocation(line: 139, column: 13, scope: !15901, inlinedAt: !15899)
!15901 = distinct !DILexicalBlock(scope: !15902, file: !13664, line: 138, column: 10)
!15902 = distinct !DILexicalBlock(scope: !15903, file: !13664, line: 136, column: 7)
!15903 = distinct !DILexicalBlock(scope: !14340, file: !13664, line: 134, column: 17)
!15904 = !DILocation(line: 1106, column: 2, scope: !15894)
!15905 = distinct !DISubprogram(name: "k_yield", scope: !3396, file: !3396, line: 140, type: !3211, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !250)
!15906 = !DILocation(line: 148, column: 2, scope: !15907)
!15907 = distinct !DILexicalBlock(scope: !15905, file: !3396, line: 148, column: 2)
!15908 = !{i64 2155103549}
!15909 = !DILocation(line: 149, column: 2, scope: !15905)
!15910 = !DILocation(line: 150, column: 1, scope: !15905)
!15911 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2433, file: !2433, line: 1495, type: !15912, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15914)
!15912 = !DISubroutineType(types: !15913)
!15913 = !{!736, !107}
!15914 = !{!15915, !15916}
!15915 = !DILocalVariable(name: "us", arg: 1, scope: !15911, file: !2433, line: 1495, type: !107)
!15916 = !DILocalVariable(name: "ticks", scope: !15911, file: !2433, line: 1497, type: !736)
!15917 = !DILocation(line: 0, scope: !15911)
!15918 = !DILocation(line: 1501, column: 31, scope: !15911)
!15919 = !DILocation(line: 1501, column: 10, scope: !15911)
!15920 = !DILocation(line: 1502, column: 23, scope: !15911)
!15921 = !DILocation(line: 1502, column: 10, scope: !15911)
!15922 = !DILocation(line: 1506, column: 31, scope: !15911)
!15923 = !DILocation(line: 1506, column: 9, scope: !15911)
!15924 = !DILocation(line: 1506, column: 2, scope: !15911)
!15925 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !13664, file: !13664, line: 571, type: !13665, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15926)
!15926 = !{!15927}
!15927 = !DILocalVariable(name: "t", arg: 1, scope: !15925, file: !13664, line: 571, type: !1506)
!15928 = !DILocation(line: 0, scope: !15925)
!15929 = !DILocation(line: 0, scope: !14319, inlinedAt: !15930)
!15930 = distinct !DILocation(line: 574, column: 9, scope: !15925)
!15931 = !DILocation(line: 135, column: 5, scope: !15903, inlinedAt: !15930)
!15932 = !DILocation(line: 139, column: 13, scope: !15901, inlinedAt: !15930)
!15933 = !DILocation(line: 574, column: 2, scope: !15925)
!15934 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !13664, file: !13664, line: 1187, type: !13665, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15935)
!15935 = !{!15936}
!15936 = !DILocalVariable(name: "t", arg: 1, scope: !15934, file: !13664, line: 1187, type: !1506)
!15937 = !DILocation(line: 0, scope: !15934)
!15938 = !DILocation(line: 0, scope: !14319, inlinedAt: !15939)
!15939 = distinct !DILocation(line: 1190, column: 9, scope: !15934)
!15940 = !DILocation(line: 145, column: 13, scope: !15941, inlinedAt: !15939)
!15941 = distinct !DILexicalBlock(scope: !14337, file: !13664, line: 144, column: 10)
!15942 = !DILocation(line: 1190, column: 2, scope: !15934)
!15943 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2433, file: !2433, line: 1517, type: !15839, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15944)
!15944 = !{!15945}
!15945 = !DILocalVariable(name: "thread", arg: 1, scope: !15943, file: !2433, line: 1517, type: !15745)
!15946 = !DILocation(line: 0, scope: !15943)
!15947 = !DILocation(line: 1521, column: 6, scope: !15948)
!15948 = distinct !DILexicalBlock(scope: !15943, file: !2433, line: 1521, column: 6)
!15949 = !DILocation(line: 1521, column: 6, scope: !15943)
!15950 = !DILocation(line: 1525, column: 6, scope: !15951)
!15951 = distinct !DILexicalBlock(scope: !15943, file: !2433, line: 1525, column: 6)
!15952 = !DILocation(line: 1525, column: 37, scope: !15951)
!15953 = !DILocation(line: 1525, column: 6, scope: !15943)
!15954 = !DILocation(line: 1527, column: 20, scope: !15955)
!15955 = distinct !DILexicalBlock(scope: !15956, file: !2433, line: 1527, column: 7)
!15956 = distinct !DILexicalBlock(scope: !15951, file: !2433, line: 1525, column: 42)
!15957 = !DILocation(line: 1527, column: 33, scope: !15955)
!15958 = !DILocation(line: 1527, column: 7, scope: !15956)
!15959 = !DILocation(line: 1532, column: 2, scope: !15943)
!15960 = !DILocation(line: 1533, column: 2, scope: !15943)
!15961 = !DILocation(line: 1031, column: 3, scope: !14916, inlinedAt: !15962)
!15962 = distinct !DILocation(line: 48, column: 10, scope: !14920, inlinedAt: !15963)
!15963 = distinct !DILocation(line: 1537, column: 7, scope: !15964)
!15964 = distinct !DILexicalBlock(scope: !15943, file: !2433, line: 1537, column: 6)
!15965 = !DILocation(line: 0, scope: !14916, inlinedAt: !15962)
!15966 = !DILocation(line: 48, column: 9, scope: !14920, inlinedAt: !15963)
!15967 = !DILocation(line: 1537, column: 6, scope: !15943)
!15968 = !DILocation(line: 1538, column: 3, scope: !15969)
!15969 = distinct !DILexicalBlock(scope: !15964, file: !2433, line: 1537, column: 25)
!15970 = !DILocation(line: 1539, column: 2, scope: !15969)
!15971 = !DILocation(line: 1540, column: 1, scope: !15943)
!15972 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !13105, file: !13105, line: 101, type: !14390, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15973)
!15973 = !{!15974}
!15974 = !DILocalVariable(name: "thread", arg: 1, scope: !15972, file: !13105, line: 101, type: !2328)
!15975 = !DILocation(line: 0, scope: !15972)
!15976 = !DILocation(line: 103, column: 23, scope: !15972)
!15977 = !DILocation(line: 103, column: 36, scope: !15972)
!15978 = !DILocation(line: 103, column: 55, scope: !15972)
!15979 = !DILocation(line: 103, column: 2, scope: !15972)
!15980 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2433, file: !2433, line: 1567, type: !15981, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15983)
!15981 = !DISubroutineType(types: !15982)
!15982 = !{!15745}
!15983 = !{!15984}
!15984 = !DILocalVariable(name: "ret", scope: !15980, file: !2433, line: 1577, type: !15745)
!15985 = !DILocation(line: 1577, column: 30, scope: !15980)
!15986 = !DILocation(line: 0, scope: !15980)
!15987 = !DILocation(line: 1582, column: 2, scope: !15980)
!15988 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2433, file: !2433, line: 1593, type: !7236, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !250)
!15989 = !DILocation(line: 1031, column: 3, scope: !14916, inlinedAt: !15990)
!15990 = distinct !DILocation(line: 48, column: 10, scope: !14920, inlinedAt: !15991)
!15991 = distinct !DILocation(line: 1595, column: 10, scope: !15988)
!15992 = !DILocation(line: 0, scope: !14916, inlinedAt: !15990)
!15993 = !DILocation(line: 48, column: 9, scope: !14920, inlinedAt: !15991)
!15994 = !DILocation(line: 1595, column: 27, scope: !15988)
!15995 = !DILocation(line: 1595, column: 41, scope: !15988)
!15996 = !DILocation(line: 1595, column: 30, scope: !15988)
!15997 = !DILocation(line: 1595, column: 2, scope: !15988)
!15998 = distinct !DISubprogram(name: "z_thread_abort", scope: !2433, file: !2433, line: 1725, type: !14230, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15999)
!15999 = !{!16000, !16001}
!16000 = !DILocalVariable(name: "thread", arg: 1, scope: !15998, file: !2433, line: 1725, type: !2328)
!16001 = !DILocalVariable(name: "key", scope: !15998, file: !2433, line: 1727, type: !14264)
!16002 = !DILocation(line: 0, scope: !15998)
!16003 = !DILocation(line: 0, scope: !14272, inlinedAt: !16004)
!16004 = distinct !DILocation(line: 1727, column: 25, scope: !15998)
!16005 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !16006)
!16006 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !16004)
!16007 = !DILocation(line: 0, scope: !14281, inlinedAt: !16006)
!16008 = !DILocation(line: 1729, column: 20, scope: !16009)
!16009 = distinct !DILexicalBlock(scope: !15998, file: !2433, line: 1729, column: 6)
!16010 = !DILocation(line: 1729, column: 33, scope: !16009)
!16011 = !DILocation(line: 1729, column: 48, scope: !16009)
!16012 = !DILocation(line: 1729, column: 6, scope: !15998)
!16013 = !DILocation(line: 0, scope: !14299, inlinedAt: !16014)
!16014 = distinct !DILocation(line: 1730, column: 3, scope: !16015)
!16015 = distinct !DILexicalBlock(scope: !16009, file: !2433, line: 1729, column: 54)
!16016 = !DILocation(line: 0, scope: !14307, inlinedAt: !16017)
!16017 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !16014)
!16018 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !16017)
!16019 = !DILocation(line: 1732, column: 3, scope: !16020)
!16020 = distinct !DILexicalBlock(scope: !16015, file: !2433, line: 1732, column: 3)
!16021 = !{i64 2155840959, i64 2155840975, i64 2155841001, i64 2155841029, i64 2155841049}
!16022 = !DILocation(line: 1733, column: 3, scope: !16015)
!16023 = !DILocation(line: 1736, column: 20, scope: !16024)
!16024 = distinct !DILexicalBlock(scope: !15998, file: !2433, line: 1736, column: 6)
!16025 = !DILocation(line: 1736, column: 33, scope: !16024)
!16026 = !DILocation(line: 1736, column: 49, scope: !16024)
!16027 = !DILocation(line: 1736, column: 6, scope: !15998)
!16028 = !DILocation(line: 0, scope: !14299, inlinedAt: !16029)
!16029 = distinct !DILocation(line: 1737, column: 3, scope: !16030)
!16030 = distinct !DILexicalBlock(scope: !16024, file: !2433, line: 1736, column: 56)
!16031 = !DILocation(line: 0, scope: !14307, inlinedAt: !16032)
!16032 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !16029)
!16033 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !16032)
!16034 = !DILocation(line: 1738, column: 3, scope: !16030)
!16035 = !DILocation(line: 1775, column: 2, scope: !15998)
!16036 = !DILocation(line: 1776, column: 16, scope: !16037)
!16037 = distinct !DILexicalBlock(scope: !15998, file: !2433, line: 1776, column: 6)
!16038 = !DILocation(line: 1776, column: 13, scope: !16037)
!16039 = !DILocation(line: 1776, column: 25, scope: !16037)
!16040 = !DILocation(line: 1031, column: 3, scope: !14916, inlinedAt: !16041)
!16041 = distinct !DILocation(line: 48, column: 10, scope: !14920, inlinedAt: !16042)
!16042 = distinct !DILocation(line: 1776, column: 29, scope: !16037)
!16043 = !DILocation(line: 0, scope: !14916, inlinedAt: !16041)
!16044 = !DILocation(line: 48, column: 9, scope: !14920, inlinedAt: !16042)
!16045 = !DILocation(line: 1776, column: 6, scope: !15998)
!16046 = !DILocation(line: 0, scope: !14883, inlinedAt: !16047)
!16047 = distinct !DILocation(line: 1777, column: 3, scope: !16048)
!16048 = distinct !DILexicalBlock(scope: !16037, file: !2433, line: 1776, column: 47)
!16049 = !DILocation(line: 196, column: 9, scope: !14883, inlinedAt: !16047)
!16050 = !DILocation(line: 1779, column: 2, scope: !16048)
!16051 = !DILocation(line: 0, scope: !14299, inlinedAt: !16052)
!16052 = distinct !DILocation(line: 1780, column: 2, scope: !15998)
!16053 = !DILocation(line: 0, scope: !14307, inlinedAt: !16054)
!16054 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !16052)
!16055 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !16054)
!16056 = !DILocation(line: 1781, column: 1, scope: !15998)
!16057 = distinct !DISubprogram(name: "end_thread", scope: !2433, file: !2433, line: 1690, type: !14230, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !16058)
!16058 = !{!16059}
!16059 = !DILocalVariable(name: "thread", arg: 1, scope: !16057, file: !2433, line: 1690, type: !2328)
!16060 = !DILocation(line: 0, scope: !16057)
!16061 = !DILocation(line: 1695, column: 20, scope: !16062)
!16062 = distinct !DILexicalBlock(scope: !16057, file: !2433, line: 1695, column: 6)
!16063 = !DILocation(line: 1695, column: 33, scope: !16062)
!16064 = !DILocation(line: 1695, column: 49, scope: !16062)
!16065 = !DILocation(line: 1695, column: 6, scope: !16057)
!16066 = !DILocation(line: 1697, column: 29, scope: !16067)
!16067 = distinct !DILexicalBlock(scope: !16062, file: !2433, line: 1695, column: 56)
!16068 = !DILocation(line: 1698, column: 7, scope: !16069)
!16069 = distinct !DILexicalBlock(scope: !16067, file: !2433, line: 1698, column: 7)
!16070 = !DILocation(line: 1698, column: 7, scope: !16067)
!16071 = !DILocation(line: 0, scope: !14441, inlinedAt: !16072)
!16072 = distinct !DILocation(line: 1699, column: 4, scope: !16073)
!16073 = distinct !DILexicalBlock(scope: !16069, file: !2433, line: 1698, column: 35)
!16074 = !DILocation(line: 266, column: 28, scope: !14441, inlinedAt: !16072)
!16075 = !DILocation(line: 0, scope: !14449, inlinedAt: !16076)
!16076 = distinct !DILocation(line: 268, column: 3, scope: !14453, inlinedAt: !16072)
!16077 = !DILocation(line: 234, column: 2, scope: !14449, inlinedAt: !16076)
!16078 = !DILocation(line: 1700, column: 3, scope: !16073)
!16079 = !DILocation(line: 1701, column: 20, scope: !16080)
!16080 = distinct !DILexicalBlock(scope: !16067, file: !2433, line: 1701, column: 7)
!16081 = !DILocation(line: 1701, column: 30, scope: !16080)
!16082 = !DILocation(line: 1701, column: 7, scope: !16067)
!16083 = !DILocation(line: 1702, column: 4, scope: !16084)
!16084 = distinct !DILexicalBlock(scope: !16080, file: !2433, line: 1701, column: 39)
!16085 = !DILocation(line: 1703, column: 3, scope: !16084)
!16086 = !DILocation(line: 1704, column: 9, scope: !16067)
!16087 = !DILocation(line: 1705, column: 23, scope: !16067)
!16088 = !DILocation(line: 1705, column: 3, scope: !16067)
!16089 = !DILocation(line: 1706, column: 3, scope: !16067)
!16090 = !DILocation(line: 1722, column: 2, scope: !16067)
!16091 = !DILocation(line: 1723, column: 1, scope: !16057)
!16092 = distinct !DISubprogram(name: "unpend_all", scope: !2433, file: !2433, line: 1674, type: !16093, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !16095)
!16093 = !DISubroutineType(types: !16094)
!16094 = !{null, !2359}
!16095 = !{!16096, !16097}
!16096 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16092, file: !2433, line: 1674, type: !2359)
!16097 = !DILocalVariable(name: "thread", scope: !16092, file: !2433, line: 1676, type: !2328)
!16098 = !DILocation(line: 0, scope: !16092)
!16099 = !DILocation(line: 1678, column: 19, scope: !16092)
!16100 = !DILocation(line: 1678, column: 41, scope: !16092)
!16101 = !DILocation(line: 1678, column: 2, scope: !16092)
!16102 = !DILocation(line: 1679, column: 3, scope: !16103)
!16103 = distinct !DILexicalBlock(scope: !16092, file: !2433, line: 1678, column: 50)
!16104 = !DILocation(line: 1680, column: 9, scope: !16103)
!16105 = !DILocalVariable(name: "thread", arg: 1, scope: !16106, file: !13125, line: 65, type: !2328)
!16106 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !13125, file: !13125, line: 65, type: !16107, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !16109)
!16107 = !DISubroutineType(types: !16108)
!16108 = !{null, !2328, !32}
!16109 = !{!16105, !16110}
!16110 = !DILocalVariable(name: "value", arg: 2, scope: !16106, file: !13125, line: 65, type: !32)
!16111 = !DILocation(line: 0, scope: !16106, inlinedAt: !16112)
!16112 = distinct !DILocation(line: 1681, column: 3, scope: !16103)
!16113 = !DILocation(line: 67, column: 15, scope: !16106, inlinedAt: !16112)
!16114 = !DILocation(line: 67, column: 33, scope: !16106, inlinedAt: !16112)
!16115 = !DILocation(line: 1682, column: 3, scope: !16103)
!16116 = distinct !{!16116, !16101, !16117}
!16117 = !DILocation(line: 1683, column: 2, scope: !16092)
!16118 = !DILocation(line: 1684, column: 1, scope: !16092)
!16119 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2433, file: !2433, line: 1794, type: !16120, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !16122)
!16120 = !DISubroutineType(types: !16121)
!16121 = !{!107, !2328, !15063}
!16122 = !{!16123, !16124, !16125, !16126}
!16123 = !DILocalVariable(name: "thread", arg: 1, scope: !16119, file: !2433, line: 1794, type: !2328)
!16124 = !DILocalVariable(name: "timeout", arg: 2, scope: !16119, file: !2433, line: 1794, type: !15063)
!16125 = !DILocalVariable(name: "key", scope: !16119, file: !2433, line: 1796, type: !14264)
!16126 = !DILocalVariable(name: "ret", scope: !16119, file: !2433, line: 1797, type: !107)
!16127 = !DILocation(line: 0, scope: !16119)
!16128 = !DILocation(line: 0, scope: !14272, inlinedAt: !16129)
!16129 = distinct !DILocation(line: 1796, column: 25, scope: !16119)
!16130 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !16131)
!16131 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !16129)
!16132 = !DILocation(line: 0, scope: !14281, inlinedAt: !16131)
!16133 = !DILocation(line: 1801, column: 20, scope: !16134)
!16134 = distinct !DILexicalBlock(scope: !16119, file: !2433, line: 1801, column: 6)
!16135 = !DILocation(line: 1801, column: 33, scope: !16134)
!16136 = !DILocation(line: 1801, column: 49, scope: !16134)
!16137 = !DILocation(line: 1801, column: 6, scope: !16119)
!16138 = !DILocation(line: 1803, column: 13, scope: !16139)
!16139 = distinct !DILexicalBlock(scope: !16134, file: !2433, line: 1803, column: 13)
!16140 = !DILocation(line: 1803, column: 13, scope: !16134)
!16141 = !DILocation(line: 1805, column: 24, scope: !16142)
!16142 = distinct !DILexicalBlock(scope: !16139, file: !2433, line: 1805, column: 13)
!16143 = !DILocation(line: 1805, column: 21, scope: !16142)
!16144 = !DILocation(line: 1805, column: 34, scope: !16142)
!16145 = !DILocation(line: 1806, column: 20, scope: !16142)
!16146 = !DILocation(line: 1806, column: 44, scope: !16142)
!16147 = !DILocation(line: 1806, column: 30, scope: !16142)
!16148 = !DILocation(line: 1805, column: 13, scope: !16139)
!16149 = !DILocation(line: 1810, column: 42, scope: !16150)
!16150 = distinct !DILexicalBlock(scope: !16142, file: !2433, line: 1808, column: 9)
!16151 = !DILocation(line: 1810, column: 3, scope: !16150)
!16152 = !DILocation(line: 1811, column: 22, scope: !16150)
!16153 = !DILocation(line: 1811, column: 3, scope: !16150)
!16154 = !DILocation(line: 0, scope: !14883, inlinedAt: !16155)
!16155 = distinct !DILocation(line: 1814, column: 9, scope: !16150)
!16156 = !DILocation(line: 196, column: 9, scope: !14883, inlinedAt: !16155)
!16157 = !DILocation(line: 1817, column: 3, scope: !16150)
!16158 = !DILocation(line: 0, scope: !16134)
!16159 = !DILocation(line: 0, scope: !14299, inlinedAt: !16160)
!16160 = distinct !DILocation(line: 1822, column: 2, scope: !16119)
!16161 = !DILocation(line: 0, scope: !14307, inlinedAt: !16162)
!16162 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !16160)
!16163 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !16162)
!16164 = !DILocation(line: 1823, column: 2, scope: !16119)
!16165 = !DILocation(line: 1824, column: 1, scope: !16119)
!16166 = distinct !DISubprogram(name: "z_sched_wake", scope: !2433, file: !2433, line: 1882, type: !16167, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !16169)
!16167 = !DISubroutineType(types: !16168)
!16168 = !{!136, !2359, !107, !102}
!16169 = !{!16170, !16171, !16172, !16173, !16174, !16175, !16177}
!16170 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16166, file: !2433, line: 1882, type: !2359)
!16171 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16166, file: !2433, line: 1882, type: !107)
!16172 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16166, file: !2433, line: 1882, type: !102)
!16173 = !DILocalVariable(name: "thread", scope: !16166, file: !2433, line: 1884, type: !2328)
!16174 = !DILocalVariable(name: "ret", scope: !16166, file: !2433, line: 1885, type: !136)
!16175 = !DILocalVariable(name: "__i", scope: !16176, file: !2433, line: 1887, type: !14264)
!16176 = distinct !DILexicalBlock(scope: !16166, file: !2433, line: 1887, column: 2)
!16177 = !DILocalVariable(name: "__key", scope: !16176, file: !2433, line: 1887, type: !14264)
!16178 = !DILocation(line: 0, scope: !16166)
!16179 = !DILocation(line: 0, scope: !16176)
!16180 = !DILocation(line: 0, scope: !14272, inlinedAt: !16181)
!16181 = distinct !DILocation(line: 1887, column: 2, scope: !16176)
!16182 = !DILocation(line: 55, column: 2, scope: !14281, inlinedAt: !16183)
!16183 = distinct !DILocation(line: 145, column: 10, scope: !14272, inlinedAt: !16181)
!16184 = !DILocation(line: 0, scope: !14281, inlinedAt: !16183)
!16185 = !DILocation(line: 1888, column: 12, scope: !16186)
!16186 = distinct !DILexicalBlock(scope: !16187, file: !2433, line: 1887, column: 26)
!16187 = distinct !DILexicalBlock(scope: !16176, file: !2433, line: 1887, column: 2)
!16188 = !DILocation(line: 1890, column: 14, scope: !16189)
!16189 = distinct !DILexicalBlock(scope: !16186, file: !2433, line: 1890, column: 7)
!16190 = !DILocation(line: 1890, column: 7, scope: !16186)
!16191 = !DILocalVariable(name: "thread", arg: 1, scope: !16192, file: !13879, line: 134, type: !2328)
!16192 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13879, file: !13879, line: 134, type: !16193, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !16195)
!16193 = !DISubroutineType(types: !16194)
!16194 = !{null, !2328, !32, !102}
!16195 = !{!16191, !16196, !16197}
!16196 = !DILocalVariable(name: "value", arg: 2, scope: !16192, file: !13879, line: 135, type: !32)
!16197 = !DILocalVariable(name: "data", arg: 3, scope: !16192, file: !13879, line: 136, type: !102)
!16198 = !DILocation(line: 0, scope: !16192, inlinedAt: !16199)
!16199 = distinct !DILocation(line: 1891, column: 4, scope: !16200)
!16200 = distinct !DILexicalBlock(scope: !16189, file: !2433, line: 1890, column: 23)
!16201 = !DILocation(line: 0, scope: !16106, inlinedAt: !16202)
!16202 = distinct !DILocation(line: 138, column: 2, scope: !16192, inlinedAt: !16199)
!16203 = !DILocation(line: 67, column: 15, scope: !16106, inlinedAt: !16202)
!16204 = !DILocation(line: 67, column: 33, scope: !16106, inlinedAt: !16202)
!16205 = !DILocation(line: 139, column: 15, scope: !16192, inlinedAt: !16199)
!16206 = !DILocation(line: 139, column: 25, scope: !16192, inlinedAt: !16199)
!16207 = !DILocation(line: 1894, column: 4, scope: !16200)
!16208 = !DILocation(line: 1895, column: 10, scope: !16200)
!16209 = !DILocation(line: 1896, column: 4, scope: !16200)
!16210 = !DILocation(line: 1898, column: 3, scope: !16200)
!16211 = !DILocation(line: 0, scope: !14299, inlinedAt: !16212)
!16212 = distinct !DILocation(line: 1887, column: 2, scope: !16187)
!16213 = !DILocation(line: 0, scope: !14307, inlinedAt: !16214)
!16214 = distinct !DILocation(line: 215, column: 2, scope: !14299, inlinedAt: !16212)
!16215 = !DILocation(line: 95, column: 2, scope: !14307, inlinedAt: !16214)
!16216 = !DILocation(line: 1901, column: 2, scope: !16166)
!16217 = distinct !DISubprogram(name: "z_sched_wait", scope: !2433, file: !2433, line: 1904, type: !16218, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !16221)
!16218 = !DISubroutineType(types: !16219)
!16219 = !{!107, !14275, !14264, !2359, !15063, !16220}
!16220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!16221 = !{!16222, !16223, !16224, !16225, !16226, !16227}
!16222 = !DILocalVariable(name: "lock", arg: 1, scope: !16217, file: !2433, line: 1904, type: !14275)
!16223 = !DILocalVariable(name: "key", arg: 2, scope: !16217, file: !2433, line: 1904, type: !14264)
!16224 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16217, file: !2433, line: 1905, type: !2359)
!16225 = !DILocalVariable(name: "timeout", arg: 4, scope: !16217, file: !2433, line: 1905, type: !15063)
!16226 = !DILocalVariable(name: "data", arg: 5, scope: !16217, file: !2433, line: 1905, type: !16220)
!16227 = !DILocalVariable(name: "ret", scope: !16217, file: !2433, line: 1907, type: !107)
!16228 = !DILocation(line: 0, scope: !16217)
!16229 = !DILocation(line: 1907, column: 12, scope: !16217)
!16230 = !DILocation(line: 1909, column: 11, scope: !16231)
!16231 = distinct !DILexicalBlock(scope: !16217, file: !2433, line: 1909, column: 6)
!16232 = !DILocation(line: 1909, column: 6, scope: !16217)
!16233 = !DILocation(line: 1910, column: 11, scope: !16234)
!16234 = distinct !DILexicalBlock(scope: !16231, file: !2433, line: 1909, column: 20)
!16235 = !DILocation(line: 1910, column: 26, scope: !16234)
!16236 = !DILocation(line: 1910, column: 9, scope: !16234)
!16237 = !DILocation(line: 1911, column: 2, scope: !16234)
!16238 = !DILocation(line: 1912, column: 2, scope: !16217)
!16239 = distinct !DISubprogram(name: "z_data_copy", scope: !16240, file: !16240, line: 22, type: !3211, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3194, retainedNodes: !250)
!16240 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16241 = !DILocation(line: 24, column: 2, scope: !16239)
!16242 = !DILocation(line: 27, column: 2, scope: !16239)
!16243 = !DILocation(line: 71, column: 1, scope: !16239)
!16244 = distinct !DISubprogram(name: "z_add_timeout", scope: !2470, file: !2470, line: 88, type: !16245, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16251)
!16245 = !DISubroutineType(types: !16246)
!16246 = !{null, !2443, !2462, !16247}
!16247 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16248)
!16248 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16249)
!16249 = !{!16250}
!16250 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16248, file: !104, line: 66, baseType: !103, size: 64)
!16251 = !{!16252, !16253, !16254, !16255, !16261, !16262, !16265, !16268}
!16252 = !DILocalVariable(name: "to", arg: 1, scope: !16244, file: !2470, line: 88, type: !2443)
!16253 = !DILocalVariable(name: "fn", arg: 2, scope: !16244, file: !2470, line: 88, type: !2462)
!16254 = !DILocalVariable(name: "timeout", arg: 3, scope: !16244, file: !2470, line: 89, type: !16247)
!16255 = !DILocalVariable(name: "__i", scope: !16256, file: !2470, line: 102, type: !16257)
!16256 = distinct !DILexicalBlock(scope: !16244, file: !2470, line: 102, column: 2)
!16257 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !16258)
!16258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !16259)
!16259 = !{!16260}
!16260 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16258, file: !249, line: 33, baseType: !107, size: 32)
!16261 = !DILocalVariable(name: "__key", scope: !16256, file: !2470, line: 102, type: !16257)
!16262 = !DILocalVariable(name: "t", scope: !16263, file: !2470, line: 103, type: !2443)
!16263 = distinct !DILexicalBlock(scope: !16264, file: !2470, line: 102, column: 24)
!16264 = distinct !DILexicalBlock(scope: !16256, file: !2470, line: 102, column: 2)
!16265 = !DILocalVariable(name: "ticks", scope: !16266, file: !2470, line: 107, type: !103)
!16266 = distinct !DILexicalBlock(scope: !16267, file: !2470, line: 106, column: 39)
!16267 = distinct !DILexicalBlock(scope: !16263, file: !2470, line: 105, column: 7)
!16268 = !DILocalVariable(name: "next_time", scope: !16269, file: !2470, line: 137, type: !736)
!16269 = distinct !DILexicalBlock(scope: !16270, file: !2470, line: 127, column: 22)
!16270 = distinct !DILexicalBlock(scope: !16263, file: !2470, line: 127, column: 7)
!16271 = !DILocation(line: 0, scope: !16244)
!16272 = !DILocation(line: 91, column: 6, scope: !16273)
!16273 = distinct !DILexicalBlock(scope: !16244, file: !2470, line: 91, column: 6)
!16274 = !DILocation(line: 91, column: 6, scope: !16244)
!16275 = !DILocation(line: 100, column: 6, scope: !16244)
!16276 = !DILocation(line: 100, column: 9, scope: !16244)
!16277 = !DILocation(line: 0, scope: !16256)
!16278 = !DILocalVariable(name: "l", arg: 1, scope: !16279, file: !249, line: 136, type: !16282)
!16279 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !16280, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16283)
!16280 = !DISubroutineType(types: !16281)
!16281 = !{!16257, !16282}
!16282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 32)
!16283 = !{!16278, !16284}
!16284 = !DILocalVariable(name: "k", scope: !16279, file: !249, line: 139, type: !16257)
!16285 = !DILocation(line: 0, scope: !16279, inlinedAt: !16286)
!16286 = distinct !DILocation(line: 102, column: 2, scope: !16256)
!16287 = !DILocation(line: 55, column: 2, scope: !16288, inlinedAt: !16292)
!16288 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5993, file: !5993, line: 42, type: !5994, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16289)
!16289 = !{!16290, !16291}
!16290 = !DILocalVariable(name: "key", scope: !16288, file: !5993, line: 44, type: !32)
!16291 = !DILocalVariable(name: "tmp", scope: !16288, file: !5993, line: 53, type: !32)
!16292 = distinct !DILocation(line: 145, column: 10, scope: !16279, inlinedAt: !16286)
!16293 = !{i64 2283724}
!16294 = !DILocation(line: 0, scope: !16288, inlinedAt: !16292)
!16295 = !DILocation(line: 106, column: 33, scope: !16267)
!16296 = !DILocation(line: 105, column: 7, scope: !16263)
!16297 = !DILocation(line: 107, column: 50, scope: !16266)
!16298 = !DILocation(line: 107, column: 48, scope: !16266)
!16299 = !DILocation(line: 0, scope: !16266)
!16300 = !DILocation(line: 109, column: 17, scope: !16266)
!16301 = !DILocation(line: 110, column: 3, scope: !16266)
!16302 = !DILocation(line: 111, column: 31, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16267, file: !2470, line: 110, column: 10)
!16304 = !DILocation(line: 111, column: 37, scope: !16303)
!16305 = !DILocation(line: 111, column: 35, scope: !16303)
!16306 = !DILocation(line: 0, scope: !16267)
!16307 = !DILocation(line: 109, column: 8, scope: !16266)
!16308 = !DILocation(line: 109, column: 15, scope: !16266)
!16309 = !DILocation(line: 114, column: 12, scope: !16310)
!16310 = distinct !DILexicalBlock(scope: !16263, file: !2470, line: 114, column: 3)
!16311 = !DILocation(line: 0, scope: !16263)
!16312 = !DILocation(line: 114, column: 3, scope: !16310)
!16313 = !DILocation(line: 115, column: 24, scope: !16314)
!16314 = distinct !DILexicalBlock(scope: !16315, file: !2470, line: 115, column: 8)
!16315 = distinct !DILexicalBlock(scope: !16316, file: !2470, line: 114, column: 45)
!16316 = distinct !DILexicalBlock(scope: !16310, file: !2470, line: 114, column: 3)
!16317 = !DILocation(line: 115, column: 11, scope: !16314)
!16318 = !DILocation(line: 115, column: 18, scope: !16314)
!16319 = !DILocation(line: 115, column: 8, scope: !16315)
!16320 = !DILocation(line: 116, column: 15, scope: !16321)
!16321 = distinct !DILexicalBlock(scope: !16314, file: !2470, line: 115, column: 32)
!16322 = !DILocation(line: 117, column: 26, scope: !16321)
!16323 = !DILocation(line: 117, column: 37, scope: !16321)
!16324 = !DILocation(line: 117, column: 5, scope: !16321)
!16325 = !DILocation(line: 123, column: 7, scope: !16263)
!16326 = !DILocation(line: 120, column: 15, scope: !16315)
!16327 = !DILocation(line: 114, column: 36, scope: !16316)
!16328 = distinct !{!16328, !16312, !16329}
!16329 = !DILocation(line: 121, column: 3, scope: !16310)
!16330 = !DILocation(line: 124, column: 41, scope: !16331)
!16331 = distinct !DILexicalBlock(scope: !16332, file: !2470, line: 123, column: 18)
!16332 = distinct !DILexicalBlock(scope: !16263, file: !2470, line: 123, column: 7)
!16333 = !DILocation(line: 124, column: 4, scope: !16331)
!16334 = !DILocation(line: 125, column: 3, scope: !16331)
!16335 = !DILocation(line: 127, column: 13, scope: !16270)
!16336 = !DILocation(line: 127, column: 10, scope: !16270)
!16337 = !DILocation(line: 127, column: 7, scope: !16263)
!16338 = !DILocation(line: 137, column: 24, scope: !16269)
!16339 = !DILocation(line: 0, scope: !16269)
!16340 = !DILocation(line: 139, column: 18, scope: !16341)
!16341 = distinct !DILexicalBlock(scope: !16269, file: !2470, line: 139, column: 8)
!16342 = !DILocation(line: 139, column: 23, scope: !16341)
!16343 = !DILocation(line: 141, column: 5, scope: !16344)
!16344 = distinct !DILexicalBlock(scope: !16341, file: !2470, line: 140, column: 48)
!16345 = !DILocation(line: 142, column: 4, scope: !16344)
!16346 = !DILocalVariable(name: "key", arg: 2, scope: !16347, file: !249, line: 190, type: !16257)
!16347 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !16348, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16350)
!16348 = !DISubroutineType(types: !16349)
!16349 = !{null, !16282, !16257}
!16350 = !{!16351, !16346}
!16351 = !DILocalVariable(name: "l", arg: 1, scope: !16347, file: !249, line: 189, type: !16282)
!16352 = !DILocation(line: 0, scope: !16347, inlinedAt: !16353)
!16353 = distinct !DILocation(line: 102, column: 2, scope: !16264)
!16354 = !DILocalVariable(name: "key", arg: 1, scope: !16355, file: !5993, line: 84, type: !32)
!16355 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5993, file: !5993, line: 84, type: !6004, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16356)
!16356 = !{!16354}
!16357 = !DILocation(line: 0, scope: !16355, inlinedAt: !16358)
!16358 = distinct !DILocation(line: 215, column: 2, scope: !16347, inlinedAt: !16353)
!16359 = !DILocation(line: 95, column: 2, scope: !16355, inlinedAt: !16358)
!16360 = !{i64 2284541}
!16361 = !DILocation(line: 148, column: 1, scope: !16244)
!16362 = distinct !DISubprogram(name: "elapsed", scope: !2470, file: !2470, line: 62, type: !16363, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !250)
!16363 = !DISubroutineType(types: !16364)
!16364 = !{!736}
!16365 = !DILocation(line: 64, column: 9, scope: !16362)
!16366 = !DILocation(line: 64, column: 28, scope: !16362)
!16367 = !DILocation(line: 64, column: 35, scope: !16362)
!16368 = !DILocation(line: 64, column: 2, scope: !16362)
!16369 = distinct !DISubprogram(name: "first", scope: !2470, file: !2470, line: 39, type: !16370, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16372)
!16370 = !DISubroutineType(types: !16371)
!16371 = !{!2443}
!16372 = !{!16373}
!16373 = !DILocalVariable(name: "t", scope: !16369, file: !2470, line: 41, type: !16374)
!16374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 32)
!16375 = !DILocation(line: 41, column: 19, scope: !16369)
!16376 = !DILocation(line: 0, scope: !16369)
!16377 = !DILocation(line: 43, column: 9, scope: !16369)
!16378 = !DILocation(line: 43, column: 2, scope: !16369)
!16379 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !233, file: !233, line: 443, type: !16380, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16382)
!16380 = !DISubroutineType(types: !16381)
!16381 = !{null, !16374, !16374}
!16382 = !{!16383, !16384, !16385}
!16383 = !DILocalVariable(name: "successor", arg: 1, scope: !16379, file: !233, line: 443, type: !16374)
!16384 = !DILocalVariable(name: "node", arg: 2, scope: !16379, file: !233, line: 443, type: !16374)
!16385 = !DILocalVariable(name: "prev", scope: !16379, file: !233, line: 445, type: !16386)
!16386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16374)
!16387 = !DILocation(line: 0, scope: !16379)
!16388 = !DILocation(line: 445, column: 39, scope: !16379)
!16389 = !DILocation(line: 447, column: 8, scope: !16379)
!16390 = !DILocation(line: 447, column: 13, scope: !16379)
!16391 = !DILocation(line: 448, column: 8, scope: !16379)
!16392 = !DILocation(line: 448, column: 13, scope: !16379)
!16393 = !DILocation(line: 449, column: 8, scope: !16379)
!16394 = !DILocation(line: 449, column: 13, scope: !16379)
!16395 = !DILocation(line: 450, column: 18, scope: !16379)
!16396 = !DILocation(line: 451, column: 1, scope: !16379)
!16397 = distinct !DISubprogram(name: "next", scope: !2470, file: !2470, line: 46, type: !16398, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16400)
!16398 = !DISubroutineType(types: !16399)
!16399 = !{!2443, !2443}
!16400 = !{!16401, !16402}
!16401 = !DILocalVariable(name: "t", arg: 1, scope: !16397, file: !2470, line: 46, type: !2443)
!16402 = !DILocalVariable(name: "n", scope: !16397, file: !2470, line: 48, type: !16374)
!16403 = !DILocation(line: 0, scope: !16397)
!16404 = !DILocation(line: 48, column: 58, scope: !16397)
!16405 = !DILocation(line: 48, column: 19, scope: !16397)
!16406 = !DILocation(line: 50, column: 9, scope: !16397)
!16407 = !DILocation(line: 50, column: 2, scope: !16397)
!16408 = distinct !DISubprogram(name: "sys_dlist_append", scope: !233, file: !233, line: 404, type: !16409, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16412)
!16409 = !DISubroutineType(types: !16410)
!16410 = !{null, !16411, !16374}
!16411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 32)
!16412 = !{!16413, !16414, !16415}
!16413 = !DILocalVariable(name: "list", arg: 1, scope: !16408, file: !233, line: 404, type: !16411)
!16414 = !DILocalVariable(name: "node", arg: 2, scope: !16408, file: !233, line: 404, type: !16374)
!16415 = !DILocalVariable(name: "tail", scope: !16408, file: !233, line: 406, type: !16386)
!16416 = !DILocation(line: 0, scope: !16408)
!16417 = !DILocation(line: 406, column: 34, scope: !16408)
!16418 = !DILocation(line: 408, column: 8, scope: !16408)
!16419 = !DILocation(line: 408, column: 13, scope: !16408)
!16420 = !DILocation(line: 409, column: 8, scope: !16408)
!16421 = !DILocation(line: 409, column: 13, scope: !16408)
!16422 = !DILocation(line: 411, column: 8, scope: !16408)
!16423 = !DILocation(line: 411, column: 13, scope: !16408)
!16424 = !DILocation(line: 412, column: 13, scope: !16408)
!16425 = !DILocation(line: 413, column: 1, scope: !16408)
!16426 = distinct !DISubprogram(name: "next_timeout", scope: !2470, file: !2470, line: 67, type: !16363, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16427)
!16427 = !{!16428, !16429, !16430}
!16428 = !DILocalVariable(name: "to", scope: !16426, file: !2470, line: 69, type: !2443)
!16429 = !DILocalVariable(name: "ticks_elapsed", scope: !16426, file: !2470, line: 70, type: !736)
!16430 = !DILocalVariable(name: "ret", scope: !16426, file: !2470, line: 71, type: !736)
!16431 = !DILocation(line: 69, column: 24, scope: !16426)
!16432 = !DILocation(line: 0, scope: !16426)
!16433 = !DILocation(line: 70, column: 26, scope: !16426)
!16434 = !DILocation(line: 73, column: 10, scope: !16435)
!16435 = distinct !DILexicalBlock(scope: !16426, file: !2470, line: 73, column: 6)
!16436 = !DILocation(line: 73, column: 19, scope: !16435)
!16437 = !DILocation(line: 74, column: 21, scope: !16435)
!16438 = !DILocation(line: 74, column: 30, scope: !16435)
!16439 = !DILocation(line: 74, column: 28, scope: !16435)
!16440 = !DILocation(line: 74, column: 45, scope: !16435)
!16441 = !DILocation(line: 73, column: 6, scope: !16426)
!16442 = !DILocation(line: 77, column: 9, scope: !16443)
!16443 = distinct !DILexicalBlock(scope: !16435, file: !2470, line: 76, column: 9)
!16444 = !DILocation(line: 0, scope: !16435)
!16445 = !DILocation(line: 81, column: 20, scope: !16446)
!16446 = distinct !DILexicalBlock(scope: !16426, file: !2470, line: 81, column: 6)
!16447 = !DILocation(line: 81, column: 6, scope: !16446)
!16448 = !DILocation(line: 81, column: 32, scope: !16446)
!16449 = !DILocation(line: 85, column: 2, scope: !16426)
!16450 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !233, file: !233, line: 341, type: !16451, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16453)
!16451 = !DISubroutineType(types: !16452)
!16452 = !{!16374, !16411, !16374}
!16453 = !{!16454, !16455}
!16454 = !DILocalVariable(name: "list", arg: 1, scope: !16450, file: !233, line: 341, type: !16411)
!16455 = !DILocalVariable(name: "node", arg: 2, scope: !16450, file: !233, line: 342, type: !16374)
!16456 = !DILocation(line: 0, scope: !16450)
!16457 = !DILocation(line: 344, column: 15, scope: !16450)
!16458 = !DILocation(line: 344, column: 9, scope: !16450)
!16459 = !DILocation(line: 344, column: 26, scope: !16450)
!16460 = !DILocation(line: 344, column: 2, scope: !16450)
!16461 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !233, file: !233, line: 325, type: !16451, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16462)
!16462 = !{!16463, !16464}
!16463 = !DILocalVariable(name: "list", arg: 1, scope: !16461, file: !233, line: 325, type: !16411)
!16464 = !DILocalVariable(name: "node", arg: 2, scope: !16461, file: !233, line: 326, type: !16374)
!16465 = !DILocation(line: 0, scope: !16461)
!16466 = !DILocation(line: 328, column: 24, scope: !16461)
!16467 = !DILocation(line: 328, column: 15, scope: !16461)
!16468 = !DILocation(line: 328, column: 9, scope: !16461)
!16469 = !DILocation(line: 328, column: 45, scope: !16461)
!16470 = !DILocation(line: 328, column: 2, scope: !16461)
!16471 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !233, file: !233, line: 294, type: !16472, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16474)
!16472 = !DISubroutineType(types: !16473)
!16473 = !{!16374, !16411}
!16474 = !{!16475}
!16475 = !DILocalVariable(name: "list", arg: 1, scope: !16471, file: !233, line: 294, type: !16411)
!16476 = !DILocation(line: 0, scope: !16471)
!16477 = !DILocation(line: 296, column: 9, scope: !16471)
!16478 = !DILocation(line: 296, column: 2, scope: !16471)
!16479 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !233, file: !233, line: 266, type: !16480, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16482)
!16480 = !DISubroutineType(types: !16481)
!16481 = !{!136, !16411}
!16482 = !{!16483}
!16483 = !DILocalVariable(name: "list", arg: 1, scope: !16479, file: !233, line: 266, type: !16411)
!16484 = !DILocation(line: 0, scope: !16479)
!16485 = !DILocation(line: 268, column: 15, scope: !16479)
!16486 = !DILocation(line: 268, column: 20, scope: !16479)
!16487 = !DILocation(line: 268, column: 2, scope: !16479)
!16488 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2470, file: !2470, line: 150, type: !16489, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16491)
!16489 = !DISubroutineType(types: !16490)
!16490 = !{!107, !2443}
!16491 = !{!16492, !16493, !16494, !16496}
!16492 = !DILocalVariable(name: "to", arg: 1, scope: !16488, file: !2470, line: 150, type: !2443)
!16493 = !DILocalVariable(name: "ret", scope: !16488, file: !2470, line: 152, type: !107)
!16494 = !DILocalVariable(name: "__i", scope: !16495, file: !2470, line: 154, type: !16257)
!16495 = distinct !DILexicalBlock(scope: !16488, file: !2470, line: 154, column: 2)
!16496 = !DILocalVariable(name: "__key", scope: !16495, file: !2470, line: 154, type: !16257)
!16497 = !DILocation(line: 0, scope: !16488)
!16498 = !DILocation(line: 0, scope: !16495)
!16499 = !DILocation(line: 0, scope: !16279, inlinedAt: !16500)
!16500 = distinct !DILocation(line: 154, column: 2, scope: !16495)
!16501 = !DILocation(line: 55, column: 2, scope: !16288, inlinedAt: !16502)
!16502 = distinct !DILocation(line: 145, column: 10, scope: !16279, inlinedAt: !16500)
!16503 = !DILocation(line: 0, scope: !16288, inlinedAt: !16502)
!16504 = !DILocation(line: 155, column: 7, scope: !16505)
!16505 = distinct !DILexicalBlock(scope: !16506, file: !2470, line: 155, column: 7)
!16506 = distinct !DILexicalBlock(scope: !16507, file: !2470, line: 154, column: 24)
!16507 = distinct !DILexicalBlock(scope: !16495, file: !2470, line: 154, column: 2)
!16508 = !DILocation(line: 155, column: 7, scope: !16506)
!16509 = !DILocation(line: 156, column: 4, scope: !16510)
!16510 = distinct !DILexicalBlock(scope: !16505, file: !2470, line: 155, column: 39)
!16511 = !DILocation(line: 158, column: 3, scope: !16510)
!16512 = !DILocation(line: 0, scope: !16347, inlinedAt: !16513)
!16513 = distinct !DILocation(line: 154, column: 2, scope: !16507)
!16514 = !DILocation(line: 0, scope: !16355, inlinedAt: !16515)
!16515 = distinct !DILocation(line: 215, column: 2, scope: !16347, inlinedAt: !16513)
!16516 = !DILocation(line: 95, column: 2, scope: !16355, inlinedAt: !16515)
!16517 = !DILocation(line: 161, column: 2, scope: !16488)
!16518 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !233, file: !233, line: 225, type: !16519, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16523)
!16519 = !DISubroutineType(types: !16520)
!16520 = !{!136, !16521}
!16521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16522, size: 32)
!16522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2447)
!16523 = !{!16524}
!16524 = !DILocalVariable(name: "node", arg: 1, scope: !16518, file: !233, line: 225, type: !16521)
!16525 = !DILocation(line: 0, scope: !16518)
!16526 = !DILocation(line: 227, column: 15, scope: !16518)
!16527 = !DILocation(line: 227, column: 20, scope: !16518)
!16528 = !DILocation(line: 227, column: 2, scope: !16518)
!16529 = distinct !DISubprogram(name: "remove_timeout", scope: !2470, file: !2470, line: 53, type: !2464, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16530)
!16530 = !{!16531}
!16531 = !DILocalVariable(name: "t", arg: 1, scope: !16529, file: !2470, line: 53, type: !2443)
!16532 = !DILocation(line: 0, scope: !16529)
!16533 = !DILocation(line: 55, column: 6, scope: !16534)
!16534 = distinct !DILexicalBlock(scope: !16529, file: !2470, line: 55, column: 6)
!16535 = !DILocation(line: 55, column: 14, scope: !16534)
!16536 = !DILocation(line: 55, column: 6, scope: !16529)
!16537 = !DILocation(line: 56, column: 25, scope: !16538)
!16538 = distinct !DILexicalBlock(scope: !16534, file: !2470, line: 55, column: 23)
!16539 = !DILocation(line: 56, column: 12, scope: !16538)
!16540 = !DILocation(line: 56, column: 19, scope: !16538)
!16541 = !DILocation(line: 57, column: 2, scope: !16538)
!16542 = !DILocation(line: 59, column: 23, scope: !16529)
!16543 = !DILocation(line: 59, column: 2, scope: !16529)
!16544 = !DILocation(line: 60, column: 1, scope: !16529)
!16545 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !233, file: !233, line: 496, type: !16546, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16548)
!16546 = !DISubroutineType(types: !16547)
!16547 = !{null, !16374}
!16548 = !{!16549, !16550, !16551}
!16549 = !DILocalVariable(name: "node", arg: 1, scope: !16545, file: !233, line: 496, type: !16374)
!16550 = !DILocalVariable(name: "prev", scope: !16545, file: !233, line: 498, type: !16386)
!16551 = !DILocalVariable(name: "next", scope: !16545, file: !233, line: 499, type: !16386)
!16552 = !DILocation(line: 0, scope: !16545)
!16553 = !DILocation(line: 498, column: 34, scope: !16545)
!16554 = !DILocation(line: 499, column: 34, scope: !16545)
!16555 = !DILocation(line: 501, column: 8, scope: !16545)
!16556 = !DILocation(line: 501, column: 13, scope: !16545)
!16557 = !DILocation(line: 502, column: 8, scope: !16545)
!16558 = !DILocation(line: 502, column: 13, scope: !16545)
!16559 = !DILocation(line: 503, column: 2, scope: !16545)
!16560 = !DILocation(line: 504, column: 1, scope: !16545)
!16561 = distinct !DISubprogram(name: "sys_dnode_init", scope: !233, file: !233, line: 211, type: !16546, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16562)
!16562 = !{!16563}
!16563 = !DILocalVariable(name: "node", arg: 1, scope: !16561, file: !233, line: 211, type: !16374)
!16564 = !DILocation(line: 0, scope: !16561)
!16565 = !DILocation(line: 213, column: 8, scope: !16561)
!16566 = !DILocation(line: 213, column: 13, scope: !16561)
!16567 = !DILocation(line: 214, column: 8, scope: !16561)
!16568 = !DILocation(line: 214, column: 13, scope: !16561)
!16569 = !DILocation(line: 215, column: 1, scope: !16561)
!16570 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2470, file: !2470, line: 183, type: !16571, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16575)
!16571 = !DISubroutineType(types: !16572)
!16572 = !{!103, !16573}
!16573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16574, size: 32)
!16574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2444)
!16575 = !{!16576, !16577, !16578, !16580}
!16576 = !DILocalVariable(name: "timeout", arg: 1, scope: !16570, file: !2470, line: 183, type: !16573)
!16577 = !DILocalVariable(name: "ticks", scope: !16570, file: !2470, line: 185, type: !103)
!16578 = !DILocalVariable(name: "__i", scope: !16579, file: !2470, line: 187, type: !16257)
!16579 = distinct !DILexicalBlock(scope: !16570, file: !2470, line: 187, column: 2)
!16580 = !DILocalVariable(name: "__key", scope: !16579, file: !2470, line: 187, type: !16257)
!16581 = !DILocation(line: 0, scope: !16570)
!16582 = !DILocation(line: 0, scope: !16579)
!16583 = !DILocation(line: 0, scope: !16279, inlinedAt: !16584)
!16584 = distinct !DILocation(line: 187, column: 2, scope: !16579)
!16585 = !DILocation(line: 55, column: 2, scope: !16288, inlinedAt: !16586)
!16586 = distinct !DILocation(line: 145, column: 10, scope: !16279, inlinedAt: !16584)
!16587 = !DILocation(line: 0, scope: !16288, inlinedAt: !16586)
!16588 = !DILocation(line: 188, column: 11, scope: !16589)
!16589 = distinct !DILexicalBlock(scope: !16590, file: !2470, line: 187, column: 24)
!16590 = distinct !DILexicalBlock(scope: !16579, file: !2470, line: 187, column: 2)
!16591 = !DILocation(line: 0, scope: !16347, inlinedAt: !16592)
!16592 = distinct !DILocation(line: 187, column: 2, scope: !16590)
!16593 = !DILocation(line: 0, scope: !16355, inlinedAt: !16594)
!16594 = distinct !DILocation(line: 215, column: 2, scope: !16347, inlinedAt: !16592)
!16595 = !DILocation(line: 95, column: 2, scope: !16355, inlinedAt: !16594)
!16596 = !DILocation(line: 191, column: 2, scope: !16570)
!16597 = distinct !DISubprogram(name: "timeout_rem", scope: !2470, file: !2470, line: 165, type: !16571, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16598)
!16598 = !{!16599, !16600, !16601}
!16599 = !DILocalVariable(name: "timeout", arg: 1, scope: !16597, file: !2470, line: 165, type: !16573)
!16600 = !DILocalVariable(name: "ticks", scope: !16597, file: !2470, line: 167, type: !103)
!16601 = !DILocalVariable(name: "t", scope: !16602, file: !2470, line: 173, type: !2443)
!16602 = distinct !DILexicalBlock(scope: !16597, file: !2470, line: 173, column: 2)
!16603 = !DILocation(line: 0, scope: !16597)
!16604 = !DILocation(line: 169, column: 6, scope: !16605)
!16605 = distinct !DILexicalBlock(scope: !16597, file: !2470, line: 169, column: 6)
!16606 = !DILocation(line: 169, column: 6, scope: !16597)
!16607 = !DILocation(line: 173, column: 28, scope: !16602)
!16608 = !DILocation(line: 0, scope: !16602)
!16609 = !DILocation(line: 173, column: 39, scope: !16610)
!16610 = distinct !DILexicalBlock(scope: !16602, file: !2470, line: 173, column: 2)
!16611 = !DILocation(line: 173, column: 2, scope: !16602)
!16612 = !DILocation(line: 174, column: 15, scope: !16613)
!16613 = distinct !DILexicalBlock(scope: !16610, file: !2470, line: 173, column: 61)
!16614 = !DILocation(line: 174, column: 9, scope: !16613)
!16615 = !DILocation(line: 175, column: 15, scope: !16616)
!16616 = distinct !DILexicalBlock(scope: !16613, file: !2470, line: 175, column: 7)
!16617 = !DILocation(line: 175, column: 7, scope: !16613)
!16618 = !DILocation(line: 173, column: 52, scope: !16610)
!16619 = distinct !{!16619, !16611, !16620}
!16620 = !DILocation(line: 178, column: 2, scope: !16602)
!16621 = !DILocation(line: 180, column: 17, scope: !16597)
!16622 = !DILocation(line: 180, column: 15, scope: !16597)
!16623 = !DILocation(line: 180, column: 2, scope: !16597)
!16624 = !DILocation(line: 181, column: 1, scope: !16597)
!16625 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13497, file: !13497, line: 35, type: !16626, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16628)
!16626 = !DISubroutineType(types: !16627)
!16627 = !{!136, !16573}
!16628 = !{!16629}
!16629 = !DILocalVariable(name: "to", arg: 1, scope: !16625, file: !13497, line: 35, type: !16573)
!16630 = !DILocation(line: 0, scope: !16625)
!16631 = !DILocation(line: 37, column: 35, scope: !16625)
!16632 = !DILocation(line: 37, column: 10, scope: !16625)
!16633 = !DILocation(line: 37, column: 9, scope: !16625)
!16634 = !DILocation(line: 37, column: 2, scope: !16625)
!16635 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2470, file: !2470, line: 194, type: !16571, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16636)
!16636 = !{!16637, !16638, !16639, !16641}
!16637 = !DILocalVariable(name: "timeout", arg: 1, scope: !16635, file: !2470, line: 194, type: !16573)
!16638 = !DILocalVariable(name: "ticks", scope: !16635, file: !2470, line: 196, type: !103)
!16639 = !DILocalVariable(name: "__i", scope: !16640, file: !2470, line: 198, type: !16257)
!16640 = distinct !DILexicalBlock(scope: !16635, file: !2470, line: 198, column: 2)
!16641 = !DILocalVariable(name: "__key", scope: !16640, file: !2470, line: 198, type: !16257)
!16642 = !DILocation(line: 0, scope: !16635)
!16643 = !DILocation(line: 0, scope: !16640)
!16644 = !DILocation(line: 0, scope: !16279, inlinedAt: !16645)
!16645 = distinct !DILocation(line: 198, column: 2, scope: !16640)
!16646 = !DILocation(line: 55, column: 2, scope: !16288, inlinedAt: !16647)
!16647 = distinct !DILocation(line: 145, column: 10, scope: !16279, inlinedAt: !16645)
!16648 = !DILocation(line: 0, scope: !16288, inlinedAt: !16647)
!16649 = !DILocation(line: 199, column: 11, scope: !16650)
!16650 = distinct !DILexicalBlock(scope: !16651, file: !2470, line: 198, column: 24)
!16651 = distinct !DILexicalBlock(scope: !16640, file: !2470, line: 198, column: 2)
!16652 = !DILocation(line: 199, column: 23, scope: !16650)
!16653 = !DILocation(line: 0, scope: !16347, inlinedAt: !16654)
!16654 = distinct !DILocation(line: 198, column: 2, scope: !16651)
!16655 = !DILocation(line: 0, scope: !16355, inlinedAt: !16656)
!16656 = distinct !DILocation(line: 215, column: 2, scope: !16347, inlinedAt: !16654)
!16657 = !DILocation(line: 95, column: 2, scope: !16355, inlinedAt: !16656)
!16658 = !DILocation(line: 199, column: 21, scope: !16650)
!16659 = !DILocation(line: 202, column: 2, scope: !16635)
!16660 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2470, file: !2470, line: 205, type: !16363, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16661)
!16661 = !{!16662, !16663, !16665}
!16662 = !DILocalVariable(name: "ret", scope: !16660, file: !2470, line: 207, type: !736)
!16663 = !DILocalVariable(name: "__i", scope: !16664, file: !2470, line: 209, type: !16257)
!16664 = distinct !DILexicalBlock(scope: !16660, file: !2470, line: 209, column: 2)
!16665 = !DILocalVariable(name: "__key", scope: !16664, file: !2470, line: 209, type: !16257)
!16666 = !DILocation(line: 0, scope: !16660)
!16667 = !DILocation(line: 0, scope: !16664)
!16668 = !DILocation(line: 0, scope: !16279, inlinedAt: !16669)
!16669 = distinct !DILocation(line: 209, column: 2, scope: !16664)
!16670 = !DILocation(line: 55, column: 2, scope: !16288, inlinedAt: !16671)
!16671 = distinct !DILocation(line: 145, column: 10, scope: !16279, inlinedAt: !16669)
!16672 = !DILocation(line: 0, scope: !16288, inlinedAt: !16671)
!16673 = !DILocation(line: 210, column: 9, scope: !16674)
!16674 = distinct !DILexicalBlock(scope: !16675, file: !2470, line: 209, column: 24)
!16675 = distinct !DILexicalBlock(scope: !16664, file: !2470, line: 209, column: 2)
!16676 = !DILocation(line: 0, scope: !16347, inlinedAt: !16677)
!16677 = distinct !DILocation(line: 209, column: 2, scope: !16675)
!16678 = !DILocation(line: 0, scope: !16355, inlinedAt: !16679)
!16679 = distinct !DILocation(line: 215, column: 2, scope: !16347, inlinedAt: !16677)
!16680 = !DILocation(line: 95, column: 2, scope: !16355, inlinedAt: !16679)
!16681 = !DILocation(line: 212, column: 2, scope: !16660)
!16682 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2470, file: !2470, line: 215, type: !10527, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16683)
!16683 = !{!16684, !16685, !16686, !16688, !16689, !16692, !16693}
!16684 = !DILocalVariable(name: "ticks", arg: 1, scope: !16682, file: !2470, line: 215, type: !736)
!16685 = !DILocalVariable(name: "is_idle", arg: 2, scope: !16682, file: !2470, line: 215, type: !136)
!16686 = !DILocalVariable(name: "__i", scope: !16687, file: !2470, line: 217, type: !16257)
!16687 = distinct !DILexicalBlock(scope: !16682, file: !2470, line: 217, column: 2)
!16688 = !DILocalVariable(name: "__key", scope: !16687, file: !2470, line: 217, type: !16257)
!16689 = !DILocalVariable(name: "next_to", scope: !16690, file: !2470, line: 218, type: !107)
!16690 = distinct !DILexicalBlock(scope: !16691, file: !2470, line: 217, column: 24)
!16691 = distinct !DILexicalBlock(scope: !16687, file: !2470, line: 217, column: 2)
!16692 = !DILocalVariable(name: "sooner", scope: !16690, file: !2470, line: 219, type: !136)
!16693 = !DILocalVariable(name: "imminent", scope: !16690, file: !2470, line: 221, type: !136)
!16694 = !DILocation(line: 0, scope: !16682)
!16695 = !DILocation(line: 0, scope: !16687)
!16696 = !DILocation(line: 0, scope: !16279, inlinedAt: !16697)
!16697 = distinct !DILocation(line: 217, column: 2, scope: !16687)
!16698 = !DILocation(line: 55, column: 2, scope: !16288, inlinedAt: !16699)
!16699 = distinct !DILocation(line: 145, column: 10, scope: !16279, inlinedAt: !16697)
!16700 = !DILocation(line: 0, scope: !16288, inlinedAt: !16699)
!16701 = !DILocation(line: 218, column: 17, scope: !16690)
!16702 = !DILocation(line: 0, scope: !16690)
!16703 = !DILocation(line: 221, column: 27, scope: !16690)
!16704 = !DILocation(line: 233, column: 17, scope: !16705)
!16705 = distinct !DILexicalBlock(scope: !16690, file: !2470, line: 233, column: 7)
!16706 = !DILocation(line: 234, column: 26, scope: !16707)
!16707 = distinct !DILexicalBlock(scope: !16705, file: !2470, line: 233, column: 56)
!16708 = !DILocation(line: 234, column: 4, scope: !16707)
!16709 = !DILocation(line: 235, column: 3, scope: !16707)
!16710 = !DILocation(line: 0, scope: !16347, inlinedAt: !16711)
!16711 = distinct !DILocation(line: 217, column: 2, scope: !16691)
!16712 = !DILocation(line: 0, scope: !16355, inlinedAt: !16713)
!16713 = distinct !DILocation(line: 215, column: 2, scope: !16347, inlinedAt: !16711)
!16714 = !DILocation(line: 95, column: 2, scope: !16355, inlinedAt: !16713)
!16715 = !DILocation(line: 237, column: 1, scope: !16682)
!16716 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2470, file: !2470, line: 239, type: !16717, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16719)
!16717 = !DISubroutineType(types: !16718)
!16718 = !{null, !736}
!16719 = !{!16720, !16721, !16722, !16724}
!16720 = !DILocalVariable(name: "ticks", arg: 1, scope: !16716, file: !2470, line: 239, type: !736)
!16721 = !DILocalVariable(name: "key", scope: !16716, file: !2470, line: 245, type: !16257)
!16722 = !DILocalVariable(name: "t", scope: !16723, file: !2470, line: 262, type: !2443)
!16723 = distinct !DILexicalBlock(scope: !16716, file: !2470, line: 261, column: 67)
!16724 = !DILocalVariable(name: "dt", scope: !16723, file: !2470, line: 263, type: !107)
!16725 = !DILocation(line: 0, scope: !16716)
!16726 = !DILocation(line: 242, column: 2, scope: !16716)
!16727 = !DILocation(line: 0, scope: !16279, inlinedAt: !16728)
!16728 = distinct !DILocation(line: 245, column: 25, scope: !16716)
!16729 = !DILocation(line: 55, column: 2, scope: !16288, inlinedAt: !16730)
!16730 = distinct !DILocation(line: 145, column: 10, scope: !16279, inlinedAt: !16728)
!16731 = !DILocation(line: 0, scope: !16288, inlinedAt: !16730)
!16732 = !DILocation(line: 261, column: 9, scope: !16716)
!16733 = !DILocation(line: 261, column: 17, scope: !16716)
!16734 = !DILocation(line: 261, column: 25, scope: !16716)
!16735 = !DILocation(line: 261, column: 37, scope: !16716)
!16736 = !DILocation(line: 261, column: 47, scope: !16716)
!16737 = !DILocation(line: 261, column: 44, scope: !16716)
!16738 = !DILocation(line: 261, column: 2, scope: !16716)
!16739 = !DILocation(line: 0, scope: !16723)
!16740 = !DILocation(line: 263, column: 12, scope: !16723)
!16741 = !DILocation(line: 265, column: 16, scope: !16723)
!16742 = !DILocation(line: 265, column: 13, scope: !16723)
!16743 = !DILocation(line: 266, column: 13, scope: !16723)
!16744 = !DILocation(line: 267, column: 3, scope: !16723)
!16745 = !DILocation(line: 0, scope: !16347, inlinedAt: !16746)
!16746 = distinct !DILocation(line: 269, column: 3, scope: !16723)
!16747 = !DILocation(line: 0, scope: !16355, inlinedAt: !16748)
!16748 = distinct !DILocation(line: 215, column: 2, scope: !16347, inlinedAt: !16746)
!16749 = !DILocation(line: 95, column: 2, scope: !16355, inlinedAt: !16748)
!16750 = !DILocation(line: 270, column: 6, scope: !16723)
!16751 = !DILocation(line: 270, column: 3, scope: !16723)
!16752 = !DILocation(line: 0, scope: !16279, inlinedAt: !16753)
!16753 = distinct !DILocation(line: 271, column: 9, scope: !16723)
!16754 = !DILocation(line: 55, column: 2, scope: !16288, inlinedAt: !16755)
!16755 = distinct !DILocation(line: 145, column: 10, scope: !16279, inlinedAt: !16753)
!16756 = !DILocation(line: 0, scope: !16288, inlinedAt: !16755)
!16757 = !DILocation(line: 272, column: 22, scope: !16723)
!16758 = distinct !{!16758, !16738, !16759}
!16759 = !DILocation(line: 273, column: 2, scope: !16716)
!16760 = !DILocation(line: 276, column: 19, scope: !16761)
!16761 = distinct !DILexicalBlock(scope: !16762, file: !2470, line: 275, column: 23)
!16762 = distinct !DILexicalBlock(scope: !16716, file: !2470, line: 275, column: 6)
!16763 = !DILocation(line: 277, column: 2, scope: !16761)
!16764 = !DILocation(line: 279, column: 15, scope: !16716)
!16765 = !DILocation(line: 279, column: 12, scope: !16716)
!16766 = !DILocation(line: 280, column: 21, scope: !16716)
!16767 = !DILocation(line: 282, column: 24, scope: !16716)
!16768 = !DILocation(line: 282, column: 2, scope: !16716)
!16769 = !DILocation(line: 0, scope: !16347, inlinedAt: !16770)
!16770 = distinct !DILocation(line: 284, column: 2, scope: !16716)
!16771 = !DILocation(line: 0, scope: !16355, inlinedAt: !16772)
!16772 = distinct !DILocation(line: 215, column: 2, scope: !16347, inlinedAt: !16770)
!16773 = !DILocation(line: 95, column: 2, scope: !16355, inlinedAt: !16772)
!16774 = !DILocation(line: 285, column: 1, scope: !16716)
!16775 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2470, file: !2470, line: 287, type: !16776, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16778)
!16776 = !DISubroutineType(types: !16777)
!16777 = !{!105}
!16778 = !{!16779, !16780, !16782}
!16779 = !DILocalVariable(name: "t", scope: !16775, file: !2470, line: 289, type: !1506)
!16780 = !DILocalVariable(name: "__i", scope: !16781, file: !2470, line: 291, type: !16257)
!16781 = distinct !DILexicalBlock(scope: !16775, file: !2470, line: 291, column: 2)
!16782 = !DILocalVariable(name: "__key", scope: !16781, file: !2470, line: 291, type: !16257)
!16783 = !DILocation(line: 0, scope: !16775)
!16784 = !DILocation(line: 0, scope: !16781)
!16785 = !DILocation(line: 0, scope: !16279, inlinedAt: !16786)
!16786 = distinct !DILocation(line: 291, column: 2, scope: !16781)
!16787 = !DILocation(line: 55, column: 2, scope: !16288, inlinedAt: !16788)
!16788 = distinct !DILocation(line: 145, column: 10, scope: !16279, inlinedAt: !16786)
!16789 = !DILocation(line: 0, scope: !16288, inlinedAt: !16788)
!16790 = !DILocation(line: 292, column: 7, scope: !16791)
!16791 = distinct !DILexicalBlock(scope: !16792, file: !2470, line: 291, column: 24)
!16792 = distinct !DILexicalBlock(scope: !16781, file: !2470, line: 291, column: 2)
!16793 = !DILocation(line: 292, column: 19, scope: !16791)
!16794 = !DILocation(line: 0, scope: !16347, inlinedAt: !16795)
!16795 = distinct !DILocation(line: 291, column: 2, scope: !16792)
!16796 = !DILocation(line: 0, scope: !16355, inlinedAt: !16797)
!16797 = distinct !DILocation(line: 215, column: 2, scope: !16347, inlinedAt: !16795)
!16798 = !DILocation(line: 95, column: 2, scope: !16355, inlinedAt: !16797)
!16799 = !DILocation(line: 292, column: 17, scope: !16791)
!16800 = !DILocation(line: 294, column: 2, scope: !16775)
!16801 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2470, file: !2470, line: 297, type: !6248, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !250)
!16802 = !DILocation(line: 300, column: 19, scope: !16801)
!16803 = !DILocation(line: 300, column: 9, scope: !16801)
!16804 = !DILocation(line: 300, column: 2, scope: !16801)
!16805 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2470, file: !2470, line: 306, type: !16776, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !250)
!16806 = !DILocation(line: 308, column: 9, scope: !16805)
!16807 = !DILocation(line: 308, column: 2, scope: !16805)
!16808 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2470, file: !2470, line: 319, type: !6258, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16809)
!16809 = !{!16810, !16811, !16812, !16813}
!16810 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16808, file: !2470, line: 319, type: !162)
!16811 = !DILocalVariable(name: "start_cycles", scope: !16808, file: !2470, line: 328, type: !162)
!16812 = !DILocalVariable(name: "cycles_to_wait", scope: !16808, file: !2470, line: 331, type: !162)
!16813 = !DILocalVariable(name: "current_cycles", scope: !16814, file: !2470, line: 338, type: !162)
!16814 = distinct !DILexicalBlock(scope: !16815, file: !2470, line: 337, column: 11)
!16815 = distinct !DILexicalBlock(scope: !16816, file: !2470, line: 337, column: 2)
!16816 = distinct !DILexicalBlock(scope: !16808, file: !2470, line: 337, column: 2)
!16817 = !DILocation(line: 0, scope: !16808)
!16818 = !DILocation(line: 322, column: 19, scope: !16819)
!16819 = distinct !DILexicalBlock(scope: !16808, file: !2470, line: 322, column: 6)
!16820 = !DILocation(line: 322, column: 6, scope: !16808)
!16821 = !DILocation(line: 328, column: 26, scope: !16808)
!16822 = !DILocation(line: 333, column: 43, scope: !16808)
!16823 = !DILocation(line: 337, column: 2, scope: !16808)
!16824 = !DILocation(line: 338, column: 29, scope: !16814)
!16825 = !DILocation(line: 0, scope: !16814)
!16826 = !DILocation(line: 341, column: 23, scope: !16827)
!16827 = distinct !DILexicalBlock(scope: !16814, file: !2470, line: 341, column: 7)
!16828 = !DILocation(line: 341, column: 39, scope: !16827)
!16829 = !DILocation(line: 349, column: 1, scope: !16808)
!16830 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !224, file: !224, line: 1675, type: !6248, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !250)
!16831 = !DILocation(line: 1677, column: 9, scope: !16830)
!16832 = !DILocation(line: 1677, column: 2, scope: !16830)
!16833 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !16834, file: !16834, line: 24, type: !6248, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !250)
!16834 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16835 = !DILocation(line: 26, column: 9, scope: !16833)
!16836 = !DILocation(line: 26, column: 2, scope: !16833)
!16837 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2470, file: !2470, line: 364, type: !16838, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2440, retainedNodes: !16840)
!16838 = !DISubroutineType(types: !16839)
!16839 = !{!1506, !16247}
!16840 = !{!16841, !16842}
!16841 = !DILocalVariable(name: "timeout", arg: 1, scope: !16837, file: !2470, line: 364, type: !16247)
!16842 = !DILocalVariable(name: "dt", scope: !16837, file: !2470, line: 366, type: !103)
!16843 = !DILocation(line: 0, scope: !16837)
!16844 = !DILocation(line: 368, column: 6, scope: !16837)
!16845 = !DILocation(line: 371, column: 10, scope: !16846)
!16846 = distinct !DILexicalBlock(scope: !16847, file: !2470, line: 370, column: 47)
!16847 = distinct !DILexicalBlock(scope: !16848, file: !2470, line: 370, column: 13)
!16848 = distinct !DILexicalBlock(scope: !16837, file: !2470, line: 368, column: 6)
!16849 = !DILocation(line: 371, column: 3, scope: !16846)
!16850 = !DILocation(line: 376, column: 58, scope: !16851)
!16851 = distinct !DILexicalBlock(scope: !16852, file: !2470, line: 376, column: 7)
!16852 = distinct !DILexicalBlock(scope: !16847, file: !2470, line: 372, column: 9)
!16853 = !DILocation(line: 376, column: 7, scope: !16852)
!16854 = !DILocation(line: 376, column: 43, scope: !16851)
!16855 = !DILocation(line: 377, column: 4, scope: !16856)
!16856 = distinct !DILexicalBlock(scope: !16851, file: !2470, line: 376, column: 64)
!16857 = !DILocation(line: 379, column: 10, scope: !16852)
!16858 = !DILocation(line: 379, column: 33, scope: !16852)
!16859 = !DILocation(line: 379, column: 31, scope: !16852)
!16860 = !DILocation(line: 379, column: 3, scope: !16852)
!16861 = !DILocation(line: 0, scope: !16848)
!16862 = !DILocation(line: 381, column: 1, scope: !16837)
!16863 = distinct !DISubprogram(name: "boot_banner", scope: !16864, file: !16864, line: 26, type: !3211, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3197, retainedNodes: !250)
!16864 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16865 = !DILocation(line: 34, column: 2, scope: !16863)
!16866 = !DILocation(line: 36, column: 1, scope: !16863)
!16867 = distinct !DISubprogram(name: "statics_init", scope: !2498, file: !2498, line: 21, type: !2504, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !16868)
!16868 = !{!16869, !16870}
!16869 = !DILocalVariable(name: "unused", arg: 1, scope: !16867, file: !2498, line: 21, type: !2506)
!16870 = !DILocalVariable(name: "h", scope: !16871, file: !2498, line: 24, type: !16872)
!16871 = distinct !DILexicalBlock(scope: !16867, file: !2498, line: 24, column: 2)
!16872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16873, size: 32)
!16873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !16874)
!16874 = !{!16875, !16881, !16887}
!16875 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16873, file: !224, line: 5074, baseType: !16876, size: 96)
!16876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !16877)
!16877 = !{!16878, !16879, !16880}
!16878 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16876, file: !454, line: 57, baseType: !457, size: 32)
!16879 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16876, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!16880 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16876, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!16881 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16873, file: !224, line: 5075, baseType: !16882, size: 64, offset: 96)
!16882 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !16883)
!16883 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !16884)
!16884 = !{!16885}
!16885 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16883, file: !228, line: 232, baseType: !16886, size: 64)
!16886 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2484)
!16887 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16873, file: !224, line: 5076, baseType: !16888, offset: 160)
!16888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!16889 = !DILocation(line: 0, scope: !16867)
!16890 = !DILocation(line: 0, scope: !16871)
!16891 = !DILocation(line: 24, column: 2, scope: !16871)
!16892 = !DILocation(line: 52, column: 2, scope: !16867)
!16893 = !DILocation(line: 49, column: 27, scope: !16894)
!16894 = distinct !DILexicalBlock(scope: !16895, file: !2498, line: 48, column: 3)
!16895 = distinct !DILexicalBlock(scope: !16896, file: !2498, line: 24, column: 36)
!16896 = distinct !DILexicalBlock(scope: !16871, file: !2498, line: 24, column: 2)
!16897 = !DILocation(line: 49, column: 45, scope: !16894)
!16898 = !DILocation(line: 49, column: 4, scope: !16894)
!16899 = !DILocation(line: 24, column: 2, scope: !16896)
!16900 = !DILocation(line: 24, column: 2, scope: !16901)
!16901 = distinct !DILexicalBlock(scope: !16896, file: !2498, line: 24, column: 2)
!16902 = distinct !{!16902, !16891, !16903}
!16903 = !DILocation(line: 51, column: 2, scope: !16871)
!16904 = distinct !DISubprogram(name: "k_heap_init", scope: !2498, file: !2498, line: 13, type: !16905, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !16907)
!16905 = !DISubroutineType(types: !16906)
!16906 = !{null, !16872, !102, !252}
!16907 = !{!16908, !16909, !16910}
!16908 = !DILocalVariable(name: "h", arg: 1, scope: !16904, file: !2498, line: 13, type: !16872)
!16909 = !DILocalVariable(name: "mem", arg: 2, scope: !16904, file: !2498, line: 13, type: !102)
!16910 = !DILocalVariable(name: "bytes", arg: 3, scope: !16904, file: !2498, line: 13, type: !252)
!16911 = !DILocation(line: 0, scope: !16904)
!16912 = !DILocation(line: 15, column: 19, scope: !16904)
!16913 = !DILocation(line: 15, column: 2, scope: !16904)
!16914 = !DILocation(line: 16, column: 20, scope: !16904)
!16915 = !DILocation(line: 16, column: 2, scope: !16904)
!16916 = !DILocation(line: 19, column: 1, scope: !16904)
!16917 = distinct !DISubprogram(name: "z_waitq_init", scope: !13429, file: !13429, line: 47, type: !16918, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !16921)
!16918 = !DISubroutineType(types: !16919)
!16919 = !{null, !16920}
!16920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16882, size: 32)
!16921 = !{!16922}
!16922 = !DILocalVariable(name: "w", arg: 1, scope: !16917, file: !13429, line: 47, type: !16920)
!16923 = !DILocation(line: 0, scope: !16917)
!16924 = !DILocation(line: 49, column: 21, scope: !16917)
!16925 = !DILocation(line: 49, column: 2, scope: !16917)
!16926 = !DILocation(line: 50, column: 1, scope: !16917)
!16927 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !16928, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !16931)
!16928 = !DISubroutineType(types: !16929)
!16929 = !{null, !16930}
!16930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16886, size: 32)
!16931 = !{!16932}
!16932 = !DILocalVariable(name: "list", arg: 1, scope: !16927, file: !233, line: 197, type: !16930)
!16933 = !DILocation(line: 0, scope: !16927)
!16934 = !DILocation(line: 199, column: 8, scope: !16927)
!16935 = !DILocation(line: 199, column: 13, scope: !16927)
!16936 = !DILocation(line: 200, column: 8, scope: !16927)
!16937 = !DILocation(line: 200, column: 13, scope: !16927)
!16938 = !DILocation(line: 201, column: 1, scope: !16927)
!16939 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2498, file: !2498, line: 64, type: !16940, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !16946)
!16940 = !DISubroutineType(types: !16941)
!16941 = !{!102, !16872, !252, !252, !16942}
!16942 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16943)
!16943 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16944)
!16944 = !{!16945}
!16945 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16943, file: !104, line: 66, baseType: !103, size: 64)
!16946 = !{!16947, !16948, !16949, !16950, !16951, !16952, !16953, !16954, !16959}
!16947 = !DILocalVariable(name: "h", arg: 1, scope: !16939, file: !2498, line: 64, type: !16872)
!16948 = !DILocalVariable(name: "align", arg: 2, scope: !16939, file: !2498, line: 64, type: !252)
!16949 = !DILocalVariable(name: "bytes", arg: 3, scope: !16939, file: !2498, line: 64, type: !252)
!16950 = !DILocalVariable(name: "timeout", arg: 4, scope: !16939, file: !2498, line: 65, type: !16942)
!16951 = !DILocalVariable(name: "now", scope: !16939, file: !2498, line: 67, type: !105)
!16952 = !DILocalVariable(name: "end", scope: !16939, file: !2498, line: 67, type: !105)
!16953 = !DILocalVariable(name: "ret", scope: !16939, file: !2498, line: 68, type: !102)
!16954 = !DILocalVariable(name: "key", scope: !16939, file: !2498, line: 72, type: !16955)
!16955 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !16956)
!16956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !16957)
!16957 = !{!16958}
!16958 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16956, file: !249, line: 33, baseType: !107, size: 32)
!16959 = !DILocalVariable(name: "blocked_alloc", scope: !16939, file: !2498, line: 78, type: !136)
!16960 = !DILocation(line: 0, scope: !16939)
!16961 = !DILocation(line: 67, column: 21, scope: !16939)
!16962 = !DILocation(line: 70, column: 8, scope: !16939)
!16963 = !DILocation(line: 72, column: 41, scope: !16939)
!16964 = !DILocalVariable(name: "l", arg: 1, scope: !16965, file: !249, line: 136, type: !16968)
!16965 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !16966, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !16969)
!16966 = !DISubroutineType(types: !16967)
!16967 = !{!16955, !16968}
!16968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16888, size: 32)
!16969 = !{!16964, !16970}
!16970 = !DILocalVariable(name: "k", scope: !16965, file: !249, line: 139, type: !16955)
!16971 = !DILocation(line: 0, scope: !16965, inlinedAt: !16972)
!16972 = distinct !DILocation(line: 72, column: 25, scope: !16939)
!16973 = !DILocation(line: 55, column: 2, scope: !16974, inlinedAt: !16978)
!16974 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5993, file: !5993, line: 42, type: !5994, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !16975)
!16975 = !{!16976, !16977}
!16976 = !DILocalVariable(name: "key", scope: !16974, file: !5993, line: 44, type: !32)
!16977 = !DILocalVariable(name: "tmp", scope: !16974, file: !5993, line: 53, type: !32)
!16978 = distinct !DILocation(line: 145, column: 10, scope: !16965, inlinedAt: !16972)
!16979 = !{i64 2278778}
!16980 = !DILocation(line: 0, scope: !16974, inlinedAt: !16978)
!16981 = !DILocation(line: 81, column: 9, scope: !16982)
!16982 = distinct !DILexicalBlock(scope: !16939, file: !2498, line: 80, column: 22)
!16983 = !DILocation(line: 83, column: 9, scope: !16982)
!16984 = !DILocation(line: 85, column: 12, scope: !16985)
!16985 = distinct !DILexicalBlock(scope: !16982, file: !2498, line: 84, column: 7)
!16986 = !DILocation(line: 85, column: 21, scope: !16985)
!16987 = !DILocation(line: 85, column: 30, scope: !16985)
!16988 = !DILocation(line: 85, column: 37, scope: !16985)
!16989 = !DILocation(line: 84, column: 7, scope: !16982)
!16990 = !DILocation(line: 99, column: 10, scope: !16982)
!16991 = !DILocation(line: 0, scope: !16965, inlinedAt: !16992)
!16992 = distinct !DILocation(line: 101, column: 9, scope: !16982)
!16993 = !DILocation(line: 55, column: 2, scope: !16974, inlinedAt: !16994)
!16994 = distinct !DILocation(line: 145, column: 10, scope: !16965, inlinedAt: !16992)
!16995 = !DILocation(line: 0, scope: !16974, inlinedAt: !16994)
!16996 = distinct !{!16996, !16997, !16998}
!16997 = !DILocation(line: 80, column: 2, scope: !16939)
!16998 = !DILocation(line: 102, column: 2, scope: !16939)
!16999 = !DILocalVariable(name: "key", arg: 2, scope: !17000, file: !249, line: 190, type: !16955)
!17000 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !17001, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !17003)
!17001 = !DISubroutineType(types: !17002)
!17002 = !{null, !16968, !16955}
!17003 = !{!17004, !16999}
!17004 = !DILocalVariable(name: "l", arg: 1, scope: !17000, file: !249, line: 189, type: !16968)
!17005 = !DILocation(line: 0, scope: !17000, inlinedAt: !17006)
!17006 = distinct !DILocation(line: 106, column: 2, scope: !16939)
!17007 = !DILocalVariable(name: "key", arg: 1, scope: !17008, file: !5993, line: 84, type: !32)
!17008 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5993, file: !5993, line: 84, type: !6004, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !17009)
!17009 = !{!17007}
!17010 = !DILocation(line: 0, scope: !17008, inlinedAt: !17011)
!17011 = distinct !DILocation(line: 215, column: 2, scope: !17000, inlinedAt: !17006)
!17012 = !DILocation(line: 95, column: 2, scope: !17008, inlinedAt: !17011)
!17013 = !{i64 2279595}
!17014 = !DILocation(line: 107, column: 2, scope: !16939)
!17015 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2498, file: !2498, line: 110, type: !17016, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !17018)
!17016 = !DISubroutineType(types: !17017)
!17017 = !{!102, !16872, !252, !16942}
!17018 = !{!17019, !17020, !17021, !17022}
!17019 = !DILocalVariable(name: "h", arg: 1, scope: !17015, file: !2498, line: 110, type: !16872)
!17020 = !DILocalVariable(name: "bytes", arg: 2, scope: !17015, file: !2498, line: 110, type: !252)
!17021 = !DILocalVariable(name: "timeout", arg: 3, scope: !17015, file: !2498, line: 110, type: !16942)
!17022 = !DILocalVariable(name: "ret", scope: !17015, file: !2498, line: 114, type: !102)
!17023 = !DILocation(line: 0, scope: !17015)
!17024 = !DILocation(line: 114, column: 14, scope: !17015)
!17025 = !DILocation(line: 118, column: 2, scope: !17015)
!17026 = distinct !DISubprogram(name: "k_heap_free", scope: !2498, file: !2498, line: 121, type: !17027, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2479, retainedNodes: !17029)
!17027 = !DISubroutineType(types: !17028)
!17028 = !{null, !16872, !102}
!17029 = !{!17030, !17031, !17032}
!17030 = !DILocalVariable(name: "h", arg: 1, scope: !17026, file: !2498, line: 121, type: !16872)
!17031 = !DILocalVariable(name: "mem", arg: 2, scope: !17026, file: !2498, line: 121, type: !102)
!17032 = !DILocalVariable(name: "key", scope: !17026, file: !2498, line: 123, type: !16955)
!17033 = !DILocation(line: 0, scope: !17026)
!17034 = !DILocation(line: 0, scope: !16965, inlinedAt: !17035)
!17035 = distinct !DILocation(line: 123, column: 25, scope: !17026)
!17036 = !DILocation(line: 55, column: 2, scope: !16974, inlinedAt: !17037)
!17037 = distinct !DILocation(line: 145, column: 10, scope: !16965, inlinedAt: !17035)
!17038 = !DILocation(line: 0, scope: !16974, inlinedAt: !17037)
!17039 = !DILocation(line: 125, column: 20, scope: !17026)
!17040 = !DILocation(line: 125, column: 2, scope: !17026)
!17041 = !DILocation(line: 128, column: 60, scope: !17042)
!17042 = distinct !DILexicalBlock(scope: !17026, file: !2498, line: 128, column: 6)
!17043 = !DILocation(line: 128, column: 43, scope: !17042)
!17044 = !DILocation(line: 128, column: 68, scope: !17042)
!17045 = !DILocation(line: 128, column: 6, scope: !17026)
!17046 = !DILocation(line: 123, column: 41, scope: !17026)
!17047 = !DILocation(line: 129, column: 3, scope: !17048)
!17048 = distinct !DILexicalBlock(scope: !17042, file: !2498, line: 128, column: 74)
!17049 = !DILocation(line: 130, column: 2, scope: !17048)
!17050 = !DILocation(line: 0, scope: !17000, inlinedAt: !17051)
!17051 = distinct !DILocation(line: 131, column: 3, scope: !17052)
!17052 = distinct !DILexicalBlock(scope: !17042, file: !2498, line: 130, column: 9)
!17053 = !DILocation(line: 0, scope: !17008, inlinedAt: !17054)
!17054 = distinct !DILocation(line: 215, column: 2, scope: !17000, inlinedAt: !17051)
!17055 = !DILocation(line: 95, column: 2, scope: !17008, inlinedAt: !17054)
!17056 = !DILocation(line: 133, column: 1, scope: !17026)
